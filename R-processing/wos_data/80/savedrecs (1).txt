FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Gonçalves, R
   Knorr, M
   Leite, J
AF Goncalves, Ricardo
   Knorr, Matthias
   Leite, Joao
TI Forgetting in Answer Set Programming - A Survey
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE forgetting; answer set programming; logic programs
ID DISJUNCTIVE LOGIC PROGRAMS; KNOWLEDGE REPRESENTATION; VARIABLE
   ELIMINATION; NESTED EXPRESSIONS; SEMANTICS; EQUIVALENCE; PERSISTENCE;
   MODULARITY; COMPLEXITY; INFERENCE
AB Forgetting - or variable elimination - is an operation that allows the removal, from a knowledge base, of middle variables no longer deemed relevant. In recent years, many different approaches for forgetting in Answer Set Programming have been proposed, in the form of specific operators, or classes of such operators, commonly following different principles and obeying different properties. Each such approach was developed to address some particular view on forgetting, aimed at obeying a specific set of properties deemed desirable in such view, but a comprehensive and uniform overview of all the existing operators and properties is missing. In this article, we thoroughly examine existing properties and (classes of) operators for forgetting in Answer Set Programming, drawing a complete picture of the landscape of these classes of forgetting operators, which includes many novel results on relations between properties and operators, including considerations on concrete operators to compute results of forgetting and computational complexity. Our goal is to provide guidance to help users in choosing the operator most adequate for their application requirements.
C1 [Goncalves, Ricardo; Knorr, Matthias; Leite, Joao] Univ Nova Lisboa, NOVA LINCS, Dept Informat, Fac Ciencias & Tecnol, Lisbon, Portugal.
C3 Universidade Nova de Lisboa
RP Gonçalves, R (corresponding author), Univ Nova Lisboa, NOVA LINCS, Dept Informat, Fac Ciencias & Tecnol, Lisbon, Portugal.
EM rjrg@fct.unl.pt; mkn@fct.unl.pt; jleite@fct.unl.pt
RI Knorr, Matthias/J-4220-2012; Gonçalves, Ricardo/M-4645-2013; Leite,
   Joao/HGB-4757-2022; Leite, Joao/C-6162-2009
OI Leite, Joao/0000-0001-6786-7360
FU FCT project FORGET [PTDC/CCI-INF/32219/2017]; FCT project NOVA LINCS
   [UIDB/04516/2020]
FX We thank the anonymous reviewers for their helpful comments. This work
   was partially supported by FCT project FORGET (PTDC/CCI-INF/32219/2017)
   and by FCT project NOVA LINCS (UIDB/04516/2020).
CR Aguado F, 2019, ARTIF INTELL, V275, P575, DOI 10.1016/j.artint.2019.07.005
   Alferes JJ, 2000, J LOGIC PROGRAM, V45, P43, DOI 10.1016/S0743-1066(99)00065-5
   Alferes JJ, 2013, LECT NOTES COMPUT SC, V8148, P36, DOI 10.1007/978-3-642-40564-8_4
   Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   [Anonymous], 2011, IJCAI 2011 P 22 INT
   Baral C, 2005, ARTIF INTELL, V164, P209, DOI 10.1016/j.artint.2005.01.005
   Beierle C, 2019, KUNSTL INTELL, V33, P5, DOI 10.1007/s13218-018-00574-x
   Berthold M, 2019, LECT NOTES ARTIF INT, V11805, P552, DOI 10.1007/978-3-030-30244-3_46
   Berthold M, 2019, THEOR PRACT LOG PROG, V19, P1038, DOI 10.1017/S1471068419000346
   Boole G, 1854, A Treatsie on the Calculus of Finite Differences
   Brass S, 1999, J LOGIC PROGRAM, V40, P1, DOI 10.1016/S0743-1066(98)10030-4
   Buccafurri F, 2002, THEOR PRACT LOG PROG, V2, P293, DOI 10.1017/S1471068402001394
   Cabalar P, 2007, THEOR PRACT LOG PROG, V7, P745, DOI 10.1017/S1471068407003110
   Cabalar P, 2007, LECT NOTES COMPUT SC, V4670, P104, DOI 10.1007/978-3-540-74610-2_8
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Davis RL, 2017, NEURON, V95, P490, DOI 10.1016/j.neuron.2017.05.039
   Delgrande J, 2013, ACM T COMPUT LOG, V14, DOI 10.1145/2480759.2480766
   Delgrande JP, 2017, J ARTIF INTELL RES, V60, P1165, DOI 10.1613/jair.5530
   Delgrande JP, 2015, AAAI CONF ARTIF INTE, P1482
   EBBINGHAUS H., 1885, GEDA CHTNIS UNTERSUC
   Eiter T, 2002, THEOR PRACT LOG PROG, V2, P711, DOI 10.1017/S1471068401001247
   Eiter T, 2003, LECT NOTES COMPUT SC, V2916, P224, DOI 10.1007/978-3-540-24599-5_16
   Eiter T, 2008, ARTIF INTELL, V172, P1644, DOI 10.1016/j.artint.2008.05.002
   Eiter T, 2007, ACM T COMPUT LOG, V8, DOI 10.1145/1243996.1244000
   Eiter T, 2019, KUNSTL INTELL, V33, P9, DOI 10.1007/s13218-018-0564-6
   EUROPEAN PARLIAMENT, 2016, OFFICIAL J EUROPEAN
   FERRARIS P., 2007, P 22 AAAI C ART INT, P409
   Gabbay D, 2011, J ARTIF INTELL RES, V42, P917
   Gebser M, 2018, KUNSTL INTELL, V32, P181, DOI 10.1007/s13218-018-0528-x
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Ghilardi S., 2006, P 10 INT C PRINCIPLE, P187
   Goncalves Ricardo, 2021, Logics in Artificial Intelligence. 17th European Conference, JELIA 2021. Proceedings. Lecture Notes in Artificial Intelligence, Subseries of Lecture Notes in Computer Science (LNAI 12678), P297, DOI 10.1007/978-3-030-75775-5_20
   Gonçalves R, 2019, AAAI CONF ARTIF INTE, P2843
   Gonçalves R, 2017, LECT NOTES ARTIF INT, V10423, P643, DOI 10.1007/978-3-319-65340-2_53
   Gonçalves R, 2017, THEOR PRACT LOG PROG, V17, P837, DOI 10.1017/S1471068417000382
   Gonçalves R, 2016, FIFTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P135
   Gonçalves R, 2016, LECT NOTES COMPUT SC, V10021, P543, DOI 10.1007/978-3-319-48758-8_37
   Gonçalves R, 2016, FRONT ARTIF INTEL AP, V285, P957, DOI 10.3233/978-1-61499-672-9-957
   Heyting A, 1930, SITZBER PREUSS AKAD, P42
   Janhunen T, 2009, J ARTIF INTELL RES, V35, P813, DOI 10.1613/jair.2810
   Ji JM, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P3076
   Kluge A, 2018, FRONT PSYCHOL, V9, DOI 10.3389/fpsyg.2018.00051
   Knorr M, 2014, LECT NOTES ARTIF INT, V8761, P412, DOI 10.1007/978-3-319-11558-0_29
   Konev B, 2013, ARTIF INTELL, V203, P66, DOI 10.1016/j.artint.2013.07.004
   Konev B, 2012, J ARTIF INTELL RES, V44, P633, DOI 10.1613/jair.3552
   Konev B, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P830
   Kontchakov R, 2010, ARTIF INTELL, V174, P1093, DOI 10.1016/j.artint.2010.06.003
   Kowalski W. W, 1980, LNCS, V87, P70, DOI DOI 10.1007/3-540-10009-1_7
   Lang J, 2003, J ARTIF INTELL RES, V18, P391, DOI 10.1613/jair.1113
   Lang J, 2010, ARTIF INTELL, V174, P799, DOI 10.1016/j.artint.2010.04.023
   Lang Jerome., 2002, P EIGHTS INT C PRINC, P239
   Larrosa J, 2005, J ARTIF INTELL RES, V23, P421, DOI 10.1613/jair.1541
   Larrosa J., 2000, Principles and Practice of Constraint Programming - CP 2000. 6th International Conference, CP 2000. Proceedings (Lecture Notes in Computer Science Vol.1894), P291
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lin F., 1994, Proceedings of AAAI Fall Symposium on Relevance, P154
   Lin FZ, 1997, ARTIF INTELL, V92, P131, DOI 10.1016/S0004-3702(96)00044-6
   Lutz C., 2011, IJCAI-11
   McIlraith, 2012, PRINCIPLES KNOWLEDGE
   McIlraith Y, 2012, PRINCIPLES KNOWLEDGE
   Middeldorp A, 1996, THEOR COMPUT SCI, V167, P95, DOI 10.1016/0304-3975(96)00071-0
   Moinard Y, 2007, J LOGIC COMPUT, V17, P955, DOI 10.1093/logcom/exm049
   Pearce D, 1999, J LOGIC PROGRAM, V38, P79, DOI 10.1016/S0743-1066(98)10015-8
   Rajaratnam D, 2014, FOURTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P498
   Richards BA, 2017, NEURON, V94, P1071, DOI 10.1016/j.neuron.2017.04.037
   Rossi Y, 2013, IJCAI 2013 P 23 INT, P1162
   Sakama C, 2003, THEOR PRACT LOG PROG, V3, P671, DOI 10.1017/S1471068403001716
   Saribatur Zeynep G., 2021, Theory and Practice of Logic Programming, V21, P145, DOI 10.1017/S1471068420000095
   Saribatur ZG, 2021, ARTIF INTELL, V300, DOI 10.1016/j.artint.2021.103563
   Saribatur ZG, 2018, SIXTEENTH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P42
   Saribatur ZG, 2019, LECT NOTES ARTIF INT, V11468, P576, DOI 10.1007/978-3-030-19570-0_38
   SHRESTHA P., 2017, MEANING CAUSES FORGE
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Slota Martin, 2012, Logics in Artificial Intelligence. Proceedings of the 13th European Conference (JELIA 2012), P372, DOI 10.1007/978-3-642-33353-8_29
   Slota M, 2014, THEOR PRACT LOG PROG, V14, P869, DOI 10.1017/S1471068413000100
   SZALAS D. M, 2008, 2 ORDER QUANTIFIER E
   Truszczynski M, 2010, ARTIF INTELL, V174, P1285, DOI 10.1016/j.artint.2010.08.004
   Turner H, 2003, THEOR PRACT LOG PROG, V3, P609, DOI 10.1017/S1471068403001819
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   VISSER A, 1996, LECT NOTES LOGIC, V6, P139, DOI DOI 10.1007/978-3-662-21963-8_9
   Wang K., 2005, AAAI, P682
   Wang YS, 2014, J ARTIF INTELL RES, V50, P31, DOI 10.1613/jair.4297
   Wang Z, 2010, ANN MATH ARTIF INTEL, V58, P117, DOI 10.1007/s10472-010-9187-9
   Weber Andreas., 1986, Expert Database Conf, P487
   WOLTRAN R, 2020, ARTIF INTELL, V286, P103
   WONG K.- S, 2009, THESIS U NEW S WALE
   Wong KS, 2008, J ARTIF INTELL RES, V31, P205, DOI 10.1613/jair.2472
   Zhang Y, 2006, ARTIF INTELL, V170, P739, DOI 10.1016/j.artint.2006.02.002
   Zhang Y, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P627
   Zhang Y, 2009, ARTIF INTELL, V173, P1525, DOI 10.1016/j.artint.2009.07.005
   Zhang YQ, 2005, PROCEEDINGS OF THE 8TH JOINT CONFERENCE ON INFORMATION SCIENCES, VOLS 1-3, P707
NR 94
TC 3
Z9 3
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2023
VL 23
IS 1
BP 111
EP 156
AR PII S1471068421000570
DI 10.1017/S1471068421000570
EA DEC 2021
PG 46
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA JO5Y4
UT WOS:000734678700001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Fandinno, J
   Faber, W
   Gelfond, M
AF Fandinno, Jorge
   Faber, Wolfgang
   Gelfond, Michael
TI Thirty years of Epistemic Specifications
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; epistemic logic programs; epistemic
   specifications; epistemic reasoning; autopistemic logic
ID LOGIC; SEMANTICS; NEGATION
AB The language of epistemic specifications and epistemic logic programs extends disjunctive logic programs under the stable model semantics with modal constructs called subjective literals. Using subjective literals, it is possible to check whether a regular literal is true in every or some stable models of the program, those models, in this context also called belief sets, being collected in a set called world view. This allows for representing, within the language, whether some proposition should be understood accordingly to the open or the closed world assumption. Several attempts for capturing the intuitions underlying the language by means of a formal semantics were given, resulting in a multitude of proposals that makes it difficult to understand the current state of the art. In this article, we provide an overview of the inception of the field and the knowledge representation and reasoning tasks it is suitable for. We also provide a detailed analysis of properties of proposed semantics, and an outlook of challenges to be tackled by future research in the area.
C1 [Fandinno, Jorge] Univ Nebraska Omaha, Omaha, NE 68182 USA.
   [Fandinno, Jorge] Univ Potsdam, Potsdam, Germany.
   [Faber, Wolfgang] Alpen Adria Univ Klagenfurt, Klagenfurt, Austria.
   [Gelfond, Michael] Texas Tech Univ, Lubbock, TX 79409 USA.
C3 University of Nebraska System; University of Nebraska Omaha; University
   of Potsdam; University of Klagenfurt; Texas Tech University System;
   Texas Tech University
RP Fandinno, J (corresponding author), Univ Nebraska Omaha, Omaha, NE 68182 USA.; Fandinno, J (corresponding author), Univ Potsdam, Potsdam, Germany.
EM jfandinno@unomaha.edu; wolfgang.faber@aau.at; michael.gelfond@ttu.edu
RI Fandinno, Jorge/JJC-6227-2023; Fandiño, Jorge/F-8705-2016; Faber,
   Wolfgang/H-2316-2012
OI Fandiño, Jorge/0000-0002-3917-8717; Gelfond, Michael/0000-0003-0574-3092
CR Aguado F, 2019, THEOR PRACT LOG PROG, V19, P908, DOI 10.1017/S1471068419000267
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], 1968, ZAPISKI NAUCHNYH SEM
   Balai E., 2014, EPISTEMIC LOGIC PROG
   Bichler M, 2020, THEOR PRACT LOG PROG, V20, P435, DOI 10.1017/S1471068420000022
   Bierman G. M., 2000, Studia Logica, V65, P383, DOI 10.1023/A:1005291931660
   Cabalar P, 2021, THEOR PRACT LOG PROG, V21, P296, DOI 10.1017/S1471068420000058
   Cabalar P, 2020, ARTIF INTELL, V289, DOI 10.1016/j.artint.2020.103382
   Cabalar P, 2020, THEOR PRACT LOG PROG, V20, P834, DOI 10.1017/S1471068420000228
   Cabalar P, 2019, LECT NOTES ARTIF INT, V11481, P134, DOI 10.1007/978-3-030-20528-7_11
   Cabalar P, 2019, LECT NOTES ARTIF INT, V11481, P120, DOI 10.1007/978-3-030-20528-7_10
   del Cerro LF, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2964
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Faber W, 2019, THEOR PRACT LOG PROG, V19, P826, DOI 10.1017/S1471068419000218
   Faber W, 2019, AAAI CONF ARTIF INTE, P2809
   Fandinno J, 2019, THEOR PRACT LOG PROG, V19, P671, DOI 10.1017/S1471068419000127
   Farinas ~ del Cerro L., 1983, LOG ANAL, V26, P219
   Fischer-Servi G., 1977, STUDIA LOGICA, V36, P141, DOI [10.1007/bf02121259, DOI 10.1007/BF02121259]
   Fitting M., 1998, First-order modal logic, V277
   Gelfond M., 1994, Annals of Mathematics and Artificial Intelligence, V12, P89, DOI 10.1007/BF01530762
   GELFOND M, 1993, LOGIC PROGRAMMING AND NON-MONOTONIC REASONING, P397
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   GELFOND M, 1991, PROCEEDINGS : NINTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P386
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Gelfond M, 2011, LECT NOTES ARTIF INT, V6645, P260
   HANKS S, 1987, ARTIF INTELL, V33, P379, DOI 10.1016/0004-3702(87)90043-9
   Hecher M, 2020, AAAI CONF ARTIF INTE, V34, P2830
   Jajodia S., 2012, P IEEE IFIP INT C DE, P1
   KAHL P., 2016, P 9 WORKSH ANSW SET
   KAHL P., 2015, J LOGIC COMPUT
   Kelly, 2018, WVIEWS
   Kelly, 2007, WVIEWS
   KONOLIGE K, 1988, ARTIF INTELL, V35, P343, DOI 10.1016/0004-3702(88)90021-5
   Le T., 2017, EP ASP
   Leclerc A., 2018, TECHNICAL COMMUNICAT
   Leclerc A., 2018, P 11 INT WORKSH ANSW
   Leclerc A., 2016, ELPSOLVE VERSION 1 0
   Leone N, 1997, INFORM COMPUT, V135, P69, DOI 10.1006/inco.1997.2630
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Marek, 1993, ARTIF INTELL
   Marek V. W., 1993, NONMONOTONIC LOGIC C
   MAREK W, 1989, S REPR REAS, P276
   MOORE RC, 1985, ARTIF INTELL, V25, P75, DOI 10.1016/0004-3702(85)90042-6
   Nelson D., 1949, J. Symb. Log., V14, P16
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Niemela Ilkka, 1991, P 12 INT JOINT C ART, P399
   Pearce D., 2006, MA0602 U MAL
   Reiter R., 1978, Logic and data bases, P55
   REITER R, 1992, J LOGIC PROGRAM, V14, P127, DOI 10.1016/0743-1066(92)90049-9
   Schneier B, 1999, DR DOBBS J, V24, P21
   SCHWARZ G, 1991, LOGIC PROGRAMMING AND NON-MONOTONIC REASONING, P260
   SCHWARZ G, 1992, PROCEEDINGS OF THE SEVENTH ANNUAL IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE, P34, DOI 10.1109/LICS.1992.185517
   Shen YD, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5060
   Shen YD, 2016, ARTIF INTELL, V237, P115, DOI 10.1016/j.artint.2016.04.004
   Simpson A. K., 1994, The proof theory and semantics of intuitionistic modal logic
   Smith DE, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P889
   Strasser, 2018, EHEX
   Su EI, 2020, ARTIF INTELL, V282, DOI 10.1016/j.artint.2020.103249
   Son TC, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1269
   Truszczyriski Miroslaw, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P315, DOI 10.1007/978-3-642-20832-4_20
   Turner H, 2002, LECT NOTES ARTIF INT, V2424, P111, DOI 10.1007/3-540-45757-7_10
   Vakarelov D., 1977, Stud. Log., V36, P109
   Watson, 2000, P 8 INT WORKSH NONM
   Zhang Z., 2017, PELPSOLVER
   Zhang Z., 2015, GISOLVER
   Zhang Z., 2014, ESMODELS EPISTEMIC S
NR 67
TC 2
Z9 2
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2022
VL 22
IS 6
BP 1043
EP 1083
AR PII S147106842100048X
DI 10.1017/S147106842100048X
EA NOV 2021
PG 41
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 6M4IE
UT WOS:000792382100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Faber, W
   Morak, M
   Woltran, S
AF Faber, Wolfgang
   Morak, Michael
   Woltran, Stefan
TI On Uniform Equivalence of Epistemic Logic Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Logic Programming; Epistemic Negation; Non-monotonic Reasoning; Uniform
   Equivalence
ID NESTED EXPRESSIONS
AB Epistemic Logic Programs (ELPs) extend Answer Set Programming (ASP) with epistemic negation and have received renewed interest in recent years. This led to the development of new research and efficient solving systems for ELPs. In practice, ELPs are often written in a modular way, where each module interacts with other modules by accepting sets of facts as input, and passing on sets of facts as output. An interesting question then presents itself: under which conditions can such a module be replaced by another one without changing the outcome, for any set of input facts? This problem is known as uniform equivalence, and has been studied extensively for ASP. For ELPs, however, such an investigation is, as of yet, missing. In this paper, we therefore propose a characterization of uniform equivalence that can be directly applied to the language of state-of-the-art ELP solvers. We also investigate the computational complexity of deciding uniform equivalence for two ELPs, and show that it is on the third level of the polynomial hierarchy.
C1 [Faber, Wolfgang; Morak, Michael] Univ Klagenfurt, Klagenfurt, Austria.
   [Woltran, Stefan] TU Wien, Vienna, Austria.
C3 University of Klagenfurt; Technische Universitat Wien
RP Faber, W (corresponding author), Univ Klagenfurt, Klagenfurt, Austria.
EM wolfgang.faber@aau.at; michael.morak@aau.at; woltran@dbai.tuwien.ac.at
RI Morak, Michael/AAI-1392-2020; Faber, Wolfgang/H-2316-2012
OI Morak, Michael/0000-0002-2077-7672; Faber, Wolfgang/0000-0002-0330-5868
FU ST Cooperation [CZ 05/2019]; Austrian Science Fund (FWF) [Y698]
FX Wolfgang Faber and Michael Morak were supported by the S&T Cooperation
   CZ 05/2019 "Identifying Undoable Actions and Events in Automated
   Planning by Means of Answer Set Programming." Stefan Woltran was
   supported by the Austrian Science Fund (FWF) under grant number Y698.
CR Bichler M, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1714
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Cabalar P, 2007, LECT NOTES COMPUT SC, V4670, P104, DOI 10.1007/978-3-540-74610-2_8
   del Cerro LF, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2964
   Eiter T, 2004, LECT NOTES ARTIF INT, V2923, P87
   Eiter T, 2003, LECT NOTES COMPUT SC, V2916, P224, DOI 10.1007/978-3-540-24599-5_16
   Eiter Thomas, 2013, Journal of Applied Non-Classical Logic, V23, P75, DOI 10.1080/11663081.2013.799318
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Eiter T., 2005, P AAAI C ART INT AAA, P695
   FABER W., 2019, P AAAI
   Gebser Martin, 2012, SYNTHESIS LECT ARTIF
   Gelfond M., 1994, Annals of Mathematics and Artificial Intelligence, V12, P89, DOI 10.1007/BF01530762
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1991, AAAI-91. Proceedings Ninth National Conference on Artificial Intelligence, P386
   Gelfond M, 2011, LECT NOTES ARTIF INT, V6645, P260
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Janhunen T, 2009, J ARTIF INTELL RES, V35, P813, DOI 10.1613/jair.2810
   Kahl P. T., 2014, THESIS
   Kahl P. T., 2015, J LOG COMPUT, V25
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lin FZ, 2007, J ARTIF INTELL RES, V28, P431, DOI 10.1613/jair.2131
   Maher M.J., 1988, FDN DEDUCTIVE DATABA, P627
   Oikarinen E, 2007, LECT NOTES COMPUT SC, V4670, P462, DOI 10.1007/978-3-540-74610-2_46
   Pearce D, 2009, THEOR PRACT LOG PROG, V9, P565, DOI 10.1017/S147106840999010X
   SAGIV Y, 1988, FDN DEDUCTIVE DATABA, P659
   Shen YD, 2016, ARTIF INTELL, V237, P115, DOI 10.1016/j.artint.2016.04.004
   Son TC, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1269
   Truszczynski M., 2011, LOGIC PROGRAMMING KN
   Turner H, 2003, THEOR PRACT LOG PROG, V3, P609, DOI 10.1017/S1471068403001819
   Wang KW, 2005, LECT NOTES ARTIF INT, V3662, P279, DOI 10.1007/11546207_22
   WOLTRAN S, 2018, KI, V32, P2
NR 33
TC 1
Z9 1
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 826
EP 840
DI 10.1017/S1471068419000218
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tsilionis, E
   Koutroumanis, N
   Nikitopoulos, P
   Doulkeridis, C
   Artikis, A
AF Tsilionis, Efthimis
   Koutroumanis, Nikolaos
   Nikitopoulos, Panagiotis
   Doulkeridis, Christos
   Artikis, Alexander
TI Online Event Recognition from Moving Vehicles: Application Paper
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Event Pattern Matching; Event Calculus; Data Enrichment
AB We present a system for online composite event recognition over streaming positions of commercial vehicles. Our system employs a data enrichment module, augmenting the mobility data with external information, such as weather data and proximity to points of interest. In addition, the composite event recognition module, based on a highly optimised logic programming implementation of the Event Calculus, consumes the enriched data and identifies activities that are beneficial in fleet management applications. We evaluate our system on large, real-world data from commercial vehicles, and illustrate its efficiency.
C1 [Tsilionis, Efthimis; Artikis, Alexander] Natl Ctr Sci Res Demokritos, Athens, Greece.
   [Koutroumanis, Nikolaos; Nikitopoulos, Panagiotis; Doulkeridis, Christos; Artikis, Alexander] Univ Piraeus, Piraeus, Greece.
C3 National Centre of Scientific Research "Demokritos"; University of
   Piraeus
RP Tsilionis, E (corresponding author), Natl Ctr Sci Res Demokritos, Athens, Greece.
EM eftsilio@iit.demokritos.gr; koutroumanis@unipi.gr; nikp@unipi.gr;
   cdoulk@unipi.gr; a.artikis@unipi.gr
RI Artikis, Alexander/AAC-2692-2020
OI Artikis, Alexander/0000-0001-6899-4599; Tsilionis,
   Efthimis/0000-0002-2189-976X
FU European Union's Horizon 2020 research and innovation programme Track &
   Know "Big Data for Mobility Tracking Knowledge Extraction in Urban
   Areas" [780754]; H2020 - Industrial Leadership [780754] Funding Source:
   H2020 - Industrial Leadership
FX This work was funded by European Union's Horizon 2020 research and
   innovation programme Track & Know "Big Data for Mobility Tracking
   Knowledge Extraction in Urban Areas", under grant agreement No 780754.
CR Alevizos E, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3117809
   Artikis Alexander, 2013, 2013 IEEE International Conference on Big Data, P319, DOI 10.1109/BigData.2013.6691590
   Artikis A, 2015, IEEE T KNOWL DATA EN, V27, P895, DOI 10.1109/TKDE.2014.2356476
   Artikis A, 2010, LOG J IGPL, V18, P31, DOI 10.1093/jigpal/jzp071
   Beck H, 2018, ARTIF INTELL, V261, P16, DOI 10.1016/j.artint.2018.04.003
   Cervesato I, 2000, SEVENTH INTERNATIONAL WORKSHOP ON TEMPORAL REPRESENTATION AND REASONING - TIME 2000, PROCEEDINGS, P47, DOI 10.1109/TIME.2000.856584
   Chittaro L, 1996, COMPUT INTELL, V12, P359, DOI 10.1111/j.1467-8640.1996.tb00267.x
   Cugola G, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187677
   Cugola Gianpaolo., 2010, Proceedings of the Fourth ACM International Conference on Distributed Event-Based Systems - DEBS'10, P50
   Demers A.J., 2007, P CIDR, VVolume 7, P412
   Dong X.L., 2015, SYNTHESIS LECT DATA
   Dousson C, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P324
   Giatrakos N., 2019, VLDB J
   GREZ A, 2019, 22 INT C DAT THEOR I
   Jacox EH, 2007, ACM T DATABASE SYST, V32, DOI 10.1145/1206049.1206056
   Koutroumanis N, 2019, P WORKSH EDBT ICDT 2
   KOWALSKI R, 1986, NEW GENERAT COMPUT, V4, P67, DOI 10.1007/BF03037383
   Liu PY, 2011, CHIN CONTR CONF, P889
   Mei Y, 2009, ACM SIGMOD/PODS 2009 CONFERENCE, P193
   Michelioudakis E, 2019, MACH LEARN, V108, P1085, DOI 10.1007/s10994-019-05794-2
   Miller R, 2002, LECT NOTES ARTIF INT, V2408, P452
   Montali M, 2013, ACM T INTEL SYST TEC, V5, DOI 10.1145/2542182.2542199
   Paschke A., 2006, ABSCS0610167 CORR
   Paschke A, 2008, DECIS SUPPORT SYST, V46, P187, DOI 10.1016/j.dss.2008.06.008
   Patroumpas K, 2017, GEOINFORMATICA, V21, P389, DOI 10.1007/s10707-016-0266-x
   Schultz-Moller N.P., 2009, Debs
   Tsilionis E, 2019, DEBS'19: PROCEEDINGS OF THE 13TH ACM INTERNATIONAL CONFERENCE ON DISTRIBUTED AND EVENT-BASED SYSTEMS, P79, DOI 10.1145/3328905.3329504
   Vlassopoulos C., 2017, P 13 INT S COMM REAS
   Zhang HP, 2014, SIGMOD'14: PROCEEDINGS OF THE 2014 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P217, DOI 10.1145/2588555.2593671
NR 29
TC 4
Z9 4
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 841
EP 856
DI 10.1017/S147106841900022X
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500014
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Arias, J
   Carro, M
AF Arias, Joaquin
   Carro, Manuel
TI Description, Implementation, and Evaluation of a Generic Design for
   Tabled CLP
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE constraints; tabling; prolog; interface; implementation
ID MODEL CHECKING; LOGIC
AB Logic programming with tabling and constraints (TCLP, tabled constraint logic programming) has been shown to be more expressive and in some cases more efficient than LP, CLP, or LP + tabling. Previous designs of TCLP systems did not fully use entailment to determine call/answer subsumption and did not provide a simple and well-documented interface to facilitate the integration of constraint solvers in existing tabling systems. We study the role of projection and entailment in the termination, soundness, and completeness of TCLP systems and present the design and an experimental evaluation of Mod TCLP, a framework that eases the integration of additional constraint solvers. Mod TCLP views constraint solvers as clients of the tabling system, which is generic w.r.t. the solver and only requires a clear interface from the latter. We validate our design by integrating four constraint solvers: a previously existing constraint solver for difference constraints, written in C; the standard versions of Holzbaur's CLP(Q) and CLP(R), written in Prolog; and a new constraint solver for equations over finite lattices. We evaluate the performance of our framework in several benchmarks using the aforementioned solvers. Mod TCLP is developed in Ciao Prolog, a robust, mature, next-generation Prolog system.
C1 [Arias, Joaquin; Carro, Manuel] IMDEA Software Inst, Madrid, Spain.
   Univ Politecn Madrid, Madrid, Spain.
C3 IMDEA Software Institute; Universidad Politecnica de Madrid
RP Arias, J (corresponding author), IMDEA Software Inst, Madrid, Spain.
EM joaquin.arias@imdea.org; manuel.carro@imdea.org
RI Carro, Manuel/AAE-9653-2021
OI Carro, Manuel/0000-0001-5199-3135; Arias, Joaquin/0000-0003-4148-311X
CR [Anonymous], 1988, P FGCS
   [Anonymous], 1989, Constraint Satisfaction in Logic Programming
   CARLSON B, 1994, MIT PS LOG, P339
   Charatonik W, 2002, LECT NOTES COMPUT SC, V2401, P115, DOI 10.1007/3-540-45619-8_9
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   de Guzmán PC, 2012, LECT NOTES COMPUT SC, V7294, P104, DOI 10.1007/978-3-642-29822-6_11
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cui BQ, 2000, LECT NOTES ARTIF INT, V1861, P478
   Dawson S, 1996, ACM SIGPLAN NOTICES, V31, P117, DOI 10.1145/249069.231399
   DIAZ D, 1993, LOGIC PROGRAMM, P774
   FALASCHI M, 1989, THEOR COMPUT SCI, V69, P289, DOI 10.1016/0304-3975(89)90070-4
   Frigioni D., 1998, Algorithms - ESA '98. 6th Annual European Symposium. Proceedings, P320
   Gange G, 2013, THEOR PRACT LOG PROG, V13, P593, DOI 10.1017/S1471068413000379
   Genaim S, 2001, THEOR PRACT LOG PROG, V1, P611, DOI 10.1017/S1471068401001077
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   HOLZBAUR C, 1995, TR9509 OFAI AUSTR RE
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   KANELLAKIS PC, 1995, J COMPUT SYST SCI, V51, P26, DOI 10.1006/jcss.1995.1051
   Knuth D.E., 1991, Artificial Intelligence and Mathematical Theory of Computation, P207
   Marriott K., 1998, PROGRAMMING CONSTRAI
   Ramakrishna YS, 1997, LECT NOTES COMPUT SC, V1254, P143
   Ramakrishnan I.V., 1995, INT C LOGIC PROGRAMM, P697
   Schrijvers T, 2008, THEOR PRACT LOG PROG, V8, P491, DOI 10.1017/S147106840800327X
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Swift T, 2010, LECT NOTES ARTIF INT, V6341, P300, DOI 10.1007/978-3-642-15675-5_26
   TAMAKI H, 1986, LECT NOTES COMPUT SC, V225, P84
   Toman D., 1997, Constraints, V2, P337, DOI 10.1023/A:1009799613661
   Toman D., 1997, LNCS, V1191, P246
   WARREN DS, 1992, COMMUN ACM, V35, P93, DOI 10.1145/131295.131299
   Warren R., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P684
   Zou YY, 2005, LECT NOTES COMPUT SC, V3228, P238
NR 31
TC 3
Z9 3
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2019
VL 19
IS 3
BP 412
EP 448
DI 10.1017/S1471068418000571
PG 37
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA HR0WQ
UT WOS:000462850000002
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Balduccini, M
   Lierler, Y
AF Balduccini, Marcello
   Lierler, Yuliya
TI Constraint answer set solver EZCSP and why integration schemas matter
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Constraint Answer Set Programming; Knowledge Representation;
   Nonmonotonic Reasoning
ID SEMANTICS
AB Researchers in answer set programming and constraint programming have spent significant efforts in the development of hybrid languages and solving algorithms combining the strengths of these traditionally separate fields. These efforts resulted in a new research area: constraint answer set programming. Constraint answer set programming languages and systems proved to be successful at providing declarative, yet efficient solutions to problems involving hybrid reasoning tasks. One of the main contributions of this paper is the first comprehensive account of the constraint answer set language and solver ezcsp, a mainstream representative of this research area that has been used in various successful applications. We also develop an extension of the transition systems proposed by Nieuwenhuis et al. in 2006 to capture Boolean satisfiability solvers. We use this extension to describe the ezcsp algorithm and prove formal claims about it. The design and algorithmic details behind ezcsp clearly demonstrate that the development of the hybrid systems of this kind is challenging. Many questions arise when one faces various design choices in an attempt to maximize system's benefits. One of the key decisions that a developer of a hybrid solver makes is settling on a particular integration schema within its implementation. Thus, another important contribution of this paper is a thorough case study based on ezcsp, focused on the various integration schemas that it provides.
C1 [Balduccini, Marcello] St Josephs Univ, Dept Decis & Syst Sci, Philadelphia, PA 19131 USA.
   [Lierler, Yuliya] Univ Nebraska Omaha, Dept Comp Sci, Omaha, NE USA.
C3 Saint Joseph's University; University of Nebraska System; University of
   Nebraska Omaha
RP Balduccini, M (corresponding author), St Josephs Univ, Dept Decis & Syst Sci, Philadelphia, PA 19131 USA.
EM marcello.balduccini@gmail.com; ylierler@unomaha.edu
CR Anger C, 2006, FRONT ARTIF INTEL AP, V141, P769
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], 2012, PRINCIPLES KNOWLEDGE
   Balduccini Marcello, 2012, Practical Aspects of Declarative Languages. Proceedings 14th International Symposium, PADL 2012, P78, DOI 10.1007/978-3-642-27694-1_7
   Balduccini M., 2009, P ICLP09 WORKSH ANSW
   Balduccini M, 2011, LECT NOTES ARTIF INT, V6645, P284
   Bartholomew M, 2014, LECT NOTES ARTIF INT, V8761, P529, DOI 10.1007/978-3-319-11558-0_37
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Calimeri F, 2007, ANN MATH ARTIF INTEL, V50, P333, DOI 10.1007/s10472-007-9076-z
   Calimeri F, 2011, LECT NOTES ARTIF INT, V6645, P388
   Calimeri F, 2008, LECT NOTES COMPUT SC, V5366, P407, DOI 10.1007/978-3-540-89982-2_37
   Carlsson M, 2012, THEOR PRACT LOG PROG, V12, P35, DOI 10.1017/S1471068411000482
   Cat B. D., 2014, ALP NEWSLETTER FEAUT
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Denecker M., 2009, LECT NOTEARTIFICIA, V5753
   Dovier Agostino, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P259, DOI 10.1007/978-3-642-20832-4_17
   Drescher C., 2011, THEORY PRACT LOG PRO, V10, P465
   Eén N, 2005, LECT NOTES COMPUT SC, V3569, P61, DOI 10.1007/11499107_5
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Eiter T, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P90
   Elkabani I, 2004, LECT NOTES COMPUT SC, V3132, P73, DOI 10.1007/978-3-540-27775-0_6
   Ferraris P, 2005, THEOR PRACT LOG PROG, V5, P45, DOI 10.1017/S1471068403001923
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P3, DOI 10.1007/978-3-540-72200-7_3
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P235, DOI 10.1007/978-3-642-02846-5_22
   Gelfond M., 1998, ELECT T ARTIF INTEL, V3, P195
   Giunchiglia E, 2006, J AUTOM REASONING, V36, P345, DOI 10.1007/s10817-006-9033-2
   Giunchiglia E, 2008, ANN MATH ARTIF INTEL, V53, P169, DOI 10.1007/s10472-009-9113-1
   Gomes CP, 2008, FOUND ARTIF INTELL, P89, DOI 10.1016/S1574-6526(07)03002-7
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   Janhunen T., 2011, WORK NOT 1 WORKSH GR
   Lee J, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P503
   Lierler Y., 2012, LECT NOTES COMPUTER, V7149
   Lierler Y, 2014, ARTIF INTELL, V207, P1, DOI 10.1016/j.artint.2013.10.004
   Lierler Y, 2011, THEOR PRACT LOG PROG, V11, P629, DOI 10.1017/S1471068411000214
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Marriott K, 2008, CONSTRAINTS, V13, P229, DOI 10.1007/s10601-008-9041-4
   Mellarkod VS, 2008, ANN MATH ARTIF INTEL, V53, P251, DOI 10.1007/s10472-009-9116-y
   Niemelä I, 2000, SPRINGER INT SER ENG, V597, P491
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Rossi F, 2008, FOUND ARTIF INTELL, P181, DOI 10.1016/S1574-6526(07)03004-0
   Schulte C, 2008, ACM T PROGR LANG SYS, V31, DOI 10.1145/1452044.1452046
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Susman B., 2016, INT C LOG PROGR ICLP
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Wittocx Johan., 2008, LaSh, P153
   Zhang LT, 2001, ICCAD 2001: IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN, DIGEST OF TECHNICAL PAPERS, P279, DOI 10.1109/ICCAD.2001.968634
   Zhou NF, 2012, THEOR PRACT LOG PROG, V12, P189, DOI 10.1017/S1471068411000445
NR 51
TC 21
Z9 22
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2017
VL 17
IS 4
BP 462
EP 515
DI 10.1017/S1471068417000102
PG 54
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA FC7RG
UT WOS:000407039000004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Balduccini, M
   Magazzeni, D
   Maratea, M
   Leblanc, EC
AF Balduccini, Marcello
   Magazzeni, Daniele
   Maratea, Marco
   Leblanc, Emily C.
TI CASP solutions for planning in hybrid domains
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Answer set programming; planning; hybrid domains
ID ANSWER SET
AB Constraint answer set programming (CASP) is an extension of answer set programming that allows for numerical constraints to be added in the rules. PDDL+ is an extension of the PDDL standard language of automated planning for modeling mixed discrete-continuous dynamics. In this paper, we present CASP solutions for dealing with PDDL+ problems, i.e., encoding from PDDL+ to CASP, and extensions to the algorithm of the ezcsp CASP solver in order to solve CASP programs arising from PDDL+ domains. An experimental analysis, performed on well-known linear and non-linear variants of PDDL+ domains, involving various configurations of the ezcsp solver, other CASP solvers, and PDDL+ planners, shows the viability of our solution.
C1 [Balduccini, Marcello] St Josephs Univ, Dept Decis & Support Serv, 5600 City Ave, Philadelphia, PA 19131 USA.
   [Magazzeni, Daniele] Kings Coll London, Dept Informat, London WC2R 2LS, England.
   [Maratea, Marco] Univ Genoa, Genoa, Italy.
   [Leblanc, Emily C.] Drexel Univ, Dept Comp Sci, 3141 Chestnut Ave, Philadelphia, PA 19104 USA.
C3 Saint Joseph's University; University of London; King's College London;
   University of Genoa; Drexel University
RP Balduccini, M (corresponding author), St Josephs Univ, Dept Decis & Support Serv, 5600 City Ave, Philadelphia, PA 19131 USA.
EM marcello.balduccini@gmail.com; daniele.magazzeni@kcl.ac.uk;
   marco@dibris.unige.it; ecl38@drexel.edu
RI Maratea, Marco/AAR-5779-2020
OI Magazzeni, Daniele/0000-0002-1934-3447
CR Bae K, 2016, HSCC'16: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON HYBRID SYSTEMS: COMPUTATION AND CONTROL, P145, DOI 10.1145/2883817.2883849
   Balduccini M, 2009, P ICL09 WORKSH ANSW
   Balduccini M., 2013, THEOR PRACT LOG PROG, V13, P4
   Balduccini M., 2003, P INT S LOG FORM COM, V102, P9
   Balduccini M, 2006, ANN MATH ARTIF INTEL, V47, P183, DOI 10.1007/s10472-006-9026-1
   Baral C., 2002, P 8 INT C PRINC KNOW, P291
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Baselice S, 2005, LECT NOTES COMPUT SC, V3668, P52, DOI 10.1007/11562931_7
   Bogomolov S., 2015, P INT C AUT PLANN SC, V2015, P42
   Bogomolov S, 2014, AAAI CONF ARTIF INTE, P2228
   Bryce D, 2015, AAAI CONF ARTIF INTE, P3247
   Cashmore M, 2016, P I C AUTOMAT PLAN S, P79
   Cavada R, 2014, LECT NOTES COMPUT SC, V8559, P334, DOI 10.1007/978-3-319-08867-9_22
   Cervesato I, 2000, SEVENTH INTERNATIONAL WORKSHOP ON TEMPORAL REPRESENTATION AND REASONING - TIME 2000, PROCEEDINGS, P47, DOI 10.1109/TIME.2000.856584
   Chintabathina S., 2013, PLANNING SCHEDULING
   Chintabathina Sandeep, 2005, P ASP 05 ANSW SET PR, V142, P303
   Cimatti Alessandro, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P52, DOI 10.1007/978-3-662-46681-0_4
   Cimatti A., 1997, Recent Advances in AI Planning. 4th European Conference on Planning, ECP'97 Proceedings, P130, DOI 10.1007/3-540-63912-8_81
   Coles A, 2012, J ARTIF INTELL RES, V44, P1, DOI 10.1613/jair.3608
   Della Penna G., 2010, P THE 20 INT C AUT P, P222
   Della Penna G., 2009, P 19 INT C AUT PLANN
   Della Penna G, 2012, APPL INTELL, V36, P932, DOI 10.1007/s10489-011-0306-z
   Evans C, 1990, P PAC RIM INT C ART
   Fox M., 2011, P 21 INT C AUT PLANN
   Fox M, 2006, J ARTIF INTELL RES, V27, P235, DOI 10.1613/jair.2044
   Fox M, 2012, J ARTIF INTELL RES, V44, P335, DOI 10.1613/jair.3643
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   GELFOND M, 1993, J LOGIC PROGRAM, V17, P301, DOI 10.1016/0743-1066(93)90035-F
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Henzinger TA, 1996, IEEE S LOG, P278, DOI 10.1109/LICS.1996.561342
   Henzinger TA, 2014, P 17 INT C HYBR SYST, P213, DOI [10.1145/2562059.2562130, DOI 10.1145/2562059.2562130]
   Howey R, 2004, PROC INT C TOOLS ART, P294
   Jaffar J., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P111, DOI 10.1145/41625.41635
   Kambhampati S, 2016, P 25 INT JOINT C ART, P3213
   Karaman S, 2011, IEEE INT CONF ROBOT, P1478
   KAUTZ H, 1992, ECAI 92 - 10TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE : PROCEEDINGS, P359
   Lahijanian M, 2014, IEEE INT CONF ROBOT, P3005, DOI 10.1109/ICRA.2014.6907292
   Li H.X., 2008, P 18 INT C AUT PLANN, P206
   Lierler Y, 2014, ARTIF INTELL, V207, P1, DOI 10.1016/j.artint.2013.10.004
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Liu J., 2014, Proceedings of the International Conference on Hybrid Systems: Computation and Control, P293, DOI DOI 10.1145/2562059.2562137
   Maly M. R., 2013, ACM International Conference on Hybrid Systems: Computation and Control (HSCC), ACM, P353
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Marriott K, 2006, FOUND ARTIF INTELL, P409
   McDermott D. V., 2003, Proceedings, Thirteenth International Conference on Automated Planning and Scheduling, P143
   Mellarkod VS, 2008, ANN MATH ARTIF INTEL, V53, P251, DOI 10.1007/s10472-009-9116-y
   Miller R, 1996, MOR KAUF R, P63
   Nau Dana, AUTOMATED PLANNING T
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Ostrowski M, 2012, THEOR PRACT LOG PROG, V12, P485, DOI 10.1017/S1471068412000142
   PENBERTHY JS, 1994, PROCEEDINGS OF THE TWELFTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P1010
   Piacentini C., 2016, P 26 INT C AUT PLANN
   Plaku Erion, 2013, International Journal on Software Tools for Technology Transfer, V15, P305, DOI 10.1007/s10009-012-0233-2
   Reiter R., 2001, Knowledge in Action: Logical Foundations for Specifying and Implementing Dynamical Systems
   Shanahan M., 1990, ECAI 90. Proceedings of the 9th European Conference on Artificial Intelligence, P598
   Shin JA, 2005, ARTIF INTELL, V166, P194, DOI 10.1016/j.artint.2005.04.001
   Smith BM, 2006, FOUND ARTIF INTELL, P377
   Tabuada P, 2002, LECT NOTES COMPUT SC, V2289, P436
   Vallati M., 2016, P 30 AAAI C ART INT, P3188
   van Hoeve WJ, 2006, FOUND ARTIF INTELL, P169
NR 60
TC 9
Z9 10
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2017
VL 17
IS 4
BP 591
EP 633
DI 10.1017/S1471068417000187
PG 43
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA FC7RG
UT WOS:000407039000007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU De Clercq, S
   Schockaert, S
   De Cock, M
   Nowe, A
AF De Clercq, Sofie
   Schockaert, Steven
   De Cock, Martine
   Nowe, Ann
TI Solving stable matching problems using answer set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 8th International Web Rule Symposium (RuleML) in conjunction with 21st
   European Conference on Artificial Intelligence (ECAI)
CY AUG 18-22, 2014
CL Prague, CZECH REPUBLIC
DE Answer set programming; Logic rules; Stable marriage problem; Optimal
   stable matchings
ID ALGORITHMS; MARRIAGE
AB Since the introduction of the stable marriage problem (SMP) by Gale and Shapley (1962), several variants and extensions have been investigated. While this variety is useful to widen the application potential, each variant requires a new algorithm for finding the stable matchings. To address this issue, we propose an encoding of the SMP using answer set programming (ASP), which can straightforwardly be adapted and extended to suit the needs of specific applications. The use of ASP also means that we can take advantage of highly efficient off-the-shelf solvers. To illustrate the flexibility of our approach, we show how our ASP encoding naturally allows us to select optimal stable matchings, i.e. matchings that are optimal according to some user-specified criterion. To the best of our knowledge, our encoding offers the first exact implementation to find sex-equal, minimum regret, egalitarian or maximum cardinality stable matchings for SMP instances in which individuals may designate unacceptable partners and ties between preferences are allowed.
C1 [De Clercq, Sofie; De Cock, Martine] Univ Ghent, Dept Appl Math Comp Sci & Stat, Ghent, Belgium.
   [Schockaert, Steven] Cardiff Univ, Sch Comp Sci & Informat, Cardiff, S Glam, Wales.
   [De Cock, Martine] UW Tacoma, Ctr Data Sci, Tacoma, WA USA.
   [Nowe, Ann] Vrije Univ Brussel, Computat Modeling Lab, Brussels, Belgium.
C3 Ghent University; Cardiff University; University of Washington;
   University of Washington Tacoma; Vrije Universiteit Brussel
RP De Clercq, S (corresponding author), Univ Ghent, Dept Appl Math Comp Sci & Stat, Ghent, Belgium.
EM SofieR.DeClercq@ugent.be; SchockaertS1@cardiff.ac.uk;
   MDeCock@u.washington.edu; ANowe@vub.ac.be
RI De Cock, Martine/B-8567-2009
OI De Cock, Martine/0000-0001-7917-0771; Nowe, Ann/0000-0001-6346-4564
CR Baral C., 2003, KNOWLEDGE REPRESENTA
   Biró P, 2010, ALGORITHMICA, V58, P5, DOI 10.1007/s00453-009-9315-2
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   De Clercq Sofie, 2013, Theory, Practice, and Applications of Rules on the Web. 7th International Symposium, RuleML 2013. Proceedings. LNCS 8035, P68, DOI 10.1007/978-3-642-39617-5_10
   DUNG PM, 1995, J LOGIC PROGRAM, V22, P151, DOI 10.1016/0743-1066(95)94697-X
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Erdem E, 2003, THEOR PRACT LOG PROG, V3, P499, DOI 10.1017/S1471068403001765
   Faber W, 2008, THEOR PRACT LOG PROG, V8, P545, DOI 10.1017/S1471068408003323
   GALE D, 1985, DISCRETE APPL MATH, V11, P223, DOI 10.1016/0166-218X(85)90074-5
   GALE D, 1962, AM MATH MON, V69, P9, DOI 10.2307/2312726
   GARDENFORS P, 1975, BEHAV SCI, V20, P166, DOI 10.1002/bs.3830200304
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   GUSFIELD D, 1987, SIAM J COMPUT, V16, P111, DOI 10.1137/0216010
   Hong Xu, 2011, IEEE INFOCOM 2011 - IEEE Conference on Computer Communications. Workshops, P631, DOI 10.1109/INFCOMW.2011.5928889
   Irving R., 2003, T2003136 U GLASG DEP
   Irving RW, 2007, INFORM PROCESS LETT, V103, P1, DOI 10.1016/j.ipl.2007.02.003
   IRVING RW, 1987, J ACM, V34, P532, DOI 10.1145/28869.28871
   IRVING RW, 1994, DISCRETE APPL MATH, V48, P261, DOI 10.1016/0166-218X(92)00179-P
   Iwama K, 2008, INTERNATIONAL CONFERENCE ON INFORMATICS EDUCATION AND RESEARCH FOR KNOWLEDGE-CIRCULATING SOCIETY, PROCEEDINGS, P131, DOI 10.1109/ICKS.2008.7
   Iwama K, 2010, ACM T ALGORITHMS, V7, DOI 10.1145/1868237.1868239
   Janhunen T, 2004, FRONT ARTIF INTEL AP, V110, P358
   Knuth D. E., 1976, Mariages stables
   Manlove David F., 2013, SER THEOR COMPUT SCI, V2
   Manlove DF, 2002, THEOR COMPUT SCI, V276, P261, DOI 10.1016/S0304-3975(01)00206-7
   Marek W., 1990, ANN MATH ARTIFICIAL, V1, P241, DOI DOI 10.1007/BF01531080
   McDermid E, 2014, ALGORITHMICA, V68, P545, DOI 10.1007/s00453-012-9672-0
   NG C, 1991, SIAM J DISCRETE MATH, V4, P245, DOI 10.1137/0404023
   Roth AE, 2005, J ECON THEORY, V125, P151, DOI 10.1016/j.jet.2005.04.004
   Roth Alvin E., 1990, Two-Sided Matching: A Study in Game-Theoretic Modeling and Analysis
NR 29
TC 1
Z9 1
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2016
VL 16
SI SI
BP 247
EP 268
DI 10.1017/S147106841600003X
PN 3
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4MP
UT WOS:000386587100002
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Sato, T
   Kubota, K
AF Sato, Taisuke
   Kubota, Keiichi
TI Viterbi training in PRISM
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Viterbi training; PRISM; exclusiveness condition
AB VT (Viterbi training), or hard expectation maximization (EM), is an efficient way of parameter learning for probabilistic models with hidden variables. Given an observation y, it searches for a state of hidden variables x that maximizes p(x, y vertical bar theta) by coordinate ascent on parameters theta and x. In this paper we introduce VT to PRogramming In Statistical Modeling (PRISM), a logic-based probabilistic modeling system for generative models. VT improves PRISM in three ways. First, VT in PRISM converges faster than EM in PRISM due to VT's termination condition. Second, parameters learned by VT often show good prediction performance compared with those learned by EM. We conducted two parsing experiments with probabilistic grammars while learning parameters by a variety of inference methods, i.e. VT, EM, MAP and VB. The result is that VT achieved the best parsing accuracy among them in both experiments. Also, we conducted a similar experiment for classification tasks where a hidden variable is not a prediction target unlike probabilistic grammars. We found that in such a case VT does not necessarily yield superior performance. Third, since VT always deals with a single probability of a single explanation, Viterbi explanation, the exclusiveness condition imposed on PRISM programs is no more required if we learn parameters by VT. Last but not least, we can say that as VT in PRISM is general and applicable to any PRISM program, it largely reduces the need for the user to develop a specific VT algorithm for a specific model. Furthermore, since VT in PRISM can be used just by setting a PRISM flag appropriately, it makes VT easily accessible to (probabilistic) logic programmers.
C1 [Sato, Taisuke; Kubota, Keiichi] Tokyo Inst Technol, Meguro Ku, Tokyo 152, Japan.
C3 Tokyo Institute of Technology
RP Sato, T (corresponding author), Tokyo Inst Technol, Meguro Ku, 2-12-1 Ookayama, Tokyo 152, Japan.
EM sato@mi.cs.titech.ac.jp; kubota@mi.cs.titech.ac.jp
RI sato, taisuke/Q-3245-2016
OI sato, taisuke/0000-0001-9062-0729
FU Grants-in-Aid for Scientific Research [23300054] Funding Source: KAKEN
CR [Anonymous], 1996, 34 ANN M ASS COMP LI
   [Anonymous], 2007, Introduction to Statistical Relational Learning (Adaptive Computation and Machine Learning)
   [Anonymous], INTELLIGENT DATA ANA
   [Anonymous], P IEEE ASRU WORKSH A
   [Anonymous], 2010, P 14 C COMPUTATIONAL
   [Anonymous], TRIT0056 ATR INT TEL
   [Anonymous], 1999, Proceedings of the 37th Annual Meeting of the Association for Computational Linguistics
   Bache K, 2013, UCI machine learning repository
   Brown P. F., 1993, Computational Linguistics, V19, P263
   Castillo G, 2005, LECT NOTES COMPUT SC, V3735, P70
   Cohen SB, 2010, ACL 2010: 48TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P1502
   De Raedt L, 2004, LECT NOTES ARTIF INT, V3244, P19
   De Raedt L, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2468
   Friedman N, 1997, MACH LEARN, V29, P131, DOI 10.1023/A:1007465528199
   Gutmann B, 2008, LECT NOTES ARTIF INT, V5211, P473, DOI 10.1007/978-3-540-87479-9_49
   Gutmann B, 2011, LECT NOTES ARTIF INT, V6911, P581, DOI 10.1007/978-3-642-23780-5_47
   Huynh TuyenN., 2010, International Workshop on Statistical Relational AI (StarAI), P32
   James M., 1967, PROC BERKELEY S MATH, V1, P281, DOI DOI 10.1007/S11665-016-2173-6
   Japkowicz N., 2011, Evaluating Learning Algorithms A Classification Perspective, V211, P224, DOI DOI 10.1017/CBO9780511921803
   Jiang LX, 2009, IEEE T KNOWL DATA EN, V21, P1361, DOI 10.1109/TKDE.2008.234
   Joshi D, 2006, IEEE T IMAGE PROCESS, V15, P1871, DOI 10.1109/TIP.2006.877039
   JUANG BH, 1990, IEEE T ACOUST SPEECH, V38, P1639, DOI 10.1109/29.60082
   Kimmig A, 2008, LECT NOTES COMPUT SC, V5366, P175, DOI 10.1007/978-3-540-89982-2_22
   Lember J, 2007, PROBAB ENG INFORM SC, V21, P451, DOI 10.1017/S0269964807000083
   Lomsadze A, 2005, NUCLEIC ACIDS RES, V33, P6494, DOI 10.1093/nar/gki937
   Manning C.D., 1997, P 5 INT WORKSHOP PAR, P147
   Riguzzi F, 2011, THEOR PRACT LOG PROG, V11, P433, DOI 10.1017/S147106841100010X
   Sato Taisuke, 2008, Probabilistic Inductive Logic Programming. Theory and Applications, P118, DOI 10.1007/978-3-540-78652-8_5
   Sato T, 2001, J ARTIF INTELL RES, V15, P391
   Sato T., 1995, P INT C LOG PROGR, P715
   Sato T, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2605
   Sato T, 2008, ANN MATH ARTIF INTEL, V54, P135, DOI 10.1007/s10472-009-9135-8
   Sato Taisuke., 2011, 22 INT JOINT C ARTIF, P1472
   Singla P., 2005, 20 NATL C ARTIFICIAL, V5, P868
   Su Jiang., 2006, Proc. 23rd Int. Conf. on Mach. Learn, P897
   Van Uytsel DH, 2001, ASRU 2001: IEEE WORKSHOP ON AUTOMATIC SPEECH RECOGNITION AND UNDERSTANDING, CONFERENCE PROCEEDINGS, P210, DOI 10.1109/ASRU.2001.1034624
   Webb GI, 2005, MACH LEARN, V58, P5, DOI 10.1007/s10994-005-4258-6
   Zhou NF, 2008, THEOR PRACT LOG PROG, V8, P81, DOI 10.1017/S147106840700316X
   Zhou NF, 2010, PROC INT C TOOLS ART, P213, DOI 10.1109/ICTAI.2010.103
NR 39
TC 4
Z9 4
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2015
VL 15
SI SI
BP 147
EP 168
DI 10.1017/S1471068413000677
PN 2
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA CB5LO
UT WOS:000349668800002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Marple, K
   Gupta, G
AF Marple, Kyle
   Gupta, Gopal
TI Dynamic Consistency Checking in Goal-Directed Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
DE dynamic consistency checking; answer set programming; goal-directed;
   consistent query answering
ID INCONSISTENT DATABASES
AB In answer set programming, inconsistencies arise when the constraints placed on a program become unsatisfiable. In this paper, we introduce a technique for dynamic consistency checking for our goal-directed method for computing answer sets, under which only those constraints deemed relevant to the partial answer set are tested, allowing inconsistent knowledgebases to be successfully queried. However, the algorithm guarantees that, if a program has at least one consistent answer set, any partial answer set returned will be a subset of some consistent answer set.
C1 [Marple, Kyle; Gupta, Gopal] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
C3 University of Texas System; University of Texas Dallas
RP Marple, K (corresponding author), Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
EM kbm072000@utdallas.edu; gupta@utdallas.edu
CR Arenas M, 2003, THEOR PRACT LOG PROG, V3, P393, DOI 10.1017/S1471068403001832
   Arenas M., 1999, Proceedings of the Eighteenth ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems, P68, DOI 10.1145/303976.303983
   Celle A, 2000, LECT NOTES ARTIF INT, V1861, P942
   Dix J., 1995, Fundamenta Informaticae, V22, P257
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P260, DOI 10.1007/978-3-540-72200-7_23
   Gelfond Michael, 1988, P ICLP 88, P1070
   Giunchiglia E, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P61
   Gupta G, 2007, LECT NOTES COMPUT SC, V4670, P27, DOI 10.1007/978-3-540-74610-2_4
   Lifschitz Vladimir, 1994, LOGIC PROGRAMMING, P23
   Marple K., 2013, LECT NOTES COMPUTER, V7844, P122
   Marple K., 2012, Proceedings of the 14th symposium on Principles and practice of declarative programming, PPDP '12, P35, DOI DOI 10.1145/2370776.2370782
   Salazar E., 2014, GALLIWASP 2 GOAL DIR
NR 12
TC 8
Z9 9
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 415
EP 427
DI 10.1017/S1471068414000118
PN 4-5
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Feier, C
   Heymans, S
AF Feier, Cristina
   Heymans, Stijn
TI Reasoning with Forest Logic Programs and f-hybrid knowledge bases
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Forest Logic Programs; finite model property; f-hybrid knowledge bases;
   open answer sets; integration of rules and ontologies
ID DATALOG; OWL; DL
AB Open Answer Set Programming (OASP) is an undecidable framework for integrating ontologies and rules. Although several decidable fragments of OASP have been identified, few reasoning procedures exist. In this paper, we provide a sound, complete, and terminating algorithm for satisfiability checking w.r.t. Forest Logic Programs (FoLPs), a fragment of OASP where rules have a tree shape and allow for inequality atoms and constants. The algorithm establishes a decidability result for FoLPs. Although believed to be decidable, so far only the decidability for two small subsets of FoLPs, local FoLPs and acyclic FoLPs, has been shown. We further introduce f-hybrid knowledge bases, a hybrid framework where SHOD knowledge bases and FoLPs coexist, and we show that reasoning with such knowledge bases can be reduced to reasoning with FoLPs only. We note that f-hybrid knowledge bases do not require the usual (weakly) DL-safety of the rule component, thus providing a genuine alternative approach to current integration approaches of ontologies and rules.
C1 [Feier, Cristina; Heymans, Stijn] Vienna Univ Technol, Inst Informat Syst, Knowledge Based Syst Grp, A-1040 Vienna, Austria.
C3 Technische Universitat Wien
RP Feier, C (corresponding author), Vienna Univ Technol, Inst Informat Syst, Knowledge Based Syst Grp, Favoritenstr 9-11, A-1040 Vienna, Austria.
EM feier@kr.tuwien.ac.at; heymans@kr.tuwien.ac.at
OI Feier, Cristina/0000-0003-0180-5356
FU Austrian Science Fund (FWF) [P20305, P20840]; European Commission
   [IST-2009-231875]; Austrian Science Fund (FWF) [P20840, P20305] Funding
   Source: Austrian Science Fund (FWF)
FX This work is partially supported by the Austrian Science Fund (FWF)
   under the projects P20305 and P20840, and by the European Commission
   under the project OntoRule (IST-2009-231875).
CR BAADER F, 1995, J AUTOM REASONING, V14, P149, DOI 10.1007/BF00883932
   BAADER F., 2003, DL HDB THEORY IMPLEM
   Bonatti P.A., 2008, Proceedings of the 23rd national conference on Artificial Intelligence - Volume 1, AAAI'08, V1, P418
   Bonatti P.A., 2006, PROC KR 06, P400
   CALI A., 2008, DESCRIPTION LOGICS 0, V353
   Cali A, 2009, ICDT, P14, DOI [10.1145/1514894.1514897, DOI 10.1145/1514894.1514897]
   Calì A, 2010, PROC VLDB ENDOW, V3, P554, DOI 10.14778/1920841.1920912
   Calì A, 2010, LECT NOTES COMPUT SC, V6333, P1, DOI 10.1007/978-3-642-15918-3_1
   Cali A, 2009, PODS'09: PROCEEDINGS OF THE TWENTY-EIGHTH ACM SIGMOD-SIGACT-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P77, DOI 10.1145/1559795.1559809
   Calvanese D, 2007, J AUTOM REASONING, V39, P385, DOI 10.1007/s10817-007-9078-x
   Calvanese D, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P274
   Donini F. M., 2002, ACM Transactions on Computational Logic, V3, P177, DOI 10.1145/505372.505373
   Donini FM, 1998, J INTELL INF SYST, V10, P227, DOI 10.1023/A:1008687430626
   Eiter T, 2008, ARTIF INTELL, V172, P1495, DOI 10.1016/j.artint.2008.04.002
   Eiter T, 2007, ANN MATH ARTIF INTEL, V51, P123, DOI 10.1007/s10472-008-9086-5
   Fages F., 1991, New Generation Computing, V9, P425, DOI 10.1007/BF03037172
   FEIER C., 2008, P ALPSWS 2008 UD IT
   Feier C, 2009, LECT NOTES COMPUT SC, V5554, P338, DOI 10.1007/978-3-642-02121-3_27
   Gebser M, 2006, LECT NOTES COMPUT SC, V4079, P11, DOI 10.1007/11799573_4
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   GRIMM S., 2008, WORKSH ADV REAS WEB
   GRIMM S., 2007, REASONING CIRCUMSCRI
   Grimm S, 2009, LECT NOTES COMPUT SC, V5837, P40, DOI 10.1007/978-3-642-05082-4_4
   Grosof BenjaminN., 2003, P 12 INT WORLD WIDE, P48, DOI DOI 10.1145/775152.775160
   Heymans S, 2006, THESIS VRIJE U BRUSS
   Heymans S, 2008, THEOR PRACT LOG PROG, V8, P411, DOI 10.1017/S1471068407003201
   Heymans S, 2006, ANN MATH ARTIF INTEL, V47, P103, DOI 10.1007/s10472-006-9030-5
   Heymans S, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1380572.1380575
   Heymans Stijn., 2007, Journal of Applied Logic, V5, P144
   Horrocks I., 1999, Logic for Programming and Automated Reasoning. 6th International Conference, LPAR'99. Proceedings (Lecture Notes in Artificial Intelligence Vol.1705), P161, DOI 10.1007/3-540-48242-3_11
   Horrocks I., 2004, Proceedings of the 13th Conference on World Wide Web, May 2004, P723, DOI DOI 10.1145/988672.988771
   Horrocks I., 2001, Proceedings of IJCAI, V1, P199
   Krötzsch M, 2008, FRONT ARTIF INTEL AP, V178, P80, DOI 10.3233/978-1-58603-891-5-80
   Krötzseh M, 2008, LECT NOTES COMPUT SC, V5318, P649, DOI 10.1007/978-3-540-88564-1_41
   Levy A. Y., 1996, ECAI 96. 12th European Conference on Artificial Intelligence, P323
   Lierler Y, 2008, LECT NOTES COMPUT SC, V5366, P377, DOI 10.1007/978-3-540-89982-2_35
   Lin FZ, 2002, ARTIF INTELL, V140, P175, DOI 10.1016/S0004-3702(02)00227-8
   LUKASIEWICZ T., 2004, P KR 2004, P141
   MINSKY M., 1985, READINGS KNOWLEDGE R, P245
   Motik B, 2005, J WEB SEMANT, V3, P41, DOI 10.1016/j.websem.2005.05.001
   Motik B, 2006, LECT NOTES COMPUT SC, V4273, P501
   Motik B, 2010, J ACM, V57, DOI 10.1145/1754399.1754403
   Motik Boris., 2006, Closing semantic web ontologies
   Rosati R, 2005, J WEB SEMANT, V3, P61, DOI 10.1016/j.websem.2005.05.002
   Rosati R, 2008, LECT NOTES COMPUT SC, V5341, P13, DOI 10.1007/978-3-540-88737-9_3
   Rosati Riccardo., 2006, P 10 INT C PRINCIPLE, P68
   Simkus M, 2007, LECT NOTES ARTIF INT, V4790, P514, DOI 10.1007/978-3-540-75560-9_37
   Smith M., 2004, OWL web ontology language: guide
   TOBIES S., 2001, THESIS RWTH AACHEN A
   Vardi MY, 1998, LECT NOTES COMPUT SC, V1443, P628, DOI 10.1007/BFb0055090
NR 50
TC 1
Z9 1
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2013
VL 13
BP 395
EP 463
DI 10.1017/S1471068411000597
PN 3
PG 69
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 135TR
UT WOS:000318311900003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alviano, M
   Faber, W
   Leone, N
   Manna, M
AF Alviano, Mario
   Faber, Wolfgang
   Leone, Nicola
   Manna, Marco
TI Disjunctive datalog with existential quantifiers: Semantics,
   decidability, and complexity issues
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE datalog; non-monotonic reasoning; decidability; complexity
ID CONTAINMENT
AB Datalog is one of the best-known rule-based languages, and extensions of it are used in a wide context of applications. An important Datalog extension is Disjunctive Datalog, which significantly increases the expressivity of the basic language. Disjunctive Datalog is useful in a wide range of applications, ranging from Databases (e. g., Data Integration) to Artificial Intelligence (e. g., diagnosis and planning under incomplete knowledge). However, in recent years an important shortcoming of Datalog-based languages became evident, e. g. in the context of data-integration (consistent query-answering, ontology-based data access) and Semantic Web applications: The language does not permit any generation of and reasoning with unnamed individuals in an obvious way. In general, it is weak in supporting many cases of existential quantification. To overcome this problem, Datalog. has recently been proposed, which extends traditional Datalog by existential quantification in rule heads. In this work, we propose a natural extension of Disjunctive Datalog and Datalog., called Datalog(there exists,v), which allows both disjunctions and existential quantification in rule heads and is therefore an attractive language for knowledge representation and reasoning, especially in domains where ontology-based reasoning is needed. We formally define syntax and semantics of the language Datalog(there exists,v), and provide a notion of instantiation, which we prove to be adequate for Datalog(there exists,v), A main issue of Datalog. and hence also of Datalog(there exists,v) is that decidability is no longer guaranteed for typical reasoning tasks. In order to address this issue, we identify many decidable fragments of the language, which extend, in a natural way, analog classes defined in the non-disjunctive case. Moreover, we carry out an in-depth complexity analysis, deriving interesting results which range from Logarithmic Space to Exponential Time.
C1 [Alviano, Mario; Faber, Wolfgang; Leone, Nicola; Manna, Marco] Univ Calabria, Dept Math, I-87030 Commenda Di Rende, Italy.
C3 University of Calabria
RP Alviano, M (corresponding author), Univ Calabria, Dept Math, I-87030 Commenda Di Rende, Italy.
EM alviano@mat.unical.it; faber@mat.unical.it; leone@mat.unical.it;
   manna@mat.unical.it
RI Alviano, Mario/H-1355-2012; Leone, Nicola/B-1890-2012; Manna,
   Marco/G-8966-2012; Faber, Wolfgang/H-2316-2012
OI Manna, Marco/0000-0003-3323-9328; Leone, Nicola/0000-0002-9742-1252;
   Faber, Wolfgang/0000-0002-0330-5868
FU MIUR under the PON project FRAME; MIUR under the PON project TETRIS
FX The authors want to thank Georg Gottlob, Michael Morak, and Andreas
   Pieris for useful discussions on the problem. The work was partially
   supported by MIUR under the PON projects FRAME and TETRIS.
CR Andreka H, 1998, J PHILOS LOGIC, V27, P217, DOI 10.1023/A:1004275029985
   [Anonymous], 2004, Proceedings of KR
   Bárány V, 2010, IEEE S LOG, P1, DOI 10.1109/LICS.2010.26
   Cali A., 2008, P 11 INT C PRINC KNO, P70
   Cali A., 2011, P 25 AAAI C AI, P1541
   Calì A, 2010, PROC VLDB ENDOW, V3, P554, DOI 10.14778/1920841.1920912
   Calì A, 2010, LECT NOTES COMPUT SC, V6333, P1, DOI 10.1007/978-3-642-15918-3_1
   Cali A, 2009, PODS'09: PROCEEDINGS OF THE TWENTY-EIGHTH ACM SIGMOD-SIGACT-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P77, DOI 10.1145/1559795.1559809
   Calvanese D, 2007, J AUTOM REASONING, V39, P385, DOI 10.1007/s10817-007-9078-x
   Calvanese D, 2009, LECT NOTES COMPUT SC, V5689, P255, DOI 10.1007/978-3-642-03754-2_7
   Chekuri C, 2000, THEOR COMPUT SCI, V239, P211, DOI 10.1016/S0304-3975(99)00220-0
   de Moor O., 2011, LNCS, V6702
   Deutsch A., 2008, PODS, P149
   Eiter T., 2004, ACM Transactions on Computational Logic, V5, P206, DOI 10.1145/976706.976708
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Fagin R, 2005, THEOR COMPUT SCI, V336, P89, DOI 10.1016/j.tcs.2004.10.033
   Ferraris P, 2011, ARTIF INTELL, V175, P236, DOI 10.1016/j.artint.2010.04.011
   Gottlob G., 1999, Proceedings of the Eighteenth ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems, P21, DOI 10.1145/303976.303979
   Grädel E, 1999, J SYMBOLIC LOGIC, V64, P1719, DOI 10.2307/2586808
   Greco S, 2011, PROC VLDB ENDOW, V4, P1158
   JOHNSON DS, 1984, J COMPUT SYST SCI, V28, P167, DOI 10.1016/0022-0000(84)90081-3
   Kollia I, 2011, LECT NOTES COMPUT SC, V6643, P382, DOI 10.1007/978-3-642-21034-1_26
   Leone N., 2005, P 2005 ACM SIGMOD IN, P915
   Leone N., 2012, P 13 KR INT IN PRESS
   Maier D., 1979, ACM Transactions on Database Systems, V4, P455, DOI 10.1145/320107.320115
   Marnette B, 2009, PODS'09: PROCEEDINGS OF THE TWENTY-EIGHTH ACM SIGMOD-SIGACT-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P13, DOI 10.1145/1559795.1559799
   Meier Michael., 2009, PVLDB, V2, P970
   Mugnier Marie-Laure, 2011, Web Reasoning and Rule Systems. Proceedings 5th International Conference (RR 2011), P2, DOI 10.1007/978-3-642-23580-1_2
NR 28
TC 17
Z9 18
U1 0
U2 6
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2012
VL 12
BP 701
EP 718
DI 10.1017/S1471068412000257
PN 4-5
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 000CV
UT WOS:000308365000016
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Nguyen, MT
   De Schreye, D
   Giesl, J
   Schneder-Kamp, P
AF Nguyen, Manh Thang
   De Schreye, Danny
   Giesl, Juergen
   Schneder-Kamp, Peter
TI Polytool: Polynomial interpretations as a basis for termination analysis
   of logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE termination analysis; acceptability; polynomial interpretations
ID PROVING TERMINATION; DEPENDENCY PAIRS; INFERENCE; TOOL
AB Our goal is to study the feasibility of porting termination analysis techniques developed for one programming paradigm to another paradigm. In this paper, we show how to adapt termination analysis techniques based on polynomial interpretations-very well known in the context of term rewrite systems-to obtain new (nontransformational) termination analysis techniques for definite logic programs (LPs). This leads to an approach that can be seen as a direct generalization of the traditional techniques in termination analysis of LPs, where linear norms and level mappings are used. Our extension generalizes these to arbitrary polynomials. We extend a number of standard concepts and results on termination analysis to the context of polynomial interpretations. We also propose a constraint-based approach for automatically generating polynomial interpretations that satisfy the termination conditions. Based on this approach, we implemented a new tool, called Polytool, for automatic termination analysis of LPs.
C1 [Giesl, Juergen] Rhein Westfal TH Aachen, LuFG Informat 11, D-52074 Aachen, Germany.
   [Schneder-Kamp, Peter] Univ So Denmark, Dept Math & Comp Sci, DK-5230 Odense M, Denmark.
   [Nguyen, Manh Thang; De Schreye, Danny] Katholieke Univ Leuven, Dept Comp Sci, B-3001 Heverlee, Belgium.
C3 RWTH Aachen University; University of Southern Denmark; KU Leuven
EM Danny.DeSchreye@cs.kuleuven.be; giesl@informatik.rwth-aachen.de;
   petersk@imada.sdu.dk
RI De Schreye, Daniel/B-1755-2014; Schneider-Kamp, Peter/E-4111-2013
OI Schneider-Kamp, Peter/0000-0003-4000-5570; De Schreye,
   Danny/0000-0002-8423-8598; Giesl, Jurgen/0000-0003-0283-8520
FU GOA Inductive Knowledge Bases; FWO; Deutsche Forschungsgemeinschaft
   (DFG) [GI 274/5-2]
FX Manh Thang Nguyen was partly supported by GOA Inductive Knowledge Bases
   and partly by FWO Termination Analysis: Crossing Paradigm Borders.
   Jurgen Giesl and Peter Schneider-Kamp were supported by the Deutsche
   Forschungsgemeinschaft (DFG) grant GI 274/5-2. We thank John Gallagher
   for making his type inference engine available, Carsten Fuhs for his
   SAT-based Diophantine constraint solver within AProVE, Frederic Mesnard
   and Roberto Bagnara for providing us the cTI system and the Parma
   Polyhedra Library, Michael Codish and Samir Genaim for their TerminWeb
   system. We thank the anonymous reviewers for their valuable comments.
CR [Anonymous], 1990, HDB THEOR COMPUT SCI
   Arts T, 2000, THEOR COMPUT SCI, V236, P133, DOI 10.1016/S0304-3975(99)00207-8
   Borralleras C, 2009, LECT NOTES ARTIF INT, V5663, P294, DOI 10.1007/978-3-642-02959-2_23
   BOSSI A, 1991, LECT NOTES COMPUT SC, V494, P153
   BRAUBURGER J, 1998, LECT NOTES ARTIF INT, V1421, P254
   Bruynooghe M, 2005, LECT NOTES COMPUT SC, V3672, P35
   Bruynooghe M, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1216374.1216378
   Codish M, 1999, J LOGIC PROGRAM, V41, P103, DOI 10.1016/S0743-1066(99)00006-0
   Contejean E, 2005, J AUTOM REASONING, V34, P325, DOI 10.1007/s10817-005-9022-x
   De Schreye D, 2002, LECT NOTES ARTIF INT, V2407, P187
   DECORTE S, 1993, MIT PS LOG, P420
   Decorte S, 1999, ACM T PROGR LANG SYS, V21, P1137, DOI 10.1145/330643.330645
   DERSHOWITZ N, 1997, P WST 97
   DERSHOWITZ N, 1995, LECT NOTES COMPUT SC, V909, P16
   FUHS C, 2008, P RTA 08, P110
   Fuhs C, 2007, LECT NOTES COMPUT SC, V4501, P340
   Gallagher JP, 2005, LECT NOTES COMPUT SC, V3668, P280, DOI 10.1007/11562931_22
   Giesl J, 2007, LECT NOTES ARTIF INT, V4603, P443
   Giesl J, 2006, J AUTOM REASONING, V37, P155, DOI 10.1007/s10817-006-9057-7
   Giesl J, 2006, LECT NOTES ARTIF INT, V4130, P281
   Heaton A, 2000, J LOGIC PROGRAM, V45, P143, DOI 10.1016/S0743-1066(00)00006-6
   Hirokawa N, 2005, INFORM COMPUT, V199, P172, DOI 10.1016/j.ic.2004.10.004
   Hong H, 1998, J AUTOM REASONING, V21, P23, DOI 10.1023/A:1005983105493
   JANSSENS G, 1992, J LOGIC PROGRAM, V13, P205, DOI 10.1016/0743-1066(92)90032-X
   Lankford DallasS., 1979, PROVING TERM REWRITI
   Lindenstrauss N, 2004, LECT NOTES COMPUT SC, V3049, P453
   Lindenstrauss N, 1997, LOGIC PROGRAMM, P63
   LINDENSTRAUSS N, 2000, TERMILOG TERMINATION
   Lloyd J. W., 2012, Foundations of Logic Programming
   Mesnard F, 2005, THEOR PRACT LOG PROG, V5, P243, DOI 10.1017/S1471O68404002017
   Nguyen MT, 2008, LECT NOTES COMPUT SC, V4915, P8, DOI 10.1007/978-3-540-78769-3_2
   Nguyen MT, 2007, LECT NOTES COMPUT SC, V4407, P210, DOI 10.1007/978-3-540-71410-1_15
   Nguyen MT, 2005, LECT NOTES COMPUT SC, V3668, P311, DOI 10.1007/11562931_24
   NGUYEN MT, 2009, THESIS K U LEUVEN BE
   Ohlebusch E, 2000, LECT NOTES COMPUT SC, V1833, P270
   Schneider-Kamp P, 2009, ACM T COMPUT LOG, V11, DOI 10.1145/1614431.1614433
   SCHNEIDERKAMP P, LNCS IN PRESS
   SEREBRENIK A, 2003, THESIS K U LEUVEN BE
   SEREBRENIK A, 2003, P WLPE 03, P60
   STEINBACH J, 1992, LNCS, V652, P18
   TABOCH C, 2002, TERMINWEB SEMANTICS
   VERSCHAETSE K, 1991, LOGIC PROGRAMM, P301
NR 42
TC 6
Z9 6
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2011
VL 11
BP 33
EP 63
DI 10.1017/S1471068410000025
PN 1
PG 31
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 716TO
UT WOS:000286996600002
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU De Koninck, L
AF De Koninck, Leslie
TI Logical Algorithms meets CHR: A meta-complexity result for Constraint
   Handling Rules with rule priorities
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Constraint Handling Rules; Logical Algorithms; Complexity analysis
AB This paper investigates the relationship between the Logical Algorithms (LA) language of Ganzinger and McAllester and Constraint Handling Rules (CHR). We present a translation schema from LA to CHRrp: CHR with rule priorities, and show that the meta-complexity theorem for LA can be applied to a subset of CHRrp via inverse translation. Inspired by the high-level implementation proposal for Logical Algorithm by Ganzinger and McAllester and based on a new scheduling algorithm, we propose an alternative implementation for CHRrp that gives strong complexity guarantees and results in a new and accurate meta-complexity theorem for CHRrp. It is furthermore shown that the translation from Logical Algorithms to CHRrp combined with the new CHRrp implementation satisfies the required complexity for the Logical Algorithms meta-complexity result to hold.
C1 Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
C3 KU Leuven
RP De Koninck, L (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
EM leslie.dekoninck@cs.kuleuven.be
FU Institute for the Promotion of Innovation through Science and Technology
   in Flanders (IWT-Vlaanderen)
FX The author would like to thank Tom Schrijvers, Bart Demoen and the
   anonymous reviewers for their helpful and insightful comments. This
   research is funded by a Ph.D. grant of the Institute for the Promotion
   of Innovation through Science and Technology in Flanders
   (IWT-Vlaanderen).
CR Betz Hariolf, 2007, 4 WORKSH CONSTR HAND, P33
   Christiansen H, 2005, THEOR PRACT LOG PROG, V5, P467, DOI 10.1017/S1471068405002395
   CLAVEL M, 1999, LNCS, V1631, P240
   De Koninck L, 2008, LECT NOTES COMPUT SC, V4989, P32
   De Koninck L, 2007, LECT NOTES COMPUT SC, V4670, P209
   DEKONINCK L, 2007, 9 INT C PRINC PRACT, P25
   DEKONINCK L, 2007, 505 CW K U LEUV DEP
   Duck GJ, 2004, LECT NOTES COMPUT SC, V3132, P90, DOI 10.1007/978-3-540-27775-0_7
   Duck GJ, 2007, LECT NOTES COMPUT SC, V4670, P224, DOI 10.1007/978-3-540-74610-2_16
   Duck GJ, 2006, LECT NOTES COMPUT SC, V4079, P117, DOI 10.1007/11799573_11
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   FREDMAN ML, 1987, J ACM, V34, P596, DOI 10.1145/28869.28874
   FRIEDMANHILL E, 2007, JESS 7 0P2 RULE ENGI
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Fruhwirth T., 2000, New Trends in Constraints. Joint ERCIM/Compulog Net Workshop. Selected Papers (Lecture Notes in Artificial Intelligence Vol. 1865), P298
   FRUHWIRTH T, 2002, ELECT NOTES THEORETI, V59
   FRUHWIRTH T, 2002, 8 INT C PRINC KNOWL, P547
   Ganzinger H, 2002, LECT NOTES COMPUT SC, V2401, P209, DOI 10.1007/3-540-45619-8_15
   HOLZBAUR C, 1998, TR9801 OST FORSCH AR
   McAllester D, 1999, LECT NOTES COMPUT SC, V1694, P312
   Miranker D. P., 1990, 8 NAT C ART INT AAAI, P685
   PILOZZI P, 2007, 9 INT WORKSH TERM, P30
   Pilozzi P, 2008, LECT NOTES COMPUT SC, V5366, P501, DOI 10.1007/978-3-540-89982-2_43
   PROCTOR M, 2007, DROOLS DOCUMENTATION
   SCHRIJVERS T, 2005, THESIS K U LEUVEN LE
   SCHRIJVERS T, 2006, THEOR PRACT LOG PROG, V6, P1
   Schrijvers Tom., 2004, First Workshop on Constraint Handling Rules: Selected Contributions, P1
   SNEYERS J, 2008, COMPUTATIONAL UNPUB
   SNEYERS J, 2006, 20 WORKSH LOG PROGR, P182
   SNEYERS J, 2008, THESIS K U LEUVEN LE
   SNEYERS J, 2005, 2 WORKSH CONSTR HAND, V421, P3
   Sneyers J, 2006, LECT NOTES COMPUT SC, V4079, P72, DOI 10.1007/11799573_8
   TACCHIELLA P, 2007, 9 INT ACM SIGPLAN C, P179
   VANWEERT P, 2006, 3 WORKSH CHR, V452, P125
   VOETS D, 2007, 4 WORKSH CONSTR HAND, P77
   [No title captured]
NR 36
TC 2
Z9 2
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2009
VL 9
BP 165
EP 212
DI 10.1017/S1471068409003664
PN 2
PG 48
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 429DK
UT WOS:000264900800002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhou, NF
AF Zhou, Neng-Fa
TI Programming finite-domain constraint propagators in action rules
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE constraint programming; constraint propagation; action rules
ID HANDLING RULES; PROLOG
AB In this paper, we propose a new language, called AR (Action Rules), and describe how various propagators for finite-domain constraints can be implemented in it. An action rule specifies a pattern for agents, an action that the agents can carry out, and an event pattern for events that can activate the agents. AR combines the goal-oriented execution model of logic programming with the event-driven execution model. This hybrid execution model facilitates programming constraint propagators. A propagator for a constraint is an agent that maintains the consistency of the constraint and is activated by the updates of the domain variables in the constraint. AR has a much stronger descriptive power than indexicals, the language widely used in the current finite-domain constraint systems, and is flexible for implementing not only interval-consistency but also arc-consistency algorithms. As examples, we present a weak arc-consistency propagator for the all-distinct constraint and a hybrid algorithm for n-ary linear equality constraints. B-Prolog has been extended to accommodate action rules. Benchmarking shows that B-Prolog as a CLP(FD) system significantly outperforms other CLP(FD) systems.
C1 CUNY Brooklyn Coll, Dept Comp & Informat Sci, Brooklyn, NY 11210 USA.
   CUNY, Grad Ctr, New York, NY USA.
C3 City University of New York (CUNY) System; Brooklyn College (CUNY); City
   University of New York (CUNY) System
RP Zhou, NF (corresponding author), CUNY Brooklyn Coll, Dept Comp & Informat Sci, Brooklyn, NY 11210 USA.
EM zhou@sci.brooklyn.cuny.edu
CR AGGOUN A, 1991, ICLP 91 P 8 INT C LO, P775
   [Anonymous], ENERGY2020
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 1993, Foundations of Constraint Satisfaction
   Codognet P, 1996, J LOGIC PROGRAM, V27, P185, DOI 10.1016/0743-1066(95)00121-2
   COLMERAUER A, 1984, P INT C 5 GEN COMP S, P85
   Dechter R., 2003, Constraint Processing
   DIAZ D, 2001, J FUNCTIONAL LOGIC P, P1
   DINCBAS M, 1990, J LOGIC PROGRAM, V8, P75, DOI 10.1016/0743-1066(90)90052-7
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Harvey W, 2003, CONSTRAINTS, V8, P173, DOI 10.1023/A:1022323717928
   HENTENRYCK PV, 1989, CONSTRAINT STAISFACT
   HOLZBAUR C, 1992, LECT NOTES COMPUT SC, V631, P260
   Holzbaur C, 1999, LECT NOTES COMPUT SC, V1702, P117
   HOLZBAUR C, 2004, IN PRESS THEORY PRAC
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   KUMAR V, 1992, AI MAG, V13, P32
   Marriott K., 1998, PROGRAMMING CONSTRAI
   MEIER M, 1994, IMPLEMENTATIONS LOGI
   Puget J.-F., 1995, INT LOGIC PROGRAMMIN, P513
   Puget JF, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P359
   REGIN JC, 1994, PROCEEDINGS OF THE TWELFTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P362
   SCHULTE C, 2002, LECT NOTES COMPUTER, V2302
   Sidebottom G, 1996, J AUTOM REASONING, V17, P371, DOI 10.1007/BF00283135
   Van Hentenryck Pascal., 1992, Constraint Processing in cc(FD)
   Wallace M, 2004, CONSTRAINTS, V9, P5, DOI 10.1023/B:CONS.0000006181.40558.37
   Warren D.H.D., 1983, An abstract prolog instruction set
   ZHOU N, 2002, INTELLIGENT INF PROC, P249
   ZHOU N.-F., 1996, P JOINT INT C S LOG, P97
   Zhou NF, 1996, ACM T PROGR LANG SYS, V18, P752, DOI 10.1145/236114.236120
   ZHOU NF, 2003, TR2003014 CUNY COMP
   ZHOU NF, 1998, P JOINT INT C S LOG, P70
   [No title captured]
   [No title captured]
NR 34
TC 13
Z9 14
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2006
VL 6
BP 483
EP 507
DI 10.1017/S1471068405002590
PN 5
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 077SV
UT WOS:000240051400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Piazza, C
   Policriti, A
AF Piazza, C
   Policriti, A
TI Ackermann encoding, bisimulations and OBDDs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 2nd International Workshop on Verification and Computational Logic (VCL
   2001)
CY SEP 04, 2001
CL Florence, ITALY
DE bisimulation; set theory; Ackermann encoding; ordered binary decision
   diagrams
ID REPRESENTATION
AB We propose an alternative way to represent graphs via OBDDs based on the observation that a partition of the graph nodes allows sharing among the employed OBDDs. In the second part of the paper we present a method to compute at the same time the quotient w.r.t. the maximum bisimulation and the OBDD representation of a given graph. The proposed computation is based on an OBDD-rewriting of the notion of Ackermann encoding of hereditarily finite sets into natural numbers.
C1 Univ Ca Foscari Venezia, Dipartimento Informat, I-30172 Venice, VE, Italy.
   Univ Udine, Dipartimento Matemat & Informat, I-33100 Udine, Italy.
C3 Universita Ca Foscari Venezia; University of Udine
RP Univ Ca Foscari Venezia, Dipartimento Informat, Via Torino,155, I-30172 Venice, VE, Italy.
EM piazza@dsi.unive.it; policriti@dimi.uniud.it
RI PIAZZA, Carla/L-2960-2015
OI PIAZZA, Carla/0000-0002-2072-1628; Policriti,
   Alberto/0000-0001-8502-5896
CR Ackermann W, 1937, MATH ANN, V114, P305, DOI 10.1007/BF01594179
   ACZEL P, 1988, LECT NOTES CTR STUDY, V14
   AKERS SB, 1978, IEEE T COMPUT, V27, P509, DOI 10.1109/TC.1978.1675141
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 1988, P IEEE INT C COMP AI
   AZIZ A, 1994, ACM IEEE D, P283
   Bouali A, 1998, LECT NOTES COMPUT SC, V1427, P500, DOI 10.1007/BFb0028770
   Bouali A., 1992, LECT NOTES COMPUTER, V663, P96, DOI [10.1007/3-540-56496-9_9, DOI 10.1007/3-540-56496-9_9]
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   BRYANT RE, 1985, P 22 ACM IEEE DES AU, P688
   BURCH JR, 1992, INFORM COMPUT, V98, P142, DOI 10.1016/0890-5401(92)90017-A
   BURCH JR, 1991, P INT C VER LARG SCA, P49
   Cabodi G, 2001, LECT NOTES COMPUT SC, V2102, P118
   Clarke EM, 1999, MODEL CHECKING, P1
   Dovier A, 2001, LECT NOTES COMPUT SC, V2102, P79
   DOVIER A, 2002, ENTCS, V67
   Fisler K, 1999, LECT NOTES COMPUT SC, V1703, P338
   GENTILINI R, 2003, IN PRESS P INT S DIS, P573
   GENTILINI R, 2001, P WORKSH SPEC AN VAL
   Jech T, 1978, Set theory
   KANELLAKIS PC, 1990, INFORM COMPUT, V86, P43, DOI 10.1016/0890-5401(90)90025-D
   LEE CY, 1959, BELL SYST TECH J, V38, P985, DOI 10.1002/j.1538-7305.1959.tb01585.x
   Lee D., 1992, Proceedings of the Twenty-Fourth Annual ACM Symposium on the Theory of Computing, P264, DOI 10.1145/129712.129738
   LEVY A, 1979, PERSPECTIVE MATH LOG
   McMillan K. L., 1993, Symbolic model checking
   Meinel C, 2001, PROCEEDINGS OF THE ASP-DAC 2001: ASIA AND SOUTH PACIFIC DESIGN AUTOMATION CONFERENCE 2001, P97, DOI 10.1109/ASPDAC.2001.913287
   Meinel C, 2001, FORM METHOD SYST DES, V18, P285, DOI 10.1023/A:1011273220017
   MEINEL C, 2000, LNCS, V1956, P443
   PAIGE R, 1987, SIAM J COMPUT, V16, P973, DOI 10.1137/0216062
   PIAZZA C, 2002, THESIS U UDINE FORUM
   RUDELL R, 1993, 1993 IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER-AIDED DESIGN - DIGEST OF TECHNICAL PAPERS, P42, DOI 10.1109/ICCAD.1993.580029
   SOMENZI F, 1999, NATO SCI SERIES F, V173
   [No title captured]
NR 33
TC 5
Z9 5
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP-NOV
PY 2004
VL 4
BP 695
EP 718
DI 10.1017/S1471068404002091
PN 5-6
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 861VZ
UT WOS:000224448000006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Calautti, M
   Greco, S
   Molinaro, C
   Trubitsyna, I
AF Calautti, Marco
   Greco, Sergio
   Molinaro, Cristian
   Trubitsyna, Irina
TI Querying Data Exchange Settings Beyond Positive Queries
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Early Access
DE data exchange; semantics; closed word assumption; approximations
ID EXPLANATIONS; ALGORITHMS; CHOICE
AB Data exchange, the problem of transferring data from a source schema to a target schema, has been studied for several years. The semantics of answering positive queries over the target schema has been defined in early work, but little attention has been paid to more general queries. A few proposals of semantics for more general queries exist but they either do not properly extend the standard semantics under positive queries, giving rise to counterintuitive answers, or they make query answering undecidable even for the most important data exchange settings, for example, with weakly-acyclic dependencies.
   The goal of this paper is to provide a new semantics for data exchange that is able to deal with general queries. At the same time, we want our semantics to coincide with the classical one when focusing on positive queries, and to not trade-off too much in terms of complexity of query answering. We show that query answering is undecidable in general under the new semantics, but it is coNP-complete when the dependencies are weakly-acyclic. Moreover, in the latter case, we show that exact answers under our semantics can be computed by means of logic programs with choice, thus exploiting existing efficient systems. For more efficient computations, we also show that our semantics allows for the construction of a representative target instance, similar in spirit to a universal solution, that can be exploited for computing approximate answers in polynomial time.
C1 [Calautti, Marco] Univ Milan, DI, Milan, Italy.
   [Greco, Sergio; Molinaro, Cristian; Trubitsyna, Irina] Univ Calabria, DIMES, Arcavacata Di Rende, Italy.
C3 University of Milan; University of Calabria
RP Calautti, M (corresponding author), Univ Milan, DI, Milan, Italy.
EM marco.calautti@unimi.it; greco@dimes.unical.it;
   cmolinaro@dimes.unical.it; trubitsyna@dimes.unical.it
OI CALAUTTI, MARCO/0000-0003-0921-4040
CR Alfano G, 2020, KR2020: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P33
   Alviano M, 2011, LECT NOTES COMPUT SC, V6702, P282
   Arenas M, 2013, J ACM, V60, DOI 10.1145/2505985
   Arni F, 2003, THEOR PRACT LOG PROG, V3, P61, DOI 10.1017/S1471068402001515
   CALAUTTI M., 2019, ICDT, V17, P1
   Calautti M, 2022, PROCEEDINGS OF THE 41ST ACM SIGMOD-SIGACT-SIGAI SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS (PODS '22), P369, DOI 10.1145/3517804.3524146
   Calautti M, 2021, PODS '21: PROCEEDINGS OF THE 40TH SIGMOD-SIGACT-SIGAI SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P233, DOI 10.1145/3452021.3458309
   Calautti M, 2020, KR2020: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P203
   Calautti M, 2021, THEOR COMPUT SYST, V65, P84, DOI 10.1007/s00224-020-09994-5
   Calautti M, 2015, PODS'15: PROCEEDINGS OF THE 33RD ACM SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P91, DOI 10.1145/2745754.2745773
   Calvanese D, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P274
   Ceylan II, 2020, KR2020: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P223
   Ceylan II, 2021, AAAI CONF ARTIF INTE, V35, P6262
   Ceylan II, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1639
   Console M, 2016, FIFTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P349
   Fagin R, 2005, THEOR COMPUT SCI, V336, P89, DOI 10.1016/j.tcs.2004.10.033
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gheerbrant A, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1704
   Gheerbrant A, 2015, THEOR COMPUT SYST, V57, P892, DOI 10.1007/s00224-014-9596-y
   GIANNOTTI F, 1991, LECT NOTES COMPUT SC, V566, P129
   GRAHNE G., 2011, AMW
   Grahne G, 2018, FUND INFORM, V157, P221, DOI 10.3233/FI-2018-1627
   Greco S., 1992, Proceedings of the Eleventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P105, DOI 10.1145/137097.137836
   Greco S, 1995, LECT NOTES COMPUT SC, V893, P82
   Greco S, 1998, LOGIC PROGRAMM, P294
   Greco S, 2019, INFORM SYST, V86, P28, DOI 10.1016/j.is.2019.03.010
   Guagliardo P, 2016, PODS'16: PROCEEDINGS OF THE 35TH ACM SIGMOD-SIGACT-SIGAI SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P211, DOI 10.1145/2902251.2902297
   Hernich A, 2011, LOG METH COMPUT SCI, V7, DOI 10.2168/LMCS-7(3:09)2011
   Hernich A, 2011, ACM T DATABASE SYST, V36, DOI 10.1145/1966385.1966392
   IMIELINSKI T, 1984, J ACM, V31, P761, DOI 10.1145/1634.1886
   Kolaitis P.G., 2006, P 25 ACM SIGACT SIGM, P30, DOI [10.1145/1142351.1142357, DOI 10.1145/1142351.1142357]
   Libkin L, 2018, PODS'18: PROCEEDINGS OF THE 37TH ACM SIGMOD-SIGACT-SIGAI SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P195, DOI 10.1145/3196959.3196983
   Libkin L, 2016, ACM T DATABASE SYST, V41, DOI 10.1145/2877206
   Libkin L, 2011, J COMPUT SYST SCI, V77, P542, DOI 10.1016/j.jcss.2010.04.010
   LUKASIEWICZ T., 2022, PROC IJCAI, P2705
   Lukasiewicz T, 2020, AAAI CONF ARTIF INTE, V34, P2909
   Marnette B, 2009, PODS'09: PROCEEDINGS OF THE TWENTY-EIGHTH ACM SIGMOD-SIGACT-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P13, DOI 10.1145/1559795.1559799
   SACCA D, 1990, PROCEEDINGS OF THE NINTH ACM SIGACT-SIGMOD-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P205, DOI 10.1145/298514.298572
NR 38
TC 0
Z9 0
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD 2023 AUG 15
PY 2023
AR PII S1471068423000339
DI 10.1017/S1471068423000339
EA AUG 2023
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA P1NU4
UT WOS:001048385200001
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Walega, PA
   Cucala, DJT
   Grau, BC
   Kostylev, EV
AF Walega, Przemyslaw A.
   Cucala, David J. Tena J.
   Grau, Bernardo Cuenca
   Kostylev, Egor V. V.
TI The Stable Model Semantics of Datalog with Metric Temporal Operators
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE temporal reasoning; metric temporal logic; stable model semantics;
   non-monotonic negation
ID LOGIC
AB We introduce negation under the stable model semantics in DatalogMTL - a temporal extension of Datalog with metric temporal operators. As a result, we obtain a rule language which combines the power of answer set programming with the temporal dimension provided by metric operators. We show that, in this setting, reasoning becomes undecidable over the rational timeline, and decidable in ExPSPACE in data complexity over the integer timeline. We also show that, if we restrict our attention to forward-propagating programs, reasoning over the integer timeline becomes PSPACE-complete in data complexity, and hence, no harder than over positive programs; however, reasoning over the rational timeline in this fragment remains undecidable.
C1 [Walega, Przemyslaw A.; Cucala, David J. Tena J.; Grau, Bernardo Cuenca] Univ Oxford, Dept Comp Sci, Oxford OX1 3AZ, England.
   [Kostylev, Egor V. V.] Univ Oslo, Dept Informat, Oslo, Norway.
C3 University of Oxford; University of Oslo
RP Walega, PA (corresponding author), Univ Oxford, Dept Comp Sci, Oxford OX1 3AZ, England.
EM przemyslaw.walega@cs.ox.ac.uk; david.tena.cucala@cs.ox.ac.uk;
   bernardo.cuenca.grau@cs.ox.ac.uk; egork@ifi.uio.no
RI Kostylev, Egor V./B-5778-2018
OI Kostylev, Egor V./0000-0002-8886-6129; Walega,
   Przemyslaw/0000-0003-2922-0472
FU EPSRC project OASIS [EP/S032347/1]; EPSRC project UK FIRES
   [EP/S019111/1]; SIRIUS Centre for Scalable Data Access; Samsung Research
   UK
FX This work was funded in whole or in part by the EPSRC project OASIS
   (EP/S032347/1), the EPSRC project UK FIRES (EP/S019111/1), and the
   SIRIUS Centre for Scalable Data Access, and Samsung Research UK. For the
   purpose of Open Access, the authors have applied a CC BY public
   copyright licence to any Author Accepted Manuscript (AAM) version
   arising from this submission.
CR ABADI M, 1989, J SYMB COMPUT, V8, P277, DOI 10.1016/S0747-7171(89)80070-7
   Abiteboul S., 1995, Foundations of Databases, DOI DOI 10.5555/551350
   Aguado Felicidad, 2013, Journal of Applied Non-Classical Logic, V23, P2, DOI 10.1080/11663081.2013.798985
   [Anonymous], 2012, RV. Lecture Notes in Computer Science
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Basin D, 2018, ACTA INFORM, V55, P309, DOI 10.1007/s00236-017-0295-4
   Beck H, 2018, ARTIF INTELL, V261, P16, DOI 10.1016/j.artint.2018.04.003
   Bozzelli L, 2015, IEEE S LOG, P645, DOI 10.1109/LICS.2015.65
   Brandt S, 2017, AAAI CONF ARTIF INTE, P1070
   Brandt S, 2018, J ARTIF INTELL RES, V62, P829, DOI 10.1613/jair.1.11229
   Brooks DR, 2007, J AUTOM REASONING, V39, P471, DOI 10.1007/s10817-007-9082-1
   Brzoska C, 1998, THEOR COMPUT SCI, V202, P55, DOI 10.1016/S0304-3975(97)00139-4
   Cabalar P, 2007, LECT NOTES COMPUT SC, V4739, P241
   Cabalar P, 2020, THEOR PRACT LOG PROG, V20, P783, DOI 10.1017/S1471068420000307
   Cabalar P, 2018, THEOR PRACT LOG PROG, V18, P406, DOI 10.1017/S1471068418000297
   CHOMICKI J, 1989, SIGMOD REC, V18, P174, DOI 10.1145/66926.66942
   Chomicki J., 1988, Proceedings of the Seventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P61, DOI 10.1145/308386.308416
   Cucala DJT, 2021, AAAI CONF ARTIF INTE, V35, P6488
   Do TM, 2011, LECT NOTES ARTIF INT, V6657, P104, DOI 10.1007/978-3-642-21043-3_13
   Eiter T, 2009, LECT NOTES COMPUT SC, V5689, P40, DOI 10.1007/978-3-642-03754-2_2
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   Gebser M., 2013, ARXIV
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Heyting A, 1930, SITZBER PREUSS AKAD, P42
   KOYMANS R, 1990, REAL-TIME SYST, V2, P255, DOI 10.1007/BF01995674
   Nogueira M., 2001, P 1 INT ANS SET PROG
   Pearce D, 1997, LECT NOTES ARTIF INT, V1216, P57, DOI 10.1007/BFb0023801
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Ronca A, 2018, SIXTEENTH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P571
   Ronca A, 2018, AAAI CONF ARTIF INTE, P1941
   Ryzhikov V, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1851
   Vidal, 2011, LECT NOTES COMPUT SC, V7225, P57
   Walega P., 2020, P 17 INT C PRINC KNO, P526
   Walega P. A., 2021, KR, P619
   Walega P. A., 2021, P KR 2021, P609
   Walega PA, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1886
   Walega PA, 2019, AAAI CONF ARTIF INTE, P3092
   Walega PA, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1919
   Wang D., 2022, P 36 AAAI C ART INT
   Zaniolo Carlo, 2012, Datalog in Academia and Industry. Proceedings of the Second International Workshop, Datalog 2.0, P177, DOI 10.1007/978-3-642-32925-8_18
NR 40
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2024
VL 24
IS 1
BP 22
EP 56
DI 10.1017/S1471068423000315
EA AUG 2023
PG 35
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA IA4P8
UT WOS:001041221900001
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Belle, V
AF Belle, Vaishak
TI Toward A Logical Theory Of Fairness and Bias
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic; fairness; bias; situation calculus; knowledge; action
ID SITUATION CALCULUS; KNOWLEDGE; MODELS
AB Fairness in machine learning is of considerable interest in recent years owing to the propensity of algorithms trained on historical data to amplify and perpetuate historical biases. In this paper, we argue for a formal reconstruction of fairness definitions, not so much to replace existing definitions but to ground their application in an epistemic setting and allow for rich environmental modeling. Consequently we look into three notions: fairness through unawareness, demographic parity and counterfactual fairness, and formalize these in the epistemic situation calculus.
C1 [Belle, Vaishak] Univ Edinburgh, Edinburgh, Scotland.
   [Belle, Vaishak] Alan Turing Inst, Edinburgh, Scotland.
C3 University of Edinburgh
RP Belle, V (corresponding author), Univ Edinburgh, Edinburgh, Scotland.; Belle, V (corresponding author), Alan Turing Inst, Edinburgh, Scotland.
EM vbelle@ed.ac.uk
OI Belle, Vaishak/0000-0001-5573-8465
CR Alexander L., 2021, The Stanford Encyclopedia of Philosophy, Winter, V2021
   Anderson M, 2014, AAAI CONF ARTIF INTE, P253
   Angwin Julia, 2016, ProPublica
   [Anonymous], 2008, P 23 AAI C ART INT, DOI [DOI 10.1017/CBO9780511978036.024, 10.1017/CBO9780511978036.024]
   [Anonymous], 2008, 14 ACM SIGKDD INT C
   Aziz H, 2018, AAAI CONF ARTIF INTE, P4638
   Bacchus F, 1996, ARTIF INTELL, V87, P75, DOI 10.1016/S0004-3702(96)00003-3
   Bacchus F, 1999, ARTIF INTELL, V111, P171, DOI 10.1016/S0004-3702(99)00031-4
   Baier J.A., 2007, P 17 INT C AUTOMATED, P26
   Baral Chitta., 2017, DAGSTUHL REPORTS, V7, P1, DOI DOI 10.4230/DAGREP.7.6.1
   Batusov V, 2018, AAAI CONF ARTIF INTE, P1744
   Belle V., 2022, ARTIF INTELL
   Belle V, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P828
   Broersen J., 2001, Proceedings of the Fifth International Conference on Autonomous Agents, P9, DOI 10.1145/375735.375766
   Chockler H, 2004, J ARTIF INTELL RES, V22, P93, DOI 10.1613/jair.1391
   Chouldechova A, 2017, BIG DATA-US, V5, P153, DOI 10.1089/big.2016.0047
   Classen J., 2008, KR, P589
   Classen J., 2008, P NMR 2008, P10
   Classen J, 2020, KR2020: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P253
   Classen J, 2018, SIXTEENTH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P524
   Conway P, 2013, J PERS SOC PSYCHOL, V104, P216, DOI 10.1037/a0031021
   Creager E., 2020, PMLR, P2185
   Czelakowski, 1997, LOGIC ACTION COGNITI, P47
   Delgrande J. P., P KR 2012
   Dwork C., 2011, Fairness through awareness
   Farnadi G, 2018, PROCEEDINGS OF THE 2018 AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY (AIES'18), P108, DOI 10.1145/3278721.3278733
   Fu ZH, 2020, PROCEEDINGS OF THE 43RD INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '20), P69, DOI 10.1145/3397271.3401051
   Georgeff M, 1999, LECT NOTES ARTIF INT, V1555, P1
   Halpern J.Y., 2009, P 12 C THEORETICAL A, P156, DOI DOI 10.1145/1562814.1562837
   Halpern JY, 2018, AAAI CONF ARTIF INTE, P1853
   Halpern JY, 2014, J ARTIF INTELL RES, V49, P143, DOI 10.1613/jair.4220
   Hardt M, 2016, ADV NEUR IN, V29
   Hooker JN, 2018, PROCEEDINGS OF THE 2018 AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY (AIES'18), P130, DOI 10.1145/3278721.3278753
   Ignatiev Alexey, 2020, Principles and Practice of Constraint Programming. 26th International Conference, CP 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12333), P846, DOI 10.1007/978-3-030-58475-7_49
   Kawamoto Y, 2019, LECT NOTES COMPUT SC, V11724, P293, DOI 10.1007/978-3-030-30446-1_16
   Khandani AE, 2010, J BANK FINANC, V34, P2767, DOI 10.1016/j.jbankfin.2010.06.001
   Kusner Matt J, 2017, ADV NEURAL INFORM PR, P4066, DOI DOI 10.48550/ARXIV.1703.06856
   Lakemeyer G., 2004, P KR, P516
   Lakemeyer G, 2011, ARTIF INTELL, V175, P142, DOI 10.1016/j.artint.2010.04.005
   Lee J, 2012, J ARTIF INTELL RES, V43, P571, DOI 10.1613/jair.3489
   Lesperance Y., 2000, Studia Logica, V66, P165, DOI 10.1023/A:1026761331498
   Levesque H, 2008, FOUND ARTIF INTELL, P869, DOI 10.1016/S1574-6526(07)03023-4
   LEVESQUE HJ, 1990, ARTIF INTELL, V42, P263, DOI 10.1016/0004-3702(90)90056-6
   Levesque HJ, 1997, J LOGIC PROGRAM, V31, P59, DOI 10.1016/S0743-1066(96)00121-5
   Levesque HJ, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P1139
   Lin F., 1994, Proceedings of AAAI Fall Symposium on Relevance, P154
   Lindner F, 2017, IEEE INT C INT ROBOT, P6991, DOI 10.1109/IROS.2017.8206625
   Liu X, 2022, LECT NOTES COMPUT SC, V13468, P158, DOI 10.1007/978-3-031-15298-6_10
   McIlraith S., 2002, P 8 INT C KNOWLEDGE, P482
   Muggleton S, 2012, MACH LEARN, V86, P3, DOI 10.1007/s10994-011-5259-2
   Muise C, 2015, AAAI CONF ARTIF INTE, P3327
   Pagnucco M, 2021, AIES '21: PROCEEDINGS OF THE 2021 AAAI/ACM CONFERENCE ON AI, ETHICS, AND SOCIETY, P814, DOI 10.1145/3461702.3462586
   Raedt LD., 2016, Synthesis lectures on artificial intelligence and machine learning, V10, P1, DOI [DOI 10.2200/S00692ED1V01Y201601AIM032, DOI 10.1007/978-3-031-01574-8, 10.1007/978-3-031-01574-8]
   Reiter R., 2001, ACM T COMPUT LOG, V2, P433
   Reiter R., 2001, Knowledge in Action: Logical Foundations for Specifying and Implementing Dynamical Systems
   Sardina S, 2004, ANN MATH ARTIF INTEL, V41, P259, DOI 10.1023/B:AMAI.0000031197.13122.aa
   Sardina S, 2010, LECT NOTES ARTIF INT, V5919, P82
   Scherl RB, 2003, ARTIF INTELL, V144, P1, DOI 10.1016/S0004-3702(02)00365-X
   Verma S, 2018, 2018 IEEE/ACM INTERNATIONAL WORKSHOP ON SOFTWARE FAIRNESS (FAIRWARE 2018), P1, DOI [10.1145/3194770.3194776, 10.23919/FAIRWARE.2018.8452913]
   Wang KW, 2005, LECT NOTES ARTIF INT, V3662, P279, DOI 10.1007/11546207_22
   Zafar MB, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P1171, DOI 10.1145/3038912.3052660
   Zafar Muhammad Bilal, 2017, Fairness constraints: Mechanisms for fair classification
   Zemel Rich, 2013, PMLR, P325
   Zhang Y, 2009, ARTIF INTELL, V173, P1525, DOI 10.1016/j.artint.2009.07.005
NR 64
TC 0
Z9 0
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2023
VL 23
IS 4
SI SI
BP 865
EP 883
AR PII S1471068423000157
DI 10.1017/S1471068423000157
EA JUL 2023
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7Z0
UT WOS:001031934000001
OA Green Accepted, Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Bomanson, J
   Janhunen, T
AF Bomanson, Jori
   Janhunen, Tomi
TI Boosting Answer Set Optimization with Weighted Comparator Networks
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; comparator network; normalization; optimization
   rewriting; translation
AB Answer set programming (ASP) is a paradigm for modeling knowledge-intensive domains and solving challenging reasoning problems. In ASP solving, a typical strategy is to preprocess problem instances by rewriting complex rules into simpler ones. Normalization is a rewriting process that removes extended rule types altogether in favor of normal rules. Recently, such techniques led to optimization rewriting in ASP, where the goal is to boost answer set optimization by refactoring the optimization criteria of interest. In this paper, we present a novel, general, and effective technique for optimization rewriting based on comparator networks which are specific kinds of circuits for reordering the elements of vectors. The idea is to connect an ASP encoding of a comparator network to the literals being optimized and to redistribute the weights of these literals over the structure of the network. The encoding captures information about the weight of an answer set in auxiliary atoms in a structured way that is proven to yield exponential improvements during branch-and-bound optimization on an infinite family of example programs. The used comparator network can be tuned freely, for example, to find the best size for a given benchmark class. Experiments show accelerated optimization performance on several benchmark problems.
C1 [Bomanson, Jori; Janhunen, Tomi] Aalto Univ, Dept Comp Sci, FI-00076 Aalto, Finland.
   [Janhunen, Tomi] Tampere Univ, Informat Technol & Commun Sci, FI-33014 Tampere, Finland.
C3 Aalto University; Tampere University
RP Bomanson, J (corresponding author), Aalto Univ, Dept Comp Sci, FI-00076 Aalto, Finland.
EM Jori.Bomanson@aalto.fi; Tomi.Janhunen@tuni.fi
RI Janhunen, Tomi/E-8362-2012
OI Bomanson, Jori/0000-0002-9218-9562
FU Finnish Centre of Excellence in Computational Inference Research (COIN)
   (Academy of Finland) [251170]; Helsinki Doctoral Education Network in
   Information and Communication Technology (HICT); Academy of Finland
   project Ethical AI for the Governance of Society (ETAIROS) [327352]
FX We would like to thank the anonymous reviewers and Dr. Martin Gebser for
   their valuable comments and suggestions. This work has been supported in
   part by the Finnish Centre of Excellence in Computational Inference
   Research (COIN) (Academy of Finland, project #251170). Moreover, Jori
   Bomanson has been supported by the Helsinki Doctoral Education Network
   in Information and Communication Technology (HICT) and Tomi Janhunen
   partially by the Academy of Finland project Ethical AI for the
   Governance of Society (ETAIROS, grant #327352).
CR Abío I, 2013, LECT NOTES COMPUT SC, V8124, P97, DOI 10.1007/978-3-642-40627-0_10
   Abío I, 2012, J ARTIF INTELL RES, V45, P443, DOI 10.1613/jair.3653
   Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   Alviano M., 2015, J LOGIC COMPUTATION
   Andres B., 2012, UNSATISFIABILITY BAS, P212
   Anger C, 2006, FRONT ARTIF INTEL AP, V141, P769
   [Anonymous], 2010, J MACHINE LEARNING R
   [Anonymous], 2013, ASP CORE 2 4 ASP COM
   Apt K., 1987, F DEDUCTIVE DATABASE, P89
   Balduccini M., 2017, LNCS, V10377
   Banbara M, 2013, THEOR PRACT LOG PROG, V13, P783, DOI 10.1017/S1471068413000495
   Batcher K. E., 1968, P AFIPS SPRING JOINT, P307, DOI [DOI 10.1145/1468075.1468121, 10.1145/1468075. 1468121]
   Bomanson J., 2016, OASICS, V52
   Bomanson J, 2017, LECT NOTES ARTIF INT, V10377, P222, DOI 10.1007/978-3-319-61660-5_20
   Bomanson J, 2014, LECT NOTES ARTIF INT, V8761, P166, DOI 10.1007/978-3-319-11558-0_12
   Bomanson J, 2013, LECT NOTES COMPUT SC, V8148, P187, DOI 10.1007/978-3-642-40564-8_19
   Bonutti A, 2012, ANN OPER RES, V194, P59, DOI 10.1007/s10479-010-0707-0
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Calimeri F., 2015, LNCS, V9345
   Clark K. L., 1978, Logic and data bases, P293
   Cussens J, 2011, UNCERTAINTY ARTIFICI, P153
   Davies Jessica, 2011, Principles and Practice of Constraint Programming - CP 2011. Proceedings of the 17th International Conference (CP 2011), P225, DOI 10.1007/978-3-642-23786-7_19
   Denecker M, 2009, LECT NOTES COMPUT SC, V5753, P637, DOI 10.1007/978-3-642-04238-6_75
   Dovier A., 2012, LEIBNIZ INT P INFORM, V17
   Drescher C., 2012, ANSWER SET SOLVING L, P188
   Een N., 2006, J SATISFIABILITY BOO, V2, P1, DOI DOI 10.3233/SAT190014
   Gebser M., 2016, THEORY SOLVING MADE, V5
   Gebser M., 2015, PROGR CLASP 3, V3, P368
   Gebser M., 2015, DESIGN 6 ANSWER SET, P531
   Gebser M., 2017, DESIGN 7 ANSWER SET, P3
   Gebser M, 2013, ACM T COMPUT LOG, V14, DOI 10.1145/2480759.2480767
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Janhunen T, 2017, STAT COMPUT, V27, P115, DOI 10.1007/s11222-015-9611-4
   Janhunen T, 2016, AI MAG, V37, P13, DOI 10.1609/aimag.v37i3.2671
   Järvisalo M, 2008, THEOR PRACT LOG PROG, V8, P691, DOI 10.1017/S1471068408003578
   Lierler Y, 2016, ARTIF INTELL, V236, P65, DOI 10.1016/j.artint.2016.03.004
   Lierler Y, 2011, THEOR PRACT LOG PROG, V11, P135, DOI 10.1017/S1471068410000578
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V, 2006, ACM T COMPUT LOG, V7, P261, DOI 10.1145/1131313.1131316
   Maratea M., 2015, MULTILEVEL ALGORITHM, P439
   MaxSAT-Comp, 2014, 9 MAX SAT EV
   Moreno-Centeno E, 2013, OPER RES, V61, P453, DOI 10.1287/opre.1120.1139
   Morgado A, 2014, LECT NOTES COMPUT SC, V8656, P564, DOI 10.1007/978-3-319-10428-7_41
   Neng-Fa Zhou, 2016, Practical Aspects of Declarative Languages. 18th International Symposium, PADL 2016. Proceedings: LNCS 9585, P48, DOI 10.1007/978-3-319-28228-2_4
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Saikko P, 2018, SIXTEENTH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P32
   WAKSMAN A, 1968, J ACM, V15, P159, DOI 10.1145/321439.321449
NR 47
TC 1
Z9 1
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2020
VL 20
IS 4
BP 512
EP 551
AR PII S147106842000006X
DI 10.1017/S147106842000006X
PG 40
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA OA1TI
UT WOS:000577576500003
OA Green Published, Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Yernaux, G
   Vanhoof, W
AF Yernaux, Gonzague
   Vanhoof, Wim
TI Anti-unification in Constraint Logic Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Anti-unification; (most specific) generalization; CLP; program analysis
ID PARTIAL DEDUCTION; POLYVARIANCE
AB Anti-unification refers to the process of generalizing two (or more) goals into a single, more general, goal that captures some of the structure that is common to all initial goals. In general one is typically interested in computing what is often called a most specific generalization, that is a generalization that captures a maximal amount of shared structure. In this work we address the problem of anti-unification in CLP, where goals can be seen as unordered sets of atoms and/or constraints. We show that while the concept of a most specific generalization can easily be defined in this context, computing it becomes an NP-complete problem. We subsequently introduce a generalization algorithm that computes a well-defined abstraction whose computation can be bound to a polynomial execution time. Initial experiments show that even a naive implementation of our algorithm produces acceptable generalizations in an efficient way.
C1 [Yernaux, Gonzague; Vanhoof, Wim] Univ Namur, Namur Digital Inst, Namur, Belgium.
C3 University of Namur
RP Yernaux, G (corresponding author), Univ Namur, Namur Digital Inst, Namur, Belgium.
EM gonzague.yernaux@unamur.be
OI Vanhoof, Wim/0000-0003-3769-6294; Yernaux, Gonzague/0000-0001-6430-8168
CR BENKERIMI K, 1990, LOGIC PROGRAMM, P343
   Bouajjani A, 2006, ELECTRON NOTES THEOR, V149, P37, DOI 10.1016/j.entcs.2005.11.015
   BURGHARDT J., 2014, ABS14038118 CORR
   De Schreye D, 1999, J LOGIC PROGRAM, V41, P231, DOI 10.1016/S0743-1066(99)00030-8
   Fioravanti F, 2013, FUND INFORM, V124, P483, DOI 10.3233/FI-2013-845
   Gallagher J. P., 1993, Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation. PEPM'93, P88, DOI 10.1145/154630.154640
   Gange G, 2015, THEOR PRACT LOG PROG, V15, P526, DOI 10.1017/S1471068415000204
   Gutiérrez-Naranjo MA, 2003, LECT NOTES COMPUT SC, V2809, P115
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   Jaffar J, 1998, J LOGIC PROGRAM, V37, P1, DOI 10.1016/S0743-1066(98)10002-X
   Khardon R, 2006, J COMPUT SYST SCI, V72, P72, DOI 10.1016/j.jcss.2005.06.005
   Leuschel M, 1998, ACM T PROGR LANG SYS, V20, P208, DOI 10.1145/271510.271525
   Lloyd J.W., 1995, P ILPS 95, P465
   Mesnard F, 2016, PROCEEDINGS OF THE 18TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING (PPDP 2016), P202, DOI 10.1145/2967973.2968600
   PETTOROSSI A., 1998, ACM COMPUT SURV, V30
   Plotkin G. D., 1970, Machine Intelligence, V5, P153
   Sorensen MHB, 1999, LECT NOTES COMPUT SC, V1706, P246
   SYSLO MM, 1982, THEOR COMPUT SCI, V17, P91, DOI 10.1016/0304-3975(82)90133-5
NR 18
TC 4
Z9 5
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 773
EP 789
DI 10.1017/S1471068419000188
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Paramonov, S
   Stepanova, D
   Miettinen, P
AF Paramonov, Sergey
   Stepanova, Daria
   Miettinen, Pauli
TI Hybrid ASP-based Approach to Pattern Mining
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; pattern mining; structured mining; sequence
   mining; itemset mining; graph mining
AB Detecting small sets of relevant patterns from a given data set is a central challenge in data mining The relevance of a pattern is based on user-provided criteria; typically, all patterns that satisfy certain criteria are considered relevant. Rule-based languages like answer set programming (ASP) seem well suited for specifying such criteria in a form of constraints. Although progress has been made, on the one hand, on solving individual mining problems and, on the other hand, developing generic mining systems, the existing methods focus either on scalability or on generality. In this paper, we make steps toward combining local (frequency, size, and cost) and global (various condensed representations like maximal, closed, and skyline) constraints in a generic and efficient way. We present a hybrid approach for itemset, sequence, and graph mining which exploits dedicated highly optimized mining systems to detect frequent patterns and then filters the results using declarative ASP. To further demonstrate the generic nature of our hybrid framework, we apply it to a problem of approximately tiling a database. Experiments on real-world data sets show the effectiveness of the proposed method and computational gains for itemset, sequence, and graph mining, as well as approximate tiling.
   Under consideration in Theory and Practice of Logic Programming.
C1 [Paramonov, Sergey] Katholieke Univ Leuven, Leuven, Belgium.
   [Stepanova, Daria; Miettinen, Pauli] Max Planck Inst Informat, Saarbrucken, Germany.
C3 KU Leuven; Max Planck Society
RP Paramonov, S (corresponding author), Katholieke Univ Leuven, Leuven, Belgium.
EM sergey.paramonov@kuleuven.be; dstepano@mpi-inf.mpg.de;
   pmiettin@mpi-inf.mpg.de
RI Paramonov, Sergey/ABA-2847-2020
OI Miettinen, Pauli/0000-0003-2271-316X; Paramonov,
   Sergey/0000-0003-0079-6638
FU FWO; ERC-ADG-201 project - European Research Council [694980 SYNTH]
FX This work has been supported by the FWO and by the ERC-ADG-201 project
   694980 SYNTH funded by the European Research Council. This is an
   extended version of a paper presented at the RuleML+RR 2017 conference,
   which has been invited for submission to TPLP. The authors acknowledge
   the assistance of the RuleML+ RR 2017 Program Chairs Stefania
   Costantini, Enrico Franconi, Fariba Sadri and William van Woensel.
CR Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Agrawal R., 1996, Advances in Knowledge Discovery and Data Mining, V12, P307, DOI DOI 10.1007/978-3-319-31750-2.
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P54, DOI 10.1007/978-3-642-40564-8_6
   [Anonymous], 2015, ABS151203547 CORR
   [Anonymous], 2015, Data mining: the textbook
   [Anonymous], 2009, THESIS
   Aoga J. O., 2016, JOINT EUR C MACH LEA, P315
   Bonchi F, 2006, KNOWL INF SYST, V9, P180, DOI 10.1007/s10115-005-0201-1
   Cook S. A., 1971, Proceedings of the 3rd annual ACM symposium on theory of computing, P151
   Eiter T., 2009, LNCS, V5689
   Eiter T, 2009, LECT NOTES ARTIF INT, V5749, P18, DOI 10.1007/978-3-642-04222-5_2
   Faber W., 2008, ABS08023137 CORR
   Gebser M., 2016, P 25 INT JOINT C ART
   Gebser M., 2012, Answer Set Solving in Practice
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P260, DOI 10.1007/978-3-540-72200-7_23
   Geerts F, 2004, LECT NOTES COMPUT SC, V3245, P278
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Guns T., 2016, DECLARATIVE LEARNING
   Guns T, 2017, ARTIF INTELL, V244, P6, DOI 10.1016/j.artint.2015.09.007
   Guns T, 2013, IEEE T KNOWL DATA EN, V25, P402, DOI 10.1109/TKDE.2011.204
   GUYET T., 2014, ARXIV
   J arvisalo M., 2011, P 11 INT C LOG PROGR, P304
   Jabbour S, 2013, PROCEEDINGS OF THE 22ND ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM'13), P649, DOI 10.1145/2505515.2505577
   Jabbour S, 2015, LECT NOTES ARTIF INT, V9078, P662, DOI 10.1007/978-3-319-18032-8_52
   Jian Pei, 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P350
   Kimelfeld B, 2014, ACM T DATABASE SYST, V39, DOI 10.1145/2629550
   Lifschitz V., 2008, WHAT IS ANSWER SET P
   Mannila H, 1997, DATA MIN KNOWL DISC, V1, P241, DOI 10.1023/A:1009796218281
   Metivier J., 2013, ABS13116907 CORR
   Miettinen P, 2008, INFORM PROCESS LETT, V108, P219, DOI 10.1016/j.ipl.2008.05.007
   Miettinen P, 2008, IEEE T KNOWL DATA EN, V20, P1348, DOI 10.1109/TKDE.2008.53
   Miettinen P, 2015, LECT NOTES ARTIF INT, V9285, P36, DOI 10.1007/978-3-319-23525-7_3
   Negrevergne B, 2015, LECT NOTES COMPUT SC, V9075, P288, DOI 10.1007/978-3-319-18008-3_20
   Negrevergne B, 2013, IEEE DATA MINING, P557, DOI 10.1109/ICDM.2013.92
   Neumann S, 2017, IEEE DATA MINING, P997, DOI 10.1109/ICDM.2017.128
   Paramonov S., 2015, ILP, P166
   Pei, 2000, SIGMOD INT WORKSHOP, V4, P21
   Pensa RG, 2005, LECT NOTES ARTIF INT, V3673, P212
   Rojas Willy Ugarte, 2014, Integration of AI and OR Techniques in Constraint Programming. 11th International Conference, CPAIOR 2014. Proceedings: LNCS 8451, P71, DOI 10.1007/978-3-319-07046-9_6
   Simons Patrik, 2002, ARTIF INTELL, V138, P181
   Tyukin Andrey, 2014, Machine Learning and Knowledge Discovery in Databases. European Conference, ECML PKDD 2014. Proceedings: LNCS 8726, P481, DOI 10.1007/978-3-662-44845-8_40
   van der Hallen M., 2016, ABS160808956 CORR
   Yan X., 2002, ICDM 2002
   Yan XF, 2003, SIAM PROC S, P166
   Zaki M.J., 1997, TECHNICAL REPORT
NR 45
TC 3
Z9 3
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2019
VL 19
IS 4
BP 505
EP 535
DI 10.1017/S1471068418000467
PG 31
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID3WQ
UT WOS:000471608200001
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Cabalar, P
   Fadinno, J
   Del Cerro, LF
   Pearce, D
AF Cabalar, Pedro
   Fadinno, Jorge
   Del Cerro, Luis Farinas
   Pearce, David
TI Functional ASP with Intensional Sets: Application to Gelfond-Zhang
   Aggregates
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
DE Answer Set Programming; Equilibrium Logic; Partial Functions; Aggregates
ID LOGIC; SEMANTICS; LANGUAGE
AB In this paper, we propose a variant of Answer Set Programming (ASP) with evaluable functions that extends their application to sets of objects, something that allows a fully logical treatment of aggregates. Formally, we start from the syntax of First Order Logic with equality and the semantics of Quantified Equilibrium Logic with evaluable functions (QEL(F)(=)). Then, we proceed to incorporate a new kind of logical term, intensional set (a construct commonly used to denote the set of objects characterised by a given formula), and to extend QEL(F)(=) semantics for this new type of expression. In our extended approach, intensional sets can be arbitrarily used as predicate or function arguments or even nested inside other intensional sets, just as regular first-order logical terms. As a result, aggregates can be naturally formed by the application of some evaluable function (count, sum, maximum, etc) to a set of objects expressed as an intensional set. This approach has several advantages. First, while other semantics for aggregates depend on some syntactic transformation (either via a reduct or a formula translation), the QEL(F)(=) interpretation treats them as regular evaluable functions, providing a compositional semantics and avoiding any kind of syntactic restriction. Second, aggregates can be explicitly defined now within the logical language by the simple addition of formulas that fix their meaning in terms of multiple applications of some (commutative and associative) binary operation. For instance, we can use recursive rules to define sum in terms of integer addition. Last, but not least, we prove that the semantics we obtain for aggregates coincides with the one defined by Gelfond and Zhang for the Alog language, when we restrict to that syntactic fragment.
C1 [Cabalar, Pedro] Univ A Coruna, Dept Comp Sci, Corunna, Spain.
   [Fadinno, Jorge; Del Cerro, Luis Farinas] Univ Toulouse, CNRS, IRIT, Toulouse, France.
   [Pearce, David] Univ Politecn Madrid, Madrid, Spain.
C3 Universidade da Coruna; Universite de Toulouse; Universite Toulouse III
   - Paul Sabatier; Universite Federale Toulouse Midi-Pyrenees (ComUE);
   Institut National Polytechnique de Toulouse; Centre National de la
   Recherche Scientifique (CNRS); Universidad Politecnica de Madrid
RP Cabalar, P (corresponding author), Univ A Coruna, Dept Comp Sci, Corunna, Spain.
EM cabalar@udc.es; jorge.fandinno@irit.fr; luis@irit.fr;
   david.pearce@upm.es
RI Fandinno, Jorge/JJC-6227-2023; Fandiño, Jorge/F-8705-2016; Cabalar,
   Pedro/AAE-5198-2020
OI Fandiño, Jorge/0000-0002-3917-8717; 
FU MINECO, Spain [TIC2017-84453-P]; Xunta de Galicia, Spain [GPC ED431B
   2016/035, 2016-2019 ED431G/01]; Centre International de Mathematiques et
   d'Informatique de Toulouse (CIMI) [ANR-11-LABEX-0040-CIMI,
   ANR-11-IDEX-0002-02]; UPM [RP151046021]
FX Partially supported by MINECO, Spain, grant TIC2017-84453-P, Xunta de
   Galicia, Spain (GPC ED431B 2016/035 and 2016-2019 ED431G/01, CITIC). The
   second author is funded by the Centre International de Mathematiques et
   d'Informatique de Toulouse (CIMI) through contract
   ANR-11-LABEX-0040-CIMI within the program ANR-11-IDEX-0002-02. The
   fourth author is supported by UPM project RP151046021.
CR Balduccini M, 2013, THEOR PRACT LOG PROG, V13, P547, DOI 10.1017/S1471068413000343
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Bartholomew M., 2014, PRINCIPLES KNOWLEDGE
   BEERI C, 1991, J LOGIC PROGRAM, V10, P181, DOI 10.1016/0743-1066(91)90036-O
   Cabalar P., 2013, ALP NEWSLETTER
   Cabalar P., 2016, P 25 INT JOINT C ART, P1015
   Cabalar P, 2017, LECT NOTES ARTIF INT, V10377, P117, DOI 10.1007/978-3-319-61660-5_12
   Cabalar P, 2014, LECT NOTES ARTIF INT, V8761, P340, DOI 10.1007/978-3-319-11558-0_24
   Cabalar P, 2011, THEOR PRACT LOG PROG, V11, P203, DOI 10.1017/S1471068410000517
   Dovier A, 2003, LECT NOTES COMPUT SC, V2916, P284, DOI 10.1007/978-3-540-24599-5_20
   DOVIER A, 1991, LOGIC PROGRAMM, P111
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Ferraris P., 2010, P 2010 WORKSH NONM R
   Ferraris P, 2011, ACM T COMPUT LOG, V12, DOI 10.1145/1970398.1970401
   Gelfond M., 2014, THEOR PRACT LOG PROG, V14, P4
   Harrison A, 2017, THEOR PRACT LOG PROG, V17, P855, DOI 10.1017/S1471068417000394
   Heyting A, 1930, SITZBER PREUSS AKAD, P42
   KUPER GM, 1990, J COMPUT SYST SCI, V41, P44, DOI 10.1016/0022-0000(90)90033-H
   Lee J, 2009, LECT NOTES COMPUT SC, V5753, P182, DOI 10.1007/978-3-642-04238-6_17
   Lin F., 2008, P 11 INT C PRINC KNO
   Pearce D, 2004, LECT NOTES COMPUT SC, V3229, P147, DOI 10.1007/978-3-540-30227-8_15
   Pearce D., 1996, NONMONOTONIC EXTENSI
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Simons Patrik, 2002, ARTIF INTELL, V138, P181
   Son TC, 2007, THEOR PRACT LOG PROG, V7, P355, DOI 10.1017/S1471068406002936
NR 25
TC 13
Z9 13
U1 1
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 390
EP 405
DI 10.1017/S1471068418000169
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400007
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Blackmore, C
   Ray, O
   Eder, K
AF Blackmore, Craig
   Ray, Oliver
   Eder, Kerstin
TI A logic programming approach to predict effective compiler settings for
   embedded software
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
DE inductive logic programming; embedded system; compiler optimisation
AB This paper introduces a new logic-based method for optimising the selection of compiler flags on embedded architectures. In particular, we use Inductive Logic Programming (ILP) to learn logical rules that relate effective compiler flags to specific program features. Unlike earlier work, we aim to infer human-readable rules and we seek to develop a relational first-order approach which automatically discovers relevant features rather than relying on a vector of predetermined attributes. To this end we generated a data set by measuring execution times of 60 benchmarks on an embedded system development board and we developed an ILP prototype which outperforms the current state-of-the-art learning approach in 34 of the 60 benchmarks. Finally, we combined the strengths of the current state of the art and our ILP method in a hybrid approach which reduced execution times by an average of 8% and up to 50% in some cases.
C1 [Blackmore, Craig; Ray, Oliver; Eder, Kerstin] Univ Bristol, Dept Comp Sci, Bristol BS8 1UB, Avon, England.
C3 University of Bristol
RP Blackmore, C (corresponding author), Univ Bristol, Dept Comp Sci, Merchant Venturers Bldg,Woodland Rd, Bristol BS8 1UB, Avon, England.
EM craig.blackmore@bristol.ac.uk; oliver.ray@bristol.ac.uk;
   kerstin.eder@bristol.ac.uk
CR ARM, 2006, CORT M3 TECHN REF MA
   Fursin G, 2011, INT J PARALLEL PROG, V39, P296, DOI 10.1007/s10766-010-0161-2
   Fursin Grigori, 2008, MILEPOST GCC MACHINE
   Kulkarni S, 2012, ACM SIGPLAN NOTICES, V47, P147, DOI 10.1145/2398857.2384628
   MUGGLETON S, 1995, NEW GENERAT COMPUT, V13, P245, DOI 10.1007/BF03037227
   MUGGLETON S, 1994, J LOGIC PROGRAM, V20, P629, DOI 10.1016/0743-1066(94)90035-3
   Pallister J., 2013, COMPUTER J
   Pallister J., 2013, ARXIV13085174V2CSPF
NR 8
TC 4
Z9 4
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 481
EP 494
DI 10.1017/S1471068415000174
PN 4-5
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Phan, Q
   Janssens, G
   Somogyi, Z
AF Phan, Quan
   Janssens, Gerda
   Somogyi, Zoltan
TI Region-based memory management for Mercury programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE region-based memory management; region analysis; runtime support;
   backtracking; logic programming; Mercury
ID INFERENCE
AB Region-based memory management (RBMM) is a form of compile time memory management, well-known from the world of functional programming. In this paper we describe our work on implementing RBMM for the logic programming language Mercury. One interesting point about Mercury is that it is designed with strong type, mode, and determinism systems. These systems not only provide Mercury programmers with several direct software engineering benefits, such as self-documenting code and clear program logic, but also give language implementors a large amount of information that is useful for program analyses. In this work, we make use of this information to develop program analyses that determine the distribution of data into regions and transform Mercury programs by inserting into them the necessary region operations. We prove the correctness of our program analyses and transformation. To execute annotated programs, we have implemented runtime support that tackles the two main challenges posed by backtracking. First, backtracking can require regions removed during forward execution to be "resurrected"; and second, any memory allocated during computation that has been backtracked over must be recovered promptly without waiting for the regions involved to come to the end of their life. We describe in detail our solution of both these problems. We study in detail how our RBMM system performs on a selection of benchmark programs, including some well-known difficult cases for RBMM. Even with these difficult cases, our RBMM-enabled Mercury system obtains clearly faster runtimes for 15 out of 18 benchmarks compared to the base Mercury system with its Boehm runtime garbage collector, with an average runtime speedup of 24%, and an average reduction in memory requirements of 95%. In fact, our system achieves optimal memory consumption in some programs.
C1 [Phan, Quan; Janssens, Gerda] Katholieke Univ Leuven, Dept Comp Sci, B-3001 Louvain, Belgium.
   [Somogyi, Zoltan] Univ Melbourne, Natl ICT Australia, Melbourne, Vic 3010, Australia.
   [Somogyi, Zoltan] Univ Melbourne, Dept Comp Sci & Software Engn, Melbourne, Vic 3010, Australia.
C3 KU Leuven; NICTA; University of Melbourne; University of Melbourne
RP Phan, Q (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Celestijnenlaan 200A, B-3001 Louvain, Belgium.
EM quan.leuven@gmail.com; gerda.janssens@cs.kuleuven.be; zs@unimelb.edu.au
RI Janssens, Gerda/N-2662-2013
CR AIKEN A, 1995, SIGPLAN NOTICES, V30, P174, DOI 10.1145/223428.207137
   Aspinall D, 2008, J FUNCT PROGRAM, V18, P141, DOI 10.1017/S0956796807006399
   BAKER HG, 1990, PROCEEDINGS OF THE 1990 ACM CONFERENCE ON LISP AND FUNCTIONAL PROGRAMMING, P218, DOI 10.1145/91556.91652
   Birkedal L., 1996, Conference Record of POPL '96: The 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P171, DOI 10.1145/237721.237771
   BOEHM HJ, 1988, SOFTWARE PRACT EXPER, V18, P807, DOI 10.1002/spe.4380180902
   Bueno R, 2001, LECT NOTES COMPUT SC, V2042, P86
   CHASE DR, 1990, SIGPLAN NOTICES, V25, P296, DOI 10.1145/93548.93585
   Cherem S., 2004, INT S MEMORY MANAGEM, P85, DOI DOI 10.1145/1029873.1029884
   Chin WN, 2004, ACM SIGPLAN NOTICES, V39, P243, DOI 10.1145/996893.996871
   Gay D, 1998, ACM SIGPLAN NOTICES, V33, P313, DOI 10.1145/277652.277748
   Grossman D, 2002, ACM SIGPLAN NOTICES, V37, P282, DOI 10.1145/543552.512563
   Hallenberg N, 2002, ACM SIGPLAN NOTICES, V37, P141, DOI 10.1145/543552.512547
   Henderson Fergus., 2002, P 3 INT S MEMORY MAN, P150, DOI [DOI 10.1145/512429.512449, 10.1145/773039.512449]
   Henglein Fritz., 2001, Proceedings of the 3rd ACM SIGPLAN International Conference on Principles and Practice of Declarative Programming, P175, DOI [10.1145/773184.773203, DOI 10.1145/773184.773203]
   Makholm H, 2002, LECT NOTES COMPUT SC, V2401, P163, DOI 10.1007/3-540-45619-8_12
   Makholm H., 2000, International Symposium on Memory Management (ISMM), P25
   MAKHOLM H, 2000, THESIS U COPENHAGEN
   Mazur N., 2001, Logic Programming. 17th International Conference, ICLP 2001. Proceedings (Lecture Notes in Computer Science Vol.2237), P105
   Mazur N, 2000, LECT NOTES ARTIF INT, V1861, P1255
   MAZUR N, 2004, THESIS KATHOLIEKE U
   Mercury team, 2009, MERC PROGR LANG REF
   Nielson F., 1999, Principles of Program Analysis
   Phan Q, 2007, LECT NOTES COMPUT SC, V4670, P317, DOI 10.1007/978-3-540-74610-2_22
   Phan Q, 2009, PPDP'09: PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING, P161, DOI 10.1145/1599410.1599431
   Phan Q, 2008, ISMM'08: PROCEEDINGS OF THE 2008 INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT, P61
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   Somogyi Z, 2006, LECT NOTES COMPUT SC, V3819, P150
   Steensgaard B., 1996, Conference Record of POPL '96: The 23rd ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P32, DOI 10.1145/237721.237727
   Tofte M, 1997, INFORM COMPUT, V132, P109, DOI 10.1006/inco.1996.2613
   Tofte M., 2004, Higher-Order and Symbolic Computation, V17, P245, DOI 10.1023/B:LISP.0000029446.78563.a4
   Tofte M, 2006, PROGRAMMING REGIONS
NR 31
TC 1
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2013
VL 13
BP 959
EP 1024
DI 10.1017/S1471068412000075
PN 6
PG 66
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 298YL
UT WOS:000330360600002
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Islam, MA
   Ramakrishnan, CR
   Ramakrishnan, IV
AF Islam, Muhammad Asiful
   Ramakrishnan, C. R.
   Ramakrishnan, I. V.
TI Inference in probabilistic logic programs with continuous random
   variables
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
AB Probabilistic Logic Programming (PLP), exemplified by Sato and Kameya's PRISM, Poole's ICL, Raedt et al.'s ProbLog and Vennekens et al.'s LPAD, is aimed at combining statistical and logical knowledge representation and inference. However, the inference techniques used in these works rely on enumerating sets of explanations for a query answer. Consequently, these languages permit very limited use of random variables with continuous distributions. In this paper, we present a symbolic inference procedure that uses constraints and represents sets of explanations without enumeration. This permits us to reason over PLPs with Gaussian or Gamma-distributed random variables (in addition to discrete-valued random variables) and linear equality constraints over reals. We develop the inference procedure in the context of PRISM; however the procedure's core ideas can be easily applied to other PLP languages as well. An interesting aspect of our inference procedure is that PRISM's query evaluation process becomes a special case in the absence of any continuous random variables in the program. The symbolic inference procedure enables us to reason over complex probabilistic models such as Kalman filters and a large subclass of Hybrid Bayesian networks that were hitherto not possible in PLP frameworks.
C1 [Islam, Muhammad Asiful; Ramakrishnan, C. R.; Ramakrishnan, I. V.] SUNY Stony Brook, Dept Comp Sci, Stony Brook, NY 11794 USA.
C3 State University of New York (SUNY) System; State University of New York
   (SUNY) Stony Brook
RP Islam, MA (corresponding author), SUNY Stony Brook, Dept Comp Sci, Stony Brook, NY 11794 USA.
EM maislam@cs.sunysb.edu; cram@cs.sunysb.edu; ram@cs.sunysb.edu
FU NSF [CCF-1018459, CCF-0831298]; ONR [N00014-07-1-0928]; Division Of
   Computer and Network Systems; Direct For Computer & Info Scie & Enginr
   [0831298] Funding Source: National Science Foundation; Division of
   Computing and Communication Foundations; Direct For Computer & Info Scie
   & Enginr [1018459] Funding Source: National Science Foundation
FX We thank the reviewers for valuable comments. This research was
   supported in part by NSF Grants CCF-1018459, CCF-0831298, and ONR Grant
   N00014-07-1-0928.
CR [Anonymous], 2012, THESIS
   [Anonymous], ILP
   [Anonymous], 2007, Introduction to Statistical Relational Learning (Adaptive Computation and Machine Learning)
   Bancilhon F., 1986, P PODS
   Bishop Christopher M, 2006, PATTERN RECOGN, V128, P1
   Chu D, 2007, SENSYS'07: PROCEEDINGS OF THE 5TH ACM CONFERENCE ON EMBEDDED NETWORKED SENSOR SYSTEMS, P175
   FORNEY GD, 1973, P IEEE, V61, P268, DOI 10.1109/PROC.1973.9030
   Friedman N, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P1300
   Goswami A., 2011, SIGCOMM
   Gutmann B., 2010, P ILP
   Gutmann B, 2011, THEOR PRACT LOG PROG, V11, P663, DOI 10.1017/S1471068411000238
   Islam M., 2012, ARXIV E PRINTS
   Islam M., 2011, ARXIV E PRINTS
   Jaffar J, 1998, J LOGIC PROGRAM, V37, P1, DOI 10.1016/S0743-1066(98)10002-X
   Kersting K., 2000, ILP WORK IN PROGR RE
   Lari K., 1990, Computer Speech and Language, V4, P35, DOI 10.1016/0885-2308(90)90022-X
   Muggleton S., 1996, ADV INDUCTIVE LOGIC
   MURPHY KP, 1998, UCBCSD98990
   Narman P., 2010, P EDOC
   POOLE D, 1993, ARTIF INTELL, V64, P81, DOI 10.1016/0004-3702(93)90061-F
   Poole David, 2008, Probabilistic Inductive Logic Programming. Theory and Applications, P222, DOI 10.1007/978-3-540-78652-8_8
   Raedt L. D., 2007, P 20 INT JOINT C ART, P2462
   Richardson M, 2006, MACH LEARN, V62, P107, DOI 10.1007/s10994-006-5833-1
   Riguzzi F, 2010, LEIBNIZ INT PR INFOR, V7, P162, DOI 10.4230/LIPIcs.ICLP.2010.162
   Russell S., 2003, ARFICIAL INTELLIGENC
   Sato T., 1999, J ARTIFICIAL INTELLI, P391
   Sato T., 1997, IJCAI
   Singh A, 2008, SENSYS'08: PROCEEDINGS OF THE 6TH ACM CONFERENCE ON EMBEDDED NETWORKED SENSOR SYSTEMS, P197
   Swift T., 2012, XSB LOGIC PROGRAMMIN
   TAMAKI H, 1986, LECT NOTES COMPUT SC, V225, P84
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P431, DOI 10.1007/978-3-540-27775-0_30
   Vennekens J., 2009, TPLP
   Wang J., 2008, P AAAI
NR 33
TC 13
Z9 14
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2012
VL 12
BP 505
EP 523
DI 10.1017/S1471068412000154
PN 4-5
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 000CV
UT WOS:000308365000006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Haemmerlé, R
AF Haemmerle, Remy
TI Observational equivalences for linear logic concurrent constraint
   languages
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Logic Programming
CT 27th International Conference on Logic Programming
CY 2010
CY JUL 06-10, 2011
CL Lexington, KY
CL Lexington, KY
DE Concurrent Constraint programming; linear logic; observational
   equivalences; bisimulation; pi-calculus; Constraint Handling Rules
ID PI
AB Linear logic Concurrent Constraint programming (LCC) is an extension of concurrent constraint programming (CC), where the constraint system is based on Girard's linear logic instead of the classical logic. In this paper, we address the problem of program equivalence for this programming framework. For this purpose, we present a structural operational semantics for LCC based on a label transition system and investigate different notions of observational equivalences inspired by the state of art of process algebras. Then, we demonstrate that the asynchronous pi-calculus can be viewed as simple syntactical restrictions of LCC. Finally, we show that LCC observational equivalences can be transposed straightforwardly to classical Concurrent Constraint languages and Constraint Handling Rules, and investigate the resulting equivalences.
C1 Tech Univ Madrid, Madrid, Spain.
C3 Universidad Politecnica de Madrid
RP Haemmerlé, R (corresponding author), Tech Univ Madrid, Madrid, Spain.
CR ABADI M, 2000, P 27 ACM S PRINC PRO, P302
   Abdennadher S, 1998, LECT NOTES COMPUT SC, V1520, P25
   Abdennadher S, 1999, LECT NOTES COMPUT SC, V1713, P43
   Ait-Kaci H., 1991, WARRENS ABSTRACT MAC
   Amadio RM, 1998, THEOR COMPUT SCI, V195, P291, DOI 10.1016/S0304-3975(97)00223-5
   [Anonymous], P 14 ANN ACM S PRINC
   BERRY G, 1992, THEOR COMPUT SCI, V96, P217, DOI 10.1016/0304-3975(92)90185-I
   BEST E, 1997, LECT NOTES COMPUTER, V1282, P256
   Buscemi MG, 2007, LECT NOTES COMPUT SC, V4421, P18
   DENICOLA R, 1984, THEOR COMPUT SCI, V34, P83, DOI 10.1016/0304-3975(84)90113-0
   Diaz J. F., 1998, CLEI ELECT J, V1
   Duck GJ, 2004, LECT NOTES COMPUT SC, V3132, P90, DOI 10.1007/978-3-540-27775-0_7
   Duck GJ, 2007, LECT NOTES COMPUT SC, V4670, P224, DOI 10.1007/978-3-540-74610-2_16
   Fages F, 2001, INFORM COMPUT, V165, P14, DOI 10.1006/inco.2000.3002
   Fournet C, 2005, J LOGIC ALGEBR PROGR, V63, P131, DOI 10.1016/j.jlap.2004.01.006
   Fruhwirth T.W., 2009, Constraint Handling Rules
   Gilbert D, 2000, LECT NOTES ARTIF INT, V1861, P463
   GIRARD JY, 1987, THEOR COMPUT SCI, V50, P1, DOI 10.1016/0304-3975(87)90045-4
   HAEMMERLE R, 2011, CLIP52011 UPM TU MAD
   Haemmerlé R, 2007, LECT NOTES COMPUT SC, V4855, P544
   HONDA K, 1995, THEOR COMPUT SCI, V151, P437, DOI 10.1016/0304-3975(95)00074-7
   HUET G, 1980, J ACM, V27, P797, DOI 10.1145/322217.322230
   KAHN K, 1990, P OOPSLA ECOOP 90, P57
   LANEVE C, 1992, LECT NOTES COMPUT SC, V629, P336
   MAHER MJ, 1987, P INT C LOG PROGR IC
   MARTINEZ T, 2010, PPDP, P57
   MILNER R, 1992, LECT NOTES COMPUT SC, V623, P685
   Milner R., 1989, Communication and concurrency
   Parrow J, 1998, THIRTEENTH ANNUAL IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE, PROCEEDINGS, P176
   Ruet P, 1998, LECT NOTES COMPUT SC, V1414, P406, DOI 10.1007/BFb0028028
   SARASWAT VA, 1990, CONFERENCE RECORD OF THE SEVENTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P232, DOI 10.1145/96709.96733
   SARASWAT VA, 1992, HIGHER ORDER LINEAR
   Saraswat Vijay A., 1991, P 18 ACM SIGPLANSIGA, P333, DOI DOI 10.1145/99583.99627
   SOLIMAN S, 2003, 4855 I NAT RECH INF
   TAMURA N, 1998, USERS GUIDE LINEAR L
NR 35
TC 10
Z9 10
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 469
EP 485
DI 10.1017/S1471068411000123
PN 4-5
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cabalar, P
AF Cabalar, Pedro
TI Functional answer set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 24th International Conference on Logic Programming (ICLP)
CY DEC 09-13, 2008
CL Udine, ITALY
SP Assoc Log Programming
DE answer set programming; equilibrium logic; partial functions; functional
   logic programming
ID LOGIC PROGRAMS; REPRESENTATION; SYSTEM
AB In this paper we propose an extension of Answer Set Programming (ASP) to deal with (possibly partial) evaluable functions. To this aim, we start from the most general logical counterpart of ASP, Quantified Equilibrium Logic (QEL), and propose a variant QEL(F)(=) where the set of functions is partitioned into Herbrand functions (or constructors) and evaluable functions (or operations). We show how this extension has a direct connection to Scott's Logic of Existence, and introduce several useful derived operators, some of them directly borrowed from Scott's formalisation. Using this general framework for arbitrary theories, we proceed to focus on a syntactic subclass that corresponds to normal logic programs with evaluable functions and equality. We provide a translation of this class into function-free normal programs and consider a safety condition so that the resulting program is also safe, under the usual meaning in ASP. Finally, we also establish a formal comparison to Lin and Wang's approach (FASP) dealing with evaluable total functions.
C1 Univ A Coruna, Dept Comp Sci, Corunna, Spain.
C3 Universidade da Coruna
RP Cabalar, P (corresponding author), Univ A Coruna, Dept Comp Sci, Corunna, Spain.
EM cabalar@udc.es
RI Cabalar, Pedro/AAE-5198-2020; Carvalho, Pedro/HHN-1424-2022
CR [Anonymous], 1956, Intuitionism an Introduction
   [Anonymous], LOGIC PROGRAMMING PA
   BARRINGER H, 1984, ACTA INFORM, V21, P251, DOI 10.1007/BF00264250
   Bonatti PA, 2004, ARTIF INTELL, V156, P75, DOI [10.1016/j.artint.2004.02.001, 10.1016/j.artint.2004.02.002]
   Cabalar P, 2004, LECT NOTES COMPUT SC, V3229, P294, DOI 10.1007/978-3-540-30227-8_26
   CABALAR P, 2009, P 23 WORKSH CONSTR L, P59
   CABALAR P, 2005, 3 WORKSH ANSW SET PR
   Cabalar P, 2008, LECT NOTES COMPUT SC, V5366, P392, DOI 10.1007/978-3-540-89982-2_36
   Ferraris P, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P372
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   GELFOND, 1988, ICLP, P1070
   GELFOND M, 1993, J LOGIC PROGRAM, V17, P301, DOI 10.1016/0743-1066(93)90035-F
   González-Moreno JC, 1999, J LOGIC PROGRAM, V40, P47, DOI 10.1016/S0743-1066(98)10029-8
   HANUS M, 1994, J LOGIC PROGRAM, V20, P583, DOI 10.1016/0743-1066(94)90034-5
   Hanus M, 2007, LECT NOTES COMPUT SC, V4670, P45, DOI 10.1007/978-3-540-74610-2_5
   Heyting A, 1930, SITZBER PREUSS AKAD, P42
   Lee J, 2009, LECT NOTES COMPUT SC, V5753, P515, DOI 10.1007/978-3-642-04238-6_51
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lifschitz V, 2007, LECT NOTES COMPUT SC, V4483, P188, DOI 10.1007/978-3-540-72200-7_17
   LIN F, 2008, P 11 INT C PRINC KNO, P454
   MCCARTHY J, 1980, ARTIF INTELL, V13, P27, DOI 10.1016/0004-3702(80)90011-9
   NAISH L, 1991, LECT NOTES COMPUT SC, V528, P15
   Pearce D, 2004, LECT NOTES COMPUT SC, V3229, P147, DOI 10.1007/978-3-540-30227-8_15
   PEARCE D, 1996, NON MON EXT LOG PROG
   Pearce D, 2008, LECT NOTES COMPUT SC, V5366, P546, DOI 10.1007/978-3-540-89982-2_46
   Rodríguez-Artalejo M, 2001, LECT NOTES COMPUT SC, V2002, P202
   ROUVEIROL C, 1994, MACH LEARN, V14, P219, DOI 10.1023/A:1022678217288
   SCOTT DS, 1979, LECT NOTES MATH, V753, P660, DOI DOI 10.1007/BFB0061839
   Simkus M, 2007, LECT NOTES ARTIF INT, V4790, P514, DOI 10.1007/978-3-540-75560-9_37
   SYRJANEN T, 2007, LPARSE 1 0 USERS MAN
   SYRJANEN T, 2001, P LPNMR, V2173, P267
NR 31
TC 18
Z9 20
U1 1
U2 10
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2011
VL 11
BP 203
EP 233
DI 10.1017/S1471068410000517
PN 2-3
PG 31
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 729UV
UT WOS:000287977500004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gómez-Zamalloa, M
   Albert, E
   Puebla, G
AF Gomez-Zamalloa, Miguel
   Albert, Elvira
   Puebla, German
TI Test case generation for object-oriented imperative languages in CLP
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE test case generation; symbolic execution; constraint logic programming
ID CONSTRAINT; CHECKING
AB Testing is a vital part of the software development process. Test Case Generation (TCG) is the process of automatically generating a collection of test-cases which are applied to a system under test. White-box TCG is usually performed by means of symbolic execution, i.e., instead of executing the program on normal values (e.g., numbers), the program is executed on symbolic values representing arbitrary values. When dealing with an object-oriented (OO) imperative language, symbolic execution becomes challenging as, among other things, it must be able to backtrack, complex heap-allocated data structures should be created during the TCG process and features like inheritance, virtual invocations and exceptions have to be taken into account. Due to its inherent symbolic execution mechanism, we pursue in this paper that Constraint Logic Programming (CLP) has a promising application field in TCG. We will support our claim by developing a fully CLP-based framework to TCG of an OO imperative language, and by assessing it on a corresponding implementation on a set of challenging Java programs.
C1 [Gomez-Zamalloa, Miguel; Albert, Elvira] Univ Complutense Madrid, DSIC, E-28040 Madrid, Spain.
   [Puebla, German] Tech Univ Madrid UPM, DLSIIS, E-28660 Madrid, Spain.
C3 Complutense University of Madrid; Universidad Politecnica de Madrid
RP Gómez-Zamalloa, M (corresponding author), Univ Complutense Madrid, DSIC, E-28040 Madrid, Spain.
OI GOMEZ-ZAMALLOA GIL, MIGUEL/0000-0003-1557-689X
CR Albert E, 2006, LECT NOTES COMPUT SC, V3901, P115, DOI 10.1007/11680093_8
   Albert E, 2010, PEPM '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION, P25, DOI 10.1145/1706356.1706363
   Albert E, 2009, LECT NOTES COMPUT SC, V5438, P4, DOI 10.1007/978-3-642-00515-2_2
   CHARRETEUR F, JAUT TOOL AUTOMATIC
   Charreteur F, 2009, J SYST SOFTWARE, V82, P1755, DOI 10.1016/j.jss.2009.06.029
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Flanagan C, 2004, SCI COMPUT PROGRAM, V50, P253, DOI 10.1016/j.scico.2004.01.006
   Futamura Y., 1971, Systems, Compurters, Controls, V25, P45
   Gómez-Zamalloa M, 2009, INFORM SOFTWARE TECH, V51, P1409, DOI 10.1016/j.infsof.2009.04.010
   Goodrich M.T., 2003, NET DATASTRUCTURES P
   Gotlieb A., 1998, Software Engineering Notes, V23, P53, DOI 10.1145/271775.271790
   Gotlieb A, 2000, LECT NOTES ARTIF INT, V1861, P399
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Meudec C, 2001, SOFTW TEST VERIF REL, V11, P81, DOI 10.1002/stvr.225
   Müller RA, 2004, Proceedings of the IASTED International Conference on Software Engineering, P365
   SCHRIJVERS T, 2009, 19 INT S LOG BAS PRO, P128
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Vaziri M, 2003, LECT NOTES COMPUT SC, V2619, P505
   Visvanathan S, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P149, DOI 10.1109/ASE.2002.1115007
   Zhao R, 2007, SERA 2007: 5TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT, AND APPLICATIONS, PROCEEDINGS, P545, DOI 10.1109/SERA.2007.64
   Zhu H, 1997, ACM COMPUT SURV, V29, P366, DOI 10.1145/267580.267590
NR 21
TC 16
Z9 16
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 659
EP 674
DI 10.1017/S1471068410000347
PN 4-6
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200020
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Costantini, S
   Provetti, A
AF Costantini, S
   Provetti, A
TI Normal forms for Answer Sets Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; program transformation; normal forms
ID STABLE MODEL SEMANTICS; LOGIC PROGRAMS
AB Normal forms for logic programs under stable/answer set semantics are introduced. We argue that these forms can simplify the study of program properties, mainly consistency. The first normal form, called the kernel of the program, is useful for studying existence and number of answer sets. A kernel program is composed of the atoms which are undefined in the Well-founded semantics, which are those that directly affect the existence of answer sets. The body of rules is composed of negative literals only. Thus, the kernel form tends to be significantly more compact than other formulations. Also, it is possible to check consistency of kernel programs in terms of colorings of the Extended Dependency Graph program representation which we previously developed. The second normal form is called 3-kernel. A 3-kernel program is composed of the atoms which are undefined in the Well-founded semantics. Rules in 3-kernel programs have at most two conditions, and each rule either belongs to a cycle, or defines a connection between cycles. 3-kernel programs may have positive conditions. The 3-kernel normal form is very useful for the static analysis of program consistency, i.e. the syntactic characterization of existence of answer sets. This result can be obtained thanks to a novel graph-like representation of programs, called Cycle Graph which presented in the companion article Costantini (2004b).
C1 Univ Aquila, Dipartimento Informat, I-67100 Laquila, Italy.
   Univ Messina, Dipartimento Fis, I-98166 Messina, Italy.
C3 University of L'Aquila; University of Messina
RP Univ Aquila, Dipartimento Informat, Loc Coppito, I-67100 Laquila, Italy.
EM stefcost@di.univaq.it; ale@unime.it
RI ; Provetti, Alessandro/D-4104-2015
OI COSTANTINI, Stefania/0000-0002-5686-6124; Provetti,
   Alessandro/0000-0001-9542-4110
CR [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   BERTONI A, 2001, P AAAI SPR 2001 S TE, P1
   BRIGNOLI G, 1999, P CIT99 C INF TECHN
   COSTANTINI S, 1995, THEOR COMPUT SCI, V149, P231, DOI 10.1016/0304-3975(94)00259-L
   COSTANTINI S, 2004, P AAAI SPR 2001 S TE, P21
   COSTANTINI S, 2004, 0262003 TRCS U AQ DI
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   MAREK W, 2001, P AAAI SPR 2001 S, P124
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
NR 11
TC 5
Z9 5
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2005
VL 5
BP 747
EP 760
DI 10.1017/S1471068404002339
PN 6
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 987BP
UT WOS:000233493700005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Abdennadher, S
   Rigotti, C
AF Abdennadher, S
   Rigotti, C
TI Automatic generation of CHR constraint solvers
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE rule-based constraint solver; automatic solver generation; tabled
   resolution; constraint logic programming
ID PROPAGATION
AB In this paper, we present a framework for automatic generation of CHR solvers given the logical specification of the constraints. This approach takes advantage of the power of tabled resolution for constraint logic programming, in order to check the validity of the rules. Compared to previous work (Apt and Monfroy 1999; Ringeissen and Monfroy 2000; Abdennadher and Rigotti 2000; Abdennadher and Rigotti 2001a), where different methods for automatic generation of constraint solvers have been proposed, our approach enables the generation of more expressive rules (even recursive and splitting rules) that can be used directly as CHR solvers.
C1 German Univ Cairo, Dept Comp Sci, Cairo, Egypt.
   INSA Lyon, LIRIS Lab, Lyon, France.
C3 Egyptian Knowledge Bank (EKB); German University in Cairo; Institut
   National des Sciences Appliquees de Lyon - INSA Lyon
RP Abdennadher, S (corresponding author), German Univ Cairo, Dept Comp Sci, Cairo, Egypt.
EM slim.abdennadher@guc.edu.eg; Christophe.Rigotti@insa-lyon.fr
CR ABDENNADHER S, 2001, LNCS, V2239, P31
   ABDENNADHER S, 2001, 3 INT C PRINC PRACT, P127
   ABDENNADHER S, 2000, LNCS, V1894, P18
   ABDENNADHER S, 1998, LECT NOTES ARTIF INT, V1495, P1
   APT K, 1998, SPECIAL ISSUE FUNDAM, V34, P295
   Apt KR, 1999, LECT NOTES COMPUT SC, V1713, P58
   Cui BQ, 2000, LECT NOTES ARTIF INT, V1861, P478
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   LEPROVOST T, 1993, J LOGIC PROGRAM, V16, P319, DOI 10.1016/0743-1066(93)90047-K
   Marriott K., 1998, PROGRAMMING CONSTRAI
   MUGGLETON S, 1994, J LOGIC PROGRAM, V20, P629, DOI 10.1016/0743-1066(94)90035-3
   Plotkin G. D., 1970, Machine Intelligence, V5, P153
   RINGEISSEN C, 2000, LECT NOTES ARTIF INT, V1865, P150
   STUCKEY PJ, 1995, INFORM COMPUT, V118, P12, DOI 10.1006/inco.1995.1048
   TAMAKI H, 1986, LECT NOTES COMPUT SC, V225, P84
   Van Hentenryck P, 1998, J LOGIC PROGRAM, V37, P139, DOI 10.1016/S0743-1066(98)10006-7
   WARREN DS, 1992, COMMUN ACM, V35, P93, DOI 10.1145/131295.131299
   WURTZ J, 1996, LNCS, V1137, P377
NR 19
TC 4
Z9 4
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL-SEP
PY 2005
VL 5
BP 403
EP 418
DI 10.1017/S1471068405002371
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 952GZ
UT WOS:000230993300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mocanu, I
   Belle, V
   Juba, B
AF Mocanu, Ionela G.
   Belle, Vaishak
   Juba, Brendan
TI Learnability with PAC Semantics for Multi-agent Beliefs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE multi-agent systems; knowledge acquisition; only-knowing; efficient
   reasoning
ID KNOWLEDGE; LOGIC
AB The tension between deduction and induction is perhaps the most fundamental issue in areas such as philosophy, cognition, and artificial intelligence. In an influential paper, Valiant recognized that the challenge of learning should be integrated with deduction. In particular, he proposed a semantics to capture the quality possessed by the output of probably approximately correct (PAC) learning algorithms when formulated in a logic. Although weaker than classical entailment, it allows for a powerful model-theoretic framework for answering queries. In this paper, we provide a new technical foundation to demonstrate PAC learning with multi-agent epistemic logics. To circumvent the negative results in the literature on the difficulty of robust learning with the PAC semantics, we consider so-called implicit learning where we are able to incorporate observations to the background theory in service of deciding the entailment of an epistemic query. We prove correctness of the learning procedure and discuss results on the sample complexity, that is how many observations we will need to provably assert that the query is entailed given a user-specified error bound. Finally, we investigate under what circumstances this algorithm can be made efficient. On the last point, given that reasoning in epistemic logics especially in multi-agent epistemic logics is PSPACE-complete, it might seem like there is no hope for this problem. We leverage some recent results on the so-called Representation Theorem explored for single-agent and multi-agent epistemic logics with the only knowing operator to reduce modal reasoning to propositional reasoning.
C1 [Mocanu, Ionela G.; Belle, Vaishak] Univ Edinburgh, Edinburgh, Scotland.
   [Juba, Brendan] Washington Univ, St Louis, MO USA.
C3 University of Edinburgh; Washington University (WUSTL)
RP Mocanu, I (corresponding author), Univ Edinburgh, Edinburgh, Scotland.
EM i.g.mocanu@ed.ac.uk; vbelle@ed.ac.uk; bjuba@wustl.edu
OI Belle, Vaishak/0000-0001-5573-8465
CR Albrecht S., 2017, ARTIF INTELL, V258
   [Anonymous], 2007, Introduction to Statistical Relational Learning (Adaptive Computation and Machine Learning)
   [Anonymous], 2016, COLT
   [Anonymous], 2003, Reasoning About Uncertainty, DOI DOI 10.7551/MITPRESS/10951.001.0001
   Bacchus F, 1999, ARTIF INTELL, V111, P171, DOI 10.1016/S0004-3702(99)00031-4
   Baltag A, 2016, The Stanford Encyclopedia of Philosophy
   Belardinelli F., 2007, AAMAS, P1
   Belle V., 2015, IJCAI
   Belle V., 2019, ADV NEURAL INFORM PR, V32, P3381
   Belle V., 2010, ALGOSYN, P16
   Belle V., 2014, J ARTIFICIAL INTELLI, V49
   Bolander T, 2015, LECT NOTES COMPUT SC, V9394, P40, DOI 10.1007/978-3-662-48561-3_4
   de C, 2005, 12 PORT C PROGR ART
   De Raedt Luc., 2011, Encyclopedia of Machine Learning
   Esteban JL, 2001, INFORM COMPUT, V171, P84, DOI 10.1006/inco.2001.2921
   Fabiano F, 2019, ELECTRON P THEOR COM, P403, DOI 10.4204/EPTCS.306.54
   FAGIN R, 1994, J ACM, V41, P340, DOI 10.1145/174652.174658
   Fagin R, 1995, Reasoning about knowledge
   Fan J., 2013, ABS13120144 CORR
   Galil Z., 1977, SIAM Journal on Computing, V6, P444, DOI 10.1137/0206031
   Halpern JY, 1997, COMPUT INTELL-US, V13, P144, DOI 10.1111/0824-7935.00036
   HOEFFDING W, 1963, J AM STAT ASSOC, V58, P13, DOI 10.2307/2282952
   Juba B., 2013, IJCAI, P939
   Juba B., 2012, ABS12090056 CORR
   Juba B, 2015, PROCEEDINGS OF THE 6TH INNOVATIONS IN THEORETICAL COMPUTER SCIENCE (ITCS'15), P93, DOI 10.1145/2688073.2688108
   KEARNS MJ, 1994, MACH LEARN, V17, P115, DOI 10.1007/BF00993468
   Khardon R, 1997, J ACM, V44, P697, DOI 10.1145/265910.265918
   Kullmann O., 1999, TR99041 ECCC
   Lakemeyer G., 2012, ECAI
   Lakemeyer G., 2004, P KR, P516
   Lakemeyer G, 2020, KR2020: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P624
   Levesque H.J., 2001, The Logic of Knowledge Bases
   LEVESQUE HJ, 1990, ARTIF INTELL, V42, P263, DOI 10.1016/0004-3702(90)90056-6
   Liu Y., 2003, Proc. of the 18th Int. Joint Conf. on Artif. Intell. (IJCAI), P83
   Liu YM, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P522
   Liu Yongmei., 2004, PRINCIPLES KNOWLEDGE, P587
   Michael L, 2010, ARTIF INTELL, V174, P639, DOI 10.1016/j.artint.2010.03.004
   Miller T., 2016, P 30 AAAI C ART INT
   Mocanu IG, 2020, FRONT ARTIF INTEL AP, V325, P1152, DOI 10.3233/FAIA200213
   MUGGLETON S, 1994, J LOGIC PROGRAM, V20, P629, DOI 10.1016/0743-1066(94)90035-3
   Muise C, 2022, ARTIF INTELL, V302, DOI 10.1016/j.artint.2021.103605
   Rader AP, 2021, IJCAI
   Rosati R, 2000, ARTIF INTELL, V116, P193, DOI 10.1016/S0004-3702(99)00083-1
   Scherl RB, 2003, ARTIF INTELL, V144, P1, DOI 10.1016/S0004-3702(02)00365-X
   Schwering C, 2019, AAMAS '19: PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS AND MULTIAGENT SYSTEMS, P926
   Valiant L. G., 1984, Communications of the ACM, V27, P1134, DOI 10.1145/1968.1972
   Valiant LG, 2000, ARTIF INTELL, V117, P231, DOI 10.1016/S0004-3702(00)00002-3
   van Ditmarsch H., 2015, ABS150300806 CORR
NR 48
TC 0
Z9 0
U1 1
U2 1
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2023
VL 23
IS 4
SI SI
BP 730
EP 747
AR PII S1471068423000182
DI 10.1017/S1471068423000182
EA JUL 2023
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7Z0
UT WOS:001040070400001
OA Green Accepted, hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Cauteruccio, F
   Terracina, G
AF Cauteruccio, Francesco
   Terracina, Giorgio
TI Extended High-Utility Pattern Mining: An Answer Set Programming-Based
   Framework and Applications
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Early Access
DE high-utility pattern mining; answer set programming; facets; advanced
   utility functions
ID SUBGROUP DISCOVERY
AB Detecting sets of relevant patterns from a given dataset is an important challenge in data mining. The relevance of a pattern, also called utility in the literature, is a subjective measure and can be actually assessed from very different points of view. Rule-based languages like Answer Set Programming (ASP) seem well suited for specifying user-provided criteria to assess pattern utility in a form of constraints; moreover, declarativity of ASP allows for a very easy switch between several criteria in order to analyze the dataset from different points of view. In this paper, we make steps toward extending the notion of High-Utility Pattern Mining; in particular, we introduce a new framework that allows for new classes of utility criteria not considered in the previous literature. We also show how recent extensions of ASP with external functions can support a fast and effective encoding and testing of the new framework. To demonstrate the potential of the proposed framework, we exploit it as a building block for the definition of an innovative method for predicting ICU admission for COVID-19 patients. Finally, an extensive experimental activity demonstrates both from a quantitative and a qualitative point of view the effectiveness of the proposed approach.
C1 [Cauteruccio, Francesco] Polytech Univ Marche, DII, Ancona, Italy.
   [Terracina, Giorgio] Univ Calabria, DEMACS, Arcavacata Di Rende, Italy.
C3 Marche Polytechnic University; University of Calabria
RP Cauteruccio, F (corresponding author), Polytech Univ Marche, DII, Ancona, Italy.
EM f.cauteruccio@univpm.it; terracina@mat.unical.it
RI Cauteruccio, Francesco/ISA-6653-2023
OI Cauteruccio, Francesco/0000-0001-8400-1083
CR Agrawal R., P 20 INT C VERY LARG
   Atzmueller M, 2015, WIRES DATA MIN KNOWL, V5, P35, DOI 10.1002/widm.1144
   Baek Y, 2021, KNOWL-BASED SYST, V212, DOI 10.1016/j.knosys.2020.106596
   Belhadi A, 2020, IEEE ACCESS, V8, P10569, DOI 10.1109/ACCESS.2020.2964682
   Brewka G, 2015, AAAI CONF ARTIF INTE, P1467
   Cagliero L, 2014, EXPERT SYST APPL, V41, P1400, DOI 10.1016/j.eswa.2013.08.039
   CERNOCH R., PROC INDUCTIVE LOGIC, P76
   Chakraborty S., 2020, P ACMIEEE JOINT C DI, P207, DOI DOI 10.1145/3383583.3398541
   Choi HJ, 2019, EXPERT SYST APPL, V115, P27, DOI 10.1016/j.eswa.2018.07.051
   Cuteri B, 2017, THEOR PRACT LOG PROG, V17, P780, DOI 10.1017/S1471068417000254
   del Jesus MJ, 2007, IEEE T FUZZY SYST, V15, P578, DOI 10.1109/TFUZZ.2006.890662
   Demir S, 2019, STUD BIG DATA, V51, P233, DOI 10.1007/978-3-030-04921-8_9
   Deng ZH, 2020, FUTURE GENER COMP SY, V102, P222, DOI 10.1016/j.future.2019.07.039
   Dodaro C, 2020, THEOR PRACT LOG PROG, V20, P225, DOI 10.1017/S1471068418000558
   Eiter T, 2018, KUNSTL INTELL, V32, P187, DOI 10.1007/s13218-018-0535-y
   Eiter T, 2016, THEOR PRACT LOG PROG, V16, P418, DOI 10.1017/S1471068415000113
   Fournier-Viger Philippe, 2020, Trends in Artificial Intelligence Theory and Applications. Artificial Intelligence Practices. 33rd International Conference on Industrial, Engineering and Other Applications of Applied Intelligent Systems, IEA/AIE 2020. Proceedings. Lecture Notes in Artificial Intelligence. Subseries of Lecture Notes in Computer Science (LNAI 12144), P858, DOI 10.1007/978-3-030-55789-8_73
   Fournier-Viger Philippe, 2014, Advances in Knowledge Discovery and Data Mining. 18th Pacific-Asia Conference (PAKDD 2014). Proceedings: LNCS 8443, P40, DOI 10.1007/978-3-319-06608-0_4
   Fournier-Viger P., 2019, High-Utility Pattern Mining
   Gan WS, 2021, IEEE T KNOWL DATA EN, V33, P1306, DOI 10.1109/TKDE.2019.2942594
   Gan WS, 2019, INFORM SCIENCES, V504, P470, DOI 10.1016/j.ins.2019.07.005
   Gebser M., 2016, P 25 INT JOINT C ART, P1497
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   GUNS T., AAAI WORKSHOPS WS, V1607
   Guns T, 2017, ARTIF INTELL, V244, P6, DOI 10.1016/j.artint.2015.09.007
   GUYET T., 2016, ADV KNOWLEDGE DISCOV, V732, P41
   GUYET T., 2014, ARXIV
   Helal S, 2016, J COMPUT SCI TECH-CH, V31, P561, DOI 10.1007/s11390-016-1647-1
   Herrera F, 2011, KNOWL INF SYST, V29, P495, DOI 10.1007/s10115-010-0356-2
   Järvisalo M, 2011, LECT NOTES ARTIF INT, V6645, P304
   Krishnamoorthy S, 2017, EXPERT SYST APPL, V90, P168, DOI 10.1016/j.eswa.2017.08.028
   Lewis-Beck M.S., 2004, SAGE ENCY SOCIAL SCI, DOI [10.4135/9781412950589, 10.4135/978141295058, DOI 10.4135/9781412950589]
   Mannila H, 1997, DATA MIN KNOWL DISC, V1, P241, DOI 10.1023/A:1009796218281
   Negrevergne B, 2013, IEEE DATA MINING, P557, DOI 10.1109/ICDM.2013.92
   Paramonov S, 2019, THEOR PRACT LOG PROG, V19, P505, DOI 10.1017/S1471068418000467
   Pearson K., 1895, P R SOC LOND, V58, P240, DOI [DOI 10.1098/RSPL.1895.0041, 10.1098/rspl.1895.0041]
   SAMET A., 2017, CEUR WORKSHOP PROC, V2085, P51
   Schober P, 2018, ANESTH ANALG, V126, P1763, DOI 10.1213/ANE.0000000000002864
   Shen YD, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P426, DOI 10.1109/ICDM.2002.1183938
   SKRLJ B., PROC 6 INT WORKSHOP, P182
   Soulet A., 2011, Proceedings of the 2011 IEEE 11th International Conference on Data Mining (ICDM 2011), P655, DOI 10.1109/ICDM.2011.100
   Sumalatha S, 2020, EXPERT SYST APPL, V141, DOI 10.1016/j.eswa.2019.112967
   SUVARNA U., SOFT COMPUTING DATA, P803
   Ugarte W, 2017, ARTIF INTELL, V244, P48, DOI 10.1016/j.artint.2015.04.003
   Wu JMT, 2019, ACM T KNOWL DISCOV D, V13, DOI 10.1145/3363571
   Yao H., 2006, P ACM SIGKDD 2 WORKS, P28
   Yun U, 2019, FUTURE GENER COMP SY, V95, P221, DOI 10.1016/j.future.2018.12.029
   Yun U, 2017, KNOWL-BASED SYST, V124, P188, DOI 10.1016/j.knosys.2017.03.016
NR 48
TC 9
Z9 9
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD 2023 APR 19
PY 2023
AR PII S1471068423000066
DI 10.1017/S1471068423000066
EA APR 2023
PG 31
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA E0CQ7
UT WOS:000972322200001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Charalambidis, A
   Nomikos, C
   Rondogiannis, P
AF Charalambidis, Angelos
   Nomikos, Christos
   Rondogiannis, Panos
TI Strong Equivalence of Logic Programs with Ordered Disjunction: A Logical
   Perspective
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE ordered disjunction; strong equivalence; logic of here-and-there; answer
   sets
AB Logic Programs with Ordered Disjunction (LPODs) extend classical logic programs with the capability of expressing preferential disjunctions in the heads of program rules. The initial semantics of LPODs, although simple and quite intuitive, is not purely model-theoretic. As a result, certain properties of programs appear non-trivial to formalize in purely logical terms. For example, the current characterization of strong equivalence for LPODs, does not coincide with logical equivalence in some specific logic. This comes in sharp contrast with the well-known characterization of strong equivalence for classical logic programs, which coincides with logical equivalence in the logic of here-and-there. In this paper we obtain a purely logical characterization of strong equivalence for LPODs as logical equivalence in a four-valued logic. Moreover, we provide a new proof of the coNP-completeness of strong equivalence for LPODs, which has an interest in its own right since it relies on the special structure of such programs. Our results are based on the recent logical semantics of LPODs, a fact which we believe indicates that this new semantics may prove to be a useful tool in the further study of LPODs.
C1 [Charalambidis, Angelos; Rondogiannis, Panos] Natl & Kapodistrian Univ Athens, Dept Informat & Telecommun, Athens, Greece.
   [Nomikos, Christos] Univ Ioannina, Dept Comp Sci & Engn, Ioannina, Greece.
C3 National & Kapodistrian University of Athens; University of Ioannina
RP Charalambidis, A (corresponding author), Natl & Kapodistrian Univ Athens, Dept Informat & Telecommun, Athens, Greece.
EM acharal@iit.demokritos.gr; a.charalambidis@di.uoa.gr; prondo@di.uoa.gr
OI Charalambidis, Angelos/0000-0001-7437-410X
CR Balduccini M., 2003, ANSWER SET PROGRAMMI, V78
   Bernreiter M., 2022, ARTIF INTELL-AMST, V311
   Brewka G, 2004, ARTIF INTELL, V157, P203, DOI 10.1016/j.artint.2004.04.006
   Brewka G, 2004, COMPUT INTELL-US, V20, P335, DOI 10.1111/j.0824-7935.2004.00241.x
   Brewka G, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P100
   Cabalar P, 2011, AI COMMUN, V24, P165, DOI 10.3233/AIC-2011-0494
   Charalambidis A, 2021, THEOR PRACT LOG PROG, V21, P629, DOI 10.1017/S1471068421000235
   Faber W., 2013, P 27 AAAI C ARTIFICI, P297
   Faber W., 2008, P 11 INT C PRINC KNO, P433
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Jorge, 2001, LECT NOTES ARTIF INT, V2258, P306
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lin F., 2002, KR-02, P170
   Pearce D, 1999, APPL LOG SER, V13, P161
   Pearce D, 1997, LECT NOTES ARTIF INT, V1216, P57, DOI 10.1007/BFb0023801
NR 15
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2022
VL 22
IS 5
SI SI
BP 708
EP 722
AR PII S1471068422000242
DI 10.1017/S1471068422000242
EA JUL 2022
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 3T5UT
UT WOS:000819679900001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Tarau, P
AF Tarau, Paul
TI Abductive Reasoning in Intuitionistic Propositional Logic via Theorem
   Synthesis
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE abductive reasoning in intuitionistic logic; theorem synthesis; logic
   programming and automated reasoning; theorem provers for intuitionistic
   propositional logic; implementing sequent calculi in Prolog
AB With help of a compact Prolog-based theorem prover for Intuitionistic Propositional Logic, we synthesize minimal assumptions under which a given formula formula becomes a theorem. After applying our synthesis algorithm to cover basic abductive reasoning mechanisms, we synthesize conjunctions of literals that mimic rows of truth tables in classical or intermediate logics and we abduce conditional hypotheses that turn the theorems of classical or intermediate logics into theorems in intuitionistic logic. One step further, we generalize our abductive reasoning mechanism to synthesize more expressive sequent premises using a minimal set of canonical formulas, to which arbitrary formulas in the calculus can be reduced while preserving their provability. Organized as a self-contained literate Prolog program, the paper supports interactive exploration of its content and ensures full replicability of our results.
C1 [Tarau, Paul] Univ North Texas, Denton, TX 76203 USA.
C3 University of North Texas System; University of North Texas Denton
RP Tarau, P (corresponding author), Univ North Texas, Denton, TX 76203 USA.
EM paul.tarau@unt.edu
CR Denecker M, 2002, LECT NOTES ARTIF INT, V2407, P402
   DYCKHOFF R, 1992, J SYMBOLIC LOGIC, V57, P795, DOI 10.2307/2275431
   Dyckhoff R, 2016, PROG COMPUT SCI APPL, V28, P245, DOI 10.1007/978-3-319-29198-7_6
   Eshghi K., 1989, ICLP, P234
   Gabbay D., 2002, Handbook of philosophical logic, DOI DOI 10.1007/978-94-017-0464-9
   Gabbay D. M., 2000, CEUR WORKSHOP PROC, V32
   Hudelmaier J., 1988, PROLOG PROGRAM INTUI
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   MINTS G, 1992, BIT, V32, P64, DOI 10.1007/BF01995108
   Pearce D, 1997, LECT NOTES ARTIF INT, V1216, P57, DOI 10.1007/BFb0023801
   Pearce D, 2000, LECT NOTES ARTIF INT, V1847, P352
   Tarau P., 2020, LECT NOTES COMPUTER, V12561, P329
   Tarau P, 2020, ELECTRON P THEOR COM, P110, DOI 10.4204/EPTCS.325.18
   Tarau P, 2019, LECT NOTES COMPUT SC, V11372, P115, DOI 10.1007/978-3-030-05998-9_8
NR 14
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2022
VL 22
IS 5
SI SI
BP 693
EP 707
AR PII S1471068422000254
DI 10.1017/S1471068422000254
EA JUN 2022
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 3T5UT
UT WOS:000817775300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alviano, M
   Dodaro, C
   Zamayla, A
AF Alviano, Mario
   Dodaro, Carmine
   Zamayla, Arnel
TI ValAsp: A Tool for Data Validation in Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Answer Set Programming; data validation; secure coding; fail-fast
ID ASP; LANGUAGE; SYSTEM
AB The development of complex software requires tools promoting fail-fast approaches, so that bugs and unexpected behavior can be quickly identified and fixed. Tools for data validation may save the day of computer programmers. In fact, processing invalid data is a waste of resources at best, and a drama at worst if the problem remains unnoticed and wrong results are used for business. Answer Set Programming (ASP) is not an exception, but the quest for better and better performance resulted in systems that essentially do not validate data. Even under the simplistic assumption that input/output data are eventually validated by external tools, invalid data may appear in other portions of the program, and go undetected until some other module of the designed software suddenly breaks. This paper formalizes the problem of data validation for ASP programs, introduces a language to specify data validation, and presents valasp, a tool to inject data validation in ordinary programs. The proposed approach promotes fail-fast techniques at coding time without imposing any lag on the deployed system if data are pretended to be valid. Validation can be specified in terms of statements using YAML, ASP and Python. Additionally, the proposed approach opens the possibility to use ASP for validating data of imperative programming languages.
C1 [Alviano, Mario; Dodaro, Carmine; Zamayla, Arnel] Univ Calabria, Dept Math & Comp Sci, Via P Bucci,Cubo 30B, I-87036 Arcavacata Di Rende, CS, Italy.
C3 University of Calabria
RP Alviano, M (corresponding author), Univ Calabria, Dept Math & Comp Sci, Via P Bucci,Cubo 30B, I-87036 Arcavacata Di Rende, CS, Italy.
EM alviano@mat.unical.it; dodaro@mat.unical.it; zamaylaf@mat.unical.it
RI Alviano, Mario/H-1355-2012
OI Zamayla, Arnel/0000-0002-6822-0574
FU project PRIN "Declarative Reasoning over Streams" [CUP:
   H24I17000080001]; project PON-MISE MAP4ID "Multipurpose Analytics
   Platform 4 Industrial Data" [CUP: B21B19000650008]; project lab LAIA
   (part of SILA); project GNCS-INdAM
FX This work was partially supported by projects PRIN "Declarative
   Reasoning over Streams" (CUP: H24I17000080001), PON-MISE MAP4ID
   "Multipurpose Analytics Platform 4 Industrial Data" (CUP:
   B21B19000650008), lab LAIA (part of SILA), and GNCS-INdAM.
CR Adrian WT, 2018, KUNSTL INTELL, V32, P177, DOI 10.1007/s13218-018-0533-0
   Alviano Mario, 2021, Practical Aspects of Declarative Languages. 23rd International Symposium, PADL 2021. Proceedings. Lecture Notes in Computer Science (LNCS 12548), P90, DOI 10.1007/978-3-030-67438-0_6
   Alviano M., 2020, P ICLP TECHNICAL COM, V325, P93
   Alviano M, 2010, THEOR PRACT LOG PROG, V10, P497, DOI 10.1017/S1471068410000244
   Amendola Giovanni, 2021, Logics in Artificial Intelligence. 17th European Conference, JELIA 2021. Proceedings. Lecture Notes in Artificial Intelligence, Subseries of Lecture Notes in Computer Science (LNAI 12678), P362, DOI 10.1007/978-3-030-75775-5_24
   Balduccini M, 2013, THEOR PRACT LOG PROG, V13, P547, DOI 10.1017/S1471068413000343
   Baselice S, 2010, THEOR PRACT LOG PROG, V10, P481, DOI 10.1017/S1471068410000232
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Calimeri F, 2011, AI COMMUN, V24, P311, DOI 10.3233/AIC-2011-0509
   Cat B. D., 2018, DECLARATIVE LOGIC PR, P279, DOI [10.1145/3191315.3191321, DOI 10.1145/3191315.3191321, DOI 10.1145/3191315]
   Dodaro C., 2011, CILC, P99
   Dodaro C, 2019, THEOR PRACT LOG PROG, V19, P290, DOI 10.1017/S1471068418000492
   Eiter T, 2018, KUNSTL INTELL, V32, P187, DOI 10.1007/s13218-018-0535-y
   Eiter T, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P765
   Fandinno J, 2019, THEOR PRACT LOG PROG, V19, P114, DOI 10.1017/S1471068418000534
   Gebser M, 2008, P 23 NAT C ART INT, V1
   Gebser M, 2020, THEOR PRACT LOG PROG, V20, P176, DOI 10.1017/S1471068419000061
   Gebser M, 2018, KUNSTL INTELL, V32, P181, DOI 10.1007/s13218-018-0528-x
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Hermenegildo M, 2002, LECT NOTES COMPUT SC, V2380, P69
   Johnsson D.B., 2019, SECURE DESIGN
   Kaneiwa K, 2004, ARTIF INTELL, V158, P155, DOI 10.1016/j.artint.2004.05.001
   Kiel R., 1991, Classification, Data Analysis, and Knowledge Organization. Models and Methods with Applications. Proceedings of the 14th Annual Conference of the Gesellschaft fur Klassifikation e.V, P183
   Ko AJ, 2005, J VISUAL LANG COMPUT, V16, P41, DOI 10.1016/j.jvlc.2004.08.003
   Ko AJ, 2003, 200S IEEE SYMPOSIUM ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, P7
   Leone N, 2019, LECT NOTES ARTIF INT, V11481, P312, DOI 10.1007/978-3-030-20528-7_23
   Lierler Y, 2009, LECT NOTES COMPUT SC, V5649, P489, DOI 10.1007/978-3-642-02846-5_40
   Lifschitz V, 2017, THEOR PRACT LOG PROG, V17, P961, DOI 10.1017/S1471068417000345
   Marcopoulos E, 2019, THEOR PRACT LOG PROG, V19, P262, DOI 10.1017/S1471068418000509
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Natella R, 2020, IEEE T SOFTWARE ENG, V46, P280, DOI 10.1109/TSE.2018.2850755
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Oetsch J, 2010, THEOR PRACT LOG PROG, V10, P513, DOI 10.1017/S1471068410000256
   Padhye R, 2019, PROCEEDINGS OF THE 11TH ACM SIGPLAN INTERNATIONAL WORKSHOP ON VIRTUAL MACHINES AND INTERMEDIATE LANGUAGES (VMIL '19), P32, DOI 10.1145/3358504.3361229
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   PRIM RC, 1957, AT&T TECH J, V36, P1389, DOI 10.1002/j.1538-7305.1957.tb01515.x
   Puebla G, 2000, LECT NOTES COMPUT SC, V1870, P63
   Redl C, 2017, LECT NOTES COMPUT SC, V10137, P68, DOI 10.1007/978-3-319-51676-9_5
   Vernon V., 2016, DOMAIN DRIVEN DESIGN
NR 39
TC 0
Z9 0
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2023
VL 23
IS 5
BP 965
EP 985
AR PII S1471068422000084
DI 10.1017/S1471068422000084
EA MAR 2022
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA IE8Z7
UT WOS:000780251500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Liu, FF
   You, JH
AF Liu, Fangfang
   You, Jia-Huai
TI Alternating Fixpoint Operator for Hybrid MKNF Knowledge Bases as an
   Approximator of AFT
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE approximation fixpoint theory; hybrid MKNF knowledge bases; logic
   programs; answer set semantics; description logics; inconsistencies
ID LOGIC PROGRAMS; SEMANTICS
AB Approximation fixpoint theory (AFT) provides an algebraic framework for the study of fixpoints of operators on bilattices and has found its applications in characterizing semantics for various classes of logic programs and nonmonotonic languages. In this paper, we show one more application of this kind: the alternating fixpoint operator by Knorr et al. for the study of the well-founded semantics for hybrid minimal knowledge and negation as failure (MKNF) knowledge bases is in fact an approximator of AFT in disguise, which, thanks to the abstraction power of AFT, characterizes not only the well-founded semantics but also two-valued as well as three-valued semantics for hybrid MKNF knowledge bases. Furthermore, we show an improved approximator for these knowledge bases, of which the least stable fixpoint is information richer than the one formulated from Knorr et al.'s construction. This leads to an improved computation for the well-founded semantics. This work is built on an extension of AFT that supports consistent as well as inconsistent pairs in the induced product bilattice, to deal with inconsistencies that arise in the context of hybrid MKNF knowledge bases. This part of the work can be considered generalizing the original AFT from symmetric approximators to arbitrary approximators.
C1 [Liu, Fangfang] Shanghai Univ, Sch Comp Engn & Sci, Shanghai, Peoples R China.
   [You, Jia-Huai] Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
C3 Shanghai University; University of Alberta
RP Liu, FF (corresponding author), Shanghai Univ, Sch Comp Engn & Sci, Shanghai, Peoples R China.
EM ffliu@shu.edu.cn; jyou@ualberta.ca
CR Amendola G, 2016, ARTIF INTELL, V234, P219, DOI 10.1016/j.artint.2016.01.011
   Antic C, 2013, LECT NOTES COMPUT SC, V8148, P102, DOI 10.1007/978-3-642-40564-8_11
   Bi Y, 2014, LECT NOTES COMPUT SC, V8741, P45, DOI 10.1007/978-3-319-11113-1_4
   Bogaerts B, 2019, AAAI CONF ARTIF INTE, P2686
   Bogaerts B, 2018, ARTIF INTELL, V259, P167, DOI 10.1016/j.artint.2018.03.008
   Bogaerts B, 2018, ARTIF INTELL, V255, P43, DOI 10.1016/j.artint.2017.11.003
   Bogaerts B, 2016, NEW GENERAT COMPUT, V34, P193, DOI 10.1007/s00354-016-0301-3
   Bogaerts B, 2015, THEOR PRACT LOG PROG, V15, P464, DOI 10.1017/S1471068415000162
   Bogaerts B, 2015, ARTIF INTELL, V224, P51, DOI 10.1016/j.artint.2015.03.006
   De Bona G, 2017, ARTIF INTELL, V246, P118, DOI 10.1016/j.artint.2017.02.005
   Denecker M, 2004, INFORM COMPUT, V192, P84, DOI 10.1016/j.ic.2004.02.004
   Denecker M, 2003, ARTIF INTELL, V143, P79, DOI 10.1016/S0004-3702(02)00293-X
   Denecker M, 2000, SPRINGER INT SER ENG, V597, P127
   Denecker M, 2007, LECT NOTES COMPUT SC, V4483, P84, DOI 10.1007/978-3-540-72200-7_9
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Fitting M, 2002, THEOR COMPUT SCI, V278, P25, DOI 10.1016/S0304-3975(00)00330-3
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Ji JM, 2017, THEOR PRACT LOG PROG, V17, P889, DOI 10.1017/S1471068417000291
   Kaminski T, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P3098
   Killen S., 2021, P 18 INT C PRINCIPLE
   Knorr M, 2011, ARTIF INTELL, V175, P1528, DOI 10.1016/j.artint.2011.01.007
   Lifschitz V., 1991, P 12 INT JOINT C ART, P381
   Liu FF, 2019, LECT NOTES COMPUT SC, V11784, P113, DOI 10.1007/978-3-030-31095-0_8
   Liu FF, 2017, ARTIF INTELL, V252, P123, DOI 10.1016/j.artint.2017.08.003
   Markowsky G., 1976, Algebra Universalis, V6, P53, DOI [DOI 10.1007/BF02485815, 10.1007/BF02485815]
   Motik B, 2010, J ACM, V57, DOI 10.1145/1754399.1754403
   Motik B, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P477
   Pearce D, 2008, LECT NOTES COMPUT SC, V5366, P546, DOI 10.1007/978-3-540-89982-2_46
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Sakama C., 1995, Journal of Logic and Computation, V5, P265, DOI 10.1093/logcom/5.3.265
   Strass H, 2013, ARTIF INTELL, V205, P39, DOI 10.1016/j.artint.2013.09.004
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   Vennekens J, 2006, ACM T COMPUT LOG, V7, P765, DOI 10.1145/1183278.1183284
NR 34
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2022
VL 22
IS 2
SI SI
BP 305
EP 334
AR PII S1471068421000168
DI 10.1017/S1471068421000168
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 6M9AN
UT WOS:000889154700006
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Garcia-Contreras, I
   Morales, JF
   Hermenegildo, MV
AF Garcia-Contreras, Isabel
   Morales, Jose F.
   Hermenegildo, Manuel, V
TI Incremental and Modular Context-sensitive Analysis
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE program analysis; incremental analysis; modular analysis; constrained
   Horn clauses; abstract interpretation; fixpoint algorithms; logic and
   constraint programming
ID DATA-FLOW ANALYSIS; ABSTRACT INTERPRETATION; HORN CLAUSES; VERIFICATION;
   DETERMINACY; CIAO
AB Context-sensitive global analysis of large code bases can be expensive, which can make its use impractical during software development. However, there are many situations in which modifications are small and isolated within a few components, and it is desirable to reuse as much as possible previous analysis results. This has been achieved to date through incremental global analysis fixpoint algorithms that achieve cost reductions at fine levels of granularity, such as changes in program lines. However, these fine-grained techniques are neither directly applicable to modular programs nor are they designed to take advantage of modular structures. This paper describes, implements, and evaluates an algorithm that performs efficient context-sensitive analysis incrementally on modular partitions of programs. The experimental results show that the proposed modular algorithm shows significant improvements, in both time and memory consumption, when compared to existing non-modular, fine-grain incremental analysis techniques. Furthermore, thanks to the proposed intermodular propagation of analysis information, our algorithm also outperforms traditional modular analysis even when analyzing from scratch.
C1 [Garcia-Contreras, Isabel; Morales, Jose F.; Hermenegildo, Manuel, V] IMDEA Software Inst, Madrid, Spain.
   [Garcia-Contreras, Isabel; Hermenegildo, Manuel, V] Univ Politecn Madrid UPM, Madrid, Spain.
C3 IMDEA Software Institute; Universidad Politecnica de Madrid
RP Garcia-Contreras, I (corresponding author), IMDEA Software Inst, Madrid, Spain.; Garcia-Contreras, I (corresponding author), Univ Politecn Madrid UPM, Madrid, Spain.
EM isabel.garcia@imdea.org; josef.morales@imdea.org;
   manuel.hermenegildo@imdea.org
RI Morales Caballero, Jose Francisco/JXY-5044-2024; Hermenegildo,
   Manuel/I-4418-2015
OI Morales Caballero, Jose Francisco/0000-0001-9782-8135; Hermenegildo,
   Manuel/0000-0002-7583-323X; Garcia-Contreras, Isabel/0000-0001-6098-3895
FU MINECO MICINN [PID2019-108528RB-C21]; ProCode project, FPU [16/04811];
   Madrid [M141047003, P2018/TCS-4339]
FX Research partially funded by MINECO MICINN PID2019-108528RB-C21 ProCode
   project, FPU grant 16/04811, and the Madrid M141047003 N-GREENS and
   P2018/TCS-4339 BLOQUES-CM programs. We are also grateful to the
   anonymous reviewers, editors, and to Ignacio Fabregas for their
   comments.
CR Acar UmutA., 2009, Proceedings of the 2009 ACM SIGPLAN Workshop on Partial Evaluation and Program Manipulation, P1, DOI DOI 10.1145/1480945
   Albert E, 2007, LECT NOTES COMPUT SC, V4354, P124
   Albert E., 2012, P PEPM12, P25
   Albert E, 2012, THEOR COMPUT SCI, V413, P142, DOI 10.1016/j.tcs.2011.07.009
   [Anonymous], 1990, HDB THEOR COMPUT SCI
   Arzt S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P288, DOI 10.1145/2568225.2568243
   Banda G, 2009, LECT NOTES COMPUT SC, V5438, P55, DOI 10.1007/978-3-642-00515-2_5
   Bjorner N, 2015, LECT NOTES COMPUT SC, V9300, P24, DOI 10.1007/978-3-319-23534-9_2
   Bjorner N, 2013, LECT NOTES COMPUT SC, V7935, P105
   BOSSI A, 1994, THEOR COMPUT SCI, V122, P3, DOI 10.1016/0304-3975(94)90200-3
   BRAEM C, 1994, MIT PS LOG, P457
   BRUYNOOGHE M, 1991, J LOGIC PROGRAM, V10, P91, DOI 10.1016/0743-1066(91)80001-T
   Bueno R, 2001, LECT NOTES COMPUT SC, V2042, P86
   BURKE M, 1990, ACM T PROGR LANG SYS, V12, P341, DOI 10.1145/78969.78963
   Calcagno C, 2011, LECT NOTES COMPUT SC, V6617, P459, DOI 10.1007/978-3-642-20398-5_33
   Carroll M. D., 1988, Conference Record of the Fifteenth Annual ACM Symposium on Principles of Programming Languages, P274, DOI 10.1145/73560.73584
   Codish M., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P451, DOI 10.1145/158511.158703
   Conway CL, 2005, LECT NOTES COMPUT SC, V3576, P449
   COOPER KD, 1984, SIGPLAN NOTICES, V19, P247, DOI 10.1145/502949.502898
   Correasi J, 2006, LECT NOTES COMPUT SC, V3901, P163, DOI 10.1007/11680093_11
   Cousot P, 2002, LECT NOTES COMPUT SC, V2304, P159
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cousot P, 2009, FORM METHOD SYST DES, V35, P229, DOI 10.1007/s10703-009-0089-6
   De Angelis E., 2014, Lecture Notes in Computer Science, V8413, P568, DOI [DOI 10.1007/978-3-642-54862-8_47, 10.1007/978-3-642-54862-8_47]
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Debray S, 1997, LOGIC PROGRAMM, P48
   Dumortier V., 1993, WORKSHOP LP SYNTHESI
   Eichberg M, 2007, LECT NOTES COMPUT SC, V4354, P109
   Fähndrich M, 2011, LECT NOTES COMPUT SC, V6528, P10
   Fedyukovich G, 2016, LECT NOTES COMPUT SC, V9780, P433, DOI 10.1007/978-3-319-41540-6_24
   Gallagher J., 2020, VPT, P50, DOI [10.4204/EPTCS.320.4, DOI 10.4204/EPTCS.320.4]
   Grebenshchikov S, 2012, LECT NOTES COMPUT SC, V7214, P549, DOI 10.1007/978-3-642-28756-5_46
   Gurfinkel A, 2015, LECT NOTES COMPUT SC, V9206, P343, DOI 10.1007/978-3-319-21690-4_20
   Henriksen KS, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P184
   Hermenegildo M, 2000, ACM T PROGR LANG SYS, V22, P187, DOI 10.1145/349214.349216
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Hermenegildo Manuel V., 1995, INT C LOG PROGR, P797
   Hermenegildo MV, 2005, SCI COMPUT PROGRAM, V58, P115, DOI 10.1016/j.scico.2005.02.006
   Jaffar J., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P111, DOI 10.1145/41625.41635
   Jaffar Joxan, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P758, DOI 10.1007/978-3-642-31424-7_61
   Kafle B, 2016, LECT NOTES COMPUT SC, V9779, P261, DOI 10.1007/978-3-319-41528-4_14
   KAHN G, 1987, LECT NOTES COMPUT SC, V247, P22
   Kelly A. D., 1997, Australian Computer Science Communications, V19, P92
   Khedker UP, 2008, LECT NOTES COMPUT SC, V4959, P213
   King A, 2006, LECT NOTES COMPUT SC, V4079, P132, DOI 10.1007/11799573_12
   Krall A, 1995, INT C LOG PROGR INT C LOG PROGR
   KRALL A, 1995, ICLP 95 POST C WORKS ICLP 95 POST C WORKS, P80
   Liqat U., 2016, Foundational and Practical Aspects of Resource Analysis. 4th International Workshop, FOPARA 2015. Revised Selected Papers: LNCS 9964, P81, DOI 10.1007/978-3-319-46559-3_5
   Liqat U, 2014, LECT NOTES COMPUT SC, V8901, P72, DOI 10.1007/978-3-319-14125-1_5
   Lloyd J. W., 2012, Foundations of Logic Programming
   Lopez-Garcia P, 2018, THEOR PRACT LOG PROG, V18, P167, DOI 10.1017/S1471068418000042
   Lopez-Garcia P, 2010, NEW GENERAT COMPUT, V28, P177, DOI 10.1007/s00354-008-0085-1
   Madsen M, 2016, ACM SIGPLAN NOTICES, V51, P194, DOI [10.1145/2908080.2908096, 10.1145/2980983.2908096]
   MARLOWE TJ, 1990, CONFERENCE RECORD OF THE SEVENTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P184, DOI 10.1145/96709.96728
   Marriott K., 1998, PROGRAMMING CONSTRAI
   Méndez-Lojo M, 2008, LECT NOTES COMPUT SC, V4915, P154, DOI 10.1007/978-3-540-78769-3_11
   MUTHUKUMAR K, 1992, J LOGIC PROGRAM, V13, P315, DOI 10.1016/0743-1066(92)90035-2
   MUTHUKUMAR K, 1991, LOGIC PROGRAMM, P49
   Muthukumar K., 1990, ACTDC15390 MICR COMP
   Navas J., 2007, 9 WORKSH FORM TECHN 9 WORKSH FORM TECHN
   Navas J., 2008, 6 NASA LANGLEY FORMA, P29
   Navas J, 2009, ELECTRON NOTES THEOR, V253, P65, DOI 10.1016/j.entcs.2009.11.015
   Perez-Carrasco V., 2020, LNCS
   Plotkin GD, 2004, J LOGIC ALGEBR PROGR, V60-1, P17, DOI 10.1016/j.jlap.2004.03.002
   POLLOCK LL, 1989, IEEE T SOFTWARE ENG, V15, P1537, DOI 10.1109/32.58766
   Puebla, 1996, LNCS, V1145, P270
   Puebla G., 2004, LNCS, V3049, P234
   Ramalingam G., 1993, ACM SIGPLAN SIGACT S
   Reps T., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P49, DOI 10.1145/199448.199462
   ROBINSON JA, 1965, J ACM, V12, P23, DOI 10.1145/321250.321253
   Rosen B. K., 1981, P POPL 1981, P117, DOI [10.1145/567532.567545, DOI 10.1145/567532.567545]
   Rothenberg BC, 2018, LECT NOTES COMPUT SC, V11002, P364, DOI 10.1007/978-3-319-99725-4_22
   RYDER BG, 1988, SCI COMPUT PROGRAM, V11, P1, DOI 10.1016/0167-6423(88)90061-5
   RYDER BG, 1988, ACM T PROGR LANG SYS, V10, P1, DOI 10.1145/42192.42193
   Sery O, 2012, PROCEEDINGS OF THE 12TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2012), P114
   Sharir M., 1978, 2 APPROACHES INTERPR
   Swift T, 2014, THEOR PRACT LOG PROG, V14, P553, DOI 10.1017/S1471068414000209
   Szabó T, 2016, IEEE INT CONF AUTOM, P320, DOI 10.1145/2970276.2970298
   Thakur M., 2020, P27
NR 79
TC 5
Z9 5
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2021
VL 21
IS 2
BP 196
EP 243
AR PII S1471068420000496
DI 10.1017/S1471068420000496
PG 48
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA TH4CP
UT WOS:000672039800003
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Briola, D
   Mascardi, V
   Gioseffi, M
AF Briola, Daniela
   Mascardi, Viviana
   Gioseffi, Massimiliano
TI OntoScene, A Logic-Based Scene Interpreter: Implementation and
   Application in the Rock Art Domain
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Prolog; ontologies; multiagent systems; visual languages; scene
   interpretation
ID FORMALISM; SKETCH; AGENTS
AB We present OntoScene, a framework aimed at understanding the semantics of visual scenes starting from the semantics of their elements and the spatial relations holding between them. OntoScene exploits ontologies for representing knowledge and Prolog for specifying the interpretation rules that domain experts may adopt, and for implementing the SceneInterpreter engine. Ontologies allow the designer to formalize the domain in a reusable way and make the system modular and interoperable with existing multiagent systems, while Prolog provides a solid basis to define complex rules of interpretation in a way that can be affordable even for people with no background in Computational Logics. The domain selected for experimenting OntoScene is that of prehistoric rock art, which provides us with a fascinating and challenging testbed.
C1 [Briola, Daniela] Univ Milano Bicocca, Dept Comp Sci Syst & Commun, Milan, Italy.
   [Mascardi, Viviana; Gioseffi, Massimiliano] Univ Genoa, Dept Informat Bioengn Robot & Syst Engn, Genoa, Italy.
C3 University of Milano-Bicocca; University of Genoa
RP Briola, D (corresponding author), Univ Milano Bicocca, Dept Comp Sci Syst & Commun, Milan, Italy.
EM daniela.briola@unimib.it; viviana.mascardi@unige.it; gmaxsun89@gmail.com
RI Briola, Daniela/AAG-5079-2019
OI Briola, Daniela/0000-0003-1994-8929; MASCARDI,
   VIVIANA/0000-0002-2261-9926
CR Agusti J, 1998, J VISUAL LANG COMPUT, V9, P399, DOI 10.1006/jvlc.1998.0090
   [Anonymous], 1996, HIGH LEVEL VISION OB
   [Anonymous], 2007, Developing Multi-Agent Systems with JADE
   Antanas Laura, 2012, Proceedings of the 1st International Conference on Pattern Recognition Applications and Methods. ICPRAM 2012, P206
   Baader F., 1991, INT WORKSH TERM LOG
   Baldassano C., 2015, THESIS
   Bannour H., 2011, 2011 9th International Workshop on Content-Based Multimedia Indexing (CBMI), P211, DOI 10.1109/CBMI.2011.5972547
   Bianchi N., 2011, ADORANTEN, P70
   Bicknell C., 1913, A guide to the prehistoric rock engravings in the Italian Maritime Alps
   Briola D., 2018, P 19 WORKSHOP FROM O, V2215, P116
   Briola D, 2016, STUD COMPUT INTELL, V616, P25, DOI 10.1007/978-3-319-25017-5_3
   Briola D, 2017, SOFTWARE PRACT EXPER, V47, P1773, DOI 10.1002/spe.2494
   Briola D, 2014, LECT NOTES COMPUT SC, V8740, P217, DOI 10.1007/978-3-319-13695-0_21
   Costagliola G, 2005, PROC INT CONF DOC, P1226, DOI 10.1109/ICDAR.2005.218
   Crimi C., 1991, Journal of Visual Languages and Computing, V2, P333, DOI 10.1016/S1045-926X(05)80003-5
   de Lumley H., 2011, MONTAGNE SACREE BEGO
   de Lumley H, 2009, ANTHROPOLOGIE, V113, P969
   Di Martino B, 2016, SOFTWARE PRACT EXPER, V46, P983, DOI 10.1002/spe.2336
   Donahue J, 2014, PR MACH LEARN RES, V32
   Dovier A, 2005, LECT NOTES COMPUT SC, V3668, P67, DOI 10.1007/11562931_8
   Forestier G, 2008, LECT NOTES COMPUT SC, V4974, P295
   Gerber C., 1999, SELF ORG SOFTWARE
   Guarino N., 2009, HDB ONTOLOGIES, P1, DOI [DOI 10.1007/978-3-540-92673-30, 10.1007/978-3-540-92673-3_0, DOI 10.1007/978-3-540-92673-3_0]
   Guérin C, 2017, INFORM SCIENCES, V378, P109, DOI 10.1016/j.ins.2016.10.032
   Haarslev V, 2000, DIAGRAMMATIC REPRESENTATION AND REASONING, P387
   Haarslev V., 1994, KI-94: Advances in Artificial Intelligence. 18th German Annual Conference on Artificial Intelligence. Proceedings, P142
   Haarslev V, 1999, J VISUAL LANG COMPUT, V10, P421, DOI 10.1006/jvlc.1999.0133
   Hammond T., 2007, ACM SIGGRAPH 2007 CO
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Helm R., 1991, Journal of Visual Languages and Computing, V2, P311, DOI 10.1016/S1045-926X(05)80002-3
   Henderson JM, 1999, ANNU REV PSYCHOL, V50, P243, DOI 10.1146/annurev.psych.50.1.243
   Hill E. F., 2003, Jess in action: Java rule-based systems
   Karp R, 1972, COMPLEXITY COMPUTER, V40, P85, DOI 10.1007/978-3-540-68279-08
   Karttunen L., 1986, 11th International Conference on Computational Linguistics. Proceedings of Coling '86, P74
   Knuth D., 2000, MILLENNIAL PERSPECTI, V1
   Kondo H. M., 2017, PHILOS T, V372, P1714
   Kveraga K, 2014, SCENE VISION: MAKING SENSE OF WHAT WE SEE, P291
   Ladret D., 1991, Journal of Visual Languages and Computing, V2, P163, DOI 10.1016/S1045-926X(05)80028-X
   Li SJ, 2003, ARTIF INTELL, V145, P121, DOI 10.1016/S0004-3702(02)00372-7
   Lifschitz V., 1999, INT C LOG PROGR NONM, P373
   Marr D., 1982, Vision
   Marriott K., 1998, PROGRAMMING CONSTRAI
   Mascardi V, 2014, INT J INNOV COMPUT I, V10, P81
   McGuinness Deborah L, 2004, W3C RECOMM, V10, P10
   MEYER D, 1992, 1992 IEEE INTERNATIONAL CONFERENCE ON COMPUTER DESIGN : VLSI IN COMPUTERS & PROCESSORS, P4, DOI 10.1109/ICCD.1992.276216
   RANDELL DA, 1989, S REPR REAS, P357
   Santosh K. C., 2009, 2009 10th International Conference on Document Analysis and Recognition (ICDAR), P1330, DOI 10.1109/ICDAR.2009.166
   Sikos L., 2017, Description Logics in Multimedia Reasoning
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Wan J, 2014, PROCEEDINGS OF THE 2014 ACM CONFERENCE ON MULTIMEDIA (MM'14), P157, DOI 10.1145/2647868.2654948
   Wittenburg K., 1991, Journal of Visual Languages and Computing, V2, P347, DOI 10.1016/S1045-926X(05)80004-7
   WOOLDRIDGE M, 1995, KNOWL ENG REV, V10, P115, DOI 10.1017/S0269888900008122
NR 52
TC 0
Z9 1
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2020
VL 20
IS 4
BP 456
EP 511
AR PII S1471068419000462
DI 10.1017/S1471068419000462
PG 56
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA OA1TI
UT WOS:000577576500002
OA Green Submitted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Shakerin, F
   Salazar, E
   Gupta, G
AF Shakerin, Farhad
   Salazar, Elmer
   Gupta, Gopal
TI A new algorithm to automate inductive learning of default theories
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming colocated with the
   23rd International Conference on Principles and Practice of Constraint
   Programming / 20th International Conference on Theory and Applications
   of Satisfiability Testing
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google
DE inductive logic programming; non-monotonic logic programming; default
   reasoning; common-sense reasoning; machine learning
AB In inductive learning of a broad concept, an algorithm should be able to distinguish concept examples from exceptions and noisy data. An approach through recursively finding patterns in exceptions turns out to correspond to the problem of learning default theories. Default logic is what humans employ in common-sense reasoning. Therefore, learned default theories are better understood by humans. In this paper, we present new algorithms to learn default theories in the form of non-monotonic logic programs. Experiments reported in this paper show that our algorithms are a significant improvement over traditional approaches based on inductive logic programming. Under consideration for acceptance in TPLP.
C1 [Shakerin, Farhad; Salazar, Elmer; Gupta, Gopal] Univ Texas Dallas, Richardson, TX 75083 USA.
C3 University of Texas System; University of Texas Dallas
RP Shakerin, F (corresponding author), Univ Texas Dallas, Richardson, TX 75083 USA.
EM fxs130430@utdallas.edu; ees101020@utdallas.edu; gupta@utdallas.edu
OI Shakerin, Farhad/0000-0003-2460-3132
FU NSF [1423419]; Div Of Information & Intelligent Systems; Direct For
   Computer & Info Scie & Enginr [1423419] Funding Source: National Science
   Foundation
FX Authors are partially supported by NSF Grant No. 1423419.
CR Albert E., 2013, LECT NOTES COMPUTER, V7844
   BAIN M, 1991, MACHINE LEARNING, P380
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Birnbaum L., 1991, P 8 INT WORKSH ML91
   CATLETT J, 1991, MACHINE LEARNING, P596
   Corapi Domenico, 2012, Inductive Logic Programming. 21st International Conference, ILP 2011. Revised Selected Papers, P91, DOI 10.1007/978-3-642-31951-8_12
   Dimopoulos Y, 1995, LECT NOTES ARTIF INT, V912, P122
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Inoue K, 1997, INT JOINT CONF ARTIF, P176
   Kowalski R. A., 1988, LOG PROGR P 5 INT C, V2
   Kramer S, 2001, RELATIONAL DATA MINING, P262
   Laird J. E., 1988, MACH LEARN P 5 INT C
   Lavrac N., 1995, LECT NOTES COMPUTER, V912
   Marple K., 2012, P LOG BAS PROGR SYNT, P122
   Mitchell T. M., 1980, Readings in machine learning, P184
   Mitchell T. M., 1997, MACHINE LEARNING
   MUGGLETON S, 1995, NEW GENERAT COMPUT, V13, P245, DOI 10.1007/BF03037227
   MUGGLETON S, 1990, NEW GENERAT COMPUT, V8, P295
   Muggleton S., 1988, Proceedings of the Fifth International Conference on Machine Learning, P339
   Nicolas P., 2001, REPRESENTATION INCOM, P160
   Plotkin G. D., 1971, Machine Intelligence Volume 6, P101
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   QUINLAN JR, 1990, MACH LEARN, V5, P239, DOI 10.1007/BF00117105
   Ray O, 2009, J APPL LOGIC, V7, P329, DOI 10.1016/j.jal.2008.10.007
   Sakama C., 2005, ACM Transactions on Computational Logic, V6, P203, DOI 10.1145/1055686.1055687
   Seitzer J., 1997, P IJCAI 97 WORKSH FR
   Singleton P., 2003, Jpl a java interface to prolog
   Srinivasan A., 1996, P 2 INT IND LOG PROG
   Srinivasan A., 2001, The Aleph Manual
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
   Wu XD, 2008, KNOWL INF SYST, V14, P1, DOI 10.1007/s10115-007-0114-2
NR 31
TC 10
Z9 11
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 1010
EP 1026
DI 10.1017/S1471068417000333
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800020
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alviano, M
   Leone, N
AF Alviano, Mario
   Leone, Nicola
TI Complexity and compilation of GZ-aggregates in answer set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
DE answer set programming; aggregates; complexity; compilation
ID LOGIC PROGRAMS; SEMANTICS; SYSTEM
AB Gelfond and Zhang recently proposed a new stable model semantics based on Vicious Circle Principle in order to improve the interpretation of logic programs with aggregates. The paper focuses on this proposal, and analyzes the complexity of both coherence testing and cautious reasoning under the new semantics. Some surprising results highlight similarities and differences versus mainstream stable model semantics for aggregates. Moreover, the paper reports on the design of compilation techniques for implementing the new semantics on top of existing ASP solvers, which eventually lead to realize a prototype system that allows for experimenting with Gelfond-Zhang's aggregates.
C1 [Alviano, Mario; Leone, Nicola] Univ Calabria, Dept Math & Comp Sci, I-87030 Commenda Di Rende, Italy.
C3 University of Calabria
RP Alviano, M (corresponding author), Univ Calabria, Dept Math & Comp Sci, I-87030 Commenda Di Rende, Italy.
RI Alviano, Mario/H-1355-2012; Leone, Nicola/B-1890-2012
OI Leone, Nicola/0000-0002-9742-1252
FU MIUR; Regione Calabria, POR Calabria FESR; National Group for Scientific
   Computation (GNCS-INDAM); Finanziamento Giovani Ricercatori UNICAL
FX This work was partially supported by MIUR within project "SI-LAB BA2KNOW
   - Business Analitycs to Know", and by Regione Calabria, POR Calabria
   FESR 2007-2013, within project "ITravel PLUS" and project "KnowRex".
   Mario Alviano was partly supported by the National Group for Scientific
   Computation (GNCS-INDAM), and by Finanziamento Giovani Ricercatori
   UNICAL.
CR Alviano M., 2015, P 21 INT JOINT C ART
   Alviano M, 2014, THEOR PRACT LOG PROG, V14, P755, DOI 10.1017/S1471068414000325
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P67, DOI 10.1007/978-3-642-40564-8_7
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P54, DOI 10.1007/978-3-642-40564-8_6
   Bartholomew M., 2011, PAPERS 2011 AAAI SPR
   Bomanson J, 2014, LECT NOTES ARTIF INT, V8761, P166, DOI 10.1007/978-3-319-11558-0_12
   Bomanson J, 2013, LECT NOTES COMPUT SC, V8148, P187, DOI 10.1007/978-3-642-40564-8_19
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Eiter T, 2008, ARTIF INTELL, V172, P1495, DOI 10.1016/j.artint.2008.04.002
   Eiter T, 2014, J ARTIF INTELL RES, V49, P269, DOI 10.1613/jair.4175
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Faber W, 2008, THEOR PRACT LOG PROG, V8, P545, DOI 10.1017/S1471068408003323
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Ferraris P, 2011, ACM T COMPUT LOG, V12, DOI 10.1145/1970398.1970401
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gelfond M., 1991, NEW GENERAT COMPUT, V9, P365, DOI DOI 10.1007/BF03037169
   Gelfond M., 1988, LOGIC PROGRAMM, V2, P1070
   Gelfond M, 2014, THEOR PRACT LOG PROG, V14, P587, DOI 10.1017/S1471068414000222
   Janhunen T., 2006, J APPL NONCLASSICAL, V1-2, P35, DOI DOI 10.3166/JANCL.16.35-86
   Lee J, 2009, LECT NOTES COMPUT SC, V5753, P515, DOI 10.1007/978-3-642-04238-6_51
   Liu LG, 2006, J ARTIF INTELL RES, V27, P299, DOI 10.1613/jair.2009
   Liu LN, 2010, ARTIF INTELL, V174, P295, DOI 10.1016/j.artint.2009.11.016
   Pelov N., 2004, THESIS KU LEUVEN
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Shen YD, 2014, ARTIF INTELL, V213, P1, DOI 10.1016/j.artint.2014.05.001
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Son TC, 2007, THEOR PRACT LOG PROG, V7, P355, DOI 10.1017/S1471068406002936
NR 29
TC 13
Z9 13
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 574
EP 587
DI 10.1017/S147106841500023X
PN 4-5
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Caroprese, L
   Trubitsyna, I
   Truszczynski, M
AF Caroprese, Luciano
   Trubitsyna, Irina
   Truszczynski, Miroslaw
TI A Measure of Arbitrariness in Abductive Explanations
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
ID SEMANTICS; KNOWLEDGE; FRAMEWORK
AB We study the framework of abductive logic programming extended with integrity constraints. For this framework, we introduce a new measure of the simplicity of an explanation based on its degree of arbitrariness: the more arbitrary the explanation, the less appealing it is, with explanations having no arbitrariness - they are called constrained - being the preferred ones. In the paper, we study basic properties of constrained explanations. For the case when programs in abductive theories are stratified we establish results providing a detailed picture of the complexity of the problem to decide whether constrained explanations exist.
C1 [Caroprese, Luciano; Trubitsyna, Irina] Univ Calabria, DIMES, I-87036 Cosenza, Italy.
   [Truszczynski, Miroslaw] Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
C3 University of Calabria; University of Kentucky
RP Caroprese, L (corresponding author), Univ Calabria, DIMES, I-87036 Cosenza, Italy.
EM caroprese@deis.unical.it; irina@deis.unical.it; mirek@cs.uky.edu
RI Caroprese, Luciano/AGS-3720-2022; Trubitsyna, Irina/AAY-7265-2020
OI Caroprese, Luciano/0000-0002-0173-0131; TRUBITSYNA,
   Irina/0000-0002-9031-0672
CR [Anonymous], 1973, IJCAI
   [Anonymous], 1990, Abductive inference models for diagnostic problem solving
   Balsa J., 1995, NLULP '95. Proceedings of the Fifth International Workshop on Natural Language Understanding and Logic Programming, P111
   BARAL C, 1994, J LOGIC PROGRAM, V20, P73, DOI 10.1016/0743-1066(94)90025-6
   BYLANDER T, 1991, ARTIF INTELL, V49, P25, DOI 10.1016/0004-3702(91)90005-5
   Caroprese Luciano, 2012, Logics in Artificial Intelligence. Proceedings of the 13th European Conference (JELIA 2012), P134, DOI 10.1007/978-3-642-33353-8_11
   Console L., 1995, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V4, P261, DOI 10.1007/BF00961655
   Console L, 1996, IEEE T KNOWL DATA EN, V8, P690, DOI 10.1109/69.542024
   Denecker M, 2002, LECT NOTES ARTIF INT, V2407, P402
   Denecker M, 1995, J LOGIC COMPUT, V5, P553, DOI 10.1093/logcom/5.5.553
   DUNG PM, 1991, LOGIC PROGRAMM, P3
   Eiter T, 1997, THEOR COMPUT SCI, V189, P129, DOI 10.1016/S0304-3975(96)00179-X
   Eshghi K., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P562
   Eshghi K., 1989, ICLP, P234
   Fraternali P, 1993, P 1 INT WORKSH RUL D, P333
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Inoue K, 1995, INT JOINT CONF ARTIF, P204
   Josephson John R., 1996, Abductive inference: Computation, philosophy, technology
   Kakas A. C., 1992, Journal of Logic and Computation, V2, P719, DOI 10.1093/logcom/2.6.719
   Kakas A. C., 1990, ECAI 90. Proceedings of the 9th European Conference on Artificial Intelligence, P385
   KAKAS AC, 1990, VERY LARGE DATA BASES, P650
   KONOLIGE K, 1992, ARTIF INTELL, V53, P255, DOI 10.1016/0004-3702(92)90073-7
   Maher M, 2005, IEEE S LOG, P397
   MAREK W, 1992, THEOR COMPUT SCI, V103, P365, DOI 10.1016/0304-3975(92)90019-C
   Mayol E., 1999, Advances in Conceptual Modeling. ER'99 Workshop on Evolution and Change in Data Management, Reverse Engineering in Information Systems, and the World Wide Web and Conceptual Modeling. Proceedings (Lecture Notes in Computer Science Vol.1727), P62
   PEIRCE C, 1995, PHILOS WRITING PEIRC, pCH11
   Pereira SD, 2004, LECT NOTES ARTIF INT, V3171, P62
   Satoh K., 1996, ECAI 96. 12th European Conference on Artificial Intelligence, P142
   Selman B., 1990, AAAI-90 Proceedings. Eighth National Conference on Artificial Intelligence, P343
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
NR 30
TC 6
Z9 6
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 665
EP 679
DI 10.1017/S1471068414000271
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200018
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Arbelaez, A
   Truchet, C
   Codognet, P
AF Arbelaez, Alejandro
   Truchet, Charlotte
   Codognet, Philippe
TI Using sequential runtime distributions for the parallel speedup
   prediction of SAT local search
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
DE SAT; local search; parallelism; runtime distributions; statistical
   analysis
ID ALGORITHM; CONFIGURATION; TIME
AB This paper presents a detailed analysis of the scalability and parallelization of local search algorithms for the Satisfiability problem. We propose a framework to estimate the parallel performance of a given algorithm by analyzing the runtime behavior of its sequential version. Indeed, by approximating the runtime distribution of the sequential process with statistical methods, the runtime behavior of the parallel process can be predicted by a model based on order statistics. We apply this approach to study the parallel performance of two SAT local search solvers, namely Sparrow and CCASAT, and compare the predicted performances to the results of an actual experimentation on parallel hardware up to 384 cores. We show that the model is accurate and predicts performance close to the empirical data. Moreover, as we study different types of instances (random and crafted), we observe that the local search solvers exhibit different behaviors and that their runtime distributions can be approximated by two types of distributions: exponential (shifted and non-shifted) and lognormal.
C1 [Arbelaez, Alejandro] Univ Tokyo, JFLI, Tokyo 1138654, Japan.
   [Truchet, Charlotte] Univ Nantes, LINA, UMR 6241, F-44035 Nantes, France.
   [Codognet, Philippe] Univ Tokyo, UPMC, CNRS, JFLI, Tokyo 1138654, Japan.
C3 University of Tokyo; Nantes Universite; Sorbonne Universite; University
   of Tokyo
RP Arbelaez, A (corresponding author), Univ Tokyo, JFLI, Tokyo 1138654, Japan.
EM arbelaez@is.s.u-tokyo.ac.jp; charlotte.truchet@univ-nantes.fr;
   codognet@is.s.u-tokyo.ac.jp
RI Arbelaez, Alejandro/N-1633-2016
OI Arbelaez, Alejandro/0000-0003-1622-5645
FU Japan Society for the Promotion of Science (JSPS) under the JSPS
   Postdoctoral Program; kakenhi
FX The first author was supported by the Japan Society for the Promotion of
   Science (JSPS) under the JSPS Postdoctoral Program and the kakenhi
   Grant-in-aid for Scientific Research.
CR Aiex RM, 2007, OPTIM LETT, V1, P355, DOI 10.1007/s11590-006-0031-4
   Aiex RM, 2002, J HEURISTICS, V8, P343, DOI 10.1023/A:1015061802659
   [Anonymous], 2003, ORDER STAT, DOI DOI 10.1002/0471722162
   [Anonymous], 2000, The mathematica book
   Ansótegui C, 2009, LECT NOTES COMPUT SC, V5732, P142, DOI 10.1007/978-3-642-04244-7_14
   Arbelaez Alejandro, 2011, Learning and Intelligent Optimization. 5th International Conference, LION 5. Selected Papers, P46, DOI 10.1007/978-3-642-25566-3_4
   Arbelaez A., 2013, 13 EUR C EV IN PRESS
   Arbeleaz A., 2012, ICTAI 12 IEEE COMP S, P57
   Babai L., 1979, 7910 DMS U MONTR
   Balint A, 2010, LECT NOTES COMPUT SC, V6175, P10, DOI 10.1007/978-3-642-14186-7_3
   Cai S., 2012, P SAT 2012 TRENT IT, P13
   Hoos H., 2005, Stochastic Local Search
   Hoos H. H., 1998, Uncertainty in Artificial Intelligence. Proceedings of the Fourteenth Conference (1998), P238
   Hoos HH, 1999, ARTIF INTELL, V112, P213, DOI 10.1016/S0004-3702(99)00048-X
   Hutter F, 2009, J ARTIF INTELL RES, V36, P267, DOI 10.1613/jair.2861
   Kroc L, 2010, LECT NOTES COMPUT SC, V6175, P346, DOI 10.1007/978-3-642-14186-7_31
   Luby M., 1993, Proceedings of the 2nd Israel Symposium on Theory and Computing Systems (Cat. No.93TH0520-7), P128, DOI 10.1109/ISTCS.1993.253477
   Maneva E, 2008, THEOR COMPUT SCI, V407, P359, DOI 10.1016/j.tcs.2008.06.053
   Martins R, 2012, CONSTRAINTS, V17, P304, DOI 10.1007/s10601-012-9121-3
   Munoz P, 2012, Res Develop Intell Syst, P137
   Nadarajah S, 2008, STAT PROBABIL LETT, V78, P196, DOI 10.1016/j.spl.2007.05.022
   Pardalos P. M., 1995, Parallel Algorithms for Irregularly Structured Problems. Second International Workshop, IRREGULAR '95. Proceedings, P317
   Pardalos P. M., 1996, 3 INT WORKSH APPL PA
   Pham D. N., 2007, SOLVER DESCRIPTION
   Ribeiro CC, 2012, J GLOBAL OPTIM, V54, P405, DOI 10.1007/s10898-011-9769-z
   Shylo OV, 2011, PARALLEL COMPUT, V37, P60, DOI 10.1016/j.parco.2010.08.004
   Truchet C., 2013, P ICPP 2013 42 INT C
   Van Gelder A, 2011, LECT NOTES COMPUT SC, V6695, P317
   Verhoeven M. G. A., 1995, Journal of Heuristics, V1, P43, DOI 10.1007/BF02430365
   Verhoeven M. G. A., 1996, THESIS U EINDHOVEN E
   Xu L, 2008, J ARTIF INTELL RES, V32, P565, DOI 10.1613/jair.2490
NR 31
TC 4
Z9 4
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 625
EP 639
DI 10.1017/S1471068413000392
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Amato, G
   Scozzari, F
AF Amato, Gianluca
   Scozzari, Francesca
TI Optimality in goal-dependent analysis of Sharing
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE abstract interpretation; logic programming; existentially quantified
   substitutions; unification; matching; sharing
ID ABSTRACT INTERPRETATION; LOGIC PROGRAMS; PARALLELISM; FRAMEWORK
AB We face the problems of correctness, optimality, and precision for the static analysis of logic programs, using the theory of abstract interpretation. We propose a framework with a denotational, goal-dependent semantics equipped With two unification operators for forward Unification (calling a procedure) and backward unification (returning from a procedure). The latter is implemented through a matching operation. Our proposal clarifies and unifies many different frameworks and ideas oil static analysis of logic programming in a single, formal setting. On the abstract side, we focus Oil the domain Sharing by Jacobs and Langen (The Journal of Logic Programming, 1992, vol. 13, nos. 2-3, pp. 291-314) and provide the best correct approximation of all the primitive semantic operators, namely, projection, renaming, and forward and backward unifications. We show that the abstract Unification operators arc strictly more precise than those in the literature defined over the same abstract domain. In some cases, our operators are more precise than those developed for more complex domains involving linearity and freeness.
C1 [Amato, Gianluca; Scozzari, Francesca] Univ G dAnnunzio, Dipartimento Sci, Pescara, Italy.
C3 G d'Annunzio University of Chieti-Pescara
RP Amato, G (corresponding author), Univ G dAnnunzio, Dipartimento Sci, Pescara, Italy.
EM amato@sci.unich.it; scozzari@sci.unich.it
RI Scozzari, Francesca/KCL-0390-2024; Amato, Gianluca/AAI-9505-2020
OI Scozzari, Francesca/0000-0002-2105-4855; Amato,
   Gianluca/0000-0002-6214-5198
CR Amato G, 2003, LECT NOTES COMPUT SC, V2664, P52, DOI 10.1007/3-540-45013-0_6
   AMATO G, 2002, P JOINT C DECL PROGR, P189
   Apt K.R., 1990, HDB THEORETICAL COMP, P495
   Bagnara R, 2005, THEOR PRACT LOG PROG, V5, P1, DOI 10.1017/S1471068404001978
   Bagnara R, 2002, THEOR COMPUT SCI, V277, P3, DOI 10.1016/S0304-3975(00)00312-1
   BOSSI A, 1994, J LOGIC PROGRAM, V20, P149, DOI 10.1016/0743-1066(94)90026-4
   BRUYNOOGHE M, 1991, J LOGIC PROGRAM, V10, P91, DOI 10.1016/0743-1066(91)80001-T
   Codish M, 2000, J LOGIC PROGRAM, V42, P111, DOI 10.1016/S0743-1066(99)00007-2
   Cortesi A, 1996, J LOGIC PROGRAM, V27, P137, DOI 10.1016/0743-1066(95)00123-9
   Cortesi A, 1999, J LOGIC PROGRAM, V38, P371, DOI 10.1016/S0743-1066(98)10026-2
   CORTESI A, 1994, 9411 U PAD DIP MAT P
   COUSOT P, 1992, J LOGIC PROGRAM, V13, P103, DOI 10.1016/0743-1066(92)90030-7
   COUSOT P, 1994, PROCEEDINGS OF THE 1994 INTERNATIONAL CONFERENCE ON COMPUTER LANGUAGES, P95, DOI 10.1109/ICCL.1994.288389
   Cousot P., 1979, 6 ACM S PRINCIPLES P, P269, DOI DOI 10.1145/567752.567778
   FURUKAWA K, 1991, LOGIC PROGRAMMING
   García-Ochoa F, 1998, BIOCHEM ENG J, V1, P1, DOI 10.1016/S1369-703X(97)00002-8
   Giacobazzi R, 2000, J ACM, V47, P361, DOI 10.1145/333979.333989
   HANS W, 1992, 9227 RWTH AACH TU AA
   HENKIN L, 1971, STUDIES LOGIC FDN MA, V115
   HERMENEGILDO MV, 1995, J LOGIC PROGRAM, V22, P1, DOI 10.1016/0743-1066(93)00007-F
   Hill PM, 2004, THEOR PRACT LOG PROG, V4, P289, DOI 10.1017/S1471068403001868
   Howe JM, 2003, THEOR PRACT LOG PROG, V3, P243, DOI 10.1017/S1471068402001497
   JACOBS D, 1992, J LOGIC PROGRAM, V13, P291, DOI 10.1016/0743-1066(92)90034-Z
   King A, 2000, J LOGIC PROGRAM, V46, P139, DOI 10.1016/S0743-1066(00)00009-1
   KING A, 1995, 495 U KENT COMP LAB
   KING A, 1994, LECT NOTES COMPUTER, V788, P363
   LANGEN A, 1990, THESIS U SO CALIFORN
   LECHARLIER B, 1994, ACM T PROGR LANG SYS, V16, P35, DOI 10.1145/174625.174627
   LECHARLIER B, 1991, LOGIC PROGRAMM, P64
   Levi G, 2003, INFORM COMPUT, V182, P14, DOI 10.1016/S0890-5401(02)00048-2
   Lloyd J. W., 2012, Foundations of Logic Programming
   MARRIOTT K, 1994, ACM T PROGR LANG SYS, V16, P607, DOI 10.1145/177492.177650
   MUTHUKUMAR K, 1992, J LOGIC PROGRAM, V13, P315, DOI 10.1016/0743-1066(92)90035-2
   MUTHUKUMAR K, 1991, LOGIC PROGRAMM, P49
   PALAMIDESSI C, 1990, LECT NOTES COMPUT SC, V443, P386
   SHFPHERDSON J, 1994, THEORETICAL COMPUTER, V129, P143
   SONDERGAARD H, 1986, LECT NOTES COMPUT SC, V213, P327
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
NR 38
TC 8
Z9 8
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2009
VL 9
BP 617
EP 689
DI 10.1017/S1471068409990111
PN 5
PG 73
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 499EO
UT WOS:000270200300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Nieves, JC
   Cortés, U
   Osorio, M
AF Nieves, Juan Carlos
   Cortes, Ulises
   Osorio, Mauricio
TI Preferred extensions as stable models
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE preferred semantics; abstract argumentation semantics; stable model
   semantics; minimal models
AB Given an argumentation framework AF, we introduce a mapping function that constructs a disjunctive logic program P, such that the preferred extensions of AF correspond to the stable models of P, after intersecting each stable model with the relevant atoms. The given mapping function is of polynomial size w.r.t. AF.
   In particular, we identify that there is a direct relationship between the minimal models of a propositional formula and the preferred extensions of an argumentation framework by working on representing the defeated arguments. Then we show how to infer the preferred extensions of an argumentation framework by using UNSAT algorithms and disjunctive stable model solvers. The relevance of this result is that we define a direct relationship between one of the most satisfactory argumentation semantics and one of the most successful approach of nonmonotonic reasoning i.e., logic programming with the stable model semantics.
C1 [Nieves, Juan Carlos; Cortes, Ulises] Univ Politecn Cataluna, Software Dept LSI, E-08034 Barcelona, Spain.
   [Osorio, Mauricio] Univ Americas Puebla, CENTIA, Cholula 72820, Mexico.
C3 Universitat Politecnica de Catalunya; Universidad Americas Puebla
   (UDLAP)
RP Nieves, JC (corresponding author), Univ Politecn Cataluna, Software Dept LSI, C Jordi Girona 1-3, E-08034 Barcelona, Spain.
EM jcnieves@lsi.upc.edu; ia@lsi.upc.edu; osoriomauri@googlemail.com
RI Cortés, Ulises/B-7284-2009; Nieves, Juan Carlos/G-1762-2012
OI Cortes, Ulises/0000-0003-0192-3096
CR [Anonymous], 1994, Logic and Structure
   *ASPIC, 2006, ASPIC ARG ENG DEM
   ASPIC: Project, 2005, DEL D2 2 FORM SEM IN
   Ben-Eliyahu-Zohary R, 2005, ARTIF INTELL, V169, P1, DOI 10.1016/j.artint.2005.06.003
   BENCHCAPON TJM, 2002, P NONM REAS, P444
   BESNARD P, 2004, 10 INT WORKSH NONM R, P59
   Bondarenko A, 1997, ARTIF INTELL, V93, P63, DOI 10.1016/S0004-3702(97)00015-5
   Cayrol C, 2003, J LOGIC COMPUT, V13, P377, DOI 10.1093/logcom/13.3.377
   Cortes U, 2005, CATAI 2005, P93
   Dimopoulos Y, 1996, THEOR COMPUT SCI, V170, P209, DOI 10.1016/S0304-3975(96)80707-9
   Dung PM, 2007, ARTIF INTELL, V171, P642, DOI 10.1016/j.artint.2007.05.003
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Dung PM, 2006, ARTIF INTELL, V170, P114, DOI 10.1016/j.artint.2005.07.002
   Dunne PE, 2004, LECT NOTES COMPUT SC, V3229, P360, DOI 10.1007/978-3-540-30227-8_31
   Egly U, 2006, FRONT ARTIF INTEL AP, V144, P133
   GAERTNER D, 2007, ARGUMENTATION NONMON, P80
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P3, DOI 10.1007/978-3-540-72200-7_3
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Leone N, 2002, LECT NOTES ARTIF INT, V2424, P537, DOI 10.1007/3-540-45757-7_50
   NIEVES JC, 2008, LSI086R U POL CAT SO
   Nieves JC, 2006, SEVENTH MEXICAN INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE, PROCEEDINGS, P210
   Osorio M., 2004, THEOR PRACT LOG PROG, V4, P225
   Pollock John, 1995, Cognitive carpentry
   Prakken H., 2002, Handbook of Philosophical Logic, V4, P219
   Ricca F., 2003, APPIA-GULP-PRODE, P263
   TOLCHINSKY P, 2005, P 3 WORKSH AG APPL H
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
NR 27
TC 40
Z9 40
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2008
VL 8
BP 527
EP 543
DI 10.1017/S1471068408003359
PN 4
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 329EM
UT WOS:000257849700003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Berners-Lee, T
   Connolly, D
   Kagal, L
   Scharf, Y
   Hendler, J
AF Berners-Lee, Tim
   Connolly, Dan
   Kagal, Lalana
   Scharf, Yosi
   Hendler, Jim
TI N3Logic: A logical framework for the World Wide Web
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic; Web; semantic web; scoped negation; quoting; RDF; N3
AB The Semantic Web drives toward the use of the Web for interacting with logically interconnected data. Through knowledge models such as Resource Description Framework (RDF), the Semantic Web provides a unifying representation of richly structured data. Adding logic to the Web implies the use of rules to make inferences, choose courses of action, and answer questions. This logic must be powerful enough to describe complex properties of objects but not so powerful that agents can be tricked by being asked to consider a paradox. The Web has several characteristics that can lead to problems when existing logics are used, in particular, the inconsistencies that inevitably arise due to the openness of the Web, where anyone can assert anything. N3Logic is a logic that allows rules to be expressed in a Web environment. It extends RDF with syntax for nested graphs and quantified variables and with predicates for implication and accessing resources on the Web, and functions including cryptographic, string, math. The main goal of N3Logic is to be a minimal extension to the RDF data model such that the same language can be used for logic and data. In this paper, we describe N3Logic and illustrate through examples why it is an appropriate logic for the Web.
C1 [Berners-Lee, Tim; Connolly, Dan; Kagal, Lalana; Scharf, Yosi] MIT, Comp Sci & Artificial Intelligence Lab, Cambridge, MA 02139 USA.
   [Hendler, Jim] Rensselaer Polytech Inst, Troy, NY USA.
C3 Massachusetts Institute of Technology (MIT); Rensselaer Polytechnic
   Institute
RP Berners-Lee, T (corresponding author), MIT, Comp Sci & Artificial Intelligence Lab, 77 Massachusetts Ave, Cambridge, MA 02139 USA.
EM timbl@csail.mit.edu; connolly@csail.mit.edu; lkagal@csail.mit.edu;
   syosi@csail.mit.edu; hendler@cs.rpi.edu
OI Hendler, James/0000-0003-3056-1960; Kagal, Lalana/0000-0001-8469-1993
CR ADIDA B, 2006, RDF PRIMER 1 0 EMBED
   ALTHEIM M, 2005, SCL SIMPLE COMMON LO
   [Anonymous], 2004, DELTA ONTOLOGY DISTR
   APPEL AW, 1999, 6 ACM C COMP COMM SE
   Baader F., 2003, DESCRIPTION LOGIC HD
   BECKETT D, 2006, TURTLE TERSE RDF TRI
   Berners-Lee T, 2000, CWM GEN PURPOSE DATA
   BERNERSLEE T, 2006, N3 BNF
   BERNERSLEE T, 1980, ENQUIRE V 1 1 MANUAL
   BERNERSLEE T, 2005, PRIMER GETTING RDF S
   BERNERSLEE T, 1998, NOTATIONO 3 READABLE
   BRICKLEY D, 1999, FRIEND FRIEND PROJEC
   CARROLL JJ, 2004, RESOURCES DESCRIPTIO
   DUMBILL E, 2002, FINDING FRIENDS XML
   FOUNDATION O, 2007, OPENID
   Gallaire H., 1978, LOGIC DATA BASES
   GENESERETH MR, 1998, NCITST298004 DPANS
   HAZAELMASSIEUX D, 2005, GLEANING RESOURCES D
   Jacobs I., 2004, Architecture of the world wide web
   KAGAL L, 2006, 21 NAT C ART INT BOS
   Kalyanpur A, 2006, J WEB SEMANT, V4, P144, DOI 10.1016/j.websem.2005.10.001
   KOLOVSKI V, 2005, SEM WEB POL WORKSH 4
   PARSIA B, 2005, PYCHINKO RETE BASED
   ROO JD, 2005, EULER PROOF MECH
   SHAPIRO S, 2005, STANFORD ENCY PHILOS
NR 25
TC 93
Z9 99
U1 0
U2 12
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2008
VL 8
BP 249
EP 269
DI 10.1017/S1471068407003213
PN 3
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 304KX
UT WOS:000256109500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Terracina, G
   Leone, N
   Lio, V
   Panetta, C
AF Terracina, G.
   Leone, N.
   Lio, V.
   Panetta, C.
TI Experimenting with recursive queries in database and logic programming
   systems
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE deductive database systems; answer set programming/declarative logic
   programming; recursive queries; benchmarks
AB This article considers the problem of reasoning on massive amounts of (possibly distributed) data. Presently, existing proposals show some limitations: (i) the quantity of data that can be handled contemporarily is limited, because reasoning is generally carried out in main-memory; (ii) the interaction with external (and independent) Database Management Systems is not trivial and, in several cases, not allowed at all; and (iii) the efficiency of present implementations is still not sufficient for their utilization in complex reasoning tasks involving massive amounts of data. This article provides a contribution in this setting; it presents a new system, called DLVDB, which aims to solve these problems. Moreover, it reports the results of a thorough experimental analysis we have carried out for comparing our system with several state-of-the-art systems (both logic and databases) on some classical deductive problems; the other tested systems are LDL++, XSB, Smodels, and three top-level commercial Database Management Systems. DLVDB significantly outperforms even the commercial database systems on recursive queries.
C1 [Terracina, G.; Leone, N.; Lio, V.; Panetta, C.] Univ Calabria, Dipartimento Matemat, I-87030 Arcavacata Di Rende, CS, Italy.
C3 University of Calabria
RP Terracina, G (corresponding author), Univ Calabria, Dipartimento Matemat, Via P Bucci, I-87030 Arcavacata Di Rende, CS, Italy.
EM terracina@mat.unical.it; leone@mat.unical.it; lio@mat.unical.it;
   panetta@mat.unical.it
RI Leone, Nicola/B-1890-2012; , giorgio/ABG-7441-2020
OI , giorgio/0000-0002-3090-7223; Leone, Nicola/0000-0002-9742-1252;
   Panetta, Claudio/0000-0002-0593-7092
CR Abiteboul Serge., 2005, PODS 05, P358, DOI DOI 10.1145/1065167
   *AM NAT STAND I, 1999, 90751999 ANSI ISO IE
   [Anonymous], 1989, Principles of Database and Knowledge-Base Systems
   [Anonymous], 1985, P 5 ACM SIGACT SIGMO, DOI DOI 10.1145/6012.15399
   Apt K.R., 1988, THEORY DECLARATIVE K, P89
   Arni F, 2003, THEOR PRACT LOG PROG, V3, P61, DOI 10.1017/S1471068402001515
   BALBIN I, 1987, J LOGIC PROGRAM, V4, P259, DOI 10.1016/0743-1066(87)90004-5
   BANCILHON F, 1988, FDN DEDUCTIVE DATABA, P439
   BARAL C, 2002, KNOWLEDGE REPRESENTA
   BEERI C, 1991, J LOGIC PROGRAM, V10, P255, DOI 10.1016/0743-1066(91)90038-Q
   Ben-Eliyahu R., 1994, Annals of Mathematics and Artificial Intelligence, V12, P53, DOI 10.1007/BF01530761
   BenEliyahu R, 1996, ANN MATH ARTIF INTEL, V18, P3, DOI 10.1007/BF02136172
   Ceri S., 1990, Logic Programming and Databases, DOI [10.1007/978-3-642-83952-8, DOI 10.1007/978-3-642-83952-8_6]
   DELCARMI T, 2003, P ASP03 ANSW SET PRO, P274
   DELCARMI T, 2003, P 18 INT JOINT C ART, P847
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   Faber W, 1999, LECT NOTES ARTIF INT, V1730, P177, DOI 10.1007/3-540-46767-X_13
   FABER W, 1996, DLV
   Faber W., 1999, Using database optimization techniques for nonmonotonic reasoning, P135
   FABER W, 2001, P 17 INT JOINT C ART, P635
   Gallaire Herve., 1984, ACM COMPUT SURV, V16, P153
   Garcia-Molina Hector., 2000, DATABASE SYSTEM IMPL
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   GIUNCHIGLIA E, 2004, AM ASS ARTIFICIAL IN, P61
   Giunchiglia E, 2006, J AUTOM REASONING, V36, P345, DOI 10.1007/s10817-006-9033-2
   GRANOVETTER M, 1992, ACTA SOCIOL, V35, P3, DOI 10.1177/000169939203500101
   Greco S, 2003, IEEE T KNOWL DATA EN, V15, P368, DOI 10.1109/TKDE.2003.1185840
   KNUTH D, 1994, STANFORD GRAPHBASE A
   LEONE N, 2006, DLV SYSTEM KNOWLEDGE
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Lin FZ, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P112
   LOO B, 2005, P SIGCOMM 05 PHIL, P289
   Lu JJ, 1996, IEEE T KNOWL DATA EN, V8, P773, DOI 10.1109/69.542029
   Mumick IS, 1996, ACM T DATABASE SYST, V21, P107, DOI 10.1145/227604.227624
   Niemela Ilkka., 1997, P 4 INT C LOGIC PROG, P420
   NIMELA I, 2000, P 8 INT WORKSH NON M
   Przymusinski T. C., 1988, F DEDUCTIVE DATABASE, P193
   RAO P, 1997, P LPNMR 97, P430
   ROSS KA, 1990, PROCEEDINGS OF THE NINTH ACM SIGACT-SIGMOD-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P161, DOI 10.1145/298514.298558
   Winslett M, 2006, SIGMOD RECORD, V35, P77
   Zaniolo C., 1997, ADV DATABASE SYSTEMS
NR 42
TC 40
Z9 40
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2008
VL 8
BP 129
EP 165
DI 10.1017/S1471068407003158
PN 2
PG 37
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 280MF
UT WOS:000254430200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tronçon, R
   Janssens, G
   Demoen, B
   Vandecasteele, H
AF Troncon, Remko
   Janssens, Gerda
   Demoen, Bart
   Vandecasteele, Henk
TI Fast frequent querying with lazy control flow compilation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic programming; inductive logic programming; Warren Abstract Machine;
   compilation
AB Control flow compilation is a hybrid between classical WAM compilation and meta-call, limited to the compilation of non-recursive clause bodies. This approach is used successfully for the execution of dynamically generated queries in an inductive logic programming setting (ILP). Control flow compilation reduces compilation times up to an order of magnitude, without slowing down execution. A lazy variant of control flow compilation is also presented. By compiling code by need, it removes the overhead of compiling unreached code (a frequent phenomenon in practical ILP settings), and thus reduces the size of the compiled code. Both dynamic compilation approaches have been implemented and were combined with query packs, an efficient ILP execution mechanism. It turns out that locality of data and code is important for performance. The experiments reported in the paper show that lazy control flow compilation is superior in both artificial and real life settings.
C1 Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
C3 KU Leuven
RP Tronçon, R (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
EM remko@cs.kuleuven.be; gerda@cs.kuleuven.be; bmd@cs.kuleuven.be;
   henkv@cs.kuleuven.be
RI Janssens, Gerda/N-2662-2013
CR *ACE, 2000, ACE DAT MIN SYST
   AITKACI H, 1990, 5 DEC
   Aycock J, 2003, ACM COMPUT SURV, V35, P97, DOI 10.1145/857076.857077
   Blockeel H, 1998, ARTIF INTELL, V101, P285, DOI 10.1016/S0004-3702(98)00034-4
   Blockeel H, 2002, J ARTIF INTELL RES, V16, P135, DOI 10.1613/jair.924
   DAMAS L, 2003, USERS MANUAL
   DEMOEN B, 1999, P 11 BEN WORKSH LOG, P1
   DERAEDT L, 1995, LECT NOTES ARTIF INT, V997, P80
   *DTP, DEV THER PROGRAM
   *HIPP, 2004, HIGH PERF PROL SYST
   RAMON J, 2004, P 13 BELG DUTCH C MA, P95
   Srinivas NR, 1996, J PHARM SCI, V85, P1, DOI 10.1021/js950347d
   Srinivasan A, 1999, LECT NOTES ARTIF INT, V1634, P291
   Srinivasan A., 2001, The Aleph Manual
   TARAU P, 1992, LECT NOTES ARTIF INT, V592, P462
   Tronçon R, 2004, LECT NOTES COMPUT SC, V3132, P240, DOI 10.1007/978-3-540-27775-0_17
   TRONCON R, 2003, INDUCTIVE LOGIC PROG, P105
   TRONCON R, 2003, P CICLOPS 2003 C IMP, P45
   VANDECASTEELE H, 2000, 1 INT C COMP LOGT WO, P103
   Warren D.H.D., 1983, 309 SRI
NR 20
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2007
VL 7
BP 481
EP 498
DI 10.1017/S1471068406002894
PN 4
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 191AY
UT WOS:000248103400003
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Bouajjani, A
   Merceron, A
AF Bouajjani, Ahmed
   Merceron, Agathe
TI Parametric verification of a group membership algorithm
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE formal verification; fault-tolerant protocols; parametric counter
   automata; abstraction
ID AUTOMATA; INFINITE
AB We address the problem of verifying clique avoidance in the TTP protocol. TTP allows several stations embedded in a car to communicate. It has many mechanisms to ensure robustness to faults. In particular, it has an algorithm that allows a station to recognize itself as faulty and leave the communication. This algorithm must satisfy the crucial 'non-clique' property: it is impossible to have two or more disjoint groups of stations communicating exclusively with stations in their own group. In this paper, we propose an automatic verification method for an arbitrary number of stations N and a given number of faults k. We give an abstraction that allows to model the algorithm by means of unbounded (parametric) counter automata. We have checked the non-clique property on this model in the case of one fault, using the ALV tool as well as the LASH tool.
C1 Univ Paris 07, LIAFA, F-75251 Paris 5, France.
   Tech Univ Leonard de Vinci, LIAFA, F-92916 Paris, France.
   Tech Univ Leonard de Vinci, ESILV GI, F-92916 Paris, France.
C3 Universite Paris Cite; Universite Paris Cite
RP Bouajjani, A (corresponding author), Univ Paris 07, LIAFA, Case 7014,2 Pl Jussieu, F-75251 Paris 5, France.
EM abou@liafa.jussieu.fr; Agathe.Merceron@liafa.jussieu.fr
RI Merceron, Agathe/HOA-7552-2023
OI Merceron, Agathe/0000-0003-1015-5359
CR Abdulla PA, 2001, THEOR COMPUT SCI, V256, P145, DOI 10.1016/S0304-3975(00)00105-5
   ABDULLA PA, 1999, LECT NOTES COMPUTER, V1633, P146
   ABDULLA PA, 2001, LECT NOTES COMPUTER, V2154, P1
   ANNICHINI A., 2000, PROC INT C COMPUTER, V1855, P419
   [Anonymous], 1995, Temporal verification of reactive systems-safety
   [Anonymous], LNCS
   Bardin S, 2004, LECT NOTES COMPUT SC, V2988, P576
   Bauer G, 2000, SYM REL DIST SYST, P118, DOI 10.1109/RELDI.2000.885399
   BAUKUS K, 2000, P 5 INT S FORM TECHN, P291
   BENVENISTE A, 1991, P IEEE, V79, P1270, DOI 10.1109/5.97297
   BOIGELOT B, 1994, LECT NOTES COMPUTER, V818, P55, DOI DOI 10.1007/3-540-58179-0_
   Bouajjani A, 1997, LECT NOTES COMPUT SC, V1243, P135
   BOUAJJANI A, 2000, LECT NOTES COMPUTER, V1855, P403, DOI DOI 10.1007/10722167_
   BOUAJJANI A, 2002, LECT NOTES COMPUTER, V2469, P311
   BOUAJJANI A, 1999, THEORETICAL COMPUTER, V221, P221
   BOUAJJANI A, 1997, LECT NOTES COMPUTER, V1256
   Bultan T, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P382, DOI 10.1109/ASE.2001.989834
   BULTAN T, 1998, P INT S SOFTW TEST A, P113
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   CREESE S, 1999, TR199 OXF U PROGR RE
   Delzanno G., 2000, Computer Aided Verification, V1855, P53
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   Katz S, 1997, LECT NOTES COMPUT SC, V1320, P155, DOI 10.1007/BFb0030682
   KESTEN Y, THEORETICAL COMPUTER, V256, P93
   KESTEN Y, 1997, LECT NOTES COMPUTER, V1254
   KOPETZ H, 1999, TTP C PROTOCOL SPECI
   KOPETZ H, 1999, IEEE COMPUT, P14
   *LASH, 2002, LIEG AUT BAS SYMB HA
   PFEIFER H, 2000, IFIP TC6 WG6 1 INT C, P3
   Pnueli A., 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P107
   Steiner W, 2004, 2004 INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P189
   Wolper P, 1998, LECT NOTES COMPUT SC, V1427, P88, DOI 10.1007/BFb0028736
NR 32
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2006
VL 6
BP 321
EP 353
DI 10.1017/S1471068406002663
PN 3
PG 33
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 051EI
UT WOS:000238143400005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Serebrenik, A
   De Schreye, D
AF Serebrenik, A
   De Schreye, D
TI On termination of meta-programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE termination analysis; meta-programming; meta-interpreter
ID LOGIC PROGRAMS; ORDERINGS
AB The term meta-programming refers to the ability of writing programs that have other programs as data and exploit their semantics. The aim of this paper is presenting a methodology allowing us to perform a correct termination analysis for a broad class of practical meta-interpreters, including negation and performing different tasks during the execution. It is based on combining the power of general orderings, used in proving termination of term-rewrite systems and programs, and on the well-known acceptability condition, used in proving termination of logic programs. The methodology establishes a relationship between the ordering needed to prove termination of the interpreted program and the ordering needed to prove termination of the meta-interpreter together with this interpreted program. If such a relationship is established, termination of one of those implies termination of the other one, i.e. the meta-interpreter preserves termination. Among the meta-interpreters that are analysed correctly are a proof trees constructing meta-interpreter, different kinds of tracers and reasoners.
C1 TU, LaQuSo, NL-5600 MB Eindhoven, Netherlands.
   Katholieke Univ Leuven, Dept Comp Sci, B-3001 Heverlee, Belgium.
C3 Eindhoven University of Technology; KU Leuven
RP TU, LaQuSo, Den Dolech 2, NL-5600 MB Eindhoven, Netherlands.
EM a.serebrenik@tue.nl; Denny.DeSchreye@cs.kuleuven.ac.be
RI Serebrenik, Alexander/E-1132-2012; De Schreye, Daniel/B-1755-2014
OI De Schreye, Danny/0000-0002-8423-8598; Serebrenik,
   Alexander/0000-0002-1418-0095
CR [Anonymous], 1994, The Godel Programming Language
   Apt K, 1997, PRENTICE HALL INT SE
   APT KR, 1995, LOGIC PROGRAMMING
   APT KR, 1991, ADV LOGIC PROGRAMMIN, P183
   APT KR, 1996, FUNDAMENTA INFORMATI, V28, P1
   ARORA T, 1993, 3 INT C P DOOD 93, V760, P101
   ARTS T, 1997, THESIS U UTRECHT
   BECKSTEIN C, 1996, P 5 INT WORKSH MET M, P27
   Bossi A, 2002, THEOR PRACT LOG PROG, V2, P263, DOI 10.1017/S1471068402001382
   BOSSI A, 1994, J LOGIC PROGRAM, V20, P149, DOI 10.1016/0743-1066(94)90026-4
   BOSSI A, 1994, LECT NOTES COMPUTER, V850, P269
   Bowen K.A., 1982, Logic Programming, P153
   BOWLES A, 1989, METAPROGRAMMING LOGI, P205
   Brichau J, 2002, LECT NOTES COMPUT SC, V2487, P110
   BROGI A, 1990, P S COMP LOG BAS RES, P117
   Bruynooghe M, 2002, LECT NOTES COMPUT SC, V2477, P477
   BRUYNOOGHE M, 1992, NEW GENERAT COMPUT, V11, P47, DOI 10.1007/BF03037527
   BUENO F, 1994, MIT PS LOG, P320
   Burcham P. M., 1996, ARLMR 337
   Byrd Lawrence., 1980, P 1980 LOGIC PROGRAM, P127
   CHENG MHM, 1989, LOGIC PROGRAMM, P283
   Codish M, 1999, J LOGIC PROGRAM, V41, P103, DOI 10.1016/S0743-1066(99)00006-0
   De Schreye D, 2002, LECT NOTES ARTIF INT, V2407, P187
   DEBRAY SK, 1997, P 14 INT C LOG PROGR, P63
   Decorte S, 1999, ACM T PROGR LANG SYS, V21, P1137, DOI 10.1145/330643.330645
   DECORTE S, 1998, P 1998 JOINT INT C S, P235
   DERSHOWITZ N, 1979, COMMUN ACM, V22, P465, DOI 10.1145/359138.359142
   Dershowitz N, 2001, APPL ALGEBR ENG COMM, V12, P117, DOI 10.1007/s002000100065
   DESCHREYE D, 1992, P INT C 5 GEN COMP S, P481
   GALLAIRE H, 1982, LOGIC PROGRAMM, P153
   GENAIM S, 2002, LNCS, V2294, P126
   Godel K., 1931, Monatshefte fur Mathematik und Physik, V38, P173, DOI 10.1007/BF01700692
   HAMMOND P, 1984, MICRO PROLOG PROGRAM, P294
   Hill P, 1998, Handbook of Logic in Artificial Intelligence and Logic Programming, V5, P421
   HILL PM, 1989, LOGIC PROGRAMM, P23
   JANSEN MJM, 1994, GAME ECON BEHAV, V6, P400, DOI 10.1006/game.1994.1023
   JANSSENS G, 1992, J LOGIC PROGRAM, V13, P205, DOI 10.1016/0743-1066(92)90032-X
   Kowalski Robert, 1979, Logic for Problem Solving
   LAMMA E, 1996, FRONTIERS COMBINING, V3, P267
   Lee CS, 2002, LECT NOTES COMPUT SC, V2487, P218
   LEVI G, 1993, LOGIC PROGRAMM, P354
   MARTENS B, 1995, J LOGIC PROGRAM, V22, P47, DOI 10.1016/0743-1066(94)00015-X
   MARTENS B, 1995, METALOGICS LOGIC PRO, P57
   Mesnard F., 2003, ACM Transactions on Computational Logic, V4, P207, DOI 10.1145/635499.635503
   NAISH L, 1997, WORKSH LOGIC PROGRAM, P1
   Pedreschi D, 1997, J LOGIC COMPUT, V7, P267, DOI 10.1093/logcom/7.2.267
   PFENNING F, 1998, CMUCS98173 CARN MELL
   SEREBRENIK A, 2003, CSPL0110035 CORR
   SHEARD T, 2001, LECT NOTES COMPUTER, V2196, P2
   STERLING L, 1994, ART PROLOG
   VANHARMELEN F, 1989, LOGIC PROGRAMM, P103
   Verbaeten S., 2001, ACM T COMPUT LOG, V2, P57
   VERSCHAETSE K, 1992, THESIS DEP COMP SCI
   [No title captured]
NR 54
TC 10
Z9 10
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2005
VL 5
BP 355
EP 390
DI 10.1017/S1471068404002248
PN 3
PG 36
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 938SI
UT WOS:000230022800003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Schweimeier, R
   Schroeder, M
AF Schweimeier, R
   Schroeder, M
TI A parameterised hierarchy of argumentation semantics for extended logic
   programming and its application to the well-founded semantics
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE non-monotonic reasoning; extended logic programming; argumentation
   semantics; well-founded semantics with explicit negation
ID IMPLEMENTATION
AB Argumentation has proved a useful tool in defining formal semantics for assumption-based reasoning by viewing a proof as a process in which proponents and opponents attack each others arguments by undercuts (attack to an argument's premise) and rebuts (attack to an argument's conclusion). In this paper, we formulate a variety of notions of attack for extended logic programs from combinations of undercuts and rebuts and define a general hierarchy of argumentation semantics parameterised by the notions of attack chosen by proponent and opponent. We prove the equivalence and subset relationships between the semantics and examine some essential properties concerning consistency and the coherence principle, which relates default negation and explicit negation. Most significantly, we place existing semantics put forward in the literature in our hierarchy and identify a particular argumentation semantics for which we prove equivalence to the paraconsistent well-founded semantics with explicit negation, WFSXp. Finally, we present a general proof theory, based on dialogue trees, and show that it is sound and complete with respect to the argumentation semantics.
C1 Camtec Software GmbH, D-12435 Berlin, Germany.
   Tech Univ Dresden, Dept Comp Sci, Dresden, Germany.
C3 Technische Universitat Dresden
RP Schweimeier, R (corresponding author), Camtec Software GmbH, An Treptowers 1, D-12435 Berlin, Germany.
EM schweimeier@yahoo.com; msch@soi.city.ac.uk
RI Schroeder, Michael/A-3040-2010
CR Alferes J. J., 1993, P 2 INT WORKSH LOG P, P334
   ALFERES JJ, 1995, J AUTOM REASONING, V14, P93, DOI 10.1007/BF00883931
   ALFERES JJ, 1996, LNAI, V1111
   [Anonymous], 1997, Journal of Applied Non-Classical Logics, DOI DOI 10.1080/11663081.1997.10510900
   [Anonymous], P 7 INT C LOG PROGR
   [Anonymous], P 4 INT WORKSH AG TH
   ANTONIOU G, 2002, P 15 EUR C ART INT, P521
   Belnap N., 1977, MODERN USES MULTIPLE, P8, DOI [10.1007/978-94-010-1161-7_2, DOI 10.1007/978-94-010-1161-7_2]
   Birkhoff G., 1967, Lattice Theory, V3rd
   Bondarenko A, 1997, ARTIF INTELL, V93, P63, DOI 10.1016/S0004-3702(97)00015-5
   Brewka G, 1996, J ARTIF INTELL RES, V4, P19, DOI 10.1613/jair.284
   Chesñevar CI, 2000, ACM COMPUT SURV, V32, P337, DOI 10.1145/371578.371581
   CHESNEVAR CI, 2002, THEORETICAL COMPUTER, V290, P499
   CHIARIGLIONE L, 1997, SPECIFICATION VERSIO
   Clark K. L., 1978, Logic and data bases, P293
   DAMASIO C, 1996, THESIS U NOVA LISBOA
   Damásio CV, 1998, HANDBOOK OF DEFEASIBLE REASONING AND UNCERTAINTY MANAGEMENT SYSTEMS, VOL 2, P241
   Damasio CV, 1997, LECT NOTES ARTIF INT, V1265, P353
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   DUNG PM, 1993, P 10 INT C LOG PROGR, P616
   FININ T., 1994, P 3 INT C INFORM KNO, P456
   FREIRE J, 1997, INT WORKSH LOG PROGR, P431
   GARCIA AJ, 2004, THEORY PRACTIC LOGIC, V4, P1
   GARCIA AJ, 1998, ECAI 98 WORKSH PRACT
   Gelfond M., 1990, P 7 INT C LOG PROGR, P579
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Jakobovits H, 1999, J LOGIC COMPUT, V9, P215, DOI 10.1093/logcom/9.2.215
   JAKOBOVITS H, 1999, P 7 INT C ART INT LA, P53
   Kakas AC, 1999, J LOGIC COMPUT, V9, P515, DOI 10.1093/logcom/9.4.515
   KAKAS AC, 2002, P ICLP WORKSH COMP L
   Kraus S, 1998, ARTIF INTELL, V104, P1, DOI 10.1016/S0004-3702(98)00078-2
   MORA IA, 1998, P 14 BRAZ S ART INT, P161
   Parsons S, 1998, J LOGIC COMPUT, V8, P261, DOI 10.1093/logcom/8.3.261
   Parsons S., 1996, Proceedings of the Second International Conference on Multiagent Systems, P267
   PEREIRA LM, 1992, ECAI 92 - 10TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE : PROCEEDINGS, P102
   POLLOCK JL, 1987, COGNITIVE SCI, V11, P481, DOI 10.1207/s15516709cog1104_4
   SADRI F, 2001, P AISB S INF AG EC
   SCHRODER M, 1999, LNAI
   SCHWEIMEIER R, 2002, P 15 EUR C ART INT, P536
   SIMARI GR, 1992, ARTIF INTELL, V53, P125, DOI 10.1016/0004-3702(92)90069-A
   SIMARI GR, 1994, ANAL 14 C INT SOC CH
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   Torroni P., 2002, Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems, P1223
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Vreeswijk GAW, 1997, ARTIF INTELL, V90, P225, DOI 10.1016/S0004-3702(96)00041-0
   WAGNER G, 1994, LNAI, V764
NR 46
TC 8
Z9 8
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2005
VL 5
BP 207
EP 242
DI 10.1017/S147106840400225X
PN 1-2
PG 36
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 903EN
UT WOS:000227408400007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Franceschet, M
   Montanari, A
AF Franceschet, M
   Montanari, A
TI Temporalized logics and automata for time granularity
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 2nd International Workshop on Verification and Computational Logic (VCL
   2001)
CY SEP 04, 2001
CL Florence, ITALY
DE time granularity; temporal logic; automata theory
ID INTERVALS; LANGUAGE
AB The ability of providing and relating temporal representations at different 'grain levels' of the same reality is an important research theme in computer science and a major requirement for many applications, including formal specification and verification, temporal databases, data mining, problem solving, and natural language understanding. In particular, the addition of a granularity dimension to a temporal logic makes it possible to specify in a concise way reactive systems whose behaviour can be naturally modeled with respect to a (possibly infinite) set of differently-grained temporal domains. Suitable extensions of the monadic second-order theory of k successors have been proposed in the literature to capture the notion of time granularity. In this paper, we provide the monadic second-order theories of downward unbounded layered structures, which are infinitely refinable structures consisting of a coarsest domain and an infinite number of finer and finer domains, and of upward unbounded layered structures, which consist of a finest domain and an infinite number of coarser and coarser domains, with expressively complete and elementarily decidable temporal logic counterparts. We obtain such a result in two steps. First, we define a new class of combined automata, called temporalized automata, which can be proved to be the automata-theoretic counterpart of temporalized logics, and show that relevant properties, such as closure under Boolean operations, decidability, and expressive equivalence with respect to temporal logics, transfer from component automata to temporalized ones. Then, we exploit the correspondence between temporalized logics and automata to reduce the task of finding the temporal logic counterparts of the given theories of time granularity to the easier one of finding temporalized automata counterparts of them.
C1 Univ G dAnnunzio, Dept Sci, Pescara, Italy.
   Univ Udine, Dept Math & Comp Sci, I-33100 Udine, Italy.
C3 G d'Annunzio University of Chieti-Pescara; Italfarmaco; University of
   Udine
RP Univ G dAnnunzio, Dept Sci, Pescara, Italy.
EM francesc@sci.unich.it; montana@dimi.uniud.it
CR AGRAWAL R, 1995, PROC INT CONF DATA, P3, DOI 10.1109/ICDE.1995.380415
   [Anonymous], LOGIC J IGPL
   [Anonymous], LOGIC J IGPL
   [Anonymous], ILLC DISSERTATION SE
   [Anonymous], 1990, HDB THEORETICAL COMP
   [Anonymous], 2003, Studies in logic and the foundations of mathematics
   [Anonymous], RES LANGUAGE COMPUTA
   [Anonymous], LECT NOTES COMPUTER
   Bettini C., 1996, Proceedings Third International Workshop on Temporal Representation and Reasoning (TIME'96), P104, DOI 10.1109/TIME.1996.555688
   Bettini C, 1998, IEEE T KNOWL DATA EN, V10, P222, DOI 10.1109/69.683754
   BETTINI C, 1996, P ACM SIGACT SIGMOD, V15, P68
   BLACKBURN P, 2003, STUDIES LOGIC LANGUA
   Chandra R., 1994, Proceedings. The 10th International Conference Data Engineering (Cat. No.94CH3383-7), P264, DOI 10.1109/ICDE.1994.283040
   CIAPESSONI E, 1993, SCI COMPUT PROGRAM, V20, P141, DOI 10.1016/0167-6423(93)90025-K
   Combi C, 2002, NINTH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P134, DOI 10.1109/TIME.2002.1027486
   Combi C, 2001, VLDB J, V9, P294, DOI 10.1007/s007780100033
   Corsetti E., 1991, Proceedings of the Sixth International Workshop on Software Specification and Design (Cat. No.91TH0388-9), P92, DOI 10.1109/IWSSD.1991.213072
   CORSETTI E, 1991, REAL-TIME SYST, V3, P191, DOI 10.1007/BF00365335
   COURCOUBETIS C, 1991, LECT NOTES COMPUT SC, V531, P233, DOI 10.1007/BFb0023737
   Cukierman D, 1998, COMPUT INTELL-US, V14, P563, DOI 10.1111/0824-7935.00075
   DAM M, 1994, THEOR COMPUT SCI, V126, P77, DOI 10.1016/0304-3975(94)90269-0
   Dreyer W., 1994, SIGMOD Record, V23, P10, DOI 10.1145/181550.181553
   Dyreson C. E., 1995, TSQL2 TEMPORAL QUERY, P347
   Emerson E. A., 1990, Handbook of Theoretical Computer Science, VB, P995, DOI [10.1016/b978-0-444-88074-1.50021-4, DOI 10.1016/B978-0-444-88074-1.50021-4]
   Euzenat J, 1995, INT JOINT CONF ARTIF, P894
   Fiadeiro J. L., 1994, Temporal Logic. First International Conference, ICTL '94 Proceedings, P48, DOI 10.1007/BFb0013980
   Finger M., 1992, Journal of Logic, Language and Information, V1, P203, DOI 10.1007/BF00156915
   FOSTER D, 1986, P AM NAT C ART INT, P367
   FRANCESCHET M, 2001, P INT WORKSH METH MO
   FRANCESCHET M, 2002, THESIS U UDINE
   FRANCESCHET M, 2002, COMPUT J, V45, P683
   FRANCESCHET M, 2000, P 3 INT C TEMP LOG I, P65
   Frantzen M, 2001, USENIX ASSOCIATION PROCEEDINGS OF THE 10TH USENIX SECURITY SYMPOSIUM, P55
   FUM D, 1989, P INT C ART INT INF, P37
   GABBAY D, 2000, STUDIES LOGIC COMPUT, V7
   HALPERN JY, 1991, J ACM, V38, P935, DOI 10.1145/115234.115351
   IMMERMAN N, 1989, INFORM COMPUT, V83, P121, DOI 10.1016/0890-5401(89)90055-2
   JAJODIA S, 1993, TEMPORAL DATABASES T, P563
   JAJODIA S, 1995, INFORMATION SCI, V82, P103
   Jard C., 1990, Automatic Verification Methods for Finite State Systems. International Workshop Proceedings, P189
   KAMP H, 2001, HOW SAY IT HAPPENS
   Kupferman O, 2000, J ACM, V47, P312, DOI 10.1145/333979.333987
   LADKIN P, 1987, INT JOINT C ART INT, P462
   LAMPORT L, 1985, 8 SRC
   MANNILA H, 1995, P INT C KNOWL DISC D
   Montanari A, 2002, LECT NOTES ARTIF INT, V2424, P259, DOI 10.1007/3-540-45757-7_22
   Montanari A., 2002, Journal of Logic and Computation, V12, P641, DOI 10.1093/logcom/12.4.641
   Montanari A., 1996, Notre Dame Journal of Formal Logic, V37, P260, DOI 10.1305/ndjfl/1040046089
   MONTANARI A, 1992, FIFTH GENERATION COMPUTER SYSTEMS 1992, VOLS 1 AND 2, P702
   Montanari A., 1993, Temporal Databases: theory, design, and implementation, P534
   MOSZKOWSKI B, 1983, THESIS U STANFORD
   Mota E., 1996, Proceedings Third International Workshop on Temporal Representation and Reasoning (TIME'96), P72, DOI 10.1109/TIME.1996.555684
   NIEZETTE M, 1993, LECT NOTES COMPUTER, V752, P161
   Ning P, 2002, ANN MATH ARTIF INTEL, V36, P5, DOI 10.1023/A:1015835418881
   POESIO M, 1991, PROCEEDINGS : NINTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P253
   Segev A., 1993, Advanced database systems, P191
   Shahar Y., 1996, Proceedings Third International Workshop on Temporal Representation and Reasoning (TIME'96), P64, DOI 10.1109/TIME.1996.555683
   Vardi M. Y., 1986, Proceedings of the Symposium on Logic in Computer Science (Cat. No.86CH2321-8), P332
   VARDI MY, 1994, INFORM COMPUT, V115, P1, DOI 10.1006/inco.1994.1092
   Venema Y., 1991, Journal of Logic and Computation, V1, P453, DOI 10.1093/logcom/1.4.453
   Wang XS, 1997, ACM T DATABASE SYST, V22, P115, DOI 10.1145/249978.249979
   Wijsen J, 1999, ACM T DATABASE SYST, V24, P127, DOI 10.1145/310701.310715
   Wijsen J, 1998, INFORM SYST, V23, P463, DOI 10.1016/S0306-4379(98)00023-4
   WOLPER P, 1983, INFORM CONTROL, V56, P72, DOI 10.1016/S0019-9958(83)80051-5
   Zhou CC, 1998, LECT NOTES COMPUT SC, V1536, P584, DOI 10.1007/3-540-49213-5_23
NR 65
TC 6
Z9 6
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP-NOV
PY 2004
VL 4
BP 621
EP 658
DI 10.1017/S147106840400208X
PN 5-6
PG 38
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 861VZ
UT WOS:000224448000004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mascardi, V
   Martelli, M
   Sterling, L
AF Mascardi, V
   Martelli, M
   Sterling, L
TI Logic-based specification languages for intelligent software agents
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Review
DE agent-oriented software engineering; logic-based language; multiagent
   system
ID HETEROGENEOUS ACTIVE AGENTS; PROGRAMMING LANGUAGE; FRAMEWORK
AB The research field of Agent-Oriented Software Engineering (AOSE) aims to find abstractions, languages, methodologies and toolkits for modeling, verifying, validating and prototyping complex applications conceptualized as Multiagent Systems (MASs). A very lively research sub-field studies how formal methods can be used for AOSE. This paper presents a detailed survey of six logic-based executable agent specification languages that have been chosen for their potential to be integrated in our ARPEGGIO project, an open framework for specifying and prototyping a MAS. The six languages are ConGolog, AGENT-O, the IMPACT agent programming language, DyLOG, Concurrent METATEM and E-hhf. For each executable language, the logic foundations are described and an example of use is shown. A comparison of the six languages and a survey of similar approaches complete the paper, together with considerations of the advantages of using logic-based languages in MAS modeling and prototyping.
C1 Univ Genoa, DISI, I-16146 Genoa, Italy.
   Univ Melbourne, Dept Comp Sci & Software Engn, Melbourne, Vic 3010, Australia.
C3 University of Genoa; University of Melbourne
RP Univ Genoa, DISI, Via Dodecaneso 35, I-16146 Genoa, Italy.
EM mascardi@disi.unige.it; martelli@disi.unige.it; leon@cs.mu.oz.au
CR Alchourron C.E., 1971, NORMATIVE SYSTEMS
   Alferes JJ, 2002, LECT NOTES ARTIF INT, V2424, P50, DOI 10.1007/3-540-45757-7_5
   Alferes JJ, 2002, ARTIF INTELL, V138, P87, DOI 10.1016/S0004-3702(02)00183-2
   [Anonymous], LECT NOTES ARTIFICIA
   [Anonymous], 2000, Reasoning About Rational Agents
   [Anonymous], 1984, Handbook of Philosophical Logic
   [Anonymous], P 12 INT JOINT C ART
   [Anonymous], 2000, Multiagent Systems: AModern Approach to DistributedArtificial Intelligence
   [Anonymous], 2002, FIPA ACL MESS STRUCT
   Arisha KA, 1999, IEEE INTELL SYST APP, V14, P64, DOI 10.1109/5254.757633
   Baldoni M, 2003, LECT NOTES ARTIF INT, V2829, P300
   Baldoni M, 2003, LECT NOTES COMPUT SC, V2841, P228
   Baldoni M, 1997, LECT NOTES ARTIF INT, V1216, P132, DOI 10.1007/BFb0023805
   BALDONI M, 2000, P WORKSH PRACT REAS
   BALDONI M, 2003, P 10 INT C HUM COMP, P517
   BALDONI M, 2001, LNCS, V2202, P405
   BALDONI M, 1998, JOINT INT C S LOG PR, P1
   Baldoni M., 1998, Ph.D. thesis
   Baral C, 2000, SPRINGER INT SER ENG, V597, P257
   BARRINGER H, 1990, LNCS, V430, P94
   BLASS A, 1992, ANN PURE APPL LOGIC, V56, P183, DOI 10.1016/0168-0072(92)90073-9
   Bordini R. H., 2002, Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems, P1294
   Bozzano M, 1999, LECT NOTES COMPUT SC, V1551, P46
   BOZZANO M, 1999, LOGIC PROGRAMMING PA, P00005, DOI DOI 10.1007/978-3-642-60085-2_1
   BOZZANO M, 1997, P DYNAMICS 97 T ACT
   Bugliesi M, 2000, J LOGIC COMPUT, V10, P75, DOI 10.1093/logcom/10.1.75
   CARBOGIM D, 1999, P WORKSH MULT AG SYS
   Castaneda H.N., 1975, THINKING DOING PHILO
   Ciampolini A, 2003, ANN MATH ARTIF INTEL, V37, P65, DOI 10.1023/A:1020259411066
   CIANCARINI P, 2000, LNCS, V1957, P1
   DART P, 1999, P SOFTWARE TECHNOLOG, P40
   DASTANI M, 2003, P 1 WORKSH PROGR MUL
   DAVIES WH, 1994, P WORKSH INT INF AG
   De Giacomo G, 2000, ARTIF INTELL, V121, P109, DOI 10.1016/S0004-3702(00)00031-X
   DEGIACOMO G, 2002, P KR 2002, P603
   Dell'Acqua P, 1998, LECT NOTES ARTIF INT, V1489, P17, DOI 10.1007/3-540-49545-2_2
   DELLACQUA P, 1999, P WORKSH MULT AG SYS
   Delzanno G, 2001, THEOR COMPUT SCI, V258, P269, DOI 10.1016/S0304-3975(00)00024-4
   DELZANNO G, 1997, 297 TD U PIS DIP INF
   Dennett D.C., 1987, The international stance
   Dix J, 2003, ANN MATH ARTIF INTEL, V37, P381, DOI 10.1023/A:1021560510377
   Eiter T, 2002, LECT NOTES ARTIF INT, V2407, P586
   Eiter T, 1999, ARTIF INTELL, V108, P257, DOI 10.1016/S0004-3702(99)00006-5
   Eiter T, 1999, ARTIF INTELL, V108, P179, DOI 10.1016/S0004-3702(99)00005-3
   Eiter T, 2000, ARTIF INTELL, V117, P107, DOI 10.1016/S0004-3702(99)00104-6
   EITER T, 2001, P 17 INT JOINT C ART, P649
   ESHGHI K, 1989, P 6 INT C LOG PROGR, P234
   FINGER M, 1993, INDUSTRIAL AND ENGINEERING APPLICATIONS OF ARTIFICIAL INTELLIGENCE AND EXPERT SYSTEMS - IEA/AIE 93, P209
   FINGER M, 1991, P ANN ESPRIT C 1991, P288
   FISHER M, 1992, LECT NOTES ARTIF INT, V607, P370
   Fisher M., 2002, Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems, P849
   Fisher M, 1995, LECT NOTES ARTIF INT, V897, P1
   Fisher M, 1997, INT JOINT CONF ARTIF, P316
   Fisher M, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P200
   Fisher M, 1999, LECT NOTES ARTIF INT, V1555, P227
   Fisher M, 1997, INT J COOP INF SYST, V6, P37, DOI 10.1142/S0218843097000057
   FISHER M, 1990, IMPLEMENTING PROTOTY
   FISHER M, 1993, P 12 INT WORKSH DIST, P131
   FISHER M, 2000, INT PROGRAMMING, V2
   FISHER M., 1993, LECT NOTES COMPUTER, V694, P185
   FISHER M, 1991, P 1991 EUR SIM MULT
   FISHER M, 1994, LNCS, V827, P408
   GELDER AV, 1988, P 7 ACM S PRINC DAT, P221
   Giordano L, 1998, ECAI 1998: 13TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P537
   Giordano L, 2000, J LOGIC COMPUT, V10, P625, DOI 10.1093/logcom/10.5.625
   GIRARD JY, 1987, THEOR COMPUT SCI, V50, P1, DOI 10.1016/0304-3975(87)90045-4
   Hindriks KV, 1998, LECT NOTES ARTIF INT, V1502, P155
   Hindriks KV, 2000, FR ART INT, V54, P558
   HINDRIKS KV, 1999, P WORKSH AG COMM LAN, P105
   HINDRIKS KV, 1998, P 5 INT WORKSH AG TH, V1555, P381
   HIRSCH B, 2002, P 2 NASA IEEE GODD W
   Hohfeld WN, 1913, YALE LAW J, V23, P16, DOI 10.2307/785533
   Hustadt U, 2001, EIGHTH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P206, DOI 10.1109/TIME.2001.930719
   HUSTADT U, 2001, LECT NOTES ARTIF INT, V1871, P33
   Jennings N. R., 1998, Autonomous agents and multi-agent systems, P7, DOI DOI 10.1023/A:1010090405266
   JUAN T, 2003, P 2 INT JOINT C AUT, P113
   JUAN T, 2003, CREATING REUSING AOS
   JUNG CG, 1997, P 4 INT WORKSH AG TH, V1365, P245
   KELLETT A, 1997, LNCS, V1282, P418
   KELLETT A, 1997, P 4 INT WORKSH TEMP
   Kowalski R, 1999, ANN MATH ARTIF INTEL, V25, P391, DOI 10.1023/A:1018934223383
   Kowalski R. A., 1996, LECT NOTES COMPUTER, V1154, P137, DOI 10.1007/BFb0031739
   Kozen Dexter., 1990, Handbook of Theoretical Computer Science, P789
   Kripke S., 1963, ACTA PHILOS FENN, V16, P83
   Kripke S.A., 1965, S THEORY MODELS, P206
   Kripke Saul A., 1963, Zeitschrift fur mathematische Logik und Grundlagen der Mathematik, V9, P67, DOI DOI 10.1002/MALQ.19630090502
   Leite, 2003, FRONTIERS ARTIFICIAL, V81
   LESPERANCE Y, 1999, P 1 WORKSH AG OR INF
   Levesque H.J., 2000, P 2 INT COGN ROB WOR
   Levesque HJ, 1997, J LOGIC PROGRAM, V31, P59, DOI 10.1016/S0743-1066(96)00121-5
   LEVESQUE HJ, 1998, LINKOPING ELECT ARTI, V3, P18
   MARCU M, 1995, P INT WORKSH INT COM, P69
   MARINI S, 2000, LECT NOTES ARTIF INT, V1986, P275
   MARTELLI M, 1999, P 2 INT WORKSH COMP
   Martelli M., 1999, P APP GULP PROD JOIN, P13
   MASCARDI V, 2002, DISITH200204 COMP SC
   MAYFIELD J, 1996, LECT NOTES ARTIF INT, V1037, P347
   McCarthy J., 1963, Situations, actions, and causal laws
   McIlraith S., 2002, P 8 INT C KNOWLEDGE, P482
   Meyer John-JulesCh., 1993, DEONTIC LOGIC COMPUT
   Miller D, 1996, THEOR COMPUT SCI, V165, P201, DOI 10.1016/0304-3975(96)00045-X
   MULLER JP, 1996, LNAI, V1177
   MULLER JP, 1998, READINGS AGENTS, P217
   Odell James., 2000, AOIS WORKSHOP AAAI 2, P3
   ODELL JJ, 2001, LNCS, V1957, P121
   OWRE S, 2000, LNCS, V1102, P411
   PEREIRA LM, 1998, P 11 INT C APPL PROL
   PETRIE C, 2000, LNCS, V1957, P59
   Pirri F, 1999, J ACM, V46, P325, DOI 10.1145/316542.316545
   Poole D, 1997, ARTIF INTELL, V94, P7, DOI 10.1016/S0004-3702(97)00027-1
   Rao AS., 1995, Proceedings of the first international conference on multi-agent systems, P312
   RAO AS, 1996, LECT NOTES ARTIF INT, V1038, P42, DOI DOI 10.1007/BFB0031845
   Reiter R., 2001, ACM T COMPUT LOG, V2, P433
   SADRI F, 1999, COMPUTATIONAL LOGIC
   Shanahan M, 2000, KLUWER INT SER ENG C, V597, P233
   Shapiro S., 2002, Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems, P19
   SHAPIRO S, 1998, LECT NOTES ARTIF INT, V1441, P1
   SHOHAM Y, 1993, ARTIF INTELL, V60, P51, DOI 10.1016/0004-3702(93)90034-9
   SON TC, 2001, P AAAI SPRING S ANSW, P202
   THOMAS SR, 1995, LECT NOTES ARTIF INT, V890, P355
   WOOLDRIDGE M, 1995, KNOWL ENG REV, V10, P115, DOI 10.1017/S0269888900008122
   Wright Von, 1951, Mind, V60, P1, DOI [10.1093/mind/LX.237.1, DOI 10.1093/MIND/LX.237.1]
   ZINI F, 2000, DISITH200103 COMP SC
   [No title captured]
NR 124
TC 14
Z9 15
U1 0
U2 6
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2004
VL 4
BP 429
EP 494
DI 10.1017/S1471068404002029
PN 4
PG 66
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 835AB
UT WOS:000222450900002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gelfond, M
   Fandinno, J
   Balai, E
AF Gelfond, Michael
   Fandinno, Jorge
   Balai, Evgenii
TI Embracing Background Knowledge in the Analysis of Actual Causality: An
   Answer Set Programming Approach
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; causality; knowledge representation
ID CAUSATION
AB This paper presents a rich knowledge representation language aimed at formalizing causal knowledge. This language is used for accurately and directly formalizing common benchmark examples from the literature of actual causality. A definition of cause is presented and used to analyze the actual causes of changes with respect to sequences of actions representing those examples.
C1 [Gelfond, Michael; Balai, Evgenii] Texas Tech Univ, Dept Comp Sci, Lubbock, TX 79409 USA.
   [Fandinno, Jorge] Univ Nebraska, Dept Comp Sci, Omaha, NE USA.
C3 Texas Tech University System; Texas Tech University; University of
   Nebraska System
RP Gelfond, M (corresponding author), Texas Tech Univ, Dept Comp Sci, Lubbock, TX 79409 USA.
EM michael.gelfond@ttu.edu; jfandinno@unomaha.edu; evgenii.balai@gmail.com
RI Fandinno, Jorge/JJC-6227-2023; Fandiño, Jorge/IVV-0515-2023; Fandino,
   Jorge/F-8705-2016
OI Fandino, Jorge/0000-0002-3917-8717
CR Balai E, 2019, ANN MATH ARTIF INTEL, V86, P149, DOI 10.1007/s10472-019-09620-2
   BALDUCCINI M., 2012, P 14 INT WORKSHOP NO
   BALDUCCINI M., 2003, INT S LOG FORM COMM, V102
   Baral C, 2009, THEOR PRACT LOG PROG, V9, P57, DOI 10.1017/S1471068408003645
   Batusov V, 2018, AAAI CONF ARTIF INTE, P1744
   Beckers S, 2021, AAAI CONF ARTIF INTE, V35, P6210
   Beckers S, 2017, ERGO-ANN ARBOR, V4, P1, DOI 10.3998/ergo.12405314.0004.001
   Beckers S, 2018, SYNTHESE, V195, P835, DOI 10.1007/s11229-016-1247-1
   Beckers S, 2016, INT J APPROX REASON, V77, P105, DOI 10.1016/j.ijar.2016.05.008
   Bochman A, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1730
   CABALAR P., 2016, ABS160206897 CORR
   Cabalar P, 2020, ELECTRON P THEOR COM, P124, DOI 10.4204/EPTCS.325.19
   Cabalar P, 2014, THEOR PRACT LOG PROG, V14, P603, DOI 10.1017/S1471068414000234
   Chockler H, 2004, J ARTIF INTELL RES, V22, P93, DOI 10.1613/jair.1391
   Denecker M, 2019, LECT NOTES ARTIF INT, V11468, P214, DOI 10.1007/978-3-030-19570-0_14
   Fandinno J, 2016, FUND INFORM, V147, P93, DOI 10.3233/FI-2016-1399
   Gelfond M, 2014, KNOWLEDGE REPRESENTATION, REASONING, AND THE DESIGN OF INTELLIGENT AGENTS: THE ANSWER-SET PROGRAMMING APPROACH, P1, DOI 10.1017/CBO9781139342124
   GELFOND M., 2020, ICLP WORKSHOPS CEUR, V2678
   Hall N, 2000, J PHILOS, V97, P198, DOI 10.2307/2678390
   Hall N, 2007, PHILOS STUD, V132, P109, DOI 10.1007/s11098-006-9057-9
   Hall N, 2004, Causation and Counterfactuals, P225
   HALPERN J., 2010, ACTUAL CAUSATION ART, P383
   Halpern J. Y., 2001, UAI, P194
   HALPERN J. Y., 2014, PRINCIPLES KNOWLEDGE
   Halpern JY, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P3022
   Hopkins M., 2003, Proceedings of the AAAI Spring Symposium on Logical Formalization of Commonsense Rea-soning, P83
   Hopkins M, 2007, J LOGIC COMPUT, V17, P939, DOI 10.1093/logcom/exm048
   Inclezan D, 2016, THEOR PRACT LOG PROG, V16, P800, DOI 10.1017/S1471068416000363
   LeBlanc E, 2019, LECT NOTES ARTIF INT, V11468, P231, DOI 10.1007/978-3-030-19570-0_15
   McCarthy, 1998, ELABORATION TOLERANC
   Pearl J., 2009, Causality, DOI DOI 10.1017/CBO9780511803161
   Vennekens J, 2011, THEOR PRACT LOG PROG, V11, P647, DOI 10.1017/S1471068411000226
NR 32
TC 0
Z9 0
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2023
VL 23
IS 4
SI SI
BP 715
EP 729
AR PII S1471068423000248
DI 10.1017/S1471068423000248
EA JUL 2023
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7Z0
UT WOS:001035416000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Schrijvers, T
   van den Berg, B
   Riguzzi, F
AF Schrijvers, Tom
   Van Den Berg, Birthe
   Riguzzi, Fabrizio
TI Automatic Differentiation in Prolog
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Prolog; automatic differentiation; probabilistic programming
ID ALGORITHM; PEARL
AB Automatic differentiation (AD) is a range of algorithms to compute the numeric value of a function's (partial) derivative, where the function is typically given as a computer program or abstract syntax tree. AD has become immensely popular as part of many learning algorithms, notably for neural networks. This paper uses Prolog to systematically derive gradient-based forward- and reverse-mode AD variants from a simple executable specification: evaluation of the symbolic derivative. Along the way we demonstrate that several Prolog features (DCGs, co-routines) contribute to the succinct formulation of the algorithm. We also discuss two applications in probabilistic programming that are enabled by our Prolog algorithms. The first is parameter learning for the Sum-Product Loop Language and the second consists of both parameter learning and variational inference for probabilistic logic programming.
C1 [Schrijvers, Tom; Van Den Berg, Birthe] Katholieke Univ Leuven, Leuven, Belgium.
   [Riguzzi, Fabrizio] Univ Ferrara, Ferrara, Italy.
C3 KU Leuven; University of Ferrara
RP Schrijvers, T (corresponding author), Katholieke Univ Leuven, Leuven, Belgium.
EM tom.schrijvers@kuleuven.be; birthe.vandenberg@kuleuven.be;
   fabrizio.riguzzi@unife.it
RI Schrijvers, Tom/A-6696-2016
OI Schrijvers, Tom/0000-0001-8771-5559
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   ABDALLAH S., 2017, ARXIV
   Bradbury J., 2018, JAX: Composable transformations of Python + NumPy programs
   Bruynooghe M, 2004, THEOR PRACT LOG PROG, V4, P371, DOI 10.1017/S1471068403001893
   CARPENTER B., 2015, ARXIV
   Carpenter Bob, 2017, J Stat Softw, V76, DOI 10.18637/jss.v076.i01
   Clocksin W. F., 2003, Programming in PROLOG
   Dash S, 2023, P ACM PROGRAM LANG, V7, DOI 10.1145/3571239
   De Raedt, 2011, AAAI
   DEBRAY SK, 1988, SIGPLAN NOTICES, V23, P297, DOI 10.1145/960116.54020
   GABEL P. L., 2020, AUTOMATIC DIFFERENTI
   Howe JM, 2012, THEOR COMPUT SCI, V435, P43, DOI 10.1016/j.tcs.2012.02.024
   Islam MA, 2012, THEOR PRACT LOG PROG, V12, P505, DOI 10.1017/S1471068412000154
   KOWALSKI R, 1979, COMMUN ACM, V22, P424, DOI 10.1145/359131.359136
   Krawiec F, 2022, P ACM PROGRAM LANG, V6, DOI 10.1145/3498710
   Manhaeve R, 2018, ADV NEUR IN, V31
   Nagata Masayoshi, 1962, LOCAL RINGS
   NGUYEN, 2022, P ACM PROGRAMMING LA, V6, P381
   Paszke A., 2019, ADV NEURAL INFORM PR, P8026, DOI DOI 10.48550/ARXIV.1912.01703
   Pearlmutter BA, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1330017.1330018
   PFANSCHILLING V., 2022, P KR
   Riguzzi F, 2018, Foundations of Probabilistic Logic Programming
   Robbins E, 2021, THEOR PRACT LOG PROG, V21, P125, DOI 10.1017/S1471068420000435
   Sato T, 1997, INT JOINT CONF ARTIF, P1330
   Schrijvers T, 2006, THEOR PRACT LOG PROG, V6, P213, DOI 10.1017/S1471068405002541
   SMEDING T., 2022, ARXIV
   Szirmay-Kalos L., 2020, PERIOD POLYTECH ELEC, V65, P1, DOI DOI 10.3311/PPEE.16341
   VAN DEN BERG B., 2022, ABS221211088 CORR
   Vandecasteele H, 2003, THEOR PRACT LOG PROG, V3, P377, DOI 10.1017/S1471068402001618
   Wang F, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3341700
   WENGERT RE, 1964, COMMUN ACM, V7, P463, DOI 10.1145/355586.364791
   WINGATE D., 2013, ARXIV, DOI DOI 10.48550/ARXIV.1301.1299
NR 32
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2023
VL 23
IS 4
SI SI
BP 900
EP 917
AR PII S1471068423000145
DI 10.1017/S1471068423000145
EA JUL 2023
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7Z0
UT WOS:001023197300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Eiter, T
   Higuera, N
   Oetsch, J
   Pritz, M
AF Eiter, Thomas
   Higuera, Nelson
   Oetsch, Johannes
   Pritz, Michael
TI A Neuro-Symbolic ASP Pipeline for Visual Question Answering
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer-set programming; visual question answering; neuro-symbolic
   computation
AB We present a neuro-symbolic visual question answering (VQA) pipeline for CLEVR, which is a well-known dataset that consists of pictures showing scenes with objects and questions related to them. Our pipeline covers (i) training neural networks for object classification and bounding-box prediction of the CLEVR scenes, (ii) statistical analysis on the distribution of prediction values of the neural networks to determine a threshold for high-confidence predictions, and (iii) a translation of CLEVR questions and network predictions that pass confidence thresholds into logic programmes so that we can compute the answers using an answer-set programming solver. By exploiting choice rules, we consider deterministic and non-deterministic scene encodings. Our experiments show that the non-deterministic scene encoding achieves good results even if the neural networks are trained rather poorly in comparison with the deterministic approach. This is important for building robust VQA systems if network predictions are less-than perfect. Furthermore, we show that restricting non-determinism to reasonable choices allows for more efficient implementations in comparison with related neuro-symbolic approaches without losing much accuracy.
C1 [Eiter, Thomas; Higuera, Nelson; Oetsch, Johannes; Pritz, Michael] Vienna Univ Technol, TU Wien, Inst Log & Computat, Vienna, Austria.
C3 Technische Universitat Wien
RP Eiter, T (corresponding author), Vienna Univ Technol, TU Wien, Inst Log & Computat, Vienna, Austria.
EM eiter@kr.tuwien.ac.at; higuera@kr.tuwien.ac.at; oetsch@kr.tuwien.ac.at;
   pritz@kr.tuwien.ac.at
RI Eiter, Thomas/ABE-9263-2021
OI Oetsch, Johannes/0000-0002-9902-7662; Higuera Ruiz, Nelson
   Nicolas/0000-0003-3172-723X; Eiter, Thomas/0000-0001-6003-6345; Pritz,
   Michael/0000-0003-2164-5759
FU Bosch Center for Artificial Intelligence at Renningen, Germany
FX This work was partially funded by the Bosch Center for Artificial
   Intelligence at Renningen, Germany.
CR Antol S, 2015, IEEE I CONF COMP VIS, P2425, DOI 10.1109/ICCV.2015.279
   Basu K, 2020, LECT NOTES COMPUT SC, V12007, P57, DOI 10.1007/978-3-030-39197-3_4
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Gebser M., 2012, SYNTHESIS LECT ARTIF, DOI [10.2200/S00457ED1V01Y201211AIM019, DOI 10.2200/S00457ED1V01Y201211AIM019, 10.1007/978-3-031-01561-8]
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Jabri A, 2016, LECT NOTES COMPUT SC, V9912, P727, DOI 10.1007/978-3-319-46484-8_44
   Johnson J, 2017, PROC CVPR IEEE, P1988, DOI 10.1109/CVPR.2017.215
   Lu JS, 2016, ADV NEUR IN, V29
   Malinowski M, 2014, ADV NEUR IN, V27
   Manhaeve R, 2018, ADV NEUR IN, V31
   Mao, P 7 INT C LEARNING R
   Redmon J, 2018, Arxiv, DOI [arXiv:1804.02767, DOI 10.1109/CVPR.2017.690, DOI 10.48550/ARXIV.1804.02767]
   Ren MY, 2015, ADV NEUR IN, V28
   Riley H, 2019, FRONT ROBOT AI, V6, DOI 10.3389/frobt.2019.00125
   Sampat SK, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P3692
   Xu JY, 2018, PR MACH LEARN RES, V80
   Yang Z, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1755
   Yang ZC, 2016, PROC CVPR IEEE, P21, DOI 10.1109/CVPR.2016.10
   Yi KX, 2018, ADV NEUR IN, V31
   Zhu YK, 2016, PROC CVPR IEEE, P4995, DOI 10.1109/CVPR.2016.540
NR 20
TC 4
Z9 4
U1 2
U2 6
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2022
VL 22
IS 5
SI SI
BP 739
EP 754
AR PII S1471068422000229
DI 10.1017/S1471068422000229
EA JUL 2022
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 3T5UT
UT WOS:000825043500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU GIORDANO, L
   DUPRÉ, DT
AF GIORDANO, L. A. U. R. A.
   THESEIDER DUPRE, D. A. N. I. E. L. E.
TI An ASP Approach for Reasoning on Neural Networks under a Finitely
   Many-Valued Semantics for Weighted Conditional Knowledge Bases
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE description logics; neural networks; multi-valued logics; answer set
   programming
ID FUZZY DESCRIPTION LOGIC; RATIONAL CLOSURE
AB Weighted knowledge bases for description logics with typicality have been recently considered under a "concept-wise" multipreference semantics (in both the two-valued and fuzzy case), as the basis of a logical semantics of multilayer perceptrons (MLPs). In this paper we consider weighted conditional ALC knowledge bases with typicality in the finitely many-valued case, through three different semantic constructions. For the boolean fragment LC of ALC we exploit answer set programming and asprin for reasoning with the concept-wise multipreference entailment under a phi-coherent semantics, suitable to characterize the stationary states of MLPs. As a proof of concept, we experiment the proposed approach for checking properties of trained MLPs.
C1 [GIORDANO, L. A. U. R. A.; THESEIDER DUPRE, D. A. N. I. E. L. E.] Univ Piemonte Orientale, DISIT, Vercelli, Italy.
C3 University of Eastern Piedmont Amedeo Avogadro
RP GIORDANO, L (corresponding author), Univ Piemonte Orientale, DISIT, Vercelli, Italy.
EM laura.giordano@uniupo.it; dtd@uniupo.it
RI Giordano, Laura/AAB-8796-2019
OI GIORDANO, Laura/0000-0001-9445-7770; Theseider Dupre,
   Daniele/0000-0001-6798-4380
FU INDAM-GNCS Project 2020
FX We thank the anonymous referees for their helpful comments and
   suggestions. This research is partially supported by INDAM-GNCS Project
   2020.
CR Adadi A, 2018, IEEE ACCESS, V6, P52138, DOI 10.1109/ACCESS.2018.2870052
   [Anonymous], 2005, CEUR Workshop Proc
   [Anonymous], 1991, TECH REP
   Baader F, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P364
   Arrieta AB, 2020, INFORM FUSION, V58, P82, DOI 10.1016/j.inffus.2019.12.012
   BENFERHAT S, 1993, IJCAI-93, VOLS 1 AND 2, P640
   Bobillo F, 2018, FUZZY SET SYST, V351, P1, DOI 10.1016/j.fss.2018.03.011
   Bobillo F, 2012, INT J UNCERTAIN FUZZ, V20, P475, DOI 10.1142/S0218488512500249
   Bobillo F, 2011, INFORM SCIENCES, V181, P758, DOI 10.1016/j.ins.2010.10.020
   Borgwardt S., 2012, P KR 2012 ROM IT 10
   Borgwardt S, 2013, J DATA SEMANT, V2, P1, DOI 10.1007/s13740-012-0013-x
   Brewka G, 2015, AAAI CONF ARTIF INTE, P1467
   Britz K., 2008, PRINCIPLES KNOWLEDGE, P476
   Casini Giovanni, 2013, Logic for Programming, Artificial Intelligence and Reasoning. 19th International Conference, LPAR-19, Proceedings: LNCS 8312, P213, DOI 10.1007/978-3-642-45221-5_16
   Casini G, 2021, AAAI CONF ARTIF INTE, V35, P6254
   Casini G, 2013, J ARTIF INTELL RES, V48, P415, DOI 10.1613/jair.4062
   Casini G, 2010, LECT NOTES ARTIF INT, V6341, P77, DOI 10.1007/978-3-642-15675-5_9
   Cerami M., 2011, ABS11074212 CORR
   Cintula P., 2011, Handbook of Mathematical Fuzzy Logic, V37
   Delgrande J., 2020, P 18 INT WORKSH NONM
   Garcez ASA, 1999, APPL INTELL, V11, P59, DOI 10.1023/A:1008328630915
   García-Cerdaña A, 2010, INT J APPROX REASON, V51, P632, DOI 10.1016/j.ijar.2010.01.001
   Giordano, 2021, 5 WORKSHOP ADV ARGUM
   Giordano Laura, 2021, Logics in Artificial Intelligence. 17th European Conference, JELIA 2021. Proceedings. Lecture Notes in Artificial Intelligence, Subseries of Lecture Notes in Computer Science (LNAI 12678), P225, DOI 10.1007/978-3-030-75775-5_16
   Giordano L, 2015, ARTIF INTELL, V226, P1, DOI 10.1016/j.artint.2015.05.001
   Giordano L., 2020, CILC 2020, V2710, P127
   Giordano L, 2007, LECT NOTES ARTIF INT, V4790, P257, DOI 10.1007/978-3-540-75560-9_20
   Giordano L, 2021, ELECTRON P THEOR COM, P70, DOI 10.4204/EPTCS.345.19
   Giordano L, 2022, J LOGIC COMPUT, V32, P178, DOI 10.1093/logcom/exab082
   Giordano L, 2021, LECT NOTES ARTIF INT, V12897, P557, DOI 10.1007/978-3-030-86772-0_40
   Giordano L, 2021, ARTIF INTELL, V290, DOI 10.1016/j.artint.2020.103398
   Giordano L, 2020, THEOR PRACT LOG PROG, V20, P751, DOI 10.1017/S1471068420000381
   Guidotti R, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3236009
   Haykin S., 1999, NEURAL NETWORKS COMP, DOI [10.1017/S0269888998214044, DOI 10.1017/S0269888998214044]
   Hitzler P., 2004, Journal of Applied Logic, V2, P245
   Kern-Isberner G, 2001, LECT NOTES ARTIF INT, V2087, P1
   Kohonen T. K., 2001, SELF ORG MAPS, V3rd ed.
   Kosko B., 1992, Neural Networks and Fuzzy Systems: A Dynamical Systems Approach to Machine Intelligence
   KRAUS S, 1990, ARTIF INTELL, V44, P167, DOI 10.1016/0004-3702(90)90101-5
   Krötzsch M, 2010, LECT NOTES ARTIF INT, V6341, P234, DOI 10.1007/978-3-642-15675-5_21
   Lamb LC, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4877
   LEHMANN D, 1992, ARTIF INTELL, V55, P1, DOI 10.1016/0004-3702(92)90041-U
   LEHMANN D, 1995, ANN MATH ARTIF INTEL, V15, P61, DOI 10.1007/BF01535841
   Lukasiewicz T, 2009, INT J APPROX REASON, V50, P837, DOI 10.1016/j.ijar.2009.03.004
   PEARL J, 1990, THEORETICAL ASPECTS OF REASONING ABOUT KNOWLEDGE, P121
   Potyka N, 2021, AAAI CONF ARTIF INTE, V35, P6463
   Straccia U, 2005, LECT NOTES COMPUT SC, V3532, P167
NR 47
TC 4
Z9 4
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2022
VL 22
IS 4
SI SI
BP 589
EP 605
AR PII S1471068422000163
DI 10.1017/S1471068422000163
EA JUL 2022
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 3T5UX
UT WOS:000820918800001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Fandinno, J
   Del Cerro, LF
AF Fandinno, Jorge
   Del Cerro, Luis Farinas
TI Abstract Argumentation and Answer Set Programming: Two Faces of Nelson's
   Logic
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic programming; abstract argumentation; equilibrium logic;
   constructive logic
AB In this work, we show that both logic programming and abstract argumentation frameworks can be interpreted in terms of Nelson's constructive logic N4. We do so by formalising, in this logic, two principles that we call noncontradictory inference and strengthened closed world assumption: the first states that no belief can be held based on contradictory evidence while the latter forces both unknown and contradictory evidence to be regarded as false. Using these principles, both logic programming and abstract argumentation frameworks are translated into constructive logic in a modular way and using the object language. Logic programming implication and abstract argumentation supports become, in the translation, a new implication connective following the noncontradictory inference principle. Attacks are then represented by combining this new implication with strong negation. Under consideration in Theory and Practice of Logic Programming (TPLP).
C1 [Fandinno, Jorge] Univ Nebraska, Omaha, NE 68182 USA.
   [Del Cerro, Luis Farinas] Univ Toulouse, CNRS, IRIT, Toulouse, France.
C3 University of Nebraska System; Universite Federale Toulouse
   Midi-Pyrenees (ComUE); Universite de Toulouse; Institut National
   Polytechnique de Toulouse; Centre National de la Recherche Scientifique
   (CNRS); Universite Toulouse III - Paul Sabatier
RP Fandinno, J (corresponding author), Univ Nebraska, Omaha, NE 68182 USA.
EM jfandinno@unomaha.edu; luis@irit.fr
RI Fandinno, Jorge/JJC-6227-2023; Fandiño, Jorge/F-8705-2016
OI Fandiño, Jorge/0000-0002-3917-8717
CR Akama, 1987, NOTRE DAME J FORM L, V1, P18
   ALMUKDAD A, 1984, J SYMBOLIC LOGIC, V49, P231, DOI 10.2307/2274105
   Amendola G, 2019, THEOR PRACT LOG PROG, V19, P688, DOI 10.1017/S1471068419000139
   Amendola G, 2016, ARTIF INTELL, V234, P219, DOI 10.1016/j.artint.2016.01.011
   Amgoud, 2004, NMR 2004 P, V1, P9
   [Anonymous], 1974, Studia Logica
   [Anonymous], 1968, ZAPISKI NAUCHNYH SEM
   Arieli O, 2013, J APPL LOGIC, V11, P229, DOI 10.1016/j.jal.2013.03.009
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Baroni P, 2011, INT J APPROX REASON, V52, P19, DOI 10.1016/j.ijar.2010.05.004
   Barringer, 2005, MECHANIZING MATH REA, V59, P98
   Besnard, 2004, 10 INT WORKSH NONM R, V59, P64
   Besnard P, 2014, COMM COM INF SC, V443, P345
   BLAIR HA, 1989, THEOR COMPUT SCI, V68, P135, DOI 10.1016/0304-3975(89)90126-6
   Bochman A, 2003, J LOGIC COMPUT, V13, P405, DOI 10.1093/logcom/13.3.405
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Brewka Gerhard., 2013, 23rd International Joint Conference on Artificial Intelligence, P803
   Cabalar P, 2007, ANN MATH ARTIF INTEL, V50, P305, DOI 10.1007/s10472-007-9075-0
   Cabalar P, 2017, LECT NOTES ARTIF INT, V10423, P624, DOI 10.1007/978-3-319-65340-2_51
   Caminada M., 2009, Stud. Log., V93, P109, DOI DOI 10.1007/S11225-009-9218-X
   Caminada M, 2015, INT J APPROX REASON, V58, P87, DOI 10.1016/j.ijar.2014.12.004
   Caminada MWA, 2012, J LOGIC COMPUT, V22, P1207, DOI 10.1093/logcom/exr033
   Cayrol, 2016, P COMMA, V191, P198
   Cayrol C, 2021, ANN MATH ARTIF INTEL, V89, P53, DOI 10.1007/s10472-020-09693-4
   Cayrol C., 2018, IRITRR201801FR U P S
   Cayrol C, 2018, LECT NOTES COMPUT SC, V10833, P150, DOI 10.1007/978-3-319-90050-6_9
   da Costa N. C. A., 1974, Notre Dame Journal of Formal Logic, V15, P497, DOI 10.1305/ndjfl/1093891487
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Doutre S, 2014, FOURTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P62
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Dvork W., 2015, ADV KNOWLEDGE REPRES, V9060
   Dvork W., 2011, LECT NOTES COMPUTER
   Dvork W., 2012, LECT NOTES COMPUTER, V85, P98
   Faber W, 2008, THEOR PRACT LOG PROG, V8, P545, DOI 10.1017/S1471068408003323
   Fandinno J., 2018, PRINCIPLES KNOWLEDGE, V128, P137
   Gabbay D, 2016, LOG J IGPL, V24, P807, DOI 10.1093/jigpal/jzw012
   Gabbay D, 2015, LOG J IGPL, V23, P881, DOI 10.1093/jigpal/jzv033
   Gabbay D. M., 2009, STUD LOGICA, V93, P357, DOI DOI 10.1007/S11225-009-9211-4
   Gebser, 2012, ARTIF INTELL, V52, P89
   Gelfond, 1988, LOG PROGR P 5 INT C, V2
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Grossi D, 2011, LECT NOTES ARTIF INT, V6614, P190, DOI 10.1007/978-3-642-21940-5_12
   Gurevich Y., 1977, Studia Logica, V36, P49, DOI DOI 10.1007/BF02121114
   Kamide Norihiro, 2015, Proof theory of N4-related paraconsistent logics
   Karacapilidis N, 2001, INFORM SYST, V26, P259, DOI 10.1016/S0306-4379(01)00020-5
   L├a┬│pez-Escobar, 1972, INDAGATIONES MATH P, V4, P362
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Markov, 1953, CONSTRUCTIVE LOGIC
   Modgil S, 2009, ARTIF INTELL, V173, P901, DOI 10.1016/j.artint.2009.02.001
   Nelson D., 1949, J. Symb. Log., V14, P16
   Nelson D., 1959, CONSTRUCTIVITY MATH, P208
   Nielsen, 2007, ARGUMENTATION MULTIA, V54, P73
   Nieves JC, 2008, THEOR PRACT LOG PROG, V8, P527, DOI 10.1017/S1471068408003359
   Odintsov S, 2005, LECT NOTES ARTIF INT, V3662, P343, DOI 10.1007/11546207_27
   Odintsov S. P., 2005, Studia Logica, V80, P291, DOI 10.1007/s11225-005-8472-9
   Odintsov S, 2015, LOG UNIVERSALIS, V9, P93, DOI 10.1007/s11787-014-0110-8
   Oikarinen E, 2011, ARTIF INTELL, V175, P1985, DOI 10.1016/j.artint.2011.06.003
   Oren, 2008, COMMA 2008 P, V276, P284
   Osorio M, 2005, ANN PURE APPL LOGIC, V134, P63, DOI 10.1016/j.apal.2004.06.012
   Pearce, 2004, LECT NOTES COMPUTER, V147, P160
   Pearce D, 1997, LECT NOTES ARTIF INT, V1216, P57, DOI 10.1007/BFb0023801
   Pearce D, 2006, ANN MATH ARTIF INTEL, V47, P3, DOI 10.1007/s10472-006-9028-z
   Polberg, 2014, REV SUPPORT ABSTRACT
   PRZYMUSINSKI T, 1991, ARTIF INTELL, V49, P309, DOI 10.1016/0004-3702(91)90013-A
   Rasiowa, 1969, N LATTICES CONSTRUCT
   REITER R, 1980, ARTIF INTELL, V13, P81, DOI 10.1016/0004-3702(80)90014-4
   Sakama C., 1995, Journal of Logic and Computation, V5, P265, DOI 10.1093/logcom/5.3.265
   THOMASON RH, 1969, Z MATH LOGIK, V15, P247, DOI 10.1002/malq.19690151602
   Toni F., 2011, ARGUMENTATION ANSWER, P164
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Verheij B, 2003, J LOGIC COMPUT, V13, P319, DOI 10.1093/logcom/13.3.319
   Vorobev, 1952, DOKL AKAD NAUK, V85, P468
   Wu, 2010, LABELLING BASED JUST
   Wu Y., 2009, STUDIA LOGICA, V93, P383, DOI DOI 10.1007/S11225-009-9210-5
NR 74
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2023
VL 23
IS 2
BP 444
EP 467
AR PII S1471068422000114
DI 10.1017/S1471068422000114
EA MAY 2022
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA KB0F2
UT WOS:000792359700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wang, Y
   Lee, J
AF Wang, Yi
   Lee, Joohyung
TI Elaboration Tolerant Representation of Markov Decision Process via
   Decision-Theoretic Extension of Probabilistic Action Language pBC plus *
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; action language; Markov decision process
AB We extend probabilistic action language pBC+ with the notion of utility in decision theory. The semantics of the extended pBC+ can be defined as a shorthand notation for a decision-theoretic extension of the probabilistic answer set programming language LPMLN. Alternatively, the semantics of pBC+ can also be defined in terms of Markov decision process (MDP), which in turn allows for representing MDP in a succinct and elaboration tolerant way as well as leveraging an MDP solver to compute a pBC+ action description. The idea led to the design of the system pbcplus2mdp, which can find an optimal policy of a pBC+ action description using an MDP solver.
C1 [Wang, Yi; Lee, Joohyung] Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ 85281 USA.
C3 Arizona State University; Arizona State University-Tempe
RP Wang, Y (corresponding author), Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ 85281 USA.
EM ywang485@asu.edu; joolee@asu.edu
OI Lee, Joohyung/0000-0002-9569-5575; Wang, Yi/0000-0002-5394-5548
FU National Science Foundation [IIS-1815337]
FX We are grateful to the anonymous referees for their useful comments and
   to Siddharth Srivastava, Zhun Yang, and Yu Zhang for helpful
   discussions. This work was partially supported by the National Science
   Foundation under Grant IIS-1815337.
CR Babb J, 2020, J LOGIC COMPUT, V30, P899, DOI 10.1093/logcom/exv062
   Baral C, 2009, THEOR PRACT LOG PROG, V9, P57, DOI 10.1017/S1471068408003645
   BELLMAN R, 1957, J MATH MECH, V6, P679, DOI 10.1512/iumj.1957.6.56038
   Boutilier C., 2001, P 17 INT JOINT C ART, V1
   Erdem E, 2016, AI MAG, V37, P53, DOI 10.1609/aimag.v37i3.2678
   Faber W., 2004, P EUR C LOG ART INT
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Ferreira LA, 2017, APPL INTELL, V47, P993, DOI 10.1007/s10489-017-0988-y
   GELFOND M, 1993, J LOGIC PROGRAM, V17, P301, DOI 10.1016/0743-1066(93)90035-F
   Gelfond M., 1998, ELECT T ARTIF INTEL, V3, P195
   Giunchiglia E, 2004, ARTIF INTELL, V153, P49, DOI [10.1016/j.artint.2002.12.001, 10.1016/j.artint.2003.12.001]
   Kautz H., 1998, SATISFIABILITY PROBL
   Lee J, 2003, LECT NOTES COMPUT SC, V2916, P451, DOI 10.1007/978-3-540-24599-5_31
   LEE J., 2013, P INT JOINT C ART IN
   Lee J, 2016, FIFTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P145
   Lee J, 2018, THEOR PRACT LOG PROG, V18, P607, DOI 10.1017/S1471068418000303
   Lee J, 2017, THEOR PRACT LOG PROG, V17, P942, DOI 10.1017/S1471068417000400
   Leonetti M, 2016, ARTIF INTELL, V241, P103, DOI 10.1016/j.artint.2016.07.004
   McCarthy J., 1963, Situations, actions, and causal laws
   Niemelä I, 2000, SPRINGER INT SER ENG, V597, P491
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Poole David, 2008, Probabilistic Inductive Logic Programming. Theory and Applications, P222, DOI 10.1007/978-3-540-78652-8_8
   Poole D., 2013, ARXIV PREPRINT ARXIV
   Sanner S., 2010, Relational Dynamic influence Diagram Language (RDDL): Language description, P32
   Sanner S, 2009, ARTIF INTELL, V173, P748, DOI 10.1016/j.artint.2008.11.003
   Son T. C., 2006, P 21 NAT C ART INT A
   Sridharan Mohan, 2019, Journal of Artificial Intelligence Research, V65, P87
   Van den Broeck G, 2010, AAAI CONF ARTIF INTE, P1217
   Wang CG, 2008, J ARTIF INTELL RES, V31, P431, DOI 10.1613/jair.2489
   Wang Y., 2019, P 15 INT C LOG PROGR
   Watkins C. J. C. H., 1989, THESIS CAMBRIDGE U
   Yang FK, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4860
   Yoon S., 2002, P 18 C UNC ART INT U
   Younes H.L., 2004, Technical Report CMU-CS-04-162.
   Zhang SQ, 2015, AAAI CONF ARTIF INTE, P1394
NR 35
TC 0
Z9 0
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2021
VL 21
IS 3
BP 348
EP 371
AR PII S1471068420000472
DI 10.1017/S1471068420000472
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA TH4CJ
UT WOS:000672039200004
DA 2024-07-18
ER

PT J
AU Eiter, T
   Kiesel, R
AF EITER, T. H. O. M. A. S.
   KIESEL, R. A. F. A. E. L.
TI ASP(AC): Answer Set Programming with Algebraic Constraints
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE Weighted Logic; Here-and-There Logic; Answer Set Programming;
   Constraints
ID STABLE MODEL SEMANTICS; COMPLEXITY
AB Weighted Logic is a powerful tool for the specification of calculations over semirings that depend on qualitative information. Using a novel combination of Weighted Logic and Here-and-There (HT) Logic, in which this dependence is based on intuitionistic grounds, we introduce Answer Set Programming with Algebraic Constraints (ASP(AC)), where rules may contain constraints that compare semiring values to weighted formula evaluations. Such constraints provide streamlined access to a manifold of constructs available in ASP, like aggregates, choice constraints, and arithmetic operators. They extend some of them and provide a generic framework for defining programs with algebraic computation, which can be fruitfully used e.g. for provenance semantics of datalog programs. While undecidable in general, expressive fragments of ASP(AC) can be exploited for effective problem solving in a rich framework.
C1 [EITER, T. H. O. M. A. S.; KIESEL, R. A. F. A. E. L.] Vienna Univ Technol, Vienna, Austria.
C3 Technische Universitat Wien
RP Eiter, T (corresponding author), Vienna Univ Technol, Vienna, Austria.
EM thomas.eiter@tuwien.ac.at; rafael.kiesel@tuwien.ac.at
RI Eiter, Thomas/ABE-9263-2021
OI Kiesel, Rafael/0000-0002-8866-3452; Eiter, Thomas/0000-0001-6003-6345
FU FWF project [W1255-N23]; FFG project [861263]
FX Thanks to the reviewers for their constructive comments. This work has
   been supported by FWF project W1255-N23 and by FFG project 861263.
CR Aziz RA, 2013, THEOR PRACT LOG PROG, V13, P517, DOI 10.1017/S147106841300032X
   BALAI E., 2013, ARXIV13011386
   Bartholomew M, 2019, ARTIF INTELL, V273, P56, DOI 10.1016/j.artint.2019.01.001
   Bistarelli S, 1997, INT JOINT CONF ARTIF, P352
   Cabalar P, 2020, KR2020: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P193
   Cabalar P, 2020, FRONT ARTIF INTEL AP, V325, P664, DOI 10.3233/FAIA200152
   Cabalar P, 2011, THEOR PRACT LOG PROG, V11, P203, DOI 10.1017/S1471068410000517
   CASSAIGNE J, 2014, CORR
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Droste M, 2007, THEOR COMPUT SCI, V380, P69, DOI 10.1016/j.tcs.2007.02.055
   Eiter T, 2020, FRONT ARTIF INTEL AP, V325, P729, DOI 10.3233/FAIA200160
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   FERRARIS P., 2010, P INT WORKSH NONM RE
   Ferraris P, 2011, ACM T COMPUT LOG, V12, DOI 10.1145/1970398.1970401
   Gelfond M, 2014, THEOR PRACT LOG PROG, V14, P587, DOI 10.1017/S1471068414000222
   Janhunen T, 2018, KUNSTL INTELL, V32, P125, DOI 10.1007/s13218-018-0543-y
   Kimmig A., 2011, AAAI, P209
   Lierler Y, 2014, ARTIF INTELL, V207, P1, DOI 10.1016/j.artint.2013.10.004
   Lierler Y, 2009, LECT NOTES COMPUT SC, V5649, P489, DOI 10.1007/978-3-642-02846-5_40
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Littman ML, 1998, J ARTIF INTELL RES, V9, P1
   MAREK V. W., 2006, CS0608103 ARXIV
   Niemelä I, 1999, LECT NOTES ARTIF INT, V1730, P317, DOI 10.1007/3-540-46767-X_23
   Pearce D, 2008, LECT NOTES COMPUT SC, V5366, P546, DOI 10.1007/978-3-540-89982-2_46
   Smidt C, 2007, EVOL AM PRESID, P31
   Son TC, 2007, J ARTIF INTELL RES, V29, P353, DOI 10.1613/jair.2171
NR 27
TC 3
Z9 3
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2020
VL 20
IS 6
SI SI
BP 895
EP 910
DI 10.1017/S1471068420000393
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR3IT
UT WOS:000571456800007
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Martín, O
   Verdejo, A
   Martí-Oliet, N
AF Martin, Oscar
   Verdejo, Alberto
   Marti-Oliet, Narciso
TI Compositional Specification in Rewriting Logic
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE compositional specification; rewriting logic; modularity; synchronous
   product
ID LINEAR TEMPORAL LOGIC; MODEL CHECKING; SYSTEMS
AB Rewriting logic is naturally concurrent: several subterms of the state term can be rewritten simultaneously. But state terms are global, which makes compositionality difficult to achieve. Compositionality here means being able to decompose a complex system into its functional components and code each as an isolated and encapsulated system. Our goal is to help bringing compositionality to system specification in rewriting logic. The base of our proposal is the operation that we call synchronous composition. We discuss the motivations and implications of our proposal, formalize it for rewriting logic and also for transition structures, to be used as semantics, and show the power of our approach with some examples.
C1 [Martin, Oscar; Verdejo, Alberto; Marti-Oliet, Narciso] Univ Complutense Madrid, Fac Informat, Madrid, Spain.
C3 Complutense University of Madrid
RP Martín, O (corresponding author), Univ Complutense Madrid, Fac Informat, Madrid, Spain.
EM omartins@ucm.es; jalberto@ucm.es; narciso@ucm.es
RI Martín, Óscar/GNH-2757-2022; Martin, Oscar/HGT-8581-2022
OI Martín, Óscar/0000-0001-8212-5074; Marti-Oliet,
   Narciso/0000-0002-6576-762X
FU MINECO Spanish project TRACES [TIN2015-67522-C3-3-R]; Comunidad de
   Madrid program N-GREENS Software [S2013/ICE-2731]; Comunidad de Madrid
   program BLOQUES [S2018/TCS-4339]
FX This work is partially supported by MINECO Spanish project TRACES
   (TIN2015-67522-C3-3-R), and Comunidad de Madrid programs N-GREENS
   Software (S2013/ICE-2731) and BLOQUES (S2018/TCS-4339). This paper owes
   a good share of whatever value it may have to the very careful and
   useful remarks and suggestions from its anonymous referees.
CR [Anonymous], 1984, Logics and Models of Concurrent Systems (NATO ASI Series, DOI [DOI 10.1007/978-3-642-82453-1_5, 10.1007/978-3-642-82453-1\5]
   [Anonymous], 2007, LECT NOTES COMPUTER
   [Anonymous], 1980, CALCULUS COMMUNICATI, DOI DOI 10.1007/3-540-10235-3
   [Anonymous], 1989, CWI Q.
   [Anonymous], 1985, MONOGRAPHS THEORETIC
   Arbab F, 2004, MATH STRUCT COMP SCI, V14, P329, DOI 10.1017/S0960129504004153
   Bachmair L, 2003, J AUTOM REASONING, V31, P129, DOI 10.1023/B:JARS.0000009518.26415.49
   Bae K, 2012, ELECTRON NOTES THEOR, V290, P19, DOI 10.1016/j.entcs.2012.11.009
   Bae K, 2015, SCI COMPUT PROGRAM, V99, P193, DOI 10.1016/j.scico.2014.02.006
   Bae K, 2010, LECT NOTES COMPUT SC, V6381, P208, DOI 10.1007/978-3-642-16310-4_14
   BASU A, 2008, DAGST SEM P, V8331
   Boudol G., 1988, Fundamenta Informaticae, V11, P433
   BRUNI R, 2002, ELECT NOTES THEORETI, V71, P90
   Bruni R, 2013, LOG METH COMPUT SCI, V9, DOI 10.2168/LMCS-9(3:16)2013
   Bruns G., 2000, CONCUR 2000 - Concurrency Theory. 11th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1877), P168
   Bruns G., 1999, Computer Aided Verification. 11th International Conference, CAV'99. Proceedings (Lecture Notes in Computer Science Vol.1633), P274
   Butler M, 2005, LECT NOTES COMPUT SC, V3582, P221
   Chaki S, 2004, LECT NOTES COMPUT SC, V2999, P128
   Clarke EM, 1999, MODEL CHECKING, P1
   Clavel M., 1997, P CADE 14 WORKSH STR, P1
   de Alfaro L, 2005, NATO SCI SER II-MATH, V195, P83
   DENICOLA R, 1995, J ACM, V42, P458, DOI 10.1145/201019.201032
   DENICOLA R, 1990, LECT NOTES COMPUT SC, V469, P407
   DENICOLA R, 1993, COMPUT NETWORKS ISDN, V25, P761, DOI 10.1016/0169-7552(93)90047-8
   Eker S, 2007, ELECTRON NOTES THEOR, V174, P3, DOI 10.1016/j.entcs.2006.03.017
   Gadducci F, 2000, FOUNDAT COMPUT, P133
   Garavel Hubert, 2017, ModelEd, TestEd, TrustEd - Essays Dedicated to Ed Brinksma on the Occasion of His 60th Birthday. LNCS 10500, P3, DOI 10.1007/978-3-319-68270-9_1
   Gianola A., 2017, LIPICS, V72, DOI [10.4230/LIPIcs.CALCO.2017.2, DOI 10.4230/LIPICS.CALCO.2017.2]
   Godefroid P, 2005, IEEE S LOG, P158
   Harel D, 2012, COMMUN ACM, V55, P90, DOI 10.1145/2209249.2209270
   Hennicker R, 2014, LECT NOTES COMPUT SC, V8415, P145, DOI 10.1007/978-3-642-54848-2_10
   HOARE CAR, 1978, COMMUN ACM, V21, P666, DOI 10.1145/359576.359585
   Hopcroft J. E., 2006, INTRO AUTOMATA THEOR
   Huth M, 2001, LECT NOTES COMPUT SC, V2028, P155
   Jensen K, 2009, COLOURED PETRI NETS: MODELLING AND VALIDATION OF CONCURRENT SYSTEMS, P1, DOI 10.1007/b95112
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kindler E, 1998, LECT NOTES COMPUT SC, V1420, P365
   LESCANNE P, 1989, LECT NOTES COMPUT SC, V351, P28
   Magee Jeff., 2006, CONCURRENCY STATE MO
   Martí-Oliet N, 2005, ELECTRON NOTES THEOR, V117, P417, DOI 10.1016/j.entcs.2004.06.020
   Martí-Oliet N, 2009, ELECTRON NOTES THEOR, V238, P227, DOI 10.1016/j.entcs.2009.05.022
   Martin Oscar, 2014, Specification, Algebra, and Software. Essays Dedicated to Kokichi Futatsugi: LNCS 8373, P129, DOI 10.1007/978-3-642-54624-2_7
   MARTIN O, 2018, LECT NOTES COMPUTER
   Martín O, 2016, LECT NOTES COMPUT SC, V9938, P141, DOI 10.1007/978-3-319-46520-3_10
   Martín O, 2016, LECT NOTES COMPUT SC, V9942, P98, DOI 10.1007/978-3-319-44802-2_6
   Mazurkiewicz Antoni, 1987, LNCS, V340, P307, DOI [10.1007/3-540-50580-6_35, DOI 10.1007/3-540-50580-6_35]
   Meseguer J., 2007, Higher-Order and Symbolic Computation, V20, P123, DOI 10.1007/s10990-007-9000-6
   MESEGUER J, 1992, THEOR COMPUT SCI, V96, P73, DOI 10.1016/0304-3975(92)90182-F
   Meseguer J, 1998, LECT NOTES COMPUT SC, V1376, P62
   Meseguer J, 2008, LECT NOTES COMPUT SC, V5065, P354, DOI 10.1007/978-3-540-68679-8_22
   Nicola Rocco, 2015, Software Engineering for Collective Autonomic Systems. The ASCENS Approach: LNCS 8998, P3, DOI 10.1007/978-3-319-16310-9_1
   Papadopoulos G. A., 1998, ADV COMPUT, V46, P329, DOI [DOI 10.1016/S0065-2458(08)60208-9, 10.1016/S0065-2458(08)60208-9]
   Reisig W., 2013, Understanding Petri Nets-Modeling Techniques, Analysis Methods, Case Studies
   Sanchez Cesar, 2012, 2012 19th International Symposium on Temporal Representation and Reasoning (TIME), P13, DOI 10.1109/TIME.2012.25
   Sobocinski P, 2016, ELECTRON P THEOR COM, P19, DOI 10.4204/EPTCS.204.3
   Verdejo A, 2012, ELECTRON P THEOR COM, P17, DOI 10.4204/EPTCS.82.2
   Welch PH, 2005, LECT NOTES COMPUT SC, V3525, P175
   Wells George., 2005, P WCAT 05, P87
NR 58
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2020
VL 20
IS 1
BP 44
EP 98
DI 10.1017/S1471068419000425
PG 55
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA JZ2EH
UT WOS:000504915200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alviano, M
   Dodaro, C
   Fichte, JK
   Hecher, M
   Philipp, T
   Rath, J
AF Alviano, Mario
   Dodaro, Carmine
   Fichte, Johannes K.
   Hecher, Markus
   Philipp, Tobias
   Rath, Jakob
TI Inconsistency Proofs for ASP: The ASP-DRUPE Format
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Answer Set Programming; Reverse Unit Propagation proofs; inconsistency
   proofs
ID LOGIC PROGRAMS; ANSWER; COMPLEXITY; SEMANTICS; DESIGN; SETS
AB Answer Set Programming (ASP) solvers are highly-tuned and complex procedures that implicitly solve the consistency problem, i.e., deciding whether a logic program admits an answer set. Verifying whether a claimed answer set is formally a correct answer set of the program can be decided in polynomial time for (normal) programs. However, it is far from immediate to verify whether a program that is claimed to be inconsistent, indeed does not admit any answer sets. In this paper, we address this problem and develop the new proof format ASP-DRUPE for propositional, disjunctive logic programs, including weight and choice rules. ASP-DRUPE is based on the Reverse Unit Propagation (RUP) format designed for Boolean satisfiability. We establish correctness of ASP-DRUPE and discuss how to integrate it into modern ASP solvers. Later, we provide an implementation of ASP-DRUPE into the wasp solver for normal logic programs.
C1 [Alviano, Mario; Dodaro, Carmine] Univ Calabria, Commenda Di Rende, Italy.
   [Fichte, Johannes K.] Tech Univ Dresden, Dresden, Germany.
   [Hecher, Markus; Rath, Jakob] TU Wien, Vienna, Austria.
   [Philipp, Tobias] Secunet Secur Networks AG, Essen, Germany.
C3 University of Calabria; Technische Universitat Dresden; Technische
   Universitat Wien
RP Alviano, M (corresponding author), Univ Calabria, Commenda Di Rende, Italy.
EM mario@alviano.net; dodaro@mat.unical.it; johannes.fichte@tu-dresden.de;
   hecher@dbai.tuwien.ac.at; tobias.philipp@secunet.com;
   jakob.rath@tuwien.ac.at
RI Dodaro, Carmine/AAE-5732-2020; Alviano, Mario/H-1355-2012
OI Dodaro, Carmine/0000-0002-5617-5286; 
FU MIUR under project "Declarative Reasoning over Streams" - PRIN 2017 [CUP
   H24I17000080001]; MISE under project "S2BDW" - "Horizon2020" PON
   IC2014-20 [F/050389/01-03/X32]; Regione Calabria under project "DLV
   LargeScale" - POR Calabria 2014-20 [CUP J28C17000220006]; Austrian
   Science Fund (FWF) [Y698]; German Science Fund (DFG) [HO 1294/11-1];
   GNCS-INdAM
FX Mario Alviano and Carmine Dodaro have been partially supported by MIUR
   under project "Declarative Reasoning over Streams" (CUP H24I17000080001)
   - PRIN 2017, by MISE under project "S2BDW" (F/050389/01-03/X32) -
   "Horizon2020" PON I&C2014-20, by Regione Calabria under project "DLV
   LargeScale" (CUP J28C17000220006) - POR Calabria 2014-20, and by
   GNCS-INdAM. Markus Hecher has been supported by Austrian Science Fund
   (FWF) Grant Y698. Johannes K. Fichte has been funded by German Science
   Fund (DFG) Grant HO 1294/11-1.
CR Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   Alviano M, 2018, THEOR PRACT LOG PROG, V18, P301, DOI 10.1017/S1471068418000133
   Balduccini M, 2006, ANN MATH ARTIF INTEL, V47, P183, DOI 10.1007/s10472-006-9026-1
   Bomanson J, 2016, FUND INFORM, V147, P63, DOI 10.3233/FI-2016-1398
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Calimeri Francesco, 2015, ASP CORE 2 INPUT LAN
   Clark K. L., 1977, LOGIC DATA BASES, P293
   Cruz-Filipe L, 2017, LECT NOTES ARTIF INT, V10395, P220, DOI 10.1007/978-3-319-63046-5_14
   Eén N, 2005, LECT NOTES COMPUT SC, V3569, P61, DOI 10.1007/11499107_5
   Faber W, 2005, LECT NOTES ARTIF INT, V3662, P40, DOI 10.1007/11546207_4
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Fages F., 1994, Methods of Logic in Computer Science, V1, P51
   Ferraris P, 2011, ACM T COMPUT LOG, V12, DOI 10.1145/1970398.1970401
   Gebser M., 2016, TECHNICAL COMMUNICAT, DOI [10.4230/OASIcs.ICLP.2016.2, DOI 10.4230/OASICS.ICLP.2016.2]
   Gebser M., 2012, Answer Set Solving in Practice
   GEBSER M, 2018, ABS180410437 CORR
   Gebser M., 2010, P 12 INT C PRINC KNO, P497
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P323, DOI 10.1017/S1471068410000554
   Gebser M, 2008, FRONT ARTIF INTEL AP, V178, P15, DOI 10.3233/978-1-58603-891-5-15
   Gelder A.V, 2008, INT S ART INT MATH I
   Gelfond M., 2014, THEOR PRACT LOG PROG, V14, P4
   Goldberg E, 2003, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, PROCEEDINGS, P886
   Guziolowski C, 2013, BIOINFORMATICS, V29, P2320, DOI 10.1093/bioinformatics/btt393
   Haubelt C, 2018, KUNSTL INTELL, V32, P205, DOI 10.1007/s13218-018-0530-3
   Heule Marijn J. H., 2013, Automated Deduction - CADE-24. 24th International Conference on Automated Deduction. Proceedings: LNCS 7898, P345, DOI 10.1007/978-3-642-38574-2_24
   Heule MJH, 2015, LECT NOTES ARTIF INT, V9195, P591, DOI 10.1007/978-3-319-21401-6_40
   Heule MJH, 2014, LECT NOTES ARTIF INT, V8562, P91, DOI 10.1007/978-3-319-08587-6_7
   Janhunen T., 2006, J APPL NONCLASSICAL, V1-2, P35, DOI DOI 10.3166/JANCL.16.35-86
   Kiesl B, 2018, LECT NOTES ARTIF INT, V10900, P516, DOI 10.1007/978-3-319-94205-6_34
   Lin F., 2003, IJCAI 03, P853
   LIU L., 2010, ARTIF INTELL, V174, P3
   LONSING F, 2018, LNCS, P161
   Marques-Silva JP, 1999, IEEE T COMPUT, V48, P506, DOI 10.1109/12.769433
   Pearce D, 1999, J LOGIC PROGRAM, V38, P79, DOI 10.1016/S0743-1066(98)10015-8
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Philipp T, 2016, LECT NOTES COMPUT SC, V10021, P415, DOI 10.1007/978-3-319-48758-8_27
   Ricca F, 2012, THEOR PRACT LOG PROG, V12, P361, DOI 10.1017/S147106841100007X
   Son TC, 2007, THEOR PRACT LOG PROG, V7, P355, DOI 10.1017/S1471068406002936
   Syrjanen T., 2000, LPARSE 1 0 USERS MAN
   Truszczynski M, 2011, THEOR PRACT LOG PROG, V11, P881, DOI 10.1017/S1471068410000463
   Wetzler N, 2014, LECT NOTES COMPUT SC, V8561, P422, DOI 10.1007/978-3-319-09284-3_31
NR 41
TC 2
Z9 2
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 891
EP 907
DI 10.1017/S1471068419000255
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500017
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gebser, M
   Kaminski, R
   Kaufmann, B
   Schaub, T
AF Gebser, Martin
   Kaminski, Roland
   Kaufmann, Benjamin
   Schaub, Torsten
TI Multi-shot ASP solving with clingo
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
ID ANSWER; KNOWLEDGE; CONFLICT; SAT
AB We introduce a new flexible paradigm of grounding and solving in Answer Set Programming (ASP), which we refer to as multi-shot ASP solving, and present its implementation in the ASP system clingo. Multi-shot ASP solving features grounding and solving processes that deal with continuously changing logic programs. In doing so, they remain operative and accommodate changes in a seamless way. For instance, such processes allow for advanced forms of search, as in optimization or theory solving, or interaction with an environment, as in robotics or query answering. Common to them is that the problem specification evolves during the reasoning process, either because data or constraints are added, deleted, or replaced. This evolutionary aspect adds another dimension to ASP since it brings about state changing operations. We address this issue by providing an operational semantics that characterizes grounding and solving processes in multi-shot ASP solving. This characterization provides a semantic account of grounder and solver states along with the operations manipulating them. The operative nature of multi-shot solving avoids redundancies in relaunching grounder and solver programs and benefits from the solver's learning capacities. dingo accomplishes this by complementing ASP's declarative input language with control capacities. On the declarative side, a new directive allows for structuring logic programs into named and parameterizable subprograms. The grounding and integration of these subprograms into the solving process is completely modular and fully controllable from the procedural side. To this end, dingo offers a new application programming interface that is conveniently accessible via scripting languages. By strictly separating logic and control, clingo also abolishes the need for dedicated systems for incremental and reactive reasoning, like iclingo and oclingo, respectively, and its flexibility goes well beyond the advanced yet still rigid solving processes of the latter.
C1 [Gebser, Martin; Kaminski, Roland; Kaufmann, Benjamin; Schaub, Torsten] Univ Potsdam, Potsdam, Germany.
   [Schaub, Torsten] INRIA Rennes, Rennes, France.
C3 University of Potsdam; Universite de Rennes
RP Gebser, M (corresponding author), Univ Potsdam, Potsdam, Germany.
RI Schaub, Torsten/O-5873-2019; Gebser, Martin/B-7169-2018; Kaminski,
   Roland/HMD-8407-2023
OI Schaub, Torsten/0000-0002-7456-041X; Kaminski,
   Roland/0000-0002-1361-6045
FU DFG [SCHA 550/9]
FX We are grateful to Evgenii Balai, Javier Romero, and Adam Smith for many
   fruitful discussions on the paper. This work was partially funded by DFG
   Grant SCHA 550/9.
CR Abiteboul S, 1995, FDN DATABASES
   Abseher M, 2014, LECT NOTES ARTIF INT, V8761, P558, DOI 10.1007/978-3-319-11558-0_39
   Alferes J. J., 2002, ARTIF INTELL, V138, P1
   Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   ALVIANO M., 2015, THEOR PRACT LOG PROG, V15, P4
   Andres Benjamin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P69, DOI 10.1007/978-3-319-23264-5_7
   Andres B., 2012, INT C LOG PROGR TECH, P212
   [Anonymous], 2015, Potassco User Guide
   [Anonymous], LECT NOTES ARTIFICIA
   Banbara M, 2017, THEOR PRACT LOG PROG, V17, P408, DOI 10.1017/S1471068417000138
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Brewka Gerhard, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P158, DOI 10.1007/978-3-319-23264-5_15
   Brewka G, 2015, AAAI CONF ARTIF INTE, P1467
   Cabalar P., 2013, Lecture Notes in Artificial Intelligence, V8148
   Calimeri F., 2012, ASP-CORE-2 Input Language Format
   Calimeri F., 2015, Lecture Notes in Artificial Intelligence, V9345
   Calimeri F, 2007, ANN MATH ARTIF INTEL, V50, P333, DOI 10.1007/s10472-007-9076-z
   DE CAT B, 2014, ARXIV14016312
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   De Pooter Stef, 2013, Applications of Declarative Programming and Knowledge Management. 19th International Conference, INAP 2011 and 25th Workshop on Logic Programming, WLP 2011. Revised Selected Papers 7773, P279, DOI 10.1007/978-3-642-41524-1_16
   Delgrande J, 2009, LECT NOTES COMPUT SC, V5649, P160, DOI 10.1007/978-3-642-02846-5_17
   Delgrande JamesP., 2008, Principles of Knowledge Representation and Reasoning: Proceedings of the Eleventh International Conference, KR 2008, Sydney, Australia, September 16-19, 2008, P411
   Dimopoulos Y, 2017, LECT NOTES ARTIF INT, V10377, P286, DOI 10.1007/978-3-319-61660-5_26
   Dodaro C., 2016, CEUR WORKSHOP P, V1745, P1
   DODARO C, 2016, ARXIV161105190
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Een N., 2003, ELECT NOTES THEORETI, V89, P543, DOI 10.1016/s1571-0661(05)82542-3
   Eiter T, 2012, THEOR PRACT LOG PROG, V12, P659, DOI 10.1017/S1471068412000233
   Fink M, 2013, LECT NOTES COMPUT SC, V8148, P317, DOI 10.1007/978-3-642-40564-8_31
   Fuscà D, 2016, PROCEEDINGS OF THE 18TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING (PPDP 2016), P38, DOI 10.1145/2967973.2968594
   Gebser Martin, 2015, Advances in Knowledge Representation, Logic Programming, and Abstract Argumentation. LNCS 9060, P17
   Gebser M, 2008, LECT NOTES COMPUT SC, V5366, P190, DOI 10.1007/978-3-540-89982-2_23
   GEBSER M., 2015, THEOR PRACT LOG PROG, V15, P4
   GEBSER M, 2013, P 6 WORKSH ANSW SET
   Gebser M., 2016, TECHNICAL COMMUNICAT, DOI [10.4230/OASIcs.ICLP.2016.2, DOI 10.4230/OASICS.ICLP.2016.2]
   Gebser M., 2012, Answer Set Solving in Practice
   Gebser M., 2012, Proceedings of the Thirteenth International Conference on Principles of Knowledge Representation and Reasoning (KR'12), P613
   GEBSER M, 2014, THEORY PRACTICE LO S, V14
   Gebser M., 2013, PROC AAAI, P350, DOI 10.1609/aaai.v27i1.8585
   Gebser M, 2013, LECT NOTES COMPUT SC, V8148, P348, DOI 10.1007/978-3-642-40564-8_35
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P54
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gebser Martin, 2013, P 23 INT JOINT C ART, P912
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   JANHUNEN T, 2017, LECT NOTES ARTIFICIA
   Janhunen T, 2017, THEOR PRACT LOG PROG, V17, P872, DOI 10.1017/S1471068417000242
   Kaminski R, 2017, LECT NOTES COMPUT SC, V10370, P167, DOI 10.1007/978-3-319-61033-7_6
   Kaufmann B, 2016, AI MAG, V37, P25, DOI 10.1609/aimag.v37i3.2672
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   McIlraith S, 2012, P 13 INT C PRINC KNO
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Oikarinen E, 2006, FRONT ARTIF INTEL AP, V141, P412
   Ostrowski M, 2012, THEOR PRACT LOG PROG, V12, P485, DOI 10.1017/S1471068412000142
   Ricca F., 2012, P 13 INT C PRINC KNO, P541
   Sabuncu O, 2017, LECT NOTES ARTIF INT, V10377, P336, DOI 10.1007/978-3-319-61660-5_30
   Simons Patrik, 2002, ARTIF INTELL, V138, P181
   Syrjanen T, 2001, LPARSE 1 0 USERS MAN
   Zhang Y, 2006, ARTIF INTELL, V170, P739, DOI 10.1016/j.artint.2006.02.002
NR 60
TC 106
Z9 110
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2019
VL 19
IS 1
BP 27
EP 82
DI 10.1017/S1471068418000054
PG 56
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA HF7OS
UT WOS:000454429700002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Aguado, F
   Cabalar, P
   Pérez, G
   Vidal, C
   Diéguez, M
AF Aguado, Felicidad
   Cabalar, Pedro
   Perez, Gilberto
   Vidal, Concepcion
   Dieguez, Martin
TI Technical Note Temporal logic programs with variables
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE artificial intelligence; knowledge representation; temporal logic;
   grounding; logic programming; answer set programming
ID SEMANTICS
AB In this note, we consider the problem of introducing variables in temporal logic programs under the formalism of Temporal Equilibrium Logic, an extension of Answer Set Programming for dealing with linear-time modal operators. To this aim, we provide a definition of a first-order version of Temporal Equilibrium Logic that shares the syntax of first-order Linear-time Temporal Logic but has different semantics, selecting some Linear-time Temporal Logic models we call temporal stable models. Then, we consider a subclass of theories (called splittable temporal logic programs) that are close to usual logic programs but allowing a restricted use of temporal operators. In this setting, we provide a syntactic definition of safe variables that suffices to show the property of domain independence - that is, addition of arbitrary elements in the universe does not vary the set of temporal stable models. Finally, we present a method for computing the derivable facts by constructing a non-temporal logic program with variables that is fed to a standard Answer Set Programming grounder. The information provided by the grounder is then used to generate a subset of ground temporal rules which is equivalent to (and generally smaller than) the full program instantiation.
C1 [Aguado, Felicidad; Cabalar, Pedro; Perez, Gilberto; Vidal, Concepcion] Univ A Coruna, Dept Comp Sci, La Coruna, Spain.
   [Dieguez, Martin] Univ Paul Sabatier, IRIT, Toulouse, France.
C3 Universidade da Coruna; Universite de Toulouse; Universite Toulouse III
   - Paul Sabatier
RP Aguado, F (corresponding author), Univ A Coruna, Dept Comp Sci, La Coruna, Spain.
EM aguado@udc.es; cabalar@udc.es; gperez@udc.es; eicovima@udc.es;
   martin.dieguez@irit.fr
RI Vidal Martín, Concepción/ABD-9547-2021; Vidal Martín,
   Concepción/AAA-2451-2022; Cabalar, Pedro/AAE-5198-2020
OI Vidal Martín, Concepción/0000-0002-5561-6406; Vidal Martín,
   Concepción/0000-0002-5561-6406; Dieguez, Martin/0000-0003-3440-4348;
   Aguado, Felicidad/0000-0002-4334-9267
FU Spanish MINECO [TIN2013-42149-P]; Xunta de Galicia [GPC 2013/070]
FX This research was partially supported by Spanish MINECO project
   TIN2013-42149-P and Xunta de Galicia GPC 2013/070.
CR Aguado F, 2008, LECT NOTES ARTIF INT, V5293, P8, DOI 10.1007/978-3-540-87803-2_3
   Aguado F, 2011, LECT NOTES ARTIF INT, V6645, P80
   Bozzelli L, 2015, IEEE S LOG, P645, DOI 10.1109/LICS.2015.65
   Bria A, 2008, LECT NOTES ARTIF INT, V5293, P76, DOI 10.1007/978-3-540-87803-2_8
   Cabalar P, 2011, LECT NOTES ARTIF INT, V6645, P370
   Cabalar P, 2009, LECT NOTES COMPUT SC, V5753, P58, DOI 10.1007/978-3-642-04238-6_8
   Calimeri Francesco, 2015, ASP CORE 2 INPUT LAN
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gelfond M., 1988, LOGIC PROGRAMM, V2, P1070
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Marek Victor, 1999, STABLE MODELS ALTERN, P169
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Pearce D, 1997, LECT NOTES ARTIF INT, V1216, P57, DOI 10.1007/BFb0023801
   Pearce D, 2006, ANN MATH ARTIF INTEL, V47, P3, DOI 10.1007/s10472-006-9028-z
   Pnueli Amir., 1977, P 18 ANN S FDN COMPU, P46, DOI DOI 10.1109/SFCS.1977.32
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
NR 16
TC 2
Z9 2
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2017
VL 17
IS 2
BP 226
EP 243
DI 10.1017/S1471068416000570
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA EN1TY
UT WOS:000395794300004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chen, Z
   Marple, K
   Salazar, E
   Gupta, G
   Tamil, L
AF Chen, Zhuo
   Marple, Kyle
   Salazar, Elmer
   Gupta, Gopal
   Tamil, Lakshman
TI A Physician Advisory System for Chronic Heart Failure management based
   on knowledge patterns
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
DE chronic disease management; knowledge pattern; answer set programming;
   knowledge representation; automated reasoning
ID ASSOCIATION TASK-FORCE; GUIDELINE
AB Management of chronic diseases such as chronic heart failure (CHF) is a major problem in health care. A standard approach followed by the medical community is to have a committee of experts develop guidelines that all physicians should follow. These guidelines typically consist of a series of complex rules that make recommendations based on a patient's information. Due to their complexity, often the guidelines are ignored or not complied with at all. It is not even clear whether it is humanly possible to follow these guidelines due to their length and complexity. For instance, for CHF, the guidelines run nearly eighty pages. In this paper we describe a physician-advisory system for CHF management that codes the entire set of clinical practice guidelines for CHF using answer set programming (ASP). Our approach is based on developing reasoning templates, that we call knowledge patterns, and using them to systemically code the clinical guidelines for CHF as ASP rules. Use of the knowledge patterns greatly facilitates the development of our system. Given a patient's medical information, our system generates a recommendation for treatment just as a human physician would, using the guidelines. Our system works even in the presence of incomplete information.
C1 [Chen, Zhuo; Marple, Kyle; Salazar, Elmer; Gupta, Gopal; Tamil, Lakshman] Univ Texas Dallas, Richardson, TX 75083 USA.
C3 University of Texas System; University of Texas Dallas
RP Chen, Z (corresponding author), Univ Texas Dallas, Richardson, TX 75083 USA.
EM zxc130130@utdallas.edu; kbm072000@utdallas.edu; ees101020@utdallas.edu;
   gupta@utdallas.edu; laxman@utdallas.edu
RI Tamil, Lakshman/M-1180-2014
OI Tamil, Lakshman/0000-0003-4523-9376
FU Div Of Information & Intelligent Systems; Direct For Computer & Info
   Scie & Enginr [1423419] Funding Source: National Science Foundation
CR Anderson G., 2004, Chronic Conditions: Making the Case for Ongoing Care
   [Anonymous], THESIS
   BALDWIN K. M., 2013, ANCC PATHW EXC C
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Buchman TG, 2006, J AM COLL SURGEONS, V202, P826, DOI 10.1016/j.jamcollsurg.2006.03.011
   Cabana MD, 1999, JAMA-J AM MED ASSOC, V282, P1458, DOI 10.1001/jama.282.15.1458
   Centers for Disease Control and Prevention, 2016, CHRON DIS OV PAG
   Faxon DP, 2004, STROKE, V35, P1527, DOI 10.1161/01.STR.0000128373.90851.7B
   Gebser M., 2014, P ICLP 2014 P
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Go A.S., 2013, Heart disease and stroke statistics-2013 update: A Report from the American Heart Association
   Jacobs AK, 2013, J AM COLL CARDIOL, V61, P213, DOI 10.1016/j.jacc.2012.09.025
   Jantos L.D., 2006, IT TOOLS CHRONIC DIS
   Marple K., 2012, Proceedings of the 14th symposium on Principles and practice of declarative programming, PPDP '12, P35, DOI DOI 10.1145/2370776.2370782
   Monteiro S., 2011, P 1 ACM WORKSH MOB S, V9, P1
   Wu S., 2000, Projection of chronic illness prevalence and cost inflation
   Yancy CW, 2013, J AM COLL CARDIOL, V62, pE147, DOI 10.1016/j.jacc.2013.05.019
NR 19
TC 29
Z9 32
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 604
EP 618
DI 10.1017/S1471068416000429
PN 5-6
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Governatori, G
   Olivieri, F
   Scannapieco, S
   Rotolo, A
   Cristani, M
AF Governatori, Guido
   Olivieri, Francesco
   Scannapieco, Simone
   Rotolo, Antonino
   Cristani, Matteo
TI The rationale behind the concept of goal
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 8th International Web Rule Symposium (RuleML) in conjunction with 21st
   European Conference on Artificial Intelligence (ECAI)
CY AUG 18-22, 2014
CL Prague, CZECH REPUBLIC
DE Agents; Defeasible logic; Desires; intentions; Goals; Obligations
ID DEFEASIBLE LOGIC; INTENTIONS; REASONER; CHOICE; AGENTS
AB The paper proposes a fresh look at the concept of goal and advances that motivational attitudes like desire, goal and intention are just facets of the broader notion of (acceptable) outcome. We propose to encode the preferences of an agent as sequences of "alternative acceptable outcomes". We then study how the agent's beliefs and norms can be used to filter the mental attitudes out of the sequences of alternative acceptable outcomes. Finally, we formalise such intuitions in a novel Modal Defeasible Logic and we prove that the resulting formalisation is computationally feasible.
C1 [Governatori, Guido] CSIRO, NICTA, Data61, Canberra, ACT, Australia.
   [Olivieri, Francesco; Scannapieco, Simone] Univ Verona, Dept Comp Sci, Verona, Italy.
   [Rotolo, Antonino] Univ Bologna, CIRSFID, Bologna, Italy.
C3 Australian National University; Commonwealth Scientific & Industrial
   Research Organisation (CSIRO); University of Verona; University of
   Bologna
RP Governatori, G (corresponding author), CSIRO, NICTA, Data61, Canberra, ACT, Australia.
EM guidogovernatori@data61.csiro.au; francesco.olivieri@univr.it;
   antonino.rotolo@unibo.it; matteo.cristani@univr.it
RI Olivieri, Francesco/AAS-2309-2021; Cristani, Matteo/ABE-9710-2020;
   Governatori, Guido/I-5293-2015; Cristani, Matteo/J-4235-2012
OI Olivieri, Francesco/0000-0003-0838-9850; Cristani,
   Matteo/0000-0001-5680-0080; Governatori, Guido/0000-0002-9878-2762;
   Scannapieco, Simone/0000-0002-4206-4198
CR Andrighetto G., 2013, ORMATIVE MULTIAGENT, V4
   Antoniou G, 2000, FRONT ARTIF INTEL AP, V54, P459
   Antoniou G., 2001, ACM T COMPUT LOG, V2, P255, DOI [DOI 10.1145/371316.371517, 10.1145/371316.371517]
   Bassiliades N, 2006, INT J SEMANT WEB INF, V2, P1, DOI 10.4018/jswis.2006010101
   Bratman M.E., 1987, Intention, Plans, and Practical Reason
   Brewka G, 2004, ARTIF INTELL, V157, P203, DOI 10.1016/j.artint.2004.04.006
   Broersen J., 2002, COGNITIVE SCI Q, V2, P428
   COHEN PR, 1990, ARTIF INTELL, V42, P213, DOI 10.1016/0004-3702(90)90055-5
   Dastani M, 2005, LECT NOTES ARTIF INT, V3835, P621, DOI 10.1007/11591191_43
   Dastani M., 2006, P 5 INT JOINT C AUT, P1285
   Dastani Mehdi., 2011, The 10th International Conference on Autonomous Agents and Multiagent Systems - Volume 1, AAMAS '11, V1, P405
   Governatori G, 2005, INT J COOP INF SYST, V14, P181, DOI 10.1142/S0218843005001092
   Governatori Guido, 2013, Theory, Practice, and Applications of Rules on the Web. 7th International Symposium, RuleML 2013. Proceedings. LNCS 8035, P99, DOI 10.1007/978-3-642-39617-5_12
   Governatori Guido, 2012, Deontic Logic in Computer Science. Proceedings 11th International Conference, DEON 2012, P46, DOI 10.1007/978-3-642-31570-1_4
   Governatori G., 2008, HDB RES BPM, P426
   Governatori G, 2008, AUTON AGENT MULTI-AG, V17, P36, DOI 10.1007/s10458-008-9030-4
   Governatori G, 2006, AUSTRALAS J LOG, V4, P193
   Governatori G, 2013, J PHILOS LOGIC, V42, P799, DOI 10.1007/s10992-013-9295-1
   Governatori G, 2009, LOG J IGPL, V17, P227, DOI 10.1093/jigpal/jzp006
   Hindriks K. V., 2001, LECT NOTES ARTIF INT, V1986, P228
   Kontopoulos E, 2011, INT J SEMANT WEB INF, V7, P18, DOI 10.4018/jswis.2011010102
   Kravari K., 2011, IJCAI 2011, proceedings of the 22nd international joint conference on artificial intelligence, P2662
   Lam HP, 2011, LECT NOTES ARTIF INT, V6645, P187
   Lam HP, 2009, LECT NOTES COMPUT SC, V5858, P315
   Maher MJ, 2001, THEOR PRACT LOG PROG, V1, P691, DOI 10.1017/S1471068401001168
   Olivieri Francesco, 2013, PRIMA 2013: Principles and Practice of Multi-Agent Systems. 16th International Conference. Proceedings: LNCS 8291, P213, DOI 10.1007/978-3-642-44927-7_15
   Prakken H, 2006, FRONT ARTIF INTEL AP, V144, P311
   RAO AS, 1991, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P473
   Shapiro S., 2012, Proceedings of the 11th International Conference on Autonomous Agents and Multiagent Systems (AAMAS), P1081
   Shapiro S, 2007, J LOGIC COMPUT, V17, P983, DOI 10.1093/logcom/exm050
   Shapiro S, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2625
   Tachmazidis I, 2012, FRONT ARTIF INTEL AP, V242, P738, DOI 10.3233/978-1-61499-098-7-738
   Thomason R., 2000, KR, P702
   van der Hoek W, 2007, SYNTHESE, V155, P265, DOI 10.1007/s11229-006-9145-6
   Van Riemsdijk M.B., 2008, P 7 INT JOINT C AUTO, V2, P713
   van Riemsdijk MB, 2009, AUTON AGENT MULTI-AG, V18, P471, DOI 10.1007/s10458-008-9067-4
   Vasconcelos WW, 2009, AUTON AGENT MULTI-AG, V19, P124, DOI 10.1007/s10458-008-9070-9
   Winikoff M., 2002, P 8 INT C PRINC KNOW, P470
   Wooldridge M., 1995, Intelligent Agents. ECAI-94 Workshop on Agent Theories, Architectures, and Languages Proceedings, P1
NR 39
TC 17
Z9 18
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2016
VL 16
SI SI
BP 296
EP 324
DI 10.1017/S1471068416000053
PN 3
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4MP
UT WOS:000386587100004
OA Green Submitted, Green Accepted, Bronze
DA 2024-07-18
ER

PT J
AU Antic, C
AF Antic, Christian
TI On Cascade Products of Answer Set Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
DE Answer Set Programming (ASP); Krohn-Rhodes Theory; Automata
ID DECOMPOSITION
AB Describing complex objects by elementary ones is a common strategy in mathematics and science in general. In their seminal 1965 paper, Kenneth Krohn and John Rhodes showed that every finite deterministic automaton can be represented (or "emulated") by a cascade product of very simple automata. This led to an elegant algebraic theory of automata based on finite semigroups (Krohn-Rhodes Theory). Surprisingly, by relating logic programs and automata, we can show in this paper that the Krohn-Rhodes Theory is applicable in Answer Set Programming (ASP). More precisely, we recast the concept of a cascade product to ASP, and prove that every program can be represented by a product of very simple programs, the reset and standard programs. Roughly, this implies that the reset and standard programs are the basic building blocks of ASP with respect to the cascade product. In a broader sense, this paper is a first step towards an algebraic theory of products and networks of nonmonotonic reasoning systems based on Krohn-Rhodes Theory, aiming at important open issues in ASP and AI in general.
C1 Vienna Univ Technol, Inst Informat Syst, A-1040 Vienna, Austria.
C3 Technische Universitat Wien
RP Antic, C (corresponding author), Vienna Univ Technol, Inst Informat Syst, Favoritenstr 9-11, A-1040 Vienna, Austria.
EM christian.antic@icloud.com
CR Antic C, 2013, LECT NOTES COMPUT SC, V8148, P102, DOI 10.1007/978-3-642-40564-8_11
   Brewka Gerhard, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P233, DOI 10.1007/978-3-642-20832-4_16
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Dao-Tran M, 2009, LECT NOTES COMPUT SC, V5649, P145, DOI 10.1007/978-3-642-02846-5_16
   Denecker M, 2003, ARTIF INTELL, V143, P79, DOI 10.1016/S0004-3702(02)00293-X
   Denecker M, 2000, SPRINGER INT SER ENG, V597, P127
   Domone P., 2005, SIAM MONOG DISCR MAT, P1
   Egri-Nagy A, 2005, LECT NOTES COMPUT SC, V3317, P315
   Egri-Nagy A., 2006, LECT NOTES ARTIF INT, P330
   Gecseg F, 1986, EATCS MONOGRAPHS THE
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   KROHN K, 1965, T AM MATH SOC, V116, P450, DOI 10.2307/1994127
NR 12
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 711
EP 723
DI 10.1017/S1471068414000301
PN 4-5
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200021
OA Green Submitted
DA 2024-07-18
ER

PT J
AU De Cat, B
   Bruynooghe, M
AF De Cat, Broes
   Bruynooghe, Maurice
TI Detection and exploitation of functional dependencies for model
   generation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
ID LOGIC; CSP
AB Recent work in Answer Set Programming has integrated ideas from Constraint Programming. This has led to a new field called ASP Modulo CSP (CASP), in which the ASP language is enriched with constraint atoms representing constraint satisfaction problems. These constraints have a more compact grounding and are handled by a new generation of search algorithms. However, the burden is on the modeler to exploit these new constructs in his declarative problem specifications. Here, we explore how to remove this burden by automatically generating constraint atoms. We do so in the context of FO(.)(IDP), a knowledge representation language that extends first-order logic with, among others, inductive definitions, arithmetic and aggregates. We uncover functional dependencies in declarative problem specifications with a theorem prover and exploit them with a transformation that introduces functions. Experimental evaluation shows that we obtain more compact groundings and better search performance.
C1 [De Cat, Broes; Bruynooghe, Maurice] Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
C3 KU Leuven
RP De Cat, B (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
EM broes.decat@cs.kuleuven.be; maurice.bruynooghe@cs.kuleuven.be
RI Bruynooghe, Maurice/A-6196-2014
OI Bruynooghe, Maurice/0000-0002-6881-1462
FU Institute for Science and Technology Flanders (IWT)
FX Broes De Cat is funded by the Institute for Science and Technology
   Flanders (IWT). We thank Philipp Rummer for sharing with us his insights
   into theorem provers and the reviewers for their valuable comments.
CR [Anonymous], 2003, Principles of Constraint Programming
   Armstrong W.W., 1974, IFIP C
   Balduccini M., 2012, LNCS, V7265, P24, DOI DOI 10.1007/978-3-642-30743-0_3
   Balduccini M, 2011, LECT NOTES ARTIF INT, V6645, P284
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Bartholomew M., 2012, STABLE MODELS FORMUL
   Baumgartner P, 2012, J SYMB COMPUT, V47, P1011, DOI 10.1016/j.jsc.2011.12.031
   Brewka G., 2012, PRINC KNOWL REPR REA
   Cabalar P., 2013, ASS LOGIC PROGRAMMIN, V26, P2
   Cabalar P, 2011, THEOR PRACT LOG PROG, V11, P203, DOI 10.1017/S1471068410000517
   Calimeri F, 2012, CORRABS12063111
   De Cat B., 2013, 644 CW KATH U LEUV D
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Denecker M, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1342991.1342998
   Denecker M, 2009, LECT NOTES COMPUT SC, V5753, P637, DOI 10.1007/978-3-642-04238-6_75
   Erdem E., 2009, LNCS, V5753
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P235, DOI 10.1007/978-3-642-02846-5_22
   Janhunen T, 2009, LECT NOTES COMPUT SC, V5753, P142, DOI 10.1007/978-3-642-04238-6_14
   Lierler Y., 2012, AAAI
   Lifschitz V., 2012, LOGIC PROGRAMS INTEN
   Lin, 2008, KR 2008, P454
   Marriott K, 2008, CONSTRAINTS, V13, P229, DOI 10.1007/s10601-008-9041-4
   Mears C, 2008, LECT NOTES COMPUT SC, V5015, P158, DOI 10.1007/978-3-540-68155-7_14
   NIEMELA I, 2006, JELIA, V4160, P15
   Ostrowski M, 2012, THEOR PRACT LOG PROG, V12, P485, DOI 10.1017/S1471068412000142
   Pelov N, 2005, LECT NOTES COMPUT SC, V3668, P221, DOI 10.1007/11562931_18
   PELOV N, 2004, THESIS KU LEUVEN LEU
   Rummer P, 2008, LECT NOTES ARTIF INT, V5330, P274, DOI 10.1007/978-3-540-89439-1_20
   VANGELDER A, 1993, J COMPUT SYST SCI, V47, P185, DOI 10.1016/0022-0000(93)90024-Q
   Weidenbach C, 2009, LECT NOTES ARTIF INT, V5663, P140, DOI 10.1007/978-3-642-02959-2_10
   Wittocx J., 2013, ACM T COMPUTATIONAL
NR 31
TC 4
Z9 4
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 471
EP 485
DI 10.1017/S147106841300029X
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400002
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Greco, S
   Molinaro, C
   Trubitsyna, I
AF Greco, Sergio
   Molinaro, Cristian
   Trubitsyna, Irina
TI Logic programming with function symbols: Checking termination of
   bottom-up evaluation through program adornments
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
DE logic programming with function symbols; bottom-up evaluation; program
   evaluation termination; stable models
ID TERM; ASP
AB Recent years have witnessed an increasing interest in enhancing answer set solvers by allowing function symbols. Since the introduction of function symbols makes common inference tasks undecidable, research has focused on identifying classes of programs allowing only a restricted use of function symbols while ensuring decidability of common inference tasks. Finitely-ground programs, introduced in Calimeri et al. (2008), are guaranteed to admit a finite number of stable models with each of them of finite size. Stable models of such programs can be computed and thus common inference tasks become decidable. Unfortunately, checking whether a program is finitely-ground is semi-decidable. This has led to several decidable criteria, called termination criteria, providing sufficient conditions for a program to be finitely-ground. This paper presents a new technique that, used in conjunction with current termination criteria, allows us to detect more programs as finitely-ground. Specifically, the proposed technique takes a logic program P and transforms it into an adorned program P-mu with the aim of applying termination criteria to P-mu rather than P. The transformation is sound in that if the adorned program satisfies a certain termination criterion, then the original program is finitely-ground. Importantly, applying termination criteria to adorned programs rather than the original ones strictly enlarges the class of programs recognized as finitely-ground.
C1 [Greco, Sergio; Molinaro, Cristian; Trubitsyna, Irina] Univ Calabria, DIMES, I-87030 Commenda Di Rende, Italy.
C3 University of Calabria
RP Greco, S (corresponding author), Univ Calabria, DIMES, I-87030 Commenda Di Rende, Italy.
EM greco@dimes.unical.it; cmolinaro@dimes.unical.it;
   trubitsyna@dimes.unical.it
RI Trubitsyna, Irina/AAY-7265-2020; Molinaro, Cristian/AAI-5465-2021
OI Greco, Sergio/0000-0003-2966-3484; Molinaro,
   Cristian/0000-0003-4103-1084; TRUBITSYNA, Irina/0000-0002-9031-0672
CR Alviano M, 2010, THEOR PRACT LOG PROG, V10, P497, DOI 10.1017/S1471068410000244
   Arts T, 2000, THEOR COMPUT SCI, V236, P133, DOI 10.1016/S0304-3975(99)00207-8
   Baselice S, 2009, THEOR PRACT LOG PROG, V9, P213, DOI 10.1017/S147106840900372X
   Bonatti PA, 2004, ARTIF INTELL, V156, P75, DOI [10.1016/j.artint.2004.02.001, 10.1016/j.artint.2004.02.002]
   Bruynooghe M, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1216374.1216378
   Calautti M., 2013, INT S PRINC IN PRESS
   Calimeri F., 2010, AAAI C ART INT
   Calimeri F, 2008, LECT NOTES COMPUT SC, V5366, P407, DOI 10.1007/978-3-540-89982-2_37
   Codish M, 2005, LECT NOTES COMPUT SC, V3668, P326, DOI 10.1007/11562931_25
   De Schreye D, 1994, J LOGIC PROGRAM, V20, P199, DOI 10.1016/0743-1066(94)90027-2
   Deutsch A., 2008, PODS, P149
   Endrullis J, 2008, J AUTOM REASONING, V40, P195, DOI 10.1007/s10817-007-9087-9
   Fagin R, 2005, THEOR COMPUT SCI, V336, P89, DOI 10.1016/j.tcs.2004.10.033
   Ferreira MCF, 1996, APPL ALGEBR ENG COMM, V7, P133, DOI 10.1007/s002000050024
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Greco S., 2013, INT JOINT C IN PRESS
   Greco S., 2012, Synthesis Lectures on Data Management
   Greco S., 2012, P INT C LOG PROGR TE, P323
   Greco S, 2011, PROC VLDB ENDOW, V4, P1158
   Greco S, 2010, PROC VLDB ENDOW, V3, P93, DOI 10.14778/1920841.1920858
   Jimenez-Ruiz E., 2012, KR
   Kr?tzsch M., 2011, P 22 INT JOINT C ART, P963, DOI DOI 10.5591/978-1-57735-516-8/IJCAI11-166
   Lierler Y, 2009, LECT NOTES COMPUT SC, V5649, P489, DOI 10.1007/978-3-642-02846-5_40
   Marchiori M., 1996, Algebraic Methodology and Software Technology. 5th International Conference, AMAST '96. Proceedings, P375, DOI 10.1007/BFb0014328
   Marnette B, 2009, PODS'09: PROCEEDINGS OF THE TWENTY-EIGHTH ACM SIGMOD-SIGACT-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P13, DOI 10.1145/1559795.1559799
   Meier Michael., 2009, PVLDB, V2, P970
   Nguyen MT, 2008, LECT NOTES COMPUT SC, V4915, P8, DOI 10.1007/978-3-540-78769-3_2
   Nishida N, 2010, APPL ALGEBR ENG COMM, V21, P177, DOI 10.1007/s00200-010-0122-4
   Ohlebusch E, 2001, APPL ALGEBR ENG COMM, V12, P73, DOI 10.1007/s002000100064
   Schneider-Kamp P, 2010, THEOR PRACT LOG PROG, V10, P365, DOI 10.1017/S1471068410000165
   Schneider-Kamp P, 2010, LECT NOTES COMPUT SC, V6037, P37, DOI 10.1007/978-3-642-12592-8_4
   Schneider-Kamp P, 2009, ACM T COMPUT LOG, V11, DOI 10.1145/1614431.1614433
   Serebrenik A, 2005, THEOR PRACT LOG PROG, V5, P355, DOI 10.1017/S1471068404002248
   Sternagel C, 2008, LECT NOTES COMPUT SC, V5117, P336, DOI 10.1007/978-3-540-70590-1_23
   Syrjanen T., 2001, LOGIC PROGRAMMING NO, P267, DOI DOI 10.1007/3-540-45402-0_20
   Voets D, 2011, THEOR PRACT LOG PROG, V11, P521, DOI 10.1017/S1471068411000159
   Zantema H., 1995, Fundamenta Informaticae, V24, P89
   ZANTEMA H, 1994, J SYMB COMPUT, V17, P23, DOI 10.1006/jsco.1994.1003
NR 40
TC 7
Z9 7
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 737
EP 752
DI 10.1017/S147106841300046X
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400019
DA 2024-07-18
ER

PT J
AU Lifschitz, V
   Pichotta, K
   Yang, FK
AF Lifschitz, Vladimir
   Pichotta, Karl
   Yang, Fangkai
TI Relational theories with null values and non-herbrand stable models
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
ID LOGIC PROGRAMS; CIRCUMSCRIPTION; SEMANTICS
AB Generalized relational theories with null values in the sense of Reiter are first-order theories that provide a semantics for relational databases with incomplete information. In this paper we show that any such theory can be turned into an equivalent logic program, so that models of the theory can be generated using computational methods of answer set programming. As a step towards this goal, we develop a general method for calculating stable models under the domain closure assumption but without the unique name assumption.
C1 [Lifschitz, Vladimir; Pichotta, Karl; Yang, Fangkai] Univ Texas Austin, Dept Comp Sci, Austin, TX 78712 USA.
C3 University of Texas System; University of Texas Austin
RP Lifschitz, V (corresponding author), Univ Texas Austin, Dept Comp Sci, Austin, TX 78712 USA.
EM vl@cs.utexas.edu; pichotta@cs.utexas.edu; fkyang@cs.utexas.edu
CR [Anonymous], NUMERICAL METHODS SO, DOI DOI 10.1007/978-1-4612-1984-2_19
   [Anonymous], ACM T COMPUTATIONAL
   Clark K. L., 1978, Logic and data bases, P293
   Ferraris P, 2011, ARTIF INTELL, V175, P236, DOI 10.1016/j.artint.2010.04.011
   Ferraris P, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P372
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gottlob G., 2010, P 25 ANN IEEE S LOG
   Lee J, 2009, LECT NOTES COMPUT SC, V5753, P515, DOI 10.1007/978-3-642-04238-6_51
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lifschitz V., 1994, HDB LOGIC AI LOGIC P, V3, P298
   Lifschitz V, 2007, LECT NOTES COMPUT SC, V4483, P188, DOI 10.1007/978-3-540-72200-7_17
   Lifschitz V, 2008, FOUND ARTIF INTELL, P3, DOI 10.1016/S1574-6526(07)03001-5
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   MCCARTHY J, 1986, ARTIF INTELL, V28, P89, DOI 10.1016/0004-3702(86)90032-9
   MCCARTHY J, 1980, ARTIF INTELL, V13, P171, DOI 10.1016/0004-3702(80)90016-8
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   NIEMELA I, 1996, P JOINT INT C S LOG, P289
   Robinson A., 1963, Introduction to Model theory and to the Metamathematics of Algebra
   SAKAMA C, 1994, J AUTOM REASONING, V13, P145, DOI 10.1007/BF00881915
   Traylor B., 1994, LECT NOTES COMPUTER, V813, P341
   Vladimir L, 2008, P AAAI C ART INT, V8, P1594
NR 21
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2012
VL 12
BP 565
EP 582
DI 10.1017/S147106841200018X
PN 4-5
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 000CV
UT WOS:000308365000009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pontelli, E
   Son, TC
   Elkhatib, O
AF Pontelli, Enrico
   Son, Tran Cao
   Elkhatib, Omar
TI Justifications for logic programs under answer set semantics
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; justification; offline justification; online
   justification
ID FRAMEWORK; GRAPH
AB The paper introduces the notion of offline justification for answer set programming (ASP). Justifications provide a graph-based explanation of the truth value of an atom with respect to a given answer set. The paper extends also this notion to provide justification of atoms during the computation of an answer set (on-line justification) and presents an integration of online justifications within the computation model Of SMODELS. Offline and online justifications provide useful tools to enhance understanding of ASP, and they offer a basic data structure to support methodologies and tools for debugging answer set programs. A preliminary implementation has been developed in ASP - PROLOG.
C1 [Pontelli, Enrico; Son, Tran Cao; Elkhatib, Omar] New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88003 USA.
C3 New Mexico State University
RP Pontelli, E (corresponding author), New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88003 USA.
EM epontell@cs.nmsu.edu; tson@cs.nmsu.edu; okhatib@cs.nmsu.edu
RI Pontelli, Enrico/AAJ-5161-2021
OI Pontelli, Enrico/0000-0002-7753-1737
FU Div Of Information & Intelligent Systems; Direct For Computer & Info
   Scie & Enginr [0812267] Funding Source: National Science Foundation
CR Anger C, 2005, LECT NOTES ARTIF INT, V3835, P95, DOI 10.1007/11591191_8
   [Anonymous], 1988, International Symposium on Logic Programming
   APT KR, 1994, J LOGIC PROGRAM, V20, P9, DOI 10.1016/0743-1066(94)90024-8
   Arora T., 1993, Deductive and Object-Oriented Databases. Third International Conference, DOOD '93. Proceedings, P101
   AUGUSTON M, 2000, P 4 INT WORKSH AUT D
   Balduccini M, 2003, THEOR PRACT LOG PROG, V3, P425, DOI 10.1017/S1471068403001807
   Balduccini M, 2007, LECT NOTES COMPUT SC, V4483, P18, DOI 10.1007/978-3-540-72200-7_4
   Balduccini M, 2006, ANN MATH ARTIF INTEL, V47, P183, DOI 10.1007/s10472-006-9026-1
   Baral C., 2003, KNOWLEDGE REPRESENTA
   BRAIN M, 2005, ANSWER SET PROGRAMMI, P142
   Brain M, 2007, LECT NOTES COMPUT SC, V4483, P31, DOI 10.1007/978-3-540-72200-7_5
   Brain Martin, 2007, P WORKSH SOFTW ENG A, P71
   Brass S, 2001, THEOR PRACT LOG PROG, V1, P497, DOI 10.1017/S147106840100103X
   Costantini S., 2001, Answer Set Programming: Towards Efficient and Scalable Knowledge Representation and Reasoning. Papers from the 2001 AAAI Symposium, P21
   Costantini S, 2002, INFORM PROCESS LETT, V84, P241, DOI 10.1016/S0020-0190(02)00290-9
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   Debray S, 1997, LOGIC PROGRAMM, P291
   Delgrande JP, 2003, THEOR PRACT LOG PROG, V3, P129, DOI 10.1017/S1471068402001539
   DERANSART P, 2000, LECT NOTES COMPUTER, V1870
   Ducassé M, 1999, J LOGIC PROGRAM, V39, P177, DOI 10.1016/S0743-1066(98)10036-5
   EITER T, 1998, INT C PRINC KNOWL RE, P406
   El-Khatib O., 2005, P 6 INT WORKSH AUT D, P49
   Elkhatib O, 2004, LECT NOTES COMPUT SC, V3057, P148
   Erdem E, 2006, THEOR PRACT LOG PROG, V6, P539, DOI 10.1017/S1471068406002729
   FAGES F, 1994, J METHODS LOGIC COMP, V1, P51
   GEBSER M, 2007, LECT NOTES ARTIF INT, V4483, P766
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P260, DOI 10.1007/978-3-540-72200-7_23
   Gelfond M, 2002, ARTIF INTELL, V138, P3, DOI 10.1016/S0004-3702(02)00207-2
   Giunchiglia E, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P61
   Giunchiglia E, 2005, LECT NOTES COMPUT SC, V3668, P37, DOI 10.1007/11562931_6
   GRAS DC, 2000, LECT NOTES COMPUTER, V1861, P131
   GUO HF, 2001, INT C LOGIC PROGRAMM, P150
   Konczak K, 2006, THEOR PRACT LOG PROG, V6, P61, DOI 10.1017/S1471068405002528
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Lin FZ, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P112
   Lloyd J. W., 2012, Foundations of Logic Programming
   Mallet S, 1999, LOGIC PROGRAMM, P154
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Niemela I, 1997, LECT NOTES ARTIF INT, V1265, P420
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Pemmasani G, 2004, LECT NOTES COMPUT SC, V2998, P24
   Perrin S, 2007, PROCEEDINGS OF THE 2007 IEEE INTERNATIONAL FREQUENCY CONTROL SYMPOSIUM-JOINTLY WITH THE 21ST EUROPEAN FREQUENCY AND TIME FORUM, VOLS 1-4, P86, DOI 10.1109/FREQ.2007.4319037
   PINEDA A, 1999, 5990 CLIP U POL MADR
   Puebla G, 1998, LECT NOTES COMPUT SC, V1520, P472
   ROYCHOUDHURY A, 2000, 2 INT C PRINC PRACT, P179
   Saha D, 2005, LECT NOTES COMPUT SC, V3668, P235, DOI 10.1007/11562931_19
   Shapiro Ehud Y., 1982, Proceedings of the 9th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, P299, DOI 10.1145/582153.582185
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Specht G., 1993, P 5 WORKSH LOG PROGR, P8
   Syrjanen T., 2006, P 11 INT WORKSH NONM, V6, P77
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Vaupel R, 1997, LOGIC PROGRAMM, P271
NR 54
TC 45
Z9 46
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2009
VL 9
BP 1
EP 56
DI 10.1017/S1471068408003633
PN 1
PG 56
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 413QV
UT WOS:000263808500001
DA 2024-07-18
ER

PT J
AU Bruynooghe, M
AF Bruynooghe, M
TI Programming pearl - Enhancing a search algorithm to perform intelligent
   backtracking
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE intelligent backtracking; dependency-directed backtracking; backjumping;
   conflict-directed backjuniping; nogood sets; look-back
AB This paper illustrates how a Prolog program, using chronological backtracking to find a solution in some search space, can be enhanced to perforin intelligent backtracking. The enhancement crucially relics on the impurity of Prolog that allows a program to store information when a dead end is reached. To illustrate the technique, a simple search program is enhanced.
C1 Katholieke Univ Leuven, Dept Comp Sci, B-3001 Heverlee, Belgium.
C3 KU Leuven
RP Bruynooghe, M (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Celestijnenlaan 200A, B-3001 Heverlee, Belgium.
EM Maurice.Bruynooghe@cs.kuleuven.ac.be
RI Bruynooghe, Maurice/A-6196-2014
OI Bruynooghe, Maurice/0000-0002-6881-1462
CR [Anonymous], 1989, Constraint Satisfaction in Logic Programming
   Bruynooghe M., 1998, Principles of Declarative Programming. 10th International Symposium, PLILP'98. Held Jointly with the 6th International Conference, ALP'98. Proceedings, P118, DOI 10.1007/BFb0056611
   BRUYNOOGHE M, 1981, INFORM PROCESS LETT, V12, P36, DOI 10.1016/0020-0190(81)90074-0
   Bruynooghe M., 1984, IMPLEMENTATIONS PROL, P194
   Bruynooghe M., 1991, COMPUTATIONAL LOGIC, P166
   BRUYNOOGHE M, 1999, J FUNCTIONAL LOG NOV, P1
   Dechter R, 2002, ARTIF INTELL, V136, P147, DOI 10.1016/S0004-3702(02)00120-0
   Ginsberg ML, 1993, J ARTIF INTELL RES, V1, P25, DOI 10.1613/jair.1
   ROBINSON JA, 1965, INT J COMPUT MATH, V1, P227
   Rosiers W., 1987, ARTIF INTELL, P173
NR 10
TC 8
Z9 8
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 40 WEST 20TH ST, NEW YORK, NY 10011-4211 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2004
VL 4
BP 371
EP 380
DI 10.1017/S1471068403001893
PN 3
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 819GE
UT WOS:000221302000005
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Thevapalan, A
   Kern-Isberner, G
AF Thevapalan, Andre
   Kern-Isberner, Gabriele
TI On Establishing Robust Consistency in Answer Set Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic programming; answer set programming; consistency; contradictions;
   conflicts; interactions
ID LOGIC; SEMANTICS; EXISTENCE
AB Answer set programs used in real-world applications often require that the program is usable with different input data. This, however, can often lead to contradictory statements and consequently to an inconsistent program. Causes for potential contradictions in a program are conflicting rules. In this paper, we show how to ensure that a program P remains non-contradictory given any allowed set of such input data. For that, we introduce the notion of conflict-resolving lambda-extensions. A conflict-resolving lambda-extension for a conflicting rule r is a set lambda of (default) literals such that extending the body of r by lambda resolves all conflicts of r at once. We investigate the properties that suitable lambda-extensions should possess and building on that, we develop a strategy to compute all such conflict-resolving lambda-extensions for each conflicting rule in P. We show that by implementing a conflict resolution process that successively resolves conflicts using lambda-extensions eventually yields a program that remains non-contradictory given any allowed set of input data.
C1 [Thevapalan, Andre; Kern-Isberner, Gabriele] Tech Univ Dortmund, Dortmund, Germany.
C3 Dortmund University of Technology
RP Thevapalan, A (corresponding author), Tech Univ Dortmund, Dortmund, Germany.
EM andre.thevapalan@tu-dortmund.de;
   gabriele.kern-isberner@cs.uni-dortmund.de
OI Thevapalan, Andre/0000-0001-5679-6931
CR Abdelhalim A, 2009, LECT NOTES COMPUT SC, V5858, P108, DOI 10.1007/978-3-642-04985-9_12
   Alferes JJ, 2000, J LOGIC PROGRAM, V45, P43, DOI 10.1016/S0743-1066(99)00065-5
   Alferes JoseJulio., 1998, APPIA-GULP-PRODE'98, P393
   Berge C., 1989, HYPERGRAPHS COMBINAT
   Caminada M., 2006, PROC 11 INT WORKSHOP, P103
   Caminada M, 2017, J APPL LOG-IFCOLOG, V4, P2457
   Caminada M, 2006, FRONT ARTIF INTEL AP, V141, P743
   Costantini S, 2006, THEOR PRACT LOG PROG, V6, P169, DOI 10.1017/S1471068405002589
   Eiter T, 2002, THEOR PRACT LOG PROG, V2, P711, DOI 10.1017/S1471068401001247
   Gebser M., 2012, SYNTHESIS LECT ARTIF, DOI [10.2200/S00457ED1V01Y201211AIM019, DOI 10.2200/S00457ED1V01Y201211AIM019, 10.1007/978-3-031-01561-8]
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Ghosh A K, 2004, J Assoc Physicians India, V52, P739
   Inoue K., 1993, THESIS KYOTO U
   Modgil S, 2009, ARGUMENTATION IN ARTIFICIAL INTELLIGENCE, P105, DOI 10.1007/978-0-387-98197-0_6
   PRZYMUSINSKI T, 1991, ARTIF INTELL, V49, P309, DOI 10.1016/0004-3702(91)90013-A
   REITER R, 1980, ARTIF INTELL, V13, P81, DOI 10.1016/0004-3702(80)90014-4
   Schulz Claudia, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P467, DOI 10.1007/978-3-319-23264-5_39
   Schulz C., 2017, THESIS IMPERIAL COLL
   Thevapalan A., 2021, CEUR WORKSHOP PROC, V2970
   Thevapalan A., 2022, P LECT NOTES COMPUTE, V13416
   Thevapalan A., 2020, 18 INT WORKSHOP NONM, P29
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Walton D., 1995, Commitment in dialogue: Basic concepts of interpersonal reasoning
NR 23
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2023
VL 23
IS 5
BP 1094
EP 1127
AR PII S1471068422000357
DI 10.1017/S1471068422000357
EA SEP 2022
PG 34
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA IE8Z7
UT WOS:000857858700001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU KIESEL, R
   TOTIS, P
   KIMMIG, A
AF KIESEL, R. A. F. A. E. L.
   TOTIS, P. I. E. T. R. O.
   KIMMIG, A. N. G. E. L. I. K. A.
TI Efficient Knowledge Compilation Beyond Weighted Model Counting
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE design; analysis and implementation of languages; logic programming
   methodology and applications
ID INFERENCE
AB Quantitative extensions of logic programming often require the solution of so called second level inference tasks, that is, problems that involve a third operation, such as maximization or normalization, on top of addition and multiplication, and thus go beyond the well-known weighted or algebraic model counting setting of probabilistic logic programming under the distribution semantics. We introduce Second Level Algebraic Model Counting (2AMC) as a generic framework for these kinds of problems. As 2AMC is to (algebraic) model counting what forall-exists-SAT is to propositional satisfiability, it is notoriously hard to solve. First level techniques based on Knowledge Compilation (KC) have been adapted for specific 2AMC instances by imposing variable order constraints on the resulting circuit. However, those constraints can severely increase the circuit size and thus decrease the efficiency of such approaches. We show that we can exploit the logical structure of a 2AMC problem to omit parts of these constraints, thus limiting the negative effect. Furthermore, we introduce and implement a strategy to generate a sufficient set of constraints statically, with a priori guarantees for the performance of KC. Our empirical evaluation on several benchmarks and tasks confirms that our theoretical results can translate into more efficient solving in practice.
C1 [KIESEL, R. A. F. A. E. L.] TU Wien, Vienna, Austria.
   [TOTIS, P. I. E. T. R. O.; KIMMIG, A. N. G. E. L. I. K. A.] Katholieke Univ Leuven, Leuven, Belgium.
C3 Technische Universitat Wien; KU Leuven
RP Kiesel, R (corresponding author), TU Wien, Vienna, Austria.
EM rafael.kiesel@web.de; pietro.totis@kuleuven.be;
   angelika.kimmig@kuleuven.be
OI Kiesel, Rafael/0000-0002-8866-3452; Totis, Pietro/0000-0001-5845-6914
FU Austrian Science Fund (FWF) [W1255-N23]; Fonds Wetenschappelijk
   Onderzoek (FWO) [G066818N]; TU Wien Bibliothek through its Open Access
   Funding Programme
FX This work has been supported by the Austrian Science Fund (FWF) Grant
   W1255-N23, the Fonds Wetenschappelijk Onderzoek (FWO) project N.
   G066818N, and TU Wien Bibliothek through its Open Access Funding
   Programme.
CR Aziz RA, 2015, AAAI CONF ARTIF INTE, P3468
   Barabási AL, 2003, SCI AM, V288, P60, DOI 10.1038/scientificamerican0503-60
   Baral C, 2009, THEOR PRACT LOG PROG, V9, P57, DOI 10.1017/S1471068408003645
   Bellodi E, 2020, THEOR PRACT LOG PROG, V20, P641, DOI 10.1017/S1471068420000174
   Darwiche A, 2004, FRONT ARTIF INTEL AP, V110, P328
   Darwiche A., 2011, IJCAI, DOI DOI 10.5591/978-1-57735-516-8/IJCAI11-143
   De Raedt, 2011, AAAI
   Dell H., 2017, INT S PARAMETERIZED, V30, P13
   Derkinderen V, 2020, FRONT ARTIF INTEL AP, V325, P2569, DOI 10.3233/FAIA200392
   Eiter T., 2021, P 18 INT C PRINCIPLE, P269
   Fierens D, 2015, THEOR PRACT LOG PROG, V15, P358, DOI 10.1017/S1471068414000076
   Gebser M., 2014, ARXIV
   Kimmig A, 2017, J APPL LOGIC, V22, P46, DOI 10.1016/j.jal.2016.11.031
   Korhonen T., 2021, CP LIPICS, V210
   Lagniez, 2016, IJCAI, P751
   Latour Anna L. D., 2017, Principles and Practice of Constraint Programming. 23rd International Conference, CP 2017. Proceedings: LNCS 10416, P495, DOI 10.1007/978-3-319-66158-2_32
   Lee J, 2017, AAAI CONF ARTIF INTE, P1170
   Manhaeve R, 2018, ADV NEURAL INFORM PR, P3753
   Oztok U, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P3141
   Raedt L. D., 2007, P 20 INT JOINT C ART, P2462
   Riguzzi F, 2011, THEOR PRACT LOG PROG, V11, P433, DOI 10.1017/S147106841100010X
   Skryagin A., 2021, ABS211003395 CORR
   Totis P., 2021, ABS211001990 STARAI
   Van den Broeck G, 2010, AAAI CONF ARTIF INTE, P1217
   Yang Z, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1755
NR 25
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2022
VL 22
IS 4
SI SI
BP 505
EP 522
AR PII S147106842200014X
DI 10.1017/S147106842200014X
EA AUG 2022
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 3T5UX
UT WOS:000835998800001
OA Green Submitted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Dodaro, C
   Maratea, M
   Vallati, M
AF Dodaro, Carmine
   Maratea, Marco
   Vallati, Mauro
TI On the Configuration of More and Less Expressive Logic Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE SATisfiability; answer set programming; knowledge configuration
ID ALGORITHM SELECTION; I-DLV; ANSWER; SOLVER; GROUNDER
AB The decoupling between the representation of a certain problem, that is, its knowledge model, and the reasoning side is one of main strong points of model-based artificial intelligence (AI). This allows, for example, to focus on improving the reasoning side by having advantages on the whole solving process. Further, it is also well known that many solvers are very sensitive to even syntactic changes in the input. In this paper, we focus on improving the reasoning side by taking advantages of such sensitivity. We consider two well-known model-based AI methodologies, SAT and ASP, define a number of syntactic features that may characterise their inputs, and use automated configuration tools to reformulate the input formula or program. Results of a wide experimental analysis involving SAT and ASP domains, taken from respective competitions, show the different advantages that can be obtained by using input reformulation and configuration.
C1 [Dodaro, Carmine] Univ Calabria, Arcavacata Di Rende, Italy.
   [Maratea, Marco] Univ Genoa, Genoa, Italy.
   [Vallati, Mauro] Univ Huddersfield, Huddersfield HD1 3DH, W Yorkshire, England.
C3 University of Calabria; University of Genoa; University of Huddersfield
RP Dodaro, C (corresponding author), Univ Calabria, Arcavacata Di Rende, Italy.
EM dodaro@mat.unical.it; marco.maratea@unige.it; m.vallati@hud.ac.uk
RI Maratea, Marco/AAR-5779-2020; Vallati, Mauro/R-9385-2019
OI Vallati, Mauro/0000-0002-8429-3570; MARATEA, MARCO/0000-0002-9034-2527
CR Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   [Anonymous], 2012, SAT, DOI 10.1007/978-3-642-31612-8_18
   Ansótegui C, 2009, LECT NOTES COMPUT SC, V5732, P142, DOI 10.1007/978-3-642-04244-7_14
   Audemard Gilles, 2013, Theory and Applications of Satisfiability Testing - SAT 2013. 16th International Conference. Proceedings. LNCS 7962, P309
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Biedenkapp A., 2018, INT C LEARNING INTEL, V11353, P115
   Biere, 2017, SAT COMPETITION 2017
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P205, DOI 10.1017/S1471068418000546
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Calimeri F, 2017, INTELL ARTIF, V11, P5, DOI 10.3233/IA-170104
   Calimeri F, 2014, THEOR PRACT LOG PROG, V14, P117, DOI 10.1017/S1471068412000105
   Cerutti F, 2018, INT J APPROX REASON, V92, P120, DOI 10.1016/j.ijar.2017.10.002
   Dingess M., 2020, P 36 INT C LOG PROGR
   Eggensperger K, 2019, J ARTIF INTELL RES, V64, P861, DOI 10.1613/jair.1.11420
   Erdem E, 2003, THEOR PRACT LOG PROG, V3, P499, DOI 10.1017/S1471068403001765
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Falkner S, 2015, LECT NOTES COMPUT SC, V9340, P215, DOI 10.1007/978-3-319-24318-4_16
   Fichte JK, 2015, THEOR PRACT LOG PROG, V15, P495, DOI 10.1017/S1471068415000186
   Fitzgerald T, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P304
   Gebser M, 2020, THEOR PRACT LOG PROG, V20, P176, DOI 10.1017/S1471068419000061
   Gebser M, 2017, J ARTIF INTELL RES, V60, P41, DOI 10.1613/jair.5373
   Gebser M, 2013, ACM T COMPUT LOG, V14, DOI 10.1145/2480759.2480767
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P352
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Geffner H, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P10
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Gomes CP, 2000, J AUTOM REASONING, V24, P67, DOI 10.1023/A:1006314320276
   Gurevich Y, 2005, BULL EUR ASSOC THEOR, P112
   HAKEN A, 1985, THEOR COMPUT SCI, V39, P297, DOI 10.1016/0304-3975(85)90144-6
   Heule Marijn J. H., 2019, Journal on Satisfiability, Boolean Modeling and Computation, DOI [10.3233/sat190120, DOI 10.3233/SAT190120]
   Hippen N, 2019, LECT NOTES COMPUT SC, V11372, P19, DOI 10.1007/978-3-030-05998-9_2
   Hoos H, 2015, THEOR PRACT LOG PROG, V15, P117, DOI 10.1017/S1471068414000015
   Hoos H, 2014, THEOR PRACT LOG PROG, V14, P569, DOI 10.1017/S1471068414000210
   Hurley B, 2016, LECT NOTES COMPUT SC, V10101, P191, DOI 10.1007/978-3-319-50137-6_8
   Hutter Frank, 2011, Learning and Intelligent Optimization. 5th International Conference, LION 5. Selected Papers, P507, DOI 10.1007/978-3-642-25566-3_40
   Hutter F, 2017, ARTIF INTELL, V243, P1, DOI 10.1016/j.artint.2016.09.006
   Hutter F, 2014, ARTIF INTELL-AMST, V206, P79, DOI 10.1016/j.artint.2013.10.003
   Hutter F, 2010, ANN MATH ARTIF INTEL, V60, P65, DOI 10.1007/s10472-010-9191-0
   Hutter F, 2009, J ARTIF INTELL RES, V36, P267, DOI 10.1613/jair.2861
   Janhunen T., 2006, J APPL NONCLASSICAL, V1-2, P35, DOI DOI 10.3166/JANCL.16.35-86
   Janhunen T, 2018, KUNSTL INTELL, V32, P183, DOI 10.1007/s13218-018-0529-9
   Kadioglu S, 2010, FRONT ARTIF INTEL AP, V215, P750, DOI 10.3233/978-1-60750-606-5-751
   KhudaBukhsh AR, 2016, ARTIF INTELL, V232, P20, DOI 10.1016/j.artint.2015.11.002
   Kilby P., 2005, AAAI, P1368
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lindauer M, 2017, ARTIF INTELL-AMST, V244, P272, DOI 10.1016/j.artint.2016.05.004
   Lindauer M, 2015, J ARTIF INTELL RES, V53, P745, DOI 10.1613/jair.4726
   Maratea Marco, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P439, DOI 10.1007/978-3-319-23264-5_36
   Maratea Marco, 2013, AI*IA 2013: Advances in Artificial Intelligence. XIIIth International Conference of the Italian Association for Artificial Intelligence. Proceedings: LNCS 8249, P73, DOI 10.1007/978-3-319-03524-6_7
   Maratea M, 2015, J LOGIC COMPUT, V25, P1285, DOI 10.1093/logcom/ext068
   Maratea M, 2014, THEOR PRACT LOG PROG, V14, P841, DOI 10.1017/S1471068413000094
   Nutter F, 2014, PR MACH LEARN RES, V32
   Pulina L, 2009, CONSTRAINTS, V14, P80, DOI 10.1007/s10601-008-9051-2
   Syrjanen, 2002, LPARSE 1 0 USERS MAN
   Vallati M, 2021, J AUTOM REASONING, V65, P727, DOI 10.1007/s10817-021-09592-1
   Vallati M, 2019, LECT NOTES COMPUT SC, V11946, P264, DOI 10.1007/978-3-030-35166-3_19
   Vallati M, 2018, P I C AUTOMAT PLAN S, P431
   Vallati M, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P1704
   Weinzierl ANTONIUS, 2020, THEOR PRACT LOG PROG, V20, P609, DOI 10.1017/S1471068420000332
   Xu L, 2008, J ARTIF INTELL RES, V32, P565, DOI 10.1613/jair.2490
   Xu L, 2010, AAAI CONF ARTIF INTE, P210
   Yuan Z., 2010, LECT NOTES COMPUTER
NR 67
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2023
VL 23
IS 2
BP 415
EP 443
AR PII S1471068422000096
DI 10.1017/S1471068422000096
EA MAR 2022
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA KB0F2
UT WOS:000771275400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Maher, MJ
AF Maher, Michael J.
TI Defeasible Reasoning via Datalog not sign
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE defeasible logic; program transformation; well-founded semantics;
   meta-programming
ID WELL-FOUNDED SEMANTICS; LOGIC; TRANSFORMATION; SYSTEM; DLV
AB We address the problem of compiling defeasible theories to Datalog not sign programs. We prove the correctness of this compilation, for the defeasible logic DL( partial differential (||)), but the techniques we use apply to many other defeasible logics. Structural properties of DL( partial differential (||)) are identified that support efficient implementation and/or approximation of the conclusions of defeasible theories in the logic, compared with other defeasible logics. We also use previously well-studied structural properties of logic programs to adapt to incomplete Datalog not sign implementations.
C1 [Maher, Michael J.] Reasoning Res Inst, Canberra, ACT, Australia.
RP Maher, MJ (corresponding author), Reasoning Res Inst, Canberra, ACT, Australia.
EM michael.maher@reasoning.org.au
CR Aberger CR, 2017, ACM T DATABASE SYST, V42, DOI 10.1145/3129246
   Abiteboul S., 1995, Foundations of Databases, DOI DOI 10.5555/551350
   Adrian WT, 2018, KUNSTL INTELL, V32, P177, DOI 10.1007/s13218-018-0533-0
   Alvaro P, 2011, LECT NOTES COMPUT SC, V6702, P262
   Antoniou G, 2002, LECT NOTES COMPUT SC, V2401, P393, DOI 10.1007/3-540-45619-8_27
   Antoniou G, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P405
   Antoniou G., 2001, ACM T COMPUT LOG, V2, P255, DOI [DOI 10.1145/371316.371517, 10.1145/371316.371517]
   Antoniou G, 2006, THEOR PRACT LOG PROG, V6, P703, DOI 10.1017/S1471068406002778
   Apt K.R., 1988, THEORY DECLARATIVE K, P89
   APT KR, 1994, J LOGIC PROGRAM, V20, P9, DOI 10.1016/0743-1066(94)90024-8
   ARAVINDAN C, 1995, J LOGIC PROGRAM, V24, P201, DOI 10.1016/0743-1066(94)00104-E
   Aref M, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1371, DOI 10.1145/2723372.2742796
   Avgustinov P., 2016, LIPICS, V56
   Bassiliades N, 2006, INT J SEMANT WEB INF, V2, P1, DOI 10.4018/jswis.2006010101
   Bellomarini L, 2018, PROC VLDB ENDOW, V11, P975, DOI 10.14778/3213880.3213888
   Bembenek A, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428209
   Billington D., 2001, Studia Logica, V67, P243, DOI 10.1023/A:1010551204574
   Billington D, 2010, ACM T COMPUT LOG, V12, DOI 10.1145/1838552.1838558
   Bishop B., 2008, CEUR WORKSHOP PROC, V350
   BOSSI A, 1992, LECT NOTES COMPUT SC, V649, P265
   Brass S, 2018, LECT NOTES COMPUT SC, V10742, P43, DOI 10.1007/978-3-319-74313-4_4
   Brewka G, 1996, J ARTIF INTELL RES, V4, P19, DOI 10.1613/jair.284
   Brewka G., 2001, LECT NOTES COMPUTER, P121
   Calimeri F, 2017, INTELL ARTIF, V11, P5, DOI 10.3233/IA-170104
   Carral D, 2019, LECT NOTES COMPUT SC, V11779, P19, DOI 10.1007/978-3-030-30796-7_2
   Cat B. D., 2018, DECLARATIVE LOGIC PR, P279, DOI [10.1145/3191315.3191321, DOI 10.1145/3191315.3191321, DOI 10.1145/3191315]
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   CHIN B., 2015, LIPICS
   Cognitect, WHAT IS DATOMIC CLOU
   Condie T, 2018, THEOR PRACT LOG PROG, V18, P806, DOI 10.1017/S1471068418000418
   Costa VS, 2012, THEOR PRACT LOG PROG, V12, P5, DOI 10.1017/S1471068411000512
   Covington M., 1997, PROLOG PROGRAMMING D
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Eisner J, 2011, LECT NOTES COMPUT SC, V6702, P181
   Eiter T, 1997, ANN MATH ARTIF INTEL, V19, P59, DOI 10.1023/A:1018947420290
   Fan Z., 2019, PVLDB, V12
   Filardo N. W., 2017, THESIS J HOPKINS U
   Fitting M., 1985, Journal of Logic Programming, V2, P295, DOI 10.1016/S0743-1066(85)80005-4
   Gandhe M., 2002, INT WORKSH RUL MARK
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Governatori G, 2004, J LOGIC COMPUT, V14, P675, DOI 10.1093/logcom/14.5.675
   Governatori G, 2017, THEOR PRACT LOG PROG, V17, P819, DOI 10.1017/S1471068417000266
   Grosof B., 2013, RULELOG SYNTAX SEMAN
   Grosof BN, 1997, LOGIC PROGRAMM, P197
   Hoder Krystof, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P457, DOI 10.1007/978-3-642-22110-1_36
   Hofstedt P., 2019, LECT NOTES COMPUTER, V12057, P119
   Horn W., 2000, ECAI, P459
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   Jia-Huai You, 1994, Journal of Computer and System Sciences, V49, P334, DOI 10.1016/S0022-0000(05)80053-4
   Jordan H, 2016, LECT NOTES COMPUT SC, V9780, P422, DOI 10.1007/978-3-319-41540-6_23
   KAKAS AC, 1991, LOGIC PROGRAMMING AND NON-MONOTONIC REASONING, P275
   Kaminski R., 2020, COMMUNICATION
   Kifer M., 2018, FLORA 2 DOCUMENTATIO
   KUNEN K, 1987, J LOGIC PROGRAM, V4, P289, DOI 10.1016/0743-1066(87)90007-0
   KUNEN K, 1989, J LOGIC PROGRAM, V7, P231, DOI 10.1016/0743-1066(89)90022-8
   Lam HP, 2009, LECT NOTES COMPUT SC, V5858, P315
   Madsen M, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428193
   Madsen M, 2016, ACM SIGPLAN NOTICES, V51, P194, DOI [10.1145/2908080.2908096, 10.1145/2980983.2908096]
   Maher M. J., 2001, International Journal on Artificial Intelligence Tools (Architectures, Languages, Algorithms), V10, P483, DOI 10.1142/S0218213001000623
   Maher M. J., 2002, Datalogiske Skrifter, P67
   Maher M. J., 1988, CORRECTNESS LOGIC PR
   Maher M. J., 2021, IN PRESS
   Maher M. J., 1990, REASONING STABLE MOD
   Maher MJ, 2020, THEOR PRACT LOG PROG, V20, P552, DOI 10.1017/S1471068420000010
   Maher MJ, 2017, FUND INFORM, V155, P233, DOI 10.3233/FI-2017-1584
   Maher MJ, 2014, FRONT ARTIF INTEL AP, V263, P585, DOI 10.3233/978-1-61499-419-0-585
   Maher MJ, 1999, SIXTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-99)/ELEVENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE (IAAI-99), P299
   MAHER MJ, 1993, THEOR COMPUT SCI, V110, P377, DOI 10.1016/0304-3975(93)90013-J
   Maier F, 2006, LECT NOTES ARTIF INT, V4160, P306, DOI 10.1007/11853886_26
   Maier F, 2013, THEOR PRACT LOG PROG, V13, P107, DOI 10.1017/S147106841100041X
   Maier F, 2010, SYNTHESE, V176, P243, DOI 10.1007/s11229-009-9492-1
   Martinez-Angeles C.A., 2013, DECLARATIVE PROGRAMM, P152
   Marz N., 2013, CASCALOG
   Nguyen Hien D., 2018, Multi-disciplinary Trends in Artificial Intelligence. 12th International Conference, MIWAI 2018. Proceedings: Lecture Notes in Artificial Intelligence (LNAI 11248), P32, DOI 10.1007/978-3-030-03014-8_3
   Niemela I, 1997, LECT NOTES ARTIF INT, V1265, P420
   Nute D., 1993, Automated Deduction in Nonstandard Logics. 1993 Fall Symposium (Tech. Rep. FS-93-01), P105
   Przymusinski T., 1990, Fundamenta Informaticae, V13, P445
   Sato T, 2020, ICAART: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON AGENTS AND ARTIFICIAL INTELLIGENCE, VOL 2, P758, DOI 10.5220/0009093407580765
   Sato T, 2017, THEOR PRACT LOG PROG, V17, P244, DOI 10.1017/S1471068417000023
   Seo J, 2015, IEEE T KNOWL DATA EN, V27, P1824, DOI 10.1109/TKDE.2015.2405562
   Swift T., 2017, XSB SYSTEM VERSION 3
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Tachmazidis Ilias, 2013, Theory, Practice, and Applications of Rules on the Web. 7th International Symposium, RuleML 2013. Proceedings. LNCS 8035, P188, DOI 10.1007/978-3-642-39617-5_18
   TACHMAZIDIS I, 2012, ECAI, P738
   Tachmazidis I, 2014, PROC INT C TOOLS ART, P162, DOI 10.1109/ICTAI.2014.33
   Tachmazidis I, 2014, THEOR PRACT LOG PROG, V14, P445, DOI 10.1017/S1471068414000131
   Tamaki H., 1984, P 2 INT LOG PROGR C, P127
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Wan H, 2009, LECT NOTES COMPUT SC, V5649, P432, DOI 10.1007/978-3-642-02846-5_35
   Wang JJ, 2015, PROC VLDB ENDOW, V8, P1542
   Wang K, 2017, TWENTY-SECOND INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXII), P389, DOI 10.1145/3037697.3037744
   WENZEL M., 2019, LECT NOTES COMPUTER, V12057
   Whaley J, 2005, LECT NOTES COMPUT SC, V3780, P97
   Wu Haicheng, 2014, 12 ANN IEEE ACM INT, P44, DOI DOI 10.1145/2544137.2544166
NR 97
TC 0
Z9 0
U1 1
U2 1
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2023
VL 23
IS 5
BP 986
EP 1028
AR PII S1471068421000387
DI 10.1017/S1471068421000387
EA NOV 2021
PG 43
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA IE8Z7
UT WOS:000792195400001
DA 2024-07-18
ER

PT J
AU Calimeri, F
   Cauteruccio, F
   Cinelli, L
   Marzullo, A
   Stamile, C
   Terracina, G
   Durand-Dubief, F
   Sappey-Marinier, D
AF Calimeri, Francesco
   Cauteruccio, Francesco
   Cinelli, Luca
   Marzullo, Aldo
   Stamile, Claudio
   Terracina, Giorgio
   Durand-Dubief, Francoise
   Sappey-Marinier, Dominique
TI A Logic-Based Framework Leveraging Neural Networks for Studying the
   Evolution of Neurological Disorders
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 2nd International Joint Conference on Rules and Reasoning (RuleML+RR)
CY SEP 18-21, 2018
CL Univ Luxembourg, Belval Campus, Esch sur Alzette, LUXEMBOURG
SP Fonds Natl Rech Luxembourg, SnT, ILIAS, Univ Calabria, Dipartimento Matematica Informatica, Logical Contracts, Oxygen, Binarypark, Univ Luxembourg, Comp Sci Commun Res Unit, Springer
HO Univ Luxembourg, Belval Campus
DE logic programming; answer set programming; rule-based systems; deductive
   reasoning; neural networks; neurological disorders; machine learning;
   declarative formalisms; bioinformatics
ID ANSWER-SET; KNOWLEDGE-REPRESENTATION; BRAIN NETWORKS; PROGRAMS;
   INTEGRATION; SEMANTICS; SOLVER; DLV; EEG
AB Deductive formalisms have been strongly developed in recent years; among them, answer set programming (ASP) gained some momentum and has been lately fruitfully employed in many real-world scenarios. Nonetheless, in spite of a large number of success stories in relevant application areas, and even in industrial contexts, deductive reasoning cannot be considered the ultimate, comprehensive solution to artificial intelligence; indeed, in several contexts, other approaches result to be more useful. Typical bioinformatics tasks, for instance classification, are currently carried out mostly by machine learning (ML)-based solutions. In this paper, we focus on the relatively new problem of analyzing the evolution of neurological disorders. In this context, ML approaches already demonstrated to be a viable solution for classification tasks; here, we show how ASP can play a relevant role in the brain evolution simulation task. In particular, we propose a general and extensible framework to support physicians and researchers at understanding the complex mechanisms underlying neurological disorders. The framework relies on a combined use of ML and ASP, and is general enough to be applied in several other application scenarios, which are outlined in the paper.
C1 [Calimeri, Francesco; Cauteruccio, Francesco; Cinelli, Luca; Marzullo, Aldo; Terracina, Giorgio] Univ Calabria, DEMACS, Calabria, Italy.
   [Marzullo, Aldo; Stamile, Claudio; Durand-Dubief, Francoise; Sappey-Marinier, Dominique] CREATIS, Paris, France.
   [Marzullo, Aldo; Stamile, Claudio; Durand-Dubief, Francoise; Sappey-Marinier, Dominique] CNRS, UMR5220, Paris, France.
   [Marzullo, Aldo; Stamile, Claudio; Durand-Dubief, Francoise; Sappey-Marinier, Dominique] INSERM, U1206, Paris, France.
   [Marzullo, Aldo; Stamile, Claudio; Durand-Dubief, Francoise; Sappey-Marinier, Dominique] Univ Lyon 1, Univ Lyon, INSA Lyon, Villeurbanne, France.
   [Durand-Dubief, Francoise] Hosp Civils Lyon, Hop Neurol, Serv Neurol, Bron, France.
   [Sappey-Marinier, Dominique] Univ Lyon, CERMEP Imagerie Vivant, Bron, France.
C3 University of Calabria; Institut National des Sciences Appliquees de
   Lyon - INSA Lyon; Institut National de la Sante et de la Recherche
   Medicale (Inserm); Centre National de la Recherche Scientifique (CNRS);
   CNRS - Institute for Engineering & Systems Sciences (INSIS); Institut
   National des Sciences Appliquees de Lyon - INSA Lyon; Institut National
   des Sciences Appliquees de Lyon - INSA Lyon; Institut National de la
   Sante et de la Recherche Medicale (Inserm); Universite Claude Bernard
   Lyon 1; Institut National des Sciences Appliquees de Lyon - INSA Lyon;
   CHU Lyon
RP Calimeri, F (corresponding author), Univ Calabria, DEMACS, Calabria, Italy.
EM calimeri@mat.unical.it; cauteruccio@mat.unical.it;
   cinelli@mat.unical.it; marzullo@mat.unical.it;
   stamile@creatis.insa-lyon.fr; terracina@mat.unical.it;
   francoise.durand-dubief@chu-lyon.fr;
   dominique.sappey-marinier@univ-lyon1.fr
RI , giorgio/ABG-7441-2020; Calimeri, Francesco/J-1935-2012; Cauteruccio,
   Francesco/ISA-6653-2023
OI , giorgio/0000-0002-3090-7223; Calimeri, Francesco/0000-0002-0866-0834;
   Cauteruccio, Francesco/0000-0001-8400-1083; CINELLI,
   LUCA/0000-0002-8856-274X
FU Italian Ministry for Economic Development (MISE) under the project
   "Smarter Solutions in the Big Data World" [CUP B28I17000250008]; Italian
   Ministry of Education, Universities and Research (MIUR); Presidency of
   the Council of Ministers under project "Declarative Reasoning over
   Streams" [CUP H24I17000080001, 2017M9C25L_001]
FX This work was partially supported by: (i) the Italian Ministry for
   Economic Development (MISE) under the project "Smarter Solutions in the
   Big Data World", funded within the call "HORIZON2020" PON I&C 2014-2020
   (CUP B28I17000250008); and (ii) the Italian Ministry of Education,
   Universities and Research (MIUR) and the Presidency of the Council of
   Ministers under project "Declarative Reasoning over Streams" (CUP
   H24I17000080001) within the call Progetti di ricerca di Rilevante
   Interesse Nazionale "PRIN" 2017, project code 2017M9C25L_001.
CR Adrian WT, 2018, KUNSTL INTELL, V32, P177, DOI 10.1007/s13218-018-0533-0
   Alviano M, 2019, LECT NOTES ARTIF INT, V11481, P241, DOI 10.1007/978-3-030-20528-7_18
   [Anonymous], 2014, P 14 INT C PRINC KNO
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], 2014, WORKSHOP INT C LEARN
   [Anonymous], ARXIV181111373
   Arias J, 2018, THEOR PRACT LOG PROG, V18, P337, DOI 10.1017/S1471068418000285
   Balduccini M, 2017, THEOR PRACT LOG PROG, V17, P462, DOI 10.1017/S1471068417000102
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Bargmann CI, 2013, NAT METHODS, V10, P483, DOI 10.1038/NMETH.2451
   Barrett C., 2016, The Satisfiability Modulo Theories Library (SMT-LIB)
   Barrett C.W., 2018, Handbook of Model Checking, P305, DOI DOI 10.1007/978-3-319-10575-8_11
   Barrett C, 2013, J AUTOM REASONING, V50, P243, DOI 10.1007/s10817-012-9246-5
   Baselice S, 2005, LECT NOTES COMPUT SC, V3668, P52, DOI 10.1007/11562931_7
   Beck H, 2015, AAAI CONF ARTIF INTE, P1431
   Brooks DR, 2007, J AUTOM REASONING, V39, P471, DOI 10.1007/s10817-007-9082-1
   Calimeri F., 2012, ASP-CORE-2 Input Language Format
   Calimeri F, 2007, ANN MATH ARTIF INTEL, V50, P333, DOI 10.1007/s10472-007-9076-z
   Calimeri F, 2019, NEW GENERAT COMPUT, V37, P29, DOI 10.1007/s00354-018-0046-2
   Calimeri F, 2018, LECT NOTES COMPUT SC, V11092, P33, DOI 10.1007/978-3-319-99906-7_3
   Calimeri F, 2017, LECT NOTES ARTIF INT, V10640, P172, DOI 10.1007/978-3-319-70169-1_13
   Calimeri F, 2017, INTELL ARTIF, V11, P5, DOI 10.3233/IA-170104
   Calimeri F, 2016, IEEE T COMP INTEL AI, V8, P128, DOI 10.1109/TCIAIG.2015.2509600
   Calimeri F, 2012, AI MAG, V33, P114, DOI 10.1609/aimag.v33i4.2448
   Cauteruccio F, 2019, INT J DATA MIN MODEL, V11, P315, DOI 10.1504/IJDMMM.2019.102730
   Chabierski P., 2017, CEUR WORKSHOP P, V2052
   Cok DR, 2015, J AUTOM REASONING, V55, P61, DOI 10.1007/s10817-015-9328-2
   Dodaro C, 2020, THEOR PRACT LOG PROG, V20, P225, DOI 10.1017/S1471068418000558
   Duun-Henriksen J, 2012, PEDIATR NEUROL, V46, P287, DOI 10.1016/j.pediatrneurol.2012.02.018
   Eiter T., 2016, COMPUTATIONAL MODELS, P150
   Eiter T, 2018, KUNSTL INTELL, V32, P187, DOI 10.1007/s13218-018-0535-y
   Eiter T, 2016, THEOR PRACT LOG PROG, V16, P418, DOI 10.1017/S1471068415000113
   Erdem E, 2016, AI MAG, V37, P53, DOI 10.1609/aimag.v37i3.2678
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   Febbraro O, 2011, LECT NOTES ARTIF INT, V6645, P317
   Gebser M., 2014, TECHNICAL COMMUNICAT
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   Gebser M, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5450
   Gebser M, 2017, J ARTIF INTELL RES, V60, P41, DOI 10.1613/jair.5373
   Gebser M, 2016, AAAI CONF ARTIF INTE, P4327
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P352
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P323, DOI 10.1017/S1471068410000554
   Gelfond M, 2002, ARTIF INTELL, V138, P3, DOI 10.1016/S0004-3702(02)00207-2
   Gelfond Michael, 2010, Datalog Reloaded. First International Workshop, Datalog 2010. Revised Selected Papers, P369, DOI 10.1007/978-3-642-24206-9_21
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Haykin S, 1998, Neural Networks: A Comprehensive Foundation
   Hornero R, 2009, PHILOS T R SOC A, V367, P317, DOI 10.1098/rsta.2008.0197
   Hu ZT, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2410, DOI 10.18653/v1/p16-1228
   Ion-Margineanu A, 2017, LECT NOTES COMPUT SC, V10614, P643, DOI 10.1007/978-3-319-68612-7_73
   Jenkinson M, 2012, NEUROIMAGE, V62, P782, DOI 10.1016/j.neuroimage.2011.09.015
   Jeong JS, 2004, CLIN NEUROPHYSIOL, V115, P1490, DOI 10.1016/j.clinph.2004.01.001
   Kaminski R, 2017, LECT NOTES COMPUT SC, V10370, P167, DOI 10.1007/978-3-319-61033-7_6
   Kawahara J, 2017, NEUROIMAGE, V146, P1038, DOI 10.1016/j.neuroimage.2016.09.046
   Kingma D. P., 2014, arXiv
   Kocevar G, 2016, FRONT NEUROSCI-SWITZ, V10, DOI 10.3389/fnins.2016.00478
   Law M, 2016, THEOR PRACT LOG PROG, V16, P834, DOI 10.1017/S1471068416000351
   Law M, 2015, THEOR PRACT LOG PROG, V15, P511, DOI 10.1017/S1471068415000198
   Lenka A, 2016, PARKINSONISM RELAT D, V24, P100, DOI 10.1016/j.parkreldis.2015.12.016
   Leofante F., 2018, ABS180509938 CORR
   Leone N, 2015, LECT NOTES COMPUT SC, V9203, P308, DOI 10.1007/978-3-319-21768-0_10
   Lierler Y, 2017, THEOR PRACT LOG PROG, V17, P559, DOI 10.1017/S1471068417000114
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Lonc Z, 2006, THEOR PRACT LOG PROG, V6, P395, DOI 10.1017/S1471068405002607
   Lublin FD, 2014, NEUROLOGY, V83, P278, DOI 10.1212/WNL.0000000000000560
   Manna M, 2015, THEOR PRACT LOG PROG, V15, P696, DOI 10.1017/S1471068415000320
   Maratea M, 2014, THEOR PRACT LOG PROG, V14, P841, DOI 10.1017/S1471068413000094
   McDonald WI, 2001, ANN NEUROL, V50, P121, DOI 10.1002/ana.1032
   McIlraith S. A., 2012, PRINCIPLES KNOWLEDGE
   Mellarkod VS, 2008, ANN MATH ARTIF INTEL, V53, P251, DOI 10.1007/s10472-009-9116-y
   Newman MEJ, 2002, PHYS REV LETT, V89, DOI 10.1103/PhysRevLett.89.208701
   Nickles M, 2014, LECT NOTES COMPUT SC, V8741, P197, DOI 10.1007/978-3-319-11113-1_16
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   PERRI S, 2017, P 24 RCRA INT WORKSH, V2011, P26
   Petersen RC, 2004, J INTERN MED, V256, P183, DOI 10.1111/j.1365-2796.2004.01388.x
   Przymusinski T. C., 1991, New Generation Computing, V9, P401, DOI 10.1007/BF03037171
   Pulina L, 2010, LECT NOTES COMPUT SC, V6174, P243, DOI 10.1007/978-3-642-14295-6_24
   Qiu JZ, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P2110, DOI 10.1145/3219819.3220077
   Rath J, 2017, LECT NOTES COMPUT SC, V10137, P50, DOI 10.1007/978-3-319-51676-9_4
   Redl C, 2016, THEOR PRACT LOG PROG, V16, P866, DOI 10.1017/S1471068416000211
   Ricca, 2019, ABS190409134 CORR
   Ricca, 2013, BOOK REV, V03, P1
   Ricca F., 2003, CEUR Workshop Proceedings, V78
   Rubinov M, 2010, NEUROIMAGE, V52, P1059, DOI 10.1016/j.neuroimage.2009.10.003
   Schuller Peter, 2015, CEUR WORKSHOP P, V1433
   Shen D, 2018, SIXTEENTH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P67
   Shovon MHI, 2017, NEURAL PROCESS LETT, V45, P807, DOI 10.1007/s11063-016-9506-1
   Stamile C, 2015, INT CONF SYST SIGNAL, P57, DOI 10.1109/IWSSIP.2015.7314176
   Stein MB, 2007, AM J PSYCHIAT, V164, P318, DOI 10.1176/appi.ajp.164.2.318
   Terracina, 2018, 26 EUR S ART NEUR NE
   Terracina G, 2008, THEOR PRACT LOG PROG, V8, P129, DOI 10.1017/S1471068407003158
   Tournier JD, 2012, INT J IMAG SYST TECH, V22, P53, DOI 10.1002/ima.22005
   TOWELL GG, 1993, MACH LEARN, V13, P71, DOI 10.1023/A:1022683529158
   Vos T, 2016, LANCET, V388, P1545, DOI 10.1016/s0140-6736(16)31678-6
   Wieser HG, 2006, CLIN NEUROPHYSIOL, V117, P935, DOI 10.1016/j.clinph.2005.12.007
   Wu ZH, 2021, IEEE T NEUR NET LEAR, V32, P4, DOI 10.1109/TNNLS.2020.2978386
   Zhang Q, 2018, ABS180200121 CORR
   Zhang QS, 2018, FRONT INFORM TECH EL, V19, P27, DOI 10.1631/FITEE.1700808
   Zhang QS, 2018, PROC CVPR IEEE, P8827, DOI 10.1109/CVPR.2018.00920
   Zhu, 2017, ABS170801783 CORR
NR 100
TC 15
Z9 15
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2021
VL 21
IS 1
SI SI
BP 80
EP 124
DI 10.1017/S1471068419000449
PG 45
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA TG2JW
UT WOS:000671236400004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mesnard, F
   Payet, É
   Vidal, G
AF Mesnard, Fred
   Payet, Etienne
   Vidal, German
TI Concolic Testing in CLP
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE CLP; verification; concolic testing
ID EXECUTION
AB Concolic testing is a popular software verification technique based on a combination of concrete and symbolic execution. Its main focus is finding bugs and generating test cases with the aim of maximizing code coverage. A previous approach to concolic testing in logic programming was not sound because it only dealt with positive constraints (by means of substitutions) but could not represent negative constraints. In this paper, we present a novel framework for concolic testing of CLP programs that generalizes the previous technique. In the CLP setting, one can represent both positive and negative constraints in a natural way, thus giving rise to a sound and (potentially) more efficient technique. Defining verification and testing techniques for CLP programs is increasingly relevant since this framework is becoming popular as an intermediate representation to analyze programs written in other programming paradigms.
C1 [Mesnard, Fred; Payet, Etienne] Univ Reunion, LIM, St Clotilde, Reunion, France.
   [Vidal, German] Univ Politecn Valencia, MiST, VRAIN, Valencia, Spain.
C3 University of La Reunion; Universitat Politecnica de Valencia
RP Mesnard, F (corresponding author), Univ Reunion, LIM, St Clotilde, Reunion, France.
EM frederic.mesnard@univ-reunion.fr; etienne.payet@univ-reunion.fr;
   gvidal@dsic.upv.es
RI Vidal, German/B-2217-2014
OI Vidal, German/0000-0002-1857-6951; Payet, Etienne/0000-0002-3519-025X
FU EU (FEDER); Spanish MCI/AEI [TIN2016-76843-C4-1-R,
   PID2019-104735RB-C41]; Generalitat Valenciana [Prometeo/2019/098]
FX This author has been partially supported by EU (FEDER) and Spanish
   MCI/AEI under grants TIN2016-76843-C4-1-R and PID2019-104735RB-C41, and
   by the Generalitat Valenciana under grant Prometeo/2019/098 (DeepTrust).
CR Apt K. R., 1997, From Logic Programming to Prolog
   COMON H., 1999, LECT NOTES COMPUTER, V2002, P47
   FORTZ S., 2020, LNCS
   GALLAGHER J, 1991, NEW GENERAT COMPUT, V9, P305
   Gange G, 2015, THEOR PRACT LOG PROG, V15, P526, DOI 10.1017/S1471068415000204
   Giantsios A, 2015, PROCEEDINGS OF THE 17TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING (PPDP 2015), P137, DOI 10.1145/2790449.2790519
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Gurfinkel A, 2015, LECT NOTES COMPUT SC, V9206, P343, DOI 10.1007/978-3-319-21690-4_20
   Jaffar J, 1998, J LOGIC PROGRAM, V37, P1, DOI 10.1016/S0743-1066(98)10002-X
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Leuschel M, 1998, NEW GENERAT COMPUT, V16, P283, DOI 10.1007/BF03037483
   LLOYD JW, 1991, J LOGIC PROGRAM, V11, P217, DOI 10.1016/0743-1066(91)90027-M
   MESNARD F., 2020, CORR
   Mesnard F, 2017, PROCEEDINGS OF THE 19TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING (PPDP 2017), P115, DOI 10.1145/3131851.3131863
   Mesnard F, 2015, THEOR PRACT LOG PROG, V15, P711, DOI 10.1017/S1471068415000332
   Palacios A, 2015, LECT NOTES COMPUT SC, V9527, P277, DOI 10.1007/978-3-319-27436-2_17
   Schrijvers T, 2008, LECT NOTES COMPUT SC, V5366, P693, DOI 10.1007/978-3-540-89982-2_59
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Sen K, 2006, LECT NOTES COMPUT SC, V4144, P419
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   STRODER T., 2011, LNCS, V7225, P237
   Stulova N, 2014, PPDP'14: PROCEEDINGS OF THE 16TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING, P225, DOI 10.1145/2643135.2643148
   Vidal G, 2015, LECT NOTES COMPUT SC, V8981, P167, DOI 10.1007/978-3-319-17822-6_10
NR 23
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2020
VL 20
IS 5
SI SI
BP 671
EP 686
AR PII S1471068420000216
DI 10.1017/S1471068420000216
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR5RA
UT WOS:000571619500007
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Amadini, R
   Gabbrielli, M
   Mauro, J
AF Amadini, Roberto
   Gabbrielli, Maurizio
   Mauro, Jacopo
TI SUNNY-CP and the MiniZinc challenge
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Constraint Programming; Algorithm Selection; Algorith Portfolios;
   MiniZinc
ID CONSTRAINT; OPTIMIZATION; SOLVERS
AB In Constraint Programming, a portfolio solver combines a variety of different constraint solvers for solving a given problem. This fairly recent approach enables to significantly boost the performance of single solvers, especially when multicore architectures are exploited. In this work, we give a brief overview of the portfolio solver sunny-cp, and we discuss its performance in the MiniZinc Challenge-the annual international competition for Constraint Programming solvers-where it won two gold medals in 2015 and 2016.
C1 [Amadini, Roberto] Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic, Australia.
   [Gabbrielli, Maurizio] Univ Bologna, DISI, Bologna, Italy.
   [Gabbrielli, Maurizio] FOCUS Res Team, Bologna, Italy.
   [Mauro, Jacopo] Univ Oslo, Dept Informat, Oslo, Norway.
C3 University of Melbourne; University of Bologna; University of Oslo
RP Amadini, R (corresponding author), Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic, Australia.
EM roberto.amadini@unimelb.edu.au; gabbri@cs.unibo.it; jmauro@ifi.uio.no
OI GABBRIELLI, MAURIZIO/0000-0003-0609-8662; Mauro,
   Jacopo/0000-0002-5285-2868
FU EU [FP7-644298]
FX This work was supported by the EU project FP7-644298 HyVar: Scalable
   Hybrid Variability for Distributed, Evolving Software Systems
CR Amadini R., 2014, P 29 ANN ACM S APPL, P1357, DOI DOI 10.1145/2554850.2555114
   Amadini R., 2015, CEUR WORKSHOP P, V1459, P202
   Amadini R, 2016, LECT NOTES COMPUT SC, V10079, P227, DOI 10.1007/978-3-319-50349-3_16
   Amadini R, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1861, DOI 10.1145/2695664.2695741
   Amadini R, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P232
   Amadini R, 2015, LECT NOTES COMPUT SC, V9527, P349, DOI 10.1007/978-3-319-27436-2_21
   Amadini R, 2016, ANN MATH ARTIF INTEL, V76, P229, DOI 10.1007/s10472-015-9459-5
   Amadini R, 2014, THEOR PRACT LOG PROG, V14, P509, DOI 10.1017/S1471068414000179
   Amadini R, 2014, LECT NOTES COMPUT SC, V8656, P108, DOI 10.1007/978-3-319-10428-7_11
   Belov G, 2016, LECT NOTES COMPUT SC, V9892, P49, DOI 10.1007/978-3-319-44953-1_4
   Chevaleyre Y, 2007, LECT NOTES COMPUT SC, V4362, P51
   Chuffed, 2016, CHUFF SOLV
   coseal, 2014, ALG SEL LIB
   De Cat B, 2013, PROC INT C TOOLS ART, P1068, DOI 10.1109/ICTAI.2013.159
   Gomes CP, 2001, ARTIF INTELL, V126, P43, DOI 10.1016/S0004-3702(00)00081-3
   Hebrard E, 2010, LECT NOTES COMPUT SC, V6140, P181, DOI 10.1007/978-3-642-13520-0_22
   Hutter F, 2014, ARTIF INTELL-AMST, V206, P79, DOI 10.1016/j.artint.2013.10.003
   iZplus, 2016, IZPLUS SOLV DESCR
   JaCoP, 2016, JACOP SOLV
   Kotthoff L., 2015, ABS151104326 CORR
   Kotthoff L, 2014, AI MAG, V35, P48, DOI 10.1609/aimag.v35i3.2460
   Lindauer M, 2016, LECT NOTES COMPUT SC, V10079, P253, DOI 10.1007/978-3-319-50349-3_20
   Malitsky Yuri, 2012, Principles and Practice of Constraint Programming. Proceedings 18th International Conference, CP 2012, P512, DOI 10.1007/978-3-642-33558-7_38
   MiniZinc, 2016, MINIZINC SOFTW
   Mistral, 2016, MISTR SOLV
   Neng-Fa Zhou, 2016, Practical Aspects of Declarative Languages. 18th International Symposium, PADL 2016. Proceedings: LNCS 9585, P48, DOI 10.1007/978-3-319-28228-2_4
   Nethercote N, 2007, LECT NOTES COMPUT SC, V4741, P529
   O'Mahony E., 2008, Irish conference on artificial intelligence and cognitive science, P210
   Opturion CPX, 2016, OPT CPX SOLV
   OR-Tools, 2016, OR TOOLS SOLV
   Prud'homme Charles, 2016, Choco Documentation
   Rice J. R., 1976, Advances in computers, vol.15, P65, DOI 10.1016/S0065-2458(08)60520-3
   Rossi F, 2006, FOUND ARTIF INTELL, P1
   Sabharwal A, 2014, LECT NOTES COMPUT SC, V8656, P655, DOI 10.1007/978-3-319-10428-7_48
   Smith-Miles KA, 2008, ACM COMPUT SURV, V41, DOI 10.1145/1456650.1456656
   Stuckey PJ, 2014, AI MAG, V35, P55, DOI 10.1609/aimag.v35i2.2539
   Veksler M, 2016, ARTIF INTELL, V238, P135, DOI 10.1016/j.artint.2016.06.002
NR 37
TC 3
Z9 3
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2018
VL 18
IS 1
BP 81
EP 96
DI 10.1017/S1471068417000205
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA FU3QC
UT WOS:000423765600003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ji, JM
   Liu, FF
   You, JH
AF Ji, Jianmin
   Liu, Fangfang
   You, Jia-Huai
TI Well-founded operators for normal hybrid MKNF knowledge bases
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming colocated with the
   23rd International Conference on Principles and Practice of Constraint
   Programming / 20th International Conference on Theory and Applications
   of Satisfiability Testing
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google
DE Hybrid MKNF; constraint propagation; DPLL-based search engine;
   well-founded operator
ID UNFOUNDED SETS; SEMANTICS; PROGRAMS
AB Hybrid MKNF knowledge bases have been considered one of the dominant approaches to combining open world ontology languages with closed world rule-based languages. Currently, the only known inference methods are based on the approach of guess-and-verify, while most modern SAT/ASP solvers are built under the DPLL architecture. The central impediment here is that it is not clear what constitutes a constraint propagator, a key component employed in any DPLL-based solver. In this paper, we address this problem by formulating the notion of unfounded sets for non-disjunctive hybrid MKNF knowledge bases, based on which we propose and study two new well-founded operators. We show that by employing a wellfounded operator as a constraint propagator, a sound and complete DPLL search engine can be readily defined. We compare our approach with the operator based on the alternating fixpoint construction by Knorr et al. (2011. Artificial Intelligence 175, 9, 1528-1554) and show that, when applied to arbitrary partial partitions, the new well-founded operators not only propagate more truth values but also circumvent the non-converging behavior of the latter. In addition, we study the possibility of simplifying a given hybrid MKNF knowledge base by employing a well-founded operator and show that, out of the two operators proposed in this paper, the weaker one can be applied for this purpose and the stronger one cannot. These observations are useful in implementing a grounder for hybrid MKNF knowledge bases, which can be applied before the computation of MKNF models.
C1 [Ji, Jianmin] Univ Sci & Technol China, Sch Comp Sci & Technol, Hefei, Anhui, Peoples R China.
   [Liu, Fangfang] Shanghai Univ, Sch Comp Engn & Sci, Shanghai, Peoples R China.
   [You, Jia-Huai] Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
C3 Chinese Academy of Sciences; University of Science & Technology of
   China, CAS; Shanghai University; University of Alberta
RP Ji, JM (corresponding author), Univ Sci & Technol China, Sch Comp Sci & Technol, Hefei, Anhui, Peoples R China.
EM jianmin@ustc.edu.cn; ffliu@shu.edu.cn; jyou@ualberta.ca
RI Ji, Jianmin/GZM-4863-2022
OI Ji, Jianmin/0000-0002-1515-0402
CR Alviano M, 2011, J ARTIF INTELL RES, V42, P487
   Baader F., 2003, DESCRIPTION LOGIC HD
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Bi Y, 2014, LECT NOTES COMPUT SC, V8741, P45, DOI 10.1007/978-3-319-11113-1_4
   Denecker M, 2004, INFORM COMPUT, V192, P84, DOI 10.1016/j.ic.2004.02.004
   Eiter T., 2016, P 25 INT JOINT C ART, P1058
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   GELDER AV, 1993, J COMPUT SYST SCI, V47, P185, DOI DOI 10.1016/0022-0000(93)90024-Q
   Heule MJH, 2015, AAAI CONF ARTIF INTE, P4322
   Hitzler Pascal, 2012, OWL 2 Web Ontology Language Primer, VSecond
   Ji JM, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P3069
   Knorr M, 2011, ARTIF INTELL, V175, P1528, DOI 10.1016/j.artint.2011.01.007
   Leone N, 1997, INFORM COMPUT, V135, P69, DOI 10.1006/inco.1997.2630
   Lifschitz V., 1991, P 12 INT JOINT C ART, P381
   Lintao Zhang, 2002, Computer Aided Verification. 14th International Conference, CAV 2002. Proceedings (Lecture Notes in Computer Science Vol.2404), P17
   Malik S, 2009, COMMUN ACM, V52, P76, DOI 10.1145/1536616.1536637
   Motik B, 2010, J ACM, V57, DOI 10.1145/1754399.1754403
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Simons Patrik, 2002, ARTIF INTELL, V138, P181
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Vennekens J, 2010, ANN MATH ARTIF INTEL, V58, P85, DOI 10.1007/s10472-010-9207-9
NR 22
TC 1
Z9 1
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 889
EP 905
DI 10.1017/S1471068417000291
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Antoy, S
   Hanus, M
AF Antoy, Sergio
   Hanus, Michael
TI Default rules for Curry
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE functional logic programming; semantics; program transformation
ID FAILURE
AB In functional logic programs, rules are applicable independently of textual order, i.e., any rule can potentially be used to evaluate an expression. This is similar to logic languages and contrary to functional languages, e.g., Haskell enforces a strict sequential interpretation of rules. However, in some situations it is convenient to express alternatives by means of compact default rules. Although default rules are often used in functional programs, the non-deterministic nature of functional logic programs does not allow to directly transfer this concept from functional to functional logic languages in a meaningful way. In this paper, we propose a new concept of default rules for Curry that supports a programming style similar to functional programming while preserving the core properties of functional logic programming, i.e., completeness, non-determinism, and logic-oriented use of functions. We discuss the basic concept and propose an implementation which exploits advanced features of functional logic languages.
C1 [Antoy, Sergio] Portland State Univ, Dept Comp Sci, Portland, OR 97207 USA.
   [Hanus, Michael] CAU Kiel, Inst Informat, Kiel, Germany.
C3 Portland State University; University of Kiel
RP Antoy, S (corresponding author), Portland State Univ, Dept Comp Sci, Portland, OR 97207 USA.
EM antoy@cs.pdx.edu; mh@informatik.uni-kiel.de
OI Hanus, Michael/0000-0002-4953-8202
FU National Science Foundation [1317249]; Direct For Computer & Info Scie &
   Enginr; Division of Computing and Communication Foundations [1317249]
   Funding Source: National Science Foundation
FX The authors are grateful to Sandra Dylus and the anonymous reviewers for
   their suggestions to improve a previous version of this paper. This
   material is based in part upon work supported by the National Science
   Foundation under Grant No. 1317249.
CR [Anonymous], 1996, Prolog-the Standard: Reference Manual
   [Anonymous], 2003, Haskell 98 language and libraries: the revised report
   Antoy S, 1996, THEOR COMPUT SCI, V165, P75, DOI 10.1016/0304-3975(96)00041-2
   Antoy S., 1997, Algebraic and Logic Programming. 6th International Joint Conference ALP'97 - HOA '97. Proceedings, P16, DOI 10.1007/BFb0027000
   ANTOY S, 1992, LECT NOTES COMPUT SC, V632, P143, DOI 10.1007/BFb0013825
   Antoy S, 2000, J ACM, V47, P776, DOI 10.1145/347476.347484
   Antoy S, 2006, LECT NOTES COMPUT SC, V4079, P87, DOI 10.1007/11799573_9
   Antoy S, 2006, LECT NOTES COMPUT SC, V3901, P6, DOI 10.1007/11680093_2
   Antoy S, 2010, COMMUN ACM, V53, P74, DOI 10.1145/1721654.1721675
   Antoy S, 2009, PPDP'09: PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING, P73, DOI 10.1145/1599410.1599420
   Antoy Sergio., 2014, WLP/WFLP, P140
   BERRY G, 1976, REV FR AUTOMAT INFOR, V10, P47
   BRASSEL B, 2011, LECT NOTES COMPUT SC, V6816, P1, DOI DOI 10.1007/978-3-642-22531-4_1
   Christiansen Jan., 2013, Proceedings of the 15th Symposium on Principles and Practice of Declarative Programming, PPDP'13, page, P49
   González-Moreno JC, 1999, J LOGIC PROGRAM, V40, P47, DOI 10.1016/S0743-1066(98)10029-8
   Hanus Michael, 2013, Programming Logics. Essays in Memory of Harald Ganzinger: LNCS 7797, P123, DOI 10.1007/978-3-642-37651-1_6
   Hanus M., 2016, PAKCS PORTLAND AACHE
   Hanus M., 2016, Curry: An Integrated Functional Logic Language (Vers. 0.9.0)
   Hanus M., 2011, 27 INT C LOG PROGR L, V11, P198
   HUCH F., 2004, J FUNCTIONAL LOGIC P, V2004, P6
   López-Fraguas FJ, 2004, THEOR PRACT LOG PROG, V4, P41, DOI 10.1017/S1471068403001728
   MORENONAVARRO JJ, 1994, MIT PS LOG, P535
   O'Donnell M. J., 1977, LNCS, V58
   Reddy U. S., 1985, 1985 Symposium on Logic Programming (Cat. No.85CH2205-3), P138
   Sánchez-Hernández J, 2006, J UNIVERS COMPUT SCI, V12, P1574
   SLAGLE JR, 1974, J ACM, V21, P622, DOI 10.1145/321850.321859
NR 26
TC 6
Z9 7
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2017
VL 17
IS 2
BP 121
EP 147
DI 10.1017/S1471068416000168
PG 27
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA EN1TY
UT WOS:000395794300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bistarelli, S
   Gabbrielli, M
   Meo, MC
   Santini, F
AF Bistarelli, Stefano
   Gabbrielli, Maurizio
   Meo, Maria Chiara
   Santini, Francesco
TI Timed soft concurrent constraint programs: An interleaved and a parallel
   approach
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Soft Concurrent Constraint Programming; Timed Concurrent Constraint
   Programming; interleaving; parallelism
ID LANGUAGE; SEMANTICS; LINDA
AB We propose a timed and soft extension of Concurrent Constraint Programming. The time extension is based on the hypothesis of bounded asynchrony: The computation takes a bounded period of time and is measured by a discrete global clock. Action prefixing is then considered as the syntactic marker that distinguishes a time instant from the next one. Supported by soft constraints instead of crisp ones, tell and ask agents are now equipped with a preference (or consistency) threshold, which is used to determine their success or suspension. In this paper, we provide a language to describe the agents' behavior, together with its operational and denotational semantics, for which we also prove the compositionality and correctness properties. After presenting a semantics using maximal parallelism of actions, we also describe a version for their interleaving on a single processor (with maximal parallelism for time elapsing). Coordinating agents that need to take decisions on both preference values and time events may benefit from this language.
C1 [Bistarelli, Stefano] Univ Perugia, Dipartimento Matemat & Informat, I-06123 Perugia, Italy.
   [Gabbrielli, Maurizio] Univ Bologna, Dipartimento Sci Informaz, I-40126 Bologna, Italy.
   [Meo, Maria Chiara] Univ G DAnnunzio, Dipartimento Econ, I-65127 Pescara, Italy.
   [Santini, Francesco] CWI, NL-1098 XG Amsterdam, Netherlands.
C3 University of Perugia; University of Bologna; G d'Annunzio University of
   Chieti-Pescara
RP Bistarelli, S (corresponding author), Univ Perugia, Dipartimento Matemat & Informat, Via Vanvitelli 1, I-06123 Perugia, Italy.
EM vista@dmi.unipg.it; gabbri@cs.unibo.it; cmeo@unich.it; F.Santini@cwi.nl
RI Santini, Francesco/AAE-5575-2021; Bistarelli, Stefano/C-3211-2008;
   Santini, Francesco/G-8522-2016
OI Bistarelli, Stefano/0000-0001-7411-9678; GABBRIELLI,
   MAURIZIO/0000-0003-0609-8662; MEO, MARIA CHIARA/0000-0002-3700-3788;
   Santini, Francesco/0000-0002-3935-4696
CR BERRY G, 1992, SCI COMPUT PROGRAM, V19, P87, DOI 10.1016/0167-6423(92)90005-V
   Bistarelli S, 1997, J ACM, V44, P201, DOI 10.1145/256303.256306
   Bistarelli S, 2004, LECT NOTES COMPUT SC, V2962, P1
   Bistarelli S, 2008, LECT NOTES COMPUT SC, V5052, P50, DOI 10.1007/978-3-540-68265-3_4
   Bistarelli S, 2006, ACM T COMPUT LOG, V7, P563, DOI 10.1145/1149114.1149118
   Bistarelli S, 2011, FUND INFORM, V111, P257, DOI 10.3233/FI-2011-563
   Bortolussi L, 2006, ELECTRON NOTES THEOR, V164, P65, DOI 10.1016/j.entcs.2006.07.012
   Brookes S., 1993, Proceedings of Eighth Annual IEEE Symposium on Logic in Computer Science (Cat. No.93CH3328-2), P98, DOI 10.1109/LICS.1993.287596
   Busi N, 2000, LECT NOTES COMPUT SC, V1816, P198
   de Boer F. S., 1991, TAPSOFT 91, V1, P296
   de Boer FS, 2004, FUND INFORM, V63, P309
   de Boer FS, 2000, INFORM COMPUT, V161, P45, DOI 10.1006/inco.1999.2879
   De Nicola R, 1998, IEEE T SOFTWARE ENG, V24, P315, DOI 10.1109/32.685256
   De Nicola R., 2013, P 10 INT S FORM METH, V7542, P25, DOI DOI 10.1007/978-3-642-35887-6_2
   Di Pierro A., 1998, P MATH FDN COMP SCI, P446
   Gallien J, 2007, MANAGE SCI, V53, P814, DOI 10.1287/mnsc.1060.0650
   HALBWACHS N, 1991, P IEEE, V79, P1305, DOI 10.1109/5.97300
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Jonsson B., 1985, P 4 ACM S PRINC DIST, P49
   LEGUERNIC P, 1991, P IEEE, V79, P1321, DOI 10.1109/5.97301
   Nielsen M., 2002, Formal and natural computing. Essays dedicated to Grzegorz Rozenberg (Lecture Notes in Computer Science Vol.2300), P298
   Olarte C, 2007, LECT NOTES COMPUT SC, V4670, P464, DOI 10.1007/978-3-540-74610-2_47
   Palamidessi C., 2001, Principles and Practice of Constraint Programming - CP 2002. 7th International Conference, CP 2001. Proceedings (Lecture Notes in Computer Science Vol.2239), P302
   SARASWAT V, 1996, J SYMB COMPUT, V22, P5, DOI DOI 10.1006/JSC0.1996.0064
   Saraswat V. A., 1989, THESIS
   SARASWAT VA, 1994, IEEE S LOG, P71, DOI 10.1109/LICS.1994.316085
   SARASWAT VA, 1990, P 17 ACM S PRINC PRO, P232, DOI DOI 10.1145/96709.96733
   Valencia FD, 2003, LECT NOTES COMPUT SC, V2916, P422, DOI 10.1007/978-3-540-24599-5_29
NR 28
TC 2
Z9 2
U1 0
U2 6
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2015
VL 15
BP 743
EP 782
DI 10.1017/S1471068414000106
PN 6
PG 40
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA DA3JK
UT WOS:000367692800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Aguado, F
   Cabalar, P
   Pearce, D
   Pérez, G
   Vidal, C
AF Aguado, Felicidad
   Cabalar, Pedro
   Pearce, David
   Perez, Gilberto
   Vidal, Concepcion
TI A denotational semantics for equilibrium logic
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
DE Answer Set Programming; Equilibrium Logic
ID PROPOSITIONAL THEORIES
AB In this paper we provide an alternative semantics for Equilibrium Logic and its monotonic basis, the logic of Here-and-There (also known as Godel's G(3) logic) that relies on the idea of denotation of a formula, that is, a function that collects the set of models of that formula. Using the three-valued logic G(3) as a starting point and an ordering relation (for which equilibrium/stable models are minimal elements) we provide several elementary operations for sets of interpretations. By analysing structural properties of the denotation of formulas, we show some expressiveness results for G(3) such as, for instance, that conjunction is not expressible in terms of the other connectives. Moreover, the denotational semantics allows us to capture the set of equilibrium models of a formula with a simple and compact set expression. We also use this semantics to provide several formal definitions for entailment relations that are usual in the literature, and further introduce a new one called strong entailment. We say that alpha strongly entails beta when the equilibrium models of alpha boolean AND gamma are also equilibrium models of beta boolean AND gamma for any context gamma. We also provide a characterisation of strong entailment in terms of the denotational semantics, and give an example of a sufficient condition that can be applied in some cases.
C1 [Aguado, Felicidad; Cabalar, Pedro; Perez, Gilberto; Vidal, Concepcion] Univ A Coruna, Dept Comp Sci, Coruna, Spain.
   [Pearce, David] Univ Politecn Madrid, E-28040 Madrid, Spain.
C3 Universidade da Coruna; Universidad Politecnica de Madrid
RP Aguado, F (corresponding author), Univ A Coruna, Dept Comp Sci, Coruna, Spain.
EM aguado@udc.es; cabalar@udc.es; david.pearce@upm.es; gperez@udc.es;
   eicovima@udc.es
RI Vidal Martín, Concepción/ABD-9547-2021; Vidal Martín,
   Concepción/AAA-2451-2022; Cabalar, Pedro/AAE-5198-2020
OI Vidal Martín, Concepción/0000-0002-5561-6406; Vidal Martín,
   Concepción/0000-0002-5561-6406; Aguado, Felicidad/0000-0002-4334-9267
FU Spanish MEC project [TIN2013-42149-P]
FX This research was partially supported by Spanish MEC project
   TIN2013-42149-P.
CR Aguado Felicidad, 2013, Journal of Applied Non-Classical Logic, V23, P2, DOI 10.1080/11663081.2013.798985
   Aguado F., 2015, P 15 INT C COMP MATH
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Cabalar P, 2005, LECT NOTES ARTIF INT, V3808, P4, DOI 10.1007/11595014_2
   Cabalar P, 2007, THEOR PRACT LOG PROG, V7, P745, DOI 10.1017/S1471068407003110
   Cabalar P, 2007, LECT NOTES COMPUT SC, V4670, P104, DOI 10.1007/978-3-540-74610-2_8
   Cabalar P, 2007, ANN MATH ARTIF INTEL, V50, P305, DOI 10.1007/s10472-007-9075-0
   Delgrande JamesP., 2008, Principles of Knowledge Representation and Reasoning: Proceedings of the Eleventh International Conference, KR 2008, Sydney, Australia, September 16-19, 2008, P411
   Eiter Thomas, 2013, Journal of Applied Non-Classical Logic, V23, P75, DOI 10.1080/11663081.2013.799318
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Ferraris P, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P372
   Fink M, 2011, THEOR PRACT LOG PROG, V11, P171, DOI 10.1017/S1471068410000542
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Godel K, 1932, Anzeiger Akademie der Wissenschaften Wien, Mathematisch-Naturwissenschaftliche Klasse, V69, P65
   Harrison A., 2014, WORKSH ANSW SET PROG
   Heyting A, 1930, SITZBER PREUSS AKAD, P42
   KOZEN D, 1983, THEOR COMPUT SCI, V27, P333, DOI 10.1016/0304-3975(82)90125-6
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Marek Victor, 1999, STABLE MODELS ALTERN, P169
   NICHOLSON T, 1989, ACM T PROGR LANG SYS, V11, P650, DOI 10.1145/69558.69564
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Odintsov S, 2005, LECT NOTES ARTIF INT, V3662, P343, DOI 10.1007/11546207_27
   OWRE S, 1992, LECT NOTES ARTIF INT, V607, P748
   Pearce D, 2004, LECT NOTES COMPUT SC, V3229, P147, DOI 10.1007/978-3-540-30227-8_15
   Pearce D, 2004, LECT NOTES ARTIF INT, V2923, P194
   Pearce D, 2006, ANN MATH ARTIFICIAL, V47
   Pearce D., 1996, LNAI, V1216
   Scott D, 1971, OXFORD PROGRAMMING R, VPRG-6
   Slota M, 2014, THEOR PRACT LOG PROG, V14, P869, DOI 10.1017/S1471068413000100
   Woltran S, 2008, THEOR PRACT LOG PROG, V8, P217, DOI 10.1017/S1471068407003250
NR 30
TC 13
Z9 13
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 620
EP 634
DI 10.1017/S1471068415000277
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200015
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Comini, M
   Titolo, L
   Villanueva, A
AF Comini, Marco
   Titolo, Laura
   Villanueva, Alicia
TI Abstract Diagnosis for tccp using a Linear Temporal Logic
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
DE concurrent constraint paradigm; linear temporal logic; abstract
   diagnosis; decision procedures; program verification
AB Automatic techniques for program verification usually suffer the well-known state explosion problem. Most of the classical approaches are based on browsing the structure of some form of model (which represents the behavior of the program) to check if a given specification is valid. This implies that a part of the model has to be built, and sometimes the needed fragment is quite huge.
   In this work, we provide an alternative automatic decision method to check whether a given property, specified in a linear temporal logic, is valid w.r.t. a tccp program. Our proposal (based on abstract interpretation techniques) does not require to build any model at all. Our results guarantee correctness but, as usual when using an abstract semantics, completeness is lost.
C1 [Comini, Marco; Titolo, Laura] Univ Udine, DIMI, I-33100 Udine, Italy.
   [Villanueva, Alicia] Univ Politecn Valencia, DSIC, Valencia, Spain.
C3 University of Udine; Universitat Politecnica de Valencia
RP Comini, M (corresponding author), Univ Udine, DIMI, I-33100 Udine, Italy.
EM marco.comini@uniud.it; villanue@dsic.upv.es
RI Villanueva, Alicia/C-2972-2014; Comini, Marco/G-8074-2014
OI Villanueva, Alicia/0000-0003-1090-5009; Comini,
   Marco/0000-0002-8069-3411; Titolo, Laura/0000-0001-7820-7640
CR Alpuente M, 2005, THEOR COMPUT SCI, V346, P58, DOI 10.1016/j.tcs.2005.08.009
   Alpuente M, 2005, LECT NOTES COMPUT SC, V3475, P45
   Alpuente M, 2006, J UNIVERS COMPUT SCI, V12, P1551
   [Anonymous], 1992, TEMPORAL LOGIC REACT, DOI DOI 10.1007/978-1-4612-0931-7
   [Anonymous], LECT NOTES COMPUT SC
   [Anonymous], CONDENSED GOAL INDEP
   [Anonymous], THESIS CARNEGIE MELL
   [Anonymous], CORR
   [Anonymous], ELECT NOTES THEORETI
   [Anonymous], ABSTRACT DIAGNOSIS T
   [Anonymous], TIME 01 P 8 INT S TE
   [Anonymous], 2001, LECT NOTES COMPUTER, DOI DOI 10.1007/3-540-45578-7
   [Anonymous], CORR
   Comini M, 2011, THEOR PRACT LOG PROG, V11, P487, DOI 10.1017/S1471068411000135
   de Boer FS, 2000, INFORM COMPUT, V161, P45, DOI 10.1006/inco.1999.2879
   Falaschi M, 2007, LECT NOTES COMPUT SC, V4670, P271, DOI 10.1007/978-3-540-74610-2_19
   Falaschi M, 2006, THEOR PRACT LOG PROG, V6, P265, DOI 10.1017/S1471068406002675
   Gaintzarain J, 2008, ELECTRON NOTES THEOR, V206, P59, DOI 10.1016/j.entcs.2008.03.075
   Gaintzarain J, 2009, J LOGIC ALGEBR PROGR, V78, P701, DOI 10.1016/j.jlap.2009.05.001
   Queille JP, 2008, LECT NOTES COMPUT SC, V5000, P216
   Saraswat Vijay A., 1993, Concurrent Constraint Programming
   Valencia FD, 2005, THEOR COMPUT SCI, V330, P577, DOI 10.1016/j.tcs.2004.10.009
NR 22
TC 0
Z9 0
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 787
EP 801
DI 10.1017/S1471068414000349
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200026
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Alviano, M
   Faber, W
   Woltran, S
AF Alviano, Mario
   Faber, Wolfgang
   Woltran, Stefan
TI Complexity of super-coherence problems in ASP
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Answer Set Programming (ASP); complexity analysis; coherence; uniform
   equivalence; foundations
ID MAGIC SETS; SEMANTICS; SYSTEM
AB Adapting techniques from database theory in order to optimize Answer Set Programming (ASP) systems, and in particular the grounding components of ASP systems, is an important topic in ASP. In recent years, the Magic Set method has received some interest in this setting, and a variant of it, called Dynamic Magic Set, has been proposed for ASP. However, this technique has a caveat, because it is not correct (in the sense of being query-equivalent) for all ASP programs. In a recent work, a large fragment of ASP programs, referred to as super-coherent programs, has been identified, for which Dynamic Magic Set is correct. The fragment contains all programs which possess at least one answer set, no matter which set of facts is added to them. Two open question remained: How complex is it to determine whether a given program is super-coherent? Does the restriction to super-coherent programs limit the problems that can be solved? Especially the first question turned out to be quite difficult to answer precisely. In this paper, we formally prove that deciding whether a propositional program is super-coherent is Pi(P)(3) -complete in the disjunctive case, while it is Pi(P)(2) -complete for normal programs. The hardness proofs are the difficult part in this endeavor: We proceed by characterizing the reductions by the models and reduct models which the ASP programs should have, and then provide instantiations that meet the given specifications. Concerning the second question, we show that all relevant ASP reasoning tasks can be transformed into tasks over super-coherent programs, although this transformation is more of theoretical than practical interest.
C1 [Alviano, Mario; Faber, Wolfgang] Univ Calabria, I-87036 Arcavacata Di Rende, CS, Italy.
   [Woltran, Stefan] Vienna Univ Technol, A-1040 Vienna, Austria.
C3 University of Calabria; Technische Universitat Wien
RP Alviano, M (corresponding author), Univ Calabria, I-87036 Arcavacata Di Rende, CS, Italy.
EM alviano@mat.unical.it; faber@mat.unical.it; woltran@dbai.tuwien.ac.at
RI Alviano, Mario/H-1355-2012; Faber, Wolfgang/H-2316-2012
OI Faber, Wolfgang/0000-0002-0330-5868
FU Regione Calabria; EU under POR Calabria FESR; MIUR under the PRIN
   project LoDeN; Vienna University of Technology; PIA project of DLVSYSTEM
   s.r.l.
FX This work is partly supported by Regione Calabria and EU under POR
   Calabria FESR 2007-2013 and within the PIA project of DLVSYSTEM s.r.l.;
   MIUR under the PRIN project LoDeN; and the Vienna University of
   Technology under the program "Innovative Ideas." We thank the anonymous
   reviewers (also those from ASPOCP and CILC) for their valuable comments.
CR Alviano M., 2010, P 3 WORKSH ANSW SET
   Alviano M, 2012, ARTIF INTELL, V187, P156, DOI 10.1016/j.artint.2012.04.008
   Alviano M, 2011, AI COMMUN, V24, P125, DOI 10.3233/AIC-2011-0492
   [Anonymous], 1989, Principles of Database and Knowledge-Base Systems
   [Anonymous], 1985, P 5 ACM SIGACT SIGMO, DOI DOI 10.1145/6012.15399
   [Anonymous], 2008, KR
   Apt K.R., 1988, THEORY DECLARATIVE K, P89
   Baral C., 2003, KNOWLEDGE REPRESENTA
   BEERI C, 1991, J LOGIC PROGRAM, V10, P255, DOI 10.1016/0743-1066(91)90038-Q
   Ben-Eliyahu R., 1994, Annals of Mathematics and Artificial Intelligence, V12, P53, DOI 10.1007/BF01530761
   Cumbo C, 2004, LECT NOTES COMPUT SC, V3132, P371, DOI 10.1007/978-3-540-27775-0_26
   DUNG PM, 1992, THEOR COMPUT SCI, V105, P7, DOI 10.1016/0304-3975(92)90285-N
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Eiter T., 2004, PRINCIPLES KNOWLEDGE, P447
   Eiter T, 2007, ACM T COMPUT LOG, V8, DOI 10.1145/1243996.1244000
   Eiter T, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P97
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gottlob G, 1999, ANN PURE APPL LOGIC, V97, P231, DOI 10.1016/S0168-0072(98)00057-8
   Greco S, 2003, IEEE T KNOWL DATA EN, V15, P368, DOI 10.1109/TKDE.2003.1185840
   Janhunen T, 2006, ACM T COMPUT LOG, V7, P1, DOI 10.1145/1119439.1119440
   Leone N., 2005, P 2005 ACM SIGMOD IN, P915
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lierler Y, 2005, LECT NOTES ARTIF INT, V3662, P447, DOI 10.1007/11546207_44
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Manna M, 2011, J COMPUT SYST SCI, V77, P393, DOI 10.1016/j.jcss.2010.05.006
   Manna M., 2012, LECT NOTES COMPUTER, V7100, P91
   Oetsch Johannes, 2007, P 22 NAT C ART INT A, P458
   Papadimitriou CH, 1997, J COMPUT SYST SCI, V54, P48, DOI 10.1006/jcss.1997.1451
   Ricca F, 2012, THEOR PRACT LOG PROG, V12, P361, DOI 10.1017/S147106841100007X
   Ricca F, 2010, FUND INFORM, V105, P35, DOI 10.3233/FI-2010-357
   YOU JH, 1994, J COMPUT SYST SCI, V49, P334, DOI 10.1016/S0022-0000(05)80053-4
NR 32
TC 3
Z9 3
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2014
VL 14
BP 339
EP 361
DI 10.1017/S147106841300001X
PN 3
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA AK3AI
UT WOS:000338293500003
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Vidal, G
AF Vidal, German
TI Annotation of logic programs for independent AND-parallelism by partial
   evaluation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE partial evaluation; automatic parallelization; program analysis
AB Traditional approaches to automatic AND-parallelization of logic programs rely on some static analysis to identify independent goals that can be safely and efficiently run in parallel in any possible execution. In this paper, we present a novel technique for generating annotations for independent AND-parallelism that is based on partial evaluation. Basically, we augment a simple partial evaluation procedure with (run-time) groundness and variable sharing information so that parallel conjunctions are added to the residual clauses when the conditions for independence are met. In contrast to previous approaches, our partial evaluator is able to transform the source program in order to expose more opportunities for parallelism. To the best of our knowledge, we present the first approach to a parallelizing partial evaluator.
C1 Univ Politecn Valencia, DSIC, MiST, Valencia 46022, Spain.
C3 Universitat Politecnica de Valencia
RP Vidal, G (corresponding author), Univ Politecn Valencia, DSIC, MiST, Camino Vera S-N, Valencia 46022, Spain.
EM gvidal@dsic.upv.es
RI Vidal, German/P-5548-2019; Vidal, German/B-2217-2014
OI Vidal, German/0000-0002-1857-6951
FU Spanish Ministerio de Economia y Competitividad (Secretaria de Estado de
   Investigacion, Desarrollo e Innovacion) [TIN2008-06622-C03-02];
   Generalitat Valenciana [PROMETEO/2011/052]
FX This work has been partially supported by the Spanish Ministerio de
   Economia y Competitividad (Secretaria de Estado de Investigacion,
   Desarrollo e Innovacion) under grant TIN2008-06622-C03-02 and by the
   Generalitat Valenciana under grant PROMETEO/2011/052.
CR [Anonymous], 1993, Partial Evaluation and Automatic Program Generation
   BENKERIMI K, 1989, TR8904 U BRIST DEP C
   Consel C., 1992, LISP SYMB COMPUT, V5, P327
   De Schreye D, 1999, J LOGIC PROGRAM, V41, P231, DOI 10.1016/S0743-1066(99)00030-8
   Debois S., 2004, P PEPM 04 ACM S PART, P113
   DEBRAY SK, 1989, ACM T PROGR LANG SYS, V11, P418, DOI 10.1145/65979.65983
   Gallagher J., 1991, TR9132 U BRIST
   Gallagher J. P., 1993, Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation. PEPM'93, P88, DOI 10.1145/154630.154640
   Gras DC, 2009, THEOR COMPUT SCI, V410, P4704, DOI 10.1016/j.tcs.2009.07.044
   Gurr C., 1994, THESIS U BRISTOL DEP
   Jones N. D., 1997, LNCS, V1302, P396
   Jones ND, 2004, SCI COMPUT PROGRAM, V52, P307, DOI 10.1016/j.scico.2004.03.010
   Leuschel M, 2002, LECT NOTES COMPUT SC, V2566, P379
   LEUSCHEL M, 2006, P PEPM 2006, P88
   Leuschel M, 2009, LECT NOTES COMPUT SC, V5438, P119, DOI 10.1007/978-3-642-00515-2_9
   LLOYD JW, 1991, J LOGIC PROGRAM, V11, P217, DOI 10.1016/0743-1066(91)90027-M
   Muthukumar K, 1999, J LOGIC PROGRAM, V38, P165, DOI 10.1016/S0743-1066(98)10022-5
   SAHLIN D, 1990, LOGIC PROGRAMM, P377
   Sperber M., 1997, PASCO 97 2 INT S PAR, P80
   SURATI R, 1994, IFIP TRANS A, V50, P181
   Vidal G, 2011, LECT NOTES COMPUT SC, V6564, P200, DOI 10.1007/978-3-642-20551-4_13
NR 21
TC 4
Z9 4
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2012
VL 12
BP 583
EP 600
DI 10.1017/S1471068412000191
PN 4-5
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 000CV
UT WOS:000308365000010
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Slota, M
   Leite, J
AF Slota, Martin
   Leite, Joao
TI Towards closed world reasoning in dynamic open worlds
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE belief change; belief update; hybrid knowledge bases; ontologies; rules;
   description logics; answer set programming; semantic web
AB The need for integration of ontologies with nonmonotonic rules has been gaining importance in a number of areas, such as the Semantic Web. A number of researchers addressed this problem by proposing a unified semantics for hybrid knowledge bases composed of both an ontology (expressed in a fragment of first-order logic) and nonmonotonic rules. These semantics have matured over the years, but only provide solutions for the static case when knowledge does not need to evolve.
   In this paper we take a first step towards addressing the dynamics of hybrid knowledge bases. We focus on knowledge updates and, considering the state of the art of belief update, ontology update and rule update, we show that current solutions are only partial and difficult to combine. Then we extend the existing work on ABox updates with rules, provide a semantics for such evolving hybrid knowledge bases and study its basic properties.
   To the best of our knowledge, this is the first time that an update operator is proposed for hybrid knowledge bases.
C1 [Slota, Martin] Univ Nova Lisboa, CENTRIA, P-2829516 Caparica, Portugal.
   Univ Nova Lisboa, Dept Informat, P-2829516 Caparica, Portugal.
C3 Universidade Nova de Lisboa; Universidade Nova de Lisboa
RP Slota, M (corresponding author), Univ Nova Lisboa, CENTRIA, P-2829516 Caparica, Portugal.
RI Leite, Joao/HGB-4757-2022; Leite, Joao/C-6162-2009
OI Leite, Joao/0000-0001-6786-7360
CR ALCHOURRON CE, 1985, J SYMBOLIC LOGIC, V50, P510, DOI 10.2307/2274239
   Alferes J. J., 2005, Studia Logica, V79, P7, DOI 10.1007/s11225-005-0492-y
   Alferes JJ, 2000, J LOGIC PROGRAM, V45, P43, DOI 10.1016/S0743-1066(99)00065-5
   ALFERES JJ, 2009, P 8 INT SEM WEB C IS, P1
   [Anonymous], SCI AM
   Baader F., 2003, DESCRIPTION LOGIC HD
   DALAL M, 1988, P 7 NAT C ART INT AA, P475
   DeGiacomo G, 2007, P 22 AAAI C ART INT, P403
   DELGRANDE JP, 2008, P 11 INT C PRINC KNO, P411
   Dix J., 1995, Fundamenta Informaticae, V22, P227
   Eiter T, 2002, THEOR PRACT LOG PROG, V2, P711, DOI 10.1017/S1471068401001247
   Eiter T, 2008, ARTIF INTELL, V172, P1644, DOI 10.1016/j.artint.2008.05.002
   Flouris G, 2008, KNOWL ENG REV, V23, P117, DOI 10.1017/S0269888908001367
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Herzig A, 1999, ARTIF INTELL, V115, P107, DOI 10.1016/S0004-3702(99)00072-7
   HERZIG A, 2005, DAGSTUHL SEMINAR P, V5321
   HITZLER P, 2009, INT HDB INFORM SYSTE, P111
   KATSUNO H, 1991, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P387
   Leite, 2003, FRONTIERS ARTIFICIAL, V81
   Leite JA, 1998, LECT NOTES ARTIF INT, V1471, P224, DOI 10.1007/BFb0054796
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lifschitz V., 1991, P 12 INT JOINT C ART, P381
   Liu H., 2006, P 10 INT C PRINC KNO, P46
   Makinson David., 1988, Lecture Notes on Artificial Intelligence, V346, P1
   Marek VW, 1998, THEOR COMPUT SCI, V190, P241, DOI 10.1016/S0304-3975(97)00092-3
   Motik B, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P477
   SAKAMA C, 2003, THEOR PRACT LOG PROG, V3, P71713
   SLOTA M, 2010, P 19 EUR C IN PRESS
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Wang KW, 2009, LECT NOTES COMPUT SC, V5823, P666, DOI 10.1007/978-3-642-04930-9_42
   Winslett M., 1990, Updating Logical Databases
   WINSLETT M, 1988, P AAAI 88, P89
   Zhang YQ, 2005, PROCEEDINGS OF THE 8TH JOINT CONFERENCE ON INFORMATION SCIENCES, VOLS 1-3, P707
NR 33
TC 7
Z9 8
U1 0
U2 7
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 547
EP 563
DI 10.1017/S147106841000027X
PN 4-6
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cali, A
   Martinenghi, D
AF Cali, Andrea
   Martinenghi, Davide
TI Querying incomplete data over extended ER schemata
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Extended ER model; dependencies; chase; incomplete data
ID COMPLEXITY; SEMANTICS
AB Since Chen's Entity-Relationship (ER) model, conceptual modeling has been playing a fundamental role in relational data design. In this paper we consider an extended ER (EER) model enriched with cardinality constraints, disjointness assertions, and is a relations among both entities and relationships. In this setting, we consider the case of incomplete data, which is likely to occur, for instance, when data from different sources are integrated. In such a context, we address the problem of providing correct answers to conjunctive queries by reasoning on the schema. Based on previous results about decidability of the problem, we provide a query answering algorithm that performs rewriting of the initial query into a recursive Datalog query encoding the information about the schema. We finally show extensions to more general settings.
C1 [Cali, Andrea] Univ Oxford, Comp Lab, Oxford OX2 6ED, England.
   [Martinenghi, Davide] Politecn Milan, Dipartimento Elettron & Informaz, I-20133 Milan, Italy.
C3 University of Oxford; Polytechnic University of Milan
RP Cali, A (corresponding author), Univ Oxford, Comp Lab, Eagle House,Walton Well Rd, Oxford OX2 6ED, England.
EM andrea.cali@comlabox.ac.uk; davide.martinenghi@polimi.it
OI MARTINENGHI, DAVIDE/0000-0002-2726-7683
FU EPSRC [EP/E010865/1]; ERC; EPSRC [EP/E010865/1] Funding Source: UKRI
FX Andrea Cali was supported by the EPSRC project EP/E010865/1 "Schema
   Mappings and Automated Services for Data Integration and Exchange."
   Davide Martinenghi was supported by the "Search Computing" (SeCo)
   project, funded by the ERC under the 2008 Call for "IDEAS Advanced
   Grants."
CR Abiteboul S, 1995, FDN DATABASES
   [Anonymous], 2005, P AAAI2005
   [Anonymous], 1978, LOGIC DATA BASES
   Arenas M., 1999, Proceedings of the Eighteenth ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems, P68, DOI 10.1145/303976.303983
   Bertossi L, 2004, LECT NOTES COMPUT SC, V3300, P42
   Calì A, 2004, INFORM SYST, V29, P147, DOI 10.1016/S0306-4379(03)00050-4
   CALI A, 2001, P ER 2001, P270
   CALI A, 2003, P 18 INT JOINT C ART, P16
   CALI A, 2003, P ACM S PRINC DAT SY, P260
   CALI A, 2006, P DASFAA, P270
   CALI A, 2003, THESIS U ROMA SAPIEN
   Calí A, 2007, LECT NOTES COMPUT SC, V4801, P245
   Cali Andrea., 2008, KR, P70
   Calvanese D., 1998, Proceedings of the Seventeenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems. PODS 1998, P149, DOI 10.1145/275487.275504
   Calvanese D., 2006, PROC KR 2006, P260
   Chan E. P. F., 1992, Proceedings of the Eleventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P202, DOI 10.1145/137097.137869
   Chomicki J, 2005, INFORM COMPUT, V197, P90, DOI 10.1016/j.ic.2004.04.007
   CODD EF, 1970, COMMUN ACM, V13, P377, DOI 10.1145/357980.358007
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Deutsch A., 2008, PODS, P149
   DUSCHKA M, 1997, P PODS 97, P109
   DUSCHKA MO, 1997, P IJCAI 97 15 INT JO, P778
   Fagin R, 2005, THEOR COMPUT SCI, V336, P89, DOI 10.1016/j.tcs.2004.10.033
   Gottlob G, 2008, J ACM, V55, DOI 10.1145/1346330.1346334
   GRANT J, 1993, J INTELL INF SYST, V2, P115
   Hernandez MA, 1998, DATA MIN KNOWL DISC, V2, P9, DOI 10.1023/A:1009761603038
   HOHENSTEIN U, 1992, INFORM SYST, V17, P209, DOI 10.1016/0306-4379(92)90014-E
   JOHNSON DS, 1984, J COMPUT SYST SCI, V28, P167, DOI 10.1016/0022-0000(84)90081-3
   Kolaitis P. G., 1998, Proceedings of the Seventeenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems. PODS 1998, P205, DOI 10.1145/275487.275511
   LAWLEY Michael., 1994, Australasian Database Conference, P292
   LEMBO D, 2004, THESIS U ROMA SAPIEN
   Lenzerini  M., 2002, P 21 ACM SIGMOD SIGA
   Lloyd J. W., 2012, Foundations of Logic Programming
   MAIER D, 1981, J ACM, V28, P680, DOI 10.1145/322276.322280
   Maier D., 1979, ACM Transactions on Database Systems, V4, P455, DOI 10.1145/320107.320115
   MARKOWITZ VM, 1990, IEEE T SOFTWARE ENG, V16, P777, DOI 10.1109/32.57618
   ORTIZ M, 2006, P 21 NAT C ART INT A
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Thalheim Bernhard., 2000, ENTITY RELATIONSHIP
   VARDI MY, 1983, ACTA INFORM, V19, P305, DOI 10.1007/BF00290729
NR 40
TC 4
Z9 4
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2010
VL 10
SI SI
BP 291
EP 329
DI 10.1017/S1471068410000104
PN 3
PG 39
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 614FF
UT WOS:000279040100003
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Zhou, NF
   Sato, T
AF Zhou, Neng-Fa
   Sato, Taisuke
TI Linear tabling strategies and optimizations
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Prolog; semi-naive evaluation; recursion; tabling; memoization; linear
   tabling
ID LOGIC; IMPLEMENTATION; RESOLUTION; MACHINE
AB Recently there has been a growing interest in research in tabling in the logic programming community because of its usefulness in a variety of application domains including program analysis, parsing, deductive databases, theorem proving, model checking, and logic-based probabilistic learning. The main idea of tabling is to memorize the answers to some subgoals and use the answers to resolve subsequent variant subgoals. Early resolution mechanisms proposed for tabling such as OLDT and SLG rely on suspension and resumption of subgoals to compute fixpoints. Recently, the iterative approach named linear tabling has received considerable attention because of its simplicity, ease of implementation, and good space efficiency. Linear tabling is a framework from which different methods can be derived on the basis of the strategies used in handling looping subgoals. One decision concerns when answers are consumed and returned. This article describes two strategies, namely, lazy and eager strategies, and compares them both qualitatively and quantitatively. The results indicate that, while the lazy strategy has good locality and is well suited for finding all solutions, the eager strategy is comparable in speed with the lazy strategy and is well suited for programs with cuts. Linear tabling relies on depth-first iterative deepening rather than suspension to compute fixpoints. Each cluster of interdependent subgoals as represented by a topmost looping subgoal is iteratively evaluated until no subgoal in it can produce any new answers. Naive re-evaluation of all looping subgoals, albeit simple, may be computationally unacceptable. In this article, we also introduce semi-naive optimization, an effective technique employed in bottom-up evaluation of logic programs to avoid redundant joins of answers, into linear tabling. We give the conditions for the technique to be safe (i.e., sound and complete) and propose an optimization technique called early answer promotion to enhance its effectiveness. Benchmarking in B-Prolog demonstrates that with this optimization linear tabling compares favorably well in speed with the state-of-the-art implementation of SLG.
C1 [Zhou, Neng-Fa] CUNY Brooklyn Coll, Brooklyn, NY 11210 USA.
   [Zhou, Neng-Fa] CUNY, Grad Ctr, Brooklyn, NY 11210 USA.
   [Sato, Taisuke] Tokyo Inst Technol, Tokyo, Japan.
C3 City University of New York (CUNY) System; Brooklyn College (CUNY); City
   University of New York (CUNY) System; Tokyo Institute of Technology
RP Zhou, NF (corresponding author), CUNY Brooklyn Coll, Brooklyn, NY 11210 USA.
EM zhou@sci.brook1yn.cuny.edu; sato@cs.titech.ac.jp
RI sato, taisuke/Q-3245-2016
OI sato, taisuke/0000-0001-9062-0729
CR [Anonymous], TRIT0056 ATR INT TEL
   Apt K.R., 1988, THEORY DECLARATIVE K, P89
   BANCILHON F, 1986, P ACM SIGMOD INT C M, P16
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   Dawson S, 1996, ACM SIGPLAN NOTICES, V31, P117, DOI 10.1145/249069.231399
   Demoen B, 1999, LECT NOTES COMPUT SC, V1551, P106
   DEMOEN B, 1998, LNCS, V1490, P21
   Dietrich S. W., 1987, Proceedings of the 1987 Symposium on Logic Programming (Cat. No.87CH2472-9), P264
   EISNER J, 2004, P 42 ANN M ACL
   Freire J., 1998, J FUNCTIONAL LOGIC P
   GUO HF, 2001, LECT NOTES COMPUTER, V2237, P181
   JOHNSON BL, 1995, J GREAT LAKES RES, V21, P3, DOI 10.1016/S0380-1330(95)71016-4
   Liu MC, 1999, ACM COMPUT SURV, V31, P27, DOI 10.1145/311531.311533
   Lloyd J., 1988, Foundations Logic Programming, V2nd
   MICHIE D, 1968, NATURE, V218, P19, DOI 10.1038/218019a0
   Nielson F, 2004, LECT NOTES COMPUT SC, V2988, P251
   PIENTKA B, 2003, CMUCS03185
   Przymusinski T. C., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P11, DOI 10.1145/73721.73723
   Ramakrishnan C., 2002, ALP NEWS LETT
   Ramakrishnan IV, 1999, J LOGIC PROGRAM, V38, P31, DOI 10.1016/S0743-1066(98)10013-4
   RAMAKRISHNAN R, 1995, J LOGIC PROGRAM, V23, P125, DOI 10.1016/0743-1066(94)00039-9
   Rocha R, 2005, THEOR PRACT LOG PROG, V5, P161, DOI 10.1017/S1471068404002030
   ROCHA R, 2005, P INT C LOG PROGR IC, P250
   Sagonas K., 1994, SIGMOD Record, V23, DOI 10.1145/191843.191970
   Sagonas K, 1998, ACM T PROGR LANG SYS, V20, P586, DOI 10.1145/291889.291897
   Sato T, 2001, J ARTIF INTELL RES, V15, P391
   Shen YD, 2001, THEOR PRACT LOG PROG, V1, P71, DOI 10.1017/S1471068400001010
   Shen YD, 1999, LECT NOTES ARTIF INT, V1730, P192, DOI 10.1007/3-540-46767-X_14
   SOMOGYI Z, IN PRESS P PRACTICAL, V15
   TAMAKI H, 1986, LECT NOTES COMPUT SC, V225, P84
   ULLMAN JD, 1988, DATABASE KNOWLEDGE B, V1
   WARREN DS, 1992, COMMUN ACM, V35, P93, DOI 10.1145/131295.131299
   WARREN DS, 1999, IN PRESS PROGRAMMING
   Zhou NF, 1996, ACM T PROGR LANG SYS, V18, P752, DOI 10.1145/236114.236120
   Zhou NF, 2000, LECT NOTES COMPUT SC, V1753, P109
   ZHOU NF, 2003, 5 ACM SIGPLAN INT C, P275
   ZHOU NF, 2003, IJCAI WORKSH LEARN S, P153
   ZHOU NF, 2004, 5 ACM SIGPLAN INT C, P90
NR 38
TC 22
Z9 24
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2008
VL 8
BP 81
EP 109
DI 10.1017/S147106840700316X
PN 1
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 264ZO
UT WOS:000253329100003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hofstedt, P
   Pepper, P
AF Hofstedt, Petra
   Pepper, Peter
TI Integration of declarative and constraint programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE declarative languages; constraints; cooperative constraint solving;
   language integration; multiparadigm constraint programming languages
AB Combining a set of existing constraint solvers into an integrated system of cooperating solvers is a useful and economic principle to solve hybrid constraint problems. In this paper we show that this approach can also be used to integrate different language paradigms into a unified framework. Furthermore, we study the syntactic, semantic and operational impacts of this idea for the amalgamation of declarative and constraint programming.
C1 Tech Univ Berlin, D-10587 Berlin, Germany.
C3 Technical University of Berlin
RP Hofstedt, P (corresponding author), Tech Univ Berlin, Sekr FR 5-13,Franklinstr 28-29, D-10587 Berlin, Germany.
EM ph@cs.tu-berlin.de; pepper@cs.tu-berlin.de
CR Ait-Kaci H., 1989, LISP and Symbolic Computation, V2, P51, DOI 10.1007/BF01806313
   [Anonymous], LNCS
   [Anonymous], 1974, Mathematical Theory of Computation
   [Anonymous], CURRY INTEGRATED FUN
   BROY M, 1987, ACM T PROGR LANG SYS, V9, P54, DOI 10.1145/9758.10501
   CHEADLE AM, 2003, ICPARC031
   COSTA VS, 1991, SIGPLAN NOTICES, V26, P83, DOI 10.1145/109626.109635
   DIDRICH K, 1994, LECT NOTES COMPUTER, V782, P228
   Fernández AJ, 2003, LECT NOTES COMPUT SC, V2562, P320
   Field A.J., 1988, FUNCTIONAL PROGRAMMI
   Frank S, 2003, LECT NOTES ARTIF INT, V2821, P520
   Franke-Arnold S, 2004, NEW J PHYS, V6, DOI 10.1088/1367-2630/6/1/103
   Franz VH, 2003, SPATIAL VISION, V16, P211, DOI 10.1163/156856803322467491
   HANUS M, 1994, J LOGIC PROGRAM, V20, P583, DOI 10.1016/0743-1066(94)90034-5
   HANUS M, 1995, 12 INT C LOG PROGR, P665
   Hofstedt P, 2000, LECT NOTES ARTIF INT, V1861, P342
   HOFSTEDT P, 2000, LNCS, V1894, P520
   HOFSTEDT P, 2001, THESIS DRESDEN U TEC
   HONG H, 1994, 9408 RES I SYMB COMP
   HORTALAGONZALEZ T, 1997, 5997 SIP U COMPL MAD
   Hudak P, 2000, GENTLE INTRO HASKELL
   Jaffar J., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P111, DOI 10.1145/41625.41635
   Jaffar J, 1998, J LOGIC PROGRAM, V37, P1, DOI 10.1016/S0743-1066(98)10002-X
   KANELLAKIS PC, 1995, J COMPUT SYST SCI, V51, P26, DOI 10.1006/jcss.1995.1051
   Kobayashi K, 2003, IEICE T FUND ELECTR, VE86A, P1
   LOOGEN R, 1995, INTEGRATION FUNKTION
   Lux W, 2001, LECT NOTES COMPUT SC, V2024, P185
   MIDDELDORP A, 1994, APPL ALGEBR ENG COMM, V5, P213, DOI 10.1007/BF01190830
   MONFROY E, 1996, THESIS INRIA
   MORENONAVARRO JJ, 1992, J LOGIC PROGRAM, V12, P191, DOI 10.1016/0743-1066(92)90024-W
   MULLER M, 1995, WORKSH VIS FUT LOG P
   Nilsson Ulf, 1995, Logic, Programming and Prolog
   PALAMIDESSI C, 1990, LECT NOTES COMPUT SC, V443, P386
   REDDY US, 1985, IEEE INT S LOGIC PRO, P138
   RUEHER M, 1995, LECT NOTES COMPUTER, V910, P231
   SCHULTE C, 2002, LNCS, V2302
   SUZUKI T, 1995, LECT NOTES COMPUTER, V914, P179, DOI DOI 10.1007/3-540-59200-856
   WARREN DHD, 1988, GIG WORKSH SWED I CO
   WESTFOLD SJ, 2001, KNOWLEDGE ENG REV
   Winskel G., 1993, The Formal Semantics of Programming Languages
NR 40
TC 6
Z9 6
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2007
VL 7
BP 93
EP 121
DI 10.1017/S1471068406002833
PN 1-2
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 148DD
UT WOS:000245053800005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mariño, J
   Herranz, A
   Moreno-Navarro, JJ
AF Marino, Julio
   Herranz, Angel
   Moreno-Navarro, Juan Jose
TI Demand analysis with partial predicates
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE functional-logic programming; demand analysis; strictness analysis;
   program transformation; abstract interpretation; set-constraint analysis
ID SET CONSTRAINTS; STATIC ANALYSIS; LOGIC PROGRAMS
AB To alleviate the inefficiencies caused by the interaction of the logic and functional sides, integrated languages may take advantage of demand information, i.e. knowing in advance which computations are needed and, to which extent, in a particular context. This work studies demand analysis - which is closely related to backwards strictness analysis - in a semantic framework of partial predicates, which in turn are constructive realizations of ideals in a domain. This will allow us to give a concise, unified presentation of demand analysis, to relate it to other analyses based on abstract interpretation or strictness logics, some hints for the implementation, and, more important, to prove the soundness of our analysis based on demand equations. There are also some innovative results. One of them is that a set constraint-based analysis has been derived in a stepwise manner using ideas taken from the area of program transformation. The other one is the possibility of using program transformation itself to perform the analysis, specialty in those domains of properties where algorithms based on constraint solving are too weak.
C1 Univ Politecn Madrid, Fac Informat, Boadilla Del Monte 28660, Spain.
C3 Universidad Politecnica de Madrid
RP Mariño, J (corresponding author), Univ Politecn Madrid, Fac Informat, Campus Montegancedo S-U, Boadilla Del Monte 28660, Spain.
EM jmarino@fi.upm.es; aberranz@fi.upm.es; jjmoreno@fi.upm.es
RI MORENO-NAVARRO, JUAN JOSE/JXY-0066-2024; Herranz, Ángel/AAB-1297-2019
OI MORENO-NAVARRO, JUAN JOSE/0000-0001-8842-8359; Herranz,
   Ángel/0000-0002-6433-5681
CR [Anonymous], CURRY INTEGRATED FUN
   Antoy S, 2000, J ACM, V47, P776, DOI 10.1145/347476.347484
   ANTOY S, 1997, ICLP 97, P138
   BENTON PN, 1992, THESIS U CAMBRIDGE
   Charatonik W, 1998, LECT NOTES COMPUT SC, V1379, P211
   COMINI M, 2000, APPIA GULP PRODE 200, P22
   Falaschi M, 2000, J LOGIC PROGRAM, V42, P185, DOI 10.1016/S0743-1066(99)00004-7
   GALLAGHER JP, 2000, P PEPM 00, P44
   GENIUS D, 1996, P JIC SLP 96 WORKSH, P95
   HANUS M, 1994, J LOGIC PROGRAM, V20, P583, DOI 10.1016/0743-1066(94)90034-5
   JACOBS D, 1992, J LOGIC PROGRAM, V13, P291, DOI 10.1016/0743-1066(92)90034-Z
   JENSEN T, 1994, 4 INT C COMP LANG
   LOOGEN R, 1987, 3 INT C FUNCT PROGR, V274, P385
   Mariño J, 2000, LECT NOTES COMPUT SC, V1753, P63
   MARINO J, 1995, WORKSH FUNCT LOG PRO
   MARINO J, 2002, THESIS U POLITECNICA
   MARINO J, 1993, 2 C NAC PROGR DECL 2, P39
   MARINO J, 1992, WORKSH LOG PROGR SYN, P253
   MARINO J, 1993, WORKSH GLOB COMP INT
   MARINO J, 1998, 7 WORKSH FUNCT LOG P
   MORENONAVARRO JJ, 1992, J LOGIC PROGRAM, V12, P191, DOI 10.1016/0743-1066(92)90024-W
   MORENONAVARRO JJ, 1990, 2 INT C ALG LOG PROG, P298
   MORENONAVARRO JJ, 1994, JOINT C DECL PROGR G
   MORENONAVARRO JJ, 1996, LECT NOTES ARTIF INT, V1050, P213
   MORENONAVARRO JJ, 1993, LECT NOTES COMPUTER, V714, P167
   MUTHUKUMAR K, 1991, P 8 INT C LOG PROGR, P49
   MYCROFT A, 1980, LECTURE NOTES COMPUT, V83, P269, DOI DOI 10.1007/3-540-09981-6_19
   Pacholski L, 1997, LECT NOTES COMPUT SC, V1330, P549, DOI 10.1007/BFb0017466
   RAMOS J, 2005, INT C FUNCT PROGR IC, P228
   REY JM, 2003, DEMAND ANAL VIA DYNA
   Sekar R, 1995, ACM T PROGR LANG SYS, V17, P896, DOI 10.1145/218570.218573
   VANLEEUWEN J, 1990, HDB THEORETICAL COMP, VB
   WADLER P, 1987, ABSTRACT INTERPRETAT, pCH12
   WADLER P, 1993, LECT NOTES COMPUTER, V714, P184
   ZARTMANN F, 1997, LECT NOTES COMPUTER, V1302, P141
NR 35
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2007
VL 7
BP 153
EP 182
DI 10.1017/S1471068406002882
PN 1-2
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 148DD
UT WOS:000245053800007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Loyer, Y
   Straccia, U
AF Loyer, Yann
   Straccia, Umberto
TI Epistemic foundation of stable model semantics
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE bilattices; fixed-point semantics; logic programs; stable model
   semantics; non-monotonic reasoning
ID WELL-FOUNDED SEMANTICS; LOGIC PROGRAMS; DEFAULT
AB Stable model semantics has become a very popular approach for the management of negation in logic programming. This approach relies mainly on the closed world assumption to complete the available knowledge and its formulation has its basis in the so-called Gelfond-Lifschitz transformation. The primary goal of this work is to present an alternative and epistemic-based characterization of stable model semantics, to the Gelfond-Lifschitz transformation. In particular, we show that stable model semantics can be defined entirely as an extension of the Kripke-Kleene semantics. Indeed, we show that the closed world assumption can be seen as an additional source of 'falsehood' to be added cumulatively to the Kripke-Kleene semantics. Our approach is purely algebraic and can abstract from the particular formalism of choice as it is based on monotone operators (under the knowledge order) over bilattices only.
C1 Univ Versailles, Lab PRiSM, F-78000 Versailles, France.
   CNR, Ist Sci & Tecnol Informaz A Faedo, Pisa, Italy.
C3 Universite Paris Saclay; Consiglio Nazionale delle Ricerche (CNR);
   Istituto di Scienza e Tecnologie dell'Informazione "Alessandro Faedo"
   (ISTI-CNR)
RP Loyer, Y (corresponding author), Univ Versailles, Lab PRiSM, F-78000 Versailles, France.
EM Yann.Loyer@prism.uvsq.fr; straccia@isti.cnr.it
RI Straccia, Umberto/B-5373-2015
OI Straccia, Umberto/0000-0001-5998-6757
CR Alcântara J, 2002, LECT NOTES ARTIF INT, V2424, P345, DOI 10.1007/3-540-45757-7_29
   Anderson A., 1975, ENTAILMENT LOGIC REL
   [Anonymous], P 7 INT C LOG PROGR
   Arieli O, 2002, ANN MATH ARTIF INTEL, V36, P381, DOI 10.1023/A:1016358201013
   Arieli O., 1996, Journal of Logic, Language and Information, V5, P25, DOI 10.1007/BF00215626
   Arieli O, 1998, ARTIF INTELL, V102, P97, DOI 10.1016/S0004-3702(98)00032-0
   AVRON A, 1996, J MATH STRUCTURES CO, V6, P287
   Belnap N., 1977, MODERN USES MULTIPLE, P8, DOI [10.1007/978-94-010-1161-7_2, DOI 10.1007/978-94-010-1161-7_2]
   BLAIR HA, 1989, THEOR COMPUT SCI, V68, P135, DOI 10.1016/0304-3975(89)90126-6
   Clark K. L., 1978, Logic and data bases, P293
   DAMASIO CV, 2001, LECT NOTES COMPUTER, V2173
   DAMASIO CV, 1998, HDB DEFEASIBLE REASO, P341
   Denecker M, 2003, ARTIF INTELL, V143, P79, DOI 10.1016/S0004-3702(02)00293-X
   Denecker M, 1998, LECT NOTES ARTIF INT, V1489, P1, DOI 10.1007/3-540-49545-2_1
   DENECKER M, 2002, PRINCIPLES KNOWLEDGE, P177
   DENECKER M, 1999, NFS WORKSH LOG BAS A, P1
   Denecker Marc., 2001, ACM Transactions on Computational Logic, V2, P623
   Dunn J. M., 1986, Handbook of Philosophical Logic, V3, P117
   DUNN JM, 1976, PHILOS STUD, V29, P149, DOI 10.1007/BF00373152
   EMDEN M, 1976, J ACM, V23, P733
   Fitting M, 2002, THEOR COMPUT SCI, V278, P25, DOI 10.1016/S0304-3975(00)00330-3
   FITTING M, 1991, J LOGIC PROGRAM, V11, P91, DOI 10.1016/0743-1066(91)90014-G
   FITTING M, 1993, J LOGIC PROGRAM, V17, P197, DOI 10.1016/0743-1066(93)90031-B
   Fitting M., 1985, Journal of Logic Programming, V2, P295, DOI 10.1016/S0743-1066(85)80005-4
   FITTING M, 1992, J LOGIC COMPUT, V1, P797
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Ginsberg M. L., 1988, Computational Intelligence, V4, P265, DOI 10.1111/j.1467-8640.1988.tb00280.x
   Herre H, 1997, J LOGIC PROGRAM, V30, P165, DOI 10.1016/S0743-1066(96)00106-9
   KUNEN K, 1987, J LOGIC PROGRAM, V4, P289, DOI 10.1016/0743-1066(87)90007-0
   Leone N, 1997, INFORM COMPUT, V135, P69, DOI 10.1006/inco.1997.2630
   LEVESQUE HJ, 1988, J PHILOS LOGIC, V17, P355, DOI 10.1007/BF00297511
   LEVESQUE HJ, 1984, P NATIONAL C ARTIFIC, P198
   Lloyd J. W., 2012, Foundations of Logic Programming
   Loyer Y, 2003, LECT NOTES COMPUT SC, V2916, P466, DOI 10.1007/978-3-540-24599-5_32
   Loyer Y, 2002, LECT NOTES ARTIF INT, V2424, P271, DOI 10.1007/3-540-45757-7_23
   Loyer Y, 2003, LECT NOTES COMPUT SC, V2747, P541
   LOYER Y, 2003, ISTI2003TR05 CONS NA
   LOYER Y, 2002, LECT NOTES COMPUTER, V2441, P152
   LUKASIEWICZ T, 2001, LECT NOTES ARTIF INT, V2173, P336
   Moore Robert C., 1984, Possible-world semantics for autoepistemic logic
   NG R, 1991, LECT NOTES ARTIF INT, V542, P162
   Przymusinski T., 1990, Fundamenta Informaticae, V13, P445
   PRZYMUSINSKI TC, 1990, LOGIC PROGRAMM, P40
   Reiter R., 1978, Logic and data bases, P55
   REITER R, 1980, ARTIF INTELL, V13, P81, DOI 10.1016/0004-3702(80)90014-4
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   Van Gelder A., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P1, DOI 10.1145/73721.73722
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
NR 49
TC 12
Z9 12
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2006
VL 6
BP 355
EP 393
DI 10.1017/S1471068405002619
PN 4
PG 39
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 063OZ
UT WOS:000239030600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Furfaro, F
   Greco, G
   Greco, S
AF Furfaro, F
   Greco, G
   Greco, S
TI Minimal founded semantics for disjunctive logic programs and deductive
   databases
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE disjunctive logic programs; disjunctive deductive databases; semantics;
   minimal models; stable models
ID EXPRESSIVE POWERS; STABLE MODELS; COMPLEXITY; QUERIES; DATALOG
AB In this paper, we propose a variant of stable model semantics for disjunctive logic programming and deductive databases. The semantics, called minimal founded, generalizes stable model semantics for normal (i.e. non-disjunctive) programs, but differs from disjunctive stable model semantics (the extension of stable model semantics for disjunctive programs). Compared with disjunctive stable model semantics, minimal founded semantics seems to be more intuitive, it gives meaning to programs which are meaningless under stable model semantics and is no harder to compute. More specifically, minimal founded semantics differs from stable model semantics only for disjunctive programs having constraint rules or rules working as constraints. We study the expressive power of the semantics, and show that for general disjunctive datalog programs it has the same power as disjunctive stable model semantics.
C1 Univ Calabria, DEIS, I-87030 Commenda Di Rende, Italy.
C3 University of Calabria
RP Furfaro, F (corresponding author), Univ Calabria, DEIS, I-87030 Commenda Di Rende, Italy.
EM filippo.furfaro@deis.unical.it; gianluigi.greco@deis.unical.it;
   greco@deis.unical.it
RI Greco, Gianluigi/AAD-6503-2021; Greco, Gianluigi/I-7052-2012
OI Greco, Sergio/0000-0003-2966-3484; Greco, Gianluigi/0000-0002-5799-6828;
   Furfaro, Filippo/0000-0001-5145-1301
CR Abiteboul Serge, 1994, Foundations of Databases
   [Anonymous], P SIAM AMS S APPL MA
   [Anonymous], 1992, Foundations of Disjunctive Logic Programming
   Apt K.R., 1988, THEORY DECLARATIVE K, P89
   Ben-Eliyahu R., 1994, Annals of Mathematics and Artificial Intelligence, V12, P53, DOI 10.1007/BF01530761
   BRASS S, 1992, P JOINT INT C S LOG, P798
   CHANDRA A, 1982, J COMPUT SYST SCI, V25, P99, DOI 10.1016/0022-0000(82)90012-5
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Eiter T, 1998, THEOR COMPUT SCI, V206, P181, DOI 10.1016/S0304-3975(97)00129-1
   Eiter T., 1993, PODS ACM S PRINCIPLE, P158
   Eiter Thomas, 1998, P 6 INT C PRINC KNOW, P406
   FERNANDEZ JA, 1991, P 8 INT C LOG PROGR, P660
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Greco S., 1998, Proceedings of the Twenty-Fourth International Conference on Very-Large Databases, P287
   GRECO S, 1991, P INT C LOG PROGR, P441
   Leone N, 1997, INFORM COMPUT, V135, P69, DOI 10.1006/inco.1997.2630
   MAREK W, 1991, J ACM, V38, P518
   Minker Jack., 1982, INT C AUTOMATED DEDU, P292
   PRZYMUSINSKA A, 1988, P 5 INT C LOG PROGR, P1106
   Przymusinski T. C., 1991, New Generation Computing, V9, P401, DOI 10.1007/BF03037171
   Przymusinski T. C., 1988, F DEDUCTIVE DATABASE, P193
   RAJASEKAR J, 1989, J AUTOM REASONING, V5, P293
   ROSS K, 1989, P 1 INT C DED OBJ OR, P385
   Ross K. A., 1988, Journal of Automated Reasoning, V4, P397, DOI 10.1007/BF00297247
   Sacca D, 1997, J COMPUT SYST SCI, V54, P441, DOI 10.1006/jcss.1997.1446
   SAKAMA C, 1994, J AUTOM REASONING, V13, P145, DOI 10.1007/BF00881915
   SCHLIPF JS, 1995, J COMPUT SYST SCI, V51, P64, DOI 10.1006/jcss.1995.1053
   Stockmeyer L. J., 1976, Theoretical Computer Science, V3, P1, DOI 10.1016/0304-3975(76)90061-X
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Vardi M.Y., 1982, P 14 ANN ACM S THEOR, P137, DOI DOI 10.1145/800070.802186
NR 31
TC 4
Z9 4
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 40 WEST 20TH ST, NEW YORK, NY 10011-4211 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2004
VL 4
BP 75
EP 93
DI 10.1017/S1471068403001704
PN 1-2
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 776LU
UT WOS:000189118100003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Riaza, JA
AF Riaza, Jose A.
TI Tau Prolog: A Prolog Interpreter for the Web
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Tau Prolog; logic programming; Prolog interpreter; JavaScript
AB Tau Prolog is a client-side Prolog interpreter fully implemented in JavaScript, which aims at implementing the ISO Prolog Standard. Tau Prolog has been developed to be used with either Node.js or a browser seamlessly, and therefore, it has been developed following a non-blocking, callback-based approach to avoid blocking web browsers. Taking the best from JavaScript and Prolog, Tau Prolog allows the programmer to handle browser events and manipulate the Document Object Model (DOM) of a web using Prolog predicates. In this paper we describe the architecture of Tau Prolog and its main packages for interacting with the Web, and we present its programming environment.
C1 [Riaza, Jose A.] Univ Castilla La Mancha, Dept Comp Syst, Albacete 02071, Spain.
C3 Universidad de Castilla-La Mancha
RP Riaza, JA (corresponding author), Univ Castilla La Mancha, Dept Comp Syst, Albacete 02071, Spain.
EM JoseAntonio.Riaza@uclm.es
OI Riaza Valverde, Jose Antonio/0000-0003-0156-9074
FU State Research Agency (AEI) of the Spanish Ministry of Science and
   Innovation [PID2019-104735RB-C42]
FX This work has been partially supported by the State Research Agency
   (AEI) of the Spanish Ministry of Science and Innovation under grant
   PID2019-104735RB-C42 (SAFER).& nbsp;
CR [Anonymous], 1995, 132111 ISOIEC
   Bainomugisha E, 2013, ACM COMPUT SURV, V45, DOI 10.1145/2501654.2501666
   Brodo L, 2021, THEOR COMPUT SCI, V875, P1, DOI 10.1016/j.tcs.2021.03.024
   Carlsson M., 1988, SICSTUS PROLOG USERS, V3
   Clow M., 2018, ANGULAR 5 PROJECTS, P291
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Garca-Pradales G., 2022, S CASP IN BROWSER PL
   Holzbaur C., 1990, THESIS U VIENNA
   International Ecma., 2021, ECMASCRIPT 2022 INT
   International Ecma., 2021, ECMASCRIPT 2022 LANG
   Jaffar J., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P111, DOI 10.1145/41625.41635
   Kambona K., 2013, P 7 WORKSH DYN LANG, P1
   Kirchev Y, 2019, LECT NOTES ARTIF INT, V11927, P93, DOI 10.1007/978-3-030-34885-4_7
   Lager T, 2014, THEOR PRACT LOG PROG, V14, P539, DOI 10.1017/S1471068414000192
   MARTELLI A, 1982, ACM T PROGR LANG SYS, V4, P258, DOI 10.1145/357162.357169
   Morales JF, 2012, THEOR PRACT LOG PROG, V12, P755, DOI 10.1017/S1471068412000336
   Moura P., 2022, LOGTALK HDB
   Mozilla Contributors, 2021, EV REF
   Mozilla Contributors, 2021, US WEB WORK
   Mozilla Contributors, 2021, CONC MOD EV LOOP
   Mozilla Contributors, 2021, OBJ PROT
   Riaza J. A., 2022, P 21 C PROGR LANG PR, P1
   Tamaki H., 1984, P 2 INT LOG PROGR C, P127
   Tarau P., 2018, OPENACCESS SERIES IN, V10, P1
   Thompson J., 2021, YIELD PROLOG
   Turganov A., 2020, 2020 INT C INF TECHN, P1
   Wielemaker J., 2015, ABS151100915 CORR
   2004, DOCUMENT OBJECT MODE
   Yarnpkg, 2021, CONSTRAINTS YARN PAC
NR 29
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2024
VL 24
IS 1
BP 1
EP 21
DI 10.1017/S1471068423000352
EA SEP 2023
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA IA4P8
UT WOS:001072189300001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Carbonnelle, P
   Vennekens, J
   Denecker, M
   Bogaerts, B
AF Carbonnelle, Pierre
   Vennekens, Joost
   Denecker, Marc
   Bogaerts, Bart
TI Interactive Model Expansion in an Observable Environment
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 39th International Conference on Logic Programming
CY JUL 09-15, 2023
CL London, ENGLAND
DE knowledge representation; man-machine interface; configuration problem
AB Many practical problems can be understood as the search for a state of affairs that extends a fixed partial state of affairs, the environment, while satisfying certain conditions that are formally specified. Such problems are found in, for example, engineering, law or economics. We study this class of problems in a context where some of the relevant information about the environment is not known by the user at the start of the search. During the search, the user may consider tentative solutions that make implicit hypotheses about these unknowns. To ensure that the solution is appropriate, these hypotheses must be verified by observing the environment. Furthermore, we assume that, in addition to knowledge of what constitutes a solution, knowledge of general laws of the environment is also present. We formally define partial solutions with enough verified facts to guarantee the existence of complete and appropriate solutions. Additionally, we propose an interactive system to assist the user in their search by determining (1) which hypotheses implicit in a tentative solution must be verified in the environment, and (2) which observations can bring useful information for the search. We present an efficient method to over-approximate the set of relevant information, and evaluate our implementation.
C1 [Carbonnelle, Pierre; Vennekens, Joost; Denecker, Marc] Katholieke Univ Leuven, Leuven, Belgium.
   [Bogaerts, Bart] Vrije Univ Brussel, Brussels, Belgium.
C3 KU Leuven; Vrije Universiteit Brussel
RP Carbonnelle, P (corresponding author), Katholieke Univ Leuven, Leuven, Belgium.
EM pierre.carbonnelle@gmail.com; joost.vennekens@kuleuven.be;
   marc.denecker@kuleuven.be; Bart.Bogaerts@vub.be
OI Bogaerts, Bart/0000-0003-3460-4251
FU Flemish Government
FX This research received funding from the Flemish Government under the
   "OnderzoeksprogrammaArtificiele Intelligentie (AI) Vlaanderen" program.
CR Aerts B, 2022, EXPERT SYST APPL, V187, DOI 10.1016/j.eswa.2021.115869
   BOWEN J, 1991, PROCEEDINGS : NINTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P215
   Carbonnelle P, 2022, Arxiv, DOI arXiv:2202.00343
   Cimatti A, 2007, LECT NOTES COMPUT SC, V4501, P334
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Deryck M, 2019, IEEE INT C SEMANT CO, P174, DOI [10.1109/ICSC.2019.00040, 10.1109/ICOSC.2019.8665543]
   FALKNER A. A., 2019, CEUR Workshop Proceedings, V2467, P65
   FELFERNIG A., 2014, Knowledge-Based Configuration: From Research to Business Cases, P191
   Felfernig A., 2014, Knowledge-Based Configuration: From Research to Business Cases
   Hotz Lothar., 2014, Knowledge-Based Configuration, P41, DOI [10/j7ps, 10.1016/B978-0-12-415817-7.00006-2]
   JANSEN J., 2016, P 25 INT JOINT C ART, P596
   MADSEN J. N., 2003, Methods for interactive constraint satisfaction
   MITCHELL D. G., 2006, Technical Report TR 2006-24
   MITTAL S, 1990, PROCEEDINGS : EIGHTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P25
   OMG, 2021, Decision Model and Notation (DMN)
   Stumptner M., 1993, Advances in Artificial Intelligence. Third Congress of the Italian Association for Artificial Intelligence, AI*IA '93. Proceedings, P302
   Subramanian D, 1997, ARTIF INTELL, V97, P1, DOI 10.1016/S0004-3702(97)00075-1
   Van Hertum P, 2017, THEOR PRACT LOG PROG, V17, P91, DOI 10.1017/S1471068416000156
   Vandevelde S, 2021, THEOR PRACT LOG PROG, P1, DOI 10.1017/S1471068421000491
   Yokoo Makoto., 2012, DISTRIBUTED CONSTRAI
   Yueling Zhang, 2019, Formal Methods and Software Engineering. 21st International Conference on Formal Engineering Methods, ICFEM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11852), P36, DOI 10.1007/978-3-030-32409-4_3
NR 21
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2023
VL 23
IS 4
SI SI
BP 648
EP 663
DI 10.1017/S1471068423000261
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA ID7Z0
UT WOS:001164466100005
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Bozzato, L
   Eiter, T
   Kiesel, R
AF Bozzato, Loris
   Eiter, Thomas
   Kiesel, Rafael
TI Reasoning on Multirelational Contextual Hierarchies via Answer Set
   Programming with Algebraic Measures
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE defeasible knowledge; description logics; ASP; algebraic measures;
   justifiable exceptions
ID KNOWLEDGE REPOSITORIES; LOGICS
AB Dealing with context-dependent knowledge has led to different formalizations of the notion of context. Among them is the Contextualized Knowledge Repository (CKR) framework, which is rooted in description logics but links on the reasoning side strongly to logic programs and Answer Set Programming (ASP) in particular. The CKR framework caters for reasoning with defeasible axioms and exceptions in contexts, which was extended to knowledge inheritance across contexts in a coverage (specificity) hierarchy. However, the approach supports only this single type of contextual relation and the reasoning procedures work only for restricted hierarchies, due to nontrivial issues with model preference under exceptions. In this paper, we overcome these limitations and present a generalization of CKR hierarchies to multiple contextual relations, along with their interpretation of defeasible axioms and preference. To support reasoning, we use ASP with algebraic measures, which is a recent extension of ASP with weighted formulas over semirings that allows one to associate quantities with interpretations depending on the truth values of propositional atoms. Notably, we show that for a relevant fragment of CKR hierarchies with multiple contextual relations, query answering can be realized with the popular asprin framework. The algebraic measures approach is more powerful and enables, for example, reasoning with epistemic queries over CKRs, which opens interesting perspectives for the use of quantitative ASP extensions in other applications.
C1 [Bozzato, Loris] Fdn Bruno Kessler, Via Sommar 18, I-38123 Trento, Italy.
   [Eiter, Thomas; Kiesel, Rafael] Tech Univ Wien, Favoritenstr 9-11, A-1040 Vienna, Austria.
C3 Fondazione Bruno Kessler; Technische Universitat Wien
RP Bozzato, L (corresponding author), Fdn Bruno Kessler, Via Sommar 18, I-38123 Trento, Italy.
EM bozzato@fbk.eu; thomas.eiter@tuwien.ac.at; rafael.kiesel@tuwien.ac.at
RI Eiter, Thomas/ABE-9263-2021; Kiesel, Rafael/HLH-5619-2023
OI Kiesel, Rafael/0000-0002-8866-3452; Bozzato, Loris/0000-0003-1757-9859;
   Eiter, Thomas/0000-0001-6003-6345
FU European Commission [820437]; Austrian Science Fund (FWF) [W1255-N23]
FX This work was partially supported by the European Commission funded
   project "Humane AI: Toward AI Systems That Augment and Empower Humans by
   Understanding Us, our Society and the World Around Us" (grant #820437)
   and the Austrian Science Fund (FWF) project W1255-N23. The support is
   gratefully acknowledged.
CR [Anonymous], 2006, EVEN MORE IRRESISTIB
   Baader F., 2003, DESCRIPTION LOGIC HD
   Bistarelli S., 1999, Constraints, V4, P199, DOI 10.1023/A:1026441215081
   Bonatti PA, 2015, ARTIF INTELL, V222, P1, DOI 10.1016/j.artint.2014.12.010
   Bozzato Loris, 2019, Modeling and Using Context. 11th International and Interdisciplinary Conference, CONTEXT 2019. Proceedings. Lecture Notes in Artificial Intelligence (LNAI 11939), P26, DOI 10.1007/978-3-030-34974-5_3
   Bozzato L, 2013, CEUR WORKSHOP P, V1014, P552
   Bozzato L, 2018, SIXTEENTH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P329
   Bozzato L, 2018, ARTIF INTELL, V257, P72, DOI 10.1016/j.artint.2017.12.005
   Brewka G, 2015, AAAI CONF ARTIF INTE, P1467
   Britz K, 2021, ACM T COMPUT LOG, V22, DOI 10.1145/3420258
   Buccafurri F, 1999, LOGIC PROGRAMM, P79
   Calvanese D., 2008, P ONISW 2008, P97
   de Bruijn J, 2008, P 11 INT C PRINC KNO, P485
   Droste M, 2005, LECT NOTES COMPUT SC, V3580, P513
   Eiter T, 2008, ARTIF INTELL, V172, P1495, DOI 10.1016/j.artint.2008.04.002
   Eiter T, 2020, FRONT ARTIF INTEL AP, V325, P729, DOI 10.3233/FAIA200160
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   GIL O. F, 2014, ABS14046566 CORR
   GIORDANO L., 2011, 22 INT JOINT C ARTIF, P894
   Giordano L, 2020, THEOR PRACT LOG PROG, V20, P751, DOI 10.1017/S1471068420000381
   GIUNCHIGLIA F, 1994, ARTIF INTELL, V65, P29, DOI 10.1016/0004-3702(94)90037-X
   Green Todd J., 2007, PODS, DOI DOI 10.1145/1265530.1265535
   Kimmig A., 2011, AAAI, P209
   Klarman S., 2013, THESIS VU AMSTERDAM
   Krötzsch M, 2010, LECT NOTES ARTIF INT, V6341, P234, DOI 10.1007/978-3-642-15675-5_21
   McCarthy H., 1993, IJCAI-93. Proceedings of the Thirteenth International Joint Conference on Artificial Intelligence, P555
   Pensel M, 2018, INT J APPROX REASON, V103, P28, DOI 10.1016/j.ijar.2018.08.005
   Serafini L, 2012, J WEB SEMANT, V12-13, P64, DOI 10.1016/j.websem.2011.12.003
   Straccia U, 2010, AAAI CONF ARTIF INTE, P1437
NR 29
TC 4
Z9 4
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2021
VL 21
IS 5
SI SI
BP 593
EP 609
AR PII S1471068421000284
DI 10.1017/S1471068421000284
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA XB4RH
UT WOS:000721317500006
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Cabalar, P
   Fandinno, J
   Garea, J
   Romero, J
   Schaub, T
AF Cabalar, Pedro
   Fandinno, Jorge
   Garea, Javier
   Romero, Javier
   Schaub, Torsten
TI eclingo : A Solver for Epistemic Logic Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE Answer Set Programming; Epistemic Logic Programs; Non-Monotonic
   Reasoning; Conformant Planning
AB We describe eclingo, a solver for epistemic logic programs under Gelfond 1991 semantics built upon the Answer Set Programming system clingo. The input language of eclingo uses the syntax extension capabilities of clingo to define subjective literals that, as usual in epistemic logic programs, allow for checking the truth of a regular literal in all or in some of the answer sets of a program. The eclingo solving process follows a guess and check strategy. It first generates potential truth values for subjective literals and, in a second step, it checks the obtained result with respect to the cautious and brave consequences of the program. This process is implemented using the multi-shot functionalities of clingo. We have also implemented some optimisations, aiming at reducing the search space and, therefore, increasing eclingo 's efficiency in some scenarios. Finally, we compare the efficiency of eclingo with two state-of-the-art solvers for epistemic logic programs on a pair of benchmark scenarios and show that eclingo generally outperforms their obtained results.
C1 [Cabalar, Pedro; Garea, Javier] Univ A Coruna, La Coruna, Spain.
   [Fandinno, Jorge; Romero, Javier; Schaub, Torsten] Univ Potsdam, Potsdam, Germany.
C3 Universidade da Coruna; University of Potsdam
RP Cabalar, P (corresponding author), Univ A Coruna, La Coruna, Spain.
EM cabalar@udc.es; fandinno@uni-potsdam.de; javier.garea@udc.es;
   javier@uni-potsdam.de; torsten@uni-potsdam.de
RI Fandinno, Jorge/JJC-6227-2023; Romero, Javier/HLV-8880-2023; Schaub,
   Torsten/O-5873-2019; Cabalar, Pedro/AAE-5198-2020; Fandiño,
   Jorge/F-8705-2016
OI Romero, Javier/0000-0001-5546-9939; Schaub, Torsten/0000-0002-7456-041X;
   Fandiño, Jorge/0000-0002-3917-8717; Garea, Javier/0000-0002-3829-9410
FU MINECO, Spain [TIC2017-84453-P]; Alexander von Humboldt Foundation,
   Germany; CITIC, Research Center of the Galician University System -
   Consellera de Educacion, Universidade e Formacion Profesional (Xunta de
   Galicia); ERDF [ED431G 2019/01]
FX Partially supported by MINECO, Spain, grant TIC2017-84453-P. The second
   author is funded by the Alexander von Humboldt Foundation, Germany. The
   third author was partially supported by CITIC, Research Center of the
   Galician University System financed by the Consellera de Educacion,
   Universidade e Formacion Profesional (Xunta de Galicia) and co-financed
   80% by the ERDF (Ref. ED431G 2019/01).
CR [Anonymous], 2007, THESIS
   Balai E., 2014, P WORKSH ANSW SET PR
   Cabalar P., 2019, FOUNDED WORLD VIEWS, P134
   Cabalar P., 2019, SPLITTING EPISTEMIC, P120
   del Cerro LF, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2964
   Fandinno J, 2019, THEOR PRACT LOG PROG, V19, P671, DOI 10.1017/S1471068419000127
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   Gebser M, 2009, LECT NOTES COMPUT SC, V5753, P502, DOI 10.1007/978-3-642-04238-6_49
   Gelfond M., 1994, Annals of Mathematics and Artificial Intelligence, V12, P89, DOI 10.1007/BF01530762
   GELFOND M, 1993, LOGIC PROGRAMMING AND NON-MONOTONIC REASONING, P397
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1991, AAAI-91. Proceedings Ninth National Conference on Artificial Intelligence, P386
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Kahl P., 2015, J LOGIC COMPUTATION
   Leclerc A., 2018, P 11 INT WORKSH ANSW
   Shen YD, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5060
   Son TC, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1269
   Truszczyriski Miroslaw, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P315, DOI 10.1007/978-3-642-20832-4_20
   Woltran S, 2019, P 15 INT C LOG PROGR
NR 19
TC 7
Z9 7
U1 1
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2020
VL 20
IS 6
SI SI
BP 834
EP 847
AR PII S1471068420000228
DI 10.1017/S1471068420000228
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR3IT
UT WOS:000571456800003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Calimeri, F
   Perri, S
   Zangari, J
AF Calimeri, Francesco
   Perri, Simona
   Zangari, Jessica
TI Optimizing Answer Set Computation via Heuristic-Based Decomposition
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE knowledge representation and nonmonotonic reasoning; logic programming
   methodology and applications; databases and semantic web reasoning;
   Answer Set Programming
ID HYPERTREE DECOMPOSITIONS; DLV; ALGORITHMS; POWER
AB Answer Set Programming (ASP) is a purely declarative formalism developed in the field of logic programming and non-monotonic reasoning: computational problems are encoded by logic programs whose answer sets, corresponding to solutions, are computed by an ASP system. Different, semantically equivalent, programs can be defined for the same problem; however, performance of systems evaluating them might significantly vary. We propose an approach for automatically transforming an input logic program into an equivalent one that can be evaluated more efficiently. One can make use of existing tree-decomposition techniques for rewriting selected rules into a set of multiple ones; the idea is to guide and adaptively apply them on the basis of proper new heuristics, to obtain a smart rewriting algorithm to be integrated into an ASP system. The method is rather general: it can be adapted to any system and implement different preference policies. Furthermore, we define a set of new heuristics tailored at optimizing grounding, one of the main phases of the ASP computation; we use them in order to implement the approach into the ASP system DLV, in particular into its grounding subsystem I-DLV, and carry out an extensive experimental activity for assessing the impact of the proposal.
C1 [Calimeri, Francesco; Perri, Simona; Zangari, Jessica] Univ Calabria, Dept Math & Comp Sci, Arcavacata Di Rende, Italy.
C3 University of Calabria
RP Calimeri, F (corresponding author), Univ Calabria, Dept Math & Comp Sci, Arcavacata Di Rende, Italy.
EM calimeri@mat.unical.it; perri@mat.unical.it; zangari@mat.unical.it
RI Calimeri, Francesco/J-1935-2012; Perri, Simona/IQV-7425-2023; Zangari,
   Jessica/AAA-6522-2021
OI Calimeri, Francesco/0000-0002-0866-0834; Zangari,
   Jessica/0000-0002-6418-7711; Perri, Simona/0000-0002-8036-5709
FU Italian region Calabria under project "DLV Large Scale" [CUP
   J28C17000220006]; European Union; Italian Ministry of Economic
   Development under the project EU H2020 PON I&C 2014-2020 "Smarter
   Solutions in the Big Data World-S2BDW" [CUP B28I17000250008]
FX This work has been partially supported by the Italian region Calabria
   under project "DLV Large Scale" (CUP J28C17000220006) POR Calabria FESR
   2014-2020 and by both the European Union and the Italian Ministry of
   Economic Development under the project EU H2020 PON I&C 2014-2020
   "Smarter Solutions in the Big Data World-S2BDW" (CUP B28I17000250008).
   This work is the extended version of a paper originally appeared in the
   Proceedings of 20th Symposium on Practical Aspects of Declarative
   Languages (PADL 2018), January 8-9, 2018, Los Angeles, USA. Program
   chairs were Kevin Hamlen and Nicola Leone. The paper presents new
   material that integrates and extends what has been reported in the
   original paper; in particular, it provides the reader with proper
   preliminaries (omitted in the original paper for space constraints),
   more detailed discussions on the proposed techniques and richer
   comparisons with related approaches, along with an extended number of
   examples. Furthermore, a more thorough experimental activity is
   presented, discussed in part in the main text and in part in Appendices
   in the Supplementary Material, that covers also new domains that were
   unexplored in the original paper.
CR Abseher M, 2017, LECT NOTES COMPUT SC, V10335, P376, DOI 10.1007/978-3-319-59776-8_30
   Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   Alviano M, 2012, ARTIF INTELL, V187, P156, DOI 10.1016/j.artint.2012.04.008
   [Anonymous], 2013, ASP CORE 2 4 ASP COM
   [Anonymous], 1988, PRINCIPLES COMPUTER
   Ben-Eliyahu R., 1994, Annals of Mathematics and Artificial Intelligence, V12, P53, DOI 10.1007/BF01530761
   Ben-Eliyahu-Zohary R, 1997, ARTIF INTELL, V96, P421, DOI 10.1016/S0004-3702(97)00060-X
   Bichler M, 2016, THEOR PRACT LOG PROG, V16, P552, DOI 10.1017/S1471068416000338
   Bliem B, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P852
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Calimeri F, 2008, J ALGORITHMS, V63, P34, DOI 10.1016/j.jalgor.2008.02.003
   Calimeri F, 2018, LECT NOTES COMPUT SC, V10702, P135, DOI 10.1007/978-3-319-73305-0_9
   Calimeri F, 2017, INTELL ARTIF, V11, P5, DOI 10.3233/IA-170104
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   Dal Palù A, 2009, FUND INFORM, V96, P297, DOI 10.3233/FI-2009-180
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   DECHTER R, 1994, ANN MATH ARTIFICIAL, V12, P1
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Eiter T, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1015
   Faber W., 2012, Correct Reasoning, P247, DOI DOI 10.1007/978-3-642-30743-0
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P531, DOI 10.1007/978-3-319-23264-5_44
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P368, DOI 10.1007/978-3-319-23264-5_31
   Gebser M., 2014, CORR
   Gebser M, 2017, LECT NOTES ARTIF INT, V10377, P3, DOI 10.1007/978-3-319-61660-5_1
   Gebser M, 2016, AAAI CONF ARTIF INTE, P4327
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Giunchiglia E, 2006, J AUTOM REASONING, V36, P345, DOI 10.1007/s10817-006-9033-2
   Gottlob G, 2005, LECT NOTES COMPUT SC, V3787, P1
   Gottlob G, 2001, LECT NOTES COMPUT SC, V2136, P37
   Gottlob G, 2016, PODS'16: PROCEEDINGS OF THE 35TH ACM SIGMOD-SIGACT-SIGAI SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P57, DOI 10.1145/2902251.2902309
   Janhunen T, 2006, ACM T COMPUT LOG, V7, P1, DOI 10.1145/1119439.1119440
   Kaufmann B, 2016, AI MAG, V37, P25, DOI 10.1609/aimag.v37i3.2672
   Lefévre C, 2017, THEOR PRACT LOG PROG, V17, P266, DOI 10.1017/S1471068416000569
   Leone N., 2001, LOGIC PROGRAMMING NO, P280, DOI DOI 10.1007/3-540-45402-021
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Minh Dao-Tran, 2012, Logics in Artificial Intelligence. Proceedings of the 13th European Conference (JELIA 2012), P480, DOI 10.1007/978-3-642-33353-8_38
   MORAK M., 2016, LECT NOTES COMPUTER, V10184, P114
   Morak Michael, 2012, P ICLP, V17, P247
   PERRI S, 2017, P 24 RCRA INT WORKSH, V2011, P26
   PERRI S., 2007, ANN MATH ARTIFICIAL, V51, P2
   Perri S, 2007, ANN MATH ARTIF INTEL, V51, P195, DOI 10.1007/s10472-008-9090-9
   Perri S, 2013, THEOR PRACT LOG PROG, V13, P253, DOI 10.1017/S1471068411000652
   ROBERTSON N, 1986, J ALGORITHM, V7, P309, DOI 10.1016/0196-6774(86)90023-4
   Simons Patrik, 2002, ARTIF INTELL, V138, P181
   Syrjanen T., 2001, LOGIC PROGRAMMING NO, P267, DOI DOI 10.1007/3-540-45402-0_20
   Ward J, 2004, LECT NOTES ARTIF INT, V2923, P302
   Weinzierl A, 2017, LECT NOTES ARTIF INT, V10377, P191, DOI 10.1007/978-3-319-61660-5_17
   ZANGARI J, 2017, PAOASP
NR 52
TC 7
Z9 8
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2019
VL 19
IS 4
BP 603
EP 628
DI 10.1017/S1471068419000036
PG 26
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID3WQ
UT WOS:000471608200004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wielemaker, J
   Riguzzi, F
   Kowalski, RA
   Lager, T
   Sadri, F
   Calejo, M
AF Wielemaker, Jan
   Riguzzi, Fabrizio
   Kowalski, Robert A.
   Lager, Torbjorn
   Sadri, Fariba
   Calejo, Miguel
TI Using SWISH to Realize Interactive Web-based Tutorials for Logic-based
   Languages
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Prolog; logic programming system; notebook interface; web
ID PROGRAMS; INFERENCE
AB Programming environments have evolved from purely text based to using graphical user interfaces, and now we see a move toward web-based interfaces, such as Jupyter. Web-based interfaces allow for the creation of interactive documents that consist of text and programs, as well as their output. The output can be rendered using web technology as, for example, text, tables, charts, or graphs. This approach is particularly suitable for capturing data analysis workflows and creating interactive educational material. This article describes SWISH, a web front-end for Prolog that consists of a web server implemented in SWI-Prolog and a client web application written in JavaScript. SWISH provides a web server where multiple users can manipulate and run the same material, and it can be adapted to support Prolog extensions. In this article we describe the architecture of SWISH, and describe two case studies of extensions of Prolog, namely Probabilistic Logic Programming and Logic Production System, which have used SWISH to provide tutorial sites.
C1 [Wielemaker, Jan] Ctr Wiskunde & Informat, Amsterdam, Netherlands.
   [Riguzzi, Fabrizio] Univ Ferrara, Dept Math & Comp Sci, Ferrara, Italy.
   [Kowalski, Robert A.; Sadri, Fariba] Imperial Coll, London, England.
   [Lager, Torbjorn] Univ Gothenburg, Gothenburg, Sweden.
   [Calejo, Miguel] Log Contracts, Lisbon, Portugal.
C3 University of Ferrara; Imperial College London; University of Gothenburg
RP Wielemaker, J (corresponding author), Ctr Wiskunde & Informat, Amsterdam, Netherlands.
EM J.Wielemaker@cwi.nl; fabrizio.riguzzi@unife.it;
   r.kowalski@imperial.ac.uk; lager@ling.gu.se; fs@doc.ic.ac.uk;
   mc@logicalcontracts.com
RI Fabrizio, Riguzzi/C-7679-2012
OI Fabrizio, Riguzzi/0000-0003-1654-9703; Wielemaker,
   Jan/0000-0001-5574-5673
FU VRE4EIC project - European Union's Horizon 2020 research and innovation
   program [676247]; EPSRC grant
FX This research was partially supported by the VRE4EIC project, a project
   that has received funding from the European Union's Horizon 2020
   research and innovation program under grant agreement no. 676247. The
   SWISH implementation of LPS was developed under an EPSRC grant
   administered by Imperial College London. We thank the referees for their
   helpful comments.
CR Alberti M, 2017, INTELL ARTIF, V11, P47, DOI 10.3233/IA-170106
   [Anonymous], IJCAI
   Bellodi E, 2015, THEOR PRACT LOG PROG, V15, P169, DOI 10.1017/S1471068413000689
   Bellodi E, 2013, INTELL DATA ANAL, V17, P343, DOI 10.3233/IDA-130582
   Blackburn P., 2006, LEARN PROLOG NOW, V7
   Byrd L., 1980, LOG PROGR WORKSH
   De Raedt L, 2015, MACH LEARN, V100, P5, DOI 10.1007/s10994-015-5494-z
   Denecker M, 2000, LECT NOTES ARTIF INT, V1861, P703
   Di Mauro N, 2015, MACH LEARN, V100, P127, DOI 10.1007/s10994-015-5510-3
   Dries A, 2015, LECT NOTES ARTIF INT, V9286, P312, DOI 10.1007/978-3-319-23461-8_37
   Fierens D, 2015, THEOR PRACT LOG PROG, V15, P358, DOI 10.1017/S1471068414000076
   Flach P., 1994, Simply Logical: Intelligent Reasoning by Example
   Gandrud C., 2013, REPRODUCIBLE RES R R
   KNUTH DE, 1984, COMPUT J, V27, P97, DOI 10.1093/comjnl/27.2.97
   KOWALSKI R, 1986, NEW GENERAT COMPUT, V4, P67, DOI 10.1007/BF03037383
   Kowalski R, 2016, THEOR PRACT LOG PROG, V16, P269, DOI 10.1017/S1471068416000041
   Kowalski R, 2015, NEW GENERAT COMPUT, V33, P33, DOI 10.1007/s00354-015-0103-z
   Lager T, 2014, THEOR PRACT LOG PROG, V14, P539, DOI 10.1017/S1471068414000192
   NGUEMBANG FADJA A, 2017, INTEGRATIVE MACHINE
   Riguzzi F, 2016, SOFTWARE PRACT EXPER, V46, P1381, DOI 10.1002/spe.2386
   Riguzzi F, 2013, FUND INFORM, V124, P521, DOI 10.3233/FI-2013-847
   Riguzzi F, 2013, THEOR PRACT LOG PROG, V13, P279, DOI 10.1017/S1471068411000664
   Rossant C., 2013, Learning IPython for interactive computing and data visualization
   Sato T., 1995, P INT C LOG PROGR, P715
   SERGOT MJ, 1986, COMMUN ACM, V29, P370, DOI 10.1145/5689.5920
   Srinivasan A, 1996, ARTIF INTELL, V85, P277, DOI 10.1016/0004-3702(95)00122-0
   SRINIVASAN A, 2007, ALEPH
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P431, DOI 10.1007/978-3-540-27775-0_30
   Wielemaker J, 2007, P 17 WORKSH LOG BAS, P16
   Wielemaker J, 2008, THEOR PRACT LOG PROG, V8, P363, DOI 10.1017/S1471068407003237
   Worlfram S, 2016, TEACH COMPUTATIONAL
NR 31
TC 6
Z9 7
U1 0
U2 7
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2019
VL 19
IS 2
SI SI
BP 229
EP 261
DI 10.1017/S1471068418000522
PG 33
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA HL5XX
UT WOS:000458807300004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Drabent, W
AF Drabent, Wlodzimierz
TI Logic plus control: On program construction and verification
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic programming; declarative programming; program completeness;
   program correctness; specification; program transformation; floundering;
   occur-check
ID TERMINATION; COMPLETENESS
AB This paper presents an example of formal reasoning about the semantics of a Prolog program of practical importance (the SAT solver of Howe and King). The program is treated as a definite clause logic program with added control. The logic program is constructed by means of stepwise refinement, hand in hand with its correctness and completeness proofs. The proofs are declarative - they do not refer to any operational semantics. Each step of the logic program construction follows a systematic approach to constructing programs which are provably correct and complete. We also prove that correctness and completeness of the logic program is preserved in the final Prolog program. Additionally, we prove termination, occur-check freedom and non-floundering.
   Our example shows how dealing with "logic" and with "control" can be separated. Most of the proofs can be done at the "logic" level, abstracting from any operational semantics.
   The example employs approximate specifications; they are crucial in simplifying reasoning about logic programs. It also shows that the paradigm of semantics-preserving program transformations may be not sufficient. We suggest considering transformations which preserve correctness and completeness with respect to an approximate specification.
C1 [Drabent, Wlodzimierz] Polish Acad Sci, Inst Comp Sci, Warsaw, Poland.
   [Drabent, Wlodzimierz] Linkoping Univ, IDA, Linkoping, Sweden.
C3 Polish Academy of Sciences; Institute of Computer Science of the Polish
   Academy of Sciences; Linkoping University
RP Drabent, W (corresponding author), Polish Acad Sci, Inst Comp Sci, Warsaw, Poland.; Drabent, W (corresponding author), Linkoping Univ, IDA, Linkoping, Sweden.
EM drabent@ipipan.waw.pl
RI Drabent, Włodzimierz/JGM-7411-2023
OI Drabent, Włodzimierz/0000-0002-4700-7272
CR Apt K.R., 1997, INT SERIES COMPUTER
   Apt KR, 1995, LECT NOTES COMPUT SC, V936, P66
   APT KR, 1993, INFORM COMPUT, V106, P109, DOI 10.1006/inco.1993.1051
   BEZEM M, 1993, J LOGIC PROGRAM, V15, P79, DOI 10.1016/0743-1066(93)90014-8
   Carlsson M., 2012, TPLP, V12, P1
   Clark K. L., 1979, 7959 IMP COLL
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   DERANSART P, 1993, THEOR COMPUT SCI, V118, P99, DOI 10.1016/0304-3975(93)90107-5
   Deransart Pierre., 1993, GRAMMATICAL VIEW LOG
   DEVILLE Y, 1990, LOGIC PROGRAMMING SY
   Drabent W, 2005, THEOR PRACT LOG PROG, V5, P669, DOI 10.1017/S147106840500253X
   Drabent W., 2012, 28 INT C LOG PROGR I, V17, P301
   Drabent W., 2015, LECT NOTES COMPUTER, V8981
   Drabent W, 2016, THEOR PRACT LOG PROG, V16, P498, DOI 10.1017/S1471068416000089
   Drabent W, 2016, ACM T COMPUT LOG, V17, DOI 10.1145/2898434
   Drabent W, 2017, FORM ASP COMPUT, V29, P155, DOI 10.1007/s00165-016-0392-0
   Genaim S, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1352582.1352585
   Gomes CP, 2008, FOUND ARTIF INTELL, P89, DOI 10.1016/S1574-6526(07)03002-7
   Howe JM, 2012, THEOR COMPUT SCI, V435, P43, DOI 10.1016/j.tcs.2012.02.024
   King A., 2012, COMMUNICATION
   KOWALSKI R, 1979, COMMUN ACM, V22, P424, DOI 10.1145/359131.359136
   Maher M.J., 1988, FDN DEDUCTIVE DATABA, P627
   Nguyen MT, 2011, THEOR PRACT LOG PROG, V11, P33, DOI 10.1017/S1471068410000025
   Pedreschi D, 2002, THEOR PRACT LOG PROG, V2, P369, DOI 10.1017/S1471068402001400
   Pedreschi D, 1999, J LOGIC PROGRAM, V39, P125, DOI 10.1016/S0743-1066(98)10035-3
   Pettorossi A, 2010, LECT NOTES COMPUT SC, V6125, P112, DOI 10.1007/978-3-642-14309-0_6
   PFENNING F, 1992, TYPES LOGIC PROGRAMM
   Shapiro EY., 1983, Algorithmic Program Debugging
   Smaus J.-G., 1998, Principles of Declarative Programming. 10th International Symposium, PLILP'98. Held Jointly with the 6th International Conference, ALP'98. Proceedings, P73, DOI 10.1007/BFb0056608
   Smaus JG, 1999, LECT NOTES COMPUT SC, V1559, P289, DOI 10.1007/3-540-48958-4_16
NR 30
TC 7
Z9 7
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2018
VL 18
IS 1
BP 1
EP 29
DI 10.1017/S1471068417000047
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA FU3QC
UT WOS:000423765600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alviano, M
AF Alviano, Mario
TI Model enumeration in propositional circumscription via unsatisfiable
   core analysis
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming colocated with the
   23rd International Conference on Principles and Practice of Constraint
   Programming / 20th International Conference on Theory and Applications
   of Satisfiability Testing
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google
DE Circumscription; minimal model enumeration; minimal correction subsets;
   minimal intervention strategies; unsatisfiable core analysis
ID OPTIMIZATION PROBLEMS; SET OPTIMIZATION; LOOP FORMULAS; ANSWER;
   SATISFIABILITY; SOLVERS; ASP
AB Many practical problems are characterized by a preference relation over admissible solutions, where preferred solutions are minimal in some sense. For example, a preferred diagnosis usually comprises a minimal set of reasons that is sufficient to cause the observed anomaly. Alternatively, a minimal correction subset comprises a minimal set of reasons whose deletion is sufficient to eliminate the observed anomaly. Circumscription formalizes such preference relations by associating propositional theories with minimal models. The resulting enumeration problem is addressed here by means of a new algorithm taking advantage of unsatisfiable core analysis. Empirical evidence of the efficiency of the algorithm is given by comparing the performance of the resulting solver, CIRCUMSCRIPTINO, with HCLASP, CAMUS_MCS, LBX and MCSLS on the enumeration of minimal models for problems originating from practical applications.
C1 [Alviano, Mario] Univ Calabria, Dept Math & Comp Sci, Arcavacata Di Rende, Italy.
C3 University of Calabria
RP Alviano, M (corresponding author), Univ Calabria, Dept Math & Comp Sci, Arcavacata Di Rende, Italy.
EM alviano@mat.unical.it
RI Alviano, Mario/H-1355-2012
FU Italian Ministry for Economic Development (MISE) [F/020016/01-02/X27,
   F/050389/01-03/X32]; Gruppo Nazionale per il Calcolo Scientifico
   (GNCS-INdAM)
FX This research has been partially supported by the Italian Ministry for
   Economic Development (MISE) under project "PIUCultura - Paradigmi
   Innovativi per l'Utilizzo della Cultura" (no. F/020016/01-02/X27), and
   under project "Smarter Solutions in the Big Data World (S2BDW)" (no.
   F/050389/01-03/X32) funded within the call "HORIZON2020" PON I&C
   2014-2020, and by Gruppo Nazionale per il Calcolo Scientifico
   (GNCS-INdAM).
CR Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   Alviano M., 2016, P 25 INT JOINT C ART, P886
   Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   Alviano M, 2016, FUND INFORM, V149, P1, DOI 10.3233/FI-2016-1441
   Alviano M, 2016, LECT NOTES COMPUT SC, V10037, P149, DOI 10.1007/978-3-319-49130-1_12
   Alviano M, 2016, THEOR PRACT LOG PROG, V16, P533, DOI 10.1017/S147106841600020X
   Alviano M, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2677
   Alviano M, 2015, THEOR PRACT LOG PROG, V15, P559, DOI 10.1017/S1471068415000228
   Alviano M, 2015, THEOR PRACT LOG PROG, V15, P574, DOI 10.1017/S147106841500023X
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P67, DOI 10.1007/978-3-642-40564-8_7
   Andres B., 2012, TECHNICAL COMMUNICAT, V17, P211
   Audemard G, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P399
   Bacchus F, 2014, LECT NOTES COMPUT SC, V8561, P7, DOI 10.1007/978-3-319-09284-3_2
   Brewka Gerhard, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P158, DOI 10.1007/978-3-319-23264-5_15
   Brewka G, 2015, AAAI CONF ARTIF INTE, P1467
   Dodaro C., 2011, CILC, P99
   Faber W, 2016, FRONT ARTIF INTEL AP, V285, P966, DOI 10.3233/978-1-61499-672-9-966
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P368, DOI 10.1007/978-3-319-23264-5_31
   Gebser M., 2013, P 27 AAAI C ART INT
   Gebser M., 2017, ABS170509811 CORR
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P136, DOI 10.1007/978-3-540-72200-7_13
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P250, DOI 10.1007/978-3-642-02846-5_23
   Giunchiglia E, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P61
   Giunchiglia E, 2006, J AUTOM REASONING, V36, P345, DOI 10.1007/s10817-006-9033-2
   Giunchiglia E, 2006, LECT NOTES ARTIF INT, V4160, P485, DOI 10.1007/11853886_43
   Janhunen Tomi, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P111, DOI 10.1007/978-3-642-20832-4_8
   Jannach Dietmar, 2016, Journal of Artificial Intelligence Research, V55, P835
   Järvisalo M, 2012, AI MAG, V33, P89
   Junker U, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P167
   Kaminski R, 2013, THEOR PRACT LOG PROG, V13, P675, DOI 10.1017/S1471068413000422
   Lee J, 2006, ARTIF INTELL, V170, P160, DOI 10.1016/j.artint.2005.09.003
   Lee J, 2003, LECT NOTES COMPUT SC, V2916, P451, DOI 10.1007/978-3-540-24599-5_31
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Liffiton MH, 2008, J AUTOM REASONING, V40, P1, DOI 10.1007/s10817-007-9084-z
   LIFSCHITZ V, 1986, ARTIF INTELL, V28, P17, DOI 10.1016/0004-3702(86)90028-7
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Marques-Silva J, 2014, LECT NOTES COMPUT SC, V8561, P58, DOI 10.1007/978-3-319-09284-3_6
   Marques- Silva Joao, 2013, P INT JOINT C ARTIFI, P615, DOI DOI 10.1007/978-3-319-10428-739
   MCCARTHY J, 1980, ARTIF INTELL, V13, P27, DOI 10.1016/0004-3702(80)90011-9
   Mencia C., 2015, P 24 INT JOINT C ART
   Mencía C, 2016, LECT NOTES COMPUT SC, V9710, P342, DOI 10.1007/978-3-319-40970-2_21
   Morgado A, 2013, CONSTRAINTS, V18, P478, DOI 10.1007/s10601-013-9146-2
   Narodytska N, 2014, AAAI CONF ARTIF INTE, P2717
   Pereira L. M., 1993, Automated and Algorithmic Debugging. First International Workshop, AADEBUG '93 Proceedings, P58, DOI 10.1007/BFb0019400
   Romero J, 2016, OASICS, V52, DOI 10.4230/OASIcs.ICLP.2016.3
NR 46
TC 11
Z9 11
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 708
EP 725
DI 10.1017/S1471068417000278
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Maher, MJ
AF Maher, Michael J.
TI Contractibility for open global constraints
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE global constraints; open constraints; soft constraints
ID CONJUNCTIVE QUERIES; SATISFACTION
AB Open forms of global constraints allow the addition of new variables to an argument during the execution of a constraint program. Such forms are needed for difficult constraint programming problems, where problem construction and problem solving are interleaved, and fit naturally within constraint logic programming. However, in general, filtering that is sound for a global constraint can be unsound when the constraint is open. This paper provides a simple characterization, called contractibility, of the constraints, where filtering remains sound when the constraint is open. With this characterization, we can easily determine whether a constraint has this property or not. In the latter case, we can use it to derive a contractible approximation to the constraint. We demonstrate this work on both hard and soft constraints. In the process, we formulate two general classes of soft constraints.
C1 [Maher, Michael J.] Reasoning Res Inst, Canberra, ACT, Australia.
RP Maher, MJ (corresponding author), Reasoning Res Inst, Canberra, ACT, Australia.
EM michael.maher@reasoning.org.au
CR Barták R, 2003, ANN OPER RES, V118, P101, DOI 10.1023/A:1021805623454
   Bartak R., 1999, NEW TRENDS CONSTRAIN
   Beldiceanu N, 2004, LECT NOTES COMPUT SC, V3011, P80
   Beldiceanu N., 2001, Logic Programming. 17th International Conference, ICLP 2001. Proceedings (Lecture Notes in Computer Science Vol.2237), P59
   BELDICEANU N, 1994, MATH COMPUT MODEL, V20, P97, DOI 10.1016/0895-7177(94)90127-9
   Beldiceanu N., 2005, Global Constraint Catalog
   BESSIERE C, 1991, PROCEEDINGS : NINTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P221
   Bessiere C, 2014, COMPUT J, V57, P906, DOI 10.1093/comjnl/bxt088
   Bessiere C, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P419
   Bessiere C, 2008, FRONT ARTIF INTEL AP, V178, P475, DOI 10.3233/978-1-58603-891-5-475
   Bistarelli S, 1997, J ACM, V44, P201, DOI 10.1145/256303.256306
   Borning A., 1992, LISP and Symbolic Computation, V5, P223, DOI 10.1007/BF01807506
   Borning A., 1989, P 6 INT C LOG PROGR, P149
   Brzozowski J, 2009, LECT NOTES COMPUT SC, V5457, P247, DOI 10.1007/978-3-642-00982-2_21
   Chandra A.K., 1977, P 9 ANN ACM S THEOR, P77, DOI [DOI 10.1145/800105.803397, 10.1145/800105.803397]
   Chatterjee K, 2010, ACM T COMPUT LOG, V11, DOI 10.1145/1805950.1805953
   Chaudhuri S., 1993, Optimization of real conjunctive queries, DOI 10.1145/153850.153856
   Colcombet T, 2009, LECT NOTES COMPUT SC, V5556, P139, DOI 10.1007/978-3-642-02930-1_12
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Debruyne R., 2003, FLAIRS 03 16 INT FLO, P172
   Dechter R., 1988, AAAI 88. Seventh National Conference on Artificial Intelligence, P37
   Dechter R., 2003, Constraint Processing
   Faltings B, 2005, ARTIF INTELL, V161, P181, DOI 10.1016/j.artint.2004.10.005
   Faltings B., 2002, Principles and Practice of Constraint Programming - CP 2002. 8th International Conference, CP 2002. Proceedings (Lecture Notes in Computer Science Vol.2470), P356
   Frisch A., 2002, Principles and Practice of Constraint Programming - CP 2002. 8th International Conference, CP 2002. Proceedings (Lecture Notes in Computer Science Vol.2470), P93
   Gavanelli M, 2005, ACM T PROGR LANG SYS, V27, P236, DOI 10.1145/1057387.1057389
   Georget Y., 1999, Constraints, V4, P5, DOI 10.1023/A:1009893626769
   Gervet C., 1997, Constraints, V1, P191, DOI 10.1007/BF00137870
   He J, 2013, J HEURISTICS, V19, P729, DOI 10.1007/s10732-013-9222-1
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   IOANNIDIS YE, 1995, ACM T DATABASE SYST, V20, P288, DOI 10.1145/211414.211419
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   KLUG A, 1988, J ACM, V35, P146, DOI 10.1145/42267.42273
   Lallouet A., 2011, IJCAI IJCAI AAAI, P597
   Law YC, 2004, LECT NOTES COMPUT SC, V3258, P362
   Maher M. J., 1989, P N AM C 1989 CLEV O, V2, P20
   Maher M.J., 1988, FDN DEDUCTIVE DATABA, P627
   Maher M, 2008, LECT NOTES COMPUT SC, V5202, P159, DOI 10.1007/978-3-540-85958-1_11
   Maher MJ, 2010, LEIBNIZ INT PR INFOR, V7, P114, DOI 10.4230/LIPIcs.ICLP.2010.114
   Maher MJ, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P578
   Maher MJ, 2009, LECT NOTES COMPUT SC, V5732, P584, DOI 10.1007/978-3-642-04244-7_46
   Maher MJ, 2009, THEOR COMPUT SCI, V410, P4769, DOI 10.1016/j.tcs.2009.07.042
   Maher MJ, 2009, LECT NOTES COMPUT SC, V5547, P163, DOI 10.1007/978-3-642-01929-6_13
   MAHER MJ, 1993, LOGIC PROGRAMM, P737
   MAHER MJ, 2002, P WORKSH RUL BAS CON
   Métivier JP, 2007, PROC INT C TOOLS ART, P223, DOI 10.1109/ICTAI.2007.82
   METIVIER JP, 2009, P 2009 ACM S APPL CO, P1392
   MITTAL S, 1990, PROCEEDINGS : EIGHTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P25
   Nethercote N, 2007, LECT NOTES COMPUT SC, V4741, P529
   Pachet F, 1999, LECT NOTES COMPUT SC, V1713, P331
   Pesant G, 2004, LECT NOTES COMPUT SC, V3258, P482
   Petit T., 2001, Principles and Practice of Constraint Programming - CP 2002. 7th International Conference, CP 2001. Proceedings (Lecture Notes in Computer Science Vol.2239), P451
   Petit T., 2009, ABS09070939 CORR
   Quimper CG, 2006, LECT NOTES COMPUT SC, V4204, P751
   REGIN JC, 1994, PROCEEDINGS OF THE TWELFTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P362
   Régin JC, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P209
   Schiex T, 1995, INT JOINT CONF ARTIF, P631
   Schulte C, 2009, LECT NOTES COMPUT SC, V5732, P723, DOI 10.1007/978-3-642-04244-7_56
   Sellmann M, 2006, LECT NOTES COMPUT SC, V4204, P530
   Van Beek P., 2006, Foundations of artificial intelligence: vol. 2, Handbook of constraint programming, V2
   van Hentenryck P., 1991, New Generation Computing, V9, P257, DOI 10.1007/BF03037165
   van Hoeve WJ, 2006, LECT NOTES COMPUT SC, V3990, P244
   Van Hoeve WJ, 2006, J HEURISTICS, V12, P347, DOI 10.1007/s10732-006-6550-4
   Verfaillie G, 2005, CONSTRAINTS, V10, P253, DOI 10.1007/s10601-005-2239-9
NR 64
TC 0
Z9 0
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2017
VL 17
IS 4
BP 365
EP 407
DI 10.1017/S1471068417000126
PG 43
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA FC7RG
UT WOS:000407039000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fandinno, J
AF Fandinno, Jorge
TI Deriving conclusions from non-monotonic cause-effect relations
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
ID JUSTIFICATIONS
AB We present an extension of Logic Programming (under stable models semantics) that, not only allows concluding whether a true atom is a cause of another atom, but also deriving new conclusions from these causal-effect relations. This is expressive enough to capture informal rules like "if some agent's actions A have been necessary to cause an event E then conclude atom caused(A, E)," something that, to the best of our knowledge, had not been formalised in the literature. To this aim, we start from a first attempt that proposed extending the syntax of logic programs with so-called causal literals. These causal literals are expressions that can be used in rule bodies and allow inspecting the derivation of some atom A in the program with respect to some query function psi. Depending on how these query functions are defined, we can model different types of causal relations such as sufficient, necessary or contributory causes, for instance. The initial approach was specifically focused on monotonic query functions. This was enough to cover sufficient cause-effect relations but, unfortunately, necessary and contributory are essentially non-monotonic. In this work, we define a semantics for non-monotonic causal literals showing that, not only extends the stable model semantics for normal logic programs, but also preserves many of its usual desirable properties for the extended syntax. Using this new semantics, we provide precise definitions of necessary and contributory causal relations and briefly explain their behaviour on a pair of typical examples from the Knowledge Representation literature.
C1 [Fandinno, Jorge] Univ A Coruna, Dept Comp Sci, Corunna, Spain.
C3 Universidade da Coruna
RP Fandinno, J (corresponding author), Univ A Coruna, Dept Comp Sci, Corunna, Spain.
EM jorge.fandino@udc.es
RI Fandinno, Jorge/JJC-6227-2023; Fandiño, Jorge/F-8705-2016
OI Fandiño, Jorge/0000-0002-3917-8717
CR Bochman A, 2015, AAAI CONF ARTIF INTE, P1446
   Cabalar P, 2014, THEOR PRACT LOG PROG, V14, P603, DOI 10.1017/S1471068414000234
   Cabalar P, 2014, LECT NOTES ARTIF INT, V8761, P297, DOI 10.1007/978-3-319-11558-0_21
   Caban P, 2016, THEME OF INCENSE AND FRAGRANCES IN THE BIBLE AND IN THE LITURGY: SCIENTIFIC-LITURGICAL ASPECT, P1
   Damásio CV, 2013, LECT NOTES COMPUT SC, V8148, P530, DOI 10.1007/978-3-642-40564-8_53
   Denecker Marc, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P250, DOI 10.1007/978-3-319-23264-5_22
   Fandinno J., 2015, THESIS
   Fandinno J., 2015, P 8 INT WORKSH ANSW
   Fandinno J., 2016, CORR
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Giunchiglia E, 2004, ARTIF INTELL, V153, P49, DOI [10.1016/j.artint.2002.12.001, 10.1016/j.artint.2003.12.001]
   Hall N, 2007, PHILOS STUD, V132, P109, DOI 10.1007/s11098-006-9057-9
   Halpern JY, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P3022
   Halpern JosephY., 2008, P 11 C PRINCIPLES KN, P198
   Halpern JY, 2005, BRIT J PHILOS SCI, V56, P843, DOI 10.1093/bjps/axi147
   Hitchcock C, 2009, J PHILOS, V106, P587, DOI 10.5840/jphil20091061128
   Hopkins M., 2003, Proceedings of the AAAI Spring Symposium on Logical Formalization of Commonsense Rea-soning, P83
   Lewis David, 1974, The Journal of Philosophy, V70, P556, DOI DOI 10.2307/2025310
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Maudlin T, 2004, CAUSATION COUNTERFAC
   McCarthy J., 1998, P 4 S LOG FORM COMM, P198
   McCarthy J, 1987, READINGS ARTIFICIAL, V459
   McCarthy J., 1969, Machine Intelligence, VVol. 4, P463
   Pearce D, 2006, ANN MATH ARTIF INTEL, V47, P3, DOI 10.1007/s10472-006-9028-z
   Pearl Judea, 2000, MODELS REASONING INF, V19, DOI DOI 10.1017/CBO9780511803161
   Pemmasani G, 2004, LECT NOTES COMPUT SC, V2998, P24
   Pontelli E, 2009, THEOR PRACT LOG PROG, V9, P1, DOI 10.1017/S1471068408003633
   Schulz C, 2016, THEOR PRACT LOG PROG, V16, P59, DOI 10.1017/S1471068414000702
   Specht G., 1993, P 5 WORKSH LOG PROGR, P8
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   Vennekens J, 2011, THEOR PRACT LOG PROG, V11, P647, DOI 10.1017/S1471068411000226
NR 31
TC 6
Z9 7
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 670
EP 687
DI 10.1017/S1471068416000466
PN 5-6
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Arts &amp; Humanities Citation Index (A&amp;HCI); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Calautti, M
   Greco, S
   Molinaro, C
   Trubitsyna, I
AF Calautti, Marco
   Greco, Sergio
   Molinaro, Cristian
   Trubitsyna, Irina
TI Using linear constraints for logic program termination analysis
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 8th International Web Rule Symposium (RuleML) in conjunction with 21st
   European Conference on Artificial Intelligence (ECAI)
CY AUG 18-22, 2014
CL Prague, CZECH REPUBLIC
DE Answer set programming; Function symbols; Bottom-up evaluation; Program
   evaluation termination; Stable models
ID BOTTOM-UP EVALUATION; CHECKING TERMINATION; DATALOG; ASP
AB It is widely acknowledged that function symbols are an important feature in answer set programming, as they make modelling easier, increase the expressive power, and allow us to deal with infinite domains. The main issue with their introduction is that the evaluation of a program might not terminate and checking whether it terminates or not is undecidable. To cope with this problem, several classes of logic programs have been proposed where the use of function symbols is restricted but the program evaluation termination is guaranteed. Despite the significant body of work in this area, current approaches do not include many simple practical programs whose evaluation terminates. In this paper, we present the novel classes of rule-bounded and cycle-bounded programs, which overcome different limitations of current approaches by performing a more global analysis of how terms are propagated from the body to the head of rules. Results on the correctness, the complexity, and the expressivity of the proposed approach are provided.
C1 [Calautti, Marco; Greco, Sergio; Molinaro, Cristian; Trubitsyna, Irina] Univ Calabria, DIMES, I-87036 Arcavacata Di Rende, CS, Italy.
C3 University of Calabria
RP Calautti, M (corresponding author), Univ Calabria, DIMES, I-87036 Arcavacata Di Rende, CS, Italy.
EM calautti@dimes.unical.it; greco@dimes.unical.it;
   cmolinaro@dimes.unical.it; trubitsyna@dimes.unical.it
RI Calautti, Marco/ABD-4482-2020; Molinaro, Cristian/AAI-5465-2021;
   Trubitsyna, Irina/AAY-7265-2020
OI CALAUTTI, MARCO/0000-0003-0921-4040; Greco, Sergio/0000-0003-2966-3484;
   TRUBITSYNA, Irina/0000-0002-9031-0672
CR Alviano M, 2010, THEOR PRACT LOG PROG, V10, P497, DOI 10.1017/S1471068410000244
   Arts T, 2000, THEOR COMPUT SCI, V236, P133, DOI 10.1016/S0304-3975(99)00207-8
   Baselice S, 2009, THEOR PRACT LOG PROG, V9, P213, DOI 10.1017/S147106840900372X
   Bonatti PA, 2004, ARTIF INTELL, V156, P75, DOI [10.1016/j.artint.2004.02.001, 10.1016/j.artint.2004.02.002]
   Bruynooghe M, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1216374.1216378
   Calautti Marco, 2014, Rules on the Web. From Theory to Applications. 8th International Symposium, RuleML 2014 Co-located with the 21st European Conference on Artificial Intelligence, ECAI 2014. Proceedings. LNCS: 8620, P97, DOI 10.1007/978-3-319-09870-8_7
   Calautti M., 2013, PPDP, P239
   Calautti M, 2015, THEOR PRACT LOG PROG, V15, P854, DOI 10.1017/S1471068414000623
   Calì A, 2010, IEEE S LOG, P228, DOI 10.1109/LICS.2010.27
   Calimeri F, 2008, LECT NOTES COMPUT SC, V5366, P407, DOI 10.1007/978-3-540-89982-2_37
   Ceri S., 1990, Logic Programming and Databases, DOI [10.1007/978-3-642-83952-8, DOI 10.1007/978-3-642-83952-8_6]
   CHAUDHRI V. K., 2013, THEOR PRACT LOG PROG, V13, P4
   Codish M, 2005, LECT NOTES COMPUT SC, V3668, P326, DOI 10.1007/11562931_25
   De Schreye D, 1994, J LOGIC PROGRAM, V20, P199, DOI 10.1016/0743-1066(94)90027-2
   EITER T., 2013, P 27 AAAI C ART INT, P267
   Endrullis J, 2008, J AUTOM REASONING, V40, P195, DOI 10.1007/s10817-007-9087-9
   Ferreira MCF, 1996, APPL ALGEBR ENG COMM, V7, P133, DOI 10.1007/s002000050024
   Gebser M., 2012, Answer Set Solving in Practice
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Greco S., 1992, Proceedings of the Eleventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P105, DOI 10.1145/137097.137836
   Greco S, 1999, IEEE T KNOWL DATA EN, V11, P265, DOI 10.1109/69.761663
   Greco S., 2012, Synthesis Lectures on Data Management
   Greco S., 2012, P INT C LOG PROGR TE, P323
   Greco S., 2013, P 23 INT JOINT C ART, P926
   Greco S, 2013, THEOR PRACT LOG PROG, V13, P737, DOI 10.1017/S147106841300046X
   Greco S, 2011, PROC VLDB ENDOW, V4, P1158
   Greco S, 2010, PROC VLDB ENDOW, V3, P93, DOI 10.14778/1920841.1920858
   Greco S, 2010, THEOR PRACT LOG PROG, V10, P125, DOI 10.1017/S1471068409990251
   Leuschela M, 2014, INFORM COMPUT, V235, P70, DOI 10.1016/j.ic.2014.01.005
   Lierler Y, 2009, LECT NOTES COMPUT SC, V5649, P489, DOI 10.1007/978-3-642-02846-5_40
   Marchiori M., 1996, Algebraic Methodology and Software Technology. 5th International Conference, AMAST '96. Proceedings, P375, DOI 10.1007/BFb0014328
   Marnette B, 2009, PODS'09: PROCEEDINGS OF THE TWENTY-EIGHTH ACM SIGMOD-SIGACT-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P13, DOI 10.1145/1559795.1559799
   Meier M., 2010, TERMINATION CHASE AL
   Nguyen MT, 2008, LECT NOTES COMPUT SC, V4915, P8, DOI 10.1007/978-3-540-78769-3_2
   Nishida N, 2010, APPL ALGEBR ENG COMM, V21, P177, DOI 10.1007/s00200-010-0122-4
   Ohlebusch E, 2001, APPL ALGEBR ENG COMM, V12, P73, DOI 10.1007/s002000100064
   Onet, 2013, DATA EXCHANGE INTEGR, P1, DOI [DOI 10.4230/DFU.VOL5.10452.1, 10.4230/DFU.Vol5.10452, DOI 10.4230/DFU.VOL5.10452, 10.4230/DFU.Vol5.10452.1]
   PALOPOLI L, 1992, THEOR COMPUT SCI, V103, P205, DOI 10.1016/0304-3975(92)90013-6
   PAPADIMITRIOU CH, 1981, J ACM, V28, P765, DOI 10.1145/322276.322287
   Riguzzi F, 2014, ACM T COMPUT LOG, V15, DOI 10.1145/2629337
   Riguzzi F, 2013, THEOR PRACT LOG PROG, V13, P279, DOI 10.1017/S1471068411000664
   Schneider-Kamp P, 2010, THEOR PRACT LOG PROG, V10, P365, DOI 10.1017/S1471068410000165
   Schneider-Kamp P, 2009, ACM T COMPUT LOG, V11, DOI 10.1145/1614431.1614433
   Serebrenik A, 2005, THEOR PRACT LOG PROG, V5, P355, DOI 10.1017/S1471068404002248
   Sohn K., 1991, Proceedings of the Tenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P216, DOI 10.1145/113413.113433
   Sternagel C, 2008, LECT NOTES COMPUT SC, V5117, P336, DOI 10.1007/978-3-540-70590-1_23
   Syrjanen T., 2001, LOGIC PROGRAMMING NO, P267, DOI DOI 10.1007/3-540-45402-0_20
   Verbaeten S., 2001, ACM T COMPUT LOG, V2, P57
   VIDAL G, 2007, P ACM SIGPLAN 2007 W, P51
   Voets D, 2011, THEOR PRACT LOG PROG, V11, P521, DOI 10.1017/S1471068411000159
   Zantema H., 1995, Fundamenta Informaticae, V24, P89
   Zilli M. V., 1975, Calcolo, V12, P361, DOI 10.1007/BF02575754
NR 54
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2016
VL 16
SI SI
BP 353
EP 377
DI 10.1017/S1471068416000077
PN 3
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4MP
UT WOS:000386587100006
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Cabalar, P
   Fandinno, J
   Fink, M
AF Cabalar, Pedro
   Fandinno, Jorge
   Fink, Michael
TI Causal Graph Justifications of Logic Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
DE Answer Set Programming; Causality; Knowledge Representation;
   Multi-valued Logic Programming
AB In this work we propose a multi-valued extension of logic programs under the stable models semantics where each true atom in a model is associated with a set of justifications. These justifications are expressed in terms of causal graphs formed by rule labels and edges that represent their application ordering. For positive programs, we show that the causal justifications obtained for a given atom have a direct correspondence to (relevant) syntactic proofs of that atom using the program rules involved in the graphs. The most interesting contribution is that this causal information is obtained in a purely semantic way, by algebraic operations (product, sum and application) on a lattice of causal values whose ordering relation expresses when a justification is stronger than another. Finally, for programs with negation, we define the concept of causal stable model by introducing an analogous transformation to Gelfond and Lifschitz's program reduct. As a result, default negation behaves as "absence of proof" and no justification is derived from negative literals, something that turns out convenient for elaboration tolerance, as we explain with a running example.
C1 [Cabalar, Pedro; Fandinno, Jorge] Univ A Coruna, Dept Comp Sci, Coruna, Spain.
   [Fink, Michael] Vienna Univ Technol, Inst Informat Syst, A-1040 Vienna, Austria.
C3 Universidade da Coruna; Technische Universitat Wien
RP Cabalar, P (corresponding author), Univ A Coruna, Dept Comp Sci, Coruna, Spain.
EM cabalar@udc.es; jorge.fandino@udc.es; fink@kr.tuwien.ac.at
RI Fandiño, Jorge/F-8705-2016; Fandinno, Jorge/JJC-6227-2023; Cabalar,
   Pedro/AAE-5198-2020; Fandiño, Jorge/IVV-0515-2023
OI Fandiño, Jorge/0000-0002-3917-8717; 
CR [Anonymous], 1997, Proceedings of the 14th National Conference on Artificial Intelligence (AAAI), DOI DOI 10.1093/ACPROF:OSO/9780198235880.003.0005
   Artemov SN, 2001, B SYMB LOG, V7, P1, DOI 10.2307/2687821
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Broda K., 2004, COMPILED LABELLED DE
   Cabalar P., 2011, AAAI SPRING S LOG FO
   Cabalar P., 2013, P 6 WORKSH ANSW SET
   Damásio CV, 2013, LECT NOTES COMPUT SC, V8148, P530, DOI 10.1007/978-3-642-40564-8_53
   Denecker M, 1993, LPNMR, P365
   Fages F., 1991, New Generation Computing, V9, P425, DOI 10.1007/BF03037172
   Gebser M, 2008, P 23 NAT C ART INT, V1
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Hall N., 2004, 2 CONCEPTS CASUALITY, P181
   Halpern JosephY., 2008, P 11 C PRINCIPLES KN, P198
   Halpern JY, 2005, BRIT J PHILOS SCI, V56, P843, DOI 10.1093/bjps/axi147
   Hitchcock C, 2009, J PHILOS, V106, P587, DOI 10.5840/jphil20091061128
   Hume D., 1958, ENQUIRY HUMAN UNDERS
   KIFER M, 1992, J LOGIC PROGRAM, V12, P335, DOI 10.1016/0743-1066(92)90007-P
   Liang SL, 2013, THEOR PRACT LOG PROG, V13, P705, DOI 10.1017/S1471068413000446
   Lin F., 1995, P INT JOINT C ART IN
   McCarthy J., 1998, P 4 S LOG FORM COMM, P198
   McCarthy J, 1981, P 5 INT JOINT C ART, P459, DOI DOI 10.1016/B978-0-934613-03-3.50035-0
   Pearce D, 2006, ANN MATH ARTIF INTEL, V47, P3, DOI 10.1007/s10472-006-9028-z
   Pearl Judea, 2000, MODELS REASONING INF, V19, DOI DOI 10.1017/CBO9780511803161
   Pereira Luis Moniz., 1991, IJCAI, V91, P863
   Pontelli E, 2009, THEOR PRACT LOG PROG, V9, P1, DOI 10.1017/S1471068408003633
   Schulz C., 2013, P 11 INT S LOG FORM
   Stumme G, 1998, ORDER, V14, P179
   Thielscher M, 1997, ARTIF INTELL, V89, P317, DOI 10.1016/S0004-3702(96)00033-1
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   Vennekens J, 2011, THEOR PRACT LOG PROG, V11, P647, DOI 10.1017/S1471068411000226
NR 30
TC 18
Z9 19
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 603
EP 618
DI 10.1017/S1471068414000234
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200014
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Drabent, W
AF Drabent, Wlodzimierz
TI A simple correctness proof for magic transformation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE program correctness; logic programming; magic transformation;
   declarative semantics; LD-resolution; operational semantics
ID LOGIC PROGRAMS
AB The paper presents a simple and concise proof of correctness of the magic transformation. We believe that it may provide a useful example of formal reasoning about logic programs. The correctness property concerns the declarative semantics. The proof, however, refers to the operational semantics (LD-resolution) of the source programs. Its conciseness is due to applying a suitable proof method.
C1 [Drabent, Wlodzimierz] Polish Acad Sci, Inst Comp Sci, PL-01237 Warsaw, Poland.
   [Drabent, Wlodzimierz] Linkopings Univ, Dept Comp & Informat Sci, S-58183 Linkoping, Sweden.
C3 Polish Academy of Sciences; Institute of Computer Science of the Polish
   Academy of Sciences; Linkoping University
RP Drabent, W (corresponding author), Polish Acad Sci, Inst Comp Sci, Ul Ordona 21, PL-01237 Warsaw, Poland.
EM drabent@ipipan.waw.pl
RI Drabent, Włodzimierz/JGM-7411-2023
OI Drabent, Włodzimierz/0000-0002-4700-7272
CR Apt K. R., 1994, Formal Aspects of Computing, V6, P743, DOI 10.1007/BF01213601
   Apt K.R., 1997, INT SERIES COMPUTER
   BEERI C, 1991, J LOGIC PROGRAM, V10, P255, DOI 10.1016/0743-1066(91)90038-Q
   BOSSI A, 1994, J LOGIC PROGRAM, V20, P149, DOI 10.1016/0743-1066(94)90026-4
   Bossi A., 1989, LECT NOTES COMPUT SC, V352, P96
   Clark K., 1979, PREDICATE LOGIC COMP
   COLUSSI L, 1991, LOGIC PROGRAMM, P629
   DERANSART P, 1993, THEOR COMPUT SCI, V118, P99, DOI 10.1016/0304-3975(93)90107-5
   Drabent W, 2005, THEOR PRACT LOG PROG, V5, P669, DOI 10.1017/S147106840500253X
   DRABENT W, 1988, THEOR COMPUT SCI, V59, P133, DOI 10.1016/0304-3975(88)90099-0
   DRABENT W., 1997, FLOYD HOARE METHOD P, P2
   Mascellani P, 2002, LECT NOTES ARTIF INT, V2408, P83
   NILSSON U, 1995, THEOR COMPUT SCI, V142, P125, DOI 10.1016/0304-3975(94)00223-6
   Nilsson Ulf, 1995, Logic, Programming and Prolog
   RAMAKRISHNAN R, 1991, J LOGIC PROGRAM, V11, P189, DOI 10.1016/0743-1066(91)90026-L
NR 15
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2012
VL 12
BP 929
EP 936
DI 10.1017/S1471068411000032
PN 6
PG 8
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 034EW
UT WOS:000310854200004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Babb, J
   Lee, J
AF Babb, Joseph
   Lee, Joohyung
TI Module theorem for the general theory of stable models
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; module theorem; splitting theorem
AB The module theorem by Janhunen et al. demonstrates how to provide a modular structure in answer set programming, where each module has a well-defined input/output interface which can be used to establish the compositionality of answer sets. The theorem is useful in the analysis of answer set programs, and is a basis of incremental grounding and reactive answer set programming. We extend the module theorem to the general theory of stable models by Ferraris et al. The generalization applies to non-ground logic programs allowing useful constructs in answer set programming, such as choice rules, the count aggregate, and nested expressions. Our extension is based on relating the module theorem to the symmetric splitting theorem by Ferraris et al. Based on this result, we reformulate and extend the theory of incremental answer set computation to a more general class of programs.
C1 [Babb, Joseph; Lee, Joohyung] Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ 85287 USA.
C3 Arizona State University; Arizona State University-Tempe
RP Babb, J (corresponding author), Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ 85287 USA.
EM Joseph.Babb@asu.edu; joolee@asu.edu
FU National Science Foundation [IIS-0916116]; Div Of Information &
   Intelligent Systems; Direct For Computer & Info Scie & Enginr [0916116]
   Funding Source: National Science Foundation
FX We are grateful to Martin Gebser and Tomi Janhunen for useful
   discussions related to this paper. We are also grateful to the anonymous
   referees for their useful comments. This work was partially supported by
   the National Science Foundation under Grant IIS-0916116.
CR Ferraris P, 2011, ARTIF INTELL, V175, P236, DOI 10.1016/j.artint.2010.04.011
   Ferraris P, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P797
   Ferraris P, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P372
   Gebser M, 2008, LECT NOTES COMPUT SC, V5366, P190, DOI 10.1007/978-3-540-89982-2_23
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P54
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Janhunen T, 2009, J ARTIF INTELL RES, V35, P813, DOI 10.1613/jair.2810
   Lee J., 2008, P 23 NAT C ART INT A, P472
   Lee J, 2012, J ARTIF INTELL RES, V43, P571, DOI 10.1613/jair.3489
   Lifschitz V., 1994, HDB LOGIC AI LOGIC P, V3, P298
   Meng Y, 2012, P INT WORKSH NONM RE
   Oikarinen E, 2008, THEOR PRACT LOG PROG, V8, P717, DOI 10.1017/S147106840800358X
NR 12
TC 5
Z9 6
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2012
VL 12
BP 719
EP 735
DI 10.1017/S1471068412000269
PN 4-5
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 000CV
UT WOS:000308365000017
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Haemmerlé, R
AF Haemmerle, Remy
TI Diagrammatic confluence for Constraint Handling Rules
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE CHR; confluence; decreasing diagrams; modularity of confluence
ID SEMANTICS
AB Confluence is a fundamental property of Constraint Handling Rules (CHR) since, as in other rewriting formalisms, it guarantees that the computations are not dependent on rule application order, and also because it implies the logical consistency of the program declarative view. In this paper we are concerned with proving the confluence of non-terminating CHR programs. For this purpose, we derive from van Oostrom's decreasing diagrams method a novel criterion on CHR critical pairs that generalizes all preexisting criteria. We subsequently improve on a result on the modularity of CHR confluence, which permits modular combinations of possibly non-terminating confluent programs, without loss of confluence.
C1 Tech Univ Madrid, Madrid, Spain.
C3 Universidad Politecnica de Madrid
RP Haemmerlé, R (corresponding author), Tech Univ Madrid, Madrid, Spain.
FU Programme for Attracting Talent (PICD) / young PHD of the MONTEGANCEDO
   Campus of International Excellence; Madrid Regional Government under the
   CM project [P2009/TIC/1465 (PROMETIDOS)]; Spanish Ministry of Science
   under the MEC [TIN-2008-05624 DOVES]
FX The research leading to these results has received funding from the
   Programme for Attracting Talent (PICD) / young PHD of the MONTEGANCEDO
   Campus of International Excellence, the Madrid Regional Government under
   the CM project P2009/TIC/1465 (PROMETIDOS), and the Spanish Ministry of
   Science under the MEC project TIN-2008-05624 DOVES.
CR Abdennadher S., 1996, Principles and Practice of Constraint Programming - CP96. Second International Conference - CP96. Proceedings, P1
   Abdennadher S, 1997, LECT NOTES COMPUT SC, V1330, P252, DOI 10.1007/BFb0017444
   Abdennadher S., 1999, Constraints, V4, P133, DOI 10.1023/A:1009842826135
   Abdennadher S, 1999, LECT NOTES COMPUT SC, V1713, P43
   [Anonymous], 1999, Communicating and Mobile Systems: The Calculus
   Duck G. J., 2005, LNCS, V3668, P90
   Duck GJ, 2007, LECT NOTES COMPUT SC, V4670, P224, DOI 10.1007/978-3-540-74610-2_16
   Frühwirth T, 2005, LECT NOTES COMPUT SC, V3668, P113, DOI 10.1007/11562931_11
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Fruhwirth T.W., 2009, Constraint Handling Rules
   Guy R.K., 2004, Problem Books in Mathematics, V3rd
   Haemmerlé R, 2007, LECT NOTES COMPUT SC, V4533, P214
   Haemmerlé R, 2011, PPDP 11 - PROCEEDINGS OF THE 2011 SYMPOSIUM ON PRINCIPLES AND PRACTICES OF DECLARATIVE PROGRAMMING, P137
   Haemmerlé R, 2011, THEOR PRACT LOG PROG, V11, P469, DOI [10.1017/S1471068411000123, 10.1017/S147106841100012.1]
   Haemmerlé R, 2011, THEOR PRACT LOG PROG, V11, P593, DOI 10.1017/S1471068411000196
   Hirokawa N, 2010, LECT NOTES ARTIF INT, V6173, P487, DOI 10.1007/978-3-642-14203-1_41
   HUET G, 1980, J ACM, V27, P797, DOI 10.1145/322217.322230
   Jouannaud JP, 2009, LECT NOTES COMPUT SC, V5556, P212, DOI 10.1007/978-3-642-02930-1_18
   Meister M., 2006, WORKSH LOG PROGR WLP, P172
   Newman MHA, 1942, ANN MATH, V43, P223, DOI 10.2307/1968867
   Raiser F, 2007, CHR 2007, P63
   Raiser F., 2009, CHR 2009, P34
   Sneyers J, 2009, ACM T PROGR LANG SYS, V31, DOI 10.1145/1462166.1462169
   Terese, 2003, Term Rewriting Systems
   van Oostrom V, 2008, LECT NOTES COMPUT SC, V5117, P306, DOI 10.1007/978-3-540-70590-1_21
   VANOOSTROM V, 1994, THEOR COMPUT SCI, V126, P259, DOI 10.1016/0304-3975(92)00023-K
NR 26
TC 5
Z9 5
U1 0
U2 7
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2012
VL 12
BP 737
EP 753
DI 10.1017/S1471068412000270
PN 4-5
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 000CV
UT WOS:000308365000018
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Corapi, D
   Russo, A
   De Vos, M
   Padget, J
AF Corapi, Domenico
   Russo, Alessandra
   De Vos, Marina
   Padget, Julian
TI Normative design using inductive learning
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Logic Programming
CT 27th International Conference on Logic Programming
CY 2010
CY JUL 06-10, 2011
CL Lexington, KY
CL Lexington, KY
DE normative frameworks; inductive logic programming; theory revision
AB In this paper we propose a use-case-driven iterative design methodology for normative frameworks, also called virtual institutions, which are used to govern open systems. Our computational model represents the normative framework as a logic program under answer set semantics (ASP). By means of an inductive logic programming approach, implemented using ASP, it is possible to synthesise new rules and revise the existing ones. The learning mechanism is guided by the designer who describes the desired properties of the framework through use cases, comprising (i) event traces that capture possible scenarios, and (ii) a state that describes the desired outcome. The learning process then proposes additional rules, or changes to current rules, to satisfy the constraints expressed in the use cases. Thus, the contribution of this paper is a process for the elaboration and revision of a normative framework by means of a semi-automatic and iterative process driven from specifications of (un)desirable behaviour. The process integrates a novel and general methodology for theory revision based on ASP.
C1 [Corapi, Domenico; Russo, Alessandra] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London SW7 2AZ, England.
   [De Vos, Marina; Padget, Julian] Univ Bath, Dept Comp, Bath BA2 7AY, Avon, England.
C3 Imperial College London; University of Bath
RP Corapi, D (corresponding author), Univ London Imperial Coll Sci Technol & Med, Dept Comp, 180 Queens Gate, London SW7 2AZ, England.
EM d.corapi@ic.ac.uk; a.russo@ic.ac.uk; mdv@cs.bath.ac.uk;
   jap@cs.bath.ac.uk
RI Padget, Julian/JOJ-9944-2023; De Vos, Marina/K-8191-2015
OI Padget, Julian/0000-0003-1314-2094; De Vos, Marina/0000-0003-3583-7671;
   Russo, Alessandra/0000-0002-3318-8711
FU EPSRC [EP/F023294/1] Funding Source: UKRI
CR Alrajeh D, 2007, LECT NOTES ARTIF INT, V4455, P64
   Artikis A., 2009, P 12 INT C ART INT L, P97
   BOELLA G, 2009, DAGST SEM P SCHL DAG
   BOELLA G, 2009, AAMAS, V1, P169
   Cardoso HL, 2008, FRONT ARTIF INTEL AP, V178, P468, DOI 10.3233/978-1-58603-891-5-468
   CHRISTELIS G, 2009, AAMAS 2009 BUD HUNG, V1, P161
   CLIFFE O, 2007, THESIS U BATH N E SO
   Cliffe O, 2007, LECT NOTES ARTIF INT, V4371, P60
   CORAPI D, 2011, DTR115 IMP COLL DEP
   Corapi D, 2010, LEIBNIZ INT PR INFOR, V7, P54, DOI 10.4230/LIPIcs.ICLP.2010.54
   Corapi D, 2009, INT FED INFO PROC, P459
   Esteva M., 2002, Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems, P1045
   Fornara N, 2008, ARTIF INTELL LAW, V16, P89, DOI 10.1007/s10506-007-9055-z
   García-Camino A, 2009, AUTON AGENT MULTI-AG, V18, P186, DOI 10.1007/s10458-008-9059-4
   Garcia-Ojeda JC, 2008, LECT NOTES COMPUT SC, V4951, P1
   GARION C, 2009, DAGST SEM P SCHL DAG
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P260, DOI 10.1007/978-3-540-72200-7_23
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1998, ELECT T ARTIFICIAL I, V2, P193
   Hubner Jomi F., 2007, International Journal of Agent-Oriented Software Engineering, V1, P370, DOI 10.1504/IJAOSE.2007.016266
   Kakas A. C., 1992, Journal of Logic and Computation, V2, P719, DOI 10.1093/logcom/2.6.719
   KOLLINGBAUM M, 2006, P COIN 2006, P245
   KOWALSKI R, 1986, NEW GENERAT COMPUT, V4, P67, DOI 10.1007/BF03037383
   MUGGLETON S, 1995, NEW GENERAT COMPUT, V13, P245, DOI 10.1007/BF03037227
   Okouya D., 2008, AAMAS 2008, P1677
   SAKAMA C, 2001, NOTES ARTIFICIAL INT, V2173, P62
   SAKAMA C, 2001, P AAAI SPRING S ANSW, P181
   Sattar A., 1991, Computational Intelligence, V7, P11, DOI 10.1111/j.1467-8640.1991.tb00331.x
   SAVARIMUTHU BTR, 2009, DAGST SEM P SCHL DAG
   SERRANO JM, 2009, LNCS, V6069, P304
   SIERRA C, 2009, AAMAS 2009 BUD HUNG, V1
   Vasconcelos W. W., 2007, P 6 INT JOINT C AUT, P91
   WOGULIS J, 1993, IJCAI-93, VOLS 1 AND 2, P1128
   YAMAMOTO Y, 2010, 20 INT C IND LOG PRO
   [No title captured]
NR 35
TC 15
Z9 17
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 783
EP 799
DI 10.1017/S1471068411000305
PN 4-5
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100022
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Vennekens, J
AF Vennekens, Joost
TI Actual causation in CP-logic
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Logic Programming
CT 27th International Conference on Logic Programming
CY 2010
CY JUL 06-10, 2011
CL Lexington, KY
CL Lexington, KY
ID INFERENCE; EQUATIONS; PROGRAMS
AB Given a causal model of some domain and a particular story that has taken place in this domain, the problem of actual causation is deciding which of the possible causes for some effect actually caused it. One of the most influential approaches to this problem has been developed by Halpern and Pearl (Halpern, J. and Pearl, J. 2005. Causes and explanations: A structural-model approach. Part I: Causes. British Journal for the Philosophy of Science 56 (4), 843-887) in the context of structural models. In this paper, I argue that this is actually not the best setting for studying this problem. As an alternative, I offer the probabilistic logic programming language of CP-logic. Unlike structural models, CP-logic incorporates the deviant/default distinction that is generally considered an important aspect of actual causation, and it has an explicitly dynamic semantics, which helps to formalize the stories that serve as input to an actual causation problem.
C1 Lessius Mechelen, Mechelen, Belgium.
RP Vennekens, J (corresponding author), Lessius Mechelen, Campus De Nayer, Mechelen, Belgium.
EM joost.vennekens@cs.kuleuven.be
RI Vennekens, Joost/ABE-6600-2020; Vennekens, Joost/A-3571-2015
OI Vennekens, Joost/0000-0002-0791-0176; Vennekens,
   Joost/0000-0002-0791-0176
CR [Anonymous], 1996, The art of causal conjecture
   [Anonymous], 1973, J PHILOS
   Glymour C, 2010, SYNTHESE, V175, P169, DOI 10.1007/s11229-009-9497-9
   Hall N, 2007, PHILOS STUD, V132, P109, DOI 10.1007/s11098-006-9057-9
   Hall N., 2004, CAUSATION COUNTERFAC, P225
   Halpern JY, 2005, BRIT J PHILOS SCI, V56, P843, DOI 10.1093/bjps/axi147
   Hiddleston E, 2005, BRIT J PHILOS SCI, V56, P27, DOI 10.1093/phisci/axi102
   Hitchcock C, 2001, J PHILOS, V98, P273, DOI 10.2307/2678432
   Hitchcock C, 2007, PHILOS REV, V116, P495, DOI 10.1215/00318108-2007-012
   Pearl Judea, 2000, MODELS REASONING INF, V19, DOI DOI 10.1017/CBO9780511803161
   Riguzzi F, 2010, FUND INFORM, V102, P429, DOI 10.3233/FI-2010-313
   Riguzzi F, 2008, LECT NOTES COMPUT SC, V5366, P667, DOI 10.1007/978-3-540-89982-2_54
   VENNEKENS J, 2004, 20 INT C LOG PROGR I, P431
   VENNEKENS J, 2010, 12 EUR C LOG ART INT, P313
   Vennekens J, 2009, THEOR PRACT LOG PROG, V9, P245, DOI 10.1017/S1471068409003767
NR 15
TC 12
Z9 13
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 647
EP 662
DI 10.1017/S1471068411000226
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI); Arts &amp; Humanities Citation Index (A&amp;HCI); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100014
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Lopes, NP
   Navarro, JA
   Rybalchenko, A
   Singh, A
AF Lopes, Nuno P.
   Navarro, Juan A.
   Rybalchenko, Andrey
   Singh, Atul
TI Applying Prolog to develop distributed systems
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE distributed systems; logic programming; Prolog
AB Development of distributed systems is a difficult task. Declarative programming techniques hold a promising potential for effectively supporting programmer in this challenge. While Data log-based languages have been actively explored for programming distributed systems, Prolog received relatively little attention in this application area so far. In this paper we present a Prolog-based programming system, called DAHL, for the declarative development of distributed systems. DAHL extends Prolog with an event-driven control mechanism and built-in networking procedures. Our experimental evaluation using a distributed hash-table data structure, a protocol for achieving Byzantine fault tolerance, and a distributed software model checker-all implemented in DAHL-indicates the viability of the approach.
C1 [Lopes, Nuno P.] Univ Tecn Lisboa, Inst Super Tecn, INESC ID, Lisbon, Portugal.
   [Navarro, Juan A.; Rybalchenko, Andrey] Tech Univ Munich, Munich, Germany.
   [Singh, Atul] NEC Res Labs, Princeton, NJ USA.
C3 INESC-ID; Universidade de Lisboa; Technical University of Munich
RP Lopes, NP (corresponding author), Univ Tecn Lisboa, Inst Super Tecn, INESC ID, Lisbon, Portugal.
RI Lopes, Nuno/I-5898-2012
OI Lopes, Nuno/0000-0002-3160-1672
CR ALVARO P, 2010, ACM SIGOPS OPERATING, V43, P25
   ALVARO P, 2009, UCBEECS200998
   Armstrong J., 1993, Concurrent programming in ERLANG
   Ashley-Rollman MP, 2009, LECT NOTES COMPUT SC, V5649, P265, DOI 10.1007/978-3-642-02846-5_24
   ASHLEYROLLMAN MP, 2007, IEEE INT C INT ROB S, P2794, DOI DOI 10.1109/IROS.2007.4399480
   Bal H. E., 1993, Future Generation Computer Systems, V9, P119, DOI 10.1016/0167-739X(93)90004-9
   Banerjee S, 2002, ACM SIGCOMM COMP COM, V32, P205, DOI 10.1145/964725.633045
   BELARAMANI N, 2008, TR0825 U TEX
   Biagioni E., 2001, Higher-Order and Symbolic Computation, V14, P309, DOI 10.1023/A:1014403914699
   CASAS A, 2008, ICLP 08, P651
   Castro M., 2003, Operating Systems Review, V37, P298, DOI 10.1145/1165389.945474
   Chu D, 2007, SENSYS'07: PROCEEDINGS OF THE 5TH ACM CONFERENCE ON EMBEDDED NETWORKED SENSOR SYSTEMS, P175
   CHU YH, 2004, ATEC 04, P12
   Clement A., 2009, P 6 USENIX S NETWORK, V9, P153
   Grumbach S, 2010, LECT NOTES COMPUT SC, V5937, P88, DOI 10.1007/978-3-642-11503-5_9
   Gupta G, 2001, ACM T PROGR LANG SYS, V23, P472, DOI 10.1145/504083.504085
   *INT SYST LAB, 2009, SICSTUS PROL US MAN
   JANNOTTI J, 2000, OSDI 00, P14
   KILLIAN CE, 2007, NSDI 07
   Killian C, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P179, DOI 10.1145/1250734.1250755
   KOTLA R, 2007, ACM P 21 S OP SYST P, V41, P45
   Leonini L., 2009, NSDI 09, V9, P185
   Li B, 2007, IEEE J SEL AREA COMM, V25, P1627, DOI 10.1109/JSAC.2007.071203
   Loo B. T., 2005, P 20 ACM S OP SYST P, P75, DOI [10.1145/1095810.1095818, DOI 10.1145/1095810.1095818]
   Loo B.T., 2006, SIGMOD C, P97
   LOPES NP, 2010, DISTRIBUTED PR UNPUB
   MADHAVAPEDDY A, 2007, EUROSYS, P101
   MAO Y, 2010, ACM SIGOPS OPERATING, V43, P19
   MATHEWSON N, 2009, LIBEVENT DOCUMENTATI
   Navarro JA, 2009, LECT NOTES COMPUT SC, V5418, P76, DOI 10.1007/978-3-540-92995-6_6
   Pérez JAN, 2009, LECT NOTES COMPUT SC, V5643, P584, DOI 10.1007/978-3-642-02658-4_43
   Rhea S., 2004, ATEC '04: Proceedings of the Annual Conference on USENIX Annual Technical Conference, P10
   SINGH A, 2008, NSDI 08, P189
   Stoica I, 2001, ACM SIGCOMM COMP COM, V31, P149, DOI 10.1145/964723.383071
   Vahdat A, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P271, DOI 10.1145/1060289.1060315
   Wang AD, 2009, LECT NOTES COMPUT SC, V5418, P61, DOI 10.1007/978-3-540-92995-6_5
   White B, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE FIFTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P255, DOI 10.1145/1060289.1060313
   Yabandeh M, 2010, ACM T COMPUT SYST, V28, DOI 10.1145/1731060.1731062
NR 38
TC 8
Z9 8
U1 0
U2 6
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 691
EP 707
DI 10.1017/S1471068410000360
PN 4-6
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200022
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pearce, D
   Tompits, H
   Woltran, S
AF Pearce, David
   Tompits, Hans
   Woltran, Stefan
TI Characterising equilibrium logic and nested logic programs: Reductions
   and complexity
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Review
DE answer-set programming; equilibrium logic; reduction techniques;
   quantified Boolean formulas; computational complexity; equivalence
   testing
ID ANSWER-SET SEMANTICS; STRONG EQUIVALENCE; STRONGLY EQUIVALENT;
   PROPOSITIONAL THEORIES; UNIFORM EQUIVALENCE; MODEL; EXPRESSIONS;
   NEGATION; CIRCUMSCRIPTION; CHECKING
AB Equilibrium logic is an approach to non-monotonic reasoning that extends the stable-model and answer-set semantics for logic programs. In particular, it includes the general case of nested logic programs, where arbitrary Boolean combinations are permitted in heads and bodies of rules, as special kinds of theories. In this paper, we present polynomial reductions Of the main reasoning tasks associated with equilibrium logic and nested logic programs into quantified propositional logic, an extension of classical propositional logic where quantifications over atomic formulas are permitted. Thus, quantified propositional logic is a fragment of second-order logic, and its formulas are usually referred to as quantified Boolean formulas (QBFs). We provide reductions not only for decision problems, but also for the central semantical concepts of equilibrium logic and nested logic programs. In particular, our encodings map a given decision problem into some QBF such that the latter is valid precisely in case the former holds. The basic tasks we deal with here are the consistency, problem, brave reasoning and skeptical reasoning. Additionally, we also provide encodings for testing equivalence of theories or programs under different notions of equivalence, viz. ordinary, strong and uniform equivalence. For all considered reasoning tasks, we analyse their computational complexity and give strict complexity bounds. Hereby, our encodings yield upper bounds in a direct manner Besides this useful feature, our approach has the following benefits: First, Our encodings yield a uniform axiomatisation for a variety of problems in a common language. Second, extant solvers for QBFs can be used as back-end inference engines to realise implementations of the encoded task in a rapid prototyping manner. Third, our axiomatisations also allow us to straightforwardly relate equilibrium logic with circumscription.
C1 [Pearce, David] Univ Politecn Madrid, Dept Inteligencia Artificial, Grp CLIP, E-28660 Madrid, Spain.
   [Tompits, Hans] Vienna Univ Technol, Inst Informat Syst 184 3, Arbeitsbereich Wissensbasierte Syst, A-1040 Vienna, Austria.
   [Woltran, Stefan] Vienna Univ Technol, Inst Informat Syst 184 2, Arbeitsbereich Datenbanken & Artificial Intellige, A-1040 Vienna, Austria.
C3 Universidad Politecnica de Madrid; Technische Universitat Wien;
   Technische Universitat Wien
RP Pearce, D (corresponding author), Univ Politecn Madrid, Dept Inteligencia Artificial, Grp CLIP, E-28660 Madrid, Spain.
EM david.pearce@upm.es; tompits@kr.tuwien.ac.at; woltran@dbai.tuwien.ac.at
CR Aguado F, 2008, LECT NOTES ARTIF INT, V5293, P8, DOI 10.1007/978-3-540-87803-2_3
   [Anonymous], 1956, INTRO MATH LOGIC
   [Anonymous], 1930, Comptes Rendus des Seances de la Societe des Sciences et des Lettres de Varsovie Classe III
   [Anonymous], 1993, LOGIC PROGRAMMING NO
   [Anonymous], P NAT C ART INT AAAI
   Arieli O, 2003, J LOGIC COMPUT, V13, P557, DOI 10.1093/logcom/13.4.557
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Ben-Eliyahu R., 1994, Annals of Mathematics and Artificial Intelligence, V12, P53, DOI 10.1007/BF01530761
   Biere A, 2005, LECT NOTES COMPUT SC, V3542, P59
   Brewka G, 2004, COMPUT INTELL-US, V20, P335, DOI 10.1111/j.0824-7935.2004.00241.x
   Brewka G, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P100
   BRSNARD P, 2005, LNCS, V3300, P84
   Cabalar P, 2005, LECT NOTES ARTIF INT, V3808, P4, DOI 10.1007/11595014_2
   Cabalar P, 2007, THEOR PRACT LOG PROG, V7, P745, DOI 10.1017/S1471068407003110
   Cabalar P, 2007, LECT NOTES COMPUT SC, V4739, P241
   Cabalar P, 2007, LECT NOTES COMPUT SC, V4670, P104, DOI 10.1007/978-3-540-74610-2_8
   Chen Y, 2005, LECT NOTES ARTIF INT, V3662, P442, DOI 10.1007/11546207_43
   Cheng J., 1993, Proceedings. Fourth International Symposium on Software Reliability Engineering (Cat. No.93TH0560-3), P132, DOI 10.1109/ISSRE.1993.624282
   CLARK KL, 1978, LOGIC DATA BASES, P127
   de Bruijn J, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P304
   De Jongh DHJ, 2003, THEOR PRACT LOG PROG, V3, P259, DOI 10.1017/S147106840200159X
   Delgrande JP, 2004, J LOGIC COMPUT, V14, P801, DOI 10.1093/logcom/14.6.801
   Dix J., 1996, Fundamenta Informaticae, V28, P87
   Egly U, 2004, LECT NOTES COMPUT SC, V2919, P214
   Egly U, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P417
   EGLY U, 2006, P 17 EUR C ART INT E, P477
   Eiter T, 2005, LECT NOTES ARTIF INT, V3662, P437, DOI 10.1007/11546207_42
   Eiter T, 2004, LECT NOTES ARTIF INT, V2923, P87
   Eiter T, 2003, LECT NOTES COMPUT SC, V2916, P224, DOI 10.1007/978-3-540-24599-5_16
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Eiter T., 2004, PRINCIPLES KNOWLEDGE, P447
   EITER T, 2002, LNCS, V2381, P100
   Eiter T, 2007, ACM T COMPUT LOG, V8, DOI 10.1145/1243996.1244000
   Eiter T, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P97
   Erdem E, 2003, THEOR PRACT LOG PROG, V3, P499, DOI 10.1017/S1471068403001765
   ERDEM E, 2001, P 18 INT C LOG PROGR, V2237, P242
   Faber W., 2008, P 11 INT C PRINC KNO, P433
   Faber W, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P430
   FAGES F, 1994, J METHODS LOGIC COMP, V1, P51
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Ferraris P, 2006, ANN MATH ARTIF INTEL, V47, P79, DOI 10.1007/s10472-006-9025-2
   Ferraris P, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P372
   Fink M, 2008, LECT NOTES COMPUT SC, V5366, P99, DOI 10.1007/978-3-540-89982-2_17
   FRRRARIS P, 2006, ANN MATH ARTIFICIAL, V47, P1
   Garey M.R., 1979, COMPUTERS INTRACTABI
   GEBSER M, 2006, P 21 NAT C ART INT A, P244
   Gebser M, 2008, LECT NOTES COMPUT SC, V4932, P24, DOI 10.1007/978-3-540-77684-0_5
   GELFOND M, 1991, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P230
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   GELFOND M, 1990, INT J INTELL SYST, V5, P549, DOI 10.1002/int.4550050507
   GELFOND M, 1989, ARTIF INTELL, V38, P75, DOI 10.1016/0004-3702(89)90068-4
   GELFOND M, 1994, P 15 C THEOR ASP REA, P197
   Giunchiglia E, 2003, ARTIF INTELL, V145, P99, DOI 10.1016/S0004-3702(02)00373-9
   GODEL K, 1932, INTUITIONISTISCHEN A, P65
   Gurevich Y., 1977, Studia Logica, V36, P49, DOI DOI 10.1007/BF02121114
   He CL, 2005, Proceedings of 2005 International Conference on Advanced Fibers and Polymer Materials (ICAFPM 2005), Vol 1 and 2, P708
   Heyting A, 1930, SITZBER PREUSS AKAD, P42
   Inoue K, 2004, LECT NOTES COMPUT SC, V3229, P174, DOI 10.1007/978-3-540-30227-8_17
   Inoue K, 1998, J LOGIC PROGRAM, V35, P39, DOI 10.1016/S0743-1066(97)10001-2
   Janhunen T, 2004, FRONT ARTIF INTEL AP, V110, P358
   Janhunen T, 2002, LECT NOTES ARTIF INT, V2424, P493, DOI 10.1007/3-540-45757-7_41
   Janhunen T., 2001, LECT NOTES COMPUTER, V2173, P93, DOI DOI 10.1007/3-540-45402-0_7
   Jorge, 2001, LECT NOTES ARTIF INT, V2258, P306
   KOWALSKI V, 1968, MATH USSR, V8, P648
   Lee J, 2003, LECT NOTES COMPUT SC, V2916, P451, DOI 10.1007/978-3-540-24599-5_31
   Lee J., 2008, P 23 NAT C ART INT A, P472
   Lee JF, 2005, LCN 2005: 30th Conference on Local Computer Networks, Proceedings, P503
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lesniewski S., 1929, FUND MATH, V14, P1
   LETZ R, 2002, LECT NOTES ARTIF INT, V2381, P160
   Lierler Y, 2005, LECT NOTES ARTIF INT, V3662, P447, DOI 10.1007/11546207_44
   LIFSCHITZ V, 1989, S REPR REAS, P235
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V., 1994, HDB LOGIC ARTIFICIAL, V3, P297
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lifschitz V, 2007, LECT NOTES COMPUT SC, V4483, P188, DOI 10.1007/978-3-540-72200-7_17
   Lin F., 2002, KR-02, P170
   LIN F, 1991, THESIS STANFORD U CA
   Lin FZ, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P112
   Linke T, 2004, LECT NOTES COMPUT SC, V3132, P225, DOI 10.1007/978-3-540-27775-0_16
   Maher M.J., 1988, FDN DEDUCTIVE DATABA, P627
   MCCARTHY J, 1980, ARTIF INTELL, V13, P27, DOI 10.1016/0004-3702(80)90011-9
   MCCLUSKEY EJ, 1956, BELL SYST TECH J, V35, P1417, DOI 10.1002/j.1538-7305.1956.tb03835.x
   MEYER AR, 1973, ACM S THEOR COMP STO, P1
   MOORE RC, 1985, ARTIF INTELL, V25, P75, DOI 10.1016/0004-3702(85)90042-6
   MUNDICI D, 1987, THEOR COMPUT SCI, V52, P145, DOI 10.1016/0304-3975(87)90083-1
   Nelson D., 1949, J. Symb. Log., V14, P16
   OETSCH J, 2007, P 16 INT C COMP CIC
   Oetsch J, 2006, LECT NOTES ARTIF INT, V4160, P502, DOI 10.1007/11853886_47
   Oetsch J, 2006, CIC 2006: 15TH INTERNATIONAL CONFERENCE ON COMPUTING, PROCEEDINGS, P3
   Oetsch J, 2008, LECT NOTES COMPUT SC, V5366, P591, DOI 10.1007/978-3-540-89982-2_49
   Oetsch Johannes, 2007, P 22 NAT C ART INT A, P458
   Oikarinen E, 2004, LECT NOTES ARTIF INT, V2923, P180
   Oikarinen E., 2006, the Proceedings of the 11th Workshop on Nonmonotonic Reasoning (NMR'06), P10
   Osorio M, 2005, ANN PURE APPL LOGIC, V134, P63, DOI 10.1016/j.apal.2004.06.012
   Papadimitriou C. H., 1994, Computational Complexity
   Pearce D., 2005, Studia Logica, V80, P321, DOI 10.1007/s11225-005-8473-8
   Pearce D, 2004, FR ART INT, V110, P388
   Pearce D, 2004, LECT NOTES COMPUT SC, V3132, P210, DOI 10.1007/978-3-540-27775-0_15
   Pearce D, 2004, LECT NOTES ARTIF INT, V2923, P194
   Pearce D, 2002, LECT NOTES COMPUT SC, V2401, P405, DOI 10.1007/3-540-45619-8_28
   Pearce D, 1999, APPL LOG SER, V13, P161
   Pearce D, 2000, LECT NOTES ARTIF INT, V1861, P688
   Pearce D, 1997, LECT NOTES ARTIF INT, V1216, P57, DOI 10.1007/BFb0023801
   Pearce D, 2000, LECT NOTES ARTIF INT, V1847, P352
   PEARCE D, 1991, LECT NOTES ARTIF INT, V475, P311
   Pearce D, 2006, ANN MATH ARTIF INTEL, V47, P3, DOI 10.1007/s10472-006-9028-z
   Pearce D, 2008, LECT NOTES COMPUT SC, V5366, P546, DOI 10.1007/978-3-540-89982-2_46
   PERLIS D, 1988, ARTIF INTELL, V36, P223, DOI 10.1016/0004-3702(88)90003-3
   Przymusinski T. C., 1991, New Generation Computing, V9, P401, DOI 10.1007/BF03037171
   Pührer J, 2008, LECT NOTES COMPUT SC, V5366, P561, DOI 10.1007/978-3-540-89982-2_47
   Quine Willard V, 1952, AM MATH MON, V59, P521, DOI [DOI 10.2307/2308219, 10.1080/00029890.1952.11988183, DOI 10.1080/00029890.1952.11988183]
   Rintanen J, 1999, J ARTIF INTELL RES, V10, P332
   Russell B, 1906, AM J MATH, V28, P159, DOI 10.2307/2369962
   SAGIV Y, 1988, FDN DEDUCTIVE DATABA, P659
   Sarsakov V, 2004, LECT NOTES ARTIF INT, V2923, P361
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Srzednicki J., 1998, LESNIEWSKIS SYSTEMS
   Stockmeyer L. J., 1976, Theoretical Computer Science, V3, P1, DOI 10.1016/0304-3975(76)90061-X
   Tompits H, 2005, LECT NOTES COMPUT SC, V3668, P189, DOI 10.1007/11562931_16
   Tompits H, 2003, AI COMMUN, V16, P89
   Truszczynski M., 2008, P 23 AAAI C ART INT, P560
   Turner H, 2003, THEOR PRACT LOG PROG, V3, P609, DOI 10.1017/S1471068403001819
   TURNER H, 2001, LECT NOTES ARTIF INT, V2173, P81
   Valverde A, 2004, LECT NOTES COMPUT SC, V3229, P734, DOI 10.1007/978-3-540-30227-8_69
   Van Dalen D., 1986, HDB PHILOS LOGIC, P225
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Vorob'ev N, 1952, DOKL AKAD NAUK SSSR, V85, P689
   Whitehead A N, 1910, PRINCIPIA MATH, V1
   Wiktor Marek V., 1993, LOGIC PROGRAMMING NO, P115
   Woltran S, 2004, LECT NOTES COMPUT SC, V3229, P161, DOI 10.1007/978-3-540-30227-8_16
   WOLTRAN S, 2005, WP5 WORK GROUP ANSW
   WOLTRAN S, 2003, THESIS TU WIEN
   Woltran S, 2008, THEOR PRACT LOG PROG, V8, P217, DOI 10.1017/S1471068407003250
   Wrathall C., 1976, Theoretical Computer Science, V3, P23, DOI 10.1016/0304-3975(76)90062-1
   You J.-H., 2003, P 18 INT JOINT C ART, P859
   YUAN LY, 1994, J AUTOM REASONING, V13, P69, DOI 10.1007/BF00881912
NR 139
TC 17
Z9 17
U1 0
U2 11
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2009
VL 9
BP 565
EP 616
DI 10.1017/S147106840999010X
PN 5
PG 52
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 499EO
UT WOS:000270200300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Oikarinen, E
   Janhunen, T
AF Oikarinen, Emilia
   Janhunen, Tomi
TI Achieving compositionality of the stable model semantics for
   <i>SMODELS</i> programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; module system; compositional semantics; stable
   model semantics; modular equivalence
ID LOGIC PROGRAMS; EQUIVALENCE; MODULARITY; MODULES; UNIFORM; SETS
AB In this paper, a Gaifman-Shapiro-style module architecture is tailored to the case of SMODELS programs under the stable model semantics. The composition of SMODELS program modules is suitably limited by module conditions which ensure the compatibility of the module system with stable models. Hence the semantics of an entire SMODELS program depends directly on stable models assigned to its modules. This result is formalized as a module theorem which truly strengthens V. Lifschitz and H. Turner's splitting-set theorem (June 1994, Splitting a logic program. In Logic Programming: Proceedings of the Eleventh International Conference on Logic Programming, Santa Margherita Ligure, Italy, P. V. Hentenryck, Ed. MIT Press, 23-37) for the class of SMODELS programs. To streamline generalizations in the future, the module theorem is first proved for normal programs and then extended to cover SMODELS programs using a translation from the latter class of programs to the former class. Moreover, the respective notion of module-level equivalence, namely modular equivalence, is shown to be a proper congruence relation: it is preserved under substitutions of modules that are modularly equivalent. Principles for program decomposition are also addressed. The strongly connected components of the respective dependency graph can be exploited in order to extract it module structure when there is no explicit a priori knowledge about the modules of a program. The paper includes a practical demonstration of tools that have been developed for automated (de)composition of SMODELS programs.
C1 [Oikarinen, Emilia; Janhunen, Tomi] Aalto Univ, Dept Informat & Comp Sci, FI-02015 Helsinki, Finland.
C3 Aalto University
RP Oikarinen, E (corresponding author), Aalto Univ, Dept Informat & Comp Sci, POB 5400, FI-02015 Helsinki, Finland.
EM Emilia.Oikarinen@tkk.fi; Tomi.Janhunen@tkk.fi
RI Janhunen, Tomi/E-8362-2012
OI Oikarinen, Emilia/0000-0002-9623-6282
CR [Anonymous], 1988, International Symposium on Logic Programming
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Brain M, 2006, LECT NOTES COMPUT SC, V4079, P270, DOI 10.1007/11799573_21
   BROGI A, 1994, ACM T PROGR LANG SYS, V16, P1361, DOI 10.1145/183432.183528
   Brooks DR, 2007, J AUTOM REASONING, V39, P471, DOI 10.1007/s10817-007-9082-1
   BUGLIESI M, 1994, J LOGIC PROGRAM, V20, P443, DOI 10.1016/0743-1066(94)90032-9
   Clark K. L., 1978, Logic and data bases, P293
   Eiter T, 2004, LECT NOTES ARTIF INT, V2923, P87
   Eiter T, 2003, LECT NOTES COMPUT SC, V2916, P224, DOI 10.1007/978-3-540-24599-5_16
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   EITER T, 2005, IJCAI, P97
   EITER T, 1997, LNCS, V1265, P290
   Erdem E, 2006, THEOR PRACT LOG PROG, V6, P539, DOI 10.1017/S1471068406002729
   Etalle S, 1996, THEOR COMPUT SCI, V166, P101, DOI 10.1016/0304-3975(95)00148-4
   Faber W, 2005, LECT NOTES COMPUT SC, V3363, P306
   FAGES F, 1994, J METHODS LOGIC COMP, V1, P51
   Ferraris P, 2005, THEOR PRACT LOG PROG, V5, P45, DOI 10.1017/S1471068403001923
   GAIFMAN H, 1989, 16TH P ANN ACM S PRI, P134
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P260, DOI 10.1007/978-3-540-72200-7_23
   Gelfond M, 2002, ARTIF INTELL, V138, P3, DOI 10.1016/S0004-3702(02)00207-2
   Gelfond M, 1999, ANN MATH ARTIF INTEL, V25, P165, DOI 10.1023/A:1018938324292
   GELFOND M, 1990, LOGIC PROGRAMM, P579
   GIORDANO L, 1994, J LOGIC PROGRAM, V21, P59, DOI 10.1016/0743-1066(94)90001-9
   Heljanko K, 2005, ACSD2005: FIFTH INTERNATIONAL CONFERENCE ON APPLICATION OF CONCURRENCY TO SYSTEM DESIGN, PROCEEDINGS, P78, DOI 10.1109/ACSD.2005.7
   HELJANKO K, 2004, 052004 U STUTTG I FO
   Ianni Giovambattista, 2004, NMR, P233
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   Janhunen T, 2002, LECT NOTES ARTIF INT, V2424, P493, DOI 10.1007/3-540-45757-7_41
   Janhunen T., 2006, J APPL NONCLASSICAL, V1-2, P35, DOI DOI 10.3166/JANCL.16.35-86
   Janhunen T, 2007, THEOR PRACT LOG PROG, V7, P697, DOI 10.1017/S1471068407003031
   Janhunen T, 2007, LECT NOTES COMPUT SC, V4483, P175, DOI 10.1007/978-3-540-72200-7_16
   Järvisalo M, 2007, LECT NOTES COMPUT SC, V4670, P134, DOI 10.1007/978-3-540-74610-2_10
   Jorge, 2001, LECT NOTES ARTIF INT, V2258, P306
   Lierler Y, 2005, LECT NOTES ARTIF INT, V3662, P447, DOI 10.1007/11546207_44
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V., 1985, P IJCAI 85, P121
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   MAHER MJ, 1993, THEOR COMPUT SCI, V110, P377, DOI 10.1016/0304-3975(93)90013-J
   Mancarella P., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1006
   MAREK W, 1991, J ACM, V38, P588, DOI 10.1145/116825.116836
   MARGK VW, 1999, LOGIC PROGRAMMING PA, P375
   MEYER AR, 1988, 3RD P ANN S LOG COMP, P236
   MILLER D, 1989, J LOGIC PROGRAM, V6, P79, DOI 10.1016/0743-1066(89)90031-9
   Mostowski A., 1957, Fundamenta Mathematicae, V44, P12, DOI 10.4064/fm-44-1-12-36
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Nogueira M., 2001, Practical Aspects of Declarative Languages. Third International Symposium, PADL 2001. Proceedings (Lecture Notes in Computer Science Vol.1990), P169
   O'Keefe R., 1985, P IEEE S LOG PROGR, P152
   Oikarinen E, 2008, LECT NOTES ARTIF INT, V5253, P167, DOI 10.1007/978-3-540-85776-1_15
   Oikarinen E, 2006, FRONT ARTIF INTEL AP, V141, P412
   Oikarinen E, 2007, LECT NOTES COMPUT SC, V4483, P321, DOI 10.1007/978-3-540-72200-7_33
   Oikarinen E, 2009, J LOGIC COMPUT, V19, P591, DOI 10.1093/logcom/exn039
   Przymusinski T. C., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1081
   Sagiv Y., 1987, P 6 ACM SIGACT SIGMO, DOI [10.1145/28659.28696, DOI 10.1145/28659.28696]
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   SOININEN T, 2001, P 1 INT WORKSH ANSW
   TARI L, 2005, CEUR WORKSH P, V142
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Turner H, 2003, THEOR PRACT LOG PROG, V3, P609, DOI 10.1017/S1471068403001819
   VALIANT LG, 1979, SIAM J COMPUT, V8, P410, DOI 10.1137/0208032
   Woltran S, 2004, LECT NOTES COMPUT SC, V3229, P161, DOI 10.1007/978-3-540-30227-8_16
   WOLTRAN S, 2007, CEUR WORKSH P, V265, P13
   [No title captured]
NR 63
TC 31
Z9 32
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP-NOV
PY 2008
VL 8
BP 717
EP 761
DI 10.1017/S147106840800358X
PN 5-6
PG 45
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 385UH
UT WOS:000261838600006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Erdem, E
   Lifschitz, V
   Ringe, D
AF Erdem, Esra
   Lifschitz, Vladimir
   Ringe, Don
TI Temporal phylogenetic networks and logic programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE phylogenetics; historical linguistics; Indo-European languages; answer
   set programming; constraint logic programming
AB The concept of a temporal phylogenetic network is a mathematical model of evolution of a family of natural languages. It takes into account the fact that languages can trade their characteristics with each other when linguistic communities are in contact, and also that a contact is only possible when the languages are spoken at the same time. We show how computational methods of answer set programming and constraint logic programming can be used to generate plausible conjectures about contacts between prehistoric linguistic communities, and illustrate our approach by applying it to the evolutionary history of Indo-European languages.
C1 Vienna Univ Technol, Inst Informat Syst 184 3, A-1040 Vienna, Austria.
   Univ Texas, Dept Comp Sci, Austin, TX 78712 USA.
   Univ Penn, Dept Linguist, Philadelphia, PA 19104 USA.
C3 Technische Universitat Wien; University of Texas System; University of
   Texas Austin; University of Pennsylvania
RP Erdem, E (corresponding author), Vienna Univ Technol, Inst Informat Syst 184 3, A-1040 Vienna, Austria.
EM esra@kr.tuwien.ac.at; vl@cs.utexas.edu; dringe@unagi.cis.upenn.edu
RI Erdem, Esra/I-4587-2012
OI Erdem, Esra/0000-0001-8384-7810
CR [Anonymous], 1988, International Symposium on Logic Programming
   [Anonymous], 1996, Principles of Knowledge Representation
   [Anonymous], 2004, PHYLOGENETIC NETWORK
   [Anonymous], 1989, In Search of the Indo-Europeans. Language
   BERGSLAND K, 1962, CURR ANTHROPOL, V3, P115, DOI 10.1086/200264
   Brooks DR, 2005, LECT NOTES COMPUT SC, V3350, P37
   Elkabani I, 2004, LECT NOTES COMPUT SC, V3132, P73, DOI 10.1007/978-3-540-27775-0_6
   Erdem E, 2003, LECT NOTES COMPUT SC, V2562, P160
   Erdem E, 2003, THEOR PRACT LOG PROG, V3, P499, DOI 10.1017/S1471068403001765
   Giunchiglia E, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P61
   GLEASON HA, 1959, ANTHROPOL LINGUIST, V1, P22
   Hock HansHenreich., 1986, PRINCIPLES HIST LING
   Lee J, 2003, LECT NOTES COMPUT SC, V2916, P451, DOI 10.1007/978-3-540-24599-5_31
   Lin FZ, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P112
   Nakhleh L, 2005, LANGUAGE, V81, P382, DOI 10.1353/lan.2005.0078
   Ringe D, 2002, T PHILOL SOC, V100, P59, DOI 10.1111/1467-968X.00091
   Ross M., 1997, ARCHAEOLOGY LANGUAGE, P209
NR 17
TC 17
Z9 17
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2006
VL 6
BP 539
EP 558
DI 10.1017/S1471068406002729
PN 5
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 077SV
UT WOS:000240051400003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lonc, Z
   Truszczyski, M
AF Lonc, Z
   Truszczyski, M
TI Computing stable models: worst-case performance estimates
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic programs; stable models; computing stable models; worst-case
   bounds
AB We study algorithms for computing stable models of logic programs and derive estimates on their worst-case performance that are asymptotically better than the trivial bound of O(m2(n)), where m is the size of an input program and n is the number of its atoms. For instance, for programs whose clauses consist of at most two literals (counting the head) we design an algorithm to compute stable models that works in time O(m x 1.44225(n)). We present similar results for several broader classes of programs. Finally, we study the applicability of the techniques developed in the paper to the analysis of the performance of smodels.
C1 Warsaw Univ Technol, Fac Math & Informat Sci, PL-00661 Warsaw, Poland.
   Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
C3 Warsaw University of Technology; University of Kentucky
RP Warsaw Univ Technol, Fac Math & Informat Sci, PL-00661 Warsaw, Poland.
EM zblonc@alpha.mini.pw.edu.pl; mirek@cs.uky.edu
OI Lonc, Zbigniew/0000-0001-6650-6774
CR [Anonymous], 1998, SORTING SEARCHING
   Apt K.R., 1990, HDB THEORETICAL COMP, VB, P493
   Bonatti PA, 2002, LECT NOTES COMPUT SC, V2401, P333, DOI 10.1007/3-540-45619-8_23
   Bonatti PA, 1996, THEOR COMPUT SCI, V160, P321, DOI 10.1016/0304-3975(95)00192-1
   BONATTI PA, 2002, ACM T COMPUT LOG, V2, P352
   BONATTI PA, 2001, P 17 INT JOINT C ART, P603
   Cholewinski P, 1999, J LOGIC PROGRAM, V38, P219, DOI 10.1016/S0743-1066(98)10020-1
   Dix J., 1995, Fundamenta Informaticae, V22, P257
   Eiter T, 2000, SPRINGER INT SER ENG, V597, P79
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   KONC Z, 2003, ACM T COMPUT LOG, V4, P91
   Kullmann O, 1999, THEOR COMPUT SCI, V223, P1, DOI 10.1016/S0304-3975(98)00017-6
   Lonc Z, 2001, THEOR PRACT LOG PROG, V1, P591, DOI 10.1017/S1471068401001053
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   MAREK VW, 1994, J LOGIC PROGRAM, V21, P129, DOI 10.1016/S0743-1066(14)80008-3
   Marek W., 1993, NONMONOTONIC LOGIC C
   MONIEN B, 1985, DISCRETE APPL MATH, V10, P287, DOI 10.1016/0166-218X(85)90050-2
   MOON JW, 1965, ISRAEL J MATH, V3, P23, DOI 10.1007/BF02760024
   Niemelä I, 2000, SPRINGER INT SER ENG, V597, P491
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   SUBRAHMANIAN VS, 1995, IEEE T KNOWL DATA EN, V7, P362, DOI 10.1109/69.390244
   SYRJANEN T, 1999, LPARSE PROCEDURE GRO
   Truszczynski M, 2002, THEOR PRACT LOG PROG, V2, P1
NR 23
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2004
VL 4
BP 193
EP 231
DI 10.1017/S147106840300173X
PN 1-2
PG 39
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 776LU
UT WOS:000189118100006
DA 2024-07-18
ER

PT J
AU Teniente, E
   Urpí, T
AF Teniente, E
   Urpí, T
TI On the abductive or deductive nature of database schema validation and
   update processing problems
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE database updating; database validation; abduction; deduction
ID FRAMEWORK
AB We show that database schema validation and update processing problems such as view updating, materialized view maintenance, integrity constraint checking, integrity constraint maintenance or condition monitoring can be classified as problems of either abductive or deductive nature, according to the reasoning paradigm that inherently suites them. This is done by performing abductive and deductive reasoning on the event rules (Olive, 1991), a set of rules that define the difference between consecutive database states. In this way, we show that it is possible to provide methods able to deal with all these problems as a whole. We also show how some existing general deductive and abductive procedures may be used to reason on the event rules. In this way, we show that these procedures can deal with all database schema validation and update processing problems considered in this paper.
C1 Univ Politecn Cataluna, Dept Llenguatges & Sistemes Informat, Barcelona, Spain.
C3 Universitat Politecnica de Catalunya
RP Univ Politecn Cataluna, Dept Llenguatges & Sistemes Informat, Jordi Girona Salgado 1-3, Barcelona, Spain.
EM teniente@lsi.upc.es; urpi@lsi.upc.es
CR ABITEBOUL S, 1988, LECT NOTES COMPUT SC, V326, P1
   Abiteboul S, 1995, FDN DATABASES
   ADRION WR, 1982, COMPUT SURV, V14, P159, DOI 10.1145/356876.356879
   Baralis E, 1998, IEEE T KNOWL DATA EN, V10, P353, DOI 10.1109/69.687973
   BRY F, 1990, LOGIC PROGRAMM, P561
   BRY F, 1988, LECT NOTES COMPUT SC, V303, P488
   BRY F, 1986, 12TH P INT C VER LAR, P13
   BRY F, 1996, 6 INT WORKSH DED DAT, P25
   CERI S, 1994, ACM T DATABASE SYST, V19, P367, DOI 10.1145/185827.185828
   Console L., 1995, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V4, P261, DOI 10.1007/BF00961655
   DECKER H, 1996, LNCS, V1057, P535
   Denecker M, 1998, J LOGIC PROGRAM, V34, P111, DOI 10.1016/S0743-1066(97)00074-5
   GARCIA C, 1994, P 10 INT C DAT ENG, P214
   GRANOVETTER M, 1992, ACTA SOCIOL, V35, P3, DOI 10.1177/000169939203500101
   GUESSOUM A, 1990, NEW GENERAT COMPUT, V8, P71, DOI 10.1007/BF03037514
   Gupta A., 1995, IEEE DATA ENG B, V18, P3
   HANSON EN, 1990, P ACM SIGMOD INT C A, V19, P271
   INOUE K, 1992, LECT NOTES ARTIF INT, V607, P400
   Inoue K, 1999, ANN MATH ARTIF INTEL, V25, P339, DOI 10.1023/A:1018926021566
   INOUE K, 1998, P 6 INT C PRINC KNOW, P394
   KAKAS AC, 1990, 16 INT C VERY LARG D
   KUCHENHOFF V, 1991, LECT NOTES COMPUT SC, V566, P478
   Lee SY, 1996, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P495
   Levy A. Y., 1995, Proceedings of the Fourteenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems. PODS 1995, P163, DOI 10.1145/212433.220207
   Lloyd J. W., 1984, Journal of Logic Programming, V1, P225, DOI 10.1016/0743-1066(84)90011-6
   Lloyd J. W., 2012, Foundations of Logic Programming
   Lobo Jorge., 1997, Journal of Applied Non-Classical Logics, V7, P117
   MAYOL E, 1999, 1 INT WORKSH EV CHAN, P62
   MOERKOTTE G, 1991, ACM T DATABASE SYST, V16, P670, DOI 10.1145/115302.115298
   OLIVE A, 1991, PROC INT CONF VERY L, P513
   Qian X., 1991, IEEE Transactions on Knowledge and Data Engineering, V3, P337, DOI 10.1109/69.91063
   ROSENTHAL A, 1989, VERY LARGE DATA BASES - PROCEEDINGS, P455
   ROUSSOPOULOS N, 1998, SIGMOD REC, V27, P21
   Sadri F., 1988, FDN DEDUCTIVE DATABA, P313
   Schewe K.-D., 1994, Proceedings Fourth International Workshop on Research Issues in Data Engineering. Active Database Systems (Cat. No.94TH0618-9), P71, DOI 10.1109/RIDE.1994.282851
   Staudt M, 1996, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P75
   TENIENTE E, 1995, PROC INT CONF DATA, P173, DOI 10.1109/ICDE.1995.380395
   Teniente E, 2000, ART H COMP SCI LIBR, P91
   Teniente E., 1995, VLDB J, V4, P193
   ULLMAN JD, 1989, PRINCIPLES DATABASES
   Urpi T., 1994, Proceedings Fourth International Workshop on Research Issues in Data Engineering. Active Database Systems (Cat. No.94TH0618-9), P19, DOI 10.1109/RIDE.1994.282857
   URPI T, 1992, 11TH P VLDB VANC, P225
   Widom J., 1996, ACTIVE DATABASE SYST
   Wuthrich B., 1993, Proceedings. Ninth International Conference on Data Engineering (Cat. No.92CH3258-1), P608, DOI 10.1109/ICDE.1993.344019
   [No title captured]
NR 45
TC 8
Z9 8
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2003
VL 3
BP 287
EP 327
DI 10.1017/S1471068402001631
PN 3
PG 41
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 689AQ
UT WOS:000183469800003
DA 2024-07-18
ER

PT J
AU Bistarelli, S
   Taticchi, C
   Meo, MC
AF Bistarelli, Stefano
   Taticchi, Carlo
   Meo, Maria Chiara
TI An Interleaving Semantics of the Timed Concurrent Language for
   Argumentation to Model Debates and Dialogue Games
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE computational argumentation; concurrency; interleaving
ID ACCEPTABILITY; BIPOLAR; LINDA
AB Time is a crucial factor in modelling dynamic behaviours of intelligent agents: activities have a determined temporal duration in a real-world environment, and previous actions influence agents' behaviour. In this paper, we propose a language for modelling concurrent interaction between agents that also allows the specification of temporal intervals in which particular actions occur. Such a language exploits a timed version of Abstract Argumentation Frameworks to realise a shared memory used by the agents to communicate and reason on the acceptability of their beliefs with respect to a given time interval. An interleaving model on a single processor is used for basic computation steps, with maximum parallelism for time elapsing. Following this approach, only one of the enabled agents is executed at each moment. To demonstrate the capabilities of the language, we also show how it can be used to model interactions such as debates and dialogue games taking place between intelligent agents. Lastly, we present an implementation of the language that can be accessed via a web interface.
C1 [Bistarelli, Stefano; Taticchi, Carlo] Univ Perugia, Perugia, Italy.
   [Meo, Maria Chiara] Univ G dAnnunzio, Chieti, Italy.
C3 University of Perugia; G d'Annunzio University of Chieti-Pescara
RP Bistarelli, S (corresponding author), Univ Perugia, Perugia, Italy.
EM stefano.bistarelli@unipg.it; carlo.taticchi@unipg.it;
   mariachiara.meo@unich.it
RI Taticchi, Carlo/P-2954-2019; Bistarelli, Stefano/C-3211-2008
OI Taticchi, Carlo/0000-0003-1260-4672; Bistarelli,
   Stefano/0000-0001-7411-9678
FU GNCS-INdAM [CUP E55F22000270001]; University of Perugia; Project
   GIUSTIZIA AGILE [CUP J89J22000900005]
FX & nbsp;The authors are members of the INdAM Research group GNCS and
   Consorzio CINI. This work has been partially supported by: GNCS-INdAM,
   CUP E55F22000270001; Project RACRA, funded by Ricerca di Base 2018-2019,
   University of Perugia; Project FICO, funded by Ricerca di Base 2021,
   University of Perugia; Project BLOCKCHAIN4FOODCHAIN, funded by Ricerca
   di Base 2020, University of Perugia; Project GIUSTIZIA AGILE, CUP
   J89J22000900005.
CR ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   Amgoud L, 2000, FRONT ARTIF INTEL AP, V54, P338
   Aristotle, 1928, Topics
   Azhar MQ, 2016, IEEE ROMAN, P861, DOI 10.1109/ROMAN.2016.7745220
   Baroni P, 2011, KNOWL ENG REV, V26, P365, DOI 10.1017/S0269888911000166
   Barrett C, 2021, FRONT ARTIF INTEL AP, P1267, DOI 10.3233/FAIA201017
   Baumeister D, 2018, ARTIF INTELL, V264, P1, DOI 10.1016/j.artint.2018.08.001
   Bista S, 2023, AM J DRUG ALCOHOL AB, V49, P239, DOI 10.1080/00952990.2023.2171300
   Bistarelli Stefano, 2022, Practical Aspects of Declarative Languages: 24th International Symposium, PADL 2022, Proceedings. Lecture Notes in Computer Science, Programming and Software Engineering (13165), P101, DOI 10.1007/978-3-030-94479-7_7
   Bistarelli Stefano, 2021, Logics in Artificial Intelligence. 17th European Conference, JELIA 2021. Proceedings. Lecture Notes in Artificial Intelligence, Subseries of Lecture Notes in Computer Science (LNAI 12678), P18, DOI 10.1007/978-3-030-75775-5_2
   Bistarelli S., 2021, CEUR WORKSHOP P, V3002, P1
   Bistarelli S., 2020, CEUR WORKSHOP P, V2777, P75
   Bistarelli S, 2008, LECT NOTES COMPUT SC, V5052, P50, DOI 10.1007/978-3-540-68265-3_4
   Brewka G., 2010, PRINCIPLES KNOWLEDGE
   Budán MCD, 2015, INFORM SCIENCES, V290, P22, DOI 10.1016/j.ins.2014.07.056
   Busi N, 2000, LECT NOTES COMPUT SC, V1816, P198
   Caminada M, 2006, FR ART INT, V144, P121
   Caminada M, 2006, LECT NOTES ARTIF INT, V4160, P111, DOI 10.1007/11853886_11
   Cayrol C, 2005, LECT NOTES COMPUT SC, V3571, P378
   de Boer FS, 2004, FUND INFORM, V63, P309
   de Boer FS, 2000, INFORM COMPUT, V161, P45, DOI 10.1006/inco.1999.2879
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Emele C. D., 2011, P 10 INT C AUT AG MU, P913
   Fox M, 2003, J ARTIF INTELL RES, V20, P61, DOI 10.1613/jair.1129
   Governatori G, 2021, J APPL LOG-IFCOLOG, V8, P1679
   Hoare C. A. R., 1978, Communications of the ACM, V21, P666, DOI 10.1145/359576.359585
   Cobo ML, 2010, FRONT ARTIF INTEL AP, V215, P1007, DOI 10.3233/978-1-60750-606-5-1007
   Mann N, 2008, FR ART INT, V172, P204
   Marcos M. J., 2010, ARG MULT AG SYST 7 I, V6614, P228
   McBurney P, 2003, AUTON AGENT MULTI-AG, V7, P235, DOI 10.1023/A:1024787301515
   McBurney P, 2009, ARGUMENTATION IN ARTIFICIAL INTELLIGENCE, P261, DOI 10.1007/978-0-387-98197-0_13
   Milner R., 1980, Lecture Notes in Computer Science, V92, DOI DOI 10.1007/3-540-10235-3
   Modgil S, 2009, ARTIF INTELL, V173, P901, DOI 10.1016/j.artint.2009.02.001
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Paget N., 2013, EUMAS 2013 11 EUR WO
   Pardo P, 2018, J LOGIC COMPUT, V28, P551, DOI 10.1093/logcom/exv007
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Polberg S, 2018, INT J APPROX REASON, V93, P487, DOI 10.1016/j.ijar.2017.11.009
   Prakken H, 2005, J LOGIC COMPUT, V15, P1009, DOI 10.1093/logcom/exi046
   Prakken H., 1998, Artificial Intelligence and Law, V6, P231, DOI 10.1023/A:1008278309945
   Procaccia A. D., 2005, EUMAS 2005 KON VLAAM, P312
   Rago A, 2017, LECT NOTES ARTIF INT, V10621, P369, DOI 10.1007/978-3-319-69131-2_22
   Rahwan I, 2009, ARGUMENTATION IN ARTIFICIAL INTELLIGENCE, P321, DOI 10.1007/978-0-387-98197-0_16
   Rotstein N.D., 2008, P ARG DIAL DEC WORKS, P131
   SARASWAT V, 1996, J SYMB COMPUT, V22, P5, DOI DOI 10.1006/JSC0.1996.0064
   SARASWAT VA, 1990, CONFERENCE RECORD OF THE SEVENTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P232, DOI 10.1145/96709.96733
   SARASWAT VA, 1994, IEEE S LOG, P71, DOI 10.1109/LICS.1994.316085
   Thimm M, 2014, KUNSTL INTELL, V28, P159, DOI 10.1007/s13218-014-0307-2
   Walton D., 1995, Commitment in dialogue: Basic concepts of interpersonal reasoning
   Wooldridge M. J., 2002, INTRO MULTIAGENT SYS
   Yuan T., 2007, P 7 WORKSH COMP MOD
NR 51
TC 0
Z9 0
U1 1
U2 1
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2023
VL 23
IS 6
BP 1307
EP 1333
AR PII S1471068423000194
DI 10.1017/S1471068423000194
EA JUL 2023
PG 27
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7N0
UT WOS:001022722500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU De Angelis, E
   Proietti, M
   Fioravanti, F
   Pettorossi, A
AF De Angelis, Emanuele
   Proietti, Maurizio
   Fioravanti, Fabio
   Pettorossi, Alberto
TI Verifying Catamorphism-Based Contracts using Constrained Horn Clauses
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE specification; analysis and verification of systems; security;
   constraints; theory
ID DESIGN; CIAO
AB We address the problem of verifying that the functions of a program meet their contracts, specified by pre/postconditions. We follow an approach based on constrained Horn clauses (CHCs) by which the verification problem is reduced to the problem of checking satisfiability of a set of clauses derived from the given program and contracts. We consider programs that manipulate algebraic data types (ADTs) and a class of contracts specified by catamorphisms, that is, functions defined by simple recursion schemata on the given ADTs. We show by several examples that state-of-the-art CHC satisfiability tools are not effective at solving the satisfiability problems obtained by direct translation of the contracts into CHCs. To overcome this difficulty, we propose a transformation technique that removes the ADT terms from CHCs and derives new sets of clauses that work on basic sorts only, such as integers and booleans. Thus, when using the derived CHCs there is no need for induction rules on ADTs. We prove that the transformation is sound, that is, if the derived set of CHCs is satisfiable, then so is the original set. We also prove that the transformation always terminates for the class of contracts specified by catamorphisms. Finally, we present the experimental results obtained by an implementation of our technique when verifying many non-trivial contracts for ADT manipulating programs.
C1 [De Angelis, Emanuele; Proietti, Maurizio] CNR, IASI, Rome, Italy.
   [Fioravanti, Fabio] Univ G dAnnunzio, DEc, Pescara, Italy.
   [Pettorossi, Alberto] Univ Roma Tor Vergata, DICII, Rome, Italy.
C3 Consiglio Nazionale delle Ricerche (CNR); G d'Annunzio University of
   Chieti-Pescara; University of Rome Tor Vergata
RP De Angelis, E (corresponding author), CNR, IASI, Rome, Italy.
EM emanuele.deangelis@iasi.cnr.it; maurizio.proiett@iasi.cnr.it;
   fabio.fioravanti@unich.it; adp@iasi.cnr.it
OI De Angelis, Emanuele/0000-0002-7319-8439; FIORAVANTI,
   Fabio/0000-0002-1268-7829; Proietti, Maurizio/0000-0003-3835-4931
CR Albert E, 2020, THEOR PRACT LOG PROG, V20, P310, DOI 10.1017/S1471068419000401
   [Anonymous], 2011, Programming in Scala: A Comprehensive Step-by-Step Guide
   Barnett M, 2006, LECT NOTES COMPUT SC, V4111, P364
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Barrett C, 2009, FRONT ARTIF INTEL AP, V185, P825, DOI 10.3233/978-1-58603-929-5-825
   Bjorner N, 2015, LECT NOTES COMPUT SC, V9300, P24, DOI 10.1007/978-3-319-23534-9_2
   Booch G., 1994, SERIES OBJECT ORIENT
   Bruynooghe M, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1216374.1216378
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   De Angelis E., 2014, Lecture Notes in Computer Science, V8413, P568, DOI [DOI 10.1007/978-3-642-54862-8_47, 10.1007/978-3-642-54862-8_47]
   De Angelis E., 2022, VERIFYING CATAMORPHI, DOI [10.48550/arXiv.2205.06236, DOI 10.48550/ARXIV.2205.06236]
   De Angelis E, 2022, THEOR PRACT LOG PROG, V22, P974, DOI 10.1017/S1471068421000211
   De Angelis E, 2022, J LOGIC COMPUT, V32, P402, DOI 10.1093/logcom/exab090
   De Angelis E, 2018, THEOR PRACT LOG PROG, V18, P452, DOI 10.1017/S1471068418000157
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Etalle S, 1996, THEOR COMPUT SCI, V166, P101, DOI 10.1016/0304-3975(95)00148-4
   Filliâtre JC, 2013, LECT NOTES COMPUT SC, V7792, P125, DOI 10.1007/978-3-642-37036-6_8
   Grebenshchikov S, 2012, ACM SIGPLAN NOTICES, V47, P405, DOI 10.1145/2345156.2254112
   Hamza J., 2019, ACM PROGRAMMING LANG
   Hari Govind V K, 2022, P ACM PROGRAMMING LA
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Hermenegildo MV, 2005, SCI COMPUT PROGRAM, V58, P115, DOI 10.1016/j.scico.2005.02.006
   Hinze R, 2013, ACM SIGPLAN NOTICES, V48, P209, DOI [10.1145/2500365.2500578, 10.1145/2544174.2500578]
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Hojjat H, 2018, PROCEEDINGS OF THE 2018 18TH CONFERENCE ON FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD), P158
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   Kobayashi Naoki, 2020, Tools and Algorithms for the Construction and Analysis of Systems. 26th International Conference, TACAS 2020. Held as Part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12079), P195, DOI 10.1007/978-3-030-45237-7_12
   Komuravelli A, 2014, LECT NOTES COMPUT SC, V8559, P17
   Kostyukov Y, 2021, PROCEEDINGS OF THE 42ND ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '21), P451, DOI 10.1145/3453483.3454055
   Leino KRM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1488, DOI 10.1109/ICSE.2013.6606754
   MEIJER E, 1991, LECT NOTES COMPUT SC, V523, P124
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   Mordvinov D., 2017, LPAR-21, 21st International Conference on Logic for Programming, Artificial Intelligence and Reasoning, Maun, Botswana, May 7-12, 2017, volume 46 of EPiC Series in Computing, V46, P338
   Reynolds A, 2015, LECT NOTES COMPUT SC, V8931, P80
   Suter P, 2011, LECT NOTES COMPUT SC, V6887, P298, DOI 10.1007/978-3-642-23702-7_23
   Suter P, 2010, POPL'10: PROCEEDINGS OF THE 37TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P199, DOI 10.1145/1706299.1706325
   Tamaki H., 1984, P 2 INT LOG PROGR C, P127
   Pham TH, 2016, J AUTOM REASONING, V57, P281, DOI 10.1007/s10817-016-9368-2
   Unno H, 2017, LECT NOTES COMPUT SC, V10427, P571, DOI 10.1007/978-3-319-63390-9_30
   Yang WK, 2019, LECT NOTES COMPUT SC, V11802, P600, DOI 10.1007/978-3-030-30048-7_35
NR 40
TC 3
Z9 3
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2022
VL 22
IS 4
SI SI
BP 555
EP 572
AR PII S1471068422000175
DI 10.1017/S1471068422000175
EA JUL 2022
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 3T5UX
UT WOS:000824978400001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Alfano, G
   Greco, S
   Parisi, F
   Trubitsyna, I
AF Alfano, Gianvincenzo
   Greco, Sergio
   Parisi, Francesco
   Trubitsyna, Irina
TI On the Semantics of Abstract Argumentation Frameworks: A Logic
   Programming Approach
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE abstract argumentation; argumentation semantics; partial stable models
ID EQUIVALENCE; ACCEPTABILITY; SUPPORT
AB Recently there has been an increasing interest in frameworks extending Dung's abstract Argumentation Framework (AF). Popular extensions include bipolar AFs and AFs with recursive attacks and necessary supports. Although the relationships between AF semantics and Partial Stable Models (PSMs) of logic programs has been deeply investigated, this is not the case for more general frameworks extending AF. In this paper we explore the relationships between AF-based frameworks and PSMs. We show that every AF-based framework Delta can be translated into a logic programP(Delta)so that the extensions prescribed by different semantics of Delta coincide with subsets of the PSMs ofP(Delta). We provide a logic programming approach that characterizes, in an elegant and uniform way, the semantics of several AF-based frameworks. This result allows also to define the semantics for new AF-based frameworks, such as AFs with recursive attacks and recursive deductive supports.
C1 [Alfano, Gianvincenzo; Greco, Sergio; Parisi, Francesco; Trubitsyna, Irina] Univ Calabria, DIMES Dept, Arcavacata Di Rende, Italy.
C3 University of Calabria
RP Alfano, G (corresponding author), Univ Calabria, DIMES Dept, Arcavacata Di Rende, Italy.
EM g.alfano@dimes.unical.it; greco@dimes.unical.it;
   fparisi@dimes.unical.it; i.trubitsyna@dimes.unical.it
RI Alfano, Gianvincenzo/ABF-5463-2020
OI Alfano, Gianvincenzo/0000-0002-7280-4759; Greco,
   Sergio/0000-0003-2966-3484
CR Alcântara J, 2019, THEOR PRACT LOG PROG, V19, P941, DOI 10.1017/S1471068419000280
   ALFANO G., 2020, ECAI
   Alfano G, 2018, INTELL ARTIF, V12, P193, DOI 10.3233/IA-180002
   Alfano G, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P49
   Amgoud L, 2011, ANN MATH ARTIF INTEL, V63, P149, DOI 10.1007/s10472-011-9271-9
   Baroni P, 2011, INT J APPROX REASON, V52, P19, DOI 10.1016/j.ijar.2010.05.004
   Bench-Capon TJM, 2007, ARTIF INTELL, V171, P619, DOI 10.1016/j.artint.2007.05.001
   Bistarelli S, 2018, INT J APPROX REASON, V92, P66, DOI 10.1016/j.ijar.2017.10.006
   Bondarenko A, 1997, ARTIF INTELL, V93, P63, DOI 10.1016/S0004-3702(97)00015-5
   Caminada M, 2017, J ARTIF INTELL RES, V60, P779, DOI 10.1613/jair.5581
   Caminada M, 2015, INT J APPROX REASON, V58, P87, DOI 10.1016/j.ijar.2014.12.004
   Cayrol C., 2017, P COMMONSENSE
   Cayrol C, 2018, FRONT ARTIF INTEL AP, V305, P29, DOI 10.3233/978-1-61499-906-5-29
   Cayrol C, 2013, INT J APPROX REASON, V54, P876, DOI 10.1016/j.ijar.2013.03.001
   Cohen A, 2015, J APPL LOGIC, V13, P509, DOI 10.1016/j.jal.2014.12.001
   Cohen A, 2014, KNOWL ENG REV, V29, P513, DOI 10.1017/S0269888913000325
   Craven R, 2016, ARTIF INTELL, V233, P1, DOI 10.1016/j.artint.2015.12.004
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   DUNG PM, 1991, LOGIC PROGRAMM, P3
   Fazzinga B, 2015, ACM T COMPUT LOG, V16, DOI 10.1145/2749463
   Gaggl SA, 2015, THEOR PRACT LOG PROG, V15, P434, DOI 10.1017/S1471068415000149
   Gebser M, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5450
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Gottifredi S, 2018, ARTIF INTELL, V262, P336, DOI 10.1016/j.artint.2018.06.008
   Greco S, 1999, INFORM COMPUT, V153, P81, DOI 10.1006/inco.1999.2800
   Greco S, 2016, LECT NOTES COMPUT SC, V10021, P288, DOI 10.1007/978-3-319-48758-8_19
   Janhunen T, 2006, ACM T COMPUT LOG, V7, P1, DOI 10.1145/1119439.1119440
   Modgil S, 2009, ARTIF INTELL, V173, P901, DOI 10.1016/j.artint.2009.02.001
   Nouioua F, 2011, LECT NOTES ARTIF INT, V6929, P163, DOI 10.1007/978-3-642-23963-2_14
   Rahwan I, 2009, ARGUMENTATION IN ARTIFICIAL INTELLIGENCE, P1, DOI 10.1007/978-0-387-98197-0
   SACCA D, 1990, PROCEEDINGS OF THE NINTH ACM SIGACT-SIGMOD-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P205, DOI 10.1145/298514.298572
   Sacca D, 1997, J COMPUT SYST SCI, V54, P441, DOI 10.1006/jcss.1997.1446
   Sakama C, 2017, FUND INFORM, V155, P261, DOI 10.3233/FI-2017-1585
   Villata S, 2012, ANN MATH ARTIF INTEL, V66, P163, DOI 10.1007/s10472-012-9317-7
   Wu Y., 2009, STUDIA LOGICA, V93, P2
NR 35
TC 11
Z9 11
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2020
VL 20
IS 5
SI SI
BP 703
EP 718
AR PII S1471068420000253
DI 10.1017/S1471068420000253
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR5RA
UT WOS:000571619500009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Baryannis, G
   Tachmazidis, I
   Batsakis, S
   Antoniou, G
   Alviano, M
AF Baryannis, George
   Tachmazidis, Ilias
   Batsakis, Sotiris
   Antoniou, Grigoris
   Alviano, Mario
TI A Generalised Approach for Encoding and Reasoning with Qualitative
   Theories in Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE Answer Set Programming; Qualitative Calculus; Qualitative Reasoning;
   Spatial Reasoning
ID TRAJECTORY CALCULUS
AB Qualitative reasoning involves expressing and deriving knowledge based on qualitative terms such as natural language expressions, rather than strict mathematical quantities. Well over 40 qualitative calculi have been proposed so far, mostly in the spatial and temporal domains, with several practical applications such as naval traffic monitoring, warehouse process optimisation and robot manipulation. Even if a number of specialised qualitative reasoning tools have been developed so far, an important barrier to the wider adoption of these tools is that only qualitative reasoning is supported natively, when real-world problems most often require a combination of qualitative and other forms of reasoning. In this work, we propose to overcome this barrier by using ASP as a unifying formalism to tackle problems that require qualitative reasoning in addition to non-qualitative reasoning. A family of ASP encodings is proposed which can handle any qualitative calculus with binary relations. These encodings are experimentally evaluated using a real-world dataset based on a case study of determining optimal coverage of telecommunication antennas, and compared with the performance of two well-known dedicated reasoners. Experimental results show that the proposed encodings outperform one of the two reasoners, but fall behind the other, an acceptable trade-off given the added benefits of handling any type of reasoning as well as the interpretability of logic programs.
C1 [Baryannis, George; Tachmazidis, Ilias; Batsakis, Sotiris; Antoniou, Grigoris] Univ Huddersfield, Huddersfield, W Yorkshire, England.
   [Alviano, Mario] Univ Calabria, Commenda Di Rende, Italy.
C3 University of Huddersfield; University of Calabria
RP Baryannis, G (corresponding author), Univ Huddersfield, Huddersfield, W Yorkshire, England.
EM g.bargiannis@hud.ac.uk; i.tachmazidis@hud.ac.uk; s.batsakis@hud.ac.uk;
   g.antoniou@hud.ac.uk; alviano@mat.unical.it
RI Alviano, Mario/H-1355-2012; Baryannis, George/P-5884-2014
OI Baryannis, George/0000-0002-2118-5812
CR [Anonymous], 2016, OPENACCESS SERIES IN
   [Anonymous], 1981, IJCAI
   BARYANNIS G., 2020, GEN APPROACH ENCODIN
   Baryannis G, 2018, THEOR PRACT LOG PROG, V18, P355, DOI 10.1017/S147106841800011X
   Batsakis S, 2017, INT J ARTIF INTELL T, V26, DOI 10.1142/S0218213017600156
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   CLEMENTINI E, 1995, INFORM SCI-APPL, V3, P149, DOI 10.1016/1069-0115(94)00033-X
   Dylla F, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3038927
   FREKSA C, 1992, 1992 IEEE INTERNATIONAL CONFERENCE ON SYSTEMS, MAN, AND CYBERNETICS, VOLS 1 AND 2, P261, DOI 10.1109/ICSMC.1992.271766
   Gebser M., 2016, TECHNICAL COMMUNICAT, DOI [10.4230/OASIcs.ICLP.2016.2, DOI 10.4230/OASICS.ICLP.2016.2]
   Horwitz Jeremy, 2019, The definitive guide to 5G low, mid, and high band speeds
   Huang JB, 2013, ARTIF INTELL, V195, P140, DOI 10.1016/j.artint.2012.09.009
   Izmirlioglu Y, 2018, AAAI CONF ARTIF INTE, P1880
   Kreutzmann A, 2013, TRANSNAV, V7, P161, DOI 10.12716/1001.07.02.01
   LI J. J., 2010, AAAI
   Li JJ, 2012, PROC INT C TOOLS ART, P603, DOI 10.1109/ICTAI.2012.87
   Navarrete I, 2013, ANN MATH ARTIF INTEL, V67, P31, DOI 10.1007/s10472-012-9327-5
   Nordrum A., 2017, IEEE Spectrum
   Pham DN, 2008, ARTIF INTELL, V172, P1752, DOI 10.1016/j.artint.2008.06.003
   Randell D. A., 1992, Principles of Knowledge Representation and Reasoning: Proceedings of the Third International Conference (KR '92), P165
   Renz J, 2007, HANDBOOK OF SPATIAL LOGICS, P161, DOI 10.1007/978-1-4020-5587-4_4
   Skiadopoulos S, 2005, ARTIF INTELL, V163, P91, DOI 10.1016/j.artint.2004.10.010
   Van de Weghe N, 2005, LECT NOTES COMPUT SC, V3799, P60
   vanBeek P, 1996, J ARTIF INTELL RES, V4, P1
   Westphal M., 2009, AAAI Spring Symposium: Benchmarking of Qualitative Spatial and Temporal Reasoning Systems, P51
   Wolter D., 2012, QUALITATIVE SPATIO T, P336, DOI 10.4018/978-1-61692-868-1.ch011
   Wolter D, 2015, ROBOTICS, V4, P253, DOI 10.3390/robotics4030253
NR 27
TC 4
Z9 4
U1 1
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2020
VL 20
IS 5
SI SI
BP 687
EP 702
AR PII S1471068420000198
DI 10.1017/S1471068420000198
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR5RA
UT WOS:000571619500008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Calimeri, F
   Faber, W
   Gebser, M
   Ianni, G
   Kaminski, R
   Krennwallner, T
   Leone, N
   Maratea, M
   Ricca, F
   Schaub, T
AF Calimeri, Francesco
   Faber, Wolfgang
   Gebser, Martin
   Ianni, Giovambattista
   Kaminski, Roland
   Krennwallner, Thomas
   Leone, Nicola
   Maratea, Marco
   Ricca, Francesco
   Schaub, Torsten
TI ASP-Core-2 Input Language Format
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Answer Set Programming; standard language; knowledge representation and
   reasoning; standardization
ID LOGIC PROGRAMS; ANSWER; SEMANTICS; AGGREGATION; SETS
AB Standardization of solver input languages has been a main driver for the growth of several areas within knowledge representation and reasoning, fostering the exploitation in actual applications. In this document, we present theASP-CORE-2standard input language for Answer Set Programming, which has been adopted in ASP Competition events since 2013.
C1 [Calimeri, Francesco; Ianni, Giovambattista; Leone, Nicola; Ricca, Francesco] Univ Calabria, DeMaCS, Arcavacata Di Rende, Italy.
   [Faber, Wolfgang; Gebser, Martin] Alpen Adria Univ, Inst Angew Informat, Klagenfurt, Austria.
   [Kaminski, Roland; Schaub, Torsten] Univ Potsdam, Inst Comp Sci, Potsdam, Germany.
   [Krennwallner, Thomas] XIMES GmbH, Vienna, Austria.
   [Maratea, Marco] Univ Genoa, DIBRIS, Genoa, Italy.
C3 University of Calabria; University of Klagenfurt; University of Potsdam;
   University of Genoa
RP Calimeri, F (corresponding author), Univ Calabria, DeMaCS, Arcavacata Di Rende, Italy.
EM calimeri@mat.unical.it; Wolfgang.Faber@aau.at; Martin.Gebser@aau.at;
   ianni@mat.unical.it; kaminski@cs.uni-potsdam.de; tk@postsubmeta.net;
   leone@mat.unical.it; marco@dibris.unige.it; ricca@mat.unical.it;
   schaub@cs.uni-potsdam.de
RI Ianni, Giovambattista/I-7826-2012; Calimeri, Francesco/J-1935-2012;
   Ianni, Giovambattista/IQS-4399-2023; Schaub, Torsten/O-5873-2019;
   Maratea, Marco/AAR-5779-2020; Gebser, Martin/B-7169-2018; Leone,
   Nicola/B-1890-2012; Kaminski, Roland/HMD-8407-2023; Faber,
   Wolfgang/H-2316-2012
OI Calimeri, Francesco/0000-0002-0866-0834; Ianni,
   Giovambattista/0000-0003-0534-6425; Schaub, Torsten/0000-0002-7456-041X;
   Kaminski, Roland/0000-0002-1361-6045; Gebser,
   Martin/0000-0002-8010-4752; Faber, Wolfgang/0000-0002-0330-5868
CR Abiteboul S, 1995, FDN DATABASES
   ALVIANO M., 2015, THEOR PRACT LOG PROG, V15, P4
   Alviano M, 2011, J ARTIF INTELL RES, V42, P487
   [Anonymous], 2011, 3 ASP COMPETITION FI
   Brain M., 2007, CEUR WORKSHOP P, V281
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   Calimeri F, 2014, THEOR PRACT LOG PROG, V14, P117, DOI 10.1017/S1471068412000105
   Calimeri F, 2011, AI COMMUN, V24, P311, DOI 10.3233/AIC-2011-0509
   Dell'Armi T., 2003, P ASP03 ANSW SET PRO, P274
   Denecker M., 2001, P 17 INT C LOG PROGR, P212
   Derler Y, 2016, AI MAG, V37, P45
   Erdem E, 2016, AI MAG, V37, P53, DOI 10.1609/aimag.v37i3.2678
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   GEBSER M., 2015, THEOR PRACT LOG PROG, V15, P4
   Gebser M., 2016, TECHNICAL COMMUNICAT, DOI [10.4230/OASIcs.ICLP.2016.2, DOI 10.4230/OASICS.ICLP.2016.2]
   Gebser M, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5450
   Gebser M, 2018, THEOR PRACT LOG PROG, V18, P520, DOI 10.1017/S1471068418000182
   Gebser M, 2017, J ARTIF INTELL RES, V60, P41, DOI 10.1613/jair.5373
   Gebser M, 2017, LECT NOTES ARTIF INT, V10377, P3, DOI 10.1007/978-3-319-61660-5_1
   Gelfond M, 2002, LECT NOTES ARTIF INT, V2408, P413
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 2014, THEOR PRACT LOG PROG, V14, P4
   Harrison A., 2018, P 17 INT WORKSH NONM, P99
   KEMP DB, 1991, LOGIC PROGRAMM, P387
   Krennwallner T., 2013, ASP COMPETITION OUTP
   Leone N, 2015, LECT NOTES COMPUT SC, V9203, P308, DOI 10.1007/978-3-319-21768-0_10
   Osorio M, 1999, NEW GENERAT COMPUT, V17, P255, DOI 10.1007/BF03037222
   Pelov N, 2004, LECT NOTES ARTIF INT, V2923, P207
   Pelov N., 2004, THESIS KU LEUVEN
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Pelov Nikolay, 2004, P NMR 04, P327
   Ross KA, 1997, J COMPUT SYST SCI, V54, P79, DOI 10.1006/jcss.1997.1453
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Van Gelder A., 1992, Proceedings of the Eleventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P127, DOI 10.1145/137097.137854
NR 37
TC 92
Z9 94
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2020
VL 20
IS 2
BP 294
EP 309
AR PII S1471068419000450
DI 10.1017/S1471068419000450
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA OC6NY
UT WOS:000579274100006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dimopoulos, Y
   Gebser, M
   Lühne, P
   Romero, J
   Schaub, T
AF Dimopoulos, Yannis
   Gebser, Martin
   Luehne, Patrick
   Romero, Javier
   Schaub, Torsten
TI plasp 3: Towards Effective ASP Planning
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE knowledge representation and nonmonotonic reasoning; technical notes and
   rapid communications; answer set programming; automated planning; action
   and change
ID ANSWER; SATISFIABILITY
AB We describe the new version of the Planning Domain Definition Language (PDDL)-to-Answer Set Programming (ASP) translator plasp. First, it widens the range of accepted PDDL features. Second, it contains novel planning encodings, some inspired by Satisfiability Testing (SAT) planning and others exploiting ASP features such as well-foundedness. All of them are designed for handling multivalued fluents in order to capture both PDDL as well as SAS planning formats. Third, enabled by multishot ASP solving, it offers advanced planning algorithms also borrowed from SAT planning. As a result, plasp provides us with an ASP-based framework for studying a variety of planning techniques in a uniform setting. Finally, we demonstrate in an empirical analysis that these techniques have a significant impact on the performance of ASP planning.
C1 [Dimopoulos, Yannis] Univ Cyprus, Nicosia, Cyprus.
   [Gebser, Martin] Univ Klagenfurt, Klagenfurt, Austria.
   [Gebser, Martin] Graz Univ Technol, Graz, Austria.
   [Gebser, Martin; Luehne, Patrick; Romero, Javier; Schaub, Torsten] Univ Potsdam, Potsdam, Germany.
   [Schaub, Torsten] INRIA Rennes, Rennes, France.
C3 University of Cyprus; University of Klagenfurt; Graz University of
   Technology; University of Potsdam; Universite de Rennes
RP Dimopoulos, Y (corresponding author), Univ Cyprus, Nicosia, Cyprus.
EM yannis@cs.ucy.ac.cy; martin.gebser@aau.at;
   patrick.luehne@cs.uni-potsdam.de; javier@cs.uni-potsdam.de;
   torsten@cs.uni-potsdam.de
RI Schaub, Torsten/O-5873-2019; Gebser, Martin/B-7169-2018; Romero,
   Javier/HLV-8880-2023
OI Schaub, Torsten/0000-0002-7456-041X; Romero, Javier/0000-0001-5546-9939;
   Gebser, Martin/0000-0002-8010-4752
FU DFG [SCHA 550/9]; KWF [28472]; cms electronics GmbH; FunderMax GmbH;
   Hirsch Armbander GmbH; IT GmbH; Infineon Technologies Austria AG;
   Isovolta AG; Kostwein Holding GmbH; Privatstiftung Karntner Sparkasse
FX This work was partially funded by DFG grant SCHA 550/9. The second
   author was supported by KWF project 28472, cms electronics GmbH,
   FunderMax GmbH, Hirsch Armbander GmbH, incubed IT GmbH, Infineon
   Technologies Austria AG, Isovolta AG, Kostwein Holding GmbH, and
   Privatstiftung Karntner Sparkasse. We are grateful to the anonymous
   reviewers for their helpful comments.
CR Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P42, DOI 10.1007/978-3-642-40564-8_5
   [Anonymous], 1968, ZAPISKI NAUCHNYH SEM
   Apt K., 1987, F DEDUCTIVE DATABASE, P89
   Baral C, 2000, SPRINGER INT SER ENG, V597, P257
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Bomanson J, 2016, FUND INFORM, V147, P63, DOI 10.3233/FI-2016-1398
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   CIMATTI A., 2008, AUTOMATED PLANNING, P841
   Dimopoulos Y., 1997, Recent Advances in AI Planning. 4th European Conference on Planning, ECP'97 Proceedings, P169, DOI 10.1007/3-540-63912-8_84
   Dimopoulos Y, 2017, LECT NOTES ARTIF INT, V10377, P286, DOI 10.1007/978-3-319-61660-5_26
   EDELKAMP S., 2004, 195 U FREIB I INF
   Eiter T, 2006, THEOR PRACT LOG PROG, V6, P23, DOI 10.1017/S1471068405002577
   Fisher M, 2008, FOUND ARTIF INTELL, P513, DOI 10.1016/S1574-6526(07)03012-X
   Gebser M., 2016, TECHNICAL COMMUNICAT, DOI [10.4230/OASIcs.ICLP.2016.2, DOI 10.4230/OASICS.ICLP.2016.2]
   Gebser M., 2013, PROC AAAI, P350, DOI 10.1609/aaai.v27i1.8585
   GEBSER M., 2017, POTASSCO USER GUIDE
   Gebser M, 2017, J ARTIF INTELL RES, V60, P41, DOI 10.1613/jair.5373
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P358
   Gebser M, 2011, AI COMMUN, V24, P195, DOI 10.3233/AIC-2011-0496
   Gelfond M., 1998, ELECT T ARTIFICIAL I, V2, P193
   GELFOND M., 2013, J APPL NONCLASSICAL, V23, P259
   Giunchiglia E, 2004, ARTIF INTELL, V153, P49, DOI [10.1016/j.artint.2002.12.001, 10.1016/j.artint.2003.12.001]
   Helmert M, 2006, J ARTIF INTELL RES, V26, P191, DOI 10.1613/jair.1705
   IPC, 2014, HOM 8 INT PLANN COMP
   Kautz H, 1996, MOR KAUF R, P374
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   LOVE N, 2008, LG200601 STANF U
   MCDERMOTT D, 1998, TR98003 CVC
   Miura S, 2017, P I C AUTOMAT PLAN S, P218
   Rintanen J, 2006, ARTIF INTELL, V170, P1031, DOI 10.1016/j.artint.2006.08.002
   Rintanen J, 2012, ARTIF INTELL, V193, P45, DOI 10.1016/j.artint.2012.08.001
   Rintanen Jussi., 2014, 8th International Planning Competition (IPC-2014), P66
   Son TC, 2006, ACM T COMPUT LOG, V7, P613, DOI 10.1145/1183278.1183279
   Thielscher M, 2009, LECT NOTES COMPUT SC, V5649, P327, DOI 10.1007/978-3-642-02846-5_28
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   VanHarmelen F, 2008, FOUND ARTIF INTELL, P1
   Wehrle M, 2007, LECT NOTES COMPUT SC, V4830, P244
NR 37
TC 8
Z9 8
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2019
VL 19
IS 3
BP 477
EP 504
DI 10.1017/S1471068418000583
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA HR0WQ
UT WOS:000462850000004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dahlem, M
   Bhagyanath, A
   Schneider, K
AF Dahlem, Marc
   Bhagyanath, Anoop
   Schneider, Klaus
TI Optimal Scheduling for Exposed Datapath Architectures with Buffered
   Processing Units by ASP
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
DE Answer Set Programming; Exposed Datapath Architectures; Optimal
   Scheduling; Code Generation
ID OPTIMAL CODE; ANSWER; GENERATION
AB Conventional processor architectures are restricted in exploiting instruction level parallelism (ILP) due to the relatively low number of programmer-visible registers. Therefore, more recent processor architectures expose their datapaths so that the compiler (1) can schedule parallel instructions to different processing units and (2) can make effective use of local storage of the processing units. Among these architectures, the Synchronous Control Asynchronous Dataflow (SCAD) architecture is a new exposed datapath architecture whose processing units are equipped with first-in first-out (FIFO) buffers at their input and output ports.
   In contrast to register-based machines, the optimal code generation for SCAD is still a matter of research. In particular, SAT and SMT solvers were used to generate optimal resource constrained and optimal time constrained schedules for SCAD, respectively. As Answer Set Programming (ASP) offers better flexibility in handling such scheduling problems, we focus in this paper on using an answer set solver for both resource and time constrained optimal SCAD code generation. As a major benefit of using ASP, we are able to generate all optimal schedules for a given program which allows one to study their properties. Furthermore, the experimental results of this paper demonstrate that the answer set solver can compete with SAT solvers and outperforms SMT solvers. This paper is under consideration for acceptance in TPLP.
C1 [Dahlem, Marc] Insiders Technol GmbH, Kaiserslautern, Germany.
   [Bhagyanath, Anoop; Schneider, Klaus] Univ Kaiserslautern, Dept Comp Sci, Kaiserslautern, Germany.
C3 University of Kaiserslautern
RP Dahlem, M (corresponding author), Insiders Technol GmbH, Kaiserslautern, Germany.
CR Äijö T, 2016, ACM T ARCHIT CODE OP, V12, DOI 10.1145/2845082
   Aletà A, 2007, INT SYM CODE GENER, P354
   ANDLER A., LNCS, V111, P37
   Andres B, 2013, LECT NOTES COMPUT SC, V8148, P79, DOI 10.1007/978-3-642-40564-8_9
   Balduccini M, 2011, LECT NOTES ARTIF INT, V6645, P284
   Bhagyanath A., 2016, P METH BESCHR MOD VE, P77
   Bhagyanath A, 2017, INT CONF APPL CONCUR, P106, DOI 10.1109/ACSD.2017.20
   Bhagyanath A, 2016, 2016 ACM/IEEE INTERNATIONAL CONFERENCE ON FORMAL METHODS AND MODELS FOR SYSTEM DESIGN (MEMOCODE), P143, DOI 10.1109/MEMCOD.2016.7797759
   Brain M, 2006, LECT NOTES COMPUT SC, V4079, P270, DOI 10.1007/11799573_21
   Brewka Gerhard., 2003, IJCAI, P867
   Crick T, 2009, LECT NOTES COMPUT SC, V5753, P554, DOI 10.1007/978-3-642-04238-6_57
   DE ANGELIS E., 2012, FUNDAMENTA INFORM, V120, P3
   Dodaro C, 2017, LECT NOTES ARTIF INT, V10377, P301, DOI 10.1007/978-3-319-61660-5_27
   Feller M., 1981, CONPAR 81, V111, P37
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P260, DOI 10.1007/978-3-540-72200-7_23
   Guo J, 2006, LECT NOTES COMPUT SC, V4128, P299
   Ishebabi H, 2009, LECT NOTES COMPUT SC, V5753, P598, DOI 10.1007/978-3-642-04238-6_64
   Kumar V, 2009, LECT NOTES COMPUT SC, V5753, P604, DOI 10.1007/978-3-642-04238-6_65
   Lee W, 1998, ACM SIGPLAN NOTICES, V33, P46, DOI 10.1145/291006.291018
   Schilling T, 2009, IEEE COMP SOC ANN, P151, DOI 10.1109/ISVLSI.2009.6
   Schmit H, 2002, ANN IEEE SYM FIELD P, P152, DOI 10.1109/FPGA.2002.1106670
   SETHI R, 1970, J ACM, V17, P715, DOI 10.1145/321607.321620
   Smith A, 2006, INT SYM CODE GENER, P185
NR 23
TC 3
Z9 3
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 438
EP 451
DI 10.1017/S1471068418000170
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400010
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Schwitter, R
AF Schwitter, Rolf
TI Specifying and Verbalising Answer Set Programs in Controlled Natural
   Language
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
DE Bi-directional grammars; controlled natural languages; answer set
   programming; sentence planning; executable specifications
ID GRAMMAR
AB We show how a bi-directional grammar can be used to specify and verbalise answer set programs in controlled natural language. We start from a program specification in controlled natural language and translate this specification automatically into an executable answer set program. The resulting answer set program can be modified following certain naming conventions and the revised version of the program can then be verbalised in the same subset of natural language that was used as specification language. The bi-directional grammar is parametrised for processing and generation, deals with referring expressions, and exploits symmetries in the data structure of the grammar rules whenever these grammar rules need to be duplicated. We demonstrate that verbalisation requires sentence planning in order to aggregate similar structures with the aim to improve the readability of the generated specification. Without modifications, the generated specification is always semantically equivalent to the original one; our bi-directional grammar is the first one that allows for semantic round-tripping in the context of controlled natural language processing.
C1 [Schwitter, Rolf] Macquarie Univ, Dept Comp, Sydney, NSW 2109, Australia.
C3 Macquarie University
RP Schwitter, R (corresponding author), Macquarie Univ, Dept Comp, Sydney, NSW 2109, Australia.
EM Rolf.Schwitter@mq.edu.au
OI Schwitter, Rolf/0000-0001-8998-7005
CR [Anonymous], 2015, S LOG FORM COMM REAS
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Baral Chitta, 2011, P 9 INT C COMP SEM, P35
   Clark P., 2005, FLAIRS Conference, P506
   Demirel E, 2016, LECT NOTES COMPUT SC, V9767, P111, DOI 10.1007/978-3-319-41498-0_11
   Erdem E., 2009, P WORKSH BIONLP, P117
   Erdem E, 2015, THEOR PRACT LOG PROG, V15, P35, DOI 10.1017/S1471068413000598
   Fuchs NE, 2008, LECT NOTES COMPUT SC, V5224, P104
   Gebser M., 2012, Answer Set Solving in Practice
   GEBSER M., 2017, POTASSCO USER GUIDE
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Geurts Bart, 2015, STANFORD ENCY PHILOS
   Guy SC, 2017, LANG RESOUR EVAL, V51, P67, DOI 10.1007/s10579-016-9338-7
   HORACEK H., 2015, LINGUISTIC COMMUNICA
   Kamp H., 1993, From Discourse to Logic: Introduction to Modeltheoretic Semantics of Natural Language, Formal Logic and Discourse Representation Theory
   Kuhn T, 2007, LECT NOTES COMPUT SC, V4524, P299
   Lierler Y., 2012, Correct Reasoning, P436
   Lifschitz V., 2008, P AAAI C ART INT, P1594
   PEREIRA FCN, 1980, ARTIF INTELL, V13, P231, DOI 10.1016/0004-3702(80)90003-X
   Pereira Fernando C. N., 1987, Prolog and Natural-Language Analysis
   Reiter Ehud, 2000, STUDIES NATURAL LANG
   Schüller P, 2014, FOURTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P358
   Schüller P, 2013, LECT NOTES COMPUT SC, V8148, P499, DOI 10.1007/978-3-642-40564-8_49
   Schwitter R, 2008, LECT NOTES ARTIF INT, V5360, P168, DOI 10.1007/978-3-540-89378-3_17
   Sowa J. F., 2004, COMMON LOGIC CONTROL
   Sterling L. S., 1994, The Art of Prolog, V2nd
   TARI L., 2005, AAAI SPRING S WORKSH
   Vo NH, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P899
NR 28
TC 6
Z9 6
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 691
EP 705
DI 10.1017/S1471068418000327
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400025
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Zaniolo, C
   Yang, M
   Das, A
   Shkapsky, A
   Condie, T
   Interlandi, M
AF Zaniolo, Carlo
   Yang, Mohan
   Das, Ariyam
   Shkapsky, Alexander
   Condie, Tyson
   Interlandi, Matteo
TI Fixpoint semantics and optimization of recursive Datalog programs with
   aggregates
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming colocated with the
   23rd International Conference on Principles and Practice of Constraint
   Programming / 20th International Conference on Theory and Applications
   of Satisfiability Testing
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google
DE Datalog; Constraints; Recursion; Aggregates
ID DEDUCTIVE DATABASES; LOGIC PROGRAMS; QUERIES; SYSTEM
AB A very desirable Datalog extension investigated by many researchers in the last 30 years consists in allowing the use of the basic SQL aggregates min, max, count and sum in recursive rules. In this paper, we propose a simple comprehensive solution that extends the declarative least-fixpoint semantics of Horn Clauses, along with the optimization techniques used in the bottom-up implementation approach adopted by many Datalog systems. We start by identifying a large class of programs of great practical interest in which the use of min or max in recursive rules does not compromise the declarative fixpoint semantics of the programs using those rules. Then, we revisit the monotonic versions of count and sum aggregates proposed by Mazuran et al. (2013b, The VLDB Journal 22, 4, 471-493) and named, respectively, mcount and msum. Since mcount, and also msum on positive numbers, are monotonic in the lattice of set-containment, they preserve the fixpoint semantics of Horn Clauses. However, in many applications of practical interest, their use can lead to inefficiencies, that can be eliminated by combining them with max, whereby mcount and msum become the standard count and sum. Therefore, the semantics and optimization techniques of Datalog are extended to recursive programs with min, max, count and sum, making possible the advanced applications of superior performance and scalability demonstrated by BigDatalog (Shkapsky et al. 2016. In SIGMOD. ACM, 1135-1149) and Datalog-MC (Yang et al. 2017. The VLDB Journal 26, 2, 229-248).
C1 [Zaniolo, Carlo; Yang, Mohan; Das, Ariyam; Shkapsky, Alexander; Condie, Tyson] Univ Calif Los Angeles, Los Angeles, CA 90095 USA.
   [Interlandi, Matteo] Microsoft, Redmond, WA USA.
C3 University of California System; University of California Los Angeles;
   Microsoft
RP Zaniolo, C (corresponding author), Univ Calif Los Angeles, Los Angeles, CA 90095 USA.
EM zaniolo@cs.ucla.edu; yang@cs.ucla.edu; ariyam@cs.ucla.edu;
   shkapsky@cs.ucla.edu; tcondie@cs.ucla.edu;
   matteo.interlandi@microsoft.com
FU NSF [IIS-1218471, IIS-1302698, CNS-1351047]; NIH Big Data to Knowledge
   (BD2K) [U54EB020404]
FX This work was supported in part by NSF grants IIS-1218471, IIS-1302698
   and CNS-1351047 and U54EB020404 awarded by NIH Big Data to Knowledge
   (BD2K).
CR Aref M, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1371, DOI 10.1145/2723372.2742796
   Arni F, 2003, THEOR PRACT LOG PROG, V3, P61, DOI 10.1017/S1471068402001515
   Chimenti Danette., 1987, IEEE Data Eng. Bull, V10, P52
   Condie T., 2017, 170012 UCLA CSD
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Furfaro F, 2002, INFORM SYST, V27, P321, DOI 10.1016/S0306-4379(02)00006-6
   GANGULY S, 1995, J COMPUT SYST SCI, V51, P244, DOI 10.1006/jcss.1995.1064
   Gelfond M., 2014, THEOR PRACT LOG PROG, V14, P4
   Gelfond M, 2014, THEOR PRACT LOG PROG, V14, P587, DOI 10.1017/S1471068414000222
   Greco S., 1992, Proceedings of the Eleventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P105, DOI 10.1145/137097.137836
   Kemp D., 1989, N AM C LOG PROGR, P981
   KEMP DB, 1991, LOGIC PROGRAMM, P387
   Liu YHA, 2012, ACM SIGPLAN NOTICES, V47, P395, DOI 10.1145/2398857.2384645
   Mazuran M., 2013, THEOR PRACT LOG PROG, V13, P4
   Mazuran M, 2013, THEOR PRACT LOG PROG, V13, P609, DOI 10.1017/S1471068413000380
   Mazuran M, 2013, VLDB J, V22, P471, DOI 10.1007/s00778-012-0299-1
   MORRIS K, 1986, LECT NOTES COMPUT SC, V225, P554
   Mumick I. S., 1995, ANN MATH ARTIFICIAL, V15, P3
   MUMICK IS, 1990, VERY LARGE DATA BASES, P264
   Mumick IS, 1995, ANN MATH ARTIF INTEL, V15, P407, DOI 10.1007/BF01536403
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Przymusinski T. C., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1081
   Ramakrishnan R., 1992, Very Large Data Bases. VLDB '92. Proceedings of the 18th International Conference on Very Large Data Bases, P238
   Ross K. A., 1992, Proceedings of the Eleventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P114, DOI 10.1145/137097.137852
   Seo J, 2013, PROC VLDB ENDOW, V6, P1906, DOI 10.14778/2556549.2556572
   Shkapsky A, 2016, SIGMOD'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1135, DOI 10.1145/2882903.2915229
   Shkapsky A, 2013, PROC VLDB ENDOW, V6, P1258, DOI 10.14778/2536274.2536290
   Shkapsky A, 2015, PROC INT CONF DATA, P867, DOI 10.1109/ICDE.2015.7113340
   Son TC, 2007, THEOR PRACT LOG PROG, V7, P355, DOI 10.1017/S1471068406002936
   Srivastava Divesh., 1992, Journal of Logic Programming, P301
   SUDARSHAN S, 1991, PROC INT CONF VERY L, P501
   Swift T, 2010, LECT NOTES ARTIF INT, V6341, P300, DOI 10.1007/978-3-642-15675-5_26
   Vaghani Jayen., 1994, VLDB J, V3, P245
   Van Gelder A., 1993, Deductive and Object-Oriented Databases. Third International Conference, DOOD '93. Proceedings, P13
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   Wang JJ, 2015, PROC VLDB ENDOW, V8, P1542
   Yang M., 2015, TECHN COMM ICLP
   Yang MH, 2017, VLDB J, V26, P229, DOI 10.1007/s00778-016-0448-z
   Yang MH, 2014, IEEE INT CONF BIG DA, P251, DOI 10.1109/BigData.2014.7004240
   Zaniolo C., 1997, ADV DATABASE SYSTEMS
   Zhou N.-F., 2015, THEOR PRACT LOG PROG, V15, P4
   Zhou NF, 2015, THEOR PRACT LOG PROG, V15, P543, DOI 10.1017/S1471068415000216
   Zhou NF, 2010, PROC INT C TOOLS ART, P213, DOI 10.1109/ICTAI.2010.103
NR 43
TC 29
Z9 37
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 1048
EP 1065
DI 10.1017/S1471068417000436
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800022
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lierler, Y
   Susman, B
AF Lierler, Yuliya
   Susman, Benjamin
TI On relation between constraint answer set programming and satisfiability
   modulo theories
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE constraint answer set programming; constraint satisfaction processing;
   satisfiability modulo theories
ID LANGUAGE; ASP
AB Constraint answer set programming is a promising research direction that integrates answer set programming with constraint processing. It is often informally related to the field of satisfiability modulo theories. Yet, the exact formal link is obscured as the terminology and concepts used in these two research areas differ. In this paper, we connect these two research areas by uncovering the precise formal relation between them. We believe that this work will boost the cross-fertilization of the theoretical foundations and the existing solving methods in both areas. As a step in this direction, we provide a translation from constraint answer set programs with integer linear constraints to satisfiability modulo linear integer arithmetic that paves the way to utilizing modern satisfiability modulo theories solvers for computing answer sets of constraint answer set programs.
C1 [Lierler, Yuliya; Susman, Benjamin] Univ Nebraska Omaha, Dept Comp Sci, Omaha, NE 68182 USA.
C3 University of Nebraska System; University of Nebraska Omaha
RP Lierler, Y (corresponding author), Univ Nebraska Omaha, Dept Comp Sci, Omaha, NE 68182 USA.
EM ylierler@unomaha.edu; bsusman@unomaha.edu
CR [Anonymous], 2015, TECHNICAL REPORT
   Balduccini M., 2017, THEORY PRACTICE LOGI
   Balduccini M, 2013, THEOR PRACT LOG PROG, V13, P547, DOI 10.1017/S1471068413000343
   Barrett C., 2008, HDB SATISFIABILITY, P737
   Barrett C.W., 2011, LECT NOTES COMPUTER, V6806
   Barrett Clark., 2014, Handbook of Model Checking
   Bartholomew M., 2012, P INT C PRINC KNOWL
   Bomanson Jori, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P143, DOI 10.1007/978-3-319-23264-5_13
   Calimeri F, 2008, LECT NOTES COMPUT SC, V5366, P407, DOI 10.1007/978-3-540-89982-2_37
   Carlsson Mats., 2014, Sicstus PROLOG User's Manual 4.3
   Clark K. L., 1978, Logic and data bases, P293
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Denecker M, 2007, LECT NOTES COMPUT SC, V4483, P84, DOI 10.1007/978-3-540-72200-7_9
   Eiter T, 2012, THEOR PRACT LOG PROG, V12, P659, DOI 10.1017/S1471068412000233
   Elkabani I, 2004, LECT NOTES COMPUT SC, V3132, P73, DOI 10.1007/978-3-540-27775-0_6
   Erdem E., 2001, Logic Programming. 17th International Conference, ICLP 2001. Proceedings (Lecture Notes in Computer Science Vol.2237), P242
   Fages F., 1994, Methods of Logic in Computer Science, V1, P51
   Ferraris P, 2005, THEOR PRACT LOG PROG, V5, P45, DOI 10.1017/S1471068403001923
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Gebser M, 2014, LECT NOTES ARTIF INT, V8761, P137, DOI 10.1007/978-3-319-11558-0_10
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P235, DOI 10.1007/978-3-642-02846-5_22
   Gelfond M, 1996, INT J SOFTW ENG KNOW, V6, P89, DOI 10.1142/S0218194096000053
   IBM, 2009, IBM ILOG AMPL VERS 1
   Janhunen T., 2011, P 1 WORKSH GROUND TR
   King T, 2014, 2014 FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD), P139, DOI 10.1109/FMCAD.2014.6987606
   Lee Joohyung., 2013, P 23 INT JOINT C ART
   Lierler Y., 2011, P THEOR PRACT LOG PR
   Lierler Y, 2014, ARTIF INTELL, V207, P1, DOI 10.1016/j.artint.2013.10.004
   Lierler Yuliya, 2016, P 25 INT JOINT C ART, P1181
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V., 2012, P INT C PRINC KNOWL
   Liu G., 2012, P 13 INT C PRINC KNO
   Marriott K., 1998, PROGRAMMING CONSTRAI
   Mellarkod VS, 2008, ANN MATH ARTIF INTEL, V53, P251, DOI 10.1007/s10472-009-9116-y
   Niemelä I, 2000, SPRINGER INT SER ENG, V597, P491
   Niemelä I, 2008, ANN MATH ARTIF INTEL, V53, P313, DOI 10.1007/s10472-009-9118-9
   Nieuwenhuis R., 2005, LECT NOTES COMPUTER, V3576
   Oikarinen E, 2006, FRONT ARTIF INTEL AP, V141, P412
   Susman B., 2016, P 32 INT C LOG PROGR
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
   Zhou NF, 2012, THEOR PRACT LOG PROG, V12, P189, DOI 10.1017/S1471068411000445
NR 41
TC 5
Z9 5
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2017
VL 17
IS 4
BP 559
EP 590
DI 10.1017/S1471068417000114
PG 32
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA FC7RG
UT WOS:000407039000006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Vandenbroucke, A
   Piróg, M
   Desouter, B
   Schrijvers, T
AF Vandenbroucke, Alexander
   Pirog, Maciej
   Desouter, Benoit
   Schrijvers, Tom
TI Tabling with Sound Answer Subsumption
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
DE tabling; answer subsumption; lattice; partial order; mode-directed
   tabling; denotational semantics; Prolog
ID PROLOG
AB Tabling is a powerful resolution mechanism for logic programs that captures their least fixed point semantics more faithfully than plain Prolog. In many tabling applications, we are not interested in the set of all answers to a goal, but only require an aggregation of those answers. Several works have studied efficient techniques, such as lattice-based answer subsumption and mode-directed tabling, to do so for various forms of aggregation.
   While much attention has been paid to expressivity and efficient implementation of the different approaches, soundness has not been considered. This paper shows that the different implementations indeed fail to produce least fixed points for some programs. As a remedy, we provide a formal framework that generalises the existing approaches and we establish a soundness criterion that explains for which programs the approach is sound.
C1 [Vandenbroucke, Alexander; Pirog, Maciej; Schrijvers, Tom] Katholieke Univ Leuven, Leuven, Belgium.
   [Desouter, Benoit] Univ Ghent, B-9000 Ghent, Belgium.
C3 KU Leuven; Ghent University
RP Vandenbroucke, A (corresponding author), Katholieke Univ Leuven, Leuven, Belgium.
EM alexander.vandenbroucke@kuleuven.be; maciej.pirog@kuleuven.be;
   benoit.desouter@ugent.be; tom.schrijvers@kuleuven.be
RI Schrijvers, Tom/A-6696-2016
OI Schrijvers, Tom/0000-0001-8771-5559; Pirog, Maciej/0000-0002-5889-3388
CR Abramsky S., 1987, ABSTRACT INTERPRETAT, V1, P63
   [Anonymous], 2000, LNCS, V2297, P89
   [Anonymous], 1991, Greedoids. Algorithms and Combinatorics
   Apt K. R., 1988, THEORY DECLARATIVE K
   Costa VS, 2012, THEOR PRACT LOG PROG, V12, P5, DOI 10.1017/S1471068411000512
   COUSOT P, 1992, THE JOURNAL OF LOGIC, V2, P103
   de Guzmán PC, 2008, LECT NOTES COMPUT SC, V4902, P197
   Guo HF, 2008, SOFTWARE PRACT EXPER, V38, P75, DOI 10.1002/spe.824
   Guo HF, 2004, LECT NOTES COMPUT SC, V3057, P163
   Lloyd J. W., 1984, Foundations of Logic Programming
   MacNeille HM, 1937, T AM MATH SOC, V42, P416
   Oxley J., 1993, MATROID THEORY
   Ramakrishna YS, 1997, LECT NOTES COMPUT SC, V1254, P143
   Santos Joao, 2013, Practical Aspects of Declarative Languages. 15th International Symposium, PADL 2013. Proceedings: LNCS 7752, P141, DOI 10.1007/978-3-642-45284-0_10
   Swift T, 1999, ANN MATH ARTIF INTEL, V25, P201, DOI 10.1023/A:1018990308362
   Swift T., 2010, TABLING ANSWER SUBSU, P300
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Van Hentenryck P., 1993, TECH REP
   Vandenbroucke A., 2016, P 27 S IMPL APPL FUN
   Zhou NF, 2011, PROC INT C TOOLS ART, P896, DOI 10.1109/ICTAI.2011.145
   Zhou NF, 2012, THEOR PRACT LOG PROG, V12, P189, DOI 10.1017/S1471068411000445
   Zhou NF, 2010, PROC INT C TOOLS ART, P213, DOI 10.1109/ICTAI.2010.103
NR 22
TC 1
Z9 1
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 933
EP 949
DI 10.1017/S147106841600048X
PN 5-6
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800027
OA Green Published, Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Bruynooghe, M
   Blockeel, H
   Bogaerts, B
   De Cat, B
   De Pooter, S
   Jansen, J
   Labarre, A
   Ramon, J
   Denecker, M
   Verwer, S
AF Bruynooghe, Maurice
   Blockeel, Hendrik
   Bogaerts, Bart
   De Cat, Broes
   De Pooter, Stef
   Jansen, Joachim
   Labarre, Anthony
   Ramon, Jan
   Denecker, Marc
   Verwer, Sicco
TI Predicate logic as a modeling language: modeling and solving some
   machine learning and data mining problems with IDP3
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE knowledge representation and reasoning; declarative modeling; logic
   programming; knowledge base systems; FO(.); IDP system; stemmatology;
   phylogenetic tree; deterministic finite state automaton
ID IDENTIFICATION; SEMANTICS; PROLOG; SAT
AB This paper provides a gentle introduction to problem-solving with the IDP3 system. The core of IDP3 is a finite model generator that supports first-order logic enriched with types, inductive definitions, aggregates and partial functions. It offers its users a modeling language that is a slight extension of predicate logic and allows them to solve a wide range of search problems. Apart from a small introductory example, applications are selected from problems that arose within machine learning and data mining research. These research areas have recently shown a strong interest in declarative modeling and constraint-solving as opposed to algorithmic approaches. The paper illustrates that the IDP3 system can be a valuable tool for researchers with such an interest. The first problem is in the domain of stemmatology, a domain of philology concerned with the relationship between surviving variant versions of text. The second problem is about a somewhat related problem within biology where phylogenetic trees are used to represent the evolution of species. The third and final problem concerns the classical problem of learning a minimal automaton consistent with a given set of strings. For this last problem, we show that the performance of our solution comes very close to that of the state-of-the art solution. For each of these applications, we analyze the problem, illustrate the development of a logic-based model and explore how alternatives can affect the performance.
C1 [Bruynooghe, Maurice; Blockeel, Hendrik; Bogaerts, Bart; De Cat, Broes; De Pooter, Stef; Jansen, Joachim; Labarre, Anthony; Ramon, Jan; Denecker, Marc; Verwer, Sicco] Katholieke Univ Leuven, Dept Comp Sci, Heverlee, Belgium.
C3 KU Leuven
RP Bruynooghe, M (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Heverlee, Belgium.
EM Maurice.Bruynooghe@cs.kuleuven.be; Hendrik.Blockeel@cs.kuleuven.be;
   Bart.Bogaerts@cs.kuleuven.be; Broes.DeCat@cs.kuleuven.be;
   Stef.De.Pooter@cs.kuleuven.be; Joachim.Jansen@cs.kuleuven.be;
   labarre.anthony@gmail.com; Jan.Ramon@cs.kuleuven.be;
   Marc.Denecker@cs.kuleuven.be; siccoverwer@gmail.com
RI Bruynooghe, Maurice/A-6196-2014; Ramon, Jan/E-8956-2010; Denecker,
   Marc/O-1056-2013; Blockeel, Hendrik/L-6993-2013; Labarre,
   Anthony/A-1635-2008
OI Bruynooghe, Maurice/0000-0002-6881-1462; Denecker,
   Marc/0000-0002-0422-7339; Blockeel, Hendrik/0000-0003-0378-3699;
   Labarre, Anthony/0000-0002-9945-6774; Bogaerts, Bart/0000-0003-3460-4251
FU Research Foundation - Flanders (FWO-Vlaanderen); Research Council of KU
   Leuven [GOA/08/008, GOA 13/010]
FX Caroline Mace and Tara Andrews introduced some of the authors to
   stemmatology and provided the data sets; Tara also explained the working
   of the procedural code. This work was supported by Research Foundation -
   Flanders (FWO-Vlaanderen) and the Research Council of KU Leuven
   (GOA/08/008 and GOA 13/010).
CR Andrews T., 2012, COCOMILE 2012 COMBIN, P15
   Andrews TL, 2013, LIT LINGUIST COMPUT, V28, P504, DOI 10.1093/llc/fqt032
   [Anonymous], 1974, ROSENFELD
   Baret P., 2006, EVOLUTION TEXTS CONF, P255
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Blockeel H., 2012, P 28 INT C LOG PROGR, V17, P14
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Calimeri F, 2011, LECT NOTES ARTIF INT, V6645, P388
   Cat B., 2012, LIPICS, V17, P201
   Coste F., 1997, ICML WORKSH GRAMM IN
   De Cat B., 2014, CORR
   De Cat B, 2013, PROC INT C TOOLS ART, P1068, DOI 10.1109/ICTAI.2013.159
   De Cat B, 2013, THEOR PRACT LOG PROG, V13, P471, DOI 10.1017/S147106841300029X
   de la Higuera C, 2005, PATTERN RECOGN, V38, P1332, DOI 10.1016/j.patcog.2005.01.003
   De Pooter S., 2011, LECT NOTES COMPUTER, V7773, P279
   Denecker M., 2012, LIPICS, V17, P277
   Denecker M., 2014, 14 INT C PRINC KNOWL
   Denecker M, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1342991.1342998
   Denecker M, 2009, LECT NOTES COMPUT SC, V5753, P637, DOI 10.1007/978-3-642-04238-6_75
   Devriendt J, 2012, PROC INT C TOOLS ART, P49, DOI 10.1109/ICTAI.2012.16
   Dovier A., 2012, LIPICS, V17
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Erdem Esra, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P415, DOI 10.1007/978-3-642-20832-4_26
   Felsenstein J., 2004, Inferring phylogenies
   Florencio Christophe Costa, 2012, Algorithmic Learning Theory. 23rd International Conference (ALT 2012). Proceedings, P81, DOI 10.1007/978-3-642-34106-9_10
   Frisch AM, 2008, CONSTRAINTS, V13, P268, DOI 10.1007/s10601-008-9047-y
   Gambette P., 2010, WHO IS WHO PHYLOGENE
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P260, DOI 10.1007/978-3-540-72200-7_23
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   GOLD EM, 1978, INFORM CONTROL, V37, P302, DOI 10.1016/S0019-9958(78)90562-4
   Grinchtein O, 2006, LECT NOTES ARTIF INT, V4130, P483
   Guns T, 2011, ARTIF INTELL, V175, P1951, DOI 10.1016/j.artint.2011.05.002
   Heule M. J. H., 2012, EMPIR SOFTW ENG, P1
   Heule MJH, 2010, LECT NOTES ARTIF INT, V6339, P66, DOI 10.1007/978-3-642-15488-1_7
   Huson DH, 2010, Phylogenetic Networks: Concepts, Algorithms and Applications
   Ierusalimschy R, 1996, SOFTWARE PRACT EXPER, V26, P635, DOI 10.1002/(SICI)1097-024X(199606)26:6<635::AID-SPE26>3.0.CO;2-P
   Jansen J, 2013, THEOR PRACT LOG PROG, V13, P691, DOI 10.1017/S1471068413000434
   Labarre A., IEEE ACM T IN PRESS
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Marien M, 2008, LECT NOTES COMPUT SC, V4996, P211, DOI 10.1007/978-3-540-79719-7_20
   Marriott K, 2008, CONSTRAINTS, V13, P229, DOI 10.1007/s10601-008-9041-4
   MILNER R, 1978, J COMPUT SYST SCI, V17, P348, DOI 10.1016/0022-0000(78)90014-4
   Mitchell D., 2005, Proc. of the 20th National Conf. on Artif. Intell. (AAAI), P430
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Roos T, 2009, LIT LINGUIST COMPUT, V24, P417, DOI 10.1093/llc/fqp002
   Schulte C, 2008, ACM T PROGR LANG SYS, V31, DOI 10.1145/1452044.1452046
   Stamina, 2010, STAMINA COMP LEARN R
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Syrjanen Tommi., 2001, LP-NMR'01: Proceedings of the 6th International Conference on Logic Programming and Nonmonotonic Reasoning, P434, DOI DOI 10.1007/3-540-45402-038
   Timpanaro S., 2005, GENESIS LACHMANNS ME
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Wittocx J., 2013, ACM T COMPUT LOG, V14, P3
   Wittocx J, 2010, J ARTIF INTELL RES, V38, P223, DOI 10.1613/jair.2980
   Wittocx Johan., 2008, LaSh, P153
NR 55
TC 26
Z9 29
U1 0
U2 6
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2015
VL 15
BP 783
EP 817
DI 10.1017/S147106841400009X
PN 6
PG 35
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA DA3JK
UT WOS:000367692800002
OA Green Accepted, Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Cristiá, M
   Rossi, G
   Frydman, C
AF Cristia, Maximiliano
   Rossi, Gianfranco
   Frydman, Claudia
TI Adding partial functions to Constraint Logic Programming with sets
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
DE CLP; {log}; set theory; partial functions
ID LANGUAGE
AB Partial functions are common abstractions in formal specification notations such as Z, B and Alloy. Conversely, executable programming languages usually provide little or no support for them. In this paper we propose to add partial functions as a primitive feature to a Constraint Logic Programming (CLP) language, namely {log}. Although partial functions could be programmed on top of {log}, providing them as first-class citizens adds valuable flexibility and generality to the form of set-theoretic formulas that the language can safely deal with. In particular, the paper shows how the {log} constraint solver is naturally extended in order to accommodate for the new primitive constraints dealing with partial functions. Efficiency of the new version is empirically assessed by running a number of non-trivial set-theoretical goals involving partial functions, obtained from specifications written in Z.
C1 [Cristia, Maximiliano] CIFASIS, Rosario, Argentina.
   [Cristia, Maximiliano] UNR, Rosario, Argentina.
   [Rossi, Gianfranco] Univ Parma, I-43100 Parma, Italy.
   [Frydman, Claudia] Univ Toulon & Var, Aix Marseille Univ, CNRS, ENSAM,LSIS UMR 7296, Toulon, France.
C3 University of Parma; Universite de Toulon; Centre National de la
   Recherche Scientifique (CNRS); Arts et Metiers Institute of Technology;
   Aix-Marseille Universite
RP Cristiá, M (corresponding author), CIFASIS, Rosario, Argentina.
EM cristia@cifasis-conicet.gov.ar; gianfranco.rossi@unipr.it;
   claudia.frydman@lsis.org
RI Cristia, Maximiliano/GMX-3220-2022; Cristia, Maximiliano/JBR-9752-2023;
   Rossi, Gianfranco/C-9386-2017
OI Cristia, Maximiliano/0000-0001-9163-2609; Cristia,
   Maximiliano/0000-0001-9163-2609; Rossi, Gianfranco/0000-0002-6970-8790
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   [Anonymous], 1992, The Z Notation
   [Anonymous], 1986, TEXTS MONOGRAPHS COM
   Cristiá M, 2013, LECT NOTES COMPUT SC, V8137, P229, DOI 10.1007/978-3-642-40561-7_16
   DALPALU A, 2003, PPDP 03, P219
   Deville Y., 2005, 1 INT WORKSH CONSTR, P31
   Dovier A, 2000, ACM T PROGR LANG SYS, V22, P861, DOI 10.1145/365151.365169
   Dovier A, 1996, J LOGIC PROGRAM, V28, P1, DOI 10.1016/0743-1066(95)00147-6
   Gervet C., 1997, Constraints, V1, P191, DOI 10.1007/BF00137870
   Gervet C, 2006, FOUND ARTIF INTELL, P605
   Jackson D, 2003, LECT NOTES COMPUT SC, V2651, P1
   Rossi G., 2008, LOG
   Saaltink, 1997, Z EVES MATH TOOLKIT
NR 13
TC 4
Z9 4
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 651
EP 665
DI 10.1017/S1471068415000290
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200017
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Duck, GJ
   Haemmerlé, R
   Sulzmann, M
AF Duck, Gregory J.
   Haemmerle, Remy
   Sulzmann, Martin
TI On Termination, Confluence and Consistent CHR-based Type Inference
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
DE Constraint Handling Rules; confluence; termination; type classes
AB We consider the application of Constraint Handling Rules (CHR) for the specification of type inference systems, such as that used by Haskell. Confluence of CHR guarantees that the answer provided by type inference is correct and consistent. The standard method for establishing confluence relies on an assumption that the CHR program is terminating. However, many examples in practice give rise to non-terminating CHR programs, rendering this method inapplicable. Despite no guarantee of termination or confluence, the Glasgow Haskell Compiler (GHC) supports options that allow the user to proceed with type inference anyway, e.g. via the use of the Undecidable Instances flag. In this paper we formally identify and verify a set of relaxed criteria, namely range-restrictedness, local confluence, and ground termination, that ensure the consistency of CHR-based type inference that maps to potentially non-terminating CHR programs.
C1 [Duck, Gregory J.] Natl Univ Singapore, Dept Comp Sci, Singapore 117548, Singapore.
   [Haemmerle, Remy] Univ Politecn Madrid, E-28040 Madrid, Spain.
   [Haemmerle, Remy] IMDEA Software Inst, Madrid, Spain.
   [Sulzmann, Martin] Hsch Karlsruhe Tech & Wirtschaft, Karlsruhe, Germany.
C3 National University of Singapore; Universidad Politecnica de Madrid;
   IMDEA Software Institute; Karlsruhe University of Applied Sciences
RP Duck, GJ (corresponding author), Natl Univ Singapore, Dept Comp Sci, Singapore 117548, Singapore.
EM gregory@comp.nus.edu.sg; Remy.Haemmerle@imdea.org;
   Martin.Sulzmann@hs-karlsruhe.de
OI Duck, Gregory/0000-0002-0837-9671
CR Abdennadher S., 1999, Constraints, V4, P133, DOI 10.1023/A:1009842826135
   [Anonymous], 2003, Haskell 98 language and libraries: the revised report
   Duck GJ, 2007, LECT NOTES COMPUT SC, V4670, P224, DOI 10.1007/978-3-540-74610-2_16
   Duck GJ, 2013, LECT NOTES COMPUT SC, V8124, P282, DOI 10.1007/978-3-642-40627-0_24
   Duck GJ, 2012, THEOR PRACT LOG PROG, V12, P601, DOI 10.1017/S1471068412000208
   Fruhwirth T., 2000, New Trends in Constraints. Joint ERCIM/Compulog Net Workshop. Selected Papers (Lecture Notes in Artificial Intelligence Vol. 1865), P298
   Fruhwirth T.W., 2009, Constraint Handling Rules
   Giesl J, 2006, LECT NOTES ARTIF INT, V4130, P281
   Haemmerlé R, 2012, THEOR PRACT LOG PROG, V12, P737, DOI 10.1017/S1471068412000270
   Haemmerlé R, 2011, PPDP 11 - PROCEEDINGS OF THE 2011 SYMPOSIUM ON PRINCIPLES AND PRACTICES OF DECLARATIVE PROGRAMMING, P137
   Haemmerlé R, 2011, THEOR PRACT LOG PROG, V11, P593, DOI 10.1017/S1471068411000196
   Hallgren Thomas., 2001, P JOINT CSCE WINTER, P135
   Jones MP, 2000, LECT NOTES COMPUT SC, V1782, P230
   Newman MHA, 1942, ANN MATH, V43, P223, DOI 10.2307/1968867
   Pilozzi P, 2008, LECT NOTES COMPUT SC, V5366, P501, DOI 10.1007/978-3-540-89982-2_43
   Schrijvers T, 2008, ACM SIGPLAN NOTICES, V43, P51, DOI 10.1145/1411203.1411215
   Sneyers J, 2010, THEOR PRACT LOG PROG, V10, P1, DOI 10.1017/S1471068409990123
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   Stuckey PJ, 2005, ACM T PROGR LANG SYS, V27, P1216, DOI 10.1145/1108970.1108974
   Sulzmann M, 2007, J FUNCT PROGRAM, V17, P83, DOI 10.1017/S0956796806006137
   WADLER P, 1989, CONFERENCE RECORD OF THE SIXTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P60, DOI 10.1145/75277.75283
NR 21
TC 1
Z9 1
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 619
EP 632
DI 10.1017/S1471068414000246
PN 4-5
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200015
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Liu, GH
   You, JH
AF Liu, Guohua
   You, Jia-Huai
TI Relating weight constraint and aggregate programs: Semantics and
   representation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE stable model; weight constraint; aggregates; logic programs with
   constraints
ID STABLE MODEL SEMANTICS; LOGIC PROGRAMS; ANSWER SETS; SYSTEM
AB Weight constraint and aggregate programs are among the most widely used logic programs with constraints. In this paper, we relate the semantics of these two classes of programs, namely, the stable model semantics for weight constraint programs and the answer set semantics based on conditional satisfaction for aggregate programs. Both classes of programs are instances of logic programs with constraints, and in particular, the answer set semantics for aggregate programs can be applied to weight constraint programs. We show that the two semantics are closely related. First, we show that for a broad class of weight constraint programs, called strongly satisfiable programs, the two semantics coincide. When they disagree, a stable model admitted by the stable model semantics may be circularly justified. We show that the gap between the two semantics can be closed by transforming a weight constraint program to a strongly satisfiable one so that no circular models may be generated under the current implementation of the stable model semantics. We further demonstrate the close relationship between the two semantics by formulating a transformation from weight constraint programs to logic programs with nested expressions, which preserves the answer set semantics. Our study on the semantics leads to an investigation of a methodological issue, namely, the possibility of compact representation of aggregate programs by weight constraint programs. We show that almost all standard aggregates can be encoded by weight constraints compactly. This makes it possible to compute the answer sets of aggregate programs using the answer set programming solvers for weight constraint programs. This approach is compared experimentally with the ones where aggregates are handled more explicitly, which show that the weight constraint encoding of aggregates enables a competitive approach to answer set computation for aggregate programs.
C1 [Liu, Guohua; You, Jia-Huai] Univ Alberta, Edmonton, AB T6G 2R3, Canada.
C3 University of Alberta
RP Liu, GH (corresponding author), Univ Alberta, Edmonton, AB T6G 2R3, Canada.
EM guohua@cs.ualberta.ca; you@cs.ualberta.ca
CR Armi D., 2003, P INT JOINT C ART IN, P847
   Balduccini Marcello., 2001, LPNMR, P439
   Caldiran O, 2009, LECT NOTES COMPUT SC, V5753, P342, DOI 10.1007/978-3-642-04238-6_29
   Calimeri F, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P406
   Delgrande JP, 2009, LECT NOTES COMPUT SC, V5753, P355, DOI 10.1007/978-3-642-04238-6_30
   Denecker M., 2001, Logic Programming. 17th International Conference, ICLP 2001. Proceedings (Lecture Notes in Computer Science Vol.2237), P212
   Denecker M, 2009, LECT NOTES COMPUT SC, V5753, P637, DOI 10.1007/978-3-642-04238-6_75
   Elkabani I, 2005, LECT NOTES ARTIF INT, V3662, P427, DOI 10.1007/11546207_40
   Erdem E., 2009, P LOG PROGR NONM REA, P342
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   Fages F., 1994, Methods of Logic in Computer Science, V1, P51
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Ferraris P, 2005, THEOR PRACT LOG PROG, V5, P45, DOI 10.1017/S1471068403001923
   Gebser M., 2007, P LOG PROGR NONM REA, P1
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gelfond M, 2008, FOUND ARTIF INTELL, P285, DOI 10.1016/S1574-6526(07)03007-6
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Giunchiglia E, 2006, J AUTOM REASONING, V36, P345, DOI 10.1007/s10817-006-9033-2
   Ielpa SM, 2009, LECT NOTES COMPUT SC, V5753, P368, DOI 10.1007/978-3-642-04238-6_31
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Liu GH, 2008, LECT NOTES COMPUT SC, V5366, P347, DOI 10.1007/978-3-540-89982-2_33
   Liu LG, 2006, J ARTIF INTELL RES, V27, P299, DOI 10.1613/jair.2009
   Liu LN, 2010, ARTIF INTELL, V174, P295, DOI 10.1016/j.artint.2009.11.016
   MAREK V, 2007, THEOR PRACT LOG PROG, V8, P167
   Marek VW, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P86
   Marek VW, 2004, LECT NOTES ARTIF INT, V2923, P167
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Oetsch J, 2009, LECT NOTES COMPUT SC, V5753, P382, DOI 10.1007/978-3-642-04238-6_32
   Pelov N, 2004, LECT NOTES ARTIF INT, V2923, P207
   PELOV N, 2003, P ASP03 ANS SET PROG, P29
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Shen YD, 2009, THEOR PRACT LOG PROG, V9, P529, DOI 10.1017/S1471068409990056
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Son TC, 2007, THEOR PRACT LOG PROG, V7, P355, DOI 10.1017/S1471068406002936
   Son TC, 2007, J ARTIF INTELL RES, V29, P353, DOI 10.1613/jair.2171
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Wu G, 2007, IEEE ACM T COMPUT BI, V4, P139, DOI 10.1109/TCBB.2007.1008
   You JH, 2007, LECT NOTES COMPUT SC, V4483, P228, DOI 10.1007/978-3-540-72200-7_20
NR 38
TC 4
Z9 4
U1 0
U2 9
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2013
VL 13
BP 1
EP 31
DI 10.1017/S147106841100038X
PN 1
PG 31
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 067KP
UT WOS:000313293200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hermenegildo, MV
   Bueno, F
   Carro, M
   López-García, P
   Mera, E
   Morales, JF
   Puebla, G
AF Hermenegildo, M. V.
   Bueno, F.
   Carro, M.
   Lopez-Garcia, P.
   Mera, E.
   Morales, J. F.
   Puebla, G.
TI An overview of Ciao and its design philosophy
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Prolog; logic programming system; assertions; verification; extensible
   languages
ID ABSTRACT INTERPRETATION; PARALLEL EXECUTION; LOGIC PROGRAMS;
   VERIFICATION; PROLOG; SPECIFICATION; COMPILATION; FRAMEWORK; CHECKING;
   LANGUAGE
AB We provide an overall description of the Ciao multiparadigm programming system emphasizing some of the novel aspects and motivations behind its design and implementation. An important aspect of Ciao is that, in addition to supporting logic programming (and, in particular, Prolog), it provides the programmer with a large number of useful features from different programming paradigms and styles and that the use of each of these features (including those of Prolog) can be turned on and off at will for each program module. Thus, a given module may be using, e. g., higher order functions and constraints, while another module may be using assignment, predicates, Prolog meta-programming, and concurrency. Furthermore, the language is designed to be extensible in a simple and modular way. Another important aspect of Ciao is its programming environment, which provides a powerful preprocessor (with an associated assertion language) capable of statically finding non-trivial bugs, verifying that programs comply with specifications, and performing many types of optimizations (including automatic parallelization). Such optimizations produce code that is highly competitive with other dynamic languages or, with the (experimental) optimizing compiler, even that of static languages, all while retaining the flexibility and interactive development of a dynamic language. This compilation architecture supports modularity and separate compilation throughout. The environment also includes a powerful autodocumenter and a unit testing framework, both closely integrated with the assertion system. The paper provides an informal overview of the language and program development environment. It aims at illustrating the design philosophy rather than at being exhaustive, which would be impossible in a single journal paper, pointing instead to previous Ciao literature.
C1 [Hermenegildo, M. V.; Bueno, F.; Carro, M.; Puebla, G.] Univ Politecn Madrid, Fac Informat, E-28660 Madrid, Spain.
   [Hermenegildo, M. V.; Lopez-Garcia, P.; Morales, J. F.] Madrid Inst Adv Studies Software Dev Technol IMDE, Madrid 28660, Spain.
   [Lopez-Garcia, P.] Spanish Res Council, Madrid 28006, Spain.
   [Mera, E.] Univ Complutense Madrid, Fac Informat, E-28040 Madrid, Spain.
C3 Universidad Politecnica de Madrid; Complutense University of Madrid
RP Hermenegildo, MV (corresponding author), Univ Politecn Madrid, Fac Informat, Campus Montegancedo UPM, E-28660 Madrid, Spain.
EM manuel.hermenegildo@imdea.org; bueno@fi.upm.es; mcarro@fi.upm.es;
   pedro.lopez@imdea.org; edison@fdi.ucm.es; josef.morales@imdea.org;
   german@fi.upm.es
RI Carro, Manuel/AAE-9653-2021; Morales Caballero, Jose
   Francisco/JXY-5044-2024; Lopez-Garcia, Pedro/AAH-4048-2021;
   Lopez-Garcia, Pedro/KIA-1704-2024; Hermenegildo, w V/I-4418-2015
OI Carro, Manuel/0000-0001-5199-3135; Morales Caballero, Jose
   Francisco/0000-0001-9782-8135; Lopez-Garcia, Pedro/0000-0002-1092-2071;
   Hermenegildo, w V/0000-0002-7583-323X
FU European S-CUBE project [IST-215483]; European HATS project [FET
   IST-231620]; Spanish DOVES project [2008-05624/TIN]; Spanish PROMETIDOS
   project [CAM P2009/TIC/1465]; IST Prince of Asturias Chair at the
   University of New Mexico
FX The Ciao system is in continuous and very active development through the
   collaborative effort of numerous members of several institutions,
   including UPM, the IMDEA Software Institute, UNM, UCM, Roskilde
   University, University of Melbourne, Monash University, University of
   Arizona, Linkoping University, NMSU, K. University Leuven, Bristol
   University, Ben-Gurion University, INRIA, as well as many others. The
   development of the Ciao system has been supported by a number of
   European, Spanish, and other international projects; currently by the
   European IST-215483 S-CUBE and FET IST-231620 HATS projects, the Spanish
   2008-05624/TIN DOVES project, and the CAM P2009/TIC/1465 PROMETIDOS
   project. Manuel Hermenegildo was also supported previously by the IST
   Prince of Asturias Chair at the University of New Mexico. The system
   documentation and related publications contain more specific credits to
   the many contributors to the system. We would also like to thank the
   anonymous reviewers and the editors of the special issue for providing
   very constructive and useful comments, which have greatly contributed to
   improving the final version of the paper.
CR AITKACI H, 1993, MIT PS LOG, P52
   Albert E, 2008, NEW GENERAT COMPUT, V26, P171, DOI 10.1007/s00354-008-0039-7
   Ancona D., 2007, P 2007 S DYN LANG DL, P53, DOI DOI 10.1145/1297081.1297091
   [Anonymous], CURRY INTEGRATED FUN
   BRUYNOOGHE M, 1991, J LOGIC PROGRAM, V10, P91, DOI 10.1016/0743-1066(91)80001-T
   Bueno F, 1999, ACM T PROGR LANG SYS, V21, P189, DOI 10.1145/316686.316688
   Bueno F, 2004, LECT NOTES COMPUT SC, V2998, P100
   BUENO F., 2009, CIAO SYSTEM REF MANU
   Bueno F., 1997, PROC 3 INT WS AUTOMA, P155
   BUENO F., 2002, P C IMPL CONSTR LOG
   Cabeza D, 2001, THEOR PRACT LOG PROG, V1, P251, DOI 10.1017/S147106840100117X
   Cabeza D, 2000, LECT NOTES ARTIF INT, V1861, P131
   CABEZA D, 2000, ELECT NOTES THEORETI, V30
   Carro M, 1999, LOGIC PROGRAMM, P320
   CARRO M, 1993, LOGIC PROGRAMM, P184
   Carro M., 2006, COMPILERS ARCHITECTU, P271
   CARTWRIGHT R, 1991, SIGPLAN NOTICES, V26, P278, DOI 10.1145/113446.113469
   Casas A., 2006, P INT S FUNCT LOG PR, P142
   Casas A, 2008, LECT NOTES COMPUT SC, V4915, P138, DOI 10.1007/978-3-540-78769-3_10
   Casas A, 2008, LECT NOTES COMPUT SC, V5366, P651, DOI 10.1007/978-3-540-89982-2_53
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   Correas J, 2004, LECT NOTES COMPUT SC, V3057, P104
   Costa V.S., 2002, YAP USERS MANUAL
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   de la Banda M. G., 1996, Programming Languages: Implementations, Logics, and Programs. 8th International Symposium, PLILP '96 Proceedings, P77
   De la Banda MG, 2000, ACM T PROGR LANG SYS, V22, P296, DOI 10.1145/349214.349224
   DEBRAY S. K., 1997, P INT S LOG PROGR IL
   DEBRAY SK, 1990, SIGPLAN NOTICES, V25, P174, DOI 10.1145/93548.93564
   DEBRAY SK, 1993, ACM T PROGR LANG SYS, V15, P826, DOI 10.1145/161468.161472
   Elkhatib O, 2005, LECT NOTES ARTIF INT, V3662, P399, DOI 10.1007/11546207_35
   FAHNDRICH M., 2010, CLOUSOT
   Fruhwirth T.W., 2009, Constraint Handling Rules
   Gras D. C., 1994, Static Analysis. First International Static Analysis Symposium, SAS '94 Proceedings, P297
   Gupta G, 2001, ACM T PROGR LANG SYS, V23, P472, DOI 10.1145/504083.504085
   Hermenegildo M, 2004, LECT NOTES COMPUT SC, V3149, P21
   Hermenegildo M., 1997, Euro-Par '97 Parallel Processing. Third International Euro-Par Conference. Proceedings, P31
   Hermenegildo M, 2000, LECT NOTES ARTIF INT, V1861, P1345
   HERMENEGILDO M, 1999, PARALLELISM IMPLEMEN, P65
   HERMENEGILDO M., 1993, P WORKSH LOG PROGR S, P177
   HERMENEGILDO M., 2006, CLIP720060 UPM
   HERMENEGILDO M., 1995, P COMPULOG NET WORKS
   HERMENEGILDO M., 2009, CLIP420090 TU MADR S
   Hermenegildo M., 1994, LNCS, V874, P123
   Hermenegildo M. V., 1991, New Generation Computing, V9, P233, DOI 10.1007/BF03037164
   HERMENEGILDO MV, 1986, LECT NOTES COMPUT SC, V225, P25
   HERMENEGILDO MV, 1995, J LOGIC PROGRAM, V22, P1, DOI 10.1016/0743-1066(93)00007-F
   Hermenegildo MV, 2005, SCI COMPUT PROGRAM, V58, P115, DOI 10.1016/j.scico.2005.02.006
   HERMENEGILDO MV, 1992, J LOGIC PROGRAM, V13, P349, DOI 10.1016/0743-1066(92)90053-6
   Hermenegildo MV, 1999, LOGIC PROGRAMM, P54
   HOLZBAUR C, 1992, LECT NOTES COMPUT SC, V631, P260, DOI 10.1007/3-540-55844-6_141
   HOLZBAUR C., 1994, SICSTUS 2 1 DMCAI CL
   Hudak P., 1992, ACM SIGPLAN Notices, V27, P1, DOI 10.1145/130697.130699
   Jim T, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE GENERAL TRACK, P275
   KARP AH, 1988, IEEE SOFTWARE, V5, P52, DOI 10.1109/52.7943
   Lamport L, 1999, ACM T PROGR LANG SYS, V21, P502, DOI 10.1145/319301.319317
   Leavens GT, 2007, FORM ASP COMPUT, V19, P159, DOI 10.1007/s00165-007-0026-7
   Lopez P, 1996, J SYMB COMPUT, V21, P715, DOI 10.1006/jsco.1996.0038
   Lopez-Garcia P, 2010, LEIBNIZ INT PR INFOR, V7, P104, DOI 10.4230/LIPIcs.ICLP.2010.104
   Lopez-Garcia P, 2010, NEW GENERAT COMPUT, V28, P177, DOI 10.1007/s00354-008-0085-1
   Mera E., 2008, PPDP 08, P174, DOI [10.1145/1389449.1389471, DOI 10.1145/1389449.1389471]
   Mera E, 2009, LECT NOTES COMPUT SC, V5649, P281, DOI 10.1007/978-3-642-02846-5_25
   Morahan-Martin J, 2008, PSYCHOLOGICAL ASPECTS OF CYBERSPACE: THEORY, RESEARCH, APPLICATIONS, P32, DOI 10.1145/1389449.1389455
   Morales J, 2004, LECT NOTES COMPUT SC, V3057, P86
   MOZILLA, 2008, TAM PROJ
   MUTHUKUMAR K, 1990, LOGIC PROGRAMM, P221
   MUTHUKUMAR K, 1992, J LOGIC PROGRAM, V13, P315, DOI 10.1016/0743-1066(92)90035-2
   Muthukumar K, 1999, J LOGIC PROGRAM, V38, P165, DOI 10.1016/S0743-1066(98)10022-5
   MUTHUKUMAR K, 1991, LOGIC PROGRAMM, P49
   Naish Lee, 1989, ICLP, P521
   Navas J, 2007, LECT NOTES COMPUT SC, V4670, P348, DOI 10.1007/978-3-540-74610-2_24
   Necula GC, 2005, ACM T PROGR LANG SYS, V27, P477, DOI 10.1145/1065887.1065892
   Pietrzak P, 2006, LECT NOTES ARTIF INT, V4246, P392, DOI 10.1007/11916277_27
   Pietrzak P, 2008, PEPM'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PARTIAL EVALUATION AND SEMANTICS-BASED PROGRAM MANIPULATION, P61, DOI 10.1145/1328408.1328418
   Puebla G, 2000, LECT NOTES COMPUT SC, V1870, P63
   Puebla G, 2000, LECT NOTES COMPUT SC, V1870, P23
   Puebla G., 1995, Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics- Based Program Manipulation. PEPM'95, P77, DOI 10.1145/215465.215561
   Puebla G, 1997, LOGIC PROGRAMM, P93
   PUEBLA G., 2008, P WORKSH LOG BAS MET, P26
   Puebla G, 2006, LECT NOTES COMPUT SC, V4134, P107
   SAGLAM H, 1995, CSTR9517 U BRIST DEP
   Schrijvers T, 2008, LECT NOTES COMPUT SC, V5366, P693, DOI 10.1007/978-3-540-89982-2_59
   Schulte C, 2008, ACM T PROGR LANG SYS, V31, DOI 10.1145/1452044.1452046
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   Swedish Institute for Computer Science, 2009, SICSTUS PROL US MAN
   Szabó P, 2006, LECT NOTES COMPUT SC, V4079, P257, DOI 10.1007/11799573_20
   Tobin-Hochstadt S, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P395, DOI 10.1145/1328438.1328486
   Van Hentenryck P., 2005, CONSTRAINT BASED LOC
   Vaucheret C, 2002, LECT NOTES COMPUT SC, V2477, P102
   WARREN D., 1993, P INT C LOG PROGR IC
   Warren R., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P684
   WOLFRAM D., 1992, PRGTR892 U OXF
NR 91
TC 70
Z9 72
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2012
VL 12
BP 219
EP 252
DI 10.1017/S1471068411000457
PN 1-2
PG 34
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 886XS
UT WOS:000299888500009
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Oetsch, J
   Pührer, J
   Tompits, H
AF Oetsch, Johannes
   Puehrer, Joerg
   Tompits, Hans
TI Catching the Ouroboros: On debugging non-ground answer-set programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE answer-set programming; program analysis; debugging
ID LOGIC PROGRAMS
AB An important issue towards a broader acceptance of answer-set programming (ASP) is the deployment of tools which support the programmer during the coding phase. In particular, methods for debugging an answer-set program are recognised as a crucial step in this regard. Initial work on debugging in ASP mainly focused on propositional programs, yet practical debuggers need to handle programs with variables as well. In this paper, we discuss a debugging technique that is directly geared towards non-ground programs. Following previous work, we address the central debugging question why some interpretation is not an answer set. The explanations provided by our method are computed by means of a meta-programming technique, using a uniform encoding of a debugging request in terms of ASP itself. Our method also permits programs containing comparison predicates and integer arithmetics, thus covering a relevant language class commonly supported by all state-of-the-art ASP solvers.
C1 [Oetsch, Johannes; Puehrer, Joerg; Tompits, Hans] Vienna Univ Technol, Inst Informat Syst 184 3, A-1040 Vienna, Austria.
C3 Technische Universitat Wien
RP Oetsch, J (corresponding author), Vienna Univ Technol, Inst Informat Syst 184 3, Favoritenstr 9-11, A-1040 Vienna, Austria.
EM oetsch@kr.tuwien.ac.at; puehrer@kr.tuwien.ac.at; tompits@kr.tuwien.ac.at
OI Oetsch, Johannes/0000-0002-9902-7662
CR BRAIN M, 2005, CEUR WORKSHOP P, V142
   Brain M, 2007, LECT NOTES COMPUT SC, V4483, P31, DOI 10.1007/978-3-540-72200-7_5
   Caballero R, 2008, LECT NOTES COMPUT SC, V4925, P143, DOI 10.1007/978-3-540-88594-8_8
   Chen Y., 2006, P 10 INT C PRINC KNO, P298
   Denecker M, 2009, LECT NOTES COMPUT SC, V5753, P637, DOI 10.1007/978-3-642-04238-6_75
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   EITER T, 2004, P KR 2004, P377
   Gebser M, 2008, P 23 NAT C ART INT, V1
   Gebser M, 2009, LECT NOTES ARTIF INT, V5437, P247, DOI 10.1007/978-3-642-00675-3_17
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Lee J., 2008, Proceedings of the International Conference on Knowledge Representation and Reasoning (KR), P444
   Lee JF, 2005, LCN 2005: 30th Conference on Local Computer Networks, Proceedings, P503
   Leone N, 1997, INFORM COMPUT, V135, P69, DOI 10.1006/inco.1997.2630
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Mikitiuk Artur, 2007, 2007 International Conference on Artificial Intelligence (ICAI'07), P635
   OETSCH J, 2010, LEIBNIZ INT P INFORM, V7
   Pontelli E, 2009, THEOR PRACT LOG PROG, V9, P1, DOI 10.1017/S1471068408003633
   Syrjanen T., 2006, P 11 INT WORKSH NONM, V6, P77
   Wittocx J, 2009, LECT NOTES COMPUT SC, V5649, P296, DOI 10.1007/978-3-642-02846-5_26
NR 19
TC 31
Z9 32
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 513
EP 529
DI 10.1017/S1471068410000256
PN 4-6
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tu, PH
   Son, TC
   Baral, C
AF Tu, Phan Huy
   Son, Tran Cao
   Baral, Chitta
TI Reasoning and planning with sensing actions, incomplete information, and
   static causal laws using answer set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE reasoning about actions and changes; sensing actions; incomplete
   information; conformant planning; conditional planning; answer set
   programming
ID REPRESENTING ACTION; LOGIC; KNOWLEDGE
AB We extend the 0-approximation of sensing actions and incomplete information in Son and Baral (2001) to action theories with static causal laws and prove its soundness with respect to the possible world semantics. We also show that the conditional planning problem with respect to this approximation is NP-complete. We then present an answer set programming based conditional planner, called ASCP, that is capable of generating both conformant plans and conditional plans in the presence of sensing actions, incomplete information about the initial state, and static causal laws. We prove the correctness of our implementation and argue that our planner is sound and complete with respect to the proposed approximation. Finally, we present experimental results comparing ASCP to other planners.
C1 New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88003 USA.
   Arizona State Univ, Dept Comp Sci & Engn, Tempe, AZ 85287 USA.
C3 New Mexico State University; Arizona State University; Arizona State
   University-Tempe
RP Tu, PH (corresponding author), New Mexico State Univ, Dept Comp Sci, POB 30001,MSC CS, Las Cruces, NM 88003 USA.
EM tphan@cs.nmsu.edu; tson@cs.nmsu.edu; chitta@asu.edu
OI Baral, Chitta/0000-0002-7549-723X
CR Anderson C. R., 1998, Proceedings Fourth International Conference on Artificial Intelligence Planning Systems, P44
   ANGER C, 2002, P 8 EUR WORKSH LOG A
   [Anonymous], 1988, International Symposium on Logic Programming
   Baral C, 2000, ARTIF INTELL, V122, P241, DOI 10.1016/S0004-3702(00)00043-6
   BARAL C, 2000, P 7 INT C PRINC KNOW, P311
   BARAL C, 2003, KNOWLEDGE REPRESENTA, P1
   BERTOLI P, 2001, P 17 INT JOINT C ART, P467
   Blum Avrim., P 14 INT JOINT C ART, P1636
   Bonet B., 2000, Proceedings of the Fifth International Conference on Artificial Intelligence Planning and Scheduling, P52
   BRYCE D, 2004, PLANNING GRAPH HEURI
   Castellini C, 2003, ARTIF INTELL, V147, P85, DOI 10.1016/S0004-3702(02)00375-2
   Cimatti A, 2004, ARTIF INTELL, V159, P127, DOI 10.1016/j.artint.2004.05.003
   Cimatti A, 2000, J ARTIF INTELL RES, V13, P305, DOI 10.1613/jair.774
   CIMATTI A, 1999, ECP, P21
   Citrigno Simona., 1997, P 12 WORKSHOP LOGIC, P128
   Dimopoulos Y., 1997, Recent Advances in AI Planning. 4th European Conference on Planning, ECP'97 Proceedings, P169, DOI 10.1007/3-540-63912-8_84
   Eiter T, 2003, ARTIF INTELL, V144, P157, DOI 10.1016/S0004-3702(02)00367-3
   GELFOND M, 1993, J LOGIC PROGRAM, V17, P301, DOI 10.1016/0743-1066(93)90035-F
   Giunchiglia E, 1997, ARTIF INTELL, V95, P409, DOI 10.1016/S0004-3702(97)00037-4
   Golden K., 1998, Proceedings Fourth International Conference on Artificial Intelligence Planning Systems, P70
   Golden K, 1996, MOR KAUF R, P174
   GOLDEN K, 1996, TR960109 U WASH DEPT
   HANKS S, 1987, ARTIF INTELL, V33, P379, DOI 10.1016/0004-3702(87)90043-9
   Hoffmann J, 2006, ARTIF INTELL, V170, P507, DOI 10.1016/j.artint.2006.01.003
   Hoffmann J, 2001, J ARTIF INTELL RES, V14, P253, DOI 10.1613/jair.855
   Levesque HJ, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P1139
   Lierler Y, 2004, LECT NOTES ARTIF INT, V2923, P346
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Lin FZ, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P112
   LOBO J, 1997, P AAAI 97, P454
   LOBO J, 1998, FS9802
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   MCCAIN N, 1995, 14 INT JOINT C ART I
   McDermott D., 1987, Computational Intelligence, V3, P151, DOI 10.1111/j.1467-8640.1987.tb00183.x
   Moore R., 1985, Formal Theories of the Commonsense World
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Peot M. A, 1992, P 1 INT C AI PLANN S, P189
   PRYOR L, 1996, J ARTIFICIAL INTELLI, V4, P287
   Rintanen J., 1999, Journal of Artificial Intelligence Research, V10, P323
   Scherl RB, 2003, ARTIF INTELL, V144, P1, DOI 10.1016/S0004-3702(02)00365-X
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Smith DE, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P889
   SON T, 2005, ACM TRANSACTIONS COM
   Son TC, 2004, LECT NOTES ARTIF INT, V2923, P261
   Son TC, 2001, ARTIF INTELL, V125, P19, DOI 10.1016/S0004-3702(00)00080-1
   SON TC, 2005, P AAAI 05, P1211
   Thiebaux S., 2003, P 18 INT JOINT C ART, P961
   Thielscher, 2000, CL200001 DRESD U TEC
   Thielscher Michael., 2000, KR2000, P109
   Weld DS, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P897
NR 52
TC 24
Z9 25
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2007
VL 7
BP 377
EP 450
DI 10.1017/S1471068406002948
PN 4
PG 74
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 191AY
UT WOS:000248103400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dovier, A
   Pontelli, E
   Rossi, G
AF Dovier, Agostino
   Pontelli, Enrico
   Rossi, Gianfranco
TI Set unification
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE unification theory; set theory; ACI 1 unification
ID LOGIC; LANGUAGE; COMBINATION; COMPLEXITY; ALGORITHM; TERMS
AB The unification problem in algebras capable of describing sets has been tackled, directly or indirectly, by many researchers and it finds important applications in various research areas, e.g. deductive databases, theorem proving, static analysis, rapid software prototyping. The various solutions proposed are spread across a large literature. In this paper we provide a uniform presentation of unification of sets, formalizing it at the level of set theory. We address the problem of deciding existence of solutions at an abstract level. This provides also the ability to classify different types of set unification problems. Unification algorithms are uniformly proposed to solve the unification problem in each of such classes. The algorithms presented are partly drawn from the literature - and properly revisited and analyzed - and partly novel proposals. In particular, we present a new goal-driven algorithm for general ACI l unification and a new simpler algorithm for general (Ab)(Cl) unification.
C1 Univ Udine, Dipartimento Matemat & Informat, I-33100 Udine, Italy.
   New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88003 USA.
   Univ Parma, Dipartimento Matemat, I-43100 Parma, Italy.
C3 University of Udine; New Mexico State University; University of Parma
RP Dovier, A (corresponding author), Univ Udine, Dipartimento Matemat & Informat, Via Sci 206, I-33100 Udine, Italy.
EM dovier@dimi.uniud.it; epontell@cs.nmsu.edu; gianfranco.rossi@unipr.it
RI Dovier, Agostino/JAO-3262-2023; Pontelli, Enrico/AAJ-5161-2021; Rossi,
   Gianfranco/C-9386-2017
OI Pontelli, Enrico/0000-0002-7753-1737; Dovier,
   Agostino/0000-0003-2052-8593; Rossi, Gianfranco/0000-0002-6970-8790
CR ABITEBOUL S, 1991, ACM T DATABASE SYST, V16, P1, DOI 10.1145/103140.103141
   Aczel P., 1988, CSLI LECT NOTES
   AIKEN A, 1994, LECT NOTES COMPUTER, P326
   [Anonymous], 1992, The Z Notation
   [Anonymous], J FUNCTIONAL LOGIC P
   [Anonymous], 1994, The Godel Programming Language
   [Anonymous], 1986, Programming with Sets; an Introduction to SETL
   [Anonymous], 1994, FDN COMPUTER SCI
   Arenas-Sánchez P, 2001, THEOR PRACT LOG PROG, V1, P185
   ARENASSANCHEZ P, 1997, J FUNCTIONAL LOGIC P, V7, P1
   ARNI N, 1992, LECT NOTES COMPUT SC, V646, P436
   Arni N, 1996, J LOGIC PROGRAM, V27, P73, DOI 10.1016/0743-1066(95)00146-8
   Baader F, 1996, J SYMB COMPUT, V21, P211, DOI 10.1006/jsco.1996.0009
   Baader F, 1998, INFORM PROCESS LETT, V67, P215, DOI 10.1016/S0020-0190(98)00106-9
   BAADER F, 1988, THEOR COMPUT SCI, V56, P345, DOI 10.1016/0304-3975(88)90140-5
   BAADER F, 2001, HDB AUTOMATED REASON, P446
   Barwise J, 1996, CSLI LECT NOTES, V60
   BEERI C, 1991, J LOGIC PROGRAM, V10, P181, DOI 10.1016/0743-1066(91)90036-O
   BUTTNER W, 1987, J SYMB COMPUT, V4, P191, DOI 10.1016/S0747-7171(87)80065-2
   BUTTNER W, 1986, LECT NOTES COMPUT SC, V230, P470
   CANTONE D, 2001, MG COMP SCI, P3
   Codish M, 2000, THEOR COMPUT SCI, V238, P131, DOI 10.1016/S0304-3975(98)00122-4
   Dantsin E, 1999, LECT NOTES COMPUT SC, V1578, P180
   Dovier A, 2004, THEOR COMPUT SCI, V311, P221, DOI 10.1016/S0304-3975(03)00361-X
   Dovier A, 2000, LECT NOTES ARTIF INT, V1794, P275
   Dovier A, 2000, ACM T PROGR LANG SYS, V22, P861, DOI 10.1145/365151.365169
   Dovier A, 1996, J LOGIC PROGRAM, V28, P1, DOI 10.1016/0743-1066(95)00147-6
   Dovier A., 1998, Fundamenta Informaticae, V36, P201
   DOVIER A, 1993, MIT PS LOG, P540
   Dovier A, 2006, ACM T COMPUT LOG, V7, P269, DOI 10.1145/1131313.1131317
   FAGES F, 1987, J SYMB COMPUT, V3, P257, DOI 10.1016/S0747-7171(87)80004-4
   Greco S., 1996, Proceedings of the 1996 ACM CIKM. International Conference on Information and Knowledge Management, P326, DOI 10.1145/238355.238575
   GRIESKAMP W, 1999, THESIS TU BERLIN
   Hermann M, 1997, LECT NOTES COMPUT SC, V1330, P282, DOI 10.1007/BFb0017446
   HEROLD A, 1986, LECT NOTES COMPUT SC, V230, P450
   JAYARAMAN B, 1992, J LOGIC PROGRAM, V12, P299, DOI 10.1016/0743-1066(92)90005-N
   JAYARAMAN B, 1989, P N AM C LOG PROGR, P1051
   Jouannaud J. P., 1991, COMPUTATIONAL LOGIC
   KAPUR D, 1986, LECT NOTES COMPUT SC, V230, P489
   KAPUR D, 1992, J AUTOM REASONING, V9, P261
   Kifer M., 1989, INT C MANAGEMENT DAT, P134
   KIRCHNER C, 1989, RESOLUTION EQUATIONS, V2
   Kozen D, 1998, INFORM COMPUT, V142, P2, DOI 10.1006/inco.1997.2694
   KUNEN K, 1980, STUDIES LOGIC
   LEGEARD B, 1991, LECT NOTES COMPUT SC, V528, P431
   LIM SJ, 1997, LECT NOTES COMPUTER, V1276, P321
   LINCOLN P, 1989, J SYMB COMPUT, V8, P217, DOI 10.1016/S0747-7171(89)80026-4
   Liu MC, 1998, J LOGIC PROGRAM, V36, P271, DOI 10.1016/S0743-1066(98)00003-X
   MANANDHAR S, 1994, 32ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P255
   MARCINIEC J, 1997, STUDIA LOGICA, V58, P339
   MARTELLI A, 1982, ACM T PROGR LANG SYS, V4, P258, DOI 10.1145/357162.357169
   Martin U., 1988, Journal of Automated Reasoning, V4, P381, DOI 10.1007/BF00297246
   MARTIN U, 1989, J SYMB COMPUT, V7, P275, DOI 10.1016/S0747-7171(89)80013-6
   NAQVI SA, 1989, LOGICAL LANGUAGE DAT
   OMODEO EG, 1995, COMMUNICATIONS PURE, V49, P1123
   PATERSON MS, 1978, J COMPUT SYST SCI, V16, P158, DOI 10.1016/0022-0000(78)90043-0
   POLICRITI A, 1997, J SYMB COMPUT, V20, P315
   POLLARD CJ, 1990, VANC ST COG, P285
   ROUNDS WC, 1988, CSLI88129
   SCHMIDTSCHAUSS M, 1989, J SYMB COMPUT, V8, P51, DOI 10.1016/S0747-7171(89)80022-7
   SHMUELI O, 1992, J LOGIC PROGRAM, V12, P89, DOI 10.1016/0743-1066(92)90040-A
   SIEKMANN JH, 1984, LECT NOTES COMPUT SC, V170, P1
   SIEKMANN JH, 1989, J SYMB COMPUT, V7, P207, DOI 10.1016/S0747-7171(89)80012-4
   Stolc A., 1899, Bull Intl Acad Sci Boheme, V22, P1
   STOLZENBURG F, 1996, 1 INT WORKSH FRONT C, P285
   Tarski A., 1924, Fundam. Math, V6, P45, DOI [10.4064/fm-6-1-45-95, DOI 10.4064/FM-6-1-45-95]
   TIDEN E, 1986, LECT NOTES COMPUT SC, V230, P431
   Wang L., 2004, P 2004 ACM WORKSHOP, P45, DOI DOI 10.1145/1029133.1029140
   Yakhno T, 2000, LECT NOTES COMPUT SC, V1755, P434
   YELLICK K, 1985, LECT NOTES COMPUTER, V202
   [No title captured]
   [No title captured]
NR 72
TC 22
Z9 23
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2006
VL 6
BP 645
EP 701
DI 10.1017/S1471068406002730
PN 6
PG 57
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 106XJ
UT WOS:000242135000002
DA 2024-07-18
ER

PT J
AU López-Fraguas, FJ
   Sánchez-Hernández, J
AF López-Fraguas, FJ
   Sánchez-Hernández, J
TI A proof theoretic approach to failure in functional logic programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE constructive failure; functional logic programming; proof calculi
AB How to extract negative information from programs is an important issue in logic programming. Here we address the problem for functional logic programs, from a proof-theoretic perspective. The starting point of our work is CRWL (Constructor based ReWriting Logic), a well established theoretical framework for functional logic programming, whose fundamental notion is that of non-strict non-deterministic function. We present a proof calculus, CRWLF, which is able to deduce negative information from CRWL-programs. In particular, CRWLF is able to prove 'finite' failure of reduction within CRWL.
C1 Univ Complutense Madrid, Dept Sistemas Informat & Programac, E-28040 Madrid, Spain.
C3 Complutense University of Madrid
EM fraguas@sip.ucm.es; jaime@sip.ucm.es
RI Sánchez-Hernández, Jaime/AAE-3854-2020; LOPEZ FRAGUAS, FRANCISCO
   JAVIER/J-2945-2012
OI Sánchez-Hernández, Jaime/0000-0002-8940-5543; LOPEZ FRAGUAS, FRANCISCO
   JAVIER/0000-0001-8898-8647
CR ABENGOZARCARNER.M, 2002, TOY MULTIPARADIGM DE
   Antoy S., 1997, Springer LNCS, V1298, P16
   APT KR, 1994, J LOGIC PROGRAM, V20, P9, DOI 10.1016/0743-1066(94)90024-8
   APT KR, 2000, UNPUB LOGIC PROGRAMM
   Arenas-Sánchez P, 2001, THEOR PRACT LOG PROG, V1, P185
   Arenas-Sánchez P, 1999, LECT NOTES COMPUT SC, V1702, P152
   BERT D, 1995, P 1995 INT S LOG PRO, P162
   Clark K. L., 1978, Logic and data bases, P293
   González-Moreno JC, 1999, J LOGIC PROGRAM, V40, P47, DOI 10.1016/S0743-1066(98)10029-8
   GonzalezMoreno JC, 1997, LOGIC PROGRAMM, P153
   GONZALEZMORENO JC, 1996, LNCS, V1058, P156
   HANUS M, 1994, J LOGIC PROGRAM, V20, P583, DOI 10.1016/0743-1066(94)90034-5
   HANUS M, 1999, CURRY INTEGRATED FUN
   Jager G, 1998, STUD LOGIC, V137, P639
   López-Fraguas FJ, 2000, LECT NOTES ARTIF INT, V1861, P179
   LOPEZFRAGUAS F, 1999, LNCS, V1631, P244
   LOPEZFRAGUAS FJ, P JOINT C DECL PROGR, P89
   MORENONAVARRO JJ, 1994, MIT PS LOG, P535
   MORENONAVARRO JJ, 1996, P 5 INT WORKSH EXT L, V1050, P213
   PEYTONJONES S, 1999, HASSKELL 98 NONSTRIC
   Stuckey P. J., 1991, Proceedings of Sixth Annual IEEE Symposium on Logic in Computer Science (Cat. No.91CH3025-4), P328, DOI 10.1109/LICS.1991.151657
   STUCKEY PJ, 1995, INFORM COMPUT, V118, P12, DOI 10.1006/inco.1995.1048
NR 22
TC 10
Z9 10
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2004
VL 4
BP 41
EP 74
DI 10.1017/S1471068403001728
PN 1-2
PG 34
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 776LU
UT WOS:000189118100002
DA 2024-07-18
ER

PT J
AU Delgrande, JP
   Schaub, T
   Tompits, H
AF Delgrande, JP
   Schaub, T
   Tompits, H
TI A framework for compiling preferences in logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer sets semantics; preference; compilation
ID WELL-FOUNDED SEMANTICS; DEFAULT; CIRCUMSCRIPTION; COMPLEXITY
AB We introduce a methodology and framework for expressing general preference information in logic programming under the answer set semantics. An ordered logic program is an extended logic program in which rules,are named by unique terms, and in which preferences among rules are given by a set of atoms of form s < t where s and t are names. An ordered logic program is transformed into a second, regular, extended logic program wherein the preferences are respected, in that the answer sets obtained in the transformed program correspond with the preferred answer sets of the original program. Our approach allows the specification of dynamic orderings, in which preferences can appear arbitrarily within a program. Static orderings (in which preferences are external to a logic program) are a trivial restriction of the general dynamic case. First, we develop a specific approach to reasoning with preferences, wherein the preference ordering specifies the order in which rules are to be applied. We then demonstrate the wide range of applicability of our framework by showing how other approaches, among them that of Brewka and Eiter, can be captured within our framework. Since the result of each of these transformations is an extended logic program, we can make use of existing implementations, such as dlv and smodels. To this end, we have developed a publicly available compiler as a front-end for these programming systems.
C1 Simon Fraser Univ, Sch Comp Sci, Burnaby, BC V5A 1S6, Canada.
   Univ Potsdam, Inst Informat, D-14439 Potsdam, Germany.
   Vienna Univ Technol, Inst Informat Syst 184 3, A-1040 Vienna, Austria.
C3 Simon Fraser University; University of Potsdam; Technische Universitat
   Wien
RP Simon Fraser Univ, Sch Comp Sci, Burnaby, BC V5A 1S6, Canada.
EM jim@cs.sfu.ca; torsten@cs.uni-potsdam.de; tompits@kr.tuwien.ac.at
RI Schaub, Torsten/O-5873-2019
OI Schaub, Torsten/0000-0002-7456-041X
CR [Anonymous], 1996, Principles of Knowledge Representation
   [Anonymous], 2004, Optimality theory: Constraint interaction in generative grammar
   BAADER F, 1993, IJCAI-93, VOLS 1 AND 2, P669
   BENFERHAT S, 1993, IJCAI-93, VOLS 1 AND 2, P640
   BESNARD P, 2002, P 9 INT WORKSH NONM, P77
   Brewka G, 1999, ARTIF INTELL, V109, P297, DOI 10.1016/S0004-3702(99)00015-6
   Brewka G, 1996, J ARTIF INTELL RES, V4, P19, DOI 10.1613/jair.284
   Brewka G., 1989, IJCAI-89 Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, P1043
   Brewka G., 1994, Logics in Artificial Intelligence. European Workshop JELIA '94. Proceedings, P247, DOI 10.1007/BFb0021977
   BREWKA G, 1998, P 6 INT C PRINC KNOW, P86
   BREWKA G, 2000, INTELLECTICS COMPUTA, P27
   DELGRANDE J, 2001, LNCS, V2173, P411
   DELGRANDE J, 2000, P 8 INT WORKSH NONM
   Delgrande JP, 2000, LECT NOTES ARTIF INT, V1919, P376, DOI 10.1007/3-540-40006-0_26
   Delgrande JP, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P392
   Delgrande JP, 2000, SPRINGER INT SER ENG, V597, P107
   Delgrande JP, 2000, ARTIF INTELL, V123, P41, DOI 10.1016/S0004-3702(00)00049-7
   Delgrande JP, 1997, INT JOINT CONF ARTIF, P168
   DOYLE J, 1991, ARTIF INTELL, V49, P97, DOI 10.1016/0004-3702(91)90007-7
   EITER T, 1995, J ACM, V42, P3, DOI 10.1145/200836.200838
   Eiter T, 1997, LECT NOTES ARTIF INT, V1265, P363
   EITER T, 2002, P 8 INT C PRINC KNOW, P459
   GEFFNER H, 1992, ARTIF INTELL, V53, P209, DOI 10.1016/0004-3702(92)90071-5
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M, 1998, LECT NOTES ARTIF INT, V1471, P164, DOI 10.1007/BFb0054795
   GELFOND M, 1989, ARTIF INTELL, V38, P75, DOI 10.1016/0004-3702(89)90068-4
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   GORDON T, 1993, THESIS TH DARMSTADT
   Kager Rene, 1999, OPTIMALITY THEORY TX
   MCCARTHY J, 1986, ARTIF INTELL, V28, P89, DOI 10.1016/0004-3702(86)90032-9
   Nebel B., 1998, HDB DEFEASIBLE REASO, V3
   Niemela I, 1997, LECT NOTES ARTIF INT, V1265, P420
   PAPADIMITRIOU CH, 1994, ARTIF INTELL, V69, P347, DOI 10.1016/0004-3702(94)90087-6
   REITER R, 1980, ARTIF INTELL, V13, P81, DOI 10.1016/0004-3702(80)90014-4
   Rintanen J, 1998, J ARTIF INTELL RES, V9, P423, DOI 10.1613/jair.554
   Rintanen J, 1998, ARTIF INTELL, V106, P221, DOI 10.1016/S0004-3702(98)00097-6
   RINTANEN J, 1994, LECT NOTES ARTIF INT, V838, P232
   Sakama C, 2000, ARTIF INTELL, V123, P185, DOI 10.1016/S0004-3702(00)00054-0
   SAKAMA C, 1996, P 1996 JOINT INT C S, P82
   SCHAUB T, 2001, UNPUB SEMANTIC FRAME
   Schaub Torsten., 2001, IJCAI, P597
   VANDERHOEK W, 2000, P 14 EUR C ART INT E, P33
   Wang KW, 2000, LECT NOTES ARTIF INT, V1861, P164
   Zhang Y, 1997, LOGIC PROGRAMM, P69
   ZHANG Y, 2000, LOGIC PROGRAM BASED
   [No title captured]
NR 46
TC 76
Z9 78
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2003
VL 3
BP 129
EP 187
DI 10.1017/S1471068402001539
PN 2
PG 59
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 674LK
UT WOS:000182638100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fandinno, J
   Lifschitz, V
AF Fandinno, Jorge
   Lifschitz, Vladimir
TI Positive Dependency Graphs Revisited
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; stable models; completion; splitting; loop
   formulas
ID STABLE MODEL SEMANTICS; ANSWER SETS
AB Theory of stable models is the mathematical basis of answer set programming. Several results in that theory refer to the concept of the positive dependency graph of a logic program. We describe a modification of that concept and show that the new understanding of positive dependency makes it possible to strengthen some of these results.
C1 [Fandinno, Jorge] Univ Nebraska, Omaha, NE 68182 USA.
   [Lifschitz, Vladimir] Univ Texas Austin, Austin, TX 78712 USA.
C3 University of Nebraska System; University of Texas System; University of
   Texas Austin
RP Fandinno, J (corresponding author), Univ Nebraska, Omaha, NE 68182 USA.
EM jfandinno@unomaha.edu; lifschitzv@gmail.com
RI Fandinno, Jorge/JJC-6227-2023; Fandiño, Jorge/F-8705-2016
OI Fandiño, Jorge/0000-0002-3917-8717; Lifschitz,
   Vladimir/0000-0001-6051-7907
CR Apt K. R., 1988, FDN DEDUCTIVE DATABA, P89, DOI DOI 10.1016/B978-0-934613-40-8.50006-3
   Bartholomew M, 2019, ARTIF INTELL, V273, P56, DOI 10.1016/j.artint.2019.01.001
   Clark K. L., 1978, Logic and data bases, P293
   Fages F., 1994, Methods of Logic in Computer Science, V1, P51
   Fandinno J., 2021, ELECT P THEORETICAL, V345
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Ferraris P, 2006, ANN MATH ARTIF INTEL, V47, P79, DOI 10.1007/s10472-006-9025-2
   Ferraris P, 2011, ARTIF INTELL, V175, P236, DOI 10.1016/j.artint.2010.04.011
   Ferraris P, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P797
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Harrison A, 2016, THEOR PRACT LOG PROG, V16, P771, DOI 10.1017/S1471068416000314
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V., 1986, Proceedings AAAI-86: Fifth National Conference on Artificial Intelligence, P406
   Lifschitz V., 2019, Answer Set Programming, DOI DOI 10.1007/978-3-030-24658-7
   Lifschitz V, 2013, THEOR PRACT LOG PROG, V13, P503, DOI 10.1017/S1471068413000318
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Lloyd J. W., 1984, Journal of Logic Programming, V1, P225, DOI 10.1016/0743-1066(84)90011-6
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Oikarinen E, 2008, THEOR PRACT LOG PROG, V8, P717, DOI 10.1017/S147106840800358X
NR 20
TC 0
Z9 0
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2023
VL 23
IS 5
BP 1128
EP 1137
AR PII S1471068422000333
DI 10.1017/S1471068422000333
EA AUG 2022
PG 10
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA IE8Z7
UT WOS:000843359500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU El-Kholany, MMS
   Gebser, M
   Schekotihin, K
AF El-Kholany, Mohammed M. S.
   Gebser, Martin
   Schekotihin, Konstantin
TI Problem Decomposition and Multi-shot ASP Solving for Job-shop Scheduling
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE job-shop scheduling problem; answer set programming; problem
   decomposition
AB Scheduling methods are important for effective production and logistics management, where tasks need to be allocated and performed with limited resources. In particular, the Job-shop Scheduling Problem (JSP) is a well known and challenging combinatorial optimization problem in which tasks sharing a machine are to be arranged in a sequence such that encompassing jobs can be completed as early as possible. Given that already moderately sized JSP instances can be highly combinatorial, and neither optimal schedules nor the runtime to termination of complete optimization methods is known, efficient approaches to approximate good-quality schedules are of interest. In this paper, we propose problem decomposition into time windows whose operations can be successively scheduled and optimized by means of multi-shot Answer Set Programming (ASP) solving. From a computational perspective, decomposition aims to split highly complex scheduling tasks into better manageable subproblems with a balanced number of operations so that good-quality or even optimal partial solutions can be reliably found in a small fraction of runtime. Regarding the feasibility and quality of solutions, problem decomposition must respect the precedence of operations within their jobs and partial schedules optimized by time windows should yield better global solutions than obtainable in similar runtime on the entire instance. We devise and investigate a variety of decomposition strategies in terms of the number and size of time windows as well as heuristics for choosing their operations. Moreover, we incorporate time window overlapping and compression techniques into the iterative scheduling process to counteract window-wise optimization limitations restricted to partial schedules. Our experiments on JSP benchmark sets of several sizes show that successive optimization by multi-shot ASP solving leads to substantially better schedules within the runtime limit than global optimization on the full problem, where the gap increases with the number of operations to schedule. While the obtained solution quality still remains behind a state-of-the-art Constraint Programming system, our multi-shot solving approach comes closer the larger the instance size, demonstrating good scalability by problem decomposition.
C1 [El-Kholany, Mohammed M. S.; Gebser, Martin; Schekotihin, Konstantin] Univ Klagenfurt, Klagenfurt, Austria.
   [El-Kholany, Mohammed M. S.] Cairo Univ, Cairo, Egypt.
   [Gebser, Martin] Graz Univ Technol, Graz, Austria.
C3 University of Klagenfurt; Egyptian Knowledge Bank (EKB); Cairo
   University; Graz University of Technology
RP El-Kholany, MMS (corresponding author), Univ Klagenfurt, Klagenfurt, Austria.; El-Kholany, MMS (corresponding author), Cairo Univ, Cairo, Egypt.
EM Mohammed.El-Kholany@aau.at; Martin.Gebser@aau.at;
   Konstantin.Schekotihin@aau.at
RI Schekotihin, Konstantin/IZN-7815-2023; Gebser, Martin/B-7169-2018
OI Schekotihin, Konstantin/0000-0002-0286-0958; 
FU KWF [28472]; cms electronics GmbH; FunderMax GmbH; Hirsch Armbander
   GmbH; IT GmbH; Infineon Technologies Austria AG; Isovolta AG; Kostwein
   Holding GmbH; Privatstiftung Karntner Sparkasse
FX This work was partially funded by KWF project 28472, cms electronics
   GmbH, FunderMax GmbH, Hirsch Armbander GmbH, incubed IT GmbH, Infineon
   Technologies Austria AG, Isovolta AG, Kostwein Holding GmbH, and
   Privatstiftung Karntner Sparkasse. We thank the anonymous reviewers for
   their valuable suggestions and comments.
CR Abels D, 2021, THEOR PRACT LOG PROG, V21, P317, DOI 10.1017/S1471068420000046
   Abseher M, 2016, FUND INFORM, V147, P1, DOI 10.3233/FI-2016-1396
   ADAMS J, 1988, MANAGE SCI, V34, P391, DOI 10.1287/mnsc.34.3.391
   Baker K. R., 1974, INTRO SEQUENCING SCH
   Balduccini M, 2011, LECT NOTES ARTIF INT, V6645, P284
   Banbara M, 2019, ANN OPER RES, V275, P3, DOI 10.1007/s10479-018-2757-7
   BLACKSTONE JH, 1982, INT J PROD RES, V20, P27, DOI 10.1080/00207548208947745
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Cotton S, 2006, LECT NOTES COMPUT SC, V4121, P170
   Da Col G, 2019, LECT NOTES COMPUT SC, V11802, P144, DOI 10.1007/978-3-030-30048-7_9
   Daneshamooz F, 2021, KYBERNETES, V50, P3222, DOI 10.1108/K-08-2020-0521
   Dodaro C, 2021, THEOR PRACT LOG PROG, V21, P835, DOI 10.1017/S1471068421000363
   El-Kholany M., TAASP 2020
   El-kholany Mohammed M. S., 2022, Practical Aspects of Declarative Languages: 24th International Symposium, PADL 2022, Proceedings. Lecture Notes in Computer Science, Programming and Software Engineering (13165), P165, DOI 10.1007/978-3-030-94479-7_11
   Francescutto G., LNCS, V12678, P313
   Garey M. R., 1976, Mathematics of Operations Research, V1, P117, DOI 10.1287/moor.1.2.117
   Gebser M., 2016, OASICS SCHLOSS DAGST, V2, P15
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   Gebser M, 2015, THEOR PRACT LOG PROG, V15, P449, DOI 10.1017/S1471068415000150
   Kaminski R., 2021, CORR ABS210804769
   Kopp D, 2020, IEEE T SEMICONDUCT M, V33, P522, DOI 10.1109/TSM.2020.3001933
   KovAcs B., LIPICS SCHLOSS DAGST, V210
   Lenstra JK, 1977, STUDIES INTEGER PROG, P343, DOI [DOI 10.1016/S0167-5060(08)70743-X, 10.1016/S0167-5060, DOI 10.1016/S0167-5060]
   Lifschitz V., 2019, Answer Set Programming, DOI DOI 10.1007/978-3-030-24658-7
   Liu M, 2008, MATH COMPUT MODEL, V47, P411, DOI 10.1016/j.mcm.2007.03.032
   Ovacik I. M., 2012, Decomposition methods for complex factory scheduling problems
   Perron L., 2019, OR TOOLS
   Pezzella F, 2008, COMPUT OPER RES, V35, P3202, DOI 10.1016/j.cor.2007.02.014
   Ricca F, 2012, THEOR PRACT LOG PROG, V12, P361, DOI 10.1017/S147106841100007X
   Shi GQ, 2022, INT J PROD RES, V60, P5505, DOI 10.1080/00207543.2021.1963496
   Shylo O., 2018, CORR ABS180810813
   Singer M, 2001, COMPUT OPER RES, V28, P193, DOI 10.1016/S0305-0548(99)00098-2
   TAILLARD E, 1993, EUR J OPER RES, V64, P278, DOI 10.1016/0377-2217(93)90182-M
   Tassel P., 2021, PRL 2021
   Uzsoy R, 2000, INT J PROD RES, V38, P1271, DOI 10.1080/002075400188843
   Zhai YN, 2014, J IND ENG MANAG-JIEM, V7, P1397, DOI 10.3926/jiem.1206
   Zhang R, 2010, APPL INTELL, V32, P47, DOI 10.1007/s10489-008-0134-y
NR 37
TC 6
Z9 6
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2022
VL 22
IS 4
SI SI
BP 623
EP 639
AR PII S1471068422000217
DI 10.1017/S1471068422000217
EA JUL 2022
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 3T5UX
UT WOS:000821332500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cabalar, P
   Fandinno, J
   Del Cerro, LF
AF Cabalar, Pedro
   Fandinno, Jorge
   Del Cerro, Luis Farinas
TI Splitting Epistemic Logic Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE knowledge representation and nonmonotonic reasoning; logic programming
   methodology and applications; theory
ID STABLE MODELS; SEMANTICS
AB Epistemic logic programs constitute an extension of the stable model semantics to deal with new constructs called subjective literals. Informally speaking, a subjective literal allows checking whether some objective literal is true in all or some stable models. As it can be imagined, the associated semantics has proved to be non-trivial, since the truth of subjective literals may interfere with the set of stable models it is supposed to query. As a consequence, no clear agreement has been reached and different semantic proposals have been made in the literature. Unfortunately, comparison among these proposals has been limited to a study of their effect on individual examples, rather than identifying general properties to be checked. In this paper, we propose an extension of the well-known splitting property for logic programs to the epistemic case. We formally define when an arbitrary semantics satisfies the epistemic splitting property and examine some of the consequences that can be derived from that, including its relation to conformant planning and to epistemic constraints. Interestingly, we prove (through counterexamples) that most of the existing approaches fail to fulfill the epistemic splitting property, except the original semantics proposed by Gelfond 1991 and a recent proposal by the authors, called Founded Autoepistemic Equilibrium Logic.
C1 [Cabalar, Pedro] Univ A Coruna, La Coruna, Spain.
   [Fandinno, Jorge] Univ Potsdam, Potsdam, Germany.
   [Del Cerro, Luis Farinas] Univ Toulouse, CNRS, IRIT, Toulouse, France.
C3 Universidade da Coruna; University of Potsdam; Centre National de la
   Recherche Scientifique (CNRS); Universite Federale Toulouse
   Midi-Pyrenees (ComUE); Universite de Toulouse; Institut National
   Polytechnique de Toulouse; Universite Toulouse III - Paul Sabatier
RP Cabalar, P (corresponding author), Univ A Coruna, La Coruna, Spain.
EM cabalar@udc.es; fandinno@uni-potsdam.de; farinas@irit.fr
RI Fandiño, Jorge/F-8705-2016; Cabalar, Pedro/AAE-5198-2020; Fandinno,
   Jorge/JJC-6227-2023
OI Fandiño, Jorge/0000-0002-3917-8717; 
FU MINECO, Spain [TIC2017-84453-P]; Xunta de Galicia, Spain [GPC ED431B
   2019/03]; Centre International de Mathematiques et d'Informatique de
   Toulouse (CIMI) [ANR-11-LABEX-0040-CIMI, ANR-11-IDEX-0002-02]; Alexander
   von Humboldt Foundation
FX This is an extended version of a conference paper presented at the
   Fifteenth International Conference on Logic Programming and Nonmonotonic
   Reasoning, Philadelphia, PA, USA, June 3-7, 2019, where it received a
   best technical paper award (Cabalar et al. 2019b) An earlier version was
   also presented at the Seventeenth International Workshop on
   Non-monotonic Reasoning (Cabalar et al. 2018). This work was partially
   supported by MINECO, Spain, grant TIC2017-84453-P, Xunta de Galicia,
   Spain (GPC ED431B 2019/03). The second author was funded by the Centre
   International de Math ' ematiques et d'Informatique de Toulouse (CIMI)
   through contract ANR-11-LABEX-0040CIMI within the program
   ANR-11-IDEX-0002-02 and the Alexander von Humboldt Foundation. We are
   thankful to Michael Gelfond, Richard Watson, Patrick T. Kahl, and the
   anonymous reviewers of the Seventeenth International Workshop on
   Non-monotonic Reasoning (NMR'18) and the Fifteenth International
   Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR'19)
   where preliminary versions of this work were presented, for their
   comments and suggestions that have helped improving the paper
   substantially. We are also thankful to the organizers of LPNMR'19 for
   their support in preparing this extended version.
CR Balduccini M., 2019, LECT NOTES ARTIFICIA, V11481
   Cabalar P., 2019, SPLITTING EPISTEMIC, P120
   Cabalar P., 2018, P 17 INT WORKSHOP NO, P81
   Cabalar P, 2019, LECT NOTES ARTIF INT, V11481, P134, DOI 10.1007/978-3-030-20528-7_11
   del Cerro LF, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2964
   Fandinno J, 2019, THEOR PRACT LOG PROG, V19, P671, DOI 10.1017/S1471068419000127
   Gelfond M., 1992, Fundamenta Informaticae, V16, P59
   GELFOND M, 1991, PROCEEDINGS : NINTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P386
   Gelfond M, 2011, LECT NOTES ARTIF INT, V6645, P260
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   KAHL P., 2015, J LOGIC COMPUT
   Lecrerc A., 2018, P 11 INT WORKSHOP AN
   Lecrerc A., 2018, TECHNICAL COMMUNICAT
   Leone N, 1997, INFORM COMPUT, V135, P69, DOI 10.1006/inco.1997.2630
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   MOORE RC, 1985, ARTIF INTELL, V25, P75, DOI 10.1016/0004-3702(85)90042-6
   Pearce D, 1997, LECT NOTES ARTIF INT, V1216, P57, DOI 10.1007/BFb0023801
   Shen YD, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5060
   Sierra C., 2017, P 26 INT JOINT C ART
   Son TC, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1269
   Truszczyriski Miroslaw, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P315, DOI 10.1007/978-3-642-20832-4_20
   Wang KW, 2005, LECT NOTES ARTIF INT, V3662, P279, DOI 10.1007/11546207_22
   Watson R., 2000, P 8 INT WORKSHOP NON
NR 23
TC 3
Z9 3
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2021
VL 21
IS 3
BP 296
EP 316
AR PII S1471068420000058
DI 10.1017/S1471068420000058
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA TH4CJ
UT WOS:000672039200002
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Dylus, S
   Christiansen, J
   Teegen, F
AF Dylus, Sandra
   Christiansen, Jan
   Teegen, Finn
TI Implementing a Library for Probabilistic Programming Using Non-strict
   Non-determinism
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE probabilistic programming; functional logic programming;
   non-determinism; laziness; call-time choice
AB This paper presents PFLP, a library for probabilistic programming in the functional logic programming language Curry. It demonstrates how the concepts of a functional logic programming language support the implementation of a library for probabilistic programming. In fact, the paradigms of functional logic and probabilistic programming are closely connected. That is, language characteristics from one area exist in the other and vice versa. For example, the concepts of non-deterministic choice and call-time choice as known from functional logic programming are related to and coincide with stochastic memoization and probabilistic choice in probabilistic programming, respectively. We will further see that an implementation based on the concepts of functional logic programming can have benefits with respect to performance compared to a standard list-based implementation and can even compete with full-blown probabilistic programming languages, which we illustrate by several benchmarks.
C1 [Dylus, Sandra; Teegen, Finn] Univ Kiel, Kiel, Germany.
   [Christiansen, Jan] Flensburg Univ Appl Sci, Flensburg, Germany.
C3 University of Kiel
RP Dylus, S (corresponding author), Univ Kiel, Kiel, Germany.
EM sad@informatik.uni-kiel.de; jan.christiansen@hs-flensburg.de;
   fte@informatik.uni-kiel.de
OI Dylus, Sandra/0000-0003-3606-4543
CR Antoy S, 2005, J SYMB COMPUT, V40, P875, DOI 10.1016/j.jsc.2004.12.007
   Antoy S, 2010, COMMUN ACM, V53, P74, DOI 10.1145/1721654.1721675
   Brassel B, 2009, ELECTRON NOTES THEOR, V246, P39, DOI 10.1016/j.entcs.2009.07.014
   Brassel B, 2011, LECT NOTES COMPUT SC, V6816, P1, DOI 10.1007/978-3-642-22531-4_1
   CHRISTIANSEN J, 2011, LNCS
   Christiansen J, 2008, LECT NOTES COMPUT SC, V4989, P322
   Christiansen J, 2010, PLPV'10: PROCEEDINGS OF THE 2010 ACM SIGPLAN WORKSHOP ON PROGRAMMING LANGUAGES MEETS PROGRAM VERIFICATION, P39, DOI 10.1145/1707790.1707797
   De Raedt L, 2013, ARXIV13124328
   Dylus S, 2018, LECT NOTES COMPUT SC, V10702, P3, DOI 10.1007/978-3-319-73305-0_1
   Erwig M, 2006, J FUNCT PROGRAM, V16, P21, DOI 10.1017/S0956796805005721
   Fischer S, 2009, ICFP'09: PROCEEDINGS OF THE 2009 ACM SIGPLAN INTERNATIONAL CONFERENCE ON FUNCTIONAL PROGRAMMING, P11
   Goodman N. D., 2014, DESIGN IMPLEMENTATIO
   Gordon Andrew D., 2014, P FUTURE SOFTWARE EN, P167, DOI [10.1145/2593882.2593900, DOI 10.1145/2593882.2593900]
   Hanus M, 2017, PAKCS PORTLAND AACHE
   HUCH F., 2004, J FUNCTIONAL LOGIC P, V2004, P6
   Kimmig A, 2011, THEOR PRACT LOG PROG, V11, P235, DOI 10.1017/S1471068410000566
   Kiselyov O, 2009, LECT NOTES COMPUT SC, V5658, P360, DOI 10.1007/978-3-642-03034-5_17
   McCallum A., 2009, P INT C NEUR INF PRO
   Nampally Arun., 2015, 2 INT WORKSHOP PROBA, P46
   Nestor C, 2008, BIOL REPROD, P220
   Nogatz F, 2018, LECT NOTES COMPUT SC, V11092, P131, DOI 10.1007/978-3-319-99906-7_9
   Paige B., 2014, P INT C MACH LEARN
   Runciman C, 2008, HASKELL'08: PROCEEDINGS OF THE ACM SIGPLAN 2008 HASKELL SYMPOSIUM, P37
   Scibior A, 2015, ACM SIGPLAN NOTICES, V50, P165, DOI 10.1145/2804302.2804317
   Varacca D, 2006, MATH STRUCT COMP SCI, V16, P87, DOI 10.1017/S0960129505005074
   WADLER P, 1985, LECT NOTES COMPUT SC, V201, P113
   Wood F, 2014, JMLR WORKSH CONF PRO, V33, P1024
NR 27
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2020
VL 20
IS 1
BP 147
EP 175
DI 10.1017/S1471068419000085
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA JZ2EH
UT WOS:000504915200004
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Harrison, A
   Lifschitz, V
AF Harrison, Amelia
   Lifschitz, Vladimir
TI Relating Two Dialects of Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Answer set programming; answer set solvers; stable models; aggregates
ID SEMANTICS; LOGIC
AB The input language of the answer set solver clingo is based on the definition of a stable model proposed by Paolo Ferraris. The semantics of the ASP-Core language, developed by the ASP Standardization Working Group, uses the approach to stable models due to Wolfgang Faber, Nicola Leone, and Gerald Pfeifer. The two languages are based on different versions of the stable model semantics, and the ASP-Core document requires, "for the sake of an uncontroversial semantics," that programs avoid the use of recursion through aggregates. In this paper we prove that the absence of recursion through aggregates does indeed guarantee the equivalence between the two versions of the stable model semantics, and show how that requirement can be relaxed without violating the equivalence property.
C1 [Harrison, Amelia] Google, Mountain View, CA 94043 USA.
   [Lifschitz, Vladimir] Univ Texas Austin, Austin, TX 78712 USA.
C3 Google Incorporated; University of Texas System; University of Texas
   Austin
RP Harrison, A (corresponding author), Google, Mountain View, CA 94043 USA.
EM amelia.j.harrison@gmail.com; vl@cs.utexas.edu
OI Lifschitz, Vladimir/0000-0001-6051-7907
FU National Science Foundation [IIS-1422455]
FX Martin Gebser made a valuable contribution to our work by pointing out
   an oversight in an earlier version of the proof and suggesting a way to
   correct it. We are grateful to Wolfgang Faber, Jorge Fandino, Michael
   Gelfond, and Yuanlin Zhang for useful discussions related to the topic
   of this paper, and to the anonymous referees for their comments. This
   research was partially supported by the National Science Foundation
   under Grant IIS-1422455.
CR Bartholomew M., 2011, Proceedings of International Joint Conference on Artificial Intelligence (IJCAI), P724
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Ferraris P, 2006, ANN MATH ARTIF INTEL, V47, P79, DOI 10.1007/s10472-006-9025-2
   Gebser M, 2015, THEOR PRACT LOG PROG, V15, P449, DOI 10.1017/S1471068415000150
   Gelfond M., 2014, THEOR PRACT LOG PROG, V14, P4
   HARRISON A, 2017, THESIS
   Harrison A, 2017, ARTIF INTELL, V246, P22, DOI 10.1016/j.artint.2017.02.002
   Heyting A, 1930, SITZBER PREUSS AKAD, P42
   Truszczynski M., 2012, Lecture Notes in Computer Science, V7265, P543
   Truszczynski M, 2010, ARTIF INTELL, V174, P1285, DOI 10.1016/j.artint.2010.08.004
NR 12
TC 2
Z9 2
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 1006
EP 1020
DI 10.1017/S1471068419000322
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500024
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Duck, GJ
   Jaffar, J
   Yap, RHC
AF Duck, Gregory J.
   Jaffar, Joxan
   Yap, Roland H. C.
TI Shape Neutral Analysis of Graph-based Data-structures
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
DE Constraint Handling Rules; Satisfiability Modulo Constraint Handling
   Rules; Satisfiability Modulo Theories; Program Analysis;
   Data-structures; Memory Errors
AB Malformed data-structures can lead to runtime errors such as arbitrary memory access or corruption. Despite this, reasoning over data-structure properties for low-level heap manipulating programs remains challenging. In this paper we present a constraint-based program analysis that checks data-structure integrity, w.r.t. given target data-structure properties, as the heap is manipulated by the program. Our approach is to automatically generate a solver for properties using the type definitions from the target program. The generated solver is implemented using a Constraint Handling Rules (CHR) extension of built-in heap, integer and equality solvers. A key property of our program analysis is that the target data-structure properties are shape neutral, i.e., the analysis does not check for properties relating to a given data-structure graph shape, such as doubly-linked-lists versus trees. Nevertheless, the analysis can detect errors in a wide range of data-structure manipulating programs, including those that use lists, trees, DAGs, graphs, etc. We present an implementation that uses the Satisfiability Modulo Constraint Handling Rules (SMCHR) system. Experimental results show that our approach works well for real-world C programs.
C1 [Duck, Gregory J.; Jaffar, Joxan; Yap, Roland H. C.] Natl Univ Singapore, Dept Comp Sci, Singapore, Singapore.
C3 National University of Singapore
RP Duck, GJ (corresponding author), Natl Univ Singapore, Dept Comp Sci, Singapore, Singapore.
EM gregory@comp.nus.edu.sg; joxan@comp.nus.edu.sg; ryap@comp.nus.edu.sg
RI Yap, Roland/P-7563-2014
OI Duck, Gregory/0000-0002-0837-9671
FU  [MOE2015-T2-1-117];  [R-252-000-598-592]
FX This research was partially supported by MOE2015-T2-1-117 and
   R-252-000-598-592.
CR [Anonymous], 2014, TOOLS ALGORITHMS CON
   Berdine J., 2011, COMPUTER AIDED VERIF
   Berdine J., 2007, COMPUTER AIDED VERIF
   Berdine J., 2005, FORMAL METHODS COMPO
   Boehm H., 1988, SOFTWARE PRACTICE EX, V18, P9
   Distefano D., 2006, TOOLS ALGORITHMS CON
   Duck G., 2017, NETWORK DISTRIBUTED
   Duck G., 2013, CONSTRAINT PROGRAMMI
   Duck G., 2013, INT JOINT C ART INT
   Duck G., 2016, Compiler Construction
   Duck GJ, 2012, THEOR PRACT LOG PROG, V12, P601, DOI 10.1017/S1471068412000208
   Dudka K., 2011, COMPUTER AIDED VERIF
   Dudka K., 2013, STATIC ANAL
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Fruhwirth T.W., 2009, Constraint Handling Rules
   Hinze R., 2006, J FUNCTIONAL PROGRAM, V16, P2
   Jacobs B., 2011, NASA FORMAL METHODS
   Matthews J., 2006, LOGIC PROGRAMMING AR
   Merz F., 2012, VERIFIED SOFTWARE TH
   Reynolds J., 2002, LOGIC COMPUTER SCI
NR 20
TC 0
Z9 0
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 470
EP 483
DI 10.1017/S147106841800025X
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400012
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Farka, F
   Komendantskya, E
   Hammond, K
AF Farka, Frantisek
   Komendantskya, Ekaterina
   Hammond, Kevin
TI Proof-relevant Horn Clauses for Dependent Type Inference and Term
   Synthesis
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
DE Proof-relevant logic; Horn clauses; Dependent types; Type Inference;
   Proof-relevant resolution
AB First-order resolution has been used for type inference for many years, including in Hindley-Milner type inference, type-classes, and constrained data types. Dependent types are a new trend in functional languages. In this paper, we show that proof-relevant first-order resolution can play an important role in automating type inference and term synthesis for dependently typed languages. We propose a calculus that translates type inference and term synthesis problems in a dependently typed language to a logic program and a goal in the proof-relevant first-order Horn clause logic. The computed answer substitution and proof term then provide a solution to the given type inference and term synthesis problem. We prove the decidability and soundness of our method.
C1 [Farka, Frantisek; Hammond, Kevin] Univ St Andrews, St Andrews, Fife, Scotland.
   [Farka, Frantisek; Komendantskya, Ekaterina] Heriot Watt Univ, Edinburgh, Midlothian, Scotland.
C3 University of St Andrews; Heriot Watt University
RP Farka, F (corresponding author), Univ St Andrews, St Andrews, Fife, Scotland.; Farka, F (corresponding author), Heriot Watt Univ, Edinburgh, Midlothian, Scotland.
EM ff12@st-andrews.ac.uk; ek19@hw.ac.uk; kevin@kevinhammond.net
OI Hammond, Kevin/0000-0002-4326-4562
FU EPSRC grant "Coalgebraic Logic Programming for Type Inference"
   [EP/K031864/1-2]; EU Horizon 2020 grant "RePhrase: Refactoring Parallel
   Heterogeneous Resource-Aware Applications - a Software Engineering
   Approach" [ICT-644235]; COST Action [IC1202]; COST (European Cooperation
   in Science and Technology); EPSRC [EP/K031864/2, EP/N014758/1,
   EP/K031864/1, EP/P020631/1] Funding Source: UKRI
FX This work has been supported by the EPSRC grant "Coalgebraic Logic
   Programming for Type Inference" EP/K031864/1-2, EU Horizon 2020 grant
   "RePhrase: Refactoring Parallel Heterogeneous Resource-Aware
   Applications - a Software Engineering Approach" (ICT-644235), and by
   COST Action IC1202 (TACLe), supported by COST (European Cooperation in
   Science and Technology). We would like to thank Andreas Abel, Greg
   Michaelson, and anonymous referees for helpful comments on earlier
   versions of the paper.
CR Ahn K. Y., 2016, EXECUTABLE RELATIONA
   Bottu G., 2017, QUANTIFIED CLASS CON
   Brady E, 2013, J FUNCT PROGRAM, V23, P552, DOI 10.1017/S095679681300018X
   Diatchki I. S., 2017, P 10 ACM SIGPLAN INT
   Farka F., 2016, LECT NOTES COMPUTER, P311
   Fu P., 2016, PROOF RELEVANT COREC
   Fu P, 2017, FORM ASP COMPUT, V29, P453, DOI 10.1007/s00165-016-0403-1
   Gonthier G, 2010, J FORMALIZ REASON, V3, P95
   Harper R., 2005, ACM Transactions on Computational Logic, V6, P61, DOI 10.1145/1042038.1042041
   Hemann Jason, 2017, ACM SIGPLAN Notices, V52, P96, DOI 10.1145/3093334.2989230
   Karachalias G., 2017, ELABORATION FUNCTION
   Kiselyov O., 2016, LECT NOTES COMPUTER, V9613
   Miller D., 2012, PROGRAMMING HIGHER O
   MILNER R, 1978, J COMPUT SYST SCI, V17, P348, DOI 10.1016/0022-0000(78)90014-4
   Odersky M, 1999, THEOR PRACT OBJ SYST, V5, P35, DOI 10.1002/(SICI)1096-9942(199901/03)5:1<35::AID-TAPO4>3.0.CO;2-4
   Peyton Jones S., 1997, HASK WORKSH
   Pientka B, 2013, J FUNCT PROGRAM, V23, P1, DOI 10.1017/S0956796812000408
   Pientka B, 2010, LECT NOTES ARTIF INT, V6173, P15
   Slama F, 2017, LECT NOTES ARTIF INT, V10383, P40, DOI 10.1007/978-3-319-62075-6_4
   Stuckey PJ, 2002, ACM SIGPLAN NOTICES, V37, P167, DOI 10.1145/583852.581495
   Sulzmann M, 2008, J FUNCT PROGRAM, V18, P251, DOI 10.1017/S0956796807006569
   Vazou N., 2018, POPL
   Weirich S., 2017, ICFP
NR 23
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 484
EP 501
DI 10.1017/S1471068418000212
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400013
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Verborgh, R
   Arndt, D
   Van Hoecke, S
   De Roo, J
   Mels, G
   Steiner, T
   Gabarro, J
AF Verborgh, Ruben
   Arndt, Dorthe
   Van Hoecke, Sofie
   De Roo, Jos
   Mels, Giovanni
   Steiner, Thomas
   Gabarro, Joaquim
TI The pragmatic proof: Hypermedia API composition and execution
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE composition; proof; reasoning; Semantic Web; hypermedia APIs; Web APIs
ID SEMANTIC ANNOTATIONS; WEB; SAWSDL
AB Machine clients are increasingly making use of the Web to perform tasks. While Web services traditionally mimic remote procedure calling interfaces, a new generation of socalled hypermedia APIs works through hyperlinks and forms, in a way similar to how people browse the Web. This means that existing composition techniques, which determine a procedural plan upfront, are not sufficient to consume hypermedia APIs, which need to be navigated at runtime. Clients instead need a more dynamic plan that allows them to follow hyperlinks and use forms with a preset goal. Therefore, in this paper, we show how compositions of hypermedia APIs can be created by generic Semantic Web reasoners. This is achieved through the generation of a proof based on semantic descriptions of the APIs' functionality. To pragmatically verify the applicability of compositions, we introduce the notion of pre-execution and post-execution proofs. The runtime interaction between a client and a server is guided by proofs but driven by hypermedia, allowing the client to react to the application's actual state indicated by the server's response. We describe how to generate compositions from descriptions, discuss a computer-assisted process to generate descriptions, and verify reasoner performance on various composition tasks using a benchmark suite. The experimental results lead to the conclusion that proof-based consumption of hypermedia APIs is a feasible strategy at Web scale.
C1 [Verborgh, Ruben; Arndt, Dorthe; Van Hoecke, Sofie] Univ Ghent, iMinds, Data Sci Lab, Sint Pietersnieuwstr 41, B-9000 Ghent, Belgium.
   [De Roo, Jos; Mels, Giovanni] Agfa Healthcare, Moutstr 100, B-9000 Ghent, Belgium.
   [Steiner, Thomas; Gabarro, Joaquim] Univ Politecn Cataluna, Dept LSI, ES-08034 Barcelona, Spain.
C3 Ghent University; IMEC; Agfa-Gevaert; Universitat Politecnica de
   Catalunya
RP Verborgh, R (corresponding author), Univ Ghent, iMinds, Data Sci Lab, Sint Pietersnieuwstr 41, B-9000 Ghent, Belgium.
EM ruben.verborgh@ugent.be; dorthe.arndt@ugent.be; vanhoecke@ugent.be;
   jos.deroo@agfa.com; giovanni.mels@agfa.com; tomac@google.com;
   gabarro@lsi.upc.edu
RI Van Hoecke, Sofie/KAM-3603-2024; Verborgh, Ruben/P-6571-2014
OI Steiner, Thomas/0000-0001-7482-6129; Verborgh, Ruben/0000-0002-8596-222X
FU Ghent University; Institute for the Promotion of Innovation by Science
   and Technology in Flanders (IWT); European Union
FX Ruben Verborgh is a Postdoctoral Fellow of the Research Foundation
   Flanders. The research activities were funded by Ghent University, the
   Institute for the Promotion of Innovation by Science and Technology in
   Flanders (IWT), and the European Union.
CR Abiteboul S, 1995, FDN DATABASES
   Alarcon R, 2011, LECT NOTES COMPUT SC, V6568, P111, DOI 10.1007/978-3-642-19394-1_12
   Alarcon Rosa., 2010, Proceedings of the 19th International Conference on World wide web, P1051, DOI DOI 10.1145/1772690.1772799
   Angele J., 2005, Web Rule Language (WRL)"
   [Anonymous], 2004, OWL S SEMANTIC MARKU
   Arndt D, 2015, LECT NOTES COMPUT SC, V9202, P127, DOI 10.1007/978-3-319-21542-6_9
   Auer S, 2007, LECT NOTES COMPUT SC, V4825, P722, DOI 10.1007/978-3-540-76298-0_52
   Baget JF, 2015, LECT NOTES COMPUT SC, V9202, P328, DOI 10.1007/978-3-319-21542-6_21
   Baget JF, 2011, ARTIF INTELL, V175, P1620, DOI 10.1016/j.artint.2011.03.002
   BECKETT D., 2013, TURTLE TERSE RDF TRI
   BERLIND D., 2013, PROGRAMMABLEWEBS DIR
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Berners-Lee T., 2000, SEMANTIC WEB APPL PL
   Berners-Lee T, 2008, THEOR PRACT LOG PROG, V8, P249, DOI 10.1017/S1471068407003213
   BERNERSLEE TJ, 1992, COMPUT NETWORKS ISDN, V25, P454, DOI 10.1016/0169-7552(92)90039-S
   BISHOP B., 2008, P INT WORKSH ADV REA
   Bizer C., 2011, STATE LOD CLOUD
   Bock C., 2012, OWL 2 Web Ontology Language Structural Specification and Functional-Style Syntax, VSecond
   Brickley D., 2004, RDF VOCABULARY DESCR
   Calì A, 2011, LECT NOTES COMPUT SC, V6702, P351
   Carroll Jeremy J., 2004, P 13 INT WORLD WID W, P74, DOI [10.1145/, DOI 10.1145/1013367.1013381]
   Christensen E., 2001, WEB SERVICES DESCRIP
   Clocksin W.F., 1994, PROGRAMMING PROLOG
   Connolly D., 2011, W3C team submission
   DE ROO J., 1999, EULER PROOF MECH
   Dean M., 2004, SWRL: a semantic web Rule Language combining OWL and RuleML
   Duerst Martin., 2005, INTERNATIONALIZED RE
   Fielding R., 1999, Hypertext transfer protocol-http/1.1. Tech. rep
   Fielding R.T., 2008, REST APIs must be hypertext-driven
   Fielding R. T, 2002, ACM Transactions on Internet Technology (TOIT), V2, P115, DOI [DOI 10.1145/514183.514185, 10.1145/514183.514185]
   Gomadam K, 2010, SA REST SEMANTIC ANN
   Gottlob G, 2014, ACM T DATABASE SYST, V39, DOI 10.1145/2638546
   Hayes PatrickJ., 2014, W3C Recommendation
   KIFER M, 1995, J ASSOC COMPUT MACH, V42, P741, DOI 10.1145/210332.210335
   Kifer M, 2008, LECT NOTES COMPUT SC, V5341, P1, DOI 10.1007/978-3-540-88737-9_1
   Klyne G, 2004, Resource description framework (RDF): Concepts and abstract syntax
   KOCH J., 2011, HTTP VOCABU IN PRESS
   Kopecky Jacek, 2008, Wl 2008. 2008 IEEE/WIC/ACM International Conference on Web Intelligence. IAT 2008. 2008 IEEE/WIC/ACM International Conference on Intelligent Agent Technology. Wl-IAT Workshop 2008 2008 IEEE/WIC/ACM International Conferences on Web Intelligence and Intelligent Agent Technology Workshops, P619, DOI 10.1109/WIIAT.2008.379
   KOPECKY J., 2008, MICROWSMO IN PRESS
   Kopecky J, 2007, IEEE INTERNET COMPUT, V11, P60, DOI 10.1109/MIC.2007.134
   Lanthaler M, 2013, P 6 WORKSH LINK DAT
   LAUSEN H., 2005, Web Service Modeling Ontology (WSMO), W3C Member Submission
   Lloyd J. W., 1984, Journal of Logic Programming, V1, P225, DOI 10.1016/0743-1066(84)90011-6
   Maleshkova M, 2009, LECT NOTES COMPUT SC, V5872, P917, DOI 10.1007/978-3-642-05290-3_110
   Manna Z., 1980, ACM Transactions on Programming Languages and Systems, V2, P90, DOI 10.1145/357084.357090
   Milanovic N, 2004, IEEE INTERNET COMPUT, V8, P51, DOI 10.1109/MIC.2004.58
   Mugnier Marie-Laure, 2011, Web Reasoning and Rule Systems. Proceedings 5th International Conference (RR 2011), P2, DOI 10.1007/978-3-642-23580-1_2
   NORTON B., 2010, P 1 INT WORKSH CONS, VII
   ORDONEZ L., 2012, P 2012 C SEM WEB WEB
   PARSIA B., 2004, P 3 INT SEM WEB C
   Pautasso C., 2009, P 18 INT C WORLD WID, P911, DOI DOI 10.1145/1526709.1526832
   Richardson Leonard, 2013, Restful web APIs
   Speiser S, 2011, LECT NOTES COMPUT SC, V6643, P170, DOI 10.1007/978-3-642-21034-1_12
   Stadtmuller S, 2013, P 22 INT C WORLD WID, P1225, DOI DOI 10.1145/2488388.2488495
   Van Lancker W, 2013, MULTIMED TOOLS APPL, V63, P7, DOI 10.1007/s11042-012-1032-1
   Verborgh R., 2014, REST: Advanced Research Topics and Practical Applications, P69
   VERBORGH R., 2012, P 5 INT WORKSH SEM S
   Verborgh R., 2012, Proceedings of the third international workshop on restful design, P33, DOI [DOI 10.1145/2307819, DOI 10.1145/2307819.2307828]
   Verborgh R, 2013, MULTIMED TOOLS APPL, V64, P365, DOI 10.1007/s11042-012-1004-5
   Verborgh R, 2015, IEEE SOFTWARE, V32, P23, DOI 10.1109/MS.2015.63
   Verborgh R, 2015, J DOC, V71, P233, DOI 10.1108/JD-07-2013-0098
   Waldinger R.J., 2001, P 1 INT WORKSHOP FOR, P250
NR 62
TC 11
Z9 11
U1 0
U2 9
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2017
VL 17
IS 1
BP 1
EP 48
DI 10.1017/S1471068416000016
PG 48
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA EH7JT
UT WOS:000391949800001
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Jackson, EK
AF Jackson, Ethan K.
TI A Module System for Domain-Specific Languages
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
DE module systems; domain-specific languages; logic programming
ID VERIFICATION
AB Domain-specific languages (DSLs) are routinely created to simplify difficult or specialized programming tasks. They expose useful abstractions and design patterns in the form of language constructs, provide static semantics to eagerly detect misuse of these constructs, and dynamic semantics to completely define how language constructs interact. However, implementing and composing DSLs is a non-trivial task, and there is a lack of tools and techniques.
   We address this problem by presenting a complete module system over LP for DSL construction, reuse, and composition. LP is already useful for DSL design, because it supports executable language specifications using notations familiar to language designers. We extend LP with a module system that is simple (with a few concepts), succinct (for key DSL specification scenarios), and composable (on the level of languages, compilers, and programs). These design choices reflect our use of LP for industrial DSL design. Our module system has been implemented in the formula language, and was used to build key Windows 8 device drivers via DSLs. Though we present our module system as it actually appears in our formula language, our emphasis is on concepts adaptable to other LP languages.
C1 Microsoft Res, Res Software Engn RiSE, Redmond, WA 98052 USA.
C3 Microsoft
RP Jackson, EK (corresponding author), Microsoft Res, Res Software Engn RiSE, Redmond, WA 98052 USA.
EM ejackson@microsoft.com
CR AIKEN A, 1991, LECT NOTES COMPUT SC, V523, P427
   Alvaro Peter, 2010, Datalog Reloaded. First International Workshop, Datalog 2010. Revised Selected Papers, P262, DOI 10.1007/978-3-642-24206-9_16
   [Anonymous], 2003, P ACM SIGPLAN WORKSH
   Barnett M, 2003, J SYST SOFTWARE, V65, P199, DOI 10.1016/S0164-1212(02)00041-9
   Bisztray D, 2009, ELECTRON NOTES THEOR, V236, P5, DOI 10.1016/j.entcs.2009.03.011
   Börger E, 2005, ANN PURE APPL LOGIC, V133, P149, DOI 10.1016/j.apal.2004.10.007
   Boronat A, 2010, FORM ASP COMPUT, V22, P269, DOI 10.1007/s00165-009-0140-9
   Boronat A, 2009, LECT NOTES COMPUT SC, V5503, P18
   Cabot  Jordi, 2007, P 22 IEEE ACM INT C, P547, DOI DOI 10.1145/1321631.1321737
   Cardelli L., 1997, COMPUTER SCI ENG HDB, V2nd, P2208
   Cartey L, 2012, ACM SIGPLAN NOTICES, V47, P121, DOI [10.1145/2345156.2254080, 10.1145/2345156.1993513]
   Desai A, 2013, ACM SIGPLAN NOTICES, V48, P321, DOI 10.1145/2499370.2462184
   Dingel J, 2008, SOFTW SYST MODEL, V7, P443, DOI 10.1007/s10270-007-0073-9
   Gurevich Yuri, 2012, Datalog in Academia and Industry. Proceedings of the Second International Workshop, Datalog 2.0, P9, DOI 10.1007/978-3-642-32925-8_2
   Haemmerlé R, 2006, LECT NOTES COMPUT SC, V4079, P41, DOI 10.1007/11799573_6
   Hermenegildo MV, 2005, SCI COMPUT PROGRAM, V58, P115, DOI 10.1016/j.scico.2005.02.006
   Horvath Akos, 2010, International Journal on Software Tools for Technology Transfer, V12, P211, DOI 10.1007/s10009-010-0149-7
   Hudak P., 1996, ACM COMPUTING SURVEY, V28
   Jackson Ethan K., 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P399, DOI 10.1007/978-3-642-33666-9_26
   Jackson E.K., 2011, ICLP (Technical Communications), P73
   Jackson E.K., 2010, P 10 ACM INT C EMB S, P39, DOI DOI 10.1145/1879021.1879027
   Jouault F, 2006, LECT NOTES COMPUT SC, V4037, P171
   Nienaltowski P, 2009, FORM ASP COMPUT, V21, P305, DOI 10.1007/s00165-007-0063-2
   Sangiovanni-Vincentelli A, 2009, IEEE DES TEST COMPUT, V26, P54, DOI 10.1109/MDT.2009.62
   Simko G, 2013, LECT NOTES COMPUT SC, V8107, P471, DOI 10.1007/978-3-642-41533-3_29
   Sulzmann M, 2006, LECT NOTES COMPUT SC, V3945, P47
NR 26
TC 0
Z9 0
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 771
EP 785
DI 10.1017/S1471068414000337
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200025
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Saad, A
   Frühwirth, T
   Gervet, C
AF Saad, Aya
   Fruehwirth, Thom
   Gervet, Carmen
TI The P-Box CDF-Intervals: A Reliable Constraint Reasoning with
   Quantifiable Information
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
DE convex structures; reliable constraint reasoning; probability box; cdf
   interval; constraint satisfaction problem; constraint programming;
   constraint reasoning; uncertainty
ID SATISFACTION PROBLEMS; UNCERTAINTY
AB This paper introduces a new constraint domain for reasoning about data with uncertainty. It extends convex modeling with the notion of p-box to gain additional quantifiable information on the data whereabouts. Unlike existing approaches, the p-box envelops an unknown probability instead of approximating its representation. The p-box bounds are uniform cumulative distribution functions (cdf)in order to employ linear computations in the probabilistic domain. The reasoning by means of p-box cdf-intervals is an interval computation which is exerted on the real domain then it is projected onto the cdf domain. This operation conveys additional knowledge represented by the obtained probabilistic bounds. The empirical evaluation of our implementation shows that, with minimal overhead, the output solution set realizes a full enclosure of the data along with tighter bounds on its probabilistic distributions.
C1 [Saad, Aya; Fruehwirth, Thom] Univ Ulm, D-89069 Ulm, Germany.
   [Gervet, Carmen] Univ Savoie, Savoie, France.
C3 Ulm University; Universite Savoie Mont Blanc
RP Saad, A (corresponding author), Univ Ulm, D-89069 Ulm, Germany.
EM ayas@aucegypt.edu; thom.fruehwirth@uni-ulm.de; gervetec@univ-savoie.fr
OI Saad, Aya/0000-0003-0198-8594
CR [Anonymous], 2003, Reasoning About Uncertainty, DOI DOI 10.7551/MITPRESS/10951.001.0001
   Benhamou F, 1997, J LOGIC PROGRAM, V32, P1, DOI 10.1016/S0743-1066(96)00142-2
   Bistarelli S., 1999, Constraints, V4, P199, DOI 10.1023/A:1026441215081
   Climent L, 2014, J ARTIF INTELL RES, V49, P49, DOI 10.1613/jair.4126
   Dubois D, 1996, APPL INTELL, V6, P287, DOI 10.1007/BF00132735
   Dutta P, 2005, MATH COMPUT MODEL, V41, P915, DOI 10.1016/j.mcm.2004.08.007
   ECRC, 1994, ECL A US MAN B EXT U
   Fargier H, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P175
   FERSON S, 2003, SANDD20024015 SAND N
   Glen AG, 2004, COMPUT STAT DATA AN, V44, P451, DOI 10.1016/S0167-9473(02)00234-7
   Gum I., 1995, GUID EXPR UNC MEAS
   HOLZBAUR C, 1992, LECT NOTES COMPUT SC, V631, P260
   Jaffar J., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P111, DOI 10.1145/41625.41635
   Le Huitouze S., 1990, Programming Language Implementation and Logic Programming. International Workshop PLILP '90 Proceedings, P136, DOI 10.1007/BFb0024181
   Petrovic D, 1996, INT J PROD ECON, V45, P435, DOI 10.1016/0925-5273(96)00014-X
   Saad A., 2012, 11 INT WORKSH CONSTR
   Saad A, 2010, LECT NOTES COMPUT SC, V6140, P292, DOI 10.1007/978-3-642-13520-0_32
   Schiex T, 1995, INT JOINT CONF ARTIF, P631
   Smith W., 1992, 92109300588 NEC RES
   Tarim SA, 2006, CONSTRAINTS, V11, P53, DOI 10.1007/s10601-006-6849-7
   Tarim SA, 2004, INT J PROD ECON, V88, P105, DOI 10.1016/S0925-5273(03)00182-8
   Walsh T, 2002, FR ART INT, V77, P111
   Yorke-Smith N, 2009, ACM T COMPUT LOG, V10, DOI 10.1145/1459010.1459013
   [No title captured]
NR 24
TC 4
Z9 4
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 461
EP 475
DI 10.1017/S1471068414000143
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hanus, M
   Koschnicke, S
AF Hanus, Michael
   Koschnicke, Sven
TI An ER-based framework for declarative web programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE web programming; functional logic programming; databases;
   entity-relationship models
AB We describe a framework to support the implementation of web-based systems intended to manipulate data stored in relational databases. Since the conceptual model of a relational database is often specified as an entity-relationship (ER) model, we propose to use the ER model to generate a complete implementation in the declarative programming language Curry. This implementation contains operations to create and manipulate entities of the data model, supports authentication, authorization, session handling, and the composition of individual operations to user processes. Furthermore, the implementation ensures the consistency of the database w.r.t. the data dependencies specified in the ER model, i.e., updates initiated by the user cannot lead to an inconsistent state of the database. In order to generate a high-level declarative implementation that can be easily adapted to individual customer requirements, the framework exploits previous works on declarative database programming and web user interface construction in Curry.
C1 [Hanus, Michael; Koschnicke, Sven] Univ Kiel, Inst Informat, D-24098 Kiel, Germany.
C3 University of Kiel
RP Hanus, M (corresponding author), Univ Kiel, Inst Informat, Olshaussenstr 40, D-24098 Kiel, Germany.
EM mh@informatik.uni-kiel.de; sven@koschnicke.de
OI Hanus, Michael/0000-0002-4953-8202
FU German Research Council (DFG) [Ha 2457/5-2]
FX This work was partially supported by the German Research Council (DFG)
   under grant Ha 2457/5-2.
CR [Anonymous], 2003, Haskell 98 language and libraries: the revised report
   Antoy S, 2000, J ACM, V47, P776, DOI 10.1145/347476.347484
   Antoy S, 2010, COMMUN ACM, V53, P74, DOI 10.1145/1721654.1721675
   Brassel B, 2008, LECT NOTES COMPUT SC, V4902, P316
   Fischer S., 2005, P ACM SIGPLAN 2005 W, P54
   Hanus M., 2006, PPDP 2006. Proceedings of the Eighth ACM SIGPLAN Symposium on Principles and Practice of Declarative Programming, P27, DOI 10.1145/1140335.1140341
   Hanus M., 2001, Practical Aspects of Declarative Languages. Third International Symposium, PADL 2001. Proceedings (Lecture Notes in Computer Science Vol.1990), P76
   Hanus M., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P80, DOI 10.1145/263699.263710
   Hanus Michael, 2007, Proceedings of the 9th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP'07), P155, DOI 10.1145/1273920.1273942
   Hanus M., 2012, CURRY INTEGRATED LOG
   Hanus M, 2007, LECT NOTES COMPUT SC, V4670, P45, DOI 10.1007/978-3-540-74610-2_5
   Huseby S.H., 2003, INNOCENT CODE SECURI
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   Meijer E., 2000, P ACM SIGPLAN HASK
   Pin-Shan Chen P., 1976, ACM Transactions on Database Systems, V1, P9, DOI 10.1145/320434.320440
   Plasmeijer R, 2006, LECT NOTES COMPUT SC, V3945, P242
   Wadler P, 1997, ACM COMPUT SURV, V29, P240, DOI 10.1145/262009.262011
   Yuan M. J., 2009, SEAM FRAMEWORK EXPER
NR 18
TC 3
Z9 4
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2014
VL 14
BP 269
EP 291
DI 10.1017/S1471068412000385
PN 3
PG 23
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA AK3AI
UT WOS:000338293500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Albert, E
   De La Banda, MG
   Gómez-Zamalloa, M
   Rojas, JM
   Stuckey, P
AF Albert, Elvira
   Garcia De La Banda, Maria
   Gomez-Zamalloa, Miguel
   Miguel Rojas, Jose
   Stuckey, Peter
TI A CLP heap solver for test case generation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
ID SYMBOLIC EXECUTION; FRAMEWORK
AB One of the main challenges to software testing today is to efficiently handle heap-manipulating programs. These programs often build complex, dynamically allocated data structures during execution and, to ensure reliability, the testing process needs to consider all possible shapes these data structures can take. This creates scalability issues since high (often exponential) numbers of shapes may be built due to the aliasing of references. This paper presents a novel CLP heap solver for the test case generation of heap-manipulating programs that is more scalable than previous proposals, thanks to the treatment of reference aliasing by means of disjunction, and to the use of advanced back-propagation of heap related constraints. In addition, the heap solver supports the use of heap assumptions to avoid aliasing of data that, though legal, should not be provided as input.
C1 [Albert, Elvira; Gomez-Zamalloa, Miguel] Complutense Univ Madrid UCM, DSIC, E-28040 Madrid, Spain.
   [Garcia De La Banda, Maria] Monash Univ, Clayton, Vic 3800, Australia.
   [Garcia De La Banda, Maria] IMDEA Software, Madrid, Spain.
   [Miguel Rojas, Jose] Tech Univ Madrid UPM, DLSIIS, E-28660 Madrid, Spain.
   [Stuckey, Peter] Univ Melbourne, Melbourne, Vic 3010, Australia.
   [Stuckey, Peter] IMDEA Software, Madrid, Spain.
C3 Complutense University of Madrid; Monash University; IMDEA Software
   Institute; Universidad Politecnica de Madrid; University of Melbourne;
   IMDEA Software Institute
RP Albert, E (corresponding author), Complutense Univ Madrid UCM, DSIC, E-28040 Madrid, Spain.
RI Rojas, José Miguel/B-5267-2012
OI Garcia de la Banda, Maria/0000-0002-6666-514X; Stuckey,
   Peter/0000-0003-2186-0459; GOMEZ-ZAMALLOA GIL,
   MIGUEL/0000-0003-1557-689X; Rojas, Jose Miguel/0000-0002-0079-5355
FU [TIN2008-05624];  [TIN2012-38137];  [PRI-AIBDE-2011-0900]; 
   [S2009TIC-1465];  [ARC DP110102579];  [ARC DP110102258]
FX This work was funded partially by projects TIN2008-05624, TIN2012-38137,
   PRI-AIBDE-2011-0900, S2009TIC-1465, ARC DP110102579, and ARC
   DP110102258.
CR Ammann Paul, 2008, Introduction to software testing, V1st
   Charreteur F, 2009, J SYST SOFTWARE, V82, P1755, DOI 10.1016/j.jss.2009.06.029
   Degrave F, 2010, LECT NOTES COMPUT SC, V6037, P128, DOI 10.1007/978-3-642-12592-8_10
   Gómez-Zamalloa M, 2010, THEOR PRACT LOG PROG, V10, P659, DOI 10.1017/S1471068410000347
   Gómez-Zamalloa M, 2009, INFORM SOFTWARE TECH, V51, P1409, DOI 10.1016/j.infsof.2009.04.010
   Goodrich M.T., 2003, NET DATASTRUCTURES P
   Gotlieb A, 2000, LECT NOTES ARTIF INT, V1861, P399
   Khurshid S, 2003, LECT NOTES COMPUT SC, V2619, P553
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Meudec C, 2001, SOFTW TEST VERIF REL, V11, P81, DOI 10.1002/stvr.225
   Müller RA, 2004, Proceedings of the IASTED International Conference on Software Engineering, P365
   Offutt AJ, 1999, J SYST SOFTWARE, V49, P49, DOI 10.1016/S0164-1212(99)00066-7
   Pasareanu Corina S., 2009, International Journal on Software Tools for Technology Transfer, V11, P339, DOI 10.1007/s10009-009-0118-1
   Pasareanu Corina S., 2010, P 25 IEEE ACM INT C, P179, DOI [10.1145/1858996.1859035, DOI 10.1145/1858996.1859035]
   Peleska J, 2011, LECT NOTES COMPUT SC, V6617, P298, DOI 10.1007/978-3-642-20398-5_22
   Podelski A, 2008, LECT NOTES COMPUT SC, V5123, P314
   Tillmann N, 2008, LECT NOTES COMPUT SC, V4966, P134
   Visser W., 2004, Software Engineering Notes, V29, P97, DOI 10.1145/1013886.1007526
   Wielemaker J., 2010, SWI PROLOG USERS MAN
NR 19
TC 3
Z9 3
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 721
EP 735
DI 10.1017/S1471068413000458
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400018
DA 2024-07-18
ER

PT J
AU Giordano, L
   Martelli, A
   Spiotta, M
   Dupré, DT
AF Giordano, Laura
   Martelli, Alberto
   Spiotta, Matteo
   Dupre, Daniele Theseider
TI Business process verification with constraint temporal answer set
   programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
ID CHECKING; LOGIC
AB The paper provides a framework for the verification of business processes, based on an extension of answer set programming (ASP) with temporal logic and constraints. The framework allows to capture expressive fluent annotations as well as data awareness in a uniform way. It allows for a declarative specification of a business process but also for encoding processes specified in conventional workflow languages. Verification of temporal properties of a business process, including verification of compliance to business rules, is performed by bounded model checking techniques in Answer Set Programming, extended with constraint solving for dealing with conditions on numeric data.
C1 [Giordano, Laura; Dupre, Daniele Theseider] Univ Piemonte Orientale, DISIT, Alessandria, Italy.
   [Martelli, Alberto; Spiotta, Matteo] Univ Turin, Dipartimento Informat, I-10124 Turin, Italy.
C3 University of Eastern Piedmont Amedeo Avogadro; University of Turin
RP Giordano, L (corresponding author), Univ Piemonte Orientale, DISIT, Alessandria, Italy.
OI Theseider Dupre, Daniele/0000-0001-6798-4380; GIORDANO,
   Laura/0000-0001-9445-7770
FU Regione Piemonte; Project ICT4LAW; Compagnia di San Paolo
FX This research has been partially supported by Regione Piemonte, Project
   ICT4LAW, and by the Compagnia di San Paolo.
CR Alberti M., 2005, MAPPING DEONTIC OPER, P126
   Alberti M, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1380572.1380578
   [Anonymous], 1984, Handbook of philosophical logic
   [Anonymous], KNOWLEDGE ACTION
   Antoniou G., 2001, ACM T COMPUT LOG, V2, P255, DOI [DOI 10.1145/371316.371517, 10.1145/371316.371517]
   Biere A, 2003, ADV COMPUT, V58, P117
   Biere A, 2006, LOG METH COMPUT SCI, V2, DOI 10.2168/LMCS-2(5:5)2006
   Bottrighi A, 2010, ARTIF INTELL MED, V48, P1, DOI 10.1016/j.artmed.2009.09.003
   Clarke E, 2004, LECT NOTES COMPUT SC, V2937, P85
   D'Aprile D, 2010, LECT NOTES ARTIF INT, V6245, P99, DOI 10.1007/978-3-642-14977-1_10
   Damaggio E., 2011, ICDT
   Dechter R., 2003, Constraint Processing
   Deutsch A., 2009, Proc. Int. Conf. on Database Theory (ICDT), P252, DOI DOI 10.1145/1514894.1514924
   Fahland D, 2011, DATA KNOWL ENG, V70, P448, DOI 10.1016/j.datak.2011.01.004
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P235, DOI 10.1007/978-3-642-02846-5_22
   Gelfond M., 2007, HDB KNOWLEDGE REPRES
   Ghose A, 2007, LECT NOTES COMPUT SC, V4749, P169
   Giordano L., 2012, P KR 2012
   Giordano L., 2013, P ICAIL 2013
   Giordano L, 2013, THEOR PRACT LOG PROG, V13, P201, DOI 10.1017/S1471068411000639
   Governatori G., 2010, 3 INT WORKSH REQ ENG
   Governatori G., 2009, HDB RES BPM, P426, DOI DOI 10.4018/978-1-60566-288-6.CH020
   Governatori G, 2006, AUSTRALAS J LOG, V4, P193
   Heljanko K, 2003, THEOR PRACT LOG PROG, V3, P519, DOI 10.1017/S1471068403001790
   Henriksen JG, 1999, ANN PURE APPL LOGIC, V96, P187, DOI 10.1016/S0168-0072(98)00039-6
   HOFFMANN J, 2009, INFORM SYSTEMS FRONT
   Knuplesch D, 2010, LECT NOTES COMPUT SC, V6412, P332, DOI 10.1007/978-3-642-16373-9_24
   Lu SY, 2006, THEOR COMPUT SCI, V353, P71, DOI 10.1016/j.tcs.2005.10.035
   Montali M, 2010, FUND INFORM, V102, P325, DOI 10.3233/FI-2010-310
   Nigam A, 2003, IBM SYST J, V42, P428, DOI 10.1147/sj.423.0428
   Ostrowski M., 2012, WHAT IS THIS THING C
   Ostrowski M, 2012, THEOR PRACT LOG PROG, V12, P485, DOI 10.1017/S1471068412000142
   Pesic M, 2006, LECT NOTES COMPUT SC, V4103, P169
   Roman D, 2008, LECT NOTES COMPUT SC, V5318, P550, DOI 10.1007/978-3-540-88564-1_35
   Singh MP, 2000, LECT NOTES ARTIF INT, V1916, P31
   van der Aalst W. M. P., 2008, BPM0802
   van der Aalst WilM. P., 2006, The Role of Business Processes in Service Oriented Architectures, volume 06291 of Dagstuhl Seminar Proceedings, V06291
   van der Aalst WMP, 2005, INFORM SYST, V30, P245, DOI 10.1016/j.is.2004.02.002
   Weber I., 2010, DISTRIBUTED PARALLEL
NR 39
TC 5
Z9 6
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 641
EP 655
DI 10.1017/S1471068413000409
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400013
DA 2024-07-18
ER

PT J
AU Jansen, J
   Jorissen, A
   Janssens, G
AF Jansen, Joachim
   Jorissen, Albert
   Janssens, Gerda
TI <i>Compiling Input</i>* FO(.) <i>inductive definitions into tabled
   prolog rules for</i> IDP3
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
DE program transformation; FO(.); logic programming; tabling; knowledge
   base systems; IDP system; declarative modeling
ID GRINGO
AB FO(.)(IDP3) extends first-order logic with inductive definitions, partial functions, types and aggregates. Its model generator IDP3 first grounds the theory and then uses search to find the models. The grounder uses Lifted Unit Propagation (LUP) to reduce the size of the groundings of problem specifications in IDP3. LUP is in general very effective, but performs poorly on definitions of predicates whose two-valued interpretation can be computed from data in the input structure. To solve this problem, a preprocessing step is introduced that converts such definitions to Prolog code and uses XSB Prolog to compute their interpretation. The interpretation of these predicates is then added to the input structure, their definitions are removed from the theory and further processing is done by the standard IDP3 system. Experimental results show the effectiveness of our method.
C1 [Jansen, Joachim; Jorissen, Albert; Janssens, Gerda] Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
C3 KU Leuven
RP Jansen, J (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
EM joachim.jansen@cs.kuleuven.be; albert.jorissen@ulyssis.org;
   gerda.janssens@cs.kuleuven.be
RI Janssens, Gerda/N-2662-2013
CR Aavani A, 2012, LECT NOTES COMPUT SC, V7180, P15, DOI 10.1007/978-3-642-28717-6_4
   Alviano M, 2011, AI COMMUN, V24, P125, DOI 10.3233/AIC-2011-0492
   Blockeel H., 2012, P 28 INT C LOG PROGR, V17, P14
   De Pooter S., 2011, INT C APPL DECL PROG
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Faber W., 2012, Correct Reasoning, P247, DOI DOI 10.1007/978-3-642-30743-0
   Faber W., 1999, Using database optimization techniques for nonmonotonic reasoning, P135
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Leone N., 2001, LOGIC PROGRAMMING NO, P280, DOI DOI 10.1007/3-540-45402-021
   Marien M, 2008, LECT NOTES COMPUT SC, V4996, P211, DOI 10.1007/978-3-540-79719-7_20
   Mitchell D., 2005, Proc. of the 20th National Conf. on Artif. Intell. (AAAI), P430
   Swift T., 2013, XSB SYSTEM VERSION 3, V1
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   SYRJANEN T, 1998, B18 HELS U TECHN
   Vaezipoor P., 2011, CORRABS11091317
   Vlaeminck H., 2012, THESIS KU LEUVEN LEU
   Wittocx J., 2010, THESIS KU LEUVEN LEU
   Wittocx J., 2013, ACM T COMPU IN PRESS
   Wittocx J, 2010, J ARTIF INTELL RES, V38, P223, DOI 10.1613/jair.2980
NR 20
TC 5
Z9 5
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 691
EP 704
DI 10.1017/S1471068413000434
PN 4-5
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400016
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Bliem, B
   Morak, M
   Woltran, S
AF Bliem, Bernhard
   Morak, Michael
   Woltran, Stefan
TI D-FLAT: Declarative problem solving using tree decompositions and
   answer-set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
ID BOUNDED TREEWIDTH; OPTIMIZATION; SYSTEM
AB In this work, we propose Answer-Set Programming (ASP) as a tool for rapid prototyping of dynamic programming algorithms based on tree decompositions. In fact, many such algorithms have been designed, but only a few of them found their way into implementation. The main obstacle is the lack of easy-to-use systems which (i) take care of building a tree decomposition and (ii) provide an interface for declarative specifications of dynamic programming algorithms. In this paper, we present D-FLAT, a novel tool that relieves the user of having to handle all the technical details concerned with parsing, tree decomposition, the handling of data structures, etc. Instead, it is only the dynamic programming algorithm itself which has to be specified in the ASP language. D-FLAT employs an ASP solver in order to compute the local solutions in the dynamic programming algorithm. In the paper, we give a few examples illustrating the use of D-FLAT and describe the main features of the system. Moreover, we report experiments which show that ASP-based D-FLAT encodings for some problems outperform monolithic ASP encodings on instances of small treewidth.
C1 [Bliem, Bernhard; Morak, Michael; Woltran, Stefan] Vienna Univ Technol, Inst Informat Syst 184 2, A-1040 Vienna, Austria.
C3 Technische Universitat Wien
RP Bliem, B (corresponding author), Vienna Univ Technol, Inst Informat Syst 184 2, Favoritenstr 9-11, A-1040 Vienna, Austria.
EM bliem@dbai.tuwien.ac.at; morak@dbai.tuwien.ac.at;
   woltran@dbai.tuwien.ac.at
RI Morak, Michael/AAI-1392-2020
OI Morak, Michael/0000-0002-2077-7672
FU Vienna University of Technology [9006.09/008]
FX Supported by Vienna University of Technology special fund "Innovative
   Projekte 9006.09/008".
CR Bodlaender H. L., 1993, Acta Cybernetica, V11, P1
   Bodlaender HL, 2008, COMPUT J, V51, P255, DOI 10.1093/comjnl/bxm037
   Bodlaender HL, 2010, INFORM COMPUT, V208, P259, DOI 10.1016/j.ic.2009.03.008
   Bodlaender HL, 2005, LECT NOTES COMPUT SC, V3381, P1
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Cai LM, 2008, COMPUT J, V51, P270, DOI 10.1093/comjnl/bxm035
   Courcelle Bruno, 1990, Handbook of Theoretical Computer Science, Volume B: Formal Models and Semantics, P193
   David B., 1995, MATH J, V5, P42
   Dermaku A, 2008, LECT NOTES ARTIF INT, V5317, P1, DOI 10.1007/978-3-540-88636-5_1
   Gebser M., 2010, A user's guide to gringo, clasp, clingo, and iclingo
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P54
   Gebser M, 2011, AI COMMUN, V24, P195, DOI 10.3233/AIC-2011-0496
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gottlob G, 2002, J COMPUT SYST SCI, V64, P579, DOI 10.1006/jcss.2001.1809
   Gottlob G, 2010, ACM T COMPUT LOG, V12, DOI 10.1145/1838552.1838555
   Gottlob G, 2009, LECT NOTES COMPUT SC, V5556, P16, DOI 10.1007/978-3-642-02930-1_2
   Greco G, 2010, LECT NOTES COMPUT SC, V6308, P236, DOI 10.1007/978-3-642-15396-9_21
   Guo HF, 2008, SOFTWARE PRACT EXPER, V38, P75, DOI 10.1002/spe.824
   Jakl M, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P816
   Koster AMCA, 2002, NETWORKS, V40, P170, DOI 10.1002/net.10046
   LARSON RE, 1967, IEEE T AUTOMAT CONTR, VAC12, P767, DOI 10.1109/TAC.1967.1098755
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   ROBERTSON N, 1984, J COMB THEORY B, V36, P49, DOI 10.1016/0095-8956(84)90013-3
   Samer M, 2010, J DISCRET ALGORITHMS, V8, P50, DOI 10.1016/j.jda.2009.06.002
   Xi JB, 2005, 2005 IEEE COMPUTATIONAL SYSTEMS BIOINFORMATICS CONFERENCE, PROCEEDINGS, P247
   Zhou N., 2011, CORR
   [No title captured]
NR 30
TC 8
Z9 8
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2012
VL 12
BP 445
EP 464
DI 10.1017/S1471068412000129
PN 4-5
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 000CV
UT WOS:000308365000003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Albert, E
   Arenas, P
   Puebla, G
   Hermenegildo, M
AF Albert, Elvira
   Arenas, Puri
   Puebla, German
   Hermenegildo, Manuel
TI Certificate size reduction in abstraction-carrying code
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE proof-carrying code; abstraction-carrying code; static analysis; reduced
   certificates; mobile code
ID LOGIC; VERIFICATION; FRAMEWORK; ALGORITHM
AB Carrying Code (ACC) has recently been proposed as a framework for mobile code safety in which the code supplier provides a program together with an abstraction (or abstract model of the program) whose validity entails compliance with a predefined safety policy. The abstraction plays thus the role of safety certificate and its generation is carried out automatically by a fixpoint analyzer. The advantage of providing a (fixpoint) abstraction to the code consumer is that its validity is checked in a single pass (i.e., one iteration) of an abstract interpretation-based checker. A main challenge to make ACC useful in practice is to reduce the size of certificates as much as possible while at the same time not increasing checking time. The intuitive idea is to only include in the certificate information that the checker is unable to reproduce without iterating. We introduce the notion of reduced certificate which characterizes the subset of the abstraction which a checker needs in order to validate (and re-construct) the full certificate in a single pass. Based on this notion, we instrument a generic analysis algorithm with the necessary extensions in order to identify the information relevant to the checker. Interestingly, the fact that the reduced certificate omits (parts of) the abstraction has implications in the design of the checker. We provide the sufficient conditions which allow us to ensure that (1) if the checker succeeds in validating the certificate, then the certificate is valid for the program (correctness) and (2) the checker will succeed for any reduced certificate which is valid (completeness). Our approach has been implemented and benchmarked within the CiaoPP system. The experimental results show that our proposal is able to greatly reduce the size of certificates in practice.
C1 [Albert, Elvira; Arenas, Puri] Univ Complutense Madrid, Sch Comp Sci, E-28040 Madrid, Spain.
   [Puebla, German; Hermenegildo, Manuel] Tech Univ Madrid, Sch Comp Sci, E-28660 Madrid, Spain.
   [Hermenegildo, Manuel] Madrid Inst Adv Studies Software Dev Technol IMDE, Madrid, Spain.
C3 Complutense University of Madrid; Universidad Politecnica de Madrid
RP Albert, E (corresponding author), Univ Complutense Madrid, Sch Comp Sci, Prof Jose Garcia Santesmases S-N, E-28040 Madrid, Spain.
EM elvira@sip.ucm.es; puri@sip.ucm.es; german@fi.upm.es; herme@fi.upm.es
RI Hermenegildo, w V/I-4418-2015
OI Hermenegildo, w V/0000-0002-7583-323X
FU European Commission, Future and Emerging Technologies (FET) [ICT-231620
   HATS]; Spanish Ministry of Science and Innovation (MICINN)
   [TIN-2008-05624 DOVES, TIN2008-04473-E, HI2008-0153,
   UCM-BSCH-GR58/08-910502]; Madrid Regional Government [S2009TIC-1465
   PROMETIDOS]
FX The authors would like to gratefully thank the anonymous referees for
   useful comments on the preliminary version of this paper. This work was
   funded in part by the Information & Communication Technologies program
   of the European Commission, Future and Emerging Technologies (FET),
   under the ICT-231620 HATS project, by the Spanish Ministry of Science
   and Innovation (MICINN) under the TIN-2008-05624 DOVES project, the
   TIN2008-04473-E (Accion Especial) project, the HI2008-0153 (Accion
   Integrada) project, the UCM-BSCH-GR58/08-910502 Research Group, and by
   the Madrid Regional Government under the S2009TIC-1465 PROMETIDOS
   project.
CR Albert E, 2007, LECT NOTES COMPUT SC, V4354, P124
   Albert E, 2005, LECT NOTES COMPUT SC, V3452, P380
   Albert E, 2008, NEW GENERAT COMPUT, V26, P171, DOI 10.1007/s00354-008-0039-7
   Albert E, 2006, LECT NOTES COMPUT SC, V4079, P163, DOI 10.1007/11799573_14
   [Anonymous], 1993, Partial Evaluation and Automatic Program Generation
   BARRAS B., 1997, COQ PROFF ASSISTANT
   BESSON F., 2006, P 1 INT WORKSH EM AP
   BRUYNOOGHE M, 1991, J LOGIC PROGRAM, V10, P91, DOI 10.1016/0743-1066(91)80001-T
   BUENO F., 2009, CIAO SYSTEM REF MANU
   Cachera D, 2004, LECT NOTES COMPUT SC, V2986, P385
   Cousot P, 2005, LECT NOTES COMPUT SC, V3444, P21
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   DeLaBanda MG, 1996, ACM T PROGR LANG SYS, V18, P564, DOI 10.1145/232706.232734
   Genaim S, 2005, LECT NOTES COMPUT SC, V3385, P346
   HARPER R, 1993, J ACM, V40, P143, DOI 10.1145/138027.138060
   Hermenegildo M, 2000, ACM T PROGR LANG SYS, V22, P187, DOI 10.1145/349214.349216
   Hermenegildo MV, 2005, SCI COMPUT PROGRAM, V58, P115, DOI 10.1016/j.scico.2005.02.006
   KELLY A., 1998, SOFTWARE PRACTICE EX, V28, P188
   Klein G, 2003, THEOR COMPUT SCI, V298, P583, DOI 10.1016/S0304-3975(02)00869-1
   LECHARLIER B, 1994, ACM T PROGR LANG SYS, V16, P35, DOI 10.1145/174625.174627
   Leroy X, 2003, J AUTOM REASONING, V30, P235, DOI 10.1023/A:1025055424017
   Lloyd J. W., 2012, Foundations of Logic Programming
   Marriot K., 1998, Programming with constraints: An introduction
   Méndez M, 2007, ELECTRON NOTES THEOR, V190, P51, DOI 10.1016/j.entcs.2007.02.060
   Méndez-Lojo M, 2008, LECT NOTES COMPUT SC, V4915, P154, DOI 10.1007/978-3-540-78769-3_11
   MUTHUKUMAR K, 1992, J LOGIC PROGRAM, V13, P315, DOI 10.1016/0743-1066(92)90035-2
   MUTHUKUMAR K, 1991, LOGIC PROGRAMM, P49
   Necula G. C., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P106, DOI 10.1145/263699.263712
   Necula GC, 2001, ACM SIGPLAN NOTICES, V36, P142, DOI 10.1145/373243.360216
   Necula GC, 1998, THIRTEENTH ANNUAL IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE, PROCEEDINGS, P93, DOI 10.1109/LICS.1998.705646
   Puebla, 1996, LNCS, V1145, P270
   Rose E, 2003, J AUTOM REASONING, V31, P303, DOI 10.1023/B:JARS.0000021015.15794.82
   ROSE E., 1998, OOPSLA WORKSH FORM U
   Secci S, 2005, LECT NOTES COMPUT SC, V3672, P320
   Vallee-Rai R., 1999, CASCON 1999, P125
NR 35
TC 4
Z9 4
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2012
VL 12
BP 283
EP 318
DI 10.1017/S1471068410000487
PN 3
PG 36
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 946PH
UT WOS:000304364400001
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Costa, VS
   Rocha, R
   Damas, L
AF Costa, Vitor Santos
   Rocha, Ricardo
   Damas, Luis
TI The YAP Prolog system
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Prolog; logic programming system
ID OR-PARALLELISM; LOGIC PROGRAMS; DESIGN; MECHANISMS; EFFICIENCY;
   EXECUTION; MACHINE; THREADS
AB Yet Another Prolog (YAP) is a Prolog system originally developed in the mid-eighties and that has been under almost constant development since then. This paper presents the general structure and design of the YAP system, focusing on three important contributions to the Logic Programming community. First, it describes the main techniques used in YAP to achieve an efficient Prolog engine. Second, most Logic Programming systems have a rather limited indexing algorithm. YAP contributes to this area by providing a dynamic indexing mechanism, or just-in-time indexer. Third, a important contribution of the YAP system has been the integration of both or-parallelism and tabling in a single Logic Programming system.
C1 [Costa, Vitor Santos; Rocha, Ricardo] Univ Porto, Fac Sci, DCC, P-4169007 Oporto, Portugal.
   [Costa, Vitor Santos; Rocha, Ricardo] Univ Porto, Fac Sci, CRACS INESC Porto LA, P-4169007 Oporto, Portugal.
   [Damas, Luis] Univ Porto, Fac Sci, LIACC, P-4169007 Oporto, Portugal.
C3 Universidade do Porto; Universidade do Porto; INESC TEC; Universidade do
   Porto
RP Costa, VS (corresponding author), Univ Porto, Fac Sci, DCC, R Campo Alegre 1021-1055, P-4169007 Oporto, Portugal.
EM vsc@dcc.fc.up.pt; ricroc@dcc.fc.up.pt; luis@ncc.up.pt
RI INESC-TEC, CRACS/F-7527-2012; Rocha, Ricardo/B-2862-2012; Santos Costa,
   Vitor/B-2859-2012
OI Rocha, Ricardo/0000-0003-4502-8835; Santos Costa,
   Vitor/0000-0002-3344-8237
FU HORUS [PTDC/EIA-EIA/100897/2008]; LEAP [PTDC/EIA-CCO/112158/2009];
   Fundacao para a Ciencia e Tecnologia and Programa POSI; Fundação para a
   Ciência e a Tecnologia [PTDC/EIA-CCO/112158/2009] Funding Source: FCT
FX YAP would not exist without the support of the YAP users. We would like
   to thank them first. The work presented in this paper has been partially
   supported by project HORUS (PTDC/EIA-EIA/100897/2008), LEAP
   (PTDC/EIA-CCO/112158/2009), and funds granted to LIACC and CRACS &
   INESC-Porto LA through the Programa de Financiamento Plurianual,
   Fundacao para a Ciencia e Tecnologia and Programa POSI. Last, but not
   least, we would like to gratefully acknowledge the anonymous referees
   and the editors of the special number for the major contributions that
   they have given to this paper.
CR AGGOUN A., 1995, ECLIPSE 3 5 USER MAN
   ALI KAM, 1990, INT J PARALLEL PROG, V19, P445, DOI 10.1007/BF01397627
   ARNOLD DJ, 1986, P 11 C COMP LING MOR, P297
   BEER J., 1989, LECT NOTES COMPUTER, V404
   Benton William C., 2007, Proceedings of the 9th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP'07), P13, DOI 10.1145/1273920.1273923
   Bueno F, 1999, ACM T PROGR LANG SYS, V21, P189, DOI 10.1145/316686.316688
   CAMACHO R, 1994, GMD STUDIEN, V237, P273
   Carlsson M., 1987, Logic Programming. Proceedings of the Fourth International Conference, P40
   CARLSSON M, 1990, SICS DISSERTATION SE, V2
   CARLSSON M, 1988, R88007B SICS
   Castro L. F., 2001, Logic Programming. 17th International Conference, ICLP 2001. Proceedings (Lecture Notes in Computer Science Vol.2237), P11
   Chen W., 1993, PODS, P168
   COLMERAUER A, 1993, SIGPLAN NOTICES, V28, P37, DOI 10.1145/155360.155362
   Costa Vitor Santos, 2008, Probabilistic Inductive Logic Programming. Theory and Applications, P156, DOI 10.1007/978-3-540-78652-8_6
   Costa VS, 2007, LECT NOTES COMPUT SC, V4670, P395
   Costa VS, 2007, LECT NOTES COMPUT SC, V4354, P185
   Costa VS, 2010, THEOR PRACT LOG PROG, V10, P417, DOI 10.1017/S1471068410000190
   Costa VS, 2009, LECT NOTES ARTIF INT, V5816, P126, DOI 10.1007/978-3-642-04686-5_11
   Costa VS, 2008, LECT NOTES COMPUT SC, V5366, P1, DOI 10.1007/978-3-540-89982-2_1
   Costa VS, 1999, LECT NOTES COMPUT SC, V1702, P261
   COSTA VS, 1988, IMPLEMENTACAO PROLOG
   da Silva AF, 2007, LECT NOTES COMPUT SC, V4670, P410
   Damas L., 1982, C REC 9 ANN ACM S PR, P207, DOI DOI 10.1145/582153.582176
   DAVIS J., 2005, P 2005 INT C INT AN
   Dawson S., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P247, DOI 10.1145/199448.199509
   de Guzmán PC, 2008, LECT NOTES COMPUT SC, V4902, P197
   DEMOEN B, 1989, LOGIC PROGRAMM, P1001
   Demoen B, 2000, LECT NOTES ARTIF INT, V1861, P1240
   DEMOEN B., 2000, P WORKSH PAR IMPL TE
   DEVITT S., 2005, P W3C WORKSH RUL LAN
   Diaz D., 2001, J FUNCTIONAL LOGIC P, V2001
   FILGUEIRAS M, 1984, IMPLEMENTATIONS PROL, P250
   Fonseca NA, 2009, SOFTWARE PRACT EXPER, V39, P189, DOI 10.1002/spe.896
   Granlund T., 2004, Gnu multiple precision arithmetic library 4.1.4
   Hermenegildo MV, 2008, LECT NOTES COMPUT SC, V5065, P209, DOI 10.1007/978-3-540-68679-8_14
   Kimmig A, 2008, LECT NOTES COMPUT SC, V5366, P175, DOI 10.1007/978-3-540-89982-2_22
   Krall A, 1996, J LOGIC PROGRAM, V29, P85, DOI 10.1016/S0743-1066(96)00064-7
   Lea Doug, 1996, A MEMORY ALLOCATOR
   Liang Senlin., 2009, PROC 18 INT C WORLD, P601, DOI [10.1145/1526709.1526790, DOI 10.1145/1526709.1526790]
   MARIEN A, 1989, LOGIC PROGRAMM, P1030
   MARIEN A, 1991, LOGIC PROGRAMM, P257
   MARIEN A, 1993, THESIS KATHOLIEK U L
   MEIER M, 1990, LOGIC PROGRAMM, P63
   Morahan-Martin J, 2008, PSYCHOLOGICAL ASPECTS OF CYBERSPACE: THEORY, RESEARCH, APPLICATIONS, P32, DOI 10.1145/1389449.1389455
   Mungall C, 2009, LECT NOTES COMPUT SC, V5649, P1, DOI 10.1007/978-3-642-02846-5_1
   Nassen Henrik., 2001, Proceedings of the 3rd ACM SIGPLAN International Conference on Principles and Practice of Declarative Programming, PPDP'01, P49
   Nugues P.M., 2006, INTRO LANGUAGE PROCE
   PAGE D, 2003, J MACHINE LEARNING R, V4, P415
   PEREIRA F, 1987, C PROLOG 1 5 USER MA
   Quintus, 1986, QUINT PROL US GUID R
   Ramakrishnan IV, 1999, J LOGIC PROGRAM, V38, P31, DOI 10.1016/S0743-1066(98)10013-4
   Richardson M, 2006, MACH LEARN, V62, P107, DOI 10.1007/s10994-006-5833-1
   Riguzzi F, 2007, LECT NOTES COMPUT SC, V4733, P109
   Rocha R, 2005, LECT NOTES COMPUT SC, V3668, P250, DOI 10.1007/11562931_20
   Rocha R, 2005, THEOR PRACT LOG PROG, V5, P161, DOI 10.1017/S1471068404002030
   Rocha R., 1999, Progress in Artificial Intelligence. 9th Portuguese Conference on Artificial Intelligence, EPIA'99. Proceedings (Lecture Notes in Artificial Intelligence Vol.1695), P178
   ROCHA R, 2000, C TAB PARS DED, P77
   ROCHA R., 2002, P 16 INT PAR DISTR P, P51
   Rocha R, 2007, LECT NOTES COMPUT SC, V4354, P155
   Rocha R, 2006, LECT NOTES COMPUT SC, V4079, P427, DOI 10.1007/11799573_34
   Sagonas K, 1998, ACM T PROGR LANG SYS, V20, P586, DOI 10.1145/291889.291897
   SAGONAS K., 1997, XSB PROGRAMMERS MANU
   Sato T, 2001, J ARTIF INTELL RES, V15, P391
   SCHIMPF J., 1990, 2 NACLP WORKSH LOG P
   Schrijvers Tom., 2008, ICLP, volume 5366 of Lecture Notes in Computer Science, P9, DOI [10.1007/978-3-540-89982-23, DOI 10.1007/978-3-540-89982-23]
   Simon L, 2006, LECT NOTES COMPUT SC, V4079, P330, DOI 10.1007/11799573_25
   Somogyi Z, 2006, LECT NOTES COMPUT SC, V3819, P150
   Srinivasan A., 2001, The Aleph Manual
   Tarau P., 1994, Programming Language Implementation and Logic Programming. 6th International Symposium, PLILP '94. Proceedings, P73
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Tronçon R, 2007, THEOR PRACT LOG PROG, V7, P481, DOI 10.1017/S1471068406002894
   Vandeginste R, 2007, THEOR PRACT LOG PROG, V7, P505, DOI 10.1017/S147106840600278X
   VANROY P, 1992, COMPUTER, V25, P54, DOI 10.1109/2.108055
   VANROY P, 1990, THESIS U CALIFORNIA
   Vaz D, 2009, LECT NOTES COMPUT SC, V5649, P372, DOI 10.1007/978-3-642-02846-5_31
   Warren D. H. D., 1983, 309 SRI INT
   Wielemaker J, 2003, LECT NOTES COMPUT SC, V2916, P331, DOI 10.1007/978-3-540-24599-5_23
   WIELEMAKER J., 2010, SWI PROLOG 5 9 9 REF
   Wielemaker J, 2008, LECT NOTES COMPUT SC, V5318, P695, DOI 10.1007/978-3-540-88564-1_44
   Zhou N.-F., 1990, Proceedings of the Seventh International Conference on Logic Programming, P158
   Zhou NF, 2007, LECT NOTES COMPUT SC, V4670, P455, DOI 10.1007/978-3-540-74610-2_43
NR 81
TC 75
Z9 87
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2012
VL 12
BP 5
EP 34
DI 10.1017/S1471068411000512
PN 1-2
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 886XS
UT WOS:000299888500002
DA 2024-07-18
ER

PT J
AU Bone, P
   Somogyi, Z
   Schachte, P
AF Bone, Paul
   Somogyi, Zoltan
   Schachte, Peter
TI Estimating the overlap between dependent computations for automatic
   parallelization
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE automatic parallelism; program analysis; program optimization; Mercury
ID COMPILE-TIME PARALLELIZATION; PROGRAMS; LANGUAGE; PROLOG
AB Researchers working on the automatic parallelization of programs have long known that too much parallelism can be even worse for performance than too little, because spawning a task to be run on another CPU incurs overheads. Autoparallelizing compilers have therefore long tried to use granularity analysis to ensure that they only spawn off computations whose cost will probably exceed the spawn-off cost by a comfortable margin. However, this is not enough to yield good results, because data dependencies may also limit the usefulness of running computations in parallel. If one computation blocks almost immediately and can resume only after another has completed its work, then the cost of parallelization again exceeds the benefit. We present a set of algorithms for recognizing places in a program where it is worthwhile to execute two or more computations in parallel that pay attention to the second of these issues as well as the first. Our system uses profiling information to compute the times at which a procedure call consumes the values of its input arguments and the times at which it produces the values of its output arguments. Given two calls that may be executed in parallel, our system uses the times of production and consumption of the variables they share to determine how much their executions would overlap if they were run in parallel, and therefore whether executing them in parallel is a good idea or not. We have implemented this technique for Mercury in the form of a tool that uses profiling data to generate recommendations about what to parallelize, for the Mercury compiler to apply on the next compilation of the program. We present preliminary results that show that this technique can yield useful parallelization speedups, while requiring nothing more from the programmer than representative input data for the profiling run.
C1 [Bone, Paul; Somogyi, Zoltan; Schachte, Peter] Univ Melbourne, Dept Comp Sci & Software Engn, Melbourne, Vic 3010, Australia.
   [Bone, Paul; Somogyi, Zoltan] Natl ICT Australia NICTA, Sydney, NSW, Australia.
C3 University of Melbourne; NICTA
RP Bone, P (corresponding author), Univ Melbourne, Dept Comp Sci & Software Engn, Melbourne, Vic 3010, Australia.
EM pbone@csse.unimelb.edu.au; zs@csse.unimelb.edu.au;
   schachte@unimelb.edu.au
RI Schachte, Peter/H-4848-2016
OI Schachte, Peter/0000-0001-5959-3769
CR BEVEMYR J, 1993, LOGIC PROGRAMM, P283
   CASAS A, 2007, P 17 INT S LOG BAS P, P138
   Gras DC, 2009, THEOR COMPUT SCI, V410, P4704, DOI 10.1016/j.tcs.2009.07.044
   Halstead R.H., 1984, P 1984 ACM S LISP FU, P9
   Harris T, 2007, ACM SIGPLAN NOTICES, V42, P251, DOI 10.1145/1291220.1291192
   LOPEZGARCIA P, 1996, J SYMB COMPUT, V22, P715
   Marlow S, 2009, ACM SIGPLAN NOTICES, V44, P65, DOI 10.1145/1631687.1596563
   Muthukumar K, 1999, J LOGIC PROGRAM, V38, P165, DOI 10.1016/S0743-1066(98)10022-5
   Pontelli E, 1997, LOGIC PROGRAMM, P108
   SHEN K, 1999, J FUNCTIONAL LOGIC P
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   TANNIER J, 2007, THESIS FAC U NOTR DA
   von Praun C, 2007, PROCEEDINGS OF THE 2007 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING PPOPP'07, P79, DOI 10.1145/1229428.1229443
   WANG P, 2011, P 27 INT C LOG PROGR
NR 14
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 575
EP 591
DI 10.1017/S1471068411000184
PN 4-5
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Balduccini, M
   Girotto, S
AF Balduccini, Marcello
   Girotto, Sara
TI Formalization of psychological knowledge in answer set programming and
   its application
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE answer set programming; reasoning about actions and change; psychology;
   short-term memory
AB In this paper we explore the use of Answer Set Programming (ASP) to formalize, and reason about, psychological knowledge. In the field of psychology, a considerable amount of knowledge is still expressed using only natural language. This lack of a formalization complicates accurate studies, comparisons, and verification of theories. We believe that ASP, a knowledge representation formalism allowing for concise and simple representation of defaults, uncertainty, and evolving domains, can be used successfully for the formalization of psychological knowledge. To demonstrate the viability of ASP for this task, in this paper we develop an ASP-based formalization of the mechanics of Short-Term Memory. We also show that our approach can have rather immediate practical uses by demonstrating an application of our formalization to the task of predicting a user's interaction with a graphical interface.
C1 [Balduccini, Marcello] Eastman Kodak Co, Intelligent Syst, KRL, Rochester, NY 14650 USA.
   [Girotto, Sara] Texas Tech Univ, Dept Psychol, Lubbock, TX 79409 USA.
C3 Eastman Kodak; Texas Tech University System; Texas Tech University
RP Balduccini, M (corresponding author), Eastman Kodak Co, Intelligent Syst, KRL, Rochester, NY 14650 USA.
EM marcello.balduccini@gmail.com; sara.girotto@ttu.edu
CR [Anonymous], 1983, The Psychology of Human-Computer Interaction
   ATKINSON RC, 1971, SCI AM, V225, P82, DOI 10.1038/scientificamerican0871-82
   BALDUCCINI M, 2000, P 12 INT C SOFTW ENG, P63
   BARAL C, 2005, P AAAI 05, P689
   Chintabathina Sandeep, 2005, P ASP 05 ANSW SET PR, V142, P303
   Cowan N, 2001, BEHAV BRAIN SCI, V24, P87, DOI 10.1017/S0140525X01003922
   DELGRANDE JP, 2009, 10 INT C LOG PROGR N, P355
   Gelfond M, 2002, LECT NOTES ARTIF INT, V2408, P413
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   GELFOND M, 1998, ELECT T AI, V3, P16
   Kassin Saul., 2006, Psychology in modules
   KIERAS D, 1983, P SIGCHI C HUM FACT, P103
   LEE J, 2001, AAAI SPRING S SERIES
   Leite J, 2007, LECT NOTES ARTIF INT, V4874, P29
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   MCCARLEY JS, 2002, P 46 ANN M HUM FACT
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   Nevid J.S., 2007, Psychology: Concepts and Applications, V2nd
   Niemelä I, 2000, SPRINGER INT SER ENG, V597, P491
   SON TC, 2009, INT JOINT C ART INT
   THIELSCHER M, 2009, 10 INT C LOG PROGR N, P327
NR 21
TC 5
Z9 6
U1 0
U2 6
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 725
EP 740
DI 10.1017/S1471068410000384
PN 4-6
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200024
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Costa, VS
   Dutra, I
   Rocha, R
AF Costa, Vitor Santos
   Dutra, Ines
   Rocha, Ricardo
TI Threads and or-parallelism unified
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE multi-threading; or-parallelism; implementation
ID IMPLEMENTATION; PROGRAMS; PROLOG
AB One of the main advantages of Logic Programming (LP) is that it provides an excellent framework for the parallel execution of programs. In this work we investigate novel techniques to efficiently exploit parallelism from real-world applications in low cost multi-core architectures. To achieve these goals, we revive and redesign the YapOr system to exploit or-parallelism based on a multi-threaded implementation. Our new approach takes full advantage of the state-of-the-art fast and optimized YAP Prolog engine and shares the underlying execution environment, scheduler and most of the data structures used to support YapOr's model. Initial experiments with our new approach consistently achieve almost linear speedups for most of the applications, proving itself as a good alternative for exploiting implicit parallelism in the currently available low cost multi-core architectures.
C1 [Costa, Vitor Santos] Univ Porto, Fac Sci, CRACS, P-4169007 Oporto, Portugal.
   Univ Porto, Fac Sci, INESC Porto LA, P-4169007 Oporto, Portugal.
C3 Universidade do Porto; Universidade do Porto; INESC TEC
RP Costa, VS (corresponding author), Univ Porto, Fac Sci, CRACS, Rua Campo Alegre 1021-1055, P-4169007 Oporto, Portugal.
EM vsc@dcc.fc.up.pt; ines@dcc.fc.up.pt; ricroc@dcc.fc.up.pt
RI de Castro Dutra, Inês/B-2881-2012; INESC-TEC, CRACS/F-7527-2012; Santos
   Costa, Vitor/B-2859-2012; Rocha, Ricardo/B-2862-2012
OI de Castro Dutra, Inês/0000-0002-3578-7769; Santos Costa,
   Vitor/0000-0002-3344-8237; Rocha, Ricardo/0000-0003-4502-8835
CR ALI KAM, 1986, INT J PARALLEL PROG, V15, P189, DOI 10.1007/BF01414554
   ALI KAM, 1990, INT J PARALLEL PROG, V19, P129, DOI 10.1007/BF01407834
   ALI KAM, 1990, INT J PARALLEL PROG, V19, P445, DOI 10.1007/BF01397627
   [Anonymous], VITAL HLTH STATISTIC
   Carro M, 1999, LOGIC PROGRAMM, P320
   Casas A, 2008, LECT NOTES COMPUT SC, V5366, P651, DOI 10.1007/978-3-540-89982-2_53
   Correia ME, 1997, LOGIC PROGRAMM, P117
   Costa VS, 2000, LECT NOTES COMPUT SC, V1900, P744
   Costa VS, 1999, IPPS PROC, P720, DOI 10.1109/IPPS.1999.760555
   COSTA VS, 1991, SIGPLAN NOTICES, V26, P83, DOI 10.1145/109626.109635
   DEMOEN B, 1998, CW271 K U LEUV DEP C
   Fonseca NA, 2009, MACH LEARN, V74, P257, DOI 10.1007/s10994-008-5094-2
   Gupta G, 2001, ACM T PROGR LANG SYS, V23, P472, DOI 10.1145/504083.504085
   Gupta G, 1999, LOGIC PROGRAMM, P290
   Hermenegildo M. V., 1991, New Generation Computing, V9, P233, DOI 10.1007/BF03037164
   Lusk E., 1988, International Conference on Fifth Generation Computer Systems, P819
   Marques R, 2010, LECT NOTES COMPUT SC, V5937, P264, DOI 10.1007/978-3-642-11503-5_22
   Moura P, 2008, LECT NOTES COMPUT SC, V4902, P265
   Moura P, 2009, LECT NOTES COMPUT SC, V5418, P107, DOI 10.1007/978-3-540-92995-6_8
   Pontelli E, 1997, LOGIC PROGRAMM, P123
   Pontelli E, 2006, J PARALLEL DISTR COM, V66, P1267, DOI 10.1016/j.jpdc.2006.05.002
   Richard Stevens W., 1992, ADV PROGRAMMING UNIX
   ROCHA R, 1999, LECT NOTES ARTIF INT, V1695, P178
   Santos Costa V., 2008, WORKSH DECL ASP MULT, P77
   SHEN K, 1992, JOINT INT C S LOG PR, P717
   TICK E, 1987, MEMORY PERFORMANCE P
   Wielemaker J, 2003, LECT NOTES COMPUT SC, V2916, P331, DOI 10.1007/978-3-540-24599-5_23
NR 27
TC 7
Z9 8
U1 0
U2 9
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 417
EP 432
DI 10.1017/S1471068410000190
PN 4-6
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ferraris, P
   Lifschitz, V
AF Ferraris, P
   Lifschitz, V
TI Weight constraints as nested expressions
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer sets; cardinality constraints; SMODELS; stable models; weight
   constraints
AB We compare two recent extensions of the answer set (stable model) semantics of logic programs. One of them, due to Lifschitz, Tang and Turner, allows the bodies and heads of rules to contain nested expressions. The other, due to Niemela and Simons, uses weight constraints. We show that there is a simple, modular translation from the language of weight constraints into the language of nested expressions that preserves the program's answer sets. Nested expressions can be eliminated from the result of this translation in favor of additional atoms. The translation makes it possible to compute answer sets for some programs with weight constraints using satisfiability solvers, and to prove the strong equivalence of programs with weight constraints using the logic of here-and-there.
C1 Univ Texas, Dept Comp Sci, Austin, TX 78712 USA.
C3 University of Texas System; University of Texas Austin
RP Univ Texas, Dept Comp Sci, Austin, TX 78712 USA.
EM otto@cs.utexas.edu; vl@cs.utexas.edu
CR Babovich Yuliya, 2000, P 8 INT WORKSH NONM
   Clark K. L., 1978, Logic and data bases, P293
   ERDEM E, 2003, IN PRESS THEORY PRAC
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Heyting A, 1930, SITZBER PREUSS AKAD, P42
   LIFSCHITZ V, 1992, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE (KR 92), P603
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   LLOYD JW, 1984, J LOGIC PROGRAM, V3, P225
   MAREK V, 2002, P NMR 02
   Niemelä I, 2000, SPRINGER INT SER ENG, V597, P491
   Pearce D, 1997, LECT NOTES ARTIF INT, V1216, P57, DOI 10.1007/BFb0023801
   PEARCE D, 2002, P NMR 02
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   TURNER H, 2003, IN PRESS THEORY PRAC
   [No title captured]
NR 16
TC 66
Z9 67
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2005
VL 5
BP 45
EP 74
DI 10.1017/S1471068403001923
PN 1-2
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 903EN
UT WOS:000227408400002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Appel, AW
   Felty, AP
AF Appel, AW
   Felty, AP
TI Polymorphic lemmas and definitions in λProlog and Twelf
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE theorem proving; higher-order logic programming; logical frameworks;
   lemmas; definitions; polymorphism; proof-carrying code; Lambda Prolog;
   Twelf
AB lambdaProlog is known to be well-suited for expressing and implementing logics and inference systems. We show that lemmas and definitions in such logics can be implemented with a great economy of expression. We encode a higher-order logic using an encoding that maps both terms and types of the object logic (higher-order logic) to terms of the metalanguage (lambdaProlog). We discuss both the Terzo and Teyjus implementations of lambdaProlog. We also encode the same logic in Twelf and compare the features of these two metalanguages for our purposes.
C1 Princeton Univ, Dept Comp Sci, Princeton, NJ 08544 USA.
   Univ Ottawa, Sch Informat Technol & Engn, Ottawa, ON K1N 6N5, Canada.
C3 Princeton University; University of Ottawa
RP Princeton Univ, Dept Comp Sci, Princeton, NJ 08544 USA.
EM appel@princeton.edu; afelty@site.uottawa.ca
OI Appel, Andrew/0000-0001-6009-0325
CR Appel A.W., 2000, PROC 27 ACM S PRINCI, P243
   Appel AW, 1999, 6TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P52, DOI 10.1145/319709.319718
   Appel AW, 1999, LOGIC PROGRAMM, P411
   Damas L., 1982, C REC 9 ANN ACM S PR, P207, DOI DOI 10.1145/582153.582176
   FELTY A, 1993, J AUTOM REASONING, V11, P43, DOI 10.1007/BF00881900
   FELTY A, 1990, LECT NOTES ARTIF INT, V449, P221
   HARPER R, 1993, J ACM, V40, P143, DOI 10.1145/138027.138060
   Jaffar J., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P111, DOI 10.1145/41625.41635
   MILLER D, 1991, ANN PURE APPL LOGIC, V51, P125, DOI 10.1016/0168-0072(91)90068-W
   NADATHUR G, 1990, PROCEEDINGS OF THE 1990 ACM CONFERENCE ON LISP AND FUNCTIONAL PROGRAMMING, P341, DOI 10.1145/91556.91682
   Nadathur G, 1998, THEOR COMPUT SCI, V198, P49, DOI 10.1016/S0304-3975(97)00184-9
   NADATHUR G, 1999, 16 INT C AUT DED, P287
   Nadathur Gopalan., 1988, Fifth International Logic Programming Conference, P810
   Nadathur Gopalan., 1992, TYPES IN LOGIC PROGRAMMING, P245
   Necula G, 1998, THESIS CARNEGIE MELL
   Necula G.C., 1997, 24 ANN S PRINCIPLES, P106
   Pfenning F., 1999, Automated Deduction - CADE-16. 16th International Conference on Automated Deduction. Proceedings (Lecture Notes in Artificial Intelligence Vol.1632), P202
   Pfenning F, 1991, Logical frameworks, P149
   Pfenning F., 1988, PLDI'88: Proceedings of the ACM SIGPLAN 1988 conference on Programming Language design and Implementation', P199
   VIRGA R, 1999, TWELF X EXTENDING TW
   WADSWORTH CP, 1971, THESIS OXFORD U
   WICKLINE P, TERZO IMPLEMENTATION
NR 22
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2004
VL 4
BP 1
EP 39
DI 10.1017/S1471068403001698
PN 1-2
PG 39
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 776LU
UT WOS:000189118100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Eiter, T
   Faber, W
   Leone, N
   Pfeifer, G
AF Eiter, T
   Faber, W
   Leone, N
   Pfeifer, G
TI Computing preferred answer sets by meta-interpretation in Answer Set
   Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT AAAI 2001 Spring Symposium on Answer Set Programming
CY MAR, 2001
CL STANFORD, CA
DE Answer Set Programming; meta-interpretation; preference semantics
ID LOGIC PROGRAMS; PRIORITIES; SEMANTICS
AB Most recently, Answer Set Programming (ASP) has been attracting interest as a new paradigm for problem solving. An important aspect, for which several approaches have been presented, is the handling of preferences between rules. In this paper, we consider the problem of implementing preference handling approaches by means of meta-interpreters in Answer Set Programming. In particular, we consider the preferred answer set approaches by Brewka and Eiter, by Delgrande, Schaub and Tompits, and by Wang, Zhou and Lin. We present suitable meta-interpreters for these semantics using DLV, which is an efficient engine for ASP. Moreover, we also present a meta-interpreter for the weakly preferred answer set approach by Brewka and Eiter, which uses the weak constraint feature of DLV as a tool for expressing and solving an underlying optimization problem. We also consider advanced meta-interpreters, which make use of graph-based characterizations and often allow for more efficient computations. Our approach shows the suitability of ASP in general and of DLV in particular for fast prototyping. This can be fruitfully exploited for experimenting with new languages and knowledge-representation formalisms.
C1 Vienna Univ Technol, Inst Informat Syst 184 3, A-1040 Vienna, Austria.
   Univ Calabria, Dept Math, I-87030 Commenda Di Rende, CS, Italy.
   Vienna Univ Technol, Inst Informat Syst 184 2, A-1040 Vienna, Austria.
C3 Technische Universitat Wien; University of Calabria; Technische
   Universitat Wien
RP Vienna Univ Technol, Inst Informat Syst 184 3, Favoritenstr 9-11, A-1040 Vienna, Austria.
EM eiter@kr.tuwien.ac.at; faber@kr.tuwien.ac.at; leone@unical.it;
   pfeifer@dbai.tuwien.ac.at
RI Leone, Nicola/B-1890-2012; Eiter, Thomas/ABE-9263-2021; Faber,
   Wolfgang/H-2316-2012
OI Leone, Nicola/0000-0002-9742-1252; Faber, Wolfgang/0000-0002-0330-5868
CR [Anonymous], 1996, Principles of Knowledge Representation
   BAADER F, 1995, J AUTOM REASONING, V15, P41, DOI 10.1007/BF00881830
   BONATTI PA, 2001, LECT NOTES ARTIF INT, V2173, P416
   BONATTI PA, 2001, P 17 INT JOINT C ART, P603
   Brewka G, 1999, ARTIF INTELL, V109, P297, DOI 10.1016/S0004-3702(99)00015-6
   Brewka G, 1996, J ARTIF INTELL RES, V4, P19, DOI 10.1613/jair.284
   Brewka G., 1994, Logics in Artificial Intelligence. European Workshop JELIA '94. Proceedings, P247, DOI 10.1007/BFb0021977
   BREWKA G, 2000, INTELLECTICS COMPUTA, P27
   Buccafurri F, 1999, ANN MATH ARTIF INTEL, V25, P311, DOI 10.1023/A:1018986207453
   Buccafurri F, 1997, LECT NOTES ARTIF INT, V1265, P2
   DELGRANDE J, 2001, LNCS, V2173, P411
   DELGRANDE J, 2000, LNCS, V1919
   Delgrande JP, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P392
   Delgrande JP, 2000, ARTIF INTELL, V123, P41, DOI 10.1016/S0004-3702(00)00049-7
   Delgrande JP, 1997, INT JOINT CONF ARTIF, P168
   Eiter T, 2002, LECT NOTES ARTIF INT, V2424, P186, DOI 10.1007/3-540-45757-7_16
   Faber W, 1999, LECT NOTES ARTIF INT, V1730, P177, DOI 10.1007/3-540-46767-X_13
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   GELFOND M, 1997, LPKR, P164
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   MAREK VW, 2001, LNCS, V2173, P107
   MAREK VW, 1993, NONMONOTONIC LOGICS
   NIEMELA I, 2000, P 8 INT WORKSH NONMO
   Rintanen J, 1998, ARTIF INTELL, V106, P221, DOI 10.1016/S0004-3702(98)00097-6
   Sakama C, 2000, ARTIF INTELL, V123, P185, DOI 10.1016/S0004-3702(00)00054-0
   Schaub Torsten., 2001, IJCAI, P597
   Wang KW, 2000, LECT NOTES ARTIF INT, V1861, P164
   You JH, 1999, ARTIF INTELL, V113, P247, DOI 10.1016/S0004-3702(99)00055-7
   Zhang Y, 1997, LOGIC PROGRAMM, P69
NR 29
TC 27
Z9 27
U1 1
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL-SEP
PY 2003
VL 3
BP 463
EP 498
DI 10.1017/S1471068403001753
PN 4-5
PG 36
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 708LE
UT WOS:000184567800004
DA 2024-07-18
ER

PT J
AU Bellomarini, L
   Laurenza, E
   Sallinger, E
   Sherkhonov, E
AF Bellomarini, Luigi
   Laurenza, Eleonora
   Sallinger, Emanuel
   Sherkhonov, Evgeny
TI Swift Markov Logic for Probabilistic Reasoning on Knowledge Graphs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE knowledge graphs and reasoning and Datalog plus /- and Markov logic
   networks
ID INFERENCE; COMPLEXITY; LANGUAGE; CHAINS
AB We provide a framework for probabilistic reasoning in Vadalog-based Knowledge Graphs (KGs), satisfying the requirements of ontological reasoning: full recursion, powerful existential quantification, expression of inductive definitions. Vadalog is a Knowledge Representation and Reasoning (KRR) language based on Warded Datalog+/-, a logical core language of existential rules, with a good balance between computational complexity and expressive power. Handling uncertainty is essential for reasoning with KGs. Yet Vadalog and Warded Datalog+/- are not covered by the existing probabilistic logic programming and statistical relational learning approaches for several reasons, including insufficient support for recursion with existential quantification and the impossibility to express inductive definitions. In this work, we introduce Soft Vadalog, a probabilistic extension to Vadalog, satisfying these desiderata. A Soft Vadalog program induces what we call a Probabilistic Knowledge Graph (PKG), which consists of a probability distribution on a network of chase instances, structures obtained by grounding the rules over a database using the chase procedure. We exploit PKGs for probabilistic marginal inference. We discuss the theory and present MCMC-chase, a Monte Carlo method to use Soft Vadalog in practice. We apply our framework to solve data management and industrial problems and experimentally evaluate it in the Vadalog system.
C1 [Bellomarini, Luigi; Laurenza, Eleonora] Banca dItalia, Rome, Italy.
   [Sallinger, Emanuel] TU Wien, Vienna, Austria.
   [Sherkhonov, Evgeny] Univ Oxford, Oxford, England.
C3 European Central Bank; Bank of Italy; Technische Universitat Wien;
   University of Oxford
RP Bellomarini, L (corresponding author), Banca dItalia, Rome, Italy.
EM luigi.bellomarini@bancaditalia.it; eleonora.laurenza@bancaditalia.it;
   sallinger@dbai.tuwien.ac.at; evgeny.sherkhonov@cs.ox.ac.uk
OI Bellomarini, Luigi/0000-0001-6863-0162
FU Vienna Science and Technology Fund (WWTF) [VRG18-013]
FX The work on this paper was partially supported by the Vienna Science and
   Technology Fund (WWTF) grant VRG18-013.
CR Agresti A., 2011, INT ENCY STAT SCI, P206, DOI [DOI 10.1007/978-3-642-04898-2_161, 10.1007/978-3-642-04898-2_161, 10.1007/978-3-642-04898-2]
   Alberti M, 2017, INTELL ARTIF, V11, P47, DOI 10.3233/IA-170106
   Angles R., 2018, AMW, V2100
   [Anonymous], 2006, IEEE Date Eng. Bull.
   Bacchus F., 1990, Computational Intelligence, V6, P209, DOI 10.1111/j.1467-8640.1990.tb00296.x
   Barabási AL, 2003, SCI AM, V288, P60, DOI 10.1038/scientificamerican0503-60
   Beame P., 2014, ARXIV
   Bellomarini L, 2020, LECT NOTES COMPUT SC, V12173, P131, DOI 10.1007/978-3-030-57977-7_9
   Bellomarini L, 2019, PROC INT CONF DATA, P26, DOI 10.1109/ICDE.2019.00011
   Bellomarini L, 2018, PROC VLDB ENDOW, V11, P975, DOI 10.14778/3213880.3213888
   Bellomarini L, 2018, LECT NOTES COMPUT SC, V11163, P3, DOI 10.1007/978-3-030-00856-7_1
   Bellomarini L, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2
   Berti-Equille L., 2009, ARXIV
   Bleiholder J, 2008, ACM COMPUT SURV, V41, DOI 10.1145/1456650.1456651
   Bollobás B, 2003, SIAM PROC S, P132
   Borgwardt S, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5420
   Borgwardt S, 2017, AAAI CONF ARTIF INTE, P1063
   Calì A, 2012, ARTIF INTELL, V193, P87, DOI 10.1016/j.artint.2012.08.002
   Ceri S., 1989, IEEE Transactions on Knowledge and Data Engineering, V1, P146, DOI 10.1109/69.43410
   Ceylan II, 2015, LECT NOTES ARTIF INT, V9310, P21, DOI 10.1007/978-3-319-23540-0_2
   Christen P, 2012, DATA MATCHING CONCEP, DOI [DOI 10.1007/978-3-642-31164-2, 10.1007/978-3-642- 31164-2]
   Culotta A., 2005, Proceedings of the 14th ACM international conference on Information and knowledge management, CIKM '05, P257, DOI DOI 10.1145/1099554
   d'Amato C, 2008, LECT NOTES ARTIF INT, V5291, P146, DOI 10.1007/978-3-540-87993-0_13
   Dalvi N., 2007, PODS, P1, DOI [DOI 10.1145/1265530.1265531, 10.1145/1265530.1265531]
   Dalvi N, 2012, J ACM, V59, DOI 10.1145/2395116.2395119
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   DANTSIN E, 1992, LECT NOTES ARTIF INT, V592, P152
   De Raedt L, 2015, MACH LEARN, V100, P5, DOI 10.1007/s10994-015-5494-z
   den Broeck G. V., 2017, TRENDS DATABASES, V7, P3
   Domingos P, 2019, COMMUN ACM, V62, P74, DOI 10.1145/3241978
   Dong X. L., 2015, ARXIV
   Fagin R, 2005, THEOR COMPUT SCI, V336, P89, DOI 10.1016/j.tcs.2004.10.033
   Fayzrakhmanov RR, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P1095, DOI 10.1145/3178876.3186008
   FELLEGI IP, 1969, J AM STAT ASSOC, V64, P1183, DOI 10.2307/2286061
   Fierens D., 2015, TPLP
   Gilks Walter R., 1995, Markov chain Monte Carlo in practice
   Goodman ND., 2008, UAI, P220
   Gottlob G, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2999
   Gottlob G, 2013, ANN MATH ARTIF INTEL, V69, P37, DOI 10.1007/s10472-013-9342-1
   Gribkoff E, 2016, PROC VLDB ENDOW, V9, P552, DOI 10.14778/2904483.2904487
   Halpern J. Y., 1989, IJCAI-89 Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, P1375
   HASTINGS WK, 1970, BIOMETRIKA, V57, P97, DOI 10.1093/biomet/57.1.97
   Huang JW, 2009, ACM SIGMOD/PODS 2009 CONFERENCE, P1071
   Jaeger M., 2018, ENCY SOCIAL NETWORK
   Jung J. C., 2012, The Semantic Web-ISWC 2012, DOI 10.1007/978-3-642-35176-1\_12
   Kersting K., 2008, PROBABILISTIC INDUCT
   Koller D., 2009, Probabilistic graphical models: principles and techniques
   Krompass D, 2014, LECT NOTES COMPUT SC, V8797, P114, DOI 10.1007/978-3-319-11915-1_8
   Latour Anna L. D., 2017, Principles and Practice of Constraint Programming. 23rd International Conference, CP 2017. Proceedings: LNCS 10416, P495, DOI 10.1007/978-3-319-66158-2_32
   Laurenza E, 2015, 2015 18TH INTERNATIONAL CONFERENCE ON INFORMATION FUSION (FUSION), P399
   Lee J, 2016, FIFTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P145
   Marx M, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1188
   McCallum A., 2003, P KDD 2003 WORKSHOP
   McCallum Andrew, 2004, Advances in Neural Information Processing Systems 17 Neural Information Processing Systems, P905
   Michels C, 2017, ACM-IEEE J CONF DIG, P319
   Milch B, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P1352
   MUMICK IS, 1990, VERY LARGE DATA BASES, P264
   Niu F, 2011, PROC VLDB ENDOW, V4, P373, DOI 10.14778/1978665.1978669
   Nocedal J, 2006, SPRINGER SER OPER RE, P1, DOI 10.1007/978-0-387-40065-5
   Olteanu D., 2016, AAAI WORKSHOP NP AAA, VWS-16-05
   Olteanu D, 2016, SIGMOD REC, V45, P5, DOI 10.1145/3003665.3003667
   Pfeffer Avi, 2009, Figaro: An object-oriented probabilistic programming language, V137, P96
   Poggi A, 2008, LECT NOTES COMPUT SC, V4900, P133, DOI 10.1007/978-3-540-77688-8_5
   POOLE D, 1993, NEW GENERAT COMPUT, V11, P377, DOI 10.1007/BF03037184
   Poole David, 2008, Probabilistic Inductive Logic Programming. Theory and Applications, P222, DOI 10.1007/978-3-540-78652-8_8
   PROVAN JS, 1983, SIAM J COMPUT, V12, P777, DOI 10.1137/0212053
   Richardson M, 2006, MACH LEARN, V62, P107, DOI 10.1007/s10994-006-5833-1
   Riguzzi F, 2007, LECT NOTES COMPUT SC, V4733, P109
   Sato T, 1997, INT JOINT CONF ARTIF, P1330
   Sato T., 1995, ICLP
   Singla P, 2005, LECT NOTES ARTIF INT, V3721, P297
   Singla P, 2006, IEEE DATA MINING, P572
   Stuart A., 1991, KENDALLS ADV THEORY, V2
   Suciu D., 2011, Probabilistic databases, synthesis lectures on data management
   TIERNEY L, 1994, ANN STAT, V22, P1701, DOI 10.1214/aos/1176325750
   Ullman JD, 1997, LECT NOTES COMPUT SC, V1186, P19
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P431, DOI 10.1007/978-3-540-27775-0_30
   Vennekens J, 2009, THEOR PRACT LOG PROG, V9, P245, DOI 10.1017/S1471068409003767
   Yin XX, 2008, IEEE T KNOWL DATA EN, V20, P796, DOI 10.1109/TKDE.2007.190745
NR 79
TC 0
Z9 0
U1 5
U2 11
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2023
VL 23
IS 3
SI SI
BP 507
EP 534
DI 10.1017/S1471068422000412
EA NOV 2022
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA IF3Y0
UT WOS:000880466100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tran, SC
   Pontelli, E
   Balduccini, M
   Schaub, T
AF Tran, Son Cao
   Pontelli, Enrico
   Balduccini, Marcello
   Schaub, Torsten
TI Answer Set Planning: A Survey
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE planning; knowledge representation and reasoning; logic programming
ID WELL-FOUNDED SEMANTICS; DECENTRALIZED CONTROL; SENSING ACTIONS; STABLE
   MODEL; LOGIC; COMPLEXITY; SYSTEMS; SATISFIABILITY; PREFERENCES;
   DIAGNOSIS
AB Answer Set Planning refers to the use of Answer Set Programming (ASP) to compute plans, that is, solutions to planning problems, that transform a given state of the world to another state. The development of efficient and scalable answer set solvers has provided a significant boost to the development of ASP-based planning systems. This paper surveys the progress made during the last two and a half decades in the area of answer set planning, from its foundations to its use in challenging planning domains. The survey explores the advantages and disadvantages of answer set planning. It also discusses typical applications of answer set planning and presents a set of challenges for future research.
C1 [Tran, Son Cao; Pontelli, Enrico] New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88003 USA.
   [Balduccini, Marcello] St Josephs Univ, Dept Decis & Syst Sci, Philadelphia, PA 19131 USA.
   [Schaub, Torsten] Univ Potsdam, Dept Comp Sci, Potsdam, Germany.
C3 New Mexico State University; Saint Joseph's University; University of
   Potsdam
RP Tran, SC (corresponding author), New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88003 USA.
EM tson@cs.nmsu.edu; epontell@cs.nmsu.edu; mbalducc@sju.edu;
   torsten@cs.uni-potsdam.de
RI Pontelli, Enrico/AAJ-5161-2021; Schaub, Torsten/O-5873-2019
OI Pontelli, Enrico/0000-0002-7753-1737; Schaub,
   Torsten/0000-0002-7456-041X; Tran, Son/0000-0003-3689-8433
FU NSF [1914635, 1833630, 1757207, 1812628]; DFG, Germany [SCHA 550/15];
   NIST [70NANB21H167]; Division Of Undergraduate Education; Direct For
   Education and Human Resources [1833630] Funding Source: National Science
   Foundation
FX Tran Son and Enrico Pontelli have been partially supported by NSF grants
   1914635, 1833630, 1757207, and 1812628. Tran Son's and Marcello
   Balduccini's contribution was made possible in part through the help and
   support of NIST via cooperative agreement 70NANB21H167. Torsten Schaub
   was supported by DFG grant SCHA 550/15, Germany.
CR Abels D, 2019, LECT NOTES ARTIF INT, V11481, P3, DOI 10.1007/978-3-030-20528-7_1
   Aker E, 2011, LECT NOTES ARTIF INT, V6645, P311
   Albore A., 2011, P 21 INT C AUT PLANN, P2
   Allen J., 1991, REASONING PLANS
   ALLEN J, 1990, READINGS PLANNING
   Allen M., 2009, ADV NEURAL INFORM PR, P19
   Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P54, DOI 10.1007/978-3-642-40564-8_6
   Aminof B, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1674
   Andreychuk A, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P39
   [Anonymous], 2006, Commonsense Reasoning
   [Anonymous], 2015, Potassco User Guide
   [Anonymous], 2011, P INT C AUT PLANN SC
   [Anonymous], 1969, ser. IJCAI'69
   [Anonymous], 1995, ICLP
   Atzmon D, 2020, J ARTIF INTELL RES, V67, P549
   Aucher G., 2013, P 23 INT JOINT C ART, P27
   Bacchus F, 2001, AI MAG, V22, P47
   BACKSTROM C, 1995, COMPUT INTELL, V11, P625, DOI 10.1111/j.1467-8640.1995.tb00052.x
   Baier JA, 2008, AI MAG, V29, P25, DOI 10.1609/aimag.v29i4.2204
   Balduccini M, 2003, THEOR PRACT LOG PROG, V3, P425, DOI 10.1017/S1471068403001807
   Balduccini M., 2013, THEOR PRACT LOG PROG, V13, P4
   Balduccini M., 2009, P 2 WORKSH ANSW SET, P16
   Balduccini M, 2017, THEOR PRACT LOG PROG, V17, P591, DOI 10.1017/S1471068417000187
   Balduccini M, 2017, THEOR PRACT LOG PROG, V17, P462, DOI 10.1017/S1471068417000102
   Balduccini M, 2011, LECT NOTES ARTIF INT, V6645, P284
   Banbara M, 2017, THEOR PRACT LOG PROG, V17, P408, DOI 10.1017/S1471068417000138
   Baral C, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P507
   Baral C, 2000, SPRINGER INT SER ENG, V597, P257
   Baral C, 2000, ARTIF INTELL, V122, P241, DOI 10.1016/S0004-3702(00)00043-6
   Baral C., 2000, P 7 INT C PRINCIPLES, P311
   Baroni P, 1999, ARTIF INTELL, V110, P135, DOI 10.1016/S0004-3702(99)00019-3
   Bartak R., 2019, SOCS, P10
   Barták R, 2019, AI COMMUN, V32, P175, DOI 10.3233/AIC-190621
   Bartholomew M., 2013, P 23 INT JOINT C ART, P718
   Baselice S, 2005, LECT NOTES COMPUT SC, V3668, P52, DOI 10.1007/11562931_7
   BELLMAN R, 1957, J MATH MECH, V6, P679, DOI 10.1512/iumj.1957.6.56038
   Bernstein DS, 2002, MATH OPER RES, V27, P819, DOI 10.1287/moor.27.4.819.297
   Bidoux L, 2019, ENG APPL ARTIF INTEL, V85, P808, DOI 10.1016/j.engappai.2019.08.002
   Blum AL, 1997, ARTIF INTELL, V90, P281, DOI 10.1016/S0004-3702(96)00047-1
   Bolander Thomas, 2011, Journal of Applied Non-Classical Logic, V21, P9, DOI 10.3166/jancl.21.9-34
   Bolander T, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2791
   Bonatti P.A., 2008, Proceedings of the 23rd national conference on Artificial Intelligence - Volume 1, AAAI'08, V1, P418
   Bonet B, 2001, ARTIF INTELL, V129, P5, DOI 10.1016/S0004-3702(01)00108-4
   Bonet B., 2000, Proceedings of the Fifth International Conference on Artificial Intelligence Planning and Scheduling, P52
   Bonet B., 2003, LABELED RTDP IMPROVI, P12
   Bonet B, 2010, FRONT ARTIF INTEL AP, V215, P329, DOI 10.3233/978-1-60750-606-5-329
   Boyarski E, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P740
   Brafman R. I., 2008, ICAPS 2008 P 18 INT, P28
   Brenner M., 2003, Proceedings of the Workshop on PDDL at the International Conference on Automated Planning and Scheduling, V3, P33
   Brewka Gerhard, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P158, DOI 10.1007/978-3-319-23264-5_15
   Brewka G, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P100
   Brewka G, 2015, AAAI CONF ARTIF INTE, P1467
   BRYANT RE, 1992, COMPUT SURV, V24, P293, DOI 10.1145/136035.136043
   Bryce D, 2006, J ARTIF INTELL RES, V26, P35, DOI 10.1613/jair.1869
   Burigana A, 2020, THEOR PRACT LOG PROG, V20, P593, DOI 10.1017/S1471068420000289
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Camacho A., 2019, ICAPS, P58, DOI [10.1609/icaps.v29i1.3460, DOI 10.1609/ICAPS.V29I1.3460]
   Camacho A, 2018, P I C AUTOMAT PLAN S, P29
   Cashmore M, 2020, J ARTIF INTELL RES, V67, P235
   Castellini C, 2003, ARTIF INTELL, V147, P85, DOI 10.1016/S0004-3702(02)00375-2
   Chakraborti T, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P156
   Charrier T., 2016, P IJCAI, P1030
   Chen YK, 2009, ARTIF INTELL, V173, P365, DOI 10.1016/j.artint.2008.11.004
   Cimatti A, 2004, ARTIF INTELL, V159, P127, DOI 10.1016/j.artint.2004.05.003
   Cimatti A, 2000, J ARTIF INTELL RES, V13, P305, DOI 10.1613/jair.774
   Cohen L., 2016, IJCAI, P3067
   Cordier, 1994, 819 IRISA
   Crosby M, 2014, FRONT ARTIF INTEL AP, V263, P237, DOI 10.3233/978-1-61499-419-0-237
   Dai P, 2011, J ARTIF INTELL RES, V42, P181
   Dal Palù A, 2009, FUND INFORM, V96, P297, DOI 10.3233/FI-2009-180
   Das M, 2019, KNOWL-BASED SYST, V165, P219, DOI 10.1016/j.knosys.2018.11.028
   De Cat B, 2015, J ARTIF INTELL RES, V52, P235, DOI 10.1613/jair.4591
   de Kleer J., 2003, IFAC P, V36, P25, DOI [10.1016/S1474-6670(17)36467-4, DOI 10.1016/S1474-6670(17)36467-4]
   de Weerdt M, 2003, ANN MATH ARTIF INTEL, V37, P93, DOI 10.1023/A:1020236119243
   de Weerdt M, 2009, MULTIAGENT GRID SYST, V5, P345, DOI 10.3233/MGS-2009-0133
   de Wilde B, 2014, J ARTIF INTELL RES, V51, P443, DOI 10.1613/jair.4447
   DENECKER M, 1992, ECAI 92 - 10TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE : PROCEEDINGS, P384
   Dimopoulos Y., 1997, Recent Advances in AI Planning. 4th European Conference on Planning, ECP'97 Proceedings, P169, DOI 10.1007/3-540-63912-8_84
   Dimopoulos Y, 2019, THEOR PRACT LOG PROG, V19, P477, DOI 10.1017/S1471068418000583
   Dix, 2005, WE WILL SHOW THEM ES, V1, P521
   Do MB, 2003, J ARTIF INTELL RES, V20, P155, DOI 10.1613/jair.1156
   Dodaro C, 2019, LECT NOTES COMPUT SC, V11784, P67, DOI 10.1007/978-3-030-31095-0_5
   Dovier A, 2009, J EXP THEOR ARTIF IN, V21, P79, DOI 10.1080/09528130701538174
   Durfee EH, 1999, MULTIAGENT SYSTEMS, P121
   Eijck, 2004, DYNAMIC EPISTEMIC MO
   Eiter T., 2004, ACM Transactions on Computational Logic, V5, P206, DOI 10.1145/976706.976708
   Eiter T, 2003, J ARTIF INTELL RES, V19, P25, DOI 10.1613/jair.1148
   Eiter T, 2003, ARTIF INTELL, V144, P157, DOI 10.1016/S0004-3702(02)00367-3
   Eiter T, 1997, LECT NOTES ARTIF INT, V1265, P363
   Eiter T, 2000, LECT NOTES ARTIF INT, V1861, P807
   Elkabani I, 2004, LECT NOTES COMPUT SC, V3132, P73, DOI 10.1007/978-3-540-27775-0_6
   Endriss U, 2004, LECT NOTES COMPUT SC, V3229, P31, DOI 10.1007/978-3-540-30227-8_6
   Engesser T, 2017, ELECTRON P THEOR COM, P75, DOI 10.4204/EPTCS.243.6
   Erdem E., 2013, PROC AAAI C ARTIFICI, P290, DOI DOI 10.1609/AAAI.V27I1.8592
   Eshghi K., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P562
   Fabiano Francesco, 2020, P 30 INT C AUT PLANN, V30, P101
   Fagin R, 1995, Reasoning about knowledge
   Fandinno J, 2021, THEOR PRACT LOG PROG, V21, P663, DOI 10.1017/S1471068421000259
   Fangzhen Lin, 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1985
   Feldman A, 2020, AAAI CONF ARTIF INTE, V34, P2814
   FIKES RE, 1971, ARTIF INTELL, V2, P189, DOI 10.1016/0004-3702(71)90010-5
   Fox M., 2017, EXPLAINABLE PLANNING
   Gebser M., 2016, OpenAccess Series in Informatics (OASIcs), V52, p2:1
   Gebser M., 2013, PROC AAAI, P350, DOI 10.1609/aaai.v27i1.8585
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P260, DOI 10.1007/978-3-540-72200-7_23
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   Gebser M, 2018, THEOR PRACT LOG PROG, V18, P520, DOI 10.1017/S1471068418000182
   Gebser M, 2018, THEOR PRACT LOG PROG, V18, P502, DOI 10.1017/S1471068418000200
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P235, DOI 10.1007/978-3-642-02846-5_22
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1998, Electron. Trans. Artif. Intell., V2, P193
   Gerevini, 2004, 5 INT PLANNING COMPE
   GEREVINI A., 2005, Plan Constraints and Preferences in PDDL3: The Language of the Fifth International Planning Competition
   Ghallab M., 2004, AUTOMATED PLANNING T
   Ghallab M., 1998, TR98003DCSTR1165 CVC
   Ghallab M., 2016, Automated planning and acting
   Giunchiglia E, 1997, ARTIF INTELL, V95, P409, DOI 10.1016/S0004-3702(97)00037-4
   Giunchiglia E., 2007, P 22 AAAI C ARTIFICI, P987
   Giunchiglia E, 2011, J LOGIC COMPUT, V21, P205, DOI 10.1093/logcom/exq023
   Gmytrasiewicz PJ, 2005, J ARTIF INTELL RES, V24, P49, DOI 10.1613/jair.1579
   Golden K., 1998, Proceedings Fourth International Conference on Artificial Intelligence Planning Systems, P70
   Golden K., 1996, TR960109 U WASH DEP
   Goldenberg M, 2014, J ARTIF INTELL RES, V50, P141, DOI 10.1613/jair.4171
   Goldman CV, 2004, J ARTIF INTELL RES, V22, P143, DOI 10.1613/jair.1427
   GOMEZ RN, 2020, P 34 AAAI C AAAI, P9867
   Gómez RN, 2021, IEEE ACCESS, V9, P26886, DOI 10.1109/ACCESS.2021.3053547
   Grastien A, 2020, ARTIF INTELL, V284, DOI 10.1016/j.artint.2020.103271
   Grastien A, 2013, IEEE T AUTOMAT CONTR, V58, P3070, DOI 10.1109/TAC.2013.2275892
   Guestrin C, 2002, ADV NEUR IN, V14, P1523
   Hansen EA, 2001, ARTIF INTELL, V129, P35, DOI 10.1016/S0004-3702(01)00106-0
   Haslum P, 2000, LECT NOTES ARTIF INT, V1809, P308
   Helmert M., 2011, The 2011 International Planning Competition, P38
   Helmert M., 2008, 18 ICAPS, P140
   Helmert M., 2008, P 23 AAAI C ART INT, P938
   Helmert M., 2009, INT C AUT PLANN SCHE, P162
   Helmert M, 2006, J ARTIF INTELL RES, V26, P191, DOI 10.1613/jair.1705
   HENDLER J, 1990, AI MAG, V11, P61
   Hoffman J, 2004, J ARTIF INTELL RES, V22, P215, DOI 10.1613/jair.1492
   Hoffmann J, 2006, ARTIF INTELL, V170, P507, DOI 10.1016/j.artint.2006.01.003
   Hoffmann J, 2001, J ARTIF INTELL RES, V14, P253, DOI 10.1613/jair.855
   Hoffmann J, 2005, J ARTIF INTELL RES, V24, P685, DOI 10.1613/jair.1747
   Hönig W, 2016, P I C AUTOMAT PLAN S, P477
   Jiang YQ, 2019, FRONT INFORM TECH EL, V20, P363, DOI 10.1631/FITEE.1800514
   Kaelbling LP, 1998, ARTIF INTELL, V101, P99, DOI 10.1016/S0004-3702(98)00023-X
   Kambhampati S., 1997, Recent Advances in AI Planning. 4th European Conference on Planning, ECP'97 Proceedings, P260, DOI 10.1007/3-540-63912-8_91
   Kautz H, 1996, MOR KAUF R, P374
   KAUTZ H, 1992, ECAI 92 - 10TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE : PROCEEDINGS, P359
   Kautz H, 1999, SIXTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-99)/ELEVENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE (IAAI-99), P526
   Khandelwal P, 2014, P I C AUTOMAT PLAN S, P472
   Kocsis L, 2006, LECT NOTES COMPUT SC, V4212, P282, DOI 10.1007/11871842_29
   Kominis F, 2017, P I C AUTOMAT PLAN S, P186
   Kominis F, 2015, P I C AUTOMAT PLAN S, P147
   KORF RE, 1985, ARTIF INTELL, V27, P97, DOI 10.1016/0004-3702(85)90084-0
   KOWALSKI R, 1986, NEW GENERAT COMPUT, V4, P67, DOI 10.1007/BF03037383
   Le HV, 2005, LECT NOTES COMPUT SC, V3648, P750
   Levesque HJ, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P1139
   Lierler Y, 2004, LECT NOTES ARTIF INT, V2923, P346
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Lifschitz V, 1999, LECT NOTES ARTIF INT, V1730, P92, DOI 10.1007/3-540-46767-X_7
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Lobo, 1998, FS9802 AAAI
   Long D, 2000, AI MAG, V21, P13
   Löwe B, 2011, LECT NOTES ARTIF INT, V6953, P179, DOI 10.1007/978-3-642-24130-7_13
   Luna R., 2011, Joint Conference on Artificial Intelligence-Volume Volume, P294
   Ma H, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P417
   Ma H, 2017, AAAI CONF ARTIF INTE, P3605
   Ma H, 2016, AAMAS'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS & MULTIAGENT SYSTEMS, P1144
   Ma H, 2016, AAAI CONF ARTIF INTE, P3166
   Marple Kyle, 2013, Logic-Based Program Synthesis and Transformation. 22nd International Symposium, LOPSTR 2012. Revised Selected Papers, P122, DOI 10.1007/978-3-642-38197-3_9
   McCain N., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1978
   McIlraith S., 1997, P NAT C ART INT AAAI, P43
   Mellarkod VS, 2008, ANN MATH ARTIF INTEL, V53, P251, DOI 10.1007/s10472-009-9116-y
   Mendez G., 1997, AAAI-97, P454
   Metodi A, 2014, J ARTIF INTELL RES, V51, P377, DOI 10.1613/jair.4503
   Missiaen L, 1995, J LOGIC COMPUT, V5, P579, DOI 10.1093/logcom/5.5.579
   Morales AR, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1991
   Morris R., 2016, P WORKSH PLANN HYBR
   Muise C, 2015, AAAI CONF ARTIF INTE, P3327
   Nair Ranjit, 2003, IJCAI, V3, P705
   Nguyen H., 2011, P 25 NAT C ART INT A
   Nguyen H., 2012, P 22 INT C AUT PLANN
   Niemela I, 1997, LECT NOTES ARTIF INT, V1265, P420
   Nissim R, 2012, P INT C AUT AG MULT, P1265
   Nogueira M., 2001, Practical Aspects of Declarative Languages. Third International Symposium, PADL 2001. Proceedings (Lecture Notes in Computer Science Vol.1990), P169
   Ostrowski M, 2012, THEOR PRACT LOG PROG, V12, P485, DOI 10.1017/S1471068412000142
   Palacios H., 2005, LNCS, V4177, P311
   Palacios H., 2007, P 17 INT C AUTOMATED, P264
   Palacios H, 2009, J ARTIF INTELL RES, V35, P623, DOI 10.1613/jair.2708
   PEOT MA, 1992, ARTIFICIAL INTELLIGENCE PLANNING SYSTEMS, P189
   Peshkin L., 2002, Proceedings of the International Joint Conference on Neural Networks, P1825, DOI DOI 10.1109/IJCNN.2002.1007796
   Phan HT, 2011, ARTIF INTELL, V175, P79, DOI 10.1016/j.artint.2010.04.007
   Pianpak P., 2019, P 1 INT C DISTR ART, V2, P7
   Pommerening F, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4770
   Poupart P, 2004, ADV NEUR IN, V16, P823
   Pryer L, 1996, J ARTIF INTELL RES, V4, P287
   Przymusinski T. C., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1081
   Rathnasabapathy B., 2006, P 5 INT JOINT C AUTO, P1025
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   Richter S., 2009, P 19 INT C AUT PLANN
   Rintanen J., 1999, Journal of Artificial Intelligence Research, V10, P323
   Rintanen J., 2011, P 22 INT JOINT C ART, P2015
   Rintanen J, 2006, ARTIF INTELL, V170, P1031, DOI 10.1016/j.artint.2006.08.002
   Rintanen J, 2012, ARTIF INTELL, V193, P45, DOI 10.1016/j.artint.2012.08.001
   Rizwan M, 2020, THEOR PRACT LOG PROG, V20, P1006, DOI 10.1017/S1471068420000319
   Robinson N., 2009, P 19 INT C AUT PLANN, P281
   Roger Gabi., 2010, P 20 INT C AUTOMATED, P246
   SACERDOTI ED, 1974, ARTIF INTELL, V5, P115, DOI 10.1016/0004-3702(74)90026-5
   Salzman O., 2020, P 19 INT C AUT AG MU, P1711
   Scala E, 2016, P I C AUTOMAT PLAN S, P276
   Schneidenbach L, 2009, LECT NOTES COMPUT SC, V5759, P64, DOI 10.1007/978-3-642-03770-2_13
   Shanahan M, 2000, J LOGIC PROGRAM, V44, P207, DOI 10.1016/S0743-1066(99)00077-1
   Shanahan M., 1997, Recent Advances in AI Planning. 4th European Conference on Planning, ECP'97 Proceedings, P390, DOI 10.1007/3-540-63912-8_101
   Shanahan M, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P140
   Shani G, 2013, AUTON AGENT MULTI-AG, V27, P1, DOI 10.1007/s10458-012-9200-2
   Sharon G, 2015, ARTIF INTELL, V219, P40, DOI 10.1016/j.artint.2014.11.006
   Shoham Y, 2009, MULTIAGENT SYSTEMS: ALGORITHMIC, GAME-THEORETIC, AND LOGICAL FOUNDATIONS, P1
   Sideris A., 2010, Proceedings of the International Conference on Automated Planning and Scheduling, Volume, V20, P153
   Silver D., 2005, P AAAI C ART INT INT, P117, DOI DOI 10.1609/AIIDE.V1I1.18726
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Smith DE, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P889
   Sohrabi S, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P1790
   Son T., 2006, P 10 INT C PRINC KNO, P481
   Son T., 2007, CEUR WORKSHOP PROC, V281, P116
   Son T.C., 2005, AAAI, P1211
   Son TC, 2005, LECT NOTES ARTIF INT, V3662, P172, DOI 10.1007/11546207_14
   Son TC, 2001, ARTIF INTELL, V125, P19, DOI 10.1016/S0004-3702(00)00080-1
   Son TC, 2006, ACM T COMPUT LOG, V7, P613, DOI 10.1145/1183278.1183279
   Son TC, 2006, THEOR PRACT LOG PROG, V6, P559, DOI 10.1017/S1471068406002717
   Son TC, 2014, ACM T COMPUT LOG, V15, DOI 10.1145/2526270
   Son TC, 2009, LECT NOTES COMPUT SC, V5649, P99, DOI 10.1007/978-3-642-02846-5_13
   Sonu E, 2015, AUTON AGENT MULTI-AG, V29, P455, DOI 10.1007/s10458-014-9261-5
   Spies D, 2019, THEOR PRACT LOG PROG, V19, P1124, DOI 10.1017/S1471068419000395
   Stern R, 2019, P INT S COMB SEARCH, P151, DOI DOI 10.48550/ARXIV.1906.08291
   Surynek P, 2019, P 12 INT S COMBINATO, P200
   Surynek P., 2018, P INT S COMB SEARCH, P90
   Surynek P, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1177
   Surynek P, 2016, FRONT ARTIF INTEL AP, V285, P810, DOI 10.3233/978-1-61499-672-9-810
   Taupe R, 2019, LECT NOTES ARTIF INT, V11481, P298, DOI 10.1007/978-3-030-20528-7_22
   Thiebaux S, 1996, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, P525
   Thiebaux S., 2003, P 18 INT JOINT C ART, P961
   Thielscher, 2000, CL200001 DRESD U TEC
   Thielscher M., 1997, Electron. Trans. Artif. Intell., V1, P73
   Le T, 2018, P I C AUTOMAT PLAN S, P161
   Le T, 2015, AAAI CONF ARTIF INTE, P1174
   To S., 2010, P 24 NAT C ART INT A
   To S., 2009, P 19 INT C AUT PLANN, P305
   To SonThanh., 2010, ICAPS, P169
   Torreño A, 2012, FRONT ARTIF INTEL AP, V242, P762, DOI 10.3233/978-1-61499-098-7-762
   Son TC, 2016, AAAI CONF ARTIF INTE, P3181
   Tran CS, 2010, LECT NOTES ARTIF INT, V6214, P1
   Tran DV, 2009, LECT NOTES COMPUT SC, V5418, P239, DOI 10.1007/978-3-540-92995-6_17
   Treszkai L, 2020, INT J APPROX REASON, V119, P92, DOI 10.1016/j.ijar.2019.12.005
   Tu PH, 2007, THEOR PRACT LOG PROG, V7, P377, DOI 10.1017/S1471068406002948
   Turner H, 2002, LECT NOTES ARTIF INT, V2424, P111, DOI 10.1007/3-540-45757-7_10
   Turner H, 1997, J LOGIC PROGRAM, V31, P245, DOI 10.1016/S0743-1066(96)00125-2
   van der Hoek W., 2002, Proceedings of the First International Joint Conference on Autonomous Agents and Multiagent Systems, P1167
   Nguyen V, 2020, KR2020: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P662
   Nguyen V, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1216
   Van Nieuwenborgh D, 2007, LECT NOTES COMPUT SC, V4483, P214
   VanDitmarsch H, 2007, SYNTH LIBR, V337, P1, DOI 10.1007/978-1-4020-5839-4
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Veloso M, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P4423
   Vidal V, 2006, ARTIF INTELL, V170, P298, DOI 10.1016/j.artint.2005.08.004
   Tran V, 2013, ACM T INTEL SYST TEC, V4, DOI 10.1145/2438653.2438671
   Vlassis N., 2007, CONCISE INTRO MULTIA
   Wagner G, 2015, ARTIF INTELL, V219, P1, DOI 10.1016/j.artint.2014.11.001
   Wan H, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1093
   Wan H, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P3257
   Wang KHC, 2011, J ARTIF INTELL RES, V42, P55
   Wang Y, 2019, LECT NOTES ARTIF INT, V11481, P224, DOI 10.1007/978-3-030-20528-7_17
   WARREN DHD, 1976, P SUMM C ART INT SIM, P344
   WELD DS, 1994, AI MAG, V15, P27
   Weld DS, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P897
   Williams BC, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P971
   Wotawa Franz, 2020, Trends in Artificial Intelligence Theory and Applications. Artificial Intelligence Practices. 33rd International Conference on Industrial, Engineering and Other Applications of Applied Intelligent Systems, IEA/AIE 2020. Proceedings. Lecture Notes in Artificial Intelligence. Subseries of Lecture Notes in Computer Science (LNAI 12144), P518, DOI 10.1007/978-3-030-55789-8_45
   Wurman PR, 2008, AI MAG, V29, P9
   Yalciner IF, 2017, THEOR PRACT LOG PROG, V17, P1027, DOI 10.1017/S1471068417000321
   Yang Qiang., 1997, INTELLIGENT PLANNING
   Yu JJ, 2016, IEEE T ROBOT, V32, P1163, DOI 10.1109/TRO.2016.2593448
   Zhu L., 2004, IPC 4, P64
NR 281
TC 4
Z9 4
U1 1
U2 5
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2023
VL 23
IS 1
BP 226
EP 298
AR PII S1471068422000072
DI 10.1017/S1471068422000072
EA APR 2022
PG 73
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA JO5Y4
UT WOS:000776673100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kaminski, R
   Romero, J
   Schaub, T
   Wanko, P
AF Kaminski, Roland
   Romero, Javier
   Schaub, Torsten
   Wanko, Philipp
TI How to Build Your Own ASP-based System?!
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Answer Set Programming; Answer Set Systems; Meta Programming; Answer Set
   Solving modulo Theories
ID KNOWLEDGE-REPRESENTATION; STABLE MODEL; ANSWER; SAT; SETS; DLV
AB Answer Set Programming, or ASP for short, has become a popular and sophisticated approach to declarative problem solving. Its popularity is due to its attractive modeling-grounding-solving workflow that provides an easy approach to problem solving, even for laypersons outside computer science. However, in contrast to ASP's ease of use, the high degree of sophistication of the underlying technology makes it even hard for ASP experts to put ideas into practice whenever this involves modifying ASP's machinery. For addressing this issue, this tutorial aims at enabling users to build their own ASP-based systems. More precisely, we show how the ASP system clingo can be used for extending ASP and for implementing customized special-purpose systems. To this end, we propose two alternatives. We begin with a traditional AI technique and show how metaprogramming can be used for extending ASP. This is a rather light approach that relies on clingo's reification feature to use ASP itself for expressing new functionalities. The second part of this tutorial uses traditional programming (in Python) for manipulating clingo via its application programming interface. This approach allows for changing and controlling the entire model-ground-solve workflow of ASP. Central to this is clingo's new Application class that allows us to draw on clingo's infrastructure by customizing processes similar to the one in clingo. For instance, we may apply manipulations to programs' abstract syntax trees, control various forms of multi-shot solving, and set up theory propagators for foreign inferences. A cross-sectional structure, spanning meta as well as application programming, is clingo's intermediate format, aspif, that specifies the interface among the underlying grounder and solver. We illustrate the aforementioned concepts and techniques throughout this tutorial by means of examples and several nontrivial case studies. In particular, we show how clingo can be extended by difference constraints and how guess-and-check programming can be implemented with both meta and application programming.
C1 [Kaminski, Roland; Romero, Javier; Schaub, Torsten; Wanko, Philipp] Univ Potsdam, Potsdam, Germany.
C3 University of Potsdam
RP Kaminski, R (corresponding author), Univ Potsdam, Potsdam, Germany.
EM kaminski@cs.uni-potsdam.de; javier@cs.uni-potsdam.de;
   torsten@cs.uni-potsdam.de; wanko@cs.uni-potsdam.de
RI Romero, Javier/HLV-8880-2023; Schaub, Torsten/O-5873-2019; Kaminski,
   Roland/HMD-8407-2023
OI Romero, Javier/0000-0001-5546-9939; Schaub, Torsten/0000-0002-7456-041X;
   Kaminski, Roland/0000-0002-1361-6045; Wanko, Philipp/0000-0003-4986-4881
FU DFG [SCHA 550/11, 15]
FX This work was partially funded by DFG grants SCHA 550/11 and 15. We are
   grateful to the anonymous reviewers and in particular to Miroslaw
   Truszczynski for his relentless efforts to improve the presentation of
   our paper - thank you so much!
CR Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   [Anonymous], 2015, Potassco User Guide
   [Anonymous], 2012, PRINCIPLES KNOWLEDGE
   Banbara M, 2017, THEOR PRACT LOG PROG, V17, P408, DOI 10.1017/S1471068417000138
   Baral C, 2000, SPRINGER INT SER ENG, V597, P257
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Barrett C, 2009, FRONT ARTIF INTEL AP, V185, P825, DOI 10.3233/978-1-58603-929-5-825
   Bartholomew M, 2014, LECT NOTES ARTIF INT, V8761, P529, DOI 10.1007/978-3-319-11558-0_37
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Bomanson J, 2014, LECT NOTES ARTIF INT, V8761, P166, DOI 10.1007/978-3-319-11558-0_12
   Brewka Gerhard, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P158, DOI 10.1007/978-3-319-23264-5_15
   Cabalar P., 2016, P 25 INT JOINT C ART, P1015
   Cabalar P, 2020, FRONT ARTIF INTEL AP, V325, P664, DOI 10.3233/FAIA200152
   Cabalar P, 2020, THEOR PRACT LOG PROG, V20, P834, DOI 10.1017/S1471068420000228
   Cabalar P, 2019, LECT NOTES ARTIF INT, V11481, P256, DOI 10.1007/978-3-030-20528-7_19
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Calimeri F, 2017, INTELL ARTIF, V11, P5, DOI 10.3233/IA-170104
   CFFI 2021, CFFI DOC
   Cotton S, 2006, LECT NOTES COMPUT SC, V4121, P170
   Cuteri B, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1688
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Delgrande JP, 2003, THEOR PRACT LOG PROG, V3, P129, DOI 10.1017/S1471068402001539
   Dimopoulos Y, 2019, THEOR PRACT LOG PROG, V19, P477, DOI 10.1017/S1471068418000583
   Dodaro C, 2020, THEOR PRACT LOG PROG, V20, P225, DOI 10.1017/S1471068418000558
   Dodaro C, 2016, THEOR PRACT LOG PROG, V16, P653, DOI 10.1017/S1471068416000284
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Eiter T, 2006, THEOR PRACT LOG PROG, V6, P23, DOI 10.1017/S1471068405002577
   Eiter T, 2003, THEOR PRACT LOG PROG, V3, P463, DOI 10.1017/S1471068403001753
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Eiter T, 2018, KUNSTL INTELL, V32, P187, DOI 10.1007/s13218-018-0535-y
   Eiter T, 2013, THEOR PRACT LOG PROG, V13, P303, DOI 10.1017/S1471068411000548
   Frioux C, 2019, THEOR PRACT LOG PROG, V19, P83, DOI 10.1017/S1471068418000455
   Fuscà D, 2016, PROCEEDINGS OF THE 18TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING (PPDP 2016), P38, DOI 10.1145/2967973.2968594
   Gebser M, 2008, LECT NOTES COMPUT SC, V5366, P190, DOI 10.1007/978-3-540-89982-2_23
   Gebser M., 2012, SYNTHESIS LECT ARTIF, DOI [10.2200/S00457ED1V01Y201211AIM019, DOI 10.2200/S00457ED1V01Y201211AIM019, 10.1007/978-3-031-01561-8]
   Gebser M, 2008, P 23 NAT C ART INT, V1
   Gebser M., 2016, OASIcs, V52, DOI 10.4230
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   Gebser M, 2018, KUNSTL INTELL, V32, P181, DOI 10.1007/s13218-018-0528-x
   Gebser M, 2016, AI MAG, V37, P33, DOI 10.1609/aimag.v37i3.2673
   Gebser M, 2015, THEOR PRACT LOG PROG, V15, P449, DOI 10.1017/S1471068415000150
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P821, DOI 10.1017/S1471068411000329
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gelfond M, 2014, KNOWLEDGE REPRESENTATION, REASONING, AND THE DESIGN OF INTELLIGENT AGENTS: THE ANSWER-SET PROGRAMMING APPROACH, P1, DOI 10.1017/CBO9781139342124
   GELFOND M, 1990, LOGIC PROGRAMM, P579
   Gelfond M, 1998, LECT NOTES ARTIF INT, V1471, P164, DOI 10.1007/BFb0054795
   Gelfond M, 2019, ARTIF INTELL, V275, P28, DOI 10.1016/j.artint.2019.04.004
   Heyting A, 1930, SITZBER PREUSS AKAD, P42
   Janhunen Tomi, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P111, DOI 10.1007/978-3-642-20832-4_8
   Janhunen T, 2016, OPENACCESS SERIES IN, V52
   Janhunen T., 2011, Proceedings of Grounding and Transformations for Theories with Variables, V11, P1
   Janhunen T, 2017, THEOR PRACT LOG PROG, V17, P872, DOI 10.1017/S1471068417000242
   Kaminski R, 2017, LECT NOTES COMPUT SC, V10370, P167, DOI 10.1007/978-3-319-61033-7_6
   Kaufmann B, 2016, AI MAG, V37, P25, DOI 10.1609/aimag.v37i3.2672
   King A, 2016, OPENACCESS SERIES IN, V52
   Leite J, 2014, P 14 EUR C LOG ART I
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lifschitz V., 2019, Answer Set Programming, DOI DOI 10.1007/978-3-030-24658-7
   Marques-Silva J, 2009, FRONT ARTIF INTEL AP, V185, P131, DOI 10.3233/978-1-58603-929-5-131
   McCarthy, 1998, ELABORATION TOLERANC
   McIlraith S, 2012, P 13 INT C PRINC KNO
   Mellarkod VS, 2008, ANN MATH ARTIF INTEL, V53, P251, DOI 10.1007/s10472-009-9116-y
   Niemela I, 1997, LECT NOTES ARTIF INT, V1265, P420
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Nogueira M., 2001, Practical Aspects of Declarative Languages. Third International Symposium, PADL 2001. Proceedings (Lecture Notes in Computer Science Vol.1990), P169
   Oikarinen E, 2006, FRONT ARTIF INTEL AP, V141, P412
   Pearce D, 1997, LECT NOTES ARTIF INT, V1216, P57, DOI 10.1007/BFb0023801
   Potassco Team, 2021, SOLV TOW HAN PROBL C
   Potassco Team, 2021, CLIN APPL PROGR INT
   Potassco Team, 2021, GUESS CHECK PROGR PY
   Potassco Team, 2021, CLING
   Potassco Team, 2021, DIFF CONSTR PROP CLI
   Potassco Team, 2021, METAENCODINGS
   Potassco Team, 2021, LPC
   Potassco Team, ANSWER SET SOLVING P
   Redl C, 2016, THEOR PRACT LOG PROG, V16, P866, DOI 10.1017/S1471068416000211
   Ricca F., 2012, P 13 INT C PRINC KNO, P541
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Son TC, 2006, ACM T COMPUT LOG, V7, P613, DOI 10.1145/1183278.1183279
   Susman B, 2016, OPENACCESS SERIES IN, V52
   Syrjanen T, 2001, LPARSE 1 0 USERS MAN
   Thielscher, P 17 INT C PRINC KNO, P193
   Toletti A, THEOR PRACT LOG PROG, V21, P317
   Truszczynski M., 2015, P 13 INT C LOG PROGR
   Wanko P, 2016, OPENACCESS SERIES IN, V52
   Wikipedia contributors, 2021, MET WIK FREE ENC
   Woltran S, 2019, P 15 INT C LOG PROGR
NR 90
TC 12
Z9 12
U1 1
U2 3
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2023
VL 23
IS 1
BP 299
EP 361
AR PII S1471068421000508
DI 10.1017/S1471068421000508
EA DEC 2021
PG 63
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA JO5Y4
UT WOS:000729685200001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Weitkämper, FQ
AF Weitkaemper, Felix Q.
TI An Asymptotic Analysis of Probabilistic Logic Programming, with
   Implications for Expressing Projective Families of Distributions
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE probabilistic logic programming; asymptotic quantifier elimination;
   determinate logic programs; projective families of distributions; finite
   model theory; distribution semantics
ID COMPLEXITY
AB Probabilistic logic programming is a major part of statistical relational artificial intelligence, where approaches from logic and probability are brought together to reason about and learn from relational domains in a setting of uncertainty. However, the behaviour of statistical relational representations across variable domain sizes is complex, and scaling inference and learning to large domains remains a significant challenge. In recent years, connections have emerged between domain size dependence, lifted inference and learning from sampled subpopulations. The asymptotic behaviour of statistical relational representations has come under scrutiny, and projectivity was investigated as the strongest form of domain size dependence, in which query marginals are completely independent of the domain size. In this contribution we show that every probabilistic logic program under the distribution semantics is asymptotically equivalent to an acyclic probabilistic logic program consisting only of determinate clauses over probabilistic facts. We conclude that every probabilistic logic program inducing a projective family of distributions is in fact everywhere equivalent to a program from this fragment, and we investigate the consequences for the projective families of distributions expressible by probabilistic logic programs.
C1 [Weitkaemper, Felix Q.] LMU Munchen, Inst Informat, Oettingenstr 67, D-80538 Munich, Germany.
C3 University of Munich
RP Weitkämper, FQ (corresponding author), LMU Munchen, Inst Informat, Oettingenstr 67, D-80538 Munich, Germany.
EM felix.weitkaemper@lmu.de
RI Weitkämper, Felix/KLD-3159-2024
OI Weitkämper, Felix/0000-0002-3895-8279
CR [Anonymous], 1995, Perspectives in Mathematical Logic
   [Anonymous], 1952, The Continuum of Inductive Methods
   BLASS A, 1985, INFORM CONTROL, V67, P70, DOI 10.1016/S0019-9958(85)80027-9
   Bry F, 2020, THEOR PRACT LOG PROG, V20, P99, DOI 10.1017/S1471068419000024
   Carnap R., 1950, Logical Foundations of probability, VVolume 2
   Cozman FG, 2019, INT J APPROX REASON, V110, P107, DOI 10.1016/j.ijar.2019.04.003
   De Raedt L, 2015, MACH LEARN, V100, P5, DOI 10.1007/s10994-015-5494-z
   Domingos P. M, 2007, DAGSTUHL SEMINAR P, V07161
   Fitting M, 2002, THEOR COMPUT SCI, V278, P25, DOI 10.1016/S0304-3975(00)00330-3
   GRANDJEAN E, 1983, INFORM CONTROL, V57, P180, DOI 10.1016/S0019-9958(83)80043-6
   Jaeger M., 2018, 8 INT WORKSHOP STAT
   Jaeger M., 2020, ARXIV
   Jaeger M, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4283
   Keisler H. J., 1985, MODEL THEORETIC LOGI, P509
   Keisler HJ, 2009, J SYMBOLIC LOGIC, V74, P1121, DOI 10.2178/jsl/1254748683
   Koponen V, 2020, THEOR COMPUT SCI, V848, P1, DOI 10.1016/j.tcs.2020.08.006
   Paris J., 2015, PERSPECTIVES LOGIC
   Poole David, 2014, Scalable Uncertainty Management. 8th International Conference, SUM 2014. Proceedings: LNCS 8720, P292, DOI 10.1007/978-3-319-11508-5_25
   Riguzzi Fabrizio, 2018, ACM Books, P185, DOI DOI 10.1145/3191315.3191319
NR 19
TC 5
Z9 5
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2021
VL 21
IS 6
SI SI
BP 802
EP 817
DI 10.1017/S1471068421000314
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 4P3LH
UT WOS:000855297800007
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Shakerin, F
   Gupta, G
AF Shakerin, Farhad
   Gupta, Gopal
TI White-box Induction From SVM Models: Explainable AI with Logic
   Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE Explainable AI; Data Mining; Inductive Logic Programming; Machine
   Learning
ID SUPPORT VECTOR MACHINES; RULE EXTRACTION
AB We focus on the problem of inducing logic programs that explain models learned by the support vector machine (SVM) algorithm. The top-down sequential covering inductive logic programming (ILP) algorithms (e.g., FOIL) apply hill-climbing search using heuristics from information theory. A major issue with this class of algorithms is getting stuck in local optima. In our new approach, however, the data-dependent hill-climbing search is replaced with a model-dependent search where a globally optimal SVM model is trained first, then the algorithm looks into support vectors as the most influential data points in the model, and induces a clause that would cover the support vector and points that are most similar to that support vector. Instead of defining a fixed hypothesis search space, our algorithm makes use of SHAP, an example-specific interpreter in explainable AI, to determine a relevant set of features. This approach yields an algorithm that captures the SVM model's underlying logic and outperforms other ILP algorithms in terms of the number of induced clauses and classification evaluation metrics.
C1 [Shakerin, Farhad; Gupta, Gopal] Univ Texas Dallas, Richardson, TX 75083 USA.
C3 University of Texas System; University of Texas Dallas
RP Shakerin, F (corresponding author), Univ Texas Dallas, Richardson, TX 75083 USA.
EM Farhad.Shakerin@utdallas.edu; Gopal.Gupta@utdallas.edu
OI Shakerin, Farhad/0000-0003-2460-3132
FU NSF [IIS 1718945, IIS 1910131, IIP 1916206]; DARPA grant
   [HR001119S0057-ARCOS-FP-036]
FX Authors acknowledge support from NSF grants IIS 1718945, IIS 1910131,
   IIP 1916206 and DARPA grant HR001119S0057-ARCOS-FP-036.
CR Aggarwal C.C., 2014, FREQUENT PATTERN MIN, DOI DOI 10.1007/978-3-319-07821-2
   Agrawal R., 1994, P INT VLDB C VLDB 94, P487, DOI DOI 10.5555/645920.672836
   [Anonymous], 2002, P EUR S ART NEUR NET
   [Anonymous], 2005, P AAAI
   [Anonymous], 1995, ADV NEURAL INFORM PR
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Cohen W.W., 1995, P 12 INT C MACH LEAR, P115, DOI [DOI 10.1016/B978-1-55860-377-6.50023-2, 10.1016/B978-1-55860-377-6.50023-2]
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Diederich J, 2008, STUD COMPUT INTELL, V80, P3
   Dua D., 2017, UCI MACHINE LEARNING
   Fournier-Viger Philippe, 2014, Foundations of Intelligent Systems. 21st International Symposium, ISMIS 2014. Proceedings: LNCS 8502, P83, DOI 10.1007/978-3-319-08326-1_9
   Fournier-Viger P, 2019, STUD BIG DATA, V51, P1, DOI 10.1007/978-3-030-04921-8_1
   Fung G., 2005, Proc. of the 11th ACM SIGKDD Int. Conf. on Knowledge Discovery and Data Mining (KDD-05), P32, DOI [DOI 10.1145/1081870.1081878, 10.1145/1081870.1081878]
   Gan WS, 2018, WIRES DATA MIN KNOWL, V8, DOI 10.1002/widm.1242
   Gelfond M, 2014, KNOWLEDGE REPRESENTATION, REASONING, AND THE DESIGN OF INTELLIGENT AGENTS: THE ANSWER-SET PROGRAMMING APPROACH, P1, DOI 10.1017/CBO9781139342124
   Gunning D., 2016, Broad agency announcement explainable artificial intelligence (xai)
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Huysmans J, 2008, IEEE T SYST MAN CY B, V38, P299, DOI 10.1109/TSMCB.2007.912079
   Huysmans J, 2006, LECT NOTES COMPUT SC, V4081, P270
   Landwehr Niels, 2006, P NAT C ART INT, P389
   Lundberg SM, 2017, ADV NEUR IN, V30
   Lundberg Scott M, 2018, ARXIV180203888
   Martens D, 2008, STUD COMPUT INTELL, V80, P33
   Molnar Christoph, 2022, Interpretable Machine Learning: A Guide for Making Black Box Models Explainable
   Muggleton S., 1991, New Generation Computing, V8, P295, DOI 10.1007/BF03037089
   Muggleton S., 2005, DISCOVERY SCI
   Muggleton S, 2012, MACH LEARN, V86, P3, DOI 10.1007/s10994-011-5259-2
   Plotkin G. D., 1971, Machine Intelligence Volume 6, P101
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   QUINLAN JR, 1990, MACH LEARN, V5, P239, DOI 10.1007/BF00117105
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Riguzzi F., 2016, ALEPH in SWI-Prolog
   Sakama C., 2005, ACM Transactions on Computational Logic, V6, P203, DOI 10.1145/1055686.1055687
   Shakerin F, 2020, LECT NOTES COMPUT SC, V12007, P168, DOI 10.1007/978-3-030-39197-3_11
   Shakerin F, 2017, THEOR PRACT LOG PROG, V17, P1010, DOI 10.1017/S1471068417000333
   Srinivasan A., 2001, The aleph manual
   Tseng VS, 2013, IEEE T KNOWL DATA EN, V25, P1772, DOI 10.1109/TKDE.2012.59
   Wielemaker Jan, 2020, SWI PROLOG SYSTEM
   Zeng Q, 2014, PROC VLDB ENDOW, V8, P197, DOI 10.14778/2735508.2735510
NR 40
TC 3
Z9 3
U1 0
U2 13
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2020
VL 20
IS 5
SI SI
BP 656
EP 670
AR PII S1471068420000356
DI 10.1017/S1471068420000356
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR5RA
UT WOS:000571619500006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Costantini, S
AF Costantini, Stefania
TI About Epistemic Negation and World Views in Epistemic Logic Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Answer Set Programming; Epistemic Logic Programs; Epistemic Negation
ID ANSWER; SEMANTICS; RESOURCE
AB In this paper we consider Epistemic Logic Programs, which extend Answer Set Programming (ASP) with "epistemic operators" and "epistemic negation", and a recent approach to the semantics of such programs in terms of World Views. We propose some observations on the existence and number of world views. We show how to exploit an extended ASP semantics in order to: (i) provide a characterization of world views, different from existing ones; (ii) query world views and query the whole set of world views.
C1 [Costantini, Stefania] Univ Aquila, DISIM, Laquila, Italy.
C3 University of L'Aquila
RP Costantini, S (corresponding author), Univ Aquila, DISIM, Laquila, Italy.
EM stefania.costantini@univaq.it
OI COSTANTINI, Stefania/0000-0002-5686-6124
CR Bichler M, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1714
   Bordini RH, 2006, INFORM-J COMPUT INFO, V30, P33
   Bowen KA, 1983, LOGIC PROGRAMMING
   Brass S, 2001, THEOR PRACT LOG PROG, V1, P497, DOI 10.1017/S147106840100103X
   Brewka G, 2016, AI MAG, V37, P5, DOI 10.1609/aimag.v37i3.2669
   Cabalar P, 2019, LECT NOTES ARTIF INT, V11481, P134, DOI 10.1007/978-3-030-20528-7_11
   CHEN WD, 1993, J LOGIC PROGRAM, V17, P279, DOI 10.1016/0743-1066(93)90034-E
   Cholewinski P, 1999, J LOGIC PROGRAM, V38, P219, DOI 10.1016/S0743-1066(98)10020-1
   Costantini S, 2006, THEOR PRACT LOG PROG, V6, P169, DOI 10.1017/S1471068405002589
   Costantini S, 2005, THEOR PRACT LOG PROG, V5, P747, DOI 10.1017/S1471068404002339
   Costantini S, 2016, THEOR PRACT LOG PROG, V16, P619, DOI 10.1017/S1471068416000478
   Costantini S, 2015, FUND INFORM, V140, P279, DOI 10.3233/FI-2015-1255
   Costantini S, 2011, LECT NOTES COMPUT SC, V6702, P37
   del Cerro LF, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2964
   Dix J., 1995, Fundamenta Informaticae, V22, P227
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   GELFOND M, 1991, LOGIC PROGRAMMING AND NON-MONOTONIC REASONING, P245
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M, 2011, LECT NOTES ARTIF INT, V6645, P260
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   KAHL P. T, 2018, TECHN COMM 34 INT C, V64
   Lloyd J. W., 2012, Foundations of Logic Programming
   Shen YD, 2016, ARTIF INTELL, V237, P115, DOI 10.1016/j.artint.2016.04.004
   Su EI, 2019, LECT NOTES ARTIF INT, V11468, P608, DOI 10.1007/978-3-030-19570-0_40
   Su EI, 2017, LECT NOTES ARTIF INT, V10377, P85, DOI 10.1007/978-3-319-61660-5_10
   Swift Terrance, 2012, THEOR PRACT LOG PROG, V12, P1
   Son TC, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1269
   TRUSZCZYNSKI M, LOGIC PROGRAMMING KN
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Wiktor Marek V., 1993, LOGIC PROGRAMMING NO, P115
NR 30
TC 6
Z9 6
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 790
EP 807
DI 10.1017/S147106841900019X
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alviano, M
   Dodaro, C
   Järvisalo, M
   Maratea, M
   Previti, A
AF Alviano, Mario
   Dodaro, Carmine
   Jarvisalo, Matti
   Maratea, Marco
   Previti, Alessandro
TI Cautious reasoning in ASP via minimal models and unsatisfiable cores
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
DE Answer Set Programming; Cautious Reasoning; Query Answering
ID ANSWER SETS; MAGIC SETS; SYSTEM
AB Answer Set Programming (ASP) is a logic-based knowledge representation framework, supporting-among other reasoning modes-the central task of query answering. In the propositional case, query answering amounts to computing cautious consequences of the input program among the atoms in a given set of candidates, where a cautious consequence is an atom belonging to all stable models. Currently, the most efficient algorithms either iteratively verify the existence of a stable model of the input program extended with the complement of one candidate, where the candidate is heuristically selected, or introduce a clause enforcing the falsity of at least one candidate, so that the solver is free to choose which candidate to falsify at any time during the computation of a stable model. This paper introduces new algorithms for the computation of cautious consequences, with the aim of driving the solver to search for stable models discarding more candidates. Specifically, one of such algorithms enforces minimality on the set of true candidates, where different notions of minimality can be used, and another takes advantage of unsatisfiable cores computation. The algorithms are implemented in WASP, and experiments on benchmarks from the latest ASP competitions show that the new algorithms perform better than the state of the art.
C1 [Alviano, Mario] Univ Calabria, DEMACS, Commenda Di Rende, Italy.
   [Dodaro, Carmine; Maratea, Marco] Univ Genoa, DIBRIS, Genoa, Italy.
   [Jarvisalo, Matti; Previti, Alessandro] Univ Helsinki, Dept Comp Sci, HIIT, Helsinki, Finland.
C3 University of Calabria; University of Genoa; Aalto University;
   University of Helsinki
RP Alviano, M (corresponding author), Univ Calabria, DEMACS, Commenda Di Rende, Italy.
EM alviano@mat.unical.it; dodaro@dibris.unige.it;
   matti.jarvisalo@helsinki.fi; marco@dibris.unige.it;
   alessandro.previti@helsinki.fi
RI Maratea, Marco/AAR-5779-2020; Dodaro, Carmine/AAE-5732-2020; Alviano,
   Mario/H-1355-2012
OI Dodaro, Carmine/0000-0002-5617-5286; 
FU POR CALABRIA FESR project "DLV Large Scale" [CUP J28C17000220006]; EU
   H2020 PON I&C project "S2BDW" [CUP B28I17000250008]; Gruppo Nazionale
   per il Calcolo Scientifico (GNCS-INdAM); GESTEC-Service Oriented
   Technologies for Integrated ICT platforms (Italian Ministry for
   Education Research and University) [DM 64565]; Academy of Finland
   [276412, 312662]
FX Mario Alviano was partially supported by the POR CALABRIA FESR 2014-2020
   project "DLV Large Scale" (CUP J28C17000220006), by the EU H2020 PON I&C
   2014-2020 project "S2BDW" (CUP B28I17000250008), and by Gruppo Nazionale
   per il Calcolo Scientifico (GNCS-INdAM). Carmine Dodaro and Marco
   Maratea were partially supported by project GESTEC-Service Oriented
   Technologies for Integrated ICT platforms (Italian Ministry for
   Education Research and University, DM 64565). Matti Jarvisalo and
   Alessandro Previti were supported by Academy of Finland (grants 276412
   and 312662).
CR Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   Alviano M., 2018, OpenAccess Series in Informatics (OASIcs), V2, P1, DOI [10.4230/OASIcs.ICLP.2017.2, DOI 10.4230/OASICS.ICLP.2017.2]
   Alviano M., 2015, J LOGIC COMPUTATION
   Alviano M, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4781
   Alviano M, 2017, THEOR PRACT LOG PROG, V17, P708, DOI 10.1017/S1471068417000278
   Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   Alviano M, 2016, THEOR PRACT LOG PROG, V16, P533, DOI 10.1017/S147106841600020X
   Alviano M, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2677
   Alviano M, 2014, THEOR PRACT LOG PROG, V14, P755, DOI 10.1017/S1471068414000325
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P54, DOI 10.1007/978-3-642-40564-8_6
   Alviano M, 2011, LECT NOTES COMPUT SC, V6702, P282
   Alviano M, 2012, ARTIF INTELL, V187, P156, DOI 10.1016/j.artint.2012.04.008
   Alviano M, 2011, AI COMMUN, V24, P125, DOI 10.3233/AIC-2011-0492
   Alviano M, 2010, THEOR PRACT LOG PROG, V10, P497, DOI 10.1017/S1471068410000244
   Amendola G, 2017, AAAI CONF ARTIF INTE, P1034
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   Arenas M, 2003, THEOR PRACT LOG PROG, V3, P393, DOI 10.1017/S1471068403001832
   Baral Chitta, 2010, Knowledge Representation, Reasoning and Declarative Problem Solving
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Brewka G, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P268
   Brewka Gerhard., 2007, Proceedings of the 22nd national conference on Artificial intelligence - Volume 1, V1, P385
   Bry F, 2000, J AUTOM REASONING, V25, P35, DOI 10.1023/A:1006291616338
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   Calimeri F, 2014, THEOR PRACT LOG PROG, V14, P117, DOI 10.1017/S1471068412000105
   Di Rosa E, 2010, CONSTRAINTS, V15, P485, DOI 10.1007/s10601-010-9095-y
   Dodaro C., 2011, CILC, P99
   Dodaro C, 2016, THEOR PRACT LOG PROG, V16, P653, DOI 10.1017/S1471068416000284
   Eiter T, 2005, LECT NOTES ARTIF INT, V3662, P13, DOI 10.1007/11546207_2
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Eiter T, 2008, ARTIF INTELL, V172, P1495, DOI 10.1016/j.artint.2008.04.002
   emi R, 2015, CEUR WORKSHOP P
   Gebser M., 2013, AAAI C ART INT
   Gebser M, 2017, J ARTIF INTELL RES, V60, P41, DOI 10.1613/jair.5373
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gelfond M., 1991, NEW GENERAT COMPUT, V9, P365, DOI DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Giunchiglia E, 2008, ANN MATH ARTIF INTEL, V53, P169, DOI 10.1007/s10472-009-9113-1
   Hasegawa R, 2000, LECT NOTES ARTIF INT, V1831, P184
   Janhunen T, 2016, AI MAG, V37, P13, DOI 10.1609/aimag.v37i3.2671
   Janota M, 2016, ARTIF INTELL, V233, P73, DOI 10.1016/j.artint.2016.01.002
   Janota M, 2015, AI COMMUN, V28, P161, DOI 10.3233/AIC-140640
   Kaufmann B, 2016, AI MAG, V37, P25, DOI 10.1609/aimag.v37i3.2672
   KOSHIMURA M., 2009, CEUR WORKSHOP P, V556
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lifschitz V, 2016, AI MAG, V37, P7, DOI 10.1609/aimag.v37i3.2670
   Manna M, 2015, THEOR PRACT LOG PROG, V15, P696, DOI 10.1017/S1471068415000320
   Manna M, 2013, THEOR PRACT LOG PROG, V13, P227, DOI 10.1017/S1471068411000640
   Marques-Silva JP, 1999, IEEE T COMPUT, V48, P506, DOI 10.1109/12.769433
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Niemela I, 1996, LECT NOTES ARTIF INT, V1071, P278
   PREVITI A., 2018, ACM SIGAPP S APPL CO
   Zhu CSC, 2011, INT HIGH LEVEL DESIG, P84, DOI 10.1109/HLDVT.2011.6113981
NR 53
TC 10
Z9 10
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 319
EP 336
DI 10.1017/S1471068418000145
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400003
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Gebser, M
   Obermeier, P
   Schaub, T
   Ratsch-Heitmann, M
   Runge, M
AF Gebser, Martin
   Obermeier, Philipp
   Schaub, Torsten
   Ratsch-Heitmann, Michel
   Runge, Mario
TI Routing Driverless Transport Vehicles in Car Assembly with Answer Set
   Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
DE automated guided vehicle routing; car assembly operations; answer set
   programming
AB Automated storage and retrieval systems are principal components of modern production and warehouse facilities. In particular, automated guided vehicles nowadays substitute human-operated pallet trucks in transporting production materials between storage locations and assembly stations. While low-level control systems take care of navigating such driverless vehicles along programmed routes and avoid collisions even under unforeseen circumstances, in the common case of multiple vehicles sharing the same operation area, the problem remains how to set up routes such that a collection of transport tasks is accomplished most effectively. We address this prevalent problem in the context of car assembly at Mercedes-Benz Ludwigsfelde GmbH, a large-scale producer of commercial vehicles, where routes for automated guided vehicles used in the production process have traditionally been hand-coded by human engineers. Such adhoc methods may suffice as long as a running production process remains in place, while any change in the factory layout or production targets necessitates tedious manual reconfiguration, not to mention the missing portability between different production plants. Unlike this, we propose a declarative approach based on Answer Set Programming to optimize the routes taken by automated guided vehicles for accomplishing transport tasks. The advantages include a transparent and executable problem formalization, provable optimality of routes relative to objective criteria, as well as elaboration tolerance towards particular factory layouts and production targets. Moreover, we demonstrate that our approach is efficient enough to deal with the transport tasks evolving in realistic production processes at the car factory of Mercedes-Benz Ludwigsfelde GmbH.
C1 [Gebser, Martin; Obermeier, Philipp; Schaub, Torsten] Univ Potsdam, Potsdam, Germany.
   [Ratsch-Heitmann, Michel; Runge, Mario] Mercedes Benz Ludwigsfelde GmbH, Ludwigsfelde, Germany.
C3 University of Potsdam
RP Gebser, M (corresponding author), Univ Potsdam, Potsdam, Germany.
EM gebser@cs.uni-potsdam.de
RI Gebser, Martin/B-7169-2018; Schaub, Torsten/O-5873-2019
OI Schaub, Torsten/0000-0002-7456-041X
FU DFG [SCHA 550/9]
FX This work was partially funded by DFG grant SCHA 550/9. We are grateful
   to the anonymous reviewers for their helpful comments.
CR [Anonymous], 2015, Potassco User Guide
   Banbara M, 2017, THEOR PRACT LOG PROG, V17, P408, DOI 10.1017/S1471068417000138
   Calimeri F., 2012, ASP-CORE-2 Input Language Format
   Erdem E., 2013, PROC AAAI C ARTIFICI, P290, DOI DOI 10.1609/AAAI.V27I1.8592
   Fisher M, 2008, FOUND ARTIF INTELL, P513, DOI 10.1016/S1574-6526(07)03012-X
   Fox M, 2003, J ARTIF INTELL RES, V20, P61, DOI 10.1613/jair.1129
   Gebser M., J LOGIC COMPUTATION
   Gebser Martin, 2012, SYNTHESIS LECT ARTIF
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Neubauer K, 2017, DES AUT TEST EUROPE, P306, DOI 10.23919/DATE.2017.7927005
   Son TC, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P92
   Nguyen V, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1216
   Zhou N.-F., 2015, THEOR PRACT LOG PROG, V15, P4
NR 13
TC 20
Z9 20
U1 2
U2 30
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 520
EP 534
DI 10.1017/S1471068418000182
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400015
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Devriendt, J
   Bogaerts, B
   Bruynooghe, M
   Denecker, M
AF Devriendt, Jo
   Bogaerts, Bart
   Bruynooghe, Maurice
   Denecker, Marc
TI On local domain symmetry for model expansion
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
ID BREAKING; SATISFIABILITY
AB Symmetry in combinatorial problems is an extensively studied topic. We continue this research in the context of model expansion problems, with the aim of automating the workflow of detecting and breaking symmetry. We focus on local domain symmetry, which is induced by permutations of domain elements, and which can be detected on a first-order level. As such, our work is a continuation of the symmetry exploitation techniques of model generation systems, while it differs from more recent symmetry breaking techniques in answer set programming which detect symmetry on ground programs. Our main contributions are sufficient conditions for symmetry of model expansion problems, the identification of local domain interchangeability, which can often be broken completely, and efficient symmetry detection algorithms for both local domain interchangeability as well as local domain symmetry in general. Our approach is implemented in the model expansion system IDP, and we present experimental results showcasing the strong and weak points of our approach compared to SBASS, a symmetry breaking technique for answer set programming.
C1 [Devriendt, Jo; Bogaerts, Bart; Bruynooghe, Maurice; Denecker, Marc] KU Leuven Univ Leuven, Celestijnenlaan 200A, Leuven, Belgium.
   [Bogaerts, Bart] Aalto Univ, HIIT, FI-00076 Aalto, Finland.
C3 KU Leuven; Aalto University
RP Devriendt, J (corresponding author), KU Leuven Univ Leuven, Celestijnenlaan 200A, Leuven, Belgium.
EM jo.devriendt@cs.kuleuven.be; bart.bogaerts@cs.kuleuven.be;
   maurice.bruynooghe@cs.kuleuven.be; marc.denecker@cs.kuleuven.be
RI Bruynooghe, Maurice/A-6196-2014; Denecker, Marc/O-1056-2013
OI Bruynooghe, Maurice/0000-0002-6881-1462; Denecker,
   Marc/0000-0002-0422-7339; Bogaerts, Bart/0000-0003-3460-4251
CR Aloul FA, 2006, IEEE T COMPUT, V55, P549, DOI 10.1109/TC.2006.75
   Aloul FA, 2002, DES AUT CON, P731, DOI 10.1109/DAC.2002.1012719
   [Anonymous], 2001, MATH INTRO LOGIC
   Audemard G., 2002, Automated Deduction - CADE-18. 18th International Conference on Automated Deduction. Proceedings (Lecture Notes in Artificial Intelligence Vol.2392), P226
   Bogaerts B., 2016, CORR
   CLAESSEN K, 2003, WORKSH MOD COMP MODE
   Denecker M, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1342991.1342998
   Devriendt J., 2016, LOCAL DOMAIN SYMMETR
   DEVRIENDT J, 2014, P 4 INT WORKSH CROSS
   Drescher C, 2011, AI COMMUN, V24, P177, DOI 10.3233/AIC-2011-0495
   Gebser M., 2014, TECHN COMM 30 INT C, V14
   Gent IP, 2006, FOUND ARTIF INTELL, P329
   Katebi H, 2010, LECT NOTES COMPUT SC, V6175, P113, DOI 10.1007/978-3-642-14186-7_11
   Sakallah KA, 2009, FRONT ARTIF INTEL AP, V185, P289, DOI 10.3233/978-1-58603-929-5-289
   Shlyakhter I, 2007, DISCRETE APPL MATH, V155, P1539, DOI 10.1016/j.dam.2005.10.018
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   WALSH T., 2012, CORR
   Zhang JA, 1995, INT JOINT CONF ARTIF, P298
NR 18
TC 6
Z9 7
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 636
EP 652
DI 10.1017/S1471068416000508
PN 5-6
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800009
OA Bronze, Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Harrison, A
   Lierler, Y
AF Harrison, Amelia
   Lierler, Yuliya
TI First-order modular logic programs and their conservative extensions
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
AB Modular logic programs provide a way of viewing logic programs as consisting of many independent, meaningful modules. This paper introduces first-order modular logic programs, which can capture the meaning of many answer set programs. We also introduce conservative extensions of such programs. This concept helps to identify strong relationships between modular programs as well as between traditional programs. We show how the notion of a conservative extension can be used to justify the common projection rewriting.
C1 [Harrison, Amelia] Univ Texas Austin, Austin, TX 78712 USA.
   [Lierler, Yuliya] Univ Nebraska Omaha, Omaha, NE USA.
C3 University of Texas System; University of Texas Austin; University of
   Nebraska System; University of Nebraska Omaha
RP Harrison, A (corresponding author), Univ Texas Austin, Austin, TX 78712 USA.
EM ameliaj@cs.utexas.edu; ylierler@unomaha.edu
FU Div Of Information & Intelligent Systems; Direct For Computer & Info
   Scie & Enginr [1422455] Funding Source: National Science Foundation
CR Buddenhagen Matthew, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P186, DOI 10.1007/978-3-319-23264-5_17
   Denecker M., 2012, LIPICS, V17, P277
   Faber W., 1999, USING DATABASE OPTIM, P135
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Ferraris P, 2005, THEOR PRACT LOG PROG, V5, P45, DOI 10.1017/S1471068403001923
   Ferraris P, 2011, ARTIF INTELL, V175, P236, DOI 10.1016/j.artint.2010.04.011
   Ferraris P, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P797
   Lierler Truszczy, 2013, P 27 AAAI C ART INT
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lifschitz V, 2007, LECT NOTES COMPUT SC, V4483, P188, DOI 10.1007/978-3-540-72200-7_17
   Oikarinen E, 2008, THEOR PRACT LOG PROG, V8, P717, DOI 10.1017/S147106840800358X
   Wang YS, 2014, J ARTIF INTELL RES, V50, P31, DOI 10.1613/jair.4297
NR 13
TC 4
Z9 4
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 755
EP 770
DI 10.1017/S1471068416000430
PN 5-6
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800016
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Redl, C
AF Redl, Christoph
TI <i>The</i> DLVHEX <i>system for knowledge representation</i>: <i>recent
   advances</i> (<i>system description</i>)
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
DE Answer Set Programming; Nonmonotonic Reasoning; Knowledge representation
ID ANSWER; SEMANTICS
AB The DLVHEX system implements the hex-semantics, which integrates answer set programming (ASP) with arbitrary external sources. Since its first release ten years ago, significant advancements were achieved. Most importantly, the exploitation of properties of external sources led to efficiency improvements and flexibility enhancements of the language, and technical improvements on the system side increased user's convenience. In this paper, we present the current status of the system and point out the most important recent enhancements over early versions. While existing literature focuses on theoretical aspects and specific components, a bird's eye view of the overall system is missing. In order to promote the system for real-world applications, we further present applications which were already successfully realized on top of DLVHEX.
C1 [Redl, Christoph] Vienna Univ Technol, Inst Informat Syst, Favoritenstr 9-11, A-1040 Vienna, Austria.
C3 Technische Universitat Wien
RP Redl, C (corresponding author), Vienna Univ Technol, Inst Informat Syst, Favoritenstr 9-11, A-1040 Vienna, Austria.
EM redl@kr.tuwien.ac.at
FU Austrian Science Fund (FWF) [P27730] Funding Source: Austrian Science
   Fund (FWF)
CR Bögl M, 2010, LECT NOTES ARTIF INT, V6341, P356, DOI 10.1007/978-3-642-15675-5_31
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Brewka Gerhard., 2007, Proceedings of the 22nd national conference on Artificial intelligence - Volume 1, V1, P385
   Calimeri F., 2013, ASP CORE 2 INPUT LAN
   Eiter T., 2015, RR18431505 INFSYS VI
   Eiter T., 2016, IJCAI 2016 IN PRESS
   Eiter T., 2010, Principles of Knowledge Representation and Reasoning: Proceedings of the Twelfth International Conference, KR 2010, Toronto, Ontario, Canada, May 9-13
   Eiter T., 2006, WORKSH APPL LOG PROG, P33
   Eiter T., 2012, THEORY PRACTICE LOGI
   Eiter T, 2006, LECT NOTES COMPUT SC, V4011, P273
   Eiter T, 2016, ARTIF INTELL, V233, P84, DOI 10.1016/j.artint.2016.01.003
   Eiter T, 2014, J ARTIF INTELL RES, V49, P269, DOI 10.1613/jair.4175
   Eiter T, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P90
   Eiter Thomas., 2004, KR2004, P141
   Erdem E., 2016, AI COMMUNICATIONS
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Ianni G., 2016, IEEE T COMPUTATIONAL
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Ostrowski M., 2012, ABS12102287 CORR
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Zirtiloglu H., 2008, OBI 2008
NR 24
TC 10
Z9 10
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 866
EP 883
DI 10.1017/S1471068416000211
PN 5-6
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800023
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Stulova, N
   Morales, JF
   Hermenegildo, MV
AF Stulova, Nataliia
   Morales, Jose F.
   Hermenegildo, Manuel V.
TI Practical run-time checking via unobtrusive property caching
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
ID LOGIC; SPECIFICATION; LANGUAGE
AB The use of annotations, referred to as assertions or contracts, to describe program properties for which run-time tests are to be generated, has become frequent in dynamic programing languages. However, the frameworks proposed to support such run-time testing generally incur high time and/or space overheads over standard program execution. We present an approach for reducing this overhead that is based on the use of memoization to cache intermediate results of check evaluation, avoiding repeated checking of previously verified properties. Compared to approaches that reduce checking frequency, our proposal has the advantage of being exhaustive (i.e., all tests are checked at all points) while still being much more efficient than standard run-time checking. Compared to the limited previous work on memoization, it performs the task without requiring modifications to data structure representation or checking code. While the approach is general and system-independent, we present it for concreteness in the context of the Ciao run-time checking framework, which allows us to provide an operational semantics with checks and caching. We also report on a prototype implementation and provide some experimental results that support that using a relatively small cache leads to significant decreases in run-time checking overhead.
C1 [Stulova, Nataliia; Morales, Jose F.; Hermenegildo, Manuel V.] IMDEA Software Inst, Madrid, Spain.
   [Hermenegildo, Manuel V.] Tech Univ Madrid, Sch Comp Sci, Madrid, Spain.
C3 IMDEA Software Institute; Universidad Politecnica de Madrid
RP Stulova, N (corresponding author), IMDEA Software Inst, Madrid, Spain.
EM nataliia.stulova@imdea.org; josef.morales@imdea.org;
   manuel.hermenegildo@imdea.org
RI Morales Caballero, Jose Francisco/JXY-5044-2024
OI Morales Caballero, Jose Francisco/0000-0001-9782-8135; Stulova,
   Nataliia/0000-0002-6804-2253
FU EU FP7 [318337]; Spanish MINECO [TIN2012-39391]; Madrid Regional
   Government [S2013/ICE-2731]
FX Research supported in part by projects EU FP7 318337 ENTRA, Spanish
   MINECO TIN2012-39391 StrongSoft, and Madrid Regional Government
   S2013/ICE-2731, N-Greens Software.
CR Boye J., 1997, P 3 INT WORKSH AUT D, P123
   Bueno F., 1997, PROC 3 INT WS AUTOMA, P155
   CARTWRIGHT R, 1991, SIGPLAN NOTICES, V26, P278, DOI 10.1145/113446.113469
   Dart Philip W., 1992, TYPES LOGIC PROGRAMM, P157
   Dietrich S., 1987, THESIS
   Dimoulas C, 2011, ACM T PROGR LANG SYS, V33, DOI 10.1145/2039346.2039348
   Fähndrich M, 2011, LECT NOTES COMPUT SC, V6528, P10
   Findler RB, 2002, ACM SIGPLAN NOTICES, V37, P48, DOI 10.1145/583852.581484
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Hermenegildo MV, 2005, SCI COMPUT PROGRAM, V58, P115, DOI 10.1016/j.scico.2005.02.006
   Hermenegildo MV, 1999, LOGIC PROGRAMM, P54
   Koukoutos E, 2014, LECT NOTES COMPUT SC, V8734, P263, DOI 10.1007/978-3-319-11164-3_22
   Laï C, 2000, LECT NOTES COMPUT SC, V1870, P109
   Lamport L, 1999, ACM T PROGR LANG SYS, V21, P502, DOI 10.1145/319301.319317
   Leavens GT, 2007, FORM ASP COMPUT, V19, P159, DOI 10.1007/s00165-007-0026-7
   Mera E, 2011, LECT NOTES COMPUT SC, V6539, P38, DOI 10.1007/978-3-642-18378-2_6
   Mera E, 2009, LECT NOTES COMPUT SC, V5649, P281, DOI 10.1007/978-3-642-02846-5_25
   Mera Edison, 2013, THEOR PRACT LOG PROG, V13
   MUTHUKUMAR K, 1992, J LOGIC PROGRAM, V13, P315, DOI 10.1016/0743-1066(92)90035-2
   Puebla G, 2000, LECT NOTES COMPUT SC, V1870, P23
   Puebla G, 2000, LECT NOTES COMPUT SC, V1817, P273, DOI 10.1007/10720327_16
   Puebla G., 1997, P ILPS 97 WORKSH TOO
   Stulova N., 2014, 16 INT ACM SIGPLAN S
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   TAMAKI H, 1986, LECT NOTES COMPUT SC, V225, P84
   Tobin-Hochstadt S, 2008, POPL'08: PROCEEDINGS OF THE 35TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P395, DOI 10.1145/1328438.1328486
   WARREN DS, 1992, COMMUN ACM, V35, P93, DOI 10.1145/131295.131299
   Warren R., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P684
   Zhou NF, 2012, THEOR PRACT LOG PROG, V12, P547, DOI 10.1017/S1471068412000178
NR 29
TC 6
Z9 6
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 726
EP 741
DI 10.1017/S1471068415000344
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200022
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Naish, L
   Sondergaard, H
AF Naish, Lee
   Sondergaard, Harald
TI Truth versus information in logic programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE declarative debugging; information order; intended interpretation; logic
   program specification; many-valued logic; modes; program analysis;
   specification semantics
ID ABSTRACT INTERPRETATION; PREDICATE LOGIC; SEMANTICS; LANGUAGE; NEGATION;
   PROLOG
AB The semantics of logic programs was originally described in terms of two-valued logic. Soon, however, it was realised that three-valued logic had some natural advantages, as it provides distinct values not only for truth and falsehood but also for "undefined". The three-valued semantics proposed by Fitting (Fitting, M. 1985. A Kripke-Kleene semantics for logic programs. Journal of Logic Programming 2, 4, 295-312) and Kunen (Kunen, K. 1987. Negation in logic programming. Journal of Logic Programming 4, 4, 289-308) are closely related to what is computed by a logic program, the third truth value being associated with non-termination. A different three-valued semantics, proposed by Naish, shared much with those of Fitting and Kunen but incorporated allowances for programmer intent, the third truth value being associated with underspecification. Naish used an (apparently) novel "arrow" operator to relate the intended meaning of left and right sides of predicate definitions. In this paper we suggest that the additional truth values of Fitting/Kunen and Naish are best viewed as duals. We use Belnap's four-valued logic (Belnap, N. D. 1977. A useful four-valued logic. In Modern Uses of Multiple-Valued Logic, J. M. Dunn and G. Epstein, Eds. D. Reidel, Dordrecht, Netherlands, 8-37), also used elsewhere by Fitting, to unify the two three-valued approaches. The truth values are arranged in a bilattice, which supports the classical ordering on truth values as well as the "information ordering". We note that the "arrow" operator of Naish (and our four-valued extension) is essentially the information ordering, whereas the classical arrow denotes the truth ordering. This allows us to shed new light on many aspects of logic programming, including program analysis, type and mode systems, declarative debugging and the relationships between specifications and programs, and successive execution states of a program.
C1 [Naish, Lee; Sondergaard, Harald] Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic 3010, Australia.
C3 University of Melbourne
RP Naish, L (corresponding author), Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic 3010, Australia.
EM lee@unimelb.edu.au; harald@unimelb.edu.au
OI Sondergaard, Harald/0000-0002-2352-1883
CR AIKEN A, 1994, LNCS, V864, P43
   [Anonymous], 1963, Studies in Logic and the Foundations of Mathematics, DOI DOI 10.1016/S0049-237X(08)72018-4
   APT KR, 1994, J LOGIC PROGRAM, V20, P9, DOI 10.1016/0743-1066(94)90024-8
   Arieli O, 2002, ANN MATH ARTIF INTEL, V36, P381, DOI 10.1023/A:1016358201013
   Arieli O., 1996, Journal of Logic, Language and Information, V5, P25, DOI 10.1007/BF00215626
   Arieli O, 1998, THIRTEENTH ANNUAL IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE, PROCEEDINGS, P118, DOI 10.1109/LICS.1998.705648
   Avron A., 2009, STUD LOGICA, V91, P273
   Babbage C., 1864, Passages From the Life of a Philosopher
   Barbuti R, 1998, SCI COMPUT PROGRAM, V32, P145, DOI 10.1016/S0167-6423(97)00033-6
   BARRINGER H, 1984, ACTA INFORM, V21, P251, DOI 10.1007/BF00264250
   Belnap N., 1977, MODERN USES MULTIPLE, P8, DOI [10.1007/978-94-010-1161-7_2, DOI 10.1007/978-94-010-1161-7_2]
   BLAIR HA, 1982, INFORM CONTROL, V54, P25, DOI 10.1016/S0019-9958(82)91234-7
   BOSSI A, 1994, J LOGIC PROGRAM, V20, P149, DOI 10.1016/0743-1066(94)90026-4
   BOYE J, 1995, P 12 INT C LOG PROGR, P747
   Chechik M, 2003, ACM T SOFTW ENG METH, V12, P371, DOI 10.1145/990010.990011
   Clark K. L., 1978, Logic and data bases, P293
   CLARK KL, 1977, P IJCAI 77, P419
   Codish M, 2002, LECT NOTES COMPUT SC, V2566, P109
   Dams D, 1997, ACM T PROGR LANG SYS, V19, P253, DOI 10.1145/244795.244800
   Denecker Marc., 2001, ACM Transactions on Computational Logic, V2, P623
   FALASCHI M, 1988, P C S LOGIC PROGRAMM, P993
   Fitting M., 1991, Journal of Logic and Computation, V1, P797, DOI 10.1093/logcom/1.6.797
   Fitting M., 1989, Proceedings. Fourth Annual Symposium on Logic in Computer Science (Cat. No.89CH2753-2), P63, DOI 10.1109/LICS.1989.39159
   Fitting M, 2002, THEOR COMPUT SCI, V278, P25, DOI 10.1016/S0304-3975(00)00330-3
   FITTING M, 1991, J LOGIC PROGRAM, V11, P91, DOI 10.1016/0743-1066(91)90014-G
   FITTING M, 1993, J LOGIC PROGRAM, V17, P197, DOI 10.1016/0743-1066(93)90031-B
   Fitting M., 1985, Journal of Logic Programming, V2, P295, DOI 10.1016/S0743-1066(85)80005-4
   Fitting M., 1988, Fundamenta Informaticae, V11, P209
   Fitting M., 2006, SELF REFERENCE PAGES, P53
   Ginsberg M. L., 1988, Computational Intelligence, V4, P265, DOI 10.1111/j.1467-8640.1988.tb00280.x
   Godel K., 1931, Monatshefte fur Mathematik und Physik, V38, P173, DOI 10.1007/BF01700692
   Gries D, 1995, LECT NOTES COMPUT SC, V1000, P366
   HOGGER CJ, 1981, J ACM, V28, P372, DOI 10.1145/322248.322258
   JONES CB, 1994, ACTA INFORM, V31, P399, DOI 10.1007/BF01178666
   Kleene S., 1938, J. Symb. Log., V3, P150, DOI [10.2307/2267778, DOI 10.2307/2267778]
   Kowalski R.A., 1980, LOGIC PROBLEM SOLVIN
   KUNEN K, 1987, J LOGIC PROGRAM, V4, P289, DOI 10.1016/0743-1066(87)90007-0
   Lloyd J. W., 1984, Foundations of Logic Programming
   Loyer Y., 2004, ACM Transactions on Computational Logic, V5, P508, DOI 10.1145/1013560.1013565
   MARRIOTT K, 1992, J LOGIC PROGRAM, V13, P181, DOI 10.1016/0743-1066(92)90031-W
   Morris J. M., 1998, Formal Aspects of Computing, V10, P76, DOI 10.1007/PL00003927
   MYCROFT A, 1984, LECT NOTES COMPUT SC, V166, P274
   NAISH L, 2000, AUSTR COMPUTER SCI C, V22, P166
   Naish L., 1996, P 1996 JOINT INT C S, P185
   Naish L., 2012, C RES PRACTICE INFOR, V128, P49
   Naish L, 2006, THEOR PRACT LOG PROG, V6, P509, DOI 10.1017/S1471068406002742
   Nishimura S, 2010, LECT NOTES COMPUT SC, V6037, P113, DOI 10.1007/978-3-642-12592-8_9
   Palmer D. F., 1997, THESIS U MELBOURNE A
   PEREIRA LM, 1986, LECT NOTES COMPUT SC, V225, P203
   SATO T, 1984, P INT C 5 GEN COMP S, P195
   Shapiro EY., 1983, Algorithmic Program Debugging
   Somogyi Z., 1995, PROCEEDINGS OF THE AUSTRALIAN COMPUTER SCIENCE CONFERENCE, P499
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   [No title captured]
NR 56
TC 1
Z9 2
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2014
VL 14
BP 803
EP 840
DI 10.1017/S1471068413000069
PN 6
PG 38
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA AX3OJ
UT WOS:000346848400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gelfond, M
   Zhang, YL
AF Gelfond, Michael
   Zhang, Yuanlin
TI Vicious Circle Principle and Logic Programs with Aggregates
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
DE Aggregates; Answer Set Programming
AB The paper presents a knowledge representation language Alog which extends ASP with aggregates. The goal is to have a language based on simple syntax and clear intuitive and mathematical semantics. We give some properties of Alog, an algorithm for computing its answer sets, and comparison with other approaches.
C1 [Gelfond, Michael; Zhang, Yuanlin] Texas Tech Univ, Lubbock, TX 79414 USA.
C3 Texas Tech University System; Texas Tech University
RP Gelfond, M (corresponding author), Texas Tech Univ, Lubbock, TX 79414 USA.
EM michael.gelfond@ttu.edu; y.zhang@ttu.edu
RI Zhang, Yuanlin/I-9289-2017
OI Gelfond, Michael/0000-0003-0574-3092; Mondol, Anupom/0000-0001-9956-433X
CR Balai E, 2013, LECT NOTES COMPUT SC, V8148, P135, DOI 10.1007/978-3-642-40564-8_14
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Erdem E., 2012, THEORY PRACTICE ANSW
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Faber W, 2008, THEOR PRACT LOG PROG, V8, P545, DOI 10.1017/S1471068408003323
   Feferman S., 2002, PREDICATIVITY
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P136, DOI 10.1007/978-3-540-72200-7_13
   Gelfond M, 2002, LECT NOTES ARTIF INT, V2408, P413
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 2014, KNOWLEDGE REPRESENTA
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Harrison A., 2013, WORK NOT WORKSH ANSW
   KEMP DB, 1991, LOGIC PROGRAMM, P387
   Koch C, 2003, ARTIF INTELL, V151, P177, DOI 10.1016/S0004-3702(03)00078-X
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Liu LN, 2010, ARTIF INTELL, V174, P295, DOI 10.1016/j.artint.2009.11.016
   Marek VW, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P86
   Pelov N., 2007, THEOR PRACT LOG PROG, V7, P355
   Poincare H., 1906, Revue de metaphysique et de morale, V14, P294
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Son TC, 2007, THEOR PRACT LOG PROG, V7, P355, DOI 10.1017/S1471068406002936
   Wang Y., 2012, AAAI
NR 23
TC 31
Z9 32
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 587
EP 601
DI 10.1017/S1471068414000222
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hoos, H
   Lindauer, M
   Schaub, T
AF Hoos, Holger
   Lindauer, Marius
   Schaub, Torsten
TI claspfolio 2: Advances in Algorithm Selection for Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
ID SOLVER
AB Building on the award-winning, portfolio-based ASP solver claspfolio, we present claspfolio 2, a modular and open solver architecture that integrates several different portfolio-based algorithm selection approaches and techniques. The claspfolio 2 solver framework supports various feature generators, solver selection approaches, solver portfolios, as well as solver-schedule-based pre-solving techniques. The default configuration of claspfolio 2 relies on a light-weight version of the ASP solver clasp to generate static and dynamic instance features. The flexible open design of claspfolio 2 is a distinguishing factor even beyond ASP. As such, it provides a unique framework for comparing and combining existing portfolio-based algorithm selection approaches and techniques in a single, unified framework. Taking advantage of this, we conducted an extensive experimental study to assess the impact of different feature sets, selection approaches and base solver portfolios. In addition to gaining substantial insights into the utility of the various approaches and techniques, we identified a default configuration of claspfolio 2 that achieves substantial performance gains not only over clasp's default configuration and the earlier version of claspfolio, but also over manually tuned configurations of clasp.
C1 [Hoos, Holger] Univ British Columbia, Vancouver, BC V5Z 1M9, Canada.
   [Lindauer, Marius] Univ Freiburg, Freiburg, Germany.
   [Lindauer, Marius; Schaub, Torsten] Univ Potsdam, Potsdam, Germany.
C3 University of British Columbia; University of Freiburg; University of
   Potsdam
RP Hoos, H (corresponding author), Univ British Columbia, Vancouver, BC V5Z 1M9, Canada.
RI Schaub, Torsten/O-5873-2019; Hoos, Holger H./B-1461-2008
OI Schaub, Torsten/0000-0002-7456-041X; Lindauer,
   Marius/0000-0002-9675-3175; Hoos, Holger H./0000-0003-0629-0099
CR Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P54, DOI 10.1007/978-3-642-40564-8_6
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 2014, THEORY PRACT LOGIC P
   [Anonymous], LLAMA LEVERAGING LEA
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], LPARSE 1 0 USERS MAN
   [Anonymous], 2011, P RCRA WORKSH IJCAI
   [Anonymous], 2012, SAT, DOI 10.1007/978-3-642-31612-8_18
   [Anonymous], 2011, 3 ASP COMPETITION FI
   [Anonymous], 2012, LIPIcs
   [Anonymous], P 22 INT C AUT PLANN
   [Anonymous], 2011, INAP 2011, DOI DOI 10.1007/978-3-642-41524-16
   [Anonymous], 2012, PRINCIPLES KNOWLEDGE
   [Anonymous], 2012, 28 INT C LOG PROGR I
   [Anonymous], TECHN COMM 28 INT C
   [Anonymous], ARTIFICIAL INTELLIGE
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], THEORY PRACTICE LOGI
   [Anonymous], 2008, IR C ART INT COGN SC
   Ansótegui C, 2009, LECT NOTES COMPUT SC, V5732, P142, DOI 10.1007/978-3-642-04244-7_14
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Bishop C.M., 2006, J ELECTRON IMAGING, V16, P049901, DOI DOI 10.1117/1.2819119
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P352
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Giunchiglia E, 2006, J AUTOM REASONING, V36, P345, DOI 10.1007/s10817-006-9033-2
   Helmert Malte., 2011, International Conference on Automated Planning and Scheduling, P28
   Hoos Holger H., 2013, Learning and Intelligent Optimization. 7th International Conference, LION 7. Revised Selected Papers: LNCS 7997, P138, DOI 10.1007/978-3-642-44973-4_16
   Hoos HH, 2012, COMMUN ACM, V55, P70, DOI 10.1145/2076450.2076469
   Huberman BA, 1997, SCIENCE, V275, P51, DOI 10.1126/science.275.5296.51
   Hutter Frank, 2011, Learning and Intelligent Optimization. 5th International Conference, LION 5. Selected Papers, P507, DOI 10.1007/978-3-642-25566-3_40
   HUTTER F., 2007, National Conference on Artificial Intelligence, P1152
   Janhunen T., 2006, J APPL NONCLASSICAL, V1-2, P35, DOI DOI 10.3166/JANCL.16.35-86
   Kadioglu Serdar, 2011, Principles and Practice of Constraint Programming - CP 2011. Proceedings of the 17th International Conference (CP 2011), P454, DOI 10.1007/978-3-642-23786-7_35
   Kadioglu S, 2010, FRONT ARTIF INTEL AP, V215, P750, DOI 10.3233/978-1-60750-606-5-751
   Kotthoff L, 2012, AI COMMUN, V25, P257, DOI 10.3233/AIC-2012-0533
   Malitsky Yuri, 2013, Learning and Intelligent Optimization. 7th International Conference, LION 7. Revised Selected Papers: LNCS 7997, P153, DOI 10.1007/978-3-642-44973-4_17
   Pulina L, 2007, LECT NOTES COMPUT SC, V4741, P574
   Rice J. R., 1976, Advances in computers, vol.15, P65, DOI 10.1016/S0065-2458(08)60520-3
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Xu L., 2009, SAT, V4, P53
   Xu L, 2007, LECT NOTES COMPUT SC, V4741, P696
   Xu L, 2008, J ARTIF INTELL RES, V32, P565, DOI 10.1613/jair.2490
   Xu L, 2010, AAAI CONF ARTIF INTE, P210
NR 43
TC 56
Z9 57
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 569
EP 585
DI 10.1017/S1471068414000210
PN 4-5
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU De Vos, M
   Kisa, DG
   Oetsch, J
   Pührer, J
   Tompits, H
AF De Vos, Marina
   Kisa, Doga Gizem
   Oetsch, Johannes
   Puehrer, Joerg
   Tompits, Hans
TI Annotating answer-set programs in LANA
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer-set programming; program annotations; documentation; unit testing
ID STABLE MODEL; MODULARITY; SEMANTICS
AB While past research in answer-set programming (ASP) mainly focused on theory, ASP solver technology, and applications, the present work situates itself in the context of a quite recent research trend: development support for ASP. In particular, we propose to augment answer-set programs with additional meta-information formulated in a dedicated annotation language, called LANA. This language allows the grouping of rules into coherent blocks and to specify language signatures, types, pre- and postconditions, as well as unit tests for such blocks. While these annotations are invisible to an ASP solver, as they take the form of program comments, they can be interpreted by tools for documentation, testing, and verification purposes, as well as to eliminate sources of common programming errors by realising syntax checking or code completion features. To demonstrate its versatility, we introduce two such tools, viz. (i) ASPDOC, for generating an HTML documentation for a program based on the annotated information, and (ii) ASPUNIT, for running and monitoring unit tests on program blocks. LANA is also exploited in the SeaLion system, an integrated development environment for ASP based on Eclipse.
C1 [De Vos, Marina] Univ Bath, Dept Comp, Bath BA2 7AY, Avon, England.
   [Kisa, Doga Gizem] Sabanci Univ, Fac Engn & Nat Sci, TR-34956 Istanbul, Turkey.
   [Oetsch, Johannes; Puehrer, Joerg; Tompits, Hans] Vienna Univ Technol, Inst Informat Syst 184 3, A-1040 Vienna, Austria.
C3 University of Bath; Sabanci University; Technische Universitat Wien
RP De Vos, M (corresponding author), Univ Bath, Dept Comp, Bath BA2 7AY, Avon, England.
EM mdv@cs.bath.ac.uk; dgkisa@su.sabanciuniv.edu; oetsch@kr.tuwien.ac.at;
   puehrer@kr.tuwien.ac.at; tompits@kr.tuwien.ac.at
RI De Vos, Marina/K-8191-2015
OI De Vos, Marina/0000-0003-3583-7671; Oetsch, Johannes/0000-0002-9902-7662
FU Austrian Science Fund (FWF) [P21698]; Austrian Science Fund (FWF)
   [P21698] Funding Source: Austrian Science Fund (FWF)
FX This work was partially supported by the Austrian Science Fund (FWF)
   under grant P21698.
CR [Anonymous], 2003, TEST DRIVEN DEV EXAM
   Balduccini M., 2007, MODULES SIGNATURE DE, P41
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Boenn G, 2011, THEOR PRACT LOG PROG, V11, P397, DOI 10.1017/S1471068410000530
   Brain M., 2007, IS ILLOGICAL CAPTAIN, P71
   BUGLIESI M, 1994, J LOGIC PROGRAM, V20, P443, DOI 10.1016/0743-1066(94)90032-9
   Cliffe O, 2008, LECT NOTES COMPUT SC, V5366, P724, DOI 10.1007/978-3-540-89982-2_65
   De Vos M., 2007, 1 INT WORKSH SOFTW E
   De Vos M., 2009, 2 INT WORKSH SOFTW E
   Dworschak S, 2008, CONSTRAINTS, V13, P21, DOI 10.1007/s10601-007-9031-y
   Eiter T, 2002, LECT NOTES ARTIF INT, V2424, P541, DOI 10.1007/3-540-45757-7_51
   EITER T, 1997, LNCS, V1265, P290
   Eiter Thomas, 1998, P 6 INT C PRINC KNOW, P406
   FEBBRARO O., 2011, P INAP WLP 2011, P165
   Febbraro O, 2011, LECT NOTES ARTIF INT, V6645, P317
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gelfond M, 1999, ANN MATH ARTIF INTEL, V25, P165, DOI 10.1023/A:1018938324292
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Giunchiglia E, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P61
   Janhunen T, 2011, LECT NOTES ARTIF INT, V6645, P242
   Janhunen T, 2010, FRONT ARTIF INTEL AP, V215, P950, DOI 10.3233/978-1-60750-606-5-951
   Janhunen T, 2009, J ARTIF INTELL RES, V35, P813, DOI 10.1613/jair.2810
   Kloimullner C., 2011, P INAP WLP 2011, P152
   Kulas M, 2000, LECT NOTES COMPUT SC, V1817, P234, DOI 10.1007/10720327_14
   Leavens G. T., 2006, Design by Contract with JML
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Niemela I, 1997, LECT NOTES ARTIF INT, V1265, P420
   Niemelä I, 1999, LECT NOTES ARTIF INT, V1730, P317, DOI 10.1007/3-540-46767-X_23
   Oetsch J., 2011, P INAP WLP 2011, P141
   Oetsch J., 2012, P KR 2012
   Oetsch J, 2010, LEIBNIZ INT PR INFOR, V7, P154, DOI 10.4230/LIPIcs.ICLP.2010.154
   Perri S., 2007, P SEA 2007, P86
   Soininen T, 1999, LECT NOTES COMPUT SC, V1551, P305
   Sureshkumar A., 2007, APE ANS PROLOG ENV, P101
NR 35
TC 10
Z9 10
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2012
VL 12
BP 619
EP 637
DI 10.1017/S147106841200021X
PN 4-5
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 000CV
UT WOS:000308365000012
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Eiter, T
   Polleres, A
AF Eiter, T
   Polleres, A
TI Towards automated integration of guess and check programs in answer set
   programming: a meta-interpreter and applications
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; disjunctive logic programs; guess and check
   paradigm; meta-interpretation; automated program synthesis
ID LOGIC
AB Answer set programming (ASP) with disjunction offers a powerful tool for declaratively representing and solving hard problems. Many NP-complete problems can be encoded ill the answer set semantics of logic programs in a very concise and intuitive way, where the encoding reflects the typical "guess and check" nature of NP problems: The property is encoded in a way such that polynomial size certificates for it correspond to stable models ofa program. However, the problem-solving capacity of full disjunctional logic programs (DI-Ps) is beyond NP, and captures a class of problems at the second level of the polynomial hierarchy. While these problems also have a clear "guess and check" structure, finding an encoding in a DLP reflecting this structure may sometimes be a non-obvious task, in particular if the "check" itself is a co-NP-cornplete problem; usually, Such problems are solved by interleaving separate guess and check programs, where the check is expressed by inconsistency of the check program. In this paper, we present general transformations of head-cycle free (extended) disjunctive logic programs into stratified and positive (extended) disjunctive logic programs based oil meta-interpretation techniques. The answer sets of the original and the transformed program are in simple correspondence, and, moreover, inconsistency of the original program is indicated by a designated answer set of the transformed program. Our transformations facilitate the integration of separate "guess" and "check" programs, which are often easy to obtain, automatically into a single disjunctive logic program. Our results complement recent results on meta-interpretation in ASP, and extend methods and techniques for a declarative "guess and check" problem solving paradigm through ASP.
C1 Tech Univ, Inst Informat Syst, Arbeitsbereich Wissensbasierte Syst, Vienna, Austria.
   Univ Innsbruck, Inst Informat, DERI, A-6020 Innsbruck, Austria.
C3 Technische Universitat Wien; University of Innsbruck
RP Tech Univ, Inst Informat Syst, Arbeitsbereich Wissensbasierte Syst, Vienna, Austria.
EM eiter@kr.tuwien.ac.at; axel.polleres@deri.org
RI Eiter, Thomas/ABE-9263-2021; Polleres, Axel/A-4626-2011
OI Polleres, Axel/0000-0001-5670-1146
CR Balduccini M, 2003, THEOR PRACT LOG PROG, V3, P425, DOI 10.1017/S1471068403001807
   BARAL C, 2002, KNOWLEDGE REPRESENTA
   Ben-Eliyahu R., 1994, Annals of Mathematics and Artificial Intelligence, V12, P53, DOI 10.1007/BF01530761
   Cadoli M, 1997, IEEE T KNOWL DATA EN, V9, P448, DOI 10.1109/69.599933
   Cimatti A, 2000, J ARTIF INTELL RES, V13, P305, DOI 10.1613/jair.774
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   DELGRANDE J, 2001, LNCS, V2173, P411
   Eiter T., 2004, ACM Transactions on Computational Logic, V5, P206, DOI 10.1145/976706.976708
   Eiter T, 2003, ARTIF INTELL, V144, P157, DOI 10.1016/S0004-3702(02)00367-3
   Eiter T, 2003, THEOR PRACT LOG PROG, V3, P463, DOI 10.1017/S1471068403001753
   Eiter T, 2000, SPRINGER INT SER ENG, V597, P79
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   EITER T, 2002, J THEORY PRACTICE LO, V2, P721
   Gelfond M, 2002, LECT NOTES ARTIF INT, V2408, P413
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Goldman R. P., 1996, Proceedings. Third International Conference on Artificial Intelligence Planning Systems, P110
   Janhunen T, 2000, LECT NOTES ARTIF INT, V1861, P852
   Janhunen T., 2001, LECT NOTES COMPUTER, V2173, P93, DOI DOI 10.1007/3-540-45402-0_7
   JANHUNEN T, 2000, P 7 INT C PRINC KNOW, P411
   Lee J, 2003, LECT NOTES COMPUT SC, V2916, P451, DOI 10.1007/978-3-540-24599-5_31
   LEONE N, 2001, IJCAI 01 WORKSH PLAN, P33
   LEONE N, 2004, IN PRESS ACM T COMP
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   LIN F, 2002, P 18 NAT C ART INT A
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Marek VW, 2003, THEOR PRACT LOG PROG, V3, P551, DOI 10.1017/S1471068403001777
   McDermott D., 1987, Computational Intelligence, V3, P151, DOI 10.1111/j.1467-8640.1987.tb00183.x
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Papadimitriou C. H., 1994, Computational Complexity
   PAPDIMITRIOU CH, 1985, B EATCS, V26, P21
   POLLERES A, 2003, THESIS TU WIEN OSTER
   PROVETTI A, 2001, P AAA1 2001 SPRING S
   Przymusinski T. C., 1989, Journal of Automated Reasoning, V5, P167, DOI 10.1007/BF00243002
   Przymusinski T. C., 1991, New Generation Computing, V9, P401, DOI 10.1007/BF03037171
   Sakama C, 2003, THEOR PRACT LOG PROG, V3, P671, DOI 10.1017/S1471068403001716
   SCHLIPF JS, 1995, J COMPUT SYST SCI, V51, P64, DOI 10.1006/jcss.1995.1053
   Turner H, 2002, LECT NOTES ARTIF INT, V2424, P111, DOI 10.1007/3-540-45757-7_10
   [No title captured]
NR 39
TC 17
Z9 19
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2006
VL 6
BP 23
EP 60
DI 10.1017/S1471068405002577
PN 1-2
PG 38
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 011WO
UT WOS:000235299500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hitzler, P
   Wendt, M
AF Hitzler, P
   Wendt, M
TI A uniform approach to logic programming semantics
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE level mapping; Fitting semantics; well-founded semantics; least model
   semantics; stable semantics; weak stratification
ID WELL-FOUNDED SEMANTICS; NEURAL-NETWORKS; TERMINATION; OPERATORS;
   NEGATION; MODELS
AB Part of the theory of logic programming and nonmonotonic reasoning concerns the study of fixed-point semantics for these paradigms. Several different semantics have been proposed during the last two decades, and some have been more successful and acknowledged than others. The rationales behind those various semantics have been manifold, depending on one's point of view, which may be that of a programmer or inspired by commonsense reasoning, and consequently the constructions which lead to these semantics are technically very diverse, and the exact relationships between them have not yet been fully understood. In this paper, we present a conceptually new method, based on level mappings, which allows to provide uniform characterizations of different semantics for logic programs. We will display our approach by giving new and uniform characterizations of some of the major semantics, more particular of the least model semantics for definite programs, of the Fitting semantics, and of the well-founded semantics. A novel characterization of the weakly perfect model semantics will also be provided.
C1 Univ Karlsruhe, Inst AIFB, Karlsruhe, Germany.
   Univ Leipzig, Dept Math & Comp Sci, Leipzig, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology; Leipzig
   University
RP Univ Karlsruhe, Inst AIFB, Karlsruhe, Germany.
EM hitzler@aifb.uni-karlsruhe.de; matthias.wendt@math.uni-leipzig.de
CR [Anonymous], 1994, Handbook of logic in computer science
   [Anonymous], 1977, MODERN USES MULTIPLE
   [Anonymous], P N AM C LOG PROGR
   Apt K.R., 1988, THEORY DECLARATIVE K, P89
   APT KR, 1993, INFORM COMPUT, V106, P109, DOI 10.1006/inco.1993.1051
   Arieli O, 2002, ANN MATH ARTIF INTEL, V36, P381, DOI 10.1023/A:1016358201013
   Arieli O, 1998, ARTIF INTELL, V102, P97, DOI 10.1016/S0004-3702(98)00032-0
   ARIELI O, 1994, IEEE S LOG, P468, DOI 10.1109/LICS.1994.316044
   BONNIER S, 1991, INFORM PROCESS LETT, V40, P73, DOI 10.1016/0020-0190(91)90012-7
   CAVEDON L, 1991, THEOR COMPUT SCI, V86, P81, DOI 10.1016/0304-3975(91)90005-M
   Denecker M, 2000, SPRINGER INT SER ENG, V597, P127
   Dix J., 1995, Fundamenta Informaticae, V22, P227
   Dix J., 1995, Fundamenta Informaticae, V22, P257
   EITER T., 1997, LPNMR, P364
   FAGES F, 1994, J METHODS LOGIC COMP, V1, P51
   Fitting M, 2002, THEOR COMPUT SCI, V278, P25, DOI 10.1016/S0304-3975(00)00330-3
   FITTING M, 1991, J LOGIC PROGRAM, V11, P91, DOI 10.1016/0743-1066(91)90014-G
   FITTING M, 1994, J LOGIC PROGRAM, V21, P113, DOI 10.1016/S0743-1066(14)80007-1
   FITTING M, 1993, J LOGIC PROGRAM, V17, P197, DOI 10.1016/0743-1066(93)90031-B
   Fitting M., 1985, Journal of Logic Programming, V2, P295, DOI 10.1016/S0743-1066(85)80005-4
   FITTING MC, 1991, LOGIC PROGRAMM, P71
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   GINSBERG ML, 1986, 8672 STANF U
   GINSBERG ML, 1992, COMPUTATIONAL INTELL, V4, P256
   Hitzler P, 2002, LECT NOTES ARTIF INT, V2479, P205
   Hitzler P, 2003, LECT NOTES ARTIF INT, V2821, P355
   Hitzler P, 2003, LECT NOTES ARTIF INT, V2821, P105
   Hitzler P, 2003, THEOR COMPUT SCI, V305, P187, DOI 10.1016/S0304-3975(02)00709-0
   Hitzler P, 1999, LECT NOTES ARTIF INT, V1730, P357, DOI 10.1007/3-540-46767-X_26
   HITZLER P, 2001, INFORMATION, V4, P295
   HITZLER P, 2000, P 4 IR WORKSH FORM M
   HITZLER P, 2001, THESIS U COLL CORK
   Hölldobler S, 1999, APPL INTELL, V11, P45, DOI 10.1023/A:1008376514077
   KRAUS S, 1990, ARTIF INTELL, V44, P167, DOI 10.1016/0004-3702(90)90101-5
   KUNEN K, 1987, J LOGIC PROGRAM, V4, P289, DOI 10.1016/0743-1066(87)90007-0
   Lifschitz V, 1995, LECT NOTES ARTIF INT, V928, P127
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Lloyd J., 1988, Foundations Logic Programming, V2nd
   MAKINSON D, 1994, HDB LOGIC ARTIFICIAL, V3
   Marchiori E, 1996, J LOGIC PROGRAM, V26, P69, DOI 10.1016/0743-1066(95)00090-9
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   PEARSON TA, 1997, CIRCULATION, V96, P1
   Pedreschi D, 2002, THEOR PRACT LOG PROG, V2, P369, DOI 10.1017/S1471068402001400
   PRZMUSINSKI TC, 1989, FUNDAMENTA INFORMATI, V13, P445
   Przymusinska H., 1990, Fundamenta Informaticae, V13, P51
   Przymusinski T. C., 1988, F DEDUCTIVE DATABASE, P193
   Seda A. K., 1997, Fundamenta Informaticae, V29, P97
   Seda A. K., 1995, Fundamenta Informaticae, V24, P359
   SIMONS P, 2000, ARTIF INTELL, V138, P1
   Stoltenberg-Hansen Viggo., 1994, MATH THEORY DOMAINS
   Turner H, 2001, THEOR PRACT LOG PROG, V1, P487, DOI 10.1017/S1471068401001144
   Van Gelder A., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P1, DOI 10.1145/73721.73722
   Van Gelder Allen., 1988, FDN DEDUCTIVE DATABA, P149
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
NR 54
TC 12
Z9 15
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2005
VL 5
BP 93
EP 121
DI 10.1017/S1471068404002212
PN 1-2
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 903EN
UT WOS:000227408400004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bertino, E
   Perlasca, P
   Catania, B
AF Bertino, E
   Perlasca, P
   Catania, B
TI Introducing dynamic behavior in amalgamated knowledge bases
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE deductive databases; heterogeneous databases; active rules; updates
ID INFORMATION-SYSTEMS; MANAGEMENT
AB The problem of integrating knowledge from multiple and heterogeneous sources is a fundamental issue in current information systems. To cope with this problem, the concept of mediator has been introduced as a software component providing intermediate services, linking data resources and application programs, and making transparent the heterogeneity of the underlying systems. In designing a mediator architecture, we believe that an important aspect is the definition of a formal framework by which one is able to model integration according to a declarative style. To this purpose, the use of a logical approach seems very promising. Another important aspect is the ability to model both static integration aspects, concerning query execution, and dynamic ones, concerning data updates and their propagation among the various data sources. Unfortunately, as far as we know, no formal proposals for logically modeling mediator architectures both from a static and dynamic point of view have already been developed. In this paper, we extend the framework for amalgamated knowledge bases, presented in Subrahmanian (1994), to deal with dynamic aspects. The language we propose is based on the Active U-Datalog language (Bertino et al., 1998), and extends it with annotated logic and amalgamation concepts from Kifer and Subrahmanian (1992) and Subrahmanian (1987). We model the sources of information and the mediator (also called supervisor) as Active U-Datalog deductive databases, thus modeling queries, transactions, and active rules, interpreted according to the PARK semantics (Gottlob et al., 1996). By using active rules, the system can efficiently perform update propagation among different databases. The result is a logical environment, integrating active and deductive rules, to perform queries and update propagation in an heterogeneous mediated framework.
C1 Univ Milan, Dipartimento Sci Informaz, I-20135 Milan, Italy.
   Univ Genoa, Dipartimento Informat & Sci Informaz, I-16146 Genoa, Italy.
C3 University of Milan; University of Genoa
RP Bertino, E (corresponding author), Univ Milan, Dipartimento Sci Informaz, Via Comel 39-41, I-20135 Milan, Italy.
EM bertino@dsi.unimi.it; perlasca@dsi.unimi.ti; cataida@disi.unige.it
OI PERLASCA, PAOLO/0000-0001-6674-2822
CR [Anonymous], 1983, P 2 ACM SIGACT SIGMO
   Arens Y., 1993, International Journal of Intelligent & Cooperative Information Systems, V2, P127, DOI 10.1142/S0218215793000071
   Arens Y., 1996, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V6, P99, DOI 10.1007/BF00122124
   Beeri C., 1997, Proceedings of the Sixteenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, PODS 1997, P99, DOI 10.1145/263661.263673
   Bertino E, 2000, J LOGIC PROGRAM, V43, P15, DOI 10.1016/S0743-1066(99)00024-2
   BERTINO E, 1998, LNCS, V1472, P107
   BORGIDA A, 1995, IEEE T KNOWL DATA EN, V7, P671, DOI 10.1109/69.469829
   Bowen K.A., 1982, Logic Programming, P153
   BUKHRES OA, 1996, OBJECT ORIENTED MULT
   CERI S, 1993, P 19 INT C VER LARG, P108
   Chawathe SS, 1996, PROC INT CONF DATA, P56, DOI 10.1109/ICDE.1996.492089
   DO L, 1995, PROC INT CONF DATA, P99
   Eiter T, 1999, ARTIF INTELL, V108, P179, DOI 10.1016/S0004-3702(99)00005-3
   ELMAGARMID AK, 1993, DATABASE T MODELS AD
   FAGIN R, 1986, ADV COMPUTING RES, V3, P1
   Garcia-Molina H., 1997, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V8, P117, DOI 10.1023/A:1008683107812
   GOTTLOB G, 1996, LNCS, V1057, P35
   GRANT J, 1991, P 1 INT WORKSH INT M, P118
   GUPTA A, 1993, P IEEE INT WORKSH RE, P178
   Hanson EN, 1996, IEEE T KNOWL DATA EN, V8, P157, DOI 10.1109/69.485644
   JENNINGS NR, 1996, IEE REV          JAN, P17
   KIFER M, 1992, J LOGIC PROGRAM, V12, P335, DOI 10.1016/0743-1066(92)90007-P
   Levy AY, 1996, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON VERY LARGE DATA BASES, P251
   Lu JJ, 1996, IEEE T KNOWL DATA EN, V8, P773, DOI 10.1109/69.542029
   Montesi D, 1997, IEEE T KNOWL DATA EN, V9, P784, DOI 10.1109/69.634755
   SCHEK HJ, 1993, P IEEE INT WORKSH RE
   STONEBRAKER M, 1990, SIGMOD REC, V19, P281, DOI 10.1145/93605.98737
   SUBRAHMANIAN V, 1996, HERMES HETEROGENEOUS
   Subrahmanian V. S., 1987, Proceedings of the 1987 Symposium on Logic Programming (Cat. No.87CH2472-9), P173
   SUBRAHMANIAN VS, 1989, LOGIC PROGRAMM, P65
   SUBRAHMANIAN VS, 1994, ACM T DATABASE SYST, V19, P291, DOI 10.1145/176567.176571
   WHANG WK, 1991, P 1 INT WORKSH INT M, P92
   WIDOM J, 1990, SIGMOD REC, V19, P259, DOI 10.1145/93605.98735
   WIEDERHOLD G, 1992, IEEE COMPUT, V25, P38
   ZICARI R, 1991, P 1 INT WORKSH INT M, P125
NR 35
TC 0
Z9 0
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2003
VL 3
BP 625
EP 669
DI 10.1017/S1471068402001588
PN 6
PG 45
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 754EG
UT WOS:000187289300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Arias, J
   Törmä, S
   Carro, M
   Gupta, G
AF Arias, Joaquin
   Torma, Seppo
   Carro, Manuel
   Gupta, Gopal
TI Building Information Modeling Using Constraint Logic Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE building information modeling; constraint; commonsense reasoning; answer
   set programming
AB Building Information Modeling (BIM) produces three-dimensional object-oriented models of buildings combining the geometrical information with a wide range of properties about materials, products, safety, to name just a few. BIM is slowly but inevitably revolutionizing the architecture, engineering, and construction industry. Buildings need to be compliant with regulations about stability, safety, and environmental impact. Manual compliance checking is tedious and error-prone, and amending flaws discovered only at construction time causes huge additional costs and delays. Several tools can check BIM models for conformance with rules/guidelines. For example, Singapore's CORENET e-Submission System checks fire safety. But since the current BIM exchange format only contains basic information about building objects, a separate, ad-hoc model pre-processing is required to determine, for example, evacuation routes. Moreover, they face difficulties in adapting existing built-in rules and/or adding new ones (to cater for building regulations, that can vary not only among countries but also among parts of the same city), if at all possible. We propose the use of logic-based executable formalisms (CLP and Constraint ASP) to couple BIM models with advanced knowledge representation and reasoning capabilities. Previous experience shows that such formalisms can be used to uniformly capture and reason with knowledge (including ambiguity) in a large variety of domains. Additionally, incorporating checking within design tools makes it possible to ensure that models are rule-compliant at every step. This also prevents erroneous designs from having to be (partially) redone, which is also costly and burdensome. To validate our proposal, we implemented a preliminary reasoner under CLP(Q/R) and ASP with constraints and evaluated it with several BIM models.
C1 [Arias, Joaquin] Univ Rey Juan Carlos, CETINIA, Madrid, Spain.
   [Torma, Seppo] VisuaLynk Oy, Espoo, Finland.
   [Carro, Manuel] Univ Politecn Madrid, Madrid, Spain.
   [Carro, Manuel] IMDEA Software Inst, Pozuelo De Alarcon, Spain.
   [Gupta, Gopal] Univ Texas Dallas, Richardson, TX 75080 USA.
C3 Universidad Rey Juan Carlos; Universidad Politecnica de Madrid; IMDEA
   Software Institute; University of Texas System; University of Texas
   Dallas
RP Arias, J (corresponding author), Univ Rey Juan Carlos, CETINIA, Madrid, Spain.
EM joaquin.arias@urjc.es; seppo.t.torma@gmail.com; manuel.carro@upm.es;
   gupta@utdallas.edu
RI Carro, Manuel/AAE-9653-2021
OI Carro, Manuel/0000-0001-5199-3135; Arias, Joaquin/0000-0003-4148-311X
FU EU H2020 project BIM4EEB [820660]; MICINN [RTI2018-095390-B-C33
   InEDGEMobility, PID2019-108528RB-C21 ProCode]; US NSF [IIS 1718945, IIS
   1910131, IIP 1916206]; Amazon; EIT Digital; Comunidad de Madrid
   [S2018/TCS-4339 BLOQUES-CM]; EIE Funds of the European Union; DoD; H2020
   Societal Challenges Programme [820660] Funding Source: H2020 Societal
   Challenges Programme
FX Work partially supported by EIT Digital, EU H2020 project BIM4EEB (Grant
   820660), MICINN projects RTI2018-095390-B-C33 InEDGEMobility
   (MCIU/AEI/FEDER, UE), PID2019-108528RB-C21 ProCode, Comunidad de Madrid
   project S2018/TCS-4339 BLOQUES-CM co-funded by EIE Funds of the European
   Union, US NSF (Grants IIS 1718945, IIS 1910131, IIP 1916206), DoD, and
   Amazon.
CR Arias Joaquin, 2021, Advances in Artificial Intelligence: 19th Conference of the Spanish Association for Artificial Intelligence, CAEPIA 2020/2021, Proceedings. Lecture Notes in Computer Science, Lecture Notes in Artificial Intelligence (12882), P258, DOI 10.1007/978-3-030-85713-4_25
   Arias J., 2022, THEOR PRACT LOGIC PR, V22, P51
   Arias J, 2018, THEOR PRACT LOG PROG, V18, P337, DOI 10.1017/S1471068418000285
   Balduccini M, 2017, THEOR PRACT LOG PROG, V17, P462, DOI 10.1017/S1471068417000102
   Banbara M, 2017, THEOR PRACT LOG PROG, V17, P408, DOI 10.1017/S1471068417000138
   BuildingSMART, 2020, IND FDN CLASS IFC
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   HOLZBAUR, 1995, TR9509 AUSTR RES I A
   Lee H, 2016, AUTOMAT CONSTR, V71, P49, DOI 10.1016/j.autcon.2016.04.008
   Li BB, 2020, ETRA'20 FULL PAPERS: ACM SYMPOSIUM ON EYE TRACKING RESEARCH AND APPLICATIONS, DOI 10.1145/3379155.3391334
   Lierler Y, 2023, THEOR PRACT LOG PROG, V23, P195, DOI 10.1017/S1471068421000478
   Pauwels P, 2011, AUTOMAT CONSTR, V20, P506, DOI 10.1016/j.autcon.2010.11.017
   Singapore Government, 2016, COR BIM E SUBM
   Solihin W., 2015, THESIS GEORGIA I TEC
   Zhang C, 2018, SEMANT WEB, V9, P829, DOI 10.3233/SW-180297
   Zhang SJ, 2013, AUTOMAT CONSTR, V29, P183, DOI 10.1016/j.autcon.2012.05.006
NR 16
TC 2
Z9 2
U1 1
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2022
VL 22
IS 5
SI SI
BP 723
EP 738
AR PII S1471068422000138
DI 10.1017/S1471068422000138
EA JUL 2022
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 3T5UT
UT WOS:000825876000001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Bednarczyk, B
   Kieronski, E
   Witkowski, P
AF Bednarczyk, Bartosz
   Kieronski, Emanuel
   Witkowski, Piotr
TI Completing the Picture: Complexity of Graded Modal Logics with Converse
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 16th European Conference on Logics in Artificial Intelligence (JELIA)
CY MAY 07-11, 2019
CL Rende, ITALY
SP Univ Calabria, Dept Math & Comp Sci, Artificial Intelligence Grp, Univ Alta Formazione, Assessorato Istruzione & Attivita Culturali,, Regione Calabria, EurAI, Springer, Altilia S r l, Integris S p a, Intellimech, Magazzini Rossella, NTT Data
DE modal logic; complexity; graded modalities; satisfiability
ID COMPUTATIONAL-COMPLEXITY
AB A complete classification of the complexity of the local and global satisfiability problems for graded modal language over traditional classes of frames has already been established. By "traditional" classes of frames, we mean those characterized by any positive combination of reflexivity, seriality, symmetry, transitivity, and the Euclidean property. In this paper, we fill the gaps remaining in an analogous classification of the graded modal language with graded converse modalities. In particular, we show its NExpTime-completeness over the class of Euclidean frames, demonstrating this way that over this class the considered language is harder than the language without graded modalities or without converse modalities. We also consider its variation disallowing graded converse modalities, but still admitting basic converse modalities. Our most important result for this variation is confirming an earlier conjecture that it is decidable over transitive frames. This contrasts with the undecidability of the language with graded converse modalities.
C1 [Bednarczyk, Bartosz] Tech Univ Dresden, Computat Log Grp, Dresden, Germany.
   [Bednarczyk, Bartosz; Kieronski, Emanuel; Witkowski, Piotr] Univ Wroclaw, Inst Comp Sci, Wroclaw, Poland.
C3 Technische Universitat Dresden; University of Wroclaw
RP Bednarczyk, B (corresponding author), Tech Univ Dresden, Computat Log Grp, Dresden, Germany.; Bednarczyk, B (corresponding author), Univ Wroclaw, Inst Comp Sci, Wroclaw, Poland.
EM bartosz.bednarczyk@cs.uni.wroc.pl; emanuel.kieronski@cs.uni.wroc.pl;
   piotr.witkowski@cs.uni.wroc.pl
OI Bednarczyk, Bartosz/0000-0002-8267-7554; Witkowski,
   Piotr/0000-0002-1908-0827
FU Polish Ministry of Science and Higher Education program "Diamentowy
   Grant" [DI2017 006447]; Polish National Science Centre
   [2016/21/B/ST6/01444]
FX We thank Evgeny Zolin for providing us a comprehensive list of gaps in
   the classification of the complexity of graded modal logics and for
   sharing with us his tikz files with modal cubes. We thank Emil Je.r '
   abek for his explanations concerning K5((sic)). We also thank Tomasz
   Gogacz and Filip Murlak for comments concerning Section 4. Finally, we
   thank the anonymous reviewers for their useful comments and remarks.
   Bartosz Bednarczyk is supported by Polish Ministry of Science and Higher
   Education program "Diamentowy Grant" no. DI2017 006447. Emanuel Kiero '
   nski and Piotr Witkowski are supported by Polish National Science Centre
   grant no. 2016/21/B/ST6/01444.
CR [Anonymous], 2017, An Introduction to Description Logic, DOI DOI 10.1017/9781139025355
   [Anonymous], 2001, MODAL LOGIC
   Bednarczyk B, 2019, LECT NOTES ARTIF INT, V11468, P642, DOI 10.1007/978-3-030-19570-0_42
   Blackburn P, 2007, STUD LOGIC PRACT REA, V3, P1
   Chagrov A. V., 2002, ADV MODAL LOGIC, V4, P71
   Cheng-Chia Chen, 1994, Logical Foundations of Computer Science. Third International Symposium, LFCS '94 Proceedings, P69
   Cook S. A., 1971, Proceedings of the 3rd annual ACM symposium on theory of computing, P151
   Demri S., 2005, Journal of Logic, Language and Information, V14, P289, DOI 10.1007/s10849-005-5788-9
   Gogacz T, 2019, P 28 INT JOINT C ART, P1719
   Gutiérrez-Basulto V, 2017, AAAI CONF ARTIF INTE, P1121
   Kazakov Y, 2007, LECT NOTES ARTIF INT, V4790, P303, DOI 10.1007/978-3-540-75560-9_23
   Kazakov Y, 2009, IEEE S LOG, P407, DOI 10.1109/LICS.2009.17
   Ladner R. E., 1977, SIAM Journal on Computing, V6, P467, DOI 10.1137/0206033
   LUTZ C, 2002, THESIS RWTH AACHEN G
   Pratt-Hartmann I., 2005, Journal of Logic, Language and Information, V14, P369, DOI 10.1007/s10849-005-5791-1
   Pratt-Hartmann I, 2008, B SYMB LOG, V14, P1, DOI 10.2178/bsl/1208358842
   Pratt-Hartmann I, 2007, J LOGIC COMPUT, V17, P133, DOI [10.1093/logcom/exl034, 10.1093/logcom/ex1034]
   Tobies S, 2001, J LOGIC COMPUT, V11, P85, DOI 10.1093/logcom/11.1.85
   TOBIES S, 2001, THESIS RWTH AACHEN G
   Zolin E, 2017, J LOGIC COMPUT, V27, P1398, DOI 10.1093/logcom/exw026
NR 20
TC 1
Z9 1
U1 1
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2021
VL 21
IS 4
SI SI
BP 493
EP 520
DI 10.1017/S1471068421000065
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA ZB6GG
UT WOS:000756937700005
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Fiorentino, A
   Zangari, J
   Manna, M
AF FIORENTINO, A. L. E. S. S. I. O.
   ZANGARI, J. E. S. S. I. C. A.
   MANNA, M. A. R. C. O.
TI DaRLing: A Datalog rewriter for OWL 2 RL ontological reasoning under
   SPARQL queries
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE Datalog; OWL 2 RL; SPARQL; Query Answering
AB The W3C Web Ontology Language (OWL) is a powerful knowledge representation formalism at the basis of many semantic-centric applications. Since its unrestricted usage makes reasoning undecidable already in case of very simple tasks, expressive yet decidable fragments have been identified. Among them, we focus on OWL 2 RL, which offers a rich variety of semantic constructors, apart from supporting all RDFS datatypes. Although popular Web resources - such as DBpedia - fall in OWL 2 RL, only a few systems have been designed and implemented for this fragment. None of them, however, fully satisfy all the following desiderata:(i)being freely available and regularly maintained;(ii)supporting query answering and SPARQL queries;(iii)properly applying thesameAsproperty without adopting the unique name assumption;(iv)dealing with concrete datatypes. To fill the gap, we presentDaRLing, a freely available Datalog rewriter for OWL 2 RL ontological reasoning under SPARQL queries. In particular, we describe its architecture, the rewriting strategies it implements, and the result of an experimental evaluation that demonstrates its practical applicability.
C1 [FIORENTINO, A. L. E. S. S. I. O.; ZANGARI, J. E. S. S. I. C. A.; MANNA, M. A. R. C. O.] Univ Calabria, Dept Math & Comp Sci DeMaCS, Arcavacata Di Rende, Italy.
C3 University of Calabria
RP Fiorentino, A (corresponding author), Univ Calabria, Dept Math & Comp Sci DeMaCS, Arcavacata Di Rende, Italy.
EM fiorentino@mat.unical.it; zangari@mat.unical.it; manna@mat.unical.it
RI Zangari, Jessica/AAA-6522-2021; Manna, Marco/G-8966-2012
OI Zangari, Jessica/0000-0002-6418-7711; Manna, Marco/0000-0003-3323-9328;
   Fiorentino, Alessio/0000-0002-3298-0256
FU MISE under the project "S2BDW" -Horizon 2020 PON IC 2014-2020
   [F/050389/01-03/X32]; Regione Calabria under the project "DLV
   LargeScale" -POR Calabria 2014-2020 [CUP J28C17000220006]
FX This work has been partially supported by MISE under the project "S2BDW"
   (F/050389/01-03/X32) -Horizon 2020 PON I&C 2014-2020 and by Regione
   Calabria under the project "DLV LargeScale" (CUP J28C17000220006) -POR
   Calabria 2014-2020.
CR ALLOCCA C., 2019, CEUR WORKSHOP P, V2368, P10
   Alviano M, 2019, THEOR PRACT LOG PROG, V19, P654, DOI 10.1017/S1471068419000115
   [Anonymous], 2018, SPARQL 1 1 QUERY LAN
   Auer S, 2007, LECT NOTES COMPUT SC, V4825, P722, DOI 10.1007/978-3-540-76298-0_52
   Baader F, 2008, FOUND ARTIF INTELL, P135, DOI 10.1016/S1574-6526(07)03003-9
   Baget JF, 2015, LECT NOTES COMPUT SC, V9202, P328, DOI 10.1007/978-3-319-21542-6_21
   Bienvenu M., 2016, P 25 INT JOINT C ART, P4058
   Calimeri F, 2016, LECT NOTES COMPUT SC, V10037, P192, DOI 10.1007/978-3-319-49130-1_15
   Calvanese D, 2017, SEMANT WEB, V8, P471, DOI 10.3233/SW-160217
   Calvanese D, 2011, SEMANT WEB, V2, P43, DOI 10.3233/SW-2011-0029
   Carral D, 2019, LECT NOTES COMPUT SC, V11779, P19, DOI 10.1007/978-3-030-30796-7_2
   Ceri S., 1989, IEEE Transactions on Knowledge and Data Engineering, V1, P146, DOI 10.1109/69.43410
   EITER T., 2012, P AAAI 12
   Faruqui R.U., 2013, LNCS, V7789, P105, DOI DOI 10.1007/978-3-642-39088-3_7
   Grau BC, 2008, J WEB SEMANT, V6, P309, DOI 10.1016/j.websem.2008.05.001
   Guo YB, 2005, J WEB SEMANT, V3, P158, DOI 10.1016/j.websem.2005.06.005
   HORRIDGE M., 2009, CEUR WORKSHOP PROC, V529
   Kazakov Y, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P2040
   KROTZSCH M., 2010, CEUR WORKSHOP P, V573
   Leone N, 2019, LECT NOTES ARTIF INT, V11481, P312, DOI 10.1007/978-3-030-20528-7_23
   Leone N, 2019, ACM T COMPUT LOG, V20, DOI 10.1145/3308448
   Motik B, 2012, OWL 2 Web Ontology Language Profiles
   Nenov Y, 2015, LECT NOTES COMPUT SC, V9367, P3, DOI 10.1007/978-3-319-25010-6_1
   Sirin Evren., 2007, OWLED, V258
   Smith M., 2004, OWL web ontology language: guide
   W3C OWL Working Group, 2012, OWL 2 Web Ontology Language Document Overview
   Xiao G., 2012, Semantic Web and Web Science - 6th Chinese Semantic Web Symposium and 1st Chinese Web Science Conference, CSWS 2012, Shenzhen, China, November 28-30, P383, DOI DOI 10.1007/978-1-4614-6880-633
NR 27
TC 3
Z9 3
U1 0
U2 8
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2020
VL 20
IS 6
SI SI
BP 958
EP 973
AR PII S1471068420000204
DI 10.1017/S1471068420000204
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR3IT
UT WOS:000571456800011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Talbot, P
   Monfroy, E
   Truchet, C
AF TALBOT, P. I. E. R. R. E.
   MONFROY, E. R. I. C.
   TRUCHET, C. H. A. R. L. O. T. T. E.
TI Modular Constraint Solver Cooperation via Abstract Interpretation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE abstract domains; solver cooperation; modularity; constraint programming
AB Cooperation among constraint solvers is difficult because different solving paradigms have different theoretical foundations. Recent works have shown that abstract interpretation can provide a unifying theory for various constraint solvers. In particular, it relies on abstract domains which capture constraint languages as ordered structures. The key insight of this paper is viewing cooperation schemes as abstract domains combinations. We propose a modular framework in which solvers and cooperation schemes can be seamlessly added and combined. This differs from existing approaches such as SMT where the cooperation scheme is usually fixed (e.g., Nelson-Oppen). We contribute to two new cooperation schemes: (i)interval propagators completionthat allows abstract domains to exchange bound constraints, and (ii)delayed productwhich exchanges over-approximations of constraints between two abstract domains. Moreover, the delayed product is based on delayed goal of logic programming, and it shows that abstract domains can also capture control aspects of constraint solving. Finally, to achieve modularity, we propose theshared productto combine abstract domains and cooperation schemes. Our approach has been fully implemented, and we provide various examples on the flexible job shop scheduling problem.
C1 [TALBOT, P. I. E. R. R. E.] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SNT, Esch Sur Alzette, Luxembourg.
   [MONFROY, E. R. I. C.] Univ Angers, Angers, France.
   [TRUCHET, C. H. A. R. L. O. T. T. E.] Univ Nantes, Nantes, France.
C3 University of Luxembourg; Universite d'Angers; Nantes Universite
RP Talbot, P (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SNT, Esch Sur Alzette, Luxembourg.
EM pierre.talbot@uni.lu; eric.monfroy@univ-angers.fr;
   charlotte.truchet@univ-nantes.fr
OI Talbot, Pierre/0000-0001-9202-4541
FU French Agence Nationale de la Recherche [ANR-15-CE25-0002]; Agence
   Nationale de la Recherche (ANR) [ANR-15-CE25-0002] Funding Source:
   Agence Nationale de la Recherche (ANR)
FX This work was partially supported by ANR-15-CE25-0002 Coverif from the
   French Agence Nationale de la Recherche. The Centre de calcul intensif
   des Pays de la Loire (CCIPL) provided the infrastructure to perform the
   benchmarks. The authors thank the anonymous reviewers for their
   constructive comments to improve the clarity of the paper. We thank
   Yinghan Ling for the English proofreading.
CR [Anonymous], 2019, MODELING PROGRAMMING
   Apt KR, 1999, THEOR COMPUT SCI, V221, P179, DOI 10.1016/S0304-3975(99)00032-8
   Benhamou F, 1999, LOGIC PROGRAMM, P230
   BRUCKER P, 1990, COMPUTING, V45, P369, DOI 10.1007/BF02238804
   Cousot P, 2012, J ACM, V59, DOI 10.1145/2395116.2395120
   D'Silva V, 2014, ACM SIGPLAN NOTICES, V49, P139, DOI 10.1145/2535838.2535868
   Estévez-Martín S, 2009, THEOR PRACT LOG PROG, V9, P415, DOI 10.1017/S1471068409003780
   Fernández FJ, 2004, ACM T PROGR LANG SYS, V26, P1, DOI 10.1145/963778.963779
   HURINK J, 1994, OR SPEKTRUM, V15, P205, DOI 10.1007/BF01719451
   Mine A., 2006, Higher-Order and Symbolic Computation, V19, P31, DOI 10.1007/s10990-006-8609-1
   Monfroy E., 1998, ELECT NOTES THEORETI, V16, P1, DOI [10.1016/S1571-0661(05)80588-2, DOI 10.1016/S1571-0661(05)80588-2]
   Nelson G., 1979, ACM Transactions on Programming Languages and Systems, V1, P245, DOI 10.1145/357073.357079
   Ohrimenko O, 2009, CONSTRAINTS, V14, P357, DOI 10.1007/s10601-008-9064-x
   Older W., 1993, 1 WORKSH PRINC PRACT, P239
   Pelleau M, 2013, LECT NOTES COMPUT SC, V7737, P434
   Schutt A, 2013, LECT NOTES COMPUT SC, V8124, P628, DOI 10.1007/978-3-642-40627-0_47
   Siegele D, 2007, PRES VES P, P1021
   Talbot P., 2020, MODULAR CONSTRAINT S
   Talbot P, 2019, PROCEEDINGS OF THE 21ST INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING (PPDP 2019), DOI 10.1145/3354166.3354183
   Talbot P, 2019, PROC INT C TOOLS ART, P50, DOI 10.1109/ICTAI.2019.00016
   Ziat G., 2019, NSAD 19
NR 21
TC 0
Z9 0
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2020
VL 20
IS 6
SI SI
BP 848
EP 863
AR PII S1471068420000162
DI 10.1017/S1471068420000162
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR3IT
UT WOS:000571456800004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Caroprese, L
   Zumpano, E
AF Caroprese, Luciano
   Zumpano, Ester
TI A Logic Frame work for P2P Deductive Databases
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE peer data exchange; incompleteness; inconsistency; integrity
   constraints; relational databases; prioritized logic program
ID DATA EXCHANGE; DATA INTEGRATION; INCONSISTENCY TOLERANCE; SCHEMA
   MEDIATION; CONSISTENCY; SEMANTICS; TRUST
AB This paper presents a logic framework for modeling the interaction among deductive databases in a peer-to-peer (P2P) environment. Each peer joining a P2P system provides or imports data from its neighbors by using a set of mapping rules, that is, a set of semantic correspondences to a set of peers belonging to the same environment. By using mapping rules, as soon as it enters the system, a peer can participate and access all data available in its neighborhood, and through its neighborhood it becomes accessible to all the other peers in the system. A query can be posed to any peer in the system and the answer is computed by using locally stored data and all the information that can be consistently imported from the neighborhood. Two different types of mapping rules are defined: mapping rules allowing to import a maximal set of atoms not leading to inconsistency (called maximal mapping rules) and mapping rules allowing to import a minimal set of atoms needed to restore consistency (called minimal mapping rules). Implicitly, the use of maximal mapping rules states it is preferable to import as long as no inconsistencies arise; whereas the use of minimal mapping rules states that it is preferable not to import unless a inconsistency exists. The paper presents three different declarative semantics of a P2P system: (i) the Max Weak Model Semantics, in which mapping rules are used to import as much knowledge as possible from a peer's neighborhood without violating local integrity constraints; (ii) the Min Weak Model Semantics, in which the P2P system can be locally inconsistent and the information provided by the neighbors is used to restore consistency, that is, to only integrate the missing portion of a correct, but incomplete database; (iii) the Max-Min Weak Model Semantics that unifies the previous two different perspectives captured by the Max Weak Model Semantics and Min Weak Model Semantics. This last semantics allows to characterize each peer in the neighborhood as a resource used either to enrich (integrate) or to fix (repair) the knowledge, so as to define a kind of integrate-repair strategy for each peer. For each semantics, the paper also introduces an equivalent and alternative characterization, obtained by rewriting each mapping rule into prioritized rules so as to model a P2P system as a prioritized logic program. Finally, results about the computational complexity of P2P logic queries are investigated by considering brave and cautious reasoning.
C1 [Caroprese, Luciano; Zumpano, Ester] Univ Calabria, Dept Comp Modelling Elect & Syst Engn, Arcavacata Di Rende, CS, Italy.
C3 University of Calabria
RP Caroprese, L (corresponding author), Univ Calabria, Dept Comp Modelling Elect & Syst Engn, Arcavacata Di Rende, CS, Italy.
EM l.caroprese@dimes.unical.it; e.zumpano@dimes.unical.it
RI Caroprese, Luciano/AGS-3720-2022
OI Caroprese, Luciano/0000-0002-0173-0131
CR Abiteboul S., 1998, Proceedings of the Seventeenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems. PODS 1998, P254, DOI 10.1145/275487.275516
   Abiteboul S, 1995, FDN DATABASES
   Adjiman P, 2006, J ARTIF INTELL RES, V25, P269, DOI 10.1613/jair.1785
   Antoniou G., 1997, Nonmonotonic reasoning
   Arenas M., 1999, Proceedings of the Eighteenth ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems, P68, DOI 10.1145/303976.303983
   Ariew R, 1976, OCKHAMS RAZOR HIST P
   BENELIYAHU R, 1992, JOINT INT C S LOG PR, P813
   BERNSTEIN PA, 2002, P 5 INT WORKSH WEB D, P89
   Bertossi L, 2004, LECT NOTES COMPUT SC, V3268, P476
   Bertossi L, 2007, LECT NOTES ARTIF INT, V4790, P107, DOI 10.1007/978-3-540-75560-9_10
   Bertossi L, 2017, THEOR PRACT LOG PROG, V17, P148, DOI 10.1017/S147106841600017X
   Bikakis A, 2011, KNOWL INF SYST, V27, P45, DOI 10.1007/s10115-010-0293-0
   Binas A., 2008, P 11 INT C PRINC KNO, P329
   Brewka G, 1999, ARTIF INTELL, V109, P297, DOI 10.1016/S0004-3702(99)00015-6
   Brewka Gerhard., 2003, IJCAI, P867
   Brewka Gerhard., 2007, Proceedings of the 22nd national conference on Artificial intelligence - Volume 1, V1, P385
   Buccafurri F, 2000, IEEE T KNOWL DATA EN, V12, P845, DOI 10.1109/69.877512
   Calì A, 2004, INFORM SYST, V29, P147, DOI 10.1016/S0306-4379(03)00050-4
   Cali A., 2003, P 22 ACM SIGACT SIGM, P260, DOI DOI 10.1145/773153.773179
   Calimeri F, 2006, FUND INFORM, V71, P183
   Calvanese D, 2005, LECT NOTES COMPUT SC, V3774, P90
   Calvanese D, 2004, LECT NOTES COMPUT SC, V2944, P77
   Calvanese D, 2008, INFORM SYST, V33, P360, DOI 10.1016/j.is.2008.01.007
   Calvanese Diego., 2004, P 23 ACM SIGMOD SIGA, P241
   Caroprese L, 2007, LECT NOTES ARTIF INT, V4772, P230
   Caroprese L, 2017, COMM COM INF SC, V767, P91, DOI 10.1007/978-3-319-67162-8_11
   Caroprese Luciano, 2012, Scalable Uncertainty Management. Proceedings of the 6th International Conference, SUM 2012, P168, DOI 10.1007/978-3-642-33362-0_13
   Caroprese Luciano, 2012, Foundations of Information and Knowledge Systems. Proceedings 7th International Symposium, FoIKS 2012, P91, DOI 10.1007/978-3-642-28472-4_6
   Caroprese L, 2008, LECT NOTES ARTIF INT, V4994, P225
   Caroprese L, 2006, INT DATABASE ENG APP, P285
   Caroprese L, 2006, ICEIS 2006: PROCEEDINGS OF THE EIGHTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATIONAL SYSTEMS, P38
   Caroprese L, 2017, 19TH INTERNATIONAL CONFERENCE ON INFORMATION INTEGRATION AND WEB-BASED APPLICATIONS & SERVICES (IIWAS2017), P258, DOI 10.1145/3151759.3151768
   Caroprese L, 2011, PROCEEDINGS OF THE 15TH INTERNATIONAL DATABASE ENGINEERING & APPLICATIONS SYMPOSIUM (IDEAS '11), P1
   Chatalic P, 2006, FRONT ARTIF INTEL AP, V141, P352
   Delgrande JP, 2003, THEOR PRACT LOG PROG, V3, P129, DOI 10.1017/S1471068402001539
   Eiter T, 2014, ARTIF INTELL, V216, P233, DOI 10.1016/j.artint.2014.07.008
   Eiter Thomas, 2010, P 12 INT C PRINC KNO
   Fagin R, 2005, THEOR COMPUT SCI, V336, P89, DOI 10.1016/j.tcs.2004.10.033
   Fagin R, 2005, ACM T DATABASE SYST, V30, P174, DOI 10.1145/1061318.1061323
   Franconi E, 2004, LECT NOTES COMPUT SC, V3268, P446
   Franconi E., 2004, Proceedings of the Thirstiest International Conference on Very Large Databases (VLDB04), P1277
   Franconi Enrico., 2003, DBISP2P, P64
   Fuxman A, 2006, ACM T DATABASE SYST, V31, P1454, DOI 10.1145/1189769.1189778
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Greco G, 2003, IEEE T KNOWL DATA EN, V15, P1389, DOI 10.1109/TKDE.2003.1245280
   Gribble S.D., 2001, PROC 4 INT WORKSHOP, P31
   Halevy AY, 2005, VLDB J, V14, P68, DOI 10.1007/s00778-003-0116-y
   Halevy AY, 2003, PROC INT CONF DATA, P505, DOI 10.1109/ICDE.2003.1260817
   Lenzerini  M., 2002, P 21 ACM SIGMOD SIGA
   Leone N., 2005, P 2005 ACM SIGMOD IN, P915
   Lonc Z, 2000, LECT NOTES ARTIF INT, V1861, P673
   Madhavan J., 2003, VLDB, P572
   MAREK V. W, 1993, ARTIF INTELL, P1
   Nute D., 1994, Handbook of Logic in Artificial Intelligence and Logic Programming, V3, P353
   Papadimitriou CH, 1994, COMPUT COMPLEX, P1
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   ROUSSET M, 2006, MOVE MEANINGFUL INTE
   Sakama C, 2000, ARTIF INTELL, V123, P185, DOI 10.1016/S0004-3702(00)00054-0
   Tatarinov Igor., 2004, P ACM SIGMOD INT C M, P539, DOI DOI 10.1145/1007568.1007629
   Van Gelder A., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P1, DOI 10.1145/73721.73722
NR 60
TC 5
Z9 5
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2020
VL 20
IS 1
BP 1
EP 43
DI 10.1017/S1471068419000073
PG 43
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA JZ2EH
UT WOS:000504915200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sharma, A
AF Sharma, Arpit
TI Using Answer Set Programming for Commonsense Reasoning in the Winograd
   Schema Challenge
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Answer Set Programming; Winograd Schema Challenge; Commonsense
   Reasoning; Graph-Subgraph Isomorphism
AB The Winograd Schema Challenge (WSC) is a natural language understanding task proposed as an alternative to the Turing test in 2011. In this work we attempt to solve WSC problems by reasoning with additional knowledge. By using an approach built on top of graph-subgraph isomorphism encoded using Answer Set Programming (ASP) we were able to handle 240 out of 291 WSC problems. The ASP encoding allows us to add additional constraints in an elaboration tolerant manner. In the process we present a graph based representation of WSC problems as well as relevant commonsense knowledge.
C1 [Sharma, Arpit] Arizona State Univ, Tempe, AZ 85281 USA.
C3 Arizona State University; Arizona State University-Tempe
RP Sharma, A (corresponding author), Arizona State Univ, Tempe, AZ 85281 USA.
EM asharm73@asu.edu
RI Sharma, Arpit/AAG-2707-2021
OI Sharma, Arpit/0000-0002-0966-2890
CR [Anonymous], 14 INT C PRINC KNOWL
   [Anonymous], 2015, S LOG FORM COMM REAS
   Banarescu L., 2013, P 7 LING ANN WORKSH, P178
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Cordella LP, 2004, IEEE T PATTERN ANAL, V26, P1367, DOI 10.1109/TPAMI.2004.75
   Emami A, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P1949
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Isaak N, 2016, FRONT ARTIF INTEL AP, V284, P75, DOI 10.3233/978-1-61499-682-8-75
   Levesque H. J., 2011, AAAI SPR S LOG FORM, V46, P47
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Liu QL, 2017, IEEE INT CONF ELECTR, P344, DOI 10.1109/ICEIEC.2017.8076578
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Radford A., 2019, LANGUAGE MODELS ARE
   RICHARD-BOLLANS A, 2018, CEUR WORKSHOP P
   Sharma A., 2015, Proceedings of the 3rd Workshop on EVENTS at the NAACL-HLT, P82
   Sharma A, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P1319
   WOLFF J. G, 2018, ARXIV181004554
NR 17
TC 4
Z9 4
U1 0
U2 8
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 1021
EP 1037
DI 10.1017/S1471068419000334
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500025
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gaggl, SA
   Manthey, N
   Ronca, A
   Wallner, JP
   Woltran, S
AF Gaggl, Sarah A.
   Manthey, Norbert
   Ronca, Alessandro
   Wallner, Johannes P.
   Woltran, Stefan
TI Improved answer-set programming encodings for abstract argumentation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
DE Answer-Set Programming; Abstract Argumentation; Implementation; ASPARTIX
ID COMPLEXITY; SEMANTICS
AB The design of efficient solutions for abstract argumentation problems is a crucial step towards advanced argumentation systems. One of the most prominent approaches in the literature is to use Answer-Set Programming (ASP) for this endeavor. In this paper, we present new encodings for three prominent argumentation semantics using the concept of conditional literals in disjunctions as provided by the ASP-system clingo. Our new encodings are not only more succinct than previous versions, but also outperform them on standard benchmarks.
C1 [Gaggl, Sarah A.; Manthey, Norbert] Tech Univ Dresden, Dresden, Germany.
   [Ronca, Alessandro] Univ Roma La Sapienza, Rome, Italy.
   [Wallner, Johannes P.] Univ Helsinki, Dept Comp Sci, HIIT, FIN-00014 Helsinki, Finland.
   [Woltran, Stefan] Vienna Univ Technol, Vienna, Austria.
C3 Technische Universitat Dresden; Sapienza University Rome; University of
   Helsinki; Technische Universitat Wien
RP Gaggl, SA (corresponding author), Tech Univ Dresden, Dresden, Germany.
RI Gaggl, Sarah Alice/AFK-5227-2022; Gaggl, Sarah/AFK-5232-2022; Gaggl,
   Sarah Alice/AAG-3804-2022; Gaggl, Sarah/AAG-3808-2022; Ronca,
   Alessandro/AAO-9216-2020
OI Gaggl, Sarah/0000-0003-2425-6089; Gaggl, Sarah/0000-0003-2425-6089;
   Ronca, Alessandro/0000-0002-0131-2087
FU Austrian Science Fund (FWF) [Y698, I1102]; German Research Foundation
   (DFG) [HO 1294/11-1]; Academy of Finland [251170 COIN, 284591]
FX This work has been funded by the Austrian Science Fund (FWF) through
   projects Y698 and I1102, by the German Research Foundation (DFG) through
   project HO 1294/11-1, and by Academy of Finland through grants 251170
   COIN and 284591.
CR [Anonymous], 2015, Potassco User Guide
   Baroni P, 2011, KNOWL ENG REV, V26, P365, DOI 10.1017/S0269888911000166
   Besnard P., 2008, ELEMENTS ARGUMENTATI
   Bistarelli S, 2011, PROC INT C TOOLS ART, P605, DOI 10.1109/ICTAI.2011.96
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Caminada M, 2007, ARTIF INTELL, V171, P286, DOI 10.1016/j.artint.2007.02.003
   Caminada Martin., 2007, BNAIC, P81
   Caminada MWA, 2012, J LOGIC COMPUT, V22, P1207, DOI 10.1093/logcom/exr033
   Cerutti F, 2014, FRONT ARTIF INTEL AP, V266, P459, DOI 10.3233/978-1-61499-436-7-459
   Cerutti F, 2014, FRONT ARTIF INTEL AP, V266, P455, DOI 10.3233/978-1-61499-436-7-455
   Charwat G, 2015, ARTIF INTELL, V220, P28, DOI 10.1016/j.artint.2014.11.008
   Dimopoulos Y, 1996, THEOR COMPUT SCI, V170, P209, DOI 10.1016/S0304-3975(96)80707-9
   Dung PM, 2007, ARTIF INTELL, V171, P642, DOI 10.1016/j.artint.2007.05.003
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Dunne PE, 2008, LECT NOTES ARTIF INT, V5293, P153, DOI 10.1007/978-3-540-87803-2_14
   Dunne PE, 2014, FOURTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P72
   Dunne PE, 2009, ARGUMENTATION IN ARTIFICIAL INTELLIGENCE, P85, DOI 10.1007/978-0-387-98197-0_5
   Dunne PE, 2002, ARTIF INTELL, V141, P187, DOI 10.1016/S0004-3702(02)00261-8
   Dvorak Wolfgang, 2013, Applications of Declarative Programming and Knowledge Management. 19th International Conference, INAP 2011 and 25th Workshop on Logic Programming, WLP 2011. Revised Selected Papers 7773, P114, DOI 10.1007/978-3-642-41524-1_7
   Dvorák W, 2014, ARTIF INTELL-AMST, V206, P53, DOI 10.1016/j.artint.2013.10.001
   Dvorák W, 2010, INFORM PROCESS LETT, V110, P425, DOI 10.1016/j.ipl.2010.04.005
   Egly U, 2010, ARGUM COMPUT, V1, P147, DOI 10.1080/19462166.2010.486479
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P821, DOI 10.1017/S1471068411000329
   Gelfond M., 1991, NEW GENERAT COMPUT, V9, P365, DOI DOI 10.1007/BF03037169
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Rahwan I, 2009, ARGUMENTATION IN ARTIFICIAL INTELLIGENCE, P1, DOI 10.1007/978-0-387-98197-0
   Syrjanen T, 2009, THESIS
   Toni Francesca, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P164, DOI 10.1007/978-3-642-20832-4_11
   Vallati M, 2014, FRONT ARTIF INTEL AP, V263, P1117, DOI 10.3233/978-1-61499-419-0-1117
   Verheij B., 1996, P 8 DUTCH C ART INT, P357
NR 30
TC 21
Z9 21
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 434
EP 448
DI 10.1017/S1471068415000149
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Harrison, A
   Lifschitz, V
   Truszczynski, M
AF Harrison, Amelia
   Lifschitz, Vladimir
   Truszczynski, Miroslaw
TI Rapid Publication On equivalence of infinitary formulas under the stable
   model semantics
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; semantics of aggregates; intuitionistic logic;
   strong equivalence
AB Propositional formulas that are equivalent in intuitionistic logic, or in its extension known as the logic of here-and-there, have the same stable models. We extend this theorem to propositional formulas with infinitely long conjunctions and disjunctions and show how to apply this generalization to proving properties of aggregates in answer set programming.
C1 [Harrison, Amelia; Lifschitz, Vladimir] Univ Texas Austin, Dept Comp Sci, Austin, TX 78712 USA.
   [Truszczynski, Miroslaw] Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
C3 University of Texas System; University of Texas Austin; University of
   Kentucky
RP Harrison, A (corresponding author), Univ Texas Austin, Dept Comp Sci, Austin, TX 78712 USA.
EM ameliaj@cs.utexas.edu
CR [Anonymous], 1935, ACTA SCI MATH
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Harrison A., 2013, THEORY PRACTICE LO S
   Harrison A, 2013, LECT NOTES COMPUT SC, V8148, P387, DOI 10.1007/978-3-642-40564-8_38
   HOSOI T, 1966, J FAC SCI U TOKYO 1, V13, P183
   Karp C. R., 1964, LANGUAGES EXPRESSION
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lifschitz V., 2012, 5 WORKSH ANSW SET PR
   Lifschitz V, 2008, FOUND ARTIF INTELL, P3, DOI 10.1016/S1574-6526(07)03001-5
   Pearce D, 1997, LECT NOTES ARTIF INT, V1216, P57, DOI 10.1007/BFb0023801
   Scott D., 1958, C MATH, V6, P165, DOI DOI 10.4064/CM-6-1-165-170
   Truszczynski M., 2012, Lecture Notes in Computer Science, V7265, P543
NR 13
TC 8
Z9 8
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2015
VL 15
BP 18
EP 34
DI 10.1017/S1471068414000088
PN 1
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA CB5LK
UT WOS:000349668400002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Inclezan, D
AF Inclezan, Daniela
TI Rapid Publication An application of answer set programming to the field
   of second language acquisition
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; second language acquisition; qualitative
   scientific theories; natural language
ID PROCESSING INSTRUCTION; DICTOGLOSS; KNOWLEDGE
AB This paper explores the contributions of Answer Set Programming ( ASP) to the study of an established theory from the field of Second Language Acquisition: Input Processing. The theory describes default strategies that learners of a second language use in extracting meaning out of a text based on their knowledge of the second language and their background knowledge about the world. We formalized this theory in ASP, and as a result we were able to determine opportunities for refining its natural language description, as well as directions for future theory development. We applied our model to automating the prediction of how learners of English would interpret sentences containing the passive voice. We present a system, PIas, that uses these predictions to assist language instructors in designing teaching materials.
C1 Miami Univ, Dept Comp Sci & Software Engn, Oxford, OH 45056 USA.
C3 University System of Ohio; Miami University
RP Inclezan, D (corresponding author), Miami Univ, Dept Comp Sci & Software Engn, Oxford, OH 45056 USA.
EM inclezd@MiamiOH.edu
CR [Anonymous], 2008, KR
   Balduccini M, 2003, THEOR PRACT LOG PROG, V3, P425, DOI 10.1017/S1471068403001807
   Balduccini M., 2011, LNCS, V6565, P377
   Balduccini M, 2010, THEOR PRACT LOG PROG, V10, P725, DOI 10.1017/S1471068410000384
   BARAL C, 1994, J LOGIC PROGRAM, V20, P73, DOI 10.1016/0743-1066(94)90025-6
   Baral C, 2009, THEOR PRACT LOG PROG, V9, P57, DOI 10.1017/S1471068408003645
   Dijkstra T, 1998, PSYCHOL BELG, V38, P177
   Dijkstra T., 2002, BILING-LANG COGN, V33, P600
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1998, Electron. Trans. Artif. Intell., V2, P193
   Inclezan D, 2012, P 14 INT WORKSH NONM
   Lee J., 2003, MAKING COMMUNICATIVE, V2nd
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   NIEMELA I., 1998, P WORKSHOP COMPUTATI, P72
   Qin JJ, 2008, LANG TEACH RES, V12, P61, DOI 10.1177/1362168807084494
   VANPATTEN B, 1993, FOREIGN LANG ANN, V26, P435, DOI 10.1111/j.1944-9720.1993.tb01179.x
   VanPatten B, 2004, SEC LANG ACQ RES, P5
   VanPatten B, 2002, LANG LEARN, V52, P755, DOI 10.1111/1467-9922.00203
   VanPatten B., 1993, Studies in Second Language Acquisition, V15, P225, DOI [DOI 10.1017/S0272263100011979, 10.1017/S0272263100011979]
   VanPatten B., 1984, Hispanic Linguistics, V1, P57
   VanPatten B., 2003, From input to output: A teacher's guide to second language acquisition
   VanPatten B, 2009, FOREIGN LANG ANN, V42, P557, DOI 10.1111/j.1944-9720.2009.01033.x
NR 22
TC 2
Z9 4
U1 0
U2 8
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2015
VL 15
BP 1
EP 17
DI 10.1017/S1471068413000653
PN 1
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Science & Technology - Other Topics
GA CB5LK
UT WOS:000349668400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gange, G
   Navas, JA
   Schachte, P
   Sondergaard, H
   Stuckey, PJ
AF Gange, Graeme
   Navas, Jorge A.
   Schachte, Peter
   Sondergaard, Harald
   Stuckey, Peter J.
TI Failure tabled constraint logic programming by interpolation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
AB We present a new execution strategy for constraint logic programs called Failure Tabled CLP. Similarly to Tabled CLP our strategy records certain derivations in order to prune further derivations. However, our method only learns from failed derivations. This allows us to compute interpolants rather than constraint projection for generation of reuse conditions. As a result, our technique can be used where projection is too expensive or does not exist. Our experiments indicate that Failure Tabling can speed up the execution of programs with many redundant failed derivations as well as achieve termination in the presence of infinite executions.
C1 [Gange, Graeme; Navas, Jorge A.; Schachte, Peter; Sondergaard, Harald; Stuckey, Peter J.] Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic 3010, Australia.
C3 University of Melbourne
RP Gange, G (corresponding author), Univ Melbourne, Dept Comp & Informat Syst, Melbourne, Vic 3010, Australia.
EM gkgange@unimelb.edu.au; jorge.navas@unimelb.edu.au;
   schachte@unimelb.edu.au; harald@unimelb.edu.au; pstuckey@unimelb.edu.au
RI ; Schachte, Peter/H-4848-2016
OI Stuckey, Peter/0000-0003-2186-0459; Gange, Graeme/0000-0002-1354-431X;
   Schachte, Peter/0000-0001-5959-3769; Sondergaard,
   Harald/0000-0002-2352-1883
FU Australian Research Council through Discovery Project Grant
   [DP110102579]
FX We wish to thank Jose. F. Morales for providing support integrating
   MathSAT into Ciao and Manuel Carro and Corneliu Popeea for fruitful
   discussions about tabling and interpolation, respectively. We
   acknowledge support of the Australian Research Council through Discovery
   Project Grant DP110102579.
CR Angelis E. D., 2012, CILC, P89
   [Anonymous], 1957, J. Symb. Log., DOI DOI 10.2307/2963593
   Beyer Dirk, 2007, International Journal on Software Tools for Technology Transfer, V9, P505, DOI 10.1007/s10009-007-0044-z
   de Guzmán PC, 2012, LECT NOTES COMPUT SC, V7294, P104, DOI 10.1007/978-3-642-29822-6_11
   Cimatti A, 2008, LECT NOTES COMPUT SC, V4963, P397, DOI 10.1007/978-3-540-78800-3_30
   Codognet Philippe, 1995, S EXH IND APPL PROL
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   Grebenshchikov S, 2012, ACM SIGPLAN NOTICES, V47, P405, DOI 10.1145/2345156.2254112
   Griggio A., 2012, J STAT BOOLEAN MODEL, V8, P1
   Gulwani S, 2009, ACM SIGPLAN NOTICES, V44, P127, DOI 10.1145/1594834.1480898
   Gupta A., 2011, LNCS, V7078, P188, DOI DOI 10.1007/978-3-642-25318-8_
   Gupta A, 2011, ACM SIGPLAN NOTICES, V46, P331, DOI 10.1145/1925844.1926424
   Henzinger TA, 2004, ACM SIGPLAN NOTICES, V39, P232, DOI 10.1145/982962.964021
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Jaffar J., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P111, DOI 10.1145/41625.41635
   Jaffar Joxan, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P758, DOI 10.1007/978-3-642-31424-7_61
   Jaffar J, 2009, LECT NOTES COMPUT SC, V5732, P454, DOI 10.1007/978-3-642-04244-7_37
   Jaffar Joxan, 2008, AAAI, P297
   Jhala R, 2006, LECT NOTES COMPUT SC, V3920, P459
   Marriott K., 1998, Introduction to Constraint Logic Programming
   McMillan K. L., 2011, 2011 Formal Methods in Computer-Aided Design (FMCAD), P19
   McMillan KL, 2010, LECT NOTES COMPUT SC, V6174, P104, DOI 10.1007/978-3-642-14295-6_10
   Parker David, 2012, Proceedings. Lecture Notes in Computer Science, P248, DOI [10.1007/978-3-642-31759-0_19, DOI 10.1007/978-3-642-31759-0_19, DOI 10.1007/978-3-642-31759-019]
   Rummer Philipp, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P347, DOI 10.1007/978-3-642-39799-8_24
   TAMAKI H, 1986, LECT NOTES COMPUT SC, V225, P84
   WARREN DS, 1992, COMMUN ACM, V35, P93, DOI 10.1145/131295.131299
NR 26
TC 12
Z9 12
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 593
EP 607
DI 10.1017/S1471068413000379
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400010
DA 2024-07-18
ER

PT J
AU Sneyers, J
   De Schreye, D
   Frühwirth, T
AF Sneyers, Jon
   De Schreye, Danny
   Fruehwirth, Thom
TI Probabilistic legal reasoning in CHRiSM
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
AB Riveret et al. have proposed a framework for probabilistic legal reasoning. Their goal is to determine the chance of winning a court case, given the probabilities of the judge accepting certain claimed facts and legal rules.
   In this paper we tackle the same problem by defining and implementing a new formalism, called probabilistic argumentation logic, which can be seen as a probabilistic generalization of Nute's defeasible logic. Not only does this provide an automation of the - only hand-performed - computations in Riveret et al, it also provides a solution to one of their open problems: a method to determine the initial probabilities from a given body of precedents.
C1 [Sneyers, Jon; De Schreye, Danny] Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
   [Fruehwirth, Thom] Univ Ulm, D-89069 Ulm, Germany.
C3 KU Leuven; Ulm University
RP Sneyers, J (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
EM Jon.Sneyers@cs.kuleuven.be; Danny.Deschreye@cs.kuleuven.be;
   thom.fruehwirth@uni-ulm.de
RI De Schreye, Daniel/B-1755-2014
OI De Schreye, Danny/0000-0002-8423-8598
CR [Anonymous], 1997, Journal of Applied Non-Classical Logics, DOI DOI 10.1080/11663081.1997.10510900
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Fruhwirth T.W., 2011, Constraint Handling Rules: Compilation, Execution, and Analysis
   Fruhwirth T.W., 2009, Constraint Handling Rules
   Kakas A. C., 1992, Journal of Logic and Computation, V2, P719, DOI 10.1093/logcom/2.6.719
   Kimmig A, 2011, THEOR PRACT LOG PROG, V11, P235, DOI 10.1017/S1471068410000566
   NUTE D, 2001, P INAP 2001 14 INT C, P87
   Riveret R, 2007, FRONT ARTIF INTEL AP, V165, P99
   Roth B., 2007, P 11 INT C ART INT L, P81
   Sato T, 2008, J INTELL INF SYST, V31, P161, DOI 10.1007/s10844-008-0062-7
   Sneyers J., 2013, CHR 2013 10 INT WORK
   Sneyers J, 2010, THEOR PRACT LOG PROG, V10, P433, DOI 10.1017/S1471068410000207
   Sneyers J, 2010, THEOR PRACT LOG PROG, V10, P1, DOI 10.1017/S1471068409990123
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P431, DOI 10.1007/978-3-540-27775-0_30
NR 14
TC 5
Z9 5
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 769
EP 781
DI 10.1017/S1471068413000483
PN 4-5
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400021
DA 2024-07-18
ER

PT J
AU Maher, MJ
AF Maher, Michael J.
TI Relative expressiveness of defeasible logics
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE defeasible logic; non-monotonic reasoning; relative expressiveness
ID TOOL
AB We address the relative expressiveness of defeasible logics in the framework DL. Relative expressiveness is formulated as the ability to simulate the reasoning of one logic within another logic. We show that such simulations must be modular, in the sense that they also work if applied only to part of a theory, in order to achieve a useful notion of relative expressiveness. We present simulations showing that logics in DL with and without the capability of team defeat are equally expressive. We also show that logics that handle ambiguity differently ambiguity blocking versus ambiguity propagating - have distinct expressiveness, with neither able to simulate the other under a different formulation of expressiveness.
C1 Australian Def Force Acad, Univ New S Wales, Sch Engn & Informat Technol, Canberra, ACT 2600, Australia.
C3 Australian Defense Force Academy; University of New South Wales Sydney
RP Maher, MJ (corresponding author), Australian Def Force Acad, Univ New S Wales, Sch Engn & Informat Technol, Canberra, ACT 2600, Australia.
EM m.maher@adfa.edu.au
CR Antoniou G, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P405
   Antoniou G., 2001, ACM T COMPUT LOG, V2, P255, DOI [DOI 10.1145/371316.371517, 10.1145/371316.371517]
   Antoniou G, 2006, THEOR PRACT LOG PROG, V6, P703, DOI 10.1017/S1471068406002778
   Billington D, 2010, ACM T COMPUT LOG, V12, DOI 10.1145/1838552.1838558
   Cox J., 1992, Annals of Mathematics and Artificial Intelligence, V5, P163, DOI 10.1007/BF01543475
   DEBOER FS, 1991, LECT NOTES COMPUT SC, V527, P127
   DEBOER FS, 1994, INFORM COMPUT, V108, P128, DOI 10.1006/inco.1994.1004
   Dix J., 1995, Fundamenta Informaticae, V22, P227
   FELLEISEN M, 1991, SCI COMPUT PROGRAM, V17, P35, DOI 10.1016/0167-6423(91)90036-W
   Horty J. F., 1994, HDB LOGIC ARTIFICIAL, V3
   Janhunen T., 2006, J APPL NONCLASSICAL, V1-2, P35, DOI DOI 10.3166/JANCL.16.35-86
   Lam HP, 2011, LECT NOTES ARTIF INT, V6645, P187
   LANDIN PJ, 1966, COMMUN ACM, V9, P157, DOI 10.1145/365230.365257
   Maher MJ, 2001, THEOR PRACT LOG PROG, V1, P691, DOI 10.1017/S1471068401001168
   Maher MJ, 1999, SIXTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-99)/ELEVENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE (IAAI-99), P299
   Nute D., 1994, Handbook of Logic in Artificial Intelligence and Logic Programming, V3, P353
   REITER R, 1980, ARTIF INTELL, V13, P81, DOI 10.1016/0004-3702(80)90014-4
   Shapiro, 1989, ACM COMPUT SURV, V3, P413
   SHAPIRO EY, 1991, STOC 1991, P198, DOI DOI 10.1145/103418.103423
   Shoenfield J.R., 1967, MATH LOGIC
NR 20
TC 9
Z9 9
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2012
VL 12
BP 793
EP 810
DI 10.1017/S1471068412000294
PN 4-5
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 000CV
UT WOS:000308365000021
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhou, NF
AF Zhou, Neng-Fa
TI The language features and architecture of B-Prolog
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Prolog; logic programming system
AB B-Prolog is a high-performance implementation of the standard Prolog language with several extensions including matching clauses, action rules for event handling, finite-domain constraint solving, arrays and hash tables, declarative loop constructs, and tabling. The B-Prolog system is based on the Tree-Oriented Abstract Machine (TOAM) architecture which differs from the Warren Abstract Machine (WAM) mainly in that (1) arguments are passed old fashionedly through the stack, (2) only one frame is used for each predicate call, and (3) instructions are provided for encoding matching trees. The most recent architecture, called TOAM Jr., departs further from the WAM in that it employs no registers for arguments or temporary variables, and provides variable-size instructions for encoding predicate calls. This paper gives an overview of the language features and a detailed description of the TOAM Jr. architecture, including architectural support for action rules and tabling.
C1 [Zhou, Neng-Fa] CUNY, Dept Comp & Informat Sci, Brooklyn Coll, New York, NY 10021 USA.
   [Zhou, Neng-Fa] CUNY, Grad Ctr, New York, NY 10021 USA.
C3 City University of New York (CUNY) System; Brooklyn College (CUNY); City
   University of New York (CUNY) System
RP Zhou, NF (corresponding author), CUNY, Dept Comp & Informat Sci, Brooklyn Coll, New York, NY 10021 USA.
EM zhou@sci.brooklyn.cuny.edu
FU AIST; CISDD; PSC CUNY; NSF
FX Very early experiments were conducted while the author was a PhD student
   at Kyushu University during 1988-1991. The first working system and the
   versions up to 4.0 were built while the author was with Kyushu Institute
   of Technology during 1991-1999. Most recent improvements and
   enhancements have been conducted at Brooklyn College of the City
   University of New York. The B-Prolog system is indebted to many people
   in the logic programming community. I wish to express my gratitude to
   Taisuke Sato and Yoshitaka Kameya for their support, encouragement, and
   propelling. Their PRISM system has been a strong driving force for
   recent improvements in the tabling system and memory management. The
   countless feedbacks from the PRISM team greatly helped enhance the
   robustness of the system. Special thanks are also due to Bart Demoen for
   his intensive scrutiny of both the design and the implementation of
   B-Prolog, Yi-Dong Shen for his cooperation on linear tabling, and Paulo
   Moura and Ulrich Neumerkel for helping make the core part of B-Prolog
   more compatible with the ISO standard. Thanks also go to the anonymous
   referees and the editors, Maria Garcia de la Banda and Bart Demoen, for
   their detailed comments and guidances on the presentation.
   B-Prolog-related projects have received numerous grants from various
   funding organizations, most recently from AIST, CISDD, PSC CUNY, and
   NSF.
CR [Anonymous], 1989, Constraint Satisfaction in Logic Programming
   Carlsson M., 1987, Logic Programming. Proceedings of the Fourth International Conference, P40
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   Costa VS, 2007, LECT NOTES COMPUT SC, V4670, P395
   Costa VS, 1999, LECT NOTES COMPUT SC, V1702, P261
   DEBRAY SK, 1988, SB PROLOG SYSTEM VER
   Demoen B, 2000, LECT NOTES ARTIF INT, V1861, P1240
   DEMOEN B., 2006, P 3 WORKSH CONSTR HA, P141
   Demoen B, 2008, LECT NOTES COMPUT SC, V5366, P698, DOI 10.1007/978-3-540-89982-2_60
   Demoen B, 2008, LECT NOTES COMPUT SC, V5366, P621, DOI 10.1007/978-3-540-89982-2_51
   DEMPSTER AP, 1977, J ROY STAT SOC B MET, V39, P1, DOI 10.1111/j.2517-6161.1977.tb01600.x
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Guo HF, 2008, SOFTWARE PRACT EXPER, V38, P75, DOI 10.1002/spe.824
   HICKEY T, 1989, J LOGIC PROGRAM, V7, P193, DOI 10.1016/0743-1066(89)90021-6
   KLIGER S, 1990, LOGIC PROGRAMM, P97
   MAIER D., 1988, Computing with Logic: Logic Programming with PROLOG
   MEIER M, 1991, LOGIC PROGRAMM, P157
   MEIER M., 1993, ICLP WORKSH IMPL LOG, P151
   MOHR R, 1986, ARTIF INTELL, V28, P225, DOI 10.1016/0004-3702(86)90083-4
   Morales JF, 2005, LECT NOTES COMPUT SC, V3668, P21, DOI 10.1007/11562931_5
   Moura Paulo, 2009, Logic Programming. Proceedings 25th International Conference, ICLP 2009, DOI 10.1007/978-3-642-02846-5_3
   Nassen Henrik., 2001, Proceedings of the 3rd ACM SIGPLAN International Conference on Principles and Practice of Declarative Programming, PPDP'01, P49
   Neng-Fa Zhou, 1990, Logic Programming. Proceedings of the Seventh International Conference, P159
   Ramakrishnan IV, 1999, J LOGIC PROGRAM, V38, P31, DOI 10.1016/S0743-1066(98)10013-4
   RUMMELL J. A., 1992, P JOINT INT C S LOG, P369
   Sagonas K, 1998, ACM T PROGR LANG SYS, V20, P586, DOI 10.1145/291889.291897
   Sato T, 2001, J ARTIF INTELL RES, V15, P391
   Sato T, 2009, LECT NOTES COMPUT SC, V5649, P24, DOI 10.1007/978-3-642-02846-5_4
   Schimpf J, 2002, LECT NOTES COMPUT SC, V2401, P224, DOI 10.1007/3-540-45619-8_16
   STUCKEY P. J., 2006, TR2006013 CUNY COMP
   TAMAKI H, 1986, LECT NOTES COMPUT SC, V225, P84
   TARAU P, 1990, LECT NOTES COMPUT SC, V456, P159, DOI 10.1007/BFb0024183
   VANROY P, 1994, J LOGIC PROGRAM, V20, P385, DOI 10.1016/0743-1066(94)90031-0
   VANROY P, 1990, THESIS U CALIFORNIA
   WARREN D. H. D., 1977, 3940 U ED DEP ART IN
   Warren D. H. D., 1983, 309 SRI INT
   WILLEMS Y. D., 1987, TAPSOFT, V2, P111
   ZHOU N.-F., 2001, J FUNCTIONAL LOGIC P, V1, P1
   ZHOU N.-F., 1996, P JOINT INT C S LOG, P97
   ZHOU N.-F., 2000, 1 WORKSH MEM MAN LOG, P16
   Zhou NF, 2008, THEOR PRACT LOG PROG, V8, P81, DOI 10.1017/S147106840700316X
   Zhou NF, 2007, LECT NOTES COMPUT SC, V4670, P455, DOI 10.1007/978-3-540-74610-2_43
   Zhou NF, 2006, THEOR PRACT LOG PROG, V6, P483, DOI 10.1017/S1471068405002590
   Zhou NF, 2011, LECT NOTES ARTIF INT, V6645, P376
   Zhou NF, 2010, PROC INT C TOOLS ART, P213, DOI 10.1109/ICTAI.2010.103
   Zhou NF, 2009, LECT NOTES COMPUT SC, V5649, P402, DOI 10.1007/978-3-642-02846-5_33
   Zhou NF, 2003, SOFTWARE PRACT EXPER, V33, P1199, DOI 10.1002/spe.539
   Zhou NF, 1998, LOGIC PROGRAMM, P70
   Zhou NF, 1996, ACM T PROGR LANG SYS, V18, P752, DOI 10.1145/236114.236120
   ZHOU NF, 1994, MIT PS LOG, P159
NR 50
TC 28
Z9 36
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2012
VL 12
BP 189
EP 218
DI 10.1017/S1471068411000445
PN 1-2
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 886XS
UT WOS:000299888500008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Voets, D
   De Schreye, D
AF Voets, Dean
   De Schreye, Danny
TI Non-termination analysis of logic programs with integer arithmetics
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Logic Programming
CT 27th International Conference on Logic Programming
CY 2010
CY JUL 06-10, 2011
CL Lexington, KY
CL Lexington, KY
DE non-termination analysis; numerical computation; constraint-based
   approach
AB In the past years, analyzers have been introduced to detect classes of non-terminating queries for definite logic programs. Although these non-termination analyzers have shown to be rather precise, their applicability on real-life Prolog programs is limited because most Prolog programs use non-logical features. As a first step towards the analysis of Prolog programs, this paper presents a non-termination condition for Logic Programs containing integer arithmetics. The analyzer is based on our non-termination analyzer presented at International Logic Programming Conference (ICLP) 2009. The analysis starts from a class of queries and infers a subclass of non-terminating ones. In first phase, we ignore the outcome (success or failure) of the arithmetic operations, assuming success of all arithmetic calls. In second phase, we characterize successful arithmetic calls as a constraint problem, the solution of which determines the non-terminating queries.
C1 [Voets, Dean; De Schreye, Danny] Katholieke Univ Leuven, Dept Comp Sci, B-3001 Heverlee, Belgium.
C3 KU Leuven
RP Voets, D (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Celestijnenlaan 200A, B-3001 Heverlee, Belgium.
EM Dean.Voets@cs.kuleuven.be; Danny.DeSchreye@cs.kuleuven.be
RI De Schreye, Daniel/B-1755-2014
OI De Schreye, Danny/0000-0002-8423-8598
CR De Schreye D, 1994, J LOGIC PROGRAM, V20, P199, DOI 10.1016/0743-1066(94)90027-2
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   GIESL J, 2006, 3 INT JOINT C AUT RE, P281
   Lloyd J. W., 2012, Foundations of Logic Programming
   Nguyen MT, 2011, THEOR PRACT LOG PROG, V11, P33, DOI 10.1017/S1471068410000025
   Payet E, 2006, ACM T PROGR LANG SYS, V28, P256, DOI 10.1145/1119479.1119481
   SEREBRENIK A, 2001, LECT NOTES COMPUTER, V2250, P654
   SHEN Y, 2003, T COMPUTATIONAL LOGI, V4, P417
   Shen YD, 2009, THEOR PRACT LOG PROG, V9, P751, DOI 10.1017/S1471068409990068
   Voets D, 2011, LECT NOTES COMPUT SC, V6564, P133, DOI 10.1007/978-3-642-20551-4_9
   Voets D, 2009, LECT NOTES COMPUT SC, V5649, P220, DOI 10.1007/978-3-642-02846-5_21
NR 11
TC 7
Z9 7
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 521
EP 536
DI 10.1017/S1471068411000159
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100007
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Gebser, M
   Schaub, T
   Thiele, S
   Veber, P
AF Gebser, Martin
   Schaub, Torsten
   Thiele, Sven
   Veber, Philippe
TI Detecting inconsistencies in large biological networks with answer set
   programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 24th International Conference on Logic Programming (ICLP)
CY DEC 09-13, 2008
CL Udine, ITALY
SP Assoc Log Programming
DE answer set programming; bioinformatics; consistency; diagnosis
ID CONSISTENCY; KNOWLEDGE; MODELS
AB We introduce an approach to detecting inconsistencies in large biological networks by using answer set programming. To this end, we build upon a recently proposed notion of consistency between biochemical/genetic reactions and high-throughput profiles of cell activity. We then present an approach based on answer set programming to check the consistency of large-scale data sets. Moreover, we extend this methodology to provide explanations for inconsistencies by determining minimal representations of conflicts. In practice, this can be used to identify unreliable data or to indicate missing reactions.
C1 [Gebser, Martin; Schaub, Torsten; Thiele, Sven] Univ Potsdam, Inst Informat, Potsdam, Germany.
   [Veber, Philippe] Inst Cochin, Paris, France.
C3 University of Potsdam; Universite Paris Cite; Institut National de la
   Sante et de la Recherche Medicale (Inserm)
RP Gebser, M (corresponding author), Univ Potsdam, Inst Informat, Potsdam, Germany.
EM gebser@cs.uni-potsdam.de; torsten@cs.uni-potsdam.de;
   sthiele@cs.uni-potsdam.de; philippe.veber@googlemail.com
RI Schaub, Torsten/O-5873-2019; Veber, Philippe/M-2918-2015; Gebser,
   Martin/B-7169-2018
OI Schaub, Torsten/0000-0002-7456-041X; Thiele, Sven/0000-0002-5812-6963
CR [Anonymous], FUNDAMENTA INFORM
   [Anonymous], 2008, KR
   Baral C., 2003, KNOWLEDGE REPRESENTA
   BENELIYAHU, 1994, AMAI, V12, P53
   Chen M, 2007, BBA-MOL CELL BIOL L, V1771, P310, DOI 10.1016/j.bbalip.2006.05.017
   Dershowitz N, 2006, LECT NOTES COMPUT SC, V4121, P36
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Erdos P., 1959, Publicationes Mathematicae Debrecen, V6, P18
   Friedman N, 2000, J COMPUT BIOL, V7, P601, DOI 10.1089/106652700750050961
   GEBSER M, 2010, THEORY PRAC IN PRESS
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P136, DOI 10.1007/978-3-540-72200-7_13
   Gebser M, 2009, LECT NOTES COMPUT SC, V5753, P502, DOI 10.1007/978-3-642-04238-6_49
   Gebser M, 2009, LECT NOTES COMPUT SC, V5547, P71, DOI 10.1007/978-3-642-01929-6_7
   GELFOND M, 1991, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P230
   Gelfond M, 2008, FOUND ARTIF INTELL, P285, DOI 10.1016/S1574-6526(07)03007-6
   Giunchiglia E, 2006, J AUTOM REASONING, V36, P345, DOI 10.1007/s10817-006-9033-2
   Guelzim N, 2002, NAT GENET, V31, P60, DOI 10.1038/ng873
   Gutiérrez-Ríos RM, 2003, GENOME RES, V13, P2435, DOI 10.1101/gr.1387003
   Guziolowski C, 2009, BMC GENOMICS, V10, DOI 10.1186/1471-2164-10-244
   Guziolowski Carito, 2007, Journal of Biological Physics and Chemistry, V7, P37, DOI 10.4024/20701.jbpc.07.02
   Janhunen T, 2006, ACM T COMPUT LOG, V7, P1, DOI 10.1145/1119439.1119440
   Jeong H, 2000, NATURE, V407, P651, DOI 10.1038/35036627
   Klamt S., 2006, SYSTEM MODELING CELL, P73
   KUIPERS, 1994, QUALITATIVE REASONIN
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Mallory MJ, 2007, MOL CELL, V27, P951, DOI 10.1016/j.molcel.2007.08.019
   Papadimitriou C. H., 1982, P 14 ANN ACM S THEOR, P255
   Remy É, 2008, ADV APPL MATH, V41, P335, DOI 10.1016/j.aam.2007.11.003
   Siegel A, 2006, BIOSYSTEMS, V84, P153, DOI 10.1016/j.biosystems.2005.10.006
   Soulé C, 2006, CR BIOL, V329, P13, DOI 10.1016/j.crvi.2005.10.002
   Soule Christophe, 2003, ComPlexUs, V1, P123, DOI 10.1159/000076100
   Sudarsanam P, 2000, P NATL ACAD SCI USA, V97, P3364, DOI 10.1073/pnas.050407197
   SYRJANEN T, 2011, LPARSE 1 0 USERS MAN
   Veber P., 2004, ComPlexUs, V2, P140, DOI 10.1159/000093686
   WASHBURN B, 2006, MOL CELL BIOL, V21, P2057
   [No title captured]
NR 36
TC 51
Z9 55
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2011
VL 11
BP 323
EP 360
DI 10.1017/S1471068410000554
PN 2-3
PG 38
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 729UV
UT WOS:000287977500008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU De Guzm'an, PC
   Carro, M
   Warren, DS
AF Chico De Guzm'an, Pablo
   Carro, Manuel
   Warren, David S.
TI Swapping evaluation: A memory-scalable solution for answer-on-demand
   tabling
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming
CY JUL 16-19, 2010
CL Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Logic Programming Comm
DE Logic programming; tabling; implementation; on-demand answers;
   performance
ID LOGIC PROGRAMS; RESOLUTION
AB One of the differences among the various approaches to suspension-based tabled evaluation is the scheduling strategy. The two most popular strategies are local and batched evaluation. The former collects all the solutions to a tabled predicate before making any one of them available outside the tabled computation. The latter returns answers one by one before computing them all, which in principle is better if only one answer (or a subset of the answers) is desired. Batched evaluation is closer to SLD evaluation in that it computes solutions lazily as they are demanded, but it may need arbitrarily more memory than local evaluation, which is able to reclaim memory sooner. Some programs which in practice can be executed under the local strategy quickly run out of memory under batched evaluation. This has led to the general adoption of local evaluation at the expense of the more depth-first batched strategy. In this paper we study the reasons for the high memory consumption of batched evaluation and propose a new scheduling strategy which we have termed swapping evaluation. Swapping evaluation also returns answers one by one before completing a tabled call, but its memory usage can be orders of magnitude less than batched evaluation. An experimental implementation in the XSB system shows that swapping evaluation is a feasible memory-scalable strategy that need not compromise execution speed.
C1 [Chico De Guzm'an, Pablo; Carro, Manuel] U Politecn Madrid, Madrid, Spain.
   [Warren, David S.] SUNY Stony Brook, Stony Brook, NY 11794 USA.
C3 Universidad Politecnica de Madrid; State University of New York (SUNY)
   System; State University of New York (SUNY) Stony Brook
RP De Guzm'an, PC (corresponding author), U Politecn Madrid, Madrid, Spain.
EM pchico@clip.dia.fi.upm.es; mcarro@fi.upm.es; warren@cs.sunysb.edu
RI Carro, Manuel/AAE-9653-2021
OI Carro, Manuel/0000-0001-5199-3135
CR Ait-Kaci H., 1991, WARRENS ABSTRACT MAC
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   CODISH M, 1998, SPRINGER INT J SOFTW, V2, P29
   FREIRE J, 2001, LECT NOTES COMPUTER, V1140, P243
   HERMENEGILDO MV, 1986, LECT NOTES COMPUT SC, V225, P40
   Ramakrishna YS, 1997, LECT NOTES COMPUT SC, V1254, P143
   RAMAKRISHNAN R, 1993, J LOGIC PROGRAM, V23, P125
   Rocha R, 2005, LECT NOTES COMPUT SC, V3668, P250, DOI 10.1007/11562931_20
   Sagonas K, 1998, ACM T PROGR LANG SYS, V20, P586, DOI 10.1145/291889.291897
   SAGONAS K, 2004, P 6 ACM SIGPLAN INT, P78
   Sagonas KonstantinosF., 1993, Workshop on Programming with Logic Databases (Informal Proceedings), ILPS, P164
   TAMAKI H, 1986, LECT NOTES COMPUT SC, V225, P84
   Tarjan R. E., 1972, SIAM J COMPUT, V1, P140
   WARREN DS, 1992, COMMUN ACM, V35, P93, DOI 10.1145/131295.131299
   WARREN R, 1988, 5 INT C S LOG PROGR, P684
   Zou YY, 2005, LECT NOTES COMPUT SC, V3228, P238
   [No title captured]
NR 17
TC 1
Z9 1
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 401
EP 416
DI 10.1017/S1471068410000189
PN 4-6
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rodríguez-Artalejo, M
   Romero-Díaz, CA
AF Rodriguez-Artalejo, Mario
   Romero-Diaz, Carlos A.
TI A declarative semantics for CLP with qualification and proximity
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE constraint logic programming; qualification domains and values;
   proximity relations
ID FUZZY; CONSTRAINTS
AB Uncertainty in Logic Programming has been investigated during the last decades, dealing with various extensions of the classical LP paradigm and different applications. Existing proposals rely on different approaches, such as clause annotations based on uncertain truth values, qualification values as a generalization of uncertain truth values, and unification based on proximity relations. On the other hand, the CLP scheme has established itself as a powerful extension of LP that supports efficient computation over specialized domains while keeping a clean declarative semantics. In this paper we propose a new scheme SQCLP designed as an extension of CLP that supports qualification values and proximity relations. We show that several previous proposals can be viewed as particular cases of the new scheme, obtained by partial instantiation. We present a declarative semantics for SQCLP that is based on observables, providing fixpoint and proof-theoretical characterizations of least program models as well as an implementation-independent notion of goal solutions.
C1 [Rodriguez-Artalejo, Mario; Romero-Diaz, Carlos A.] Univ Complutense, Fac Informat, Dept Sistemas Informat & Computac, E-28040 Madrid, Spain.
C3 Complutense University of Madrid
RP Rodríguez-Artalejo, M (corresponding author), Univ Complutense, Fac Informat, Dept Sistemas Informat & Computac, E-28040 Madrid, Spain.
EM mario@sip.ucm.es; cromdia@fdi.ucm.es
CR [Anonymous], P 14 ANN ACM S PRINC
   ARENAS P, 2007, TOY MULTIPARADIGM DE
   Bistarelli S, 2001, ACM T PROGR LANG SYS, V23, P1, DOI 10.1145/383721.383725
   Caballero R, 2009, LECT NOTES COMPUT SC, V5649, P449, DOI 10.1007/978-3-642-02846-5_36
   Caballero RDJ, 2008, J INSECT SCI, V8, P10
   Campi A, 2009, J INTELL INF SYST, V33, P285, DOI 10.1007/s10844-008-0066-3
   Dubois D, 1980, Fuzzy sets and systems
   FREUDER EC, 1992, ARTIF INTELL, V58, P1, DOI 10.1016/0004-3702(92)90002-F
   Gabbrielli M., 1995, Journal of Logic and Computation, V5, P133, DOI 10.1093/logcom/5.2.133
   Georget Y, 1998, LECT NOTES COMPUT SC, V1520, P205
   Guadarrama S, 2004, FUZZY SET SYST, V144, P127, DOI 10.1016/j.fss.2003.10.017
   Hanus Michael., 2006, CURRY INTEGRATED FUN
   HOHFELD M, 1988, 53 LILOG IBM DEUTSCH
   JAFFAR J, 1992, ACM T PROGR LANG SYS, V14, P339, DOI 10.1145/129393.129398
   Julián-Iranzo P, 2009, PPDP'09: PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING, P149, DOI 10.1145/1599410.1599430
   KIFER M, 1992, J LOGIC PROGRAM, V12, P335, DOI 10.1016/0743-1066(92)90007-P
   Krajci S, 2004, FUZZY SET SYST, V144, P173, DOI 10.1016/j.fss.2003.10.019
   Moreno G, 2007, ELECTRON NOTES THEOR, V188, P21, DOI 10.1016/j.entcs.2007.05.036
   NG R, 1992, INFORM COMPUT, V101, P150, DOI 10.1016/0890-5401(92)90061-J
   RODRIGUEZ-ARTALEJO M., 2010, SIC110 U COMPL DEP S
   Rodriguez-Artalejo M, 2008, LECT NOTES COMPUT SC, V4989, P272
   Sessa MI, 2002, THEOR COMPUT SCI, V275, P389, DOI 10.1016/S0304-3975(01)00188-8
   Shenoi S, 1999, FUZZY SET SYST, V100, P51, DOI 10.1016/S0165-0114(99)80006-2
   VANEMDEN MH, 1986, J LOGIC PROGRAM, V3, P37, DOI 10.1016/0743-1066(86)90003-8
   Vojta P., 2001, Lecture Notes in Artificial Intelligence, V2173, P351
   Vojtás P, 2001, FUZZY SET SYST, V124, P361, DOI 10.1016/S0165-0114(01)00106-3
   ZADEH LA, 1971, INFORM SCIENCES, V3, P177, DOI 10.1016/S0020-0255(71)80005-1
   [No title captured]
NR 28
TC 7
Z9 7
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 627
EP 642
DI 10.1017/S1471068410000323
PN 4-6
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200018
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Silva, J
   Vidal, G
AF Silva, Josep
   Vidal, German
TI Forward slicing of functional logic programs by partial evaluation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE forward slicing; partial evaluation; functional logic programming
ID DEPENDENCE; SEMANTICS
AB Program slicing has been mainly studied in the context of imperative languages, where it has been applied to a wide variety of software engineering tasks, like program understanding, maintenance, debugging, testing, code reuse, etc. This work introduces the first forward slicing technique for declarative multi-paradigm programs which integrate features from functional and logic programming. Basically, given a program and a slicing criterion (a function call in our setting), the computed forward slice contains those parts of the original program which are reachable from the slicing criterion. Our approach to program slicing is based on an extension of (online) partial evaluation. Therefore, it provides a simple way to develop program slicing tools from existing partial evaluators and helps to clarify the relation between both methodologies. A slicing toot for the multi-paradigm language Curry, which demonstrates the usefulness of our approach, has been implemented in Curry itself.
C1 Univ Politecn Valencia, DSIC, E-46022 Valencia, Spain.
C3 Universitat Politecnica de Valencia
RP Silva, J (corresponding author), Univ Politecn Valencia, DSIC, Camino Vera S-N, E-46022 Valencia, Spain.
EM jsilva@dsic.upv.es; gvidal@dsic.upv.es
RI Vidal, German/B-2217-2014; Vidal, German/P-5548-2019; Silva,
   José/KAM-3937-2024; Silva, Josep/Q-4772-2019
OI Vidal, German/0000-0002-1857-6951; Silva, Josep/0000-0001-5096-0008
CR Albert E, 2005, J SYMB COMPUT, V40, P795, DOI 10.1016/j.jsc.2004.01.001
   Albert E, 2003, INFORM PROCESS LETT, V85, P19, DOI 10.1016/S0020-0190(02)00336-8
   Albert E, 2002, NEW GENERAT COMPUT, V20, P3, DOI 10.1007/BF03037257
   ALBERT E, 2002, J FUNCTIONAL LOGIC P, P1
   Alpuente M, 1998, ACM T PROGR LANG SYS, V20, P768, DOI 10.1145/291891.291896
   [Anonymous], 1998, Term rewriting and all thatM
   [Anonymous], CURRY INTEGRATED FUN
   [Anonymous], 1993, Partial Evaluation and Automatic Program Generation
   ANTOY S, 1992, LECT NOTES COMPUT SC, V632, P143, DOI 10.1007/BFb0013825
   Antoy S, 2000, J ACM, V47, P776, DOI 10.1145/347476.347484
   Biswas S., 1997, THESIS U PENNSYLVANI
   Blazy Sandrine, 1998, ACM COMPUTING SURVEY, V30
   Brassel B., 2004, P 6 ACM SIGPLAN INT, P179
   CHITIL O, 2004, P 16 INT WORKSH IMPL, P239
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Field J, 1998, INFORM SOFTWARE TECH, V40, P609, DOI 10.1016/S0950-5849(98)00087-1
   Gallagher J. P., 1993, Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation. PEPM'93, P88, DOI 10.1145/154630.154640
   GIOVANNETTI E, 1991, J COMPUTER SYSTEM SC, V42, P363
   GLUCK R, 1996, LECT NOTES COMPUTER, V1110, P137
   GYIMOTHY T, 1995, P 2 INT WORKSH AUT A, P87
   Hallgren Thomas., 2003, P ACM SIGPLAN WORKSH, P103
   Hanus M., 1999, Journal of Functional Programming, V9, P33, DOI 10.1017/S0956796899003330
   HANUS M, 1994, J LOGIC PROGRAM, V20, P583, DOI 10.1016/0743-1066(94)90034-5
   HANUS M, 2004, PAKCS 1 6 0 PORTLAND
   HANUS M, 1997, P 24 ACM S PRINC PRO, P80, DOI DOI 10.1145/263699.263710
   HARMAN M, 1997, P 5 INT WORKSH PROGR
   HARMAN M, 2001, SOFTWARE FOCUS, V2, P85
   HARMAN M, 1995, P 1 UK PROGR COMPR W
   Hortalá-González T, 2001, LECT NOTES COMPUT SC, V2024, P216
   HUET G, 1992, COMPUTATIONAL LOGIC, P395
   KLOP JW, 1992, HDB LOGIC COMPUTER S, V1, P1
   Kuck R. H., 1981, Proceedings of the 8th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, P207
   Larsen L, 1996, PROC INT CONF SOFTW, P495, DOI 10.1109/ICSE.1996.493444
   Leuschel M, 2002, LECT NOTES COMPUT SC, V2566, P379
   Leuschel M, 2005, LECT NOTES COMPUT SC, V3444, P61
   Leuschel M, 1997, LECT NOTES COMPUT SC, V1207, P83
   LLOYD JW, 1994, P INT LOG PROGR S, P43
   LOOGEN R, 1993, LECT NOTES COMPUT SC, V714, P184
   LOPEZFRAGUAS F, 1999, LNCS, V1631, P244
   MORENONAVARRO JJ, 1992, J LOGIC PROGRAM, V12, P191, DOI 10.1016/0743-1066(92)90024-W
   Ochoa Claudio., 2004, PEPM '04: Proceedings of the 2004 ACM SIGPLAN symposium on Partial evaluation and semantics-based program manipulation, P123
   SCHOENIG S, 1996, LNCS, V1145, P317
   SESTOFT P, 1997, J FUNCTIONAL PROGRAM, V7, P231, DOI DOI 10.1017/S0956796897002712
   Shapiro EY., 1983, Algorithmic Program Debugging
   SILVA J, 2006, FORWARD SLICING FUNC
   Sorensen M. H., 1996, Journal of Functional Programming, V6, P811, DOI 10.1017/S0956796800002008
   Steindl C, 1998, LECT NOTES COMPUT SC, V1383, P264
   Terese, 2003, Term Rewriting Systems
   Tip F, 1996, ACM SIGPLAN NOTICES, V31, P179, DOI 10.1145/236338.236355
   TIP F, 1995, J PROGRAM LANG, V3, P121
   TURCHIN VF, 1986, ACM T PROGR LANG SYS, V8, P292, DOI 10.1145/5956.5957
   VENKATESH GA, 1991, SIGPLAN NOTICES, V26, P107, DOI 10.1145/113446.113455
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Weiser MD., 1979, PROGRAM SLICES FORMA
   Woodward MR, 1998, INFORM SOFTWARE TECH, V40, P105, DOI 10.1016/S0950-5849(98)00029-9
   Zhao JJ, 2001, PROC IEEE INT CONF S, P672, DOI 10.1109/ICSM.2001.972786
   [No title captured]
NR 57
TC 0
Z9 0
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2007
VL 7
BP 215
EP 247
DI 10.1017/S1471068406002870
PN 1-2
PG 33
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 148DD
UT WOS:000245053800009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wang, YH
   Fodor, P
   Kifer, M
AF Wang, Yuheng
   Fodor, Paul
   Kifer, Michael
TI Knowledge Authoring for Rules and Actions
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE knowledge authoring; knowledge representation and reasoning; natural
   language understanding; frame-based parsing
AB Knowledge representation and reasoning (KRR) systems describe and reason with complex concepts and relations in the form of facts and rules. Unfortunately, wide deployment of KRR systems runs into the problem that domain experts have great difficulty constructing correct logical representations of their domain knowledge. Knowledge engineers can help with this construction process, but there is a deficit of such specialists. The earlier Knowledge Authoring Logic Machine (KALM) based on Controlled Natural Language (CNL) was shown to have very high accuracy for authoring facts and questions. More recently, KALMFL, a successor of KALM, replaced CNL with factual English, which is much less restrictive and requires very little training from users. However, KALMFL has limitations in representing certain types of knowledge, such as authoring rules for multi-step reasoning or understanding actions with timestamps. To address these limitations, we propose KALMRA to enable authoring of rules and actions. Our evaluation using the UTI guidelines benchmark shows that KALMRA achieves a high level of correctness (100%) on rule authoring. When used for authoring and reasoning with actions, KALMRA achieves more than 99.3% correctness on the bAbI benchmark, demonstrating its effectiveness in more sophisticated KRR jobs. Finally, we illustrate the logical reasoning capabilities of KALMRA by drawing attention to the problems faced by the recently made famous AI, ChatGPT.
C1 [Wang, Yuheng; Fodor, Paul; Kifer, Michael] SUNY Stony Brook, Stony Brook, NY 11794 USA.
C3 State University of New York (SUNY) System; State University of New York
   (SUNY) Stony Brook
RP Wang, YH (corresponding author), SUNY Stony Brook, Stony Brook, NY 11794 USA.
EM yuhewang@cs.stonybrook.edu; pfodor@cs.stonybrook.edu;
   kifer@cs.stonybrook.edu
CR Baker C.F., 1998, P 36 ANN M ASS COMP, P86, DOI [DOI 10.3115/980845.980860, DOI 10.3115/980451.980860]
   Bergman DA, 1999, PEDIATRICS, V103, P843
   Fillmore CJ, 2006, COGN LINGUIST RES, V34, P373, DOI 10.1515/9783110199901.373
   Fuchs N. E., 1996, ARXIV
   Fuchs NE, 2008, LECT NOTES COMPUT SC, V5224, P104
   Gao TT, 2018, 2018 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE (WI 2018), P17, DOI 10.1109/WI.2018.0-112
   Gao TT, 2018, LECT NOTES COMPUT SC, V11230, P461, DOI 10.1007/978-3-030-02671-4_28
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   KIFER M, 1995, J ASSOC COMPUT MACH, V42, P741, DOI 10.1145/210332.210335
   KIFER M, 1989, SIGMOD REC, V18, P134, DOI 10.1145/66926.66939
   Kowalski R., 1989, Foundations of knowledge base management, P23, DOI [10.1007/978-3-642-83397-7_2, DOI 10.1007/978-3-642-83397-72, DOI 10.1007/978-3-642-83397-7_2]
   Le H., 2020, P MACHINE LEARNING R, P5682
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Mitra A, 2016, AAAI CONF ARTIF INTE, P2779
   Qi P., 2020, arXiv
   Ringgaard M., 2017, ARXIV
   Sadri F., 1995, Proc. Twelfth Int. Conf. Log. Program, P67
   Schwitter R, 2002, 13TH INTERNATIONAL WORKSHOP ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P228
   Shiffman R. N., 2009, INT WORKSH CONTR NAT
   Swayamdipta S., 2017, ARXIV
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Wan H, 2009, LECT NOTES COMPUT SC, V5649, P432, DOI 10.1007/978-3-642-02846-5_35
   Wang YH, 2022, LECT NOTES COMPUT SC, V13437, P431, DOI 10.1007/978-3-031-16449-1_41
   Weston J., 2015, arXiv
NR 26
TC 0
Z9 0
U1 1
U2 6
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2023
VL 23
IS 4
SI SI
BP 797
EP 811
AR PII S1471068423000169
DI 10.1017/S1471068423000169
EA JUL 2023
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7Z0
UT WOS:001026548500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Boudou, J
   Diéguez, M
   Fernández-Duque, D
   Kremer, P
AF Boudou, Joseph
   Dieguez, Martin
   Fernandez-Duque, David
   Kremer, Philip
TI Exploring the Jungle of Intuitionistic Temporal Logics
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 16th European Conference on Logics in Artificial Intelligence (JELIA)
CY MAY 07-11, 2019
CL Rende, ITALY
SP Univ Calabria, Dept Math & Comp Sci, Artificial Intelligence Grp, Univ Alta Formazione, Assessorato Istruzione & Attivita Culturali,, Regione Calabria, EurAI, Springer, Altilia S r l, Integris S p a, Intellimech, Magazzini Rossella, NTT Data
DE Theory; Knowledge Representation and Nonmonotonic Reasoning
ID DYNAMIC TOPOLOGICAL LOGIC; SYSTEMS
AB The importance of intuitionistic temporal logics in Computer Science and Artificial Intelligence has become increasingly clear in the last few years. From the proof-theory point of view, intuitionistic temporal logics have made it possible to extend functional programming languages with new features via type theory, while from the semantics perspective, several logics for reasoning about dynamical systems and several semantics for logic programming have their roots in this framework. We consider several axiomatic systems for intuitionistic linear temporal logic and show that each of these systems is sound for a class of structures based either on Kripke frames or on dynamic topological systems. We provide two distinct interpretations of "henceforth", both of which are natural intuitionistic variants of the classical one. We completely establish the order relation between the semantically defined logics based on both interpretations of "henceforth" and, using our soundness results, show that the axiomatically defined logics enjoy the same order relations.
C1 [Boudou, Joseph] Toulouse Univ, IRIT, Toulouse, France.
   [Dieguez, Martin] Univ Angers, LERIA, Angers, France.
   [Fernandez-Duque, David] Univ Ghent, Dept Math WE16, Ghent, Belgium.
   [Kremer, Philip] Univ Toronto, Dept Philosophy, Toronto, ON, Canada.
C3 Universite de Toulouse; Universite Toulouse III - Paul Sabatier;
   Universite Federale Toulouse Midi-Pyrenees (ComUE); Universite d'Angers;
   Ghent University; University of Toronto
RP Boudou, J (corresponding author), Toulouse Univ, IRIT, Toulouse, France.
EM joseph.boudou@matabio.fr; martin.dieguezlodeiro@univ-angers.fr;
   David.FernandezDuque@UGent.be; philip.kremer@utoronto.ca
RI Fernández-Duque, David/AHH-5021-2022
OI Dieguez, Martin/0000-0003-3440-4348; Fernandez Duque,
   David/0000-0001-8604-4183
FU SNSF-FWO Lead Agency [200021L 196176 (SNSF)/G0E2121N]; Social Sciences
   and Humanities Research Council of Canada
FX David Fernandez-Duque's research is partially funded by the SNSF-FWO
   Lead Agency Grant 200021L 196176 (SNSF)/G0E2121N (FWO).; Philip Kremer's
   research was supported by the Social Sciences and Humanities Research
   Council of Canada.
CR Alexandroff P., 1937, Mat. Sb, V2, P501
   [Anonymous], 2017, NEIGHBORHOOD SEMANTI
   [Anonymous], 1992, Logics of Time and Computation
   [Anonymous], 1980, To H. B. Curry: Essays on Combinatory Logic, -calculus and Formalism
   [Anonymous], 2000, A Short Introduction to Intuitionistic Logic
   [Anonymous], 1948, The Journal of Symbolic Logic
   [Anonymous], 2000, Log. J. IGPL, DOI [10.1093/jigpal/8.1.55, DOI 10.1093/JIGPAL/8.1.55]
   Balbiani P., 2019, T COMPUTATIONAL LOGI, V21, P2
   Balbiani P, 2016, LECT NOTES COMPUT SC, V10021, P81, DOI 10.1007/978-3-319-48758-8_6
   Boudou J., 2017, 26 EACSL ANN C COMPU, V82
   Boudou J, 2019, LECT NOTES ARTIF INT, V11468, P763, DOI 10.1007/978-3-030-19570-0_49
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Cabalar P, 2007, LECT NOTES COMPUT SC, V4739, P241
   Davies R, 1996, IEEE S LOG, P184, DOI 10.1109/LICS.1996.561317
   Davies R, 2001, J ACM, V48, P555, DOI 10.1145/382780.382785
   Davies R, 2017, J ACM, V64, DOI 10.1145/3011069
   Davoren JM, 2009, ANN PURE APPL LOGIC, V161, P349, DOI 10.1016/j.apal.2009.07.009
   Davoren J. M., 2002, WORKSH INT MOD LOG A
   Di?guez M., 2018, ADV MODAL LOGIC, V12, P199
   Dugundji J., 1975, Topology
   ERSHOV AP, 1977, INFORM PROCESS LETT, V6, P38, DOI 10.1016/0020-0190(77)90078-3
   Duque DF, 2007, LOG J IGPL, V15, P77, DOI 10.1093/jigpal/Jzl036
   Fernández-Duque D, 2018, LOG METH COMPUT SCI, V14, DOI 10.23638/LMCS-14(3:3)2018
   Fernández-Duque D, 2012, J SYMBOLIC LOGIC, V77, P308, DOI 10.2178/jsl/1327068705
   FischerServi G., 1984, REND SEM MAT U POLIT, V42, P179
   Gabelaia D, 2006, ANN PURE APPL LOGIC, V142, P245, DOI 10.1016/j.apal.2006.01.001
   Goldblatt R., 1980, Studia Logica, V39, P219, DOI [10.1007/BF00370321.128,138, DOI 10.1007/BF00370321.128,138]
   Heyting A, 1930, SITZBER PREUSS AKAD, P42
   Kamide N, 2010, J APPL LOGIC, V8, P33, DOI 10.1016/j.jal.2009.06.001
   Kojima K, 2011, INFORM COMPUT, V209, P1491, DOI 10.1016/j.ic.2010.09.008
   Konev B., 2006, Studia Logica, V84, P129, DOI 10.1007/s11225-006-9005-x
   Kremer P, 2005, ANN PURE APPL LOGIC, V131, P133, DOI 10.1016/j.apal.2004.06.004
   Kremer P., 2004, A small counterexample in intuitionistic dynamic topological logic
   Kremer P, 2013, REV SYMB LOGIC, V6, P545, DOI 10.1017/S1755020313000087
   Kurucz A., 2003, STUDIES LOGIC FDN MA, V148
   Maier P, 2004, LECT NOTES COMPUT SC, V3210, P295
   Nogin M, 2008, J LOGIC COMPUT, V18, P1029, DOI 10.1093/logcom/exn034
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Rasiowa H., 1963, MATH METAMATHEMATICS
   Simpson Alex K., 1994, THESIS U EDINBURGH U
   Slavnov S., 2003, TR2003015 CUNY AC WO
   Tarski A., 1938, FUND MATH, V31, P103, DOI DOI 10.4064/FM-31-1-103-134
   Yuse Y., 2006, PPDP 2006. Proceedings of the Eighth ACM SIGPLAN Symposium on Principles and Practice of Declarative Programming, P201, DOI 10.1145/1140335.1140360
NR 43
TC 2
Z9 2
U1 1
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2021
VL 21
IS 4
SI SI
BP 459
EP 492
DI 10.1017/S1471068421000089
PG 34
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA ZB6GG
UT WOS:000756937700004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Costabile, R
   Catalano, G
   Cuteri, B
   Morelli, MC
   Leone, N
   Manna, M
AF COSTABILE, R. O. B. E. R. T. A.
   CATALANO, G. E. L. S. O. M. I. N. A.
   CUTERI, B. E. R. N. A. R. D. O.
   MORELLI, C. O. N. C. E. T. T. A. M. A. R. I. A.
   LEONE, N. I. C. O. L. A.
   MANNA, M. A. R. C. O.
TI A logic-based decision support system for the diagnosis of headache
   disorders according to the ICHD-3 international classification
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE Knowledge Representation; ASP; Artificial Intelligence; ICHD-3
AB Decision support systems play an important role in medical fields as they can augment clinicians to deal more efficiently and effectively with complex decision-making processes. In the diagnosis of headache disorders, however, existing approaches and tools are still not optimal. On the one hand, to support the diagnosis of this complex and vast spectrum of disorders, the International Headache Society released in 1988 the International Classification of Headache Disorders (ICHD), now in its 3rd edition: a 200 pages document classifying more than 300 different kinds of headaches, where each is identified via a collection of specific nontrivial diagnostic criteria. On the other hand, the high number of headache disorders and their complex criteria make the medical history process inaccurate and not exhaustive both for clinicians and existing automatic tools. To fill this gap, we present head-asp, a novel decision support system for the diagnosis of headache disorders. Through a REST Web Service, head-asp implements a dynamic questionnaire that complies withICHD-3by exploiting two logical modules to reach a complete diagnosis while trying to minimize the total number of questions being posed to patients. Finally, head-asp is freely available on-line and it is receiving very positive feedback from the group of neurologists that is testing it.
C1 [COSTABILE, R. O. B. E. R. T. A.; CUTERI, B. E. R. N. A. R. D. O.; MORELLI, C. O. N. C. E. T. T. A. M. A. R. I. A.; LEONE, N. I. C. O. L. A.; MANNA, M. A. R. C. O.] Univ Calabria, Dept Math & Comp Sci, Calabria, Italy.
   [CATALANO, G. E. L. S. O. M. I. N. A.] DLVSyst Srl, Arcavacata Di Rende, Italy.
C3 University of Calabria
RP Costabile, R (corresponding author), Univ Calabria, Dept Math & Comp Sci, Calabria, Italy.
EM r.costabile@mat.unical.it; catalano@dlvsystem.com; cuteri@mat.unical.it;
   maria.morelli@unical.it; leone@mat.unical.it; manna@mat.unical.it
RI ; Manna, Marco/G-8966-2012
OI Cuteri, Bernardo/0000-0001-5164-9123; Manna, Marco/0000-0003-3323-9328;
   Morelli, Maria Concetta/0000-0003-4211-6928
FU MISE under the project "ALCMEONE" - Horizon 2020 PON 2014-2020
   [NUM:F/050502/01-02-03/X32, B28117000430008]
FX This work has been partially supported by MISE under the project
   "ALCMEONE" (NUM:F/050502/01-02-03/X32, CUP:B28117000430008) - Horizon
   2020 PON 2014-2020.
CR Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   De Simone R, 2004, NEUROL SCI, V25, pS218, DOI 10.1007/s10072-004-0290-8
   Dong Z, 2014, J HEADACHE PAIN, V15, DOI 10.1186/1129-2377-15-40
   Donovan J. J., 1976, ACM Transactions on Database Systems, V1, P344, DOI 10.1145/320493.320500
   Eslami V, 2013, SPRINGERPLUS, V2, DOI 10.1186/2193-1801-2-199
   Evans RW, 2017, HEADACHE, V57, P780, DOI 10.1111/head.13057
   Michael S, 2007, ELE COM ENG, P1
   Olesen J, 2018, CEPHALALGIA, V38, P1, DOI 10.1177/0333102417738202
   Richardson L., 2008, RESTFUL WEB SERVICES
   Simic S, 2008, LECT NOTES ARTIF INT, V5271, P314, DOI 10.1007/978-3-540-87656-4_39
   Stovner LJ, 2007, CEPHALALGIA, V27, P193, DOI 10.1111/j.1468-2982.2007.01288.x
   Sutton RT, 2020, NPJ DIGIT MED, V3, DOI 10.1038/s41746-020-0221-y
   Vandewiele G, 2018, BMC MED INFORM DECIS, V18, DOI 10.1186/s12911-018-0679-6
NR 14
TC 3
Z9 3
U1 1
U2 9
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2020
VL 20
IS 6
SI SI
BP 864
EP 879
AR PII S1471068420000290
DI 10.1017/S1471068420000290
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR3IT
UT WOS:000571456800005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cabalar, P
   Fandinno, J
   Lierler, Y
AF Cabalar, Pedro
   Fandinno, Jorge
   Lierler, Yuliya
TI Modular Answer Set Programming as a Formal Specification Language
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE Answer Set Programming; Formal Specification; Formal Verification;
   Modular Logic Programs
ID LOGIC PROGRAMS; SEMANTICS
AB In this paper, we study the problem of formal verification for Answer Set Programming (ASP), namely, obtaining aformal proofshowing that the answer sets of a given (non-ground) logic programPcorrectly correspond to the solutions to the problem encoded byP, regardless of the problem instance. To this aim, we use a formal specification language based on ASP modules, so that each module can be proved to capture some informal aspect of the problem in an isolated way. This specification language relies on a novel definition of (possibly nested, first order)program modulesthat may incorporate local hidden atoms at different levels. Then,verifyingthe logic programPamounts to prove some kind of equivalence betweenPand its modular specification.
C1 [Cabalar, Pedro] Univ A Coruna, La Coruna, Spain.
   [Fandinno, Jorge] Univ Potsdam, Potsdam, Germany.
   [Lierler, Yuliya] Univ Nebraska Omaha, Omaha, NE USA.
C3 Universidade da Coruna; University of Potsdam; University of Nebraska
   System; University of Nebraska Omaha
RP Cabalar, P (corresponding author), Univ A Coruna, La Coruna, Spain.
EM cabalar@udc.es; fandinno@uni-potsdam.de; ylierler@unomaha.edu
RI Fandiño, Jorge/F-8705-2016; Fandinno, Jorge/JJC-6227-2023; Cabalar,
   Pedro/AAE-5198-2020
OI Fandiño, Jorge/0000-0002-3917-8717; Lierler, Yuliya/0000-0002-6146-623X
FU MINECO, Spain [TIN2017-84453-P]; NSF, USA [1707371]; Alexander von
   Humboldt Foundation; Direct For Computer & Info Scie & Enginr; Div Of
   Information & Intelligent Systems [1707371] Funding Source: National
   Science Foundation
FX We are thankful to Vladimir Lifschitz and the anonymous reviewers for
   their comments that help us to improve the paper. This work was
   partially supported by MINECO, Spain, grant TIN2017-84453-P and NSF, USA
   grant 1707371. The second author is funded by the Alexander von Humboldt
   Foundation.
CR Aguado F, 2019, ARTIF INTELL, V275, P575, DOI 10.1016/j.artint.2019.07.005
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Buddenhagen M., 2015, P 13 INT C LOG PROGR
   Cabalar P., 2020, MODULAR ANSWER SET P
   Denecker M., 2012, LIPICS, V17, P277
   Eiter T, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P97
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Ferraris P, 2011, ACM T COMPUT LOG, V12, DOI 10.1145/1970398.1970401
   Ferraris P, 2011, ARTIF INTELL, V175, P236, DOI 10.1016/j.artint.2010.04.011
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Geibinger T, 2019, LECT NOTES ARTIF INT, V11468, P542, DOI 10.1007/978-3-030-19570-0_36
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Gonçalves R, 2016, FRONT ARTIF INTEL AP, V285, P957, DOI 10.3233/978-1-61499-672-9-957
   Harrison A., 2016, THEOR PRACT LOG PROG
   Lierler, 2019, P 21 INT S PRACT ASP
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lifschitz V., 2018, CORR
   Lifschitz V, 2007, LECT NOTES COMPUT SC, V4483, P188, DOI 10.1007/978-3-540-72200-7_17
   Lifschitz V, 2017, THEOR PRACT LOG PROG, V17, P961, DOI 10.1017/S1471068417000345
   Monin J.F., 2003, UNDERSTANDING FORMAL
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Oetsch J, 2008, LECT NOTES COMPUT SC, V5366, P591, DOI 10.1007/978-3-540-89982-2_49
   Oikarinen E, 2009, J LOGIC COMPUT, V19, P591, DOI 10.1093/logcom/exn039
   Pearce D, 2004, FR ART INT, V110, P388
   Pearce D, 2008, LECT NOTES COMPUT SC, V5366, P546, DOI 10.1007/978-3-540-89982-2_46
NR 27
TC 6
Z9 6
U1 2
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2020
VL 20
IS 5
SI SI
BP 767
EP 782
AR PII S1471068420000265
DI 10.1017/S1471068420000265
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR5RA
UT WOS:000571619500013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dodaro, C
   Eiter, T
   Ogris, P
   Schekotihin, K
AF Dodaro, Carmine
   Eiter, Thomas
   Ogris, Paul
   Schekotihin, Konstantin
TI Managing caching strategies for stream reasoning with reinforcement
   learning
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE Stream reasoning; ASP; Reinforcement learning; Caching strategies
ID SYSTEM; LARS
AB Efficient decision-making over continuously changing data is essential for many application domains such as cyber-physical systems, industry digitalization, etc. Modern stream reasoning frameworks allow one to model and solve various real-world problems using incremental and continuous evaluation of programs as new data arrives in the stream. Applied techniques use, e.g., Datalog-like materialization or truth maintenance algorithms to avoid costly re-computations, thus ensuring low latency and high throughput of a stream reasoner. However, the expressiveness of existing approaches is quite limited and, e.g., they cannot be used to encode problems with constraints, which often appear in practice. In this paper, we suggest a novel approach that uses the Conflict-Driven Constraint Learning (CDCL) to efficiently update legacy solutions by using intelligent management of learned constraints. In particular, we study the applicability of reinforcement learning to continuously assess the utility of learned constraints computed in previous invocations of the solving algorithm for the current one. Evaluations conducted on real-world reconfiguration problems show that providing a CDCL algorithm with relevant learned constraints from previous iterations results in significant performance improvements of the algorithm in stream reasoning scenarios.
C1 [Dodaro, Carmine] Univ Calabria, Dept Math & Comp Sci, Commenda Di Rende, Italy.
   [Eiter, Thomas] Vienna Univ Technol, Inst Log & Computat, KBS Grp, Vienna, Austria.
   [Ogris, Paul; Schekotihin, Konstantin] Alpen Adria Univ, Klagenfurt, Austria.
C3 University of Calabria; Technische Universitat Wien; University of
   Klagenfurt
RP Dodaro, C (corresponding author), Univ Calabria, Dept Math & Comp Sci, Commenda Di Rende, Italy.
EM dodaro@mat.unical.it; eiter@kr.tuwien.ac.at; paul.ogris@aau.at;
   konstantin.schekotihin@aau.at
RI Eiter, Thomas/ABE-9263-2021; Schekotihin, Konstantin/IZN-7815-2023;
   Dodaro, Carmine/AAE-5732-2020
OI Schekotihin, Konstantin/0000-0002-0286-0958; Dodaro,
   Carmine/0000-0002-5617-5286; Eiter, Thomas/0000-0001-6003-6345
FU Austrian Federal Ministry of Transport, Innovation and Technology
   (BMVIT) [861263]
FX The authors would like to thank the anonymous reviewers for their
   helpful comments that helped us to improve the paper a lot. This work
   was conducted in the scope of the research project DynaCon (FFG-PNr.:
   861263) funded by the Austrian Federal Ministry of Transport, Innovation
   and Technology (BMVIT) under the program "ICT of the Future" between
   2017 and 2020 (see https://iktderzukunft.at/en/for more information).
CR ADAMS EN, 1984, IBM J RES DEV, V28, P2, DOI 10.1147/rd.281.0002
   Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P54, DOI 10.1007/978-3-642-40564-8_6
   ANANTHARAM V, 1987, IEEE T AUTOMAT CONTR, V32, P968, DOI 10.1109/TAC.1987.1104491
   [Anonymous], 1979, THESIS
   Aschinger M, 2011, LECT NOTES COMPUT SC, V6697, P4, DOI 10.1007/978-3-642-21311-3_4
   Audemard G, 2018, INT J ARTIF INTELL T, V27, DOI 10.1142/S0218213018400018
   Audemard G, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P399
   Bazoobandi HR, 2017, LECT NOTES COMPUT SC, V10587, P87, DOI 10.1007/978-3-319-68288-4_6
   Beck H, 2018, ARTIF INTELL, V261, P16, DOI 10.1016/j.artint.2018.04.003
   Beck H, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2741
   Beck H, 2017, THEOR PRACT LOG PROG, V17, P744, DOI 10.1017/S1471068417000370
   Becker HD, 2017, INTRODUCTION TO BRONCHOSCOPY, 2ND EDITION, P1
   Calimeri F, 2019, THEOR PRACT LOG PROG, V19, P957, DOI 10.1017/S1471068419000292
   DEKLEER J, 1986, ARTIF INTELL, V28, P127, DOI 10.1016/0004-3702(86)90080-9
   DOYLE J, 1979, ARTIF INTELL, V12, P231, DOI 10.1016/0004-3702(79)90008-0
   Eiter T, 2019, THEOR PRACT LOG PROG, V19, P974, DOI 10.1017/S1471068419000309
   Gai Y, 2012, IEEE ACM T NETWORK, V20, P1466, DOI 10.1109/TNET.2011.2181864
   GEBSER M., 2012, KR
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Gent IP, 2017, J ARTIF INTELL RES, V59, P815, DOI 10.1613/jair.5512
   Gomes CP, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P431
   Hehenberger P, 2016, COMPUT IND, V82, P273, DOI 10.1016/j.compind.2016.05.006
   Huang JB, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2318
   Kaufmann B, 2016, AI MAG, V37, P25, DOI 10.1609/aimag.v37i3.2672
   Nadel A., 2012, LNCS, V7317, P242, DOI DOI 10.1007/978-3-642-31612-819
   Pipatsrisawat K, 2007, LECT NOTES COMPUT SC, V4501, P294
   Ratasich D, 2019, IEEE ACCESS, V7, P13260, DOI 10.1109/ACCESS.2019.2891969
   Rossi D, 2012, IEEE CONF COMPUT, P280, DOI 10.1109/INFCOMW.2012.6193506
   Silva JPM, 1996, PROC INT C TOOLS ART, P467, DOI 10.1109/TAI.1996.560789
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Sutton RS, 1996, ADV NEUR IN, V8, P1038
   Swift Terrance, 2012, THEOR PRACT LOG PROG, V12, P1
NR 34
TC 5
Z9 5
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2020
VL 20
IS 5
SI SI
BP 625
EP 640
AR PII S147106842000037X
DI 10.1017/S147106842000037X
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR5RA
UT WOS:000571619500004
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Aguado, F
   Cabalar, P
   Fandinno, J
   Pearce, D
   Pérez, G
   Vidal, C
AF Aguado, Felicidad
   Cabalar, Pedro
   Fandinno, Jorge
   Pearce, David
   Perez, Gilberto
   Vidal, Concepcion
TI Revisiting Explicit Negation in Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Answer set programming; Non-monotonic reasoning; Equilibrium logic;
   Explicit negation
ID LOGIC; SEMANTICS
AB A common feature in Answer Set Programming is the use of a second negation, stronger than default negation and sometimes called explicit, strong or classical negation. This explicit negation is normally used in front of atoms, rather than allowing its use as a regular operator. In this paper we consider the arbitrary combination of explicit negation with nested expressions, as those defined by Lifschitz, Tang and Turner. We extend the concept of reduct for this new syntax and then prove that it can be captured by an extension of Equilibrium Logic with this second negation. We study some properties of this variant and compare to the already known combination of Equilibrium Logic with Nelson's strong negation.
C1 [Aguado, Felicidad; Cabalar, Pedro; Perez, Gilberto; Vidal, Concepcion] Univ A Coruna, CITIC, Informat Retrieval Lab, La Coruna, Spain.
   [Fandinno, Jorge] Univ Toulouse, IRIT, CNRS, Toulouse, France.
   [Fandinno, Jorge] Univ Potsdam, Potsdam, Germany.
   [Pearce, David] Univ Politecn Madrid, Madrid, Spain.
C3 Universidade da Coruna; Universite Federale Toulouse Midi-Pyrenees
   (ComUE); Universite de Toulouse; Institut National Polytechnique de
   Toulouse; Universite Toulouse III - Paul Sabatier; Centre National de la
   Recherche Scientifique (CNRS); University of Potsdam; Universidad
   Politecnica de Madrid
RP Aguado, F (corresponding author), Univ A Coruna, CITIC, Informat Retrieval Lab, La Coruna, Spain.
EM aguado@udc.es; cabalar@udc.es; jorge.fandinno@irit.fr;
   david.pearce@upm.es; gperez@udc.es; eicovima@udc.es
RI Cabalar, Pedro/AAE-5198-2020; Fandinno, Jorge/JJC-6227-2023; Vidal
   Martín, Concepción/AAA-2451-2022; Fandiño, Jorge/F-8705-2016; Vidal
   Martín, Concepción/ABD-9547-2021
OI Vidal Martín, Concepción/0000-0002-5561-6406; Fandiño,
   Jorge/0000-0002-3917-8717; Vidal Martín, Concepción/0000-0002-5561-6406
FU MINECO, Spain [TIC2017-84453-P]; Xunta de Galicia, Spain [GPC ED431B
   2019/03, 2016-2019 ED431G/01]; Centre International de Mathematiques et
   d'Informatique de Toulouse (CIMI) [ANR-11-LABEX-0040-CIMI,
   ANR-11-IDEX-0002-02]; Alexander von Humboldt Foundation
FX This work was partially supported by MINECO, Spain, grant
   TIC2017-84453-P, Xunta de Galicia, Spain (GPC ED431B 2019/03 and
   2016-2019 ED431G/01, CITIC). The third author is funded by the Centre
   International de Mathematiques et d'Informatique de Toulouse (CIMI)
   through contract ANR-11-LABEX-0040-CIMI within the programme
   ANR-11-IDEX-0002-02 and the Alexander von Humboldt Foundation.
CR Aguado Felicidad, 2013, Journal of Applied Non-Classical Logic, V23, P2, DOI 10.1080/11663081.2013.798985
   CABALAR P, 2019, P 15 INT C LOG PROGR
   Cabalar P, 2006, LECT NOTES COMPUT SC, V4140, P592
   Cabalar P, 2014, LECT NOTES ARTIF INT, V8761, P340, DOI 10.1007/978-3-319-11558-0_24
   Cabalar P, 2011, THEOR PRACT LOG PROG, V11, P203, DOI 10.1017/S1471068410000517
   del Cerro LF, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2964
   DelCerro LF, 1996, APPL LOG SER, V3, P93
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   GELFOND M, 1993, J LOGIC PROGRAM, V17, P301, DOI 10.1016/0743-1066(93)90035-F
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Heyting A, 1930, SITZBER PREUSS AKAD, P42
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Marek Victor, 1999, STABLE MODELS ALTERN, P169
   Nelson D., 1949, J SYMBOLIC LOGIC, V14, P1626
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Odintsov S, 2005, LECT NOTES ARTIF INT, V3662, P343, DOI 10.1007/11546207_27
   Ortiz M, 2007, J LOGIC COMPUT, V17, P499, DOI 10.1093/logcom/exm011
   Pearce D, 1997, LECT NOTES ARTIF INT, V1216, P57, DOI 10.1007/BFb0023801
   PEREIRA LM, 1992, ECAI 92 - 10TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE : PROCEEDINGS, P102
   Vakarelov D., 1977, Stud. Log., V36, P109
   Vorob'ev N, 1952, DOKL AKAD NAUK SSSR, V85, P689
   Vorob'ev N. N., 1952, Doklady Akademii Nauk SSSR, V85, P465
NR 24
TC 4
Z9 4
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 908
EP 924
DI 10.1017/S1471068419000267
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500018
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Eiter, T
   Ogris, P
   Schekotihin, K
AF Eiter, Thomas
   Ogris, Paul
   Schekotihin, Konstantin
TI A Distributed Approach to LARS Stream Reasoning (System paper)
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Stream reasoning; distributed systems; Answer Set Programming
ID KNOWLEDGE
AB Stream reasoning systems are designed for complex decision-making from possibly infinite, dynamic streams of data. Modern approaches to stream reasoning are usually performing their computations using stand-alone solvers, which incrementally update their internal state and return results as the new portions of data streams are pushed. However, the performance of such approaches degrades quickly as the rates of the input data and the complexity of decision problems are growing. This problem was already recognized in the area of stream processing, where systems became distributed in order to allocate vast computing resources provided by clouds. In this paper we propose a distributed approach to stream reasoning that can efficiently split computations among different solvers communicating their results over data streams. Moreover, in order to increase the throughput of the distributed system, we suggest an interval-based semantics for the LARS language, which enables significant reductions of network traffic. Performed evaluations indicate that the distributed stream reasoning significantly outperforms existing stand-alone LARS solvers when the complexity of decision problems and the rate of incoming data are increasing.
C1 [Eiter, Thomas] Tech Univ Wien, Inst Log & Computat, KBS Grp, Vienna, Austria.
   [Ogris, Paul; Schekotihin, Konstantin] Alpen Adria Univ, Klagenfurt, Austria.
C3 Technische Universitat Wien; University of Klagenfurt
RP Eiter, T (corresponding author), Tech Univ Wien, Inst Log & Computat, KBS Grp, Vienna, Austria.
EM eiter@kr.tuwien.ac.at; paul.ogris@aau.at; konstantin.schekotihin@aau.at
RI Eiter, Thomas/ABE-9263-2021; Schekotihin, Konstantin/IZN-7815-2023
OI Schekotihin, Konstantin/0000-0002-0286-0958
FU Austrian Federal Ministry of Transport, Innovation and Technology
   (BMVIT) [861263]
FX This work was conducted in the scope of the research project DynaCon
   (FFG-PNr.: 861263), which is funded by the Austrian Federal Ministry of
   Transport, Innovation and Technology (BMVIT) under the program "ICT of
   the Future" between 2017 and 2020 (see https://iktderzukunft.at/en/ for
   more information).
CR Abiteboul S, 1995, FDN DATABASES
   ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   Alur R, 1996, J ACM, V43, P116, DOI 10.1145/227595.227602
   Anicic D, 2012, SEMANT WEB, V3, P397, DOI 10.3233/SW-2011-0053
   Apt K.R., 1988, THEORY DECLARATIVE K, P89
   Arasu A, 2006, VLDB J, V15, P121, DOI 10.1007/s00778-004-0147-z
   Barbieri DF, 2010, LECT NOTES COMPUT SC, V6088, P1, DOI 10.1007/978-3-642-13486-9_1
   Bazoobandi HR, 2017, LECT NOTES COMPUT SC, V10587, P87, DOI 10.1007/978-3-319-68288-4_6
   BECK H, 2018, THESIS
   Beck H, 2018, ARTIF INTELL, V261, P16, DOI 10.1016/j.artint.2018.04.003
   Beck H, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2741
   Beck H, 2017, THEOR PRACT LOG PROG, V17, P744, DOI 10.1017/S1471068417000370
   Becker HD, 2017, INTRODUCTION TO BRONCHOSCOPY, 2ND EDITION, P1
   Brandt S, 2017, AAAI CONF ARTIF INTE, P1070
   Le-Phuoc D, 2011, LECT NOTES COMPUT SC, V7031, P370, DOI 10.1007/978-3-642-25073-6_24
   Della Valle E, 2009, IEEE INTELL SYST, V24, P83, DOI 10.1109/MIS.2009.125
   DOYLE J, 1979, ARTIF INTELL, V12, P231, DOI 10.1016/0004-3702(79)90008-0
   Gebser M., 2014, ABS14053694 CORR
   Gent IP, 2017, J ARTIF INTELL RES, V59, P815, DOI 10.1613/jair.5512
   Heintz F, 2004, J INTELL FUZZY SYST, V15, P3
   HEINTZ F, 2010, DAGST SEM P
   Maler O, 2004, LECT NOTES COMPUT SC, V3253, P152, DOI 10.1007/978-3-540-30206-3_12
   Pham TL, 2019, SEMANT WEB, V10, P457, DOI 10.3233/SW-180330
   REN X, 2018, CEUR WORKSHOP P, V2180
   Ren X.H., 2018, THESIS
NR 25
TC 9
Z9 9
U1 1
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 974
EP 989
DI 10.1017/S1471068419000309
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500022
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Spies, D
   You, JH
   Hayward, R
AF Spies, David
   You, Jia-Huai
   Hayward, Ryan
TI Domain-Independent Cost-Optimal Planning in ASP
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Cost-Optimal Planning; Answer Set Programming; CORE-2 ASP Standard
ID SATISFIABILITY
AB We investigate the problem of cost-optimal planning in ASP. Current ASP planners can be trivially extended to a cost-optimal one by adding weak constraints, but only for a given makespan (number of steps). It is desirable to have a planner that guarantees global optimality. In this paper, we present two approaches to addressing this problem. First, we show how to engineer a cost-optimal planner composed of two ASP programs running in parallel. Using lessons learned from this, we then develop an entirely new approach to cost-optimal planning, stepless planning, which is completely free of makespan. Experiments to compare the two approaches with the only known cost-optimal planner in SAT reveal good potentials for stepless planning in ASP.
C1 [Spies, David; You, Jia-Huai; Hayward, Ryan] Univ Alberta, Edmonton, AB, Canada.
C3 University of Alberta
RP Spies, D (corresponding author), Univ Alberta, Edmonton, AB, Canada.
CR Alviano M., 2015, J LOGIC COMPUTATION
   Baral C., 2003, KNOWLEDGE REPRESENTA
   BARTAK R, 2012, P 25 INT FLOR ART IN
   Blum AL, 1997, ARTIF INTELL, V90, P281, DOI 10.1016/S0004-3702(96)00047-1
   Calimeri Francesco, 2015, ASP CORE 2 INPUT LAN
   CHEN Y, 2008, P 6 INT PLANN COMP I
   Dimopoulos Y, 2019, THEOR PRACT LOG PROG, V19, P477, DOI 10.1017/S1471068418000583
   Eiter T, 2003, J ARTIF INTELL RES, V19, P25, DOI 10.1613/jair.1148
   FIKES RE, 1971, ARTIF INTELL, V2, P189, DOI 10.1016/0004-3702(71)90010-5
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P358
   Howey R, 2004, PROC INT C TOOLS ART, P294
   Kautz H., 2004, Working Notes on the Fourth International Planning Competition (IPC-2004), P44
   Lelis L. H. S., 2016, P IJCAI 2016, P3185
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Maratea M, 2012, AI COMMUN, V25, P343, DOI 10.3233/AIC-2012-0540
   RINTANEN J., 2011, P 21 INT C AUT PLANN
   Rintanen J, 2012, ARTIF INTELL, V193, P45, DOI 10.1016/j.artint.2012.08.001
   Robinson N., 2010, ICAPS 2010 WORKSH CO
   Robinson Nathan, 2008, PROC INT C AUTOMATED, P296
   SPIES D., 2019, THESIS
   Suda M, 2014, J ARTIF INTELL RES, V50, P265, DOI 10.1613/jair.4231
   Tange O., 2018, GNU PARALLEL 2018ISB
   Vidal V, 2006, ARTIF INTELL, V170, P298, DOI 10.1016/j.artint.2005.08.004
NR 23
TC 1
Z9 1
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 1124
EP 1141
DI 10.1017/S1471068419000395
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500031
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Marcopoulos, E
   Zhang, YL
AF Marcopoulos, Elias
   Zhang, Yuanlin
TI onlineSPARC: A Programming Environment for Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE CS education; logic programming; answer set programming; integrated
   development environment; visualization
AB Recent progress in logic programming (e.g. the development of the answer set programming (ASP) paradigm) has made it possible to teach it to general undergraduate and even middle/high school students. Given the limited exposure of these students to computer science, the complexity of downloading, installing, and using tools for writing logic programs could be a major barrier for logic programming to reach a much wider audience. We developed onlineSPARC, an online ASP environment with a self-contained file system and a simple interface. It allows users to type/edit logic programs and perform several tasks over programs, including asking a query to a program, getting the answer sets of a program, and producing a drawing/animation based on the answer sets of a program.
C1 [Marcopoulos, Elias] Tufts Univ, Medford, MA 02155 USA.
   [Zhang, Yuanlin] Texas Tech Univ, Lubbock, TX 79409 USA.
C3 Tufts University; Texas Tech University System; Texas Tech University
RP Marcopoulos, E (corresponding author), Tufts Univ, Medford, MA 02155 USA.
EM emarcopoulos@gmail.com; y.zhang@ttu.edu
RI Zhang, Yuanlin/I-9289-2017
OI Mondol, Anupom/0000-0001-9956-433X
FU National Science Foundation [CNS-1359359]
FX The authors were partially supported by the National Science Foundation
   (Grant No. CNS-1359359). We thank Christian Reotutar, Evgenii Balai,
   Mbathio Diagne, Peter Lee, Maede Rayatidamavandi, Crisel Suarez, Edward
   Wertz, and Shao-Lon Yeh for their contribution to the implementation of
   the environment. Christian Reotutar also contributed to the early
   preparation of this paper. We thank Michael Gelfond and Yinan Zhang for
   their input and help. We thank the anonymous reviewers whose feedback
   helps to improve the quality of this paper as well as that of
   onlineSPARC.
CR Ambroz T., 2013, INT C LOG PROGR NONM, P73
   [Anonymous], 2009, LEARNING SCI COMPUTE
   Balai E., 2013, SPARC MANUAL
   Balai E, 2013, LECT NOTES COMPUT SC, V8148, P135, DOI 10.1007/978-3-642-40564-8_14
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Cliffe O., 2008, INT C LOG PROGR, P724
   Dasseville I., 2015, ARXIV151100920
   Dodaro C., 2015, INT C LOG PROGR NONM, P279
   Dovier A., 2016, CILC, P205
   Febbraro O, 2011, LECT NOTES ARTIF INT, V6645, P317
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gelfond M., 2014, KNOWLEDGE REPRESENTA
   Germano S, 2018, LECT NOTES COMPUT SC, V10702, P152, DOI 10.1007/978-3-319-73305-0_10
   Guzdial M., 2001, SIGCSE Bulletin, V33, P17, DOI 10.1145/507758.377452
   Kloimullner Christian, 2013, Applications of Declarative Programming and Knowledge Management. 19th International Conference, INAP 2011 and 25th Workshop on Logic Programming, WLP 2011. Revised Selected Papers 7773, P325, DOI 10.1007/978-3-642-41524-1_20
   Kowalski R, 2016, THEOR PRACT LOG PROG, V16, P269, DOI 10.1017/S1471068416000041
   Kowalski Robert, 2014, HDB HIST LOGIC, V9
   Lapauw R., 2015, ARXIV151100928
   McIlraith S., 2011, COMMUNICATION
   Mendelsohn Patrick, 1990, Psychology of programming, P175, DOI [10.1016/B978-0-12-350772-3.50016-1, DOI 10.1016/B978-0-12-350772-3.50016-1]
   Oetsch Johannes, 2013, Applications of Declarative Programming and Knowledge Management. 19th International Conference, INAP 2011 and 25th Workshop on Logic Programming, WLP 2011. Revised Selected Papers 7773, P305, DOI 10.1007/978-3-642-41524-1_19
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Reyes M., 2016, 30 AAAI C ART INT
   Sureshkumar A., 2007, P WORKSH SOFTW ENG A, P101
NR 24
TC 3
Z9 3
U1 3
U2 10
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2019
VL 19
IS 2
SI SI
BP 262
EP 289
DI 10.1017/S1471068418000509
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA HL5XX
UT WOS:000458807300005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Harrison, A
   Lifschitz, V
   Michael, J
AF Harrison, Amelia
   Lifschitz, Vladimir
   Michael, Julian
TI Proving infinitary formulas
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
AB The infinitary propositional logic of here-and-there is important for the theory of answer set programming in view of its relation to strongly equivalent transformations of logic programs. We know a formal system axiomatizing this logic exists, but a proof in that system may include infinitely many formulas. In this note we describe a relationship between the validity of infinitary formulas in the logic of here-and-there and the provability of formulas in some finite deductive systems. This relationship allows us to use finite proofs to justify the validity of infinitary formulas.
C1 [Harrison, Amelia; Lifschitz, Vladimir] Univ Texas Austin, Austin, TX 78712 USA.
   [Michael, Julian] Univ Washington, Seattle, WA 98195 USA.
C3 University of Texas System; University of Texas Austin; University of
   Washington; University of Washington Seattle
RP Harrison, A (corresponding author), Univ Texas Austin, Austin, TX 78712 USA.
EM ameliaj@cs.utexas.edu; vl@cs.utexas.edu; julianjohnmichael@gmail.com
FU Div Of Information & Intelligent Systems; Direct For Computer & Info
   Scie & Enginr [1422455] Funding Source: National Science Foundation
CR [Anonymous], 2000, A Short Introduction to Intuitionistic Logic
   Clark K. L., 1978, Logic and data bases, P293
   Eiter T., 2005, P AAAI C ART INT AAA, P695
   Gebser M, 2015, THEOR PRACT LOG PROG, V15, P449, DOI 10.1017/S1471068415000150
   Harrison Amelia, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P398, DOI 10.1007/978-3-319-23264-5_33
   Harrison A, 2015, THEOR PRACT LOG PROG, V15, P18, DOI 10.1017/S1471068414000088
   HOSOI T, 1966, J FAC SCI U TOKYO 1, V13, P183
   Lifschitz V, 2007, LECT NOTES COMPUT SC, V4483, P188, DOI 10.1007/978-3-540-72200-7_17
   Lifschitz V, 2008, FOUND ARTIF INTELL, P3, DOI 10.1016/S1574-6526(07)03001-5
   Truszczynski M., 2012, Lecture Notes in Computer Science, V7265, P543
   Umezawa T, 1959, J MATH SOC JAPAN, V11, P116
NR 11
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 787
EP 799
DI 10.1017/S1471068416000302
PN 5-6
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800018
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhou, NF
   Barták, R
   Dovier, A
AF Zhou, Neng-Fa
   Bartak, Roman
   Dovier, Agostino
TI Planning as tabled logic programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
AB This paper describes Picat's planner, its implementation, and planning models for several domains used in International Planning Competition (IPC) 2014. Picat's planner is implemented by use of tabling. During search, every state encountered is tabled, and tabled states are used to effectively perform resource-bounded search. In Picat, structured data can be used to avoid enumerating all possible permutations of objects, and term sharing is used to avoid duplication of common state data. This paper presents several modeling techniques through the example models, ranging from designing state representations to facilitate data sharing and symmetry breaking, encoding actions with operations for efficient precondition checking and state updating, to incorporating domain knowledge and heuristics. Broadly, this paper demonstrates the effectiveness of tabled logic programming for planning, and argues the importance of modeling despite recent significant progress in domain-independent PDDL planners.
C1 [Zhou, Neng-Fa] CUNY Brooklyn Coll, Brooklyn, NY 11210 USA.
   [Zhou, Neng-Fa] Grad Ctr, New York, NY 10016 USA.
   [Bartak, Roman] Charles Univ Prague, CR-11636 Prague 1, Czech Republic.
   [Dovier, Agostino] Univ Udine, I-33100 Udine, Italy.
C3 City University of New York (CUNY) System; Brooklyn College (CUNY);
   Charles University Prague; University of Udine
RP Zhou, NF (corresponding author), CUNY Brooklyn Coll, Brooklyn, NY 11210 USA.
RI Dovier, Agostino/JAO-3262-2023; Barták, Roman/N-8554-2017
OI Barták, Roman/0000-0002-6717-8175; Dovier, Agostino/0000-0003-2052-8593
FU Direct For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [1018006] Funding Source: National Science
   Foundation
CR Alford R, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P1629
   Bacchus F, 2000, ARTIF INTELL, V116, P123, DOI 10.1016/S0004-3702(99)00071-5
   Baier J. A., 2011, KNOWING REASONING AC
   Barták R, 2015, PROCEEDINGS OF THE 17TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING (PPDP 2015), P31, DOI 10.1145/2790449.2790521
   Barták R, 2014, THEOR PRACT LOG PROG, V14, P697, DOI 10.1017/S1471068414000295
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Chrpa L., 2014, INT PLANNING COMPETI
   Dawson S, 1996, ACM SIGPLAN NOTICES, V31, P117, DOI 10.1145/249069.231399
   Dovier Agostino, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P259, DOI 10.1007/978-3-642-20832-4_17
   Eiter T., 2004, ACM Transactions on Computational Logic, V5, P206, DOI 10.1145/976706.976708
   Gebser Martin, 2012, SYNTHESIS LECT ARTIF
   Gelfond M., 1998, ELECT T ARTIFICIAL I, V2, P193
   Guo HF, 2008, SOFTWARE PRACT EXPER, V38, P75, DOI 10.1002/spe.824
   Haslum Patrik, 2003, ICAPS WORKSH PDDL
   Hewitt C., 1969, P 1 INT JOINT C ARTI, P295
   Kautz H., 1998, Proceedings Fourth International Conference on Artificial Intelligence Planning Systems, P181
   KORF RE, 1985, ARTIF INTELL, V27, P97, DOI 10.1016/0004-3702(85)90084-0
   Kowalski Robert, 1979, Logic for Problem Solving
   Levesque HJ, 1997, J LOGIC PROGRAM, V31, P59, DOI 10.1016/S0743-1066(96)00121-5
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   McDermott Drew, 1998, 98003 CVC
   MICHIE D, 1968, NATURE, V218, P19, DOI 10.1038/218019a0
   Nielson F, 2004, LECT NOTES COMPUT SC, V2988, P251
   PIENTKA B, 2003, CMUCS03185
   Ramakrishna YS, 1997, LECT NOTES COMPUT SC, V1254, P143
   TAMAKI H, 1986, LECT NOTES COMPUT SC, V225, P84
   Torralba A., 2014, INT PLANNING COMPETI, P105
   Warren D.H.D., 1974, 76 DCL U ED
   WARREN DS, 1992, COMMUN ACM, V35, P93, DOI 10.1145/131295.131299
   Zhou NF, 2008, THEOR PRACT LOG PROG, V8, P81, DOI 10.1017/S147106840700316X
   Zhou NF, 2013, FUND INFORM, V124, P561, DOI 10.3233/FI-2013-849
   Zhou NF, 2012, THEOR PRACT LOG PROG, V12, P547, DOI 10.1017/S1471068412000178
   Zhou NF, 2010, PROC INT C TOOLS ART, P213, DOI 10.1109/ICTAI.2010.103
   Zhou Neng-Fa, 2014, COMBINATORIAL SEARCH
NR 34
TC 6
Z9 7
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 543
EP 558
DI 10.1017/S1471068415000216
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Erdem, E
   Oztok, U
AF Erdem, Esra
   Oztok, Umut
TI Generating explanations for biomedical queries
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; explanation generation; query answering;
   biomedical queries
ID LOGIC PROGRAMS; ANSWER
AB We introduce novel mathematical models and algorithms to generate (shortest or k different) explanations for biomedical queries, using answer set programming. We implement these algorithms and integrate them in BIOQUERY-ASP. We illustrate the usefulness of these methods with some complex biomedical queries related to drug discovery, over the biomedical knowledge resources PHARMGKB, DRUGBANK, BIOGRID, CTD, SIDER, DISEASE ONTOLOGY, and ORPHADATA.
C1 [Erdem, Esra; Oztok, Umut] Sabanci Univ, TR-34956 Istanbul, Turkey.
C3 Sabanci University
RP Erdem, E (corresponding author), Sabanci Univ, TR-34956 Istanbul, Turkey.
EM esraerdem@sabanciuniv.edu; uoztok@sabanciuniv.edu
RI Erdem, Esra/I-4587-2012
OI Erdem, Esra/0000-0001-8384-7810
FU TUBITAK Grant [108E229]
FX We thank Yelda Erdem (Sanovel Pharmaceutical Inc.) for her help in
   identifying biomedical queries relevant to drug discovery, Halit Erdogan
   (Sabanci University) for his help with an earlier version of
   BioQuery-ASP that he implemented as part of his MS thesis studies, and
   Hans Tompits (Vienna University of Technology) for his useful comments
   about the work presented in the article, and pointing out relevant
   references in the context of debugging ASP programs. We also thank
   anonymous reviewers for their useful comments and suggestions on an
   earlier draft. This work was partially supported by TUBITAK Grant
   108E229.
CR [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   APT KR, 1994, J LOGIC PROGRAM, V20, P9, DOI 10.1016/0743-1066(94)90024-8
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Bodenreider O., 2008, P 3 INT WORKSH APPL
   Brain M., 2005, P 3 INT WORKSH ANSW
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Chong CR, 2007, NATURE, V448, P645, DOI 10.1038/448645a
   Davis AP, 2011, NUCLEIC ACIDS RES, V39, pD1067, DOI 10.1093/nar/gkq813
   Eiter T, 2006, LECT NOTES COMPUT SC, V4011, P273
   Erdem E., 2009, P WORKSH BIONLP, P117
   Erdem E., 2011, PROC 25 AAAI CONF AR, P785
   Erdem E., 2011, PROC OF THE FIFTH IN
   Ferraris P, 2005, THEOR PRACT LOG PROG, V5, P45, DOI 10.1017/S1471068403001923
   Gebser M, 2008, P 23 NAT C ART INT, V1
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P260, DOI 10.1007/978-3-540-72200-7_23
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Gower T., 2009, PROTO MAGAZINE   SUM, P14
   Knox C, 2011, NUCLEIC ACIDS RES, V39, pD1035, DOI 10.1093/nar/gkq1126
   Kuhn M, 2010, MOL SYST BIOL, V6, DOI 10.1038/msb.2009.98
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Lifschitz V., 2008, AAAI, V3, P1594
   McDonagh EM, 2011, BIOMARK MED, V5, P795, DOI [10.2217/bmm.11.94, 10.2217/BMM.11.94]
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Nogueira M., 2001, Practical Aspects of Declarative Languages. Third International Symposium, PADL 2001. Proceedings (Lecture Notes in Computer Science Vol.1990), P169
   Oetsch J, 2011, LECT NOTES ARTIF INT, V6645, P134
   Oetsch J, 2010, THEOR PRACT LOG PROG, V10, P513, DOI 10.1017/S1471068410000256
   Oztok U., 2012, THESIS
   Pontelli E, 2009, THEOR PRACT LOG PROG, V9, P1, DOI 10.1017/S1471068408003633
   Ricca F, 2012, THEOR PRACT LOG PROG, V12, P361, DOI 10.1017/S147106841100007X
   Schriml LM, 2012, NUCLEIC ACIDS RES, V40, pD940, DOI 10.1093/nar/gkr972
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Stark C, 2006, NUCLEIC ACIDS RES, V34, pD535, DOI 10.1093/nar/gkj109
   Syrjanen T., 2006, P 11 INT WORKSH NONM
   Tiihonen J., 2003, P 14 INT C ENG DESIG, P1290
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
NR 37
TC 23
Z9 23
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2015
VL 15
BP 35
EP 78
DI 10.1017/S1471068413000598
PN 1
PG 44
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA CB5LK
UT WOS:000349668400003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tarau, P
AF Tarau, Paul
TI Compact serialization of Prolog terms (with catalan skeletons, cantor
   tupling and Godel numberings)
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
DE bijective serialization of Prolog terms; ranking/unranking of Catalan
   families; generalized Cantor n-tupling bijection; combinatorial number
   system
AB We describe a compact serialization algorithm mapping Prolog terms to natural numbers of bit-sizes proportional to the memory representation of the terms. The algorithm is a " no bit lost" bijection, as it associates to each Prolog term a unique natural number and each natural number corresponds to a unique syntactically well-formed term.
   To avoid an exponential explosion resulting from bijections mapping term trees to natural numbers, we separate the symbol content and the syntactic skeleton of a term that we serialize compactly using a ranking algorithm for Catalan families.
   A novel algorithm for the generalized Cantor bijection between N and N-k is used in the process of assigning polynomially bounded Godel numberings to various data objects involved in the translation.
EM tarau@cs.unt.edu
FU NSF [1018172]; Division of Computing and Communication Foundations;
   Direct For Computer & Info Scie & Enginr [1018172] Funding Source:
   National Science Foundation
FX This research has been supported by NSF research grant 1018172. We thank
   the anonymous reviewers of ICLP'13 for their thoughtful comments and
   their suggestions that have helped improve this paper.
CR [Anonymous], 1931, MONATSH F MATH PHYSI, DOI DOI 10.1007/BF01700692
   [Anonymous], 2005, ART COMPUTER PROGRAM
   Buckles B. P., 1977, ACM T MATH SOFTWARE, V5, P180
   Cegielski P, 1999, THEOR COMPUT SCI, V222, P55, DOI 10.1016/S0304-3975(97)00281-8
   Hartmanis J., 1974, LECT NOTES COMPUTER, V14, P301
   Knuth D. E., 2006, The Art of Computer Programming, Volume 4, Fascicle 4: Generating All TreesHistory of Combinatorial Generation, V4
   Kreher D.L., 1999, CRC DISCR MATH APPL
   Lehmer D., 1964, The machine tools of combinatorics, P5
   LIEBEHENSCHEL J, 2000, SEMINAIRE LOTHARINGI, V43, P19
   Lisi M., 2007, LECT NOTES COMPUTER, V62, P1
   Salomaa A., 1973, Formal Languages
   Tarau P., 2012, 28 INT C LOG PROGR T
   Tarau P., 2011, CICLOPS 2011 LEX KY
   Tarau P, 2009, PPDP'09: PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING, P171, DOI 10.1145/1599410.1599432
NR 14
TC 6
Z9 6
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 847
EP 861
DI 10.1017/S1471068413000537
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400026
DA 2024-07-18
ER

PT J
AU Truszczynski, M
AF Truszczynski, Miroslaw
TI Trichotomy and dichotomy results on the complexity of reasoning with
   disjunctive logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer sets; supported models; complexity of reasoning
ID SEMANTICS; DEFAULT
AB We present trichotomy results characterizing the complexity of reasoning with disjunctive logic programs. To this end, we introduce a certain definition schema for classes of programs based on a set of allowed arities of rules. We show that each such class of programs has a finite representation, and for each of the classes definable in the schema, we characterize the complexity of the existence of an answer set problem. Next, we derive similar characterizations of the complexity of skeptical and credulous reasoning with disjunctive logic programs. Such results are of potential interest. On the one hand, they reveal some reasons responsible for the hardness of computing answer sets. On the other hand, they identify classes of problem instances, for which the problem is "easy" (in P) or "easier than in general" (in NP). We obtain similar results for the complexity of reasoning with disjunctive programs under the supported-model semantics.
C1 Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
C3 University of Kentucky
RP Truszczynski, M (corresponding author), Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
EM mirek@cs.uky.edu
FU NSF [IIS-0913459]
FX This paper is an extended version of the paper presented at the 10th
   International Conference on Logic Programming and Nonmonotonic Reasoning
   (Truszczynski 2009). The work was partially supported by the NSF Grant
   IIS-0913459. The author gratefully acknowledges several helpful comments
   from the anonymous referees.
CR BEN-ELIYAHU R., 1997, ANN MATH ARTIFICIAL, V12, P53
   Brass S, 1997, J LOGIC PROGRAM, V32, P207, DOI 10.1016/S0743-1066(96)00115-X
   Bulatov A, 2005, SIAM J COMPUT, V34, P720, DOI 10.1137/S0097539700376676
   CADOLI M, 1992, INFORM PROCESS LETT, V44, P113, DOI 10.1016/0020-0190(92)90049-2
   CADOLI M, 1994, J COMPUT SYST SCI, V48, P255, DOI 10.1016/S0022-0000(05)80004-2
   Chapdelaine P, 2007, LECT NOTES COMPUT SC, V4483, P58, DOI 10.1007/978-3-540-72200-7_7
   Creignou N., 2001, SIGACT News, V32, P24, DOI 10.1145/568425.568432
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Dowling W. F., 1984, Journal of Logic Programming, V1, P267, DOI 10.1016/0743-1066(84)90014-1
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Inoue K, 1998, J LOGIC PROGRAM, V35, P39, DOI 10.1016/S0743-1066(97)10001-2
   Lifschitz V., 2005, WE WILL SHOW THEM ES, P615
   MAREK W, 1992, THEOR COMPUT SCI, V103, P365, DOI 10.1016/0304-3975(92)90019-C
   MAREK W, 1991, J ACM, V38, P588, DOI 10.1145/116825.116836
   Nordh G, 2008, ARTIF INTELL, V172, P1245, DOI 10.1016/j.artint.2008.02.001
   Schaefer Thomas J, 1978, P 10 ANN ACM S THEOR, P216, DOI DOI 10.1145/800133.804350
   Truszczynski M, 2009, LECT NOTES COMPUT SC, V5753, P303, DOI 10.1007/978-3-642-04238-6_26
NR 18
TC 16
Z9 16
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2011
VL 11
BP 881
EP 904
DI 10.1017/S1471068410000463
PN 6
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 853RB
UT WOS:000297442300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lierler, Y
   Truszczynski, M
AF Lierler, Yuliya
   Truszczynski, Miroslaw
TI Transition systems for model generators-A unifying approach
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Logic Programming
CT 27th International Conference on Logic Programming
CY 2010
CY JUL 06-10, 2011
CL Lexington, KY
CL Lexington, KY
ID ANSWER SET; LOGIC; SEMANTICS; SAT; PROGRAM
AB A fundamental task for propositional logic is to compute models of propositional formulas. Programs developed for this task are called satisfiability solvers. We show that transition systems introduced by Nieuwenhuis, Oliveras, and Tinelli to model and analyze satisfiability solvers can be adapted for solvers developed for two other propositional formalisms: logic programming under the answer-set semantics, and the logic PC(ID). We show that in each case the task of computing models can be seen as "satisfiability modulo answer-set programming," where the goal is to find a model of a theory that also is an answer set of a certain program. The unifying perspective we develop shows, in particular, that solvers clasp and MINISAT(ID) are closely related despite being developed for different formalisms, one for answer-set programming and the latter for the logic PC(ID).
C1 [Lierler, Yuliya; Truszczynski, Miroslaw] Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
C3 University of Kentucky
RP Lierler, Y (corresponding author), Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
EM yuliya@cs.uky.edu; mirek@cs.uky.edu
FU Direct For Computer & Info Scie & Enginr; Div Of Information &
   Intelligent Systems [0913459] Funding Source: National Science
   Foundation
CR Clark K. L., 1978, Logic and data bases, P293
   COOK SA, 1979, J SYMBOLIC LOGIC, V44, P36, DOI 10.2307/2273702
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   Denecker M, 2000, LECT NOTES ARTIF INT, V1861, P703
   Eiter T, 1997, LECT NOTES ARTIF INT, V1265, P363
   Ferraris P, 2005, THEOR PRACT LOG PROG, V5, P45, DOI 10.1017/S1471068403001923
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gebser M, 2006, LECT NOTES COMPUT SC, V4079, P11, DOI 10.1007/11799573_4
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Giunchiglia E, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P61
   Giunchiglia E, 2005, LECT NOTES COMPUT SC, V3668, P37, DOI 10.1007/11562931_6
   Giunchiglia E, 2008, ANN MATH ARTIF INTEL, V53, P169, DOI 10.1007/s10472-009-9113-1
   Lee JF, 2005, LCN 2005: 30th Conference on Local Computer Networks, Proceedings, P503
   Leone N, 1997, INFORM COMPUT, V135, P69, DOI 10.1006/inco.1997.2630
   Lierler Y., 2010, THESIS U TEXAS AUSTI
   Lierler Y, 2011, THEOR PRACT LOG PROG, V11, P135, DOI 10.1017/S1471068410000578
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Mariën M, 2004, LECT NOTES COMPUT SC, V3229, P108, DOI 10.1007/978-3-540-30227-8_12
   MARIEN M, 2009, THESIS KATHOLIEKE U
   Marien M, 2008, LECT NOTES COMPUT SC, V4996, P211, DOI 10.1007/978-3-540-79719-7_20
   Niemelä I, 2000, SPRINGER INT SER ENG, V597, P491
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Oikarinen E, 2006, FRONT ARTIF INTEL AP, V141, P412
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Ward J, 2004, LECT NOTES ARTIF INT, V2923, P302
NR 28
TC 16
Z9 16
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 629
EP 646
DI 10.1017/S1471068411000214
PN 4-5
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Raiser, F
   Frühwirth, T
AF Raiser, Frank
   Fruehwirth, Thom
TI Analysing graph transformation systems through constraint handling rules
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Graph transformation systems; Constraint handling rules; Program
   analysis
ID CHR; CONFLUENCE; TERMINATION; MODEL
AB Graph transformation systems (GTS) and constraint handling rules (CHR) are non-deterministic rule-based state transition systems. CHR is well known for its powerful confluence and program equivalence analyses, for which we provide the basis in this work to apply them to GTS. We give a sound and complete embedding of GTS in CHR, investigate confluence of an embedded GTS and provide a program equivalence analysis for GTS via the embedding. The results confirm the suitability of CHR-based program analyses for other formalisms embedded in CHR.
C1 [Raiser, Frank; Fruehwirth, Thom] Univ Ulm, Fac Engn & Comp Sci, D-89069 Ulm, Germany.
C3 Ulm University
RP Raiser, F (corresponding author), Univ Ulm, Fac Engn & Comp Sci, D-89069 Ulm, Germany.
EM Frank.Raiser@uni-ulm.de; Thom.Fruehwirth@uni-ulm.de
CR Abdennadher S, 2003, LECT NOTES COMPUT SC, V3018, P198
   Abdennadher S, 2000, APPL ARTIF INTELL, V14, P311, DOI 10.1080/088395100117016
   Abdennadher S., 1999, Constraints, V4, P133, DOI 10.1023/A:1009842826135
   Abdennadher S, 1999, LECT NOTES COMPUT SC, V1713, P43
   Abdennadher S, 2008, LECT NOTES COMPUT SC, V4915, P106, DOI 10.1007/978-3-540-78769-3_8
   Baader Franz, 1998, TERM REWRITING ALL
   Bakewell A, 2003, LECT NOTES COMPUT SC, V3062, P30
   BARRANCOMENDOZA A, 2005, THESIS SIMON FRASER
   Bavarian M, 2006, J UNIVERS COMPUT SCI, V12, P1500
   Betz H, 2005, LECT NOTES COMPUT SC, V3709, P137, DOI 10.1007/11564751_13
   BETZ H, 2007, CHR 07, P33
   BLOSTEIN D, 1995, LECT NOTES COMPUTER, V1073, P38
   Dahl V, 2009, LECT NOTES COMPUT SC, V5601, P346, DOI 10.1007/978-3-642-02264-7_36
   Duck GJ, 2007, LECT NOTES COMPUT SC, V4670, P224, DOI 10.1007/978-3-540-74610-2_16
   Duck GJ, 2006, LECT NOTES COMPUT SC, V4079, P117, DOI 10.1007/11799573_11
   Ehrig H, 2004, LECT NOTES COMPUT SC, V2987, P151
   Ehrig H., 2006, MONO THEOR COMP SCI, DOI 10.1007/3-540-31188-2
   Frühwirth T, 2005, LECT NOTES COMPUT SC, V3668, P113, DOI 10.1007/11562931_11
   Fruhwirth T., 2000, New Trends in Constraints. Joint ERCIM/Compulog Net Workshop. Selected Papers (Lecture Notes in Artificial Intelligence Vol. 1865), P298
   Fruhwirth T.W., 2009, Constraint Handling Rules
   HUET G, 1980, J ACM, V27, P797, DOI 10.1145/322217.322230
   Kreowski HJ, 2000, LECT NOTES COMPUT SC, V1764, P215
   LAM ES, 2008, RISC REPORT SERIES, V810, P51
   LAM ES, 2006, CHR 06, P17
   LOWE M, 1993, THEOR COMPUT SCI, V109, P181, DOI 10.1016/0304-3975(93)90068-5
   LOWE M, 1993, 9337 TU
   Newman MHA, 1942, ANN MATH, V43, P223, DOI 10.2307/1968867
   Pilozzi P, 2008, LECT NOTES COMPUT SC, V5366, P501, DOI 10.1007/978-3-540-89982-2_43
   Plump D, 2005, LECT NOTES COMPUT SC, V3838, P280
   Plump D, 1995, LECT NOTES COMPUT SC, V1017, P88
   PRETSCHNER A, 2004, J SOFTWARE TOOLS TEC, V5, P140, DOI DOI 10.1007/S10009-003-0128-3
   Raiser F., 2009, CHR 2009, P34
   Raiser F, 2008, LECT NOTES COMPUT SC, V5202, P588, DOI 10.1007/978-3-540-85958-1_47
   Raiser F, 2007, LECT NOTES COMPUT SC, V4670, P240, DOI 10.1007/978-3-540-74610-2_17
   Raiser F, 2009, ELECTRON NOTES THEOR, V253, P91, DOI 10.1016/j.entcs.2009.10.019
   Raiser F, 2009, LECT NOTES COMPUT SC, V5649, P540, DOI 10.1007/978-3-642-02846-5_54
   Rangel G, 2008, LECT NOTES COMPUT SC, V5214, P242, DOI 10.1007/978-3-540-87405-8_17
   Sneyers J, 2010, THEOR PRACT LOG PROG, V10, P1, DOI 10.1017/S1471068409990123
   Sulzmann M, 2006, LECT NOTES COMPUT SC, V4279, P26
   Van Weert P, 2008, LECT NOTES COMPUT SC, V4915, P59
   VANWEERT P, 2008, JCHR
   VANWEERT P, 2006, CHR 06, P125
   VOETS D, 2008, 506 CW K U LEUV DEP
   WASSERTHAL M, 2009, THESIS ULM U ULM
NR 44
TC 4
Z9 6
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2011
VL 11
BP 65
EP 109
DI 10.1017/S1471068410000438
PN 1
PG 45
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 716TO
UT WOS:000286996600003
DA 2024-07-18
ER

PT J
AU Cadoli, M
   Mancini, T
AF Cadoli, Marco
   Mancini, Toni
TI Combining relational algebra, SQL, constraint modelling, and local
   search
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE constraint modelling and programming; relational databases; relational
   algebra; SQL; local search
ID ALGORITHMS; FRAMEWORK
AB The goal of this paper is to provide a strong integration between constraint modelling and relational DBMSs. To this end we propose extensions of standard query languages such as relational algebra and SQL, by adding constraint modelling capabilities to them. In particular, we propose non-deterministic extensions of both languages, which are specially suited for combinatorial problems. Non-determinism is introduced by means of a guessing operator, which declares a set of relations to have an arbitrary extension. This new operator results in languages with higher expressive power, able to express all problems in the complexity class NP. Some syntactical restrictions which make data complexity polynomial are shown. The effectiveness of both extensions is demonstrated by means of several examples. The current implementation, written in Java using local search techniques, is described.
C1 Univ Roma La Sapienza, Dipartimento Informat & Sistemist, I-00198 Rome, Italy.
C3 Sapienza University Rome
RP Cadoli, M (corresponding author), Univ Roma La Sapienza, Dipartimento Informat & Sistemist, Via Salaria 113, I-00198 Rome, Italy.
EM cadoli@dis.uniroma1.it; tmancini@dis.uniroma1.it
RI Mancini, Toni/JAC-9289-2023; Mancini, Toni/C-1399-2013
OI Mancini, Toni/0000-0003-3355-2170
CR AARTS E, 1997, WILEY INTERSCIENCE S
   Abiteboul S, 1995, FDN DATABASES
   [Anonymous], 1988, PRINCIPLES DATABASE
   [Anonymous], 1993, AMPL, a modeling language for mathematical programming
   [Anonymous], 1997, TABU SEARCH
   [Anonymous], 1999, OPL OPTIMIZATION PRO
   Beasley JE, 2000, TRANSPORT SCI, V34, P180, DOI 10.1287/trsc.34.2.180.12302
   Cadoli M, 2002, LECT NOTES ARTIF INT, V2309, P147
   Cadoli M, 1998, THEOR COMPUT SCI, V193, P215, DOI 10.1016/S0304-3975(97)00108-4
   CHANDRA AK, 1980, J COMPUT SYST SCI, V21, P156, DOI 10.1016/0022-0000(80)90032-X
   Di Gaspero L, 2003, SOFTWARE PRACT EXPER, V33, P733, DOI 10.1002/spe.524
   FAGIN R, 1974, COMPLEXITY COMPUTATI, P43
   Flener P, 2003, LECT NOTES COMPUT SC, V3018, P214
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Gottlob G, 2004, J ACM, V51, P312, DOI 10.1145/972639.972646
   *ILOG, 1998, ILOG OPT SUIT WHIT P
   *ILOG DBLINK, 1999, ILOG DBLINK 4 1 TUR
   KOLAITIS PG, 1991, J COMPUT SYST SCI, V43, P125, DOI 10.1016/0022-0000(91)90033-2
   LEONE N, IN PRESS ACM T COMPU
   Michel L., 2000, Constraints, V5, P43, DOI 10.1023/A:1009818401322
   Papadimitriou C. H., 1994, Computational Complexity
   Schaerf A, 1999, ARTIF INTELL REV, V13, P87, DOI 10.1023/A:1006576209967
   Schaerf A, 2000, SOFTWARE PRACT EXPER, V30, P233, DOI 10.1002/(SICI)1097-024X(200003)30:3<233::AID-SPE297>3.0.CO;2-K
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Van Hentenryck P, 2003, LECT NOTES COMPUT SC, V2833, P65
   Vardi M.Y., 1982, P 14 ANN ACM S THEOR, P137, DOI DOI 10.1145/800070.802186
NR 26
TC 10
Z9 11
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2007
VL 7
BP 37
EP 65
DI 10.1017/S1471068406002857
PN 1-2
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 148DD
UT WOS:000245053800003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Antoniou, G
   Billington, D
   Governatori, G
   Maher, MJ
AF Antoniou, Grigoris
   Billington, David
   Governatori, Guido
   Maher, Michael J.
TI Embedding defeasible logic into logic programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE defeasible logic; stable semantics; Kunen semantics; non-monotonic logic
ID SEMANTICS
AB Defeasible reasoning is a simple but efficient approach to nonmonotonic reasoning that has recently attracted considerable interest and that has found various applications. Defeasible logic and its variants are an important family of defeasible reasoning methods. So far no relationship has been established between defeasible logic and mainstream nonmonotonic reasoning approaches. In this paper we establish close links to known semantics of logic programs. In particular, we give a translation of a defeasible theory D into a meta-program P(D). We show that under a condition of decisiveness, the defeasible consequences of D correspond exactly to the sceptical conclusions of P(D) under the stable model semantics. Without decisiveness, the result holds only in one direction (all defeasible consequences of D are included in all stable models of P(D)). If we wish a complete embedding for the general case, we need to use the Kunen semantics of P(D), instead.
C1 FORTH, Inst Comp Sci, Iraklion, Greece.
   Griffith Univ, Sch ICT, Nathan, Qld 4111, Australia.
   Univ Queensland, Sch ITEE, St Lucia, Qld 4067, Australia.
   UNSW, Natl ICT Australia, Kensington, NSW, Australia.
C3 Foundation for Research & Technology - Hellas (FORTH); Griffith
   University; University of Queensland; University of New South Wales
   Sydney; NICTA
RP Antoniou, G (corresponding author), FORTH, Inst Comp Sci, Iraklion, Greece.
EM antoniou@ics.forth.gr; d.billington@griffith.edu.au;
   guido@itee.uq.edu.au; mmaher@cse.unsw.edu.au
RI Governatori, Guido/I-5293-2015
OI Governatori, Guido/0000-0002-9878-2762; Antoniou,
   Grigoris/0000-0003-3673-6602
CR ALFERES JJ, 1993, LNCS, V798, P268
   ALFERES JJ, 1993, LNCS, V798, P11
   Antoniou G, 2002, LECT NOTES COMPUT SC, V2401, P393, DOI 10.1007/3-540-45619-8_27
   Antoniou G, 2002, LECT NOTES COMPUT SC, V2342, P394
   Antoniou G, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P405
   Antoniou G, 2000, J LOGIC PROGRAM, V42, P47, DOI 10.1016/S0743-1066(99)00060-6
   ANTONIOU G, 1999, P 32 HAW INT C SYST
   Antoniou G., 1997, Nonmonotonic reasoning
   Antoniou G., 2001, ACM T COMPUT LOG, V2, P255, DOI [DOI 10.1145/371316.371517, 10.1145/371316.371517]
   Bassiliades N, 2004, LECT NOTES COMPUT SC, V3208, P134
   Billington D., 1990, Journal of Experimental and Theoretical Artificial Intelligence, V2, P151, DOI 10.1080/09528139008953720
   BILLINGTON D, 1993, J LOGIC COMPUT, V3, P370
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Governatori G, 2005, INT J COOP INF SYST, V14, P181, DOI 10.1142/S0218843005001092
   Governatori G, 2004, J LOGIC COMPUT, V14, P675, DOI 10.1093/logcom/14.5.675
   Governatori G, 2003, LECT NOTES ARTIF INT, V2903, P414
   Governatori G, 2004, LECT NOTES ARTIF INT, V3065, P114
   GOVERNATORI G, 2001, P 8 INT C ART INT LA, P168
   GOVERNATORI G, 2004, C RES PRACTICE INFOR, V27, P197
   Governatori G., 2005, ICAIL'05, P25
   Grosof B. N., 1999, P 1 ACM C EL COMM, P68
   Grosof BenjaminN., 2004, ELECTRON COMMER R A, V3, P2, DOI DOI 10.1016/J.ELERAP.2003.09.005
   Grosof BN, 1997, LOGIC PROGRAMM, P197
   GROSOF BN, 2003, P 12 INT C WORLD WID, P340, DOI DOI 10.1145/775152.775200
   GROSOF BN, 2002, CEUR WORKSHOP P, V60
   HORTY JF, 1987, AAAI87, P358
   Johnsen BH, 2003, J ANXIETY DISORD, V17, P75, DOI 10.1016/S0887-6185(02)00178-0
   KUNEN K, 1987, J LOGIC PROGRAM, V4, P289, DOI 10.1016/0743-1066(87)90007-0
   Maher M. J., 2001, International Journal on Artificial Intelligence Tools (Architectures, Languages, Algorithms), V10, P483, DOI 10.1142/S0218213001000623
   Maher M. J., 2002, Datalogiske Skrifter, P67
   Maher MJ, 2001, THEOR PRACT LOG PROG, V1, P691, DOI 10.1017/S1471068401001168
   Maher MJ, 1999, SIXTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-99)/ELEVENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE (IAAI-99), P299
   Maher MJ, 2000, LECT NOTES ARTIF INT, V1861, P209
   MAREK V, 1993, NONMONOTONIC REASONI
   Morgenstern L, 1998, ARTIF INTELL, V103, P237, DOI 10.1016/S0004-3702(98)00073-3
   Nute D., 1994, Handbook of Logic in Artificial Intelligence and Logic Programming, V3, P353
   PRAKKEN H, 1997, LOGICAL TOOLS MODELL
   REITER R, 1980, ARTIF INTELL, V13, P81, DOI 10.1016/0004-3702(80)90014-4
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
NR 39
TC 49
Z9 49
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2006
VL 6
BP 703
EP 735
DI 10.1017/S1471068406002778
PN 6
PG 33
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 106XJ
UT WOS:000242135000003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU De la Banda, MG
   Harvey, W
   Marriott, K
   Stuckey, PJ
   Demoen, B
AF De la Banda, MG
   Harvey, W
   Marriott, K
   Stuckey, PJ
   Demoen, B
TI Checking modes of HAL programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 1st International Conference on Computational Logic (CL 2000)
CY JUL 24-28, 2000
CL IMPERIAL COLL, LONDON, ENGLAND
SP Assoc Log Programming, ESPRIT Network Excellence Computat Log
HO IMPERIAL COLL
DE strong modes; mode checking; regular grammars
ID DEPENDENCIES
AB Recent constraint logic programming (CLP) languages, such as HAL and Mercury, require type, mode and determinism declarations for predicates. This information allows the generation of efficient target code and the detection of many errors at compile-time. Unfortunately, mode checking in such languages is difficult. One of the main reasons is that, for each predicate mode declaration, the compiler is required to appropriately re-order literals in the predicate's definition. The task is further complicated by the need to handle complex instantiations (which interact with type declarations and higher-order predicates) and automatic initialization of solver variables. Here we define mode checking for strongly typed CLP languages which require reordering of clause body literals. In addition, we show how to handle a simple case of polymorphic modes by using the corresponding polymorphic types.
C1 Monash Univ, Sch Comp Sci & Software Engn, Clayton, Vic, Australia.
   Univ Melbourne, Dept Comp Sci & Software Engn, Melbourne, Vic, Australia.
   Catholic Univ Louvain, Dept Comp Sci, Louvain, Belgium.
C3 Monash University; University of Melbourne; Universite Catholique
   Louvain
RP Monash Univ, Sch Comp Sci & Software Engn, Clayton, Vic, Australia.
EM mbanda@csse.monash.edu.au; wh@icparc.ic.ac.uk;
   marriott@csse.monash.edu.au; pjs@cs.mu.oz.au; bmd@cs.kuleuven.ac.be
OI Garcia de la Banda, Maria/0000-0002-6666-514X
CR [Anonymous], C FUNCT PROGR LANG C
   [Anonymous], 1998, Purely Functional Data Structures
   Boye J, 1997, J LOGIC PROGRAM, V33, P179, DOI 10.1016/S0743-1066(96)00144-6
   BUENO F, 2002, CIAO PROLOG SYSTEM R
   Burcham P. M., 1996, ARLMR 337
   Charra B, 1996, AM J NEPHROL, V16, P35, DOI 10.1159/000168968
   Codish M, 2000, THEOR COMPUT SCI, V238, P131, DOI 10.1016/S0304-3975(98)00122-4
   CODOGNET C, 1990, N AM C LOG PROGR, P215
   Comon H., 1997, Tree automata techniques and applications
   DEBRAY SK, 1989, ACM T PROGR LANG SYS, V11, P418, DOI 10.1145/65979.65983
   DELABANDA MG, 2002, LNCS, V2441, P47
   Demoen B, 1999, LECT NOTES COMPUT SC, V1713, P174
   DEMOEN B, 1999, P 22 AUSTR COMP SCI, P217
   Demoen P, 1999, LOGIC PROGRAMM, P260
   Gecseg Ferenc., 1984, TREE AUTOMATA
   Hermenegildo MV, 2003, LECT NOTES COMPUT SC, V2694, P127
   JANSSENS G, 1992, J LOGIC PROGRAM, V13, P205, DOI 10.1016/0743-1066(92)90032-X
   MARRIOTT K, 1998, PROGRAMMIGN CONSTRAI
   MARRIOTT K, 1992, 19 ANN ACM C PRINC P, P334
   MELLISH C, 1987, ABSTRACT INTERPRETAT, P181
   MULKERS A, 1995, INT C LOG PROGR, P781
   MYCROFT A, 1984, LECT NOTES COMPUT SC, V167, P217
   OVERTON D, 2003, THESIS U MELBOURNE
   RIDOUX O, 1999, LNCS, P267
   Smaus JG, 2000, LECT NOTES COMPUT SC, V1817, P82, DOI 10.1007/10720327_6
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   SOMOGYI Z, 1987, P 4 ICLP, P769
NR 27
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2005
VL 5
BP 623
EP 667
DI 10.1017/S1471068404002327
PN 6
PG 45
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 987BP
UT WOS:000233493700002
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Bella, G
   Bistarelli, S
AF Bella, G
   Bistarelli, S
TI Soft constraint programming to analysing security protocols
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 2nd International Workshop on Verification and Computational Logic (VCL
   2001)
CY SEP 04, 2001
CL Florence, ITALY
DE security; constraints; security protocols; soft constraints
ID CRYPTOGRAPHIC PROTOCOLS; INFORMATION-FLOW; SET CONSTRAINTS; SECRECY
AB Security protocols stipulate how the remote principals of a computer network should interact in order to obtain specific security goals. The crucial goals of confidentiality and authentication may be achieved in various forms, each of different strength. Using soft (rather than crisp) constraints, we develop a uniform formal notion for the two goals. They are no longer formalised as mere yes/no properties as in the existing literature, but gain an extra parameter, the security level. For example, different messages can enjoy different levels of confidentiality, or a principal can achieve different levels of authentication with different principals. The goals are formalised within a general framework for protocol analysis that is amenable to mechanisation by model checking. Following the application of the framework to analysing the asymmetric Needham-Schroeder protocol (Bella and Bistarelli 2001; Bella and Bistarelli 2002), we have recently discovered a new attack on that protocol as a form of retaliation by principals who have been attacked previously. Having commented on that attack, we then demonstrate the framework on a bigger, largely deployed protocol consisting of three phases, Kerberos.
C1 Univ Catania, Dipartimento Matemat & Informat, I-95125 Catania, Italy.
   CNR, Ist Informat & Telemat, I-56124 Pisa, Italy.
   Univ G DAnnunzio, Dipartimento Sci, I-65127 Pescara, Italy.
C3 University of Catania; Consiglio Nazionale delle Ricerche (CNR);
   Istituto di Informatica e Telematica (IIT-CNR); G d'Annunzio University
   of Chieti-Pescara
RP Univ Catania, Dipartimento Matemat & Informat, Viale A Doria 6, I-95125 Catania, Italy.
EM stefano.bistarelli@iit.cnr.it; bista@sci.unich.it
RI Bistarelli, Stefano/C-3211-2008
OI Bistarelli, Stefano/0000-0001-7411-9678; BELLA,
   Giampaolo/0000-0002-7615-8643
CR Abadi M, 1996, IEEE T SOFTWARE ENG, V22, P6, DOI 10.1109/32.481513
   Abadi M, 1999, J ACM, V46, P749, DOI 10.1145/324133.324266
   Abadi Martin, 1997, P 4 ACM C COMP COMM, P36, DOI [10.1145/266420.266432, DOI 10.1145/266420.266432]
   AMADIO RM, 2002, 4379 INRIA
   ANDERSON R, 1993, P 1 ACM C COMM COMP, P217
   BADI M, 1997, P TACS 1997, P611
   Bella G, 2003, IEEE J SEL AREA COMM, V21, P77, DOI 10.1109/JSAC.2002.806133
   Bella G, 1998, LECT NOTES COMPUT SC, V1485, P361, DOI 10.1007/BFb0055875
   Bella G., 1997, J UCS, V3, P1337
   Bella G., 2001, LNCS, V1990, P108
   BELLA G, 2000, 493 U CAMBR COMP LAB
   BELLA G, 2002, LNCS, V2845, P104
   Bistarelli S, 1997, J ACM, V44, P201, DOI 10.1145/256303.256306
   Bistarelli S, 2002, LECT NOTES COMPUT SC, V2305, P53
   Bistarelli S, 2002, ARTIF INTELL, V139, P175, DOI 10.1016/S0004-3702(02)00208-4
   Bistarelli S, 2001, ACM T PROGR LANG SYS, V23, P1, DOI 10.1145/383721.383725
   BISTARELLI S, 2002, P ACM S APPL COMP SA
   BISTARELLI S, 2001, THESIS U PISA
   Bodei C, 2001, LECT NOTES COMPUT SC, V2127, P27
   BODEI C, 1996, CURRENT TRENDS THEOR, P525
   Cervesato I, 1999, P IEEE CSFW, P55, DOI 10.1109/CSFW.1999.779762
   Comon H, 2001, LECT NOTES COMPUT SC, V2076, P682
   DENNING DE, 1976, COMMUN ACM, V19, P236, DOI 10.1145/360051.360056
   DESCHREYE D, 1995, P ILPS 95, P615
   DOLEV D, 1983, IEE T INFORMATION TH, V2, P29
   DUBOIS D, 1993, P IEEE INT C FUZZ SY, P1131
   DURGIN N, 1999, P FMSP 99
   Fargier H., 1993, P EUROPEAN C SYMBOLI, P97, DOI DOI 10.1007/BFB0028188
   Focardi R, 2000, P IEEE CSFW, P170, DOI 10.1109/CSFW.2000.856935
   FOCARDI R, 2000, P ICALP 00 JUL NEW Y, P354
   FOLEY S, 2002, COMMUNICATION
   FREUDER EC, 1992, ARTIF INTELL, V58, P21, DOI 10.1016/0004-3702(92)90004-H
   GRAY E, 2001, T15232001
   International Organization for Standardization, 1989, 74982 ISO
   ITOI N, 1999, P USENIX WORKSH SMAR
   LOWE G, 1995, INFORM PROCESS LETT, V56, P131, DOI 10.1016/0020-0190(95)00144-2
   LOWE G, 1996, P COMP SEC FDN WORKS, P139
   MEADOWS C, 2001, COMMUNICATION
   Millen Jonathan., 2001, CCS '01: Proceedings of the 8th ACM conference on Computer and Communications Security, P166
   MILLER JD, 1989, REACTIONS COORDINATE, V2, P1
   Mitchell JC, 1997, P IEEE S SECUR PRIV, P141, DOI 10.1109/SECPRI.1997.601329
   NEUMAN BC, 1996, W STALLINGS PRACTICA
   Pacholski L, 1997, LECT NOTES COMPUT SC, V1330, P549, DOI 10.1007/BFb0017466
   Paulson L. C., 1998, Journal of Computer Security, V6, P85
   RUTTKAY Z, 1994, PROCEEDINGS OF THE THIRD IEEE CONFERENCE ON FUZZY SYSTEMS - IEEE WORLD CONGRESS ON COMPUTATIONAL INTELLIGENCE, VOLS I-III, P1263, DOI 10.1109/FUZZY.1994.343640
   Saraswat Vijay A., 1993, Concurrent Constraint Programming
   SCHIEX T, 1995, P 14 INT JOINT C ART, P631
   SCIEX T, 1992, P 8 C UNC AI, P269
   Stinson D. R., 2018, Cryptography Theory and Practice
NR 49
TC 12
Z9 12
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP-NOV
PY 2004
VL 4
BP 545
EP 572
DI 10.1017/S1471068404002121
PN 5-6
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 861VZ
UT WOS:000224448000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gheerbrant, A
   Libkin, L
   Rogova, A
   Sirangelo, C
AF Gheerbrant, Amelie
   Libkin, Leonid
   Rogova, Alexandra
   Sirangelo, Cristina
TI Querying Incomplete Data: Complexity and Tractability via Datalog and
   First-Order Rewritings
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Early Access
DE incomplete information; certain answers; datalog rewritings; first-order
   rewritings; functional dependencies; chase
ID NP
AB To answer database queries over incomplete data, the gold standard is finding certain answers: those that are true regardless of how incomplete data is interpreted. Such answers can be found efficiently for conjunctive queries and their unions, even in the presence of constraints. With negation added, the problem becomes intractable however. We concentrate on the complexity of certain answers under constraints and on effficiently answering queries outside the usual classes of (unions) of conjunctive queries by means of rewriting as Datalog and first-order queries. We first notice that there are three different ways in which query answering can be cast as a decision problem. We complete the existing picture and provide precise complexity bounds on all versions of the decision problem, for certain and best answers. We then study a well-behaved class of queries that extends unions of conjunctive queries with a mild form of negation. We show that for them, certain answers can be expressed in Datalog with negation, even in the presence of functional dependencies, thus making them tractable in data complexity. We show that in general, Datalog cannot be replaced by first-order logic, but without constraints such a rewriting can be done in first order.
C1 [Gheerbrant, Amelie; Rogova, Alexandra; Sirangelo, Cristina] Univ Paris Cite, CNRS, IRIF, F-75013 Paris, France.
   [Libkin, Leonid] Univ Edinburgh, Sch Informat, 10 Crichton St, Edinburgh EH8 9AB, Scotland.
   [Libkin, Leonid] Relat AI, Paris, France.
   [Rogova, Alexandra] Inria, Data Intelligence Inst Paris diiP, Paris, France.
   [Sirangelo, Cristina] PSL Univ, DI ENS, CNRS, Inria,ENS, Paris, France.
C3 Universite Paris Cite; Centre National de la Recherche Scientifique
   (CNRS); University of Edinburgh; Inria; Inria; Centre National de la
   Recherche Scientifique (CNRS); Universite PSL; Ecole Normale Superieure
   (ENS)
RP Gheerbrant, A (corresponding author), Univ Paris Cite, CNRS, IRIF, F-75013 Paris, France.
EM amelie@irif.fr; l@libk.in; rogova@irif.fr; cristina@irif.fr
OI Gheerbrant, Amelie/0000-0002-8936-9829
CR ABITEBOUL S, 1991, THEOR COMPUT SCI, V78, P159, DOI 10.1016/0304-3975(51)90007-2
   Abiteboul S., 1995, Foundations of Databases, DOI DOI 10.5555/551350
   [Anonymous], 2011, Synthesis Lectures on Data Management
   Arenas M., 2014, Foundations of Data Exchange
   Arenas M, 2013, J ACM, V60, DOI 10.1145/2505985
   Barceló P, 2014, SIAM J COMPUT, V43, P1085, DOI 10.1137/130911731
   Bienvenu Meghyn, 2017, Reasoning Web. Logical Foundation of Knowledge Graph Construction and Query Answering. 12th International Summer School 2016. Tutorial Lectures: LNCS 9885, P156, DOI 10.1007/978-3-319-49493-7_5
   Bienvenu M, 2015, LECT NOTES COMPUT SC, V9203, P218, DOI 10.1007/978-3-319-21768-0_9
   BUSS SR, 1991, INFORM COMPUT, V91, P86, DOI 10.1016/0890-5401(91)90075-D
   Cal A., 2013, SEMINAL CONTRIBUTION, P353
   Cal A., 2003, International Joint Conference on Artificial Intelligence, P16
   Cali A., 2003, P 22 ACM SIGACT SIGM, P260, DOI DOI 10.1145/773153.773179
   Calvanese D., 2006, CEUR Workshop Proceedings, V189
   Calvanese D., 2000, CEUR Workshop Proceedings, V29, P17
   Calvanese D, 2007, THEOR COMPUT SCI, V371, P169, DOI 10.1016/j.tcs.2006.11.006
   Coelho F., 2013, about us
   Eiter T, 1997, LECT NOTES COMPUT SC, V1279, P1, DOI 10.1007/BFb0036168
   Fagin R, 2005, ACM T DATABASE SYST, V30, P174, DOI 10.1145/1061318.1061323
   FAGIN R, 1995, INFORM COMPUT, V120, P78, DOI 10.1006/inco.1995.1100
   Geerts F, 2013, PROC VLDB ENDOW, V6, P625, DOI 10.14778/2536360.2536363
   Gheerbrant A., 2022, CEUR., Workshop Proceedings, V3203, P14
   Gheerbrant A, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1704
   Gheerbrant A, 2015, THEOR COMPUT SYST, V57, P892, DOI 10.1007/s00224-014-9596-y
   Gheerbrant A, 2014, ACM T DATABASE SYST, V39, DOI 10.1145/2691190.2691194
   Gierth A., 2011, about us
   GOTTLOB G, 1995, J ACM, V42, P421, DOI 10.1145/201019.201031
   Greco S., 2012, Synthesis Lectures on Data Management
   Guagliardo P, 2016, PODS'16: PROCEEDINGS OF THE 35TH ACM SIGMOD-SIGACT-SIGAI SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P211, DOI 10.1145/2902251.2902297
   Hella L, 2001, J ACM, V48, P880, DOI 10.1145/502090.502100
   IMIELINSKI T, 1984, J ACM, V31, P761, DOI 10.1145/1634.1886
   IMMERMAN N, 1987, SIAM J COMPUT, V16, P760, DOI 10.1137/0216051
   Lenzerini  M., 2002, P 21 ACM SIGMOD SIGA
   Libkin L, 2003, THEOR COMPUT SCI, V296, P379, DOI 10.1016/S0304-3975(02)00736-3
   Libkin L, 2018, PODS'18: PROCEEDINGS OF THE 37TH ACM SIGMOD-SIGACT-SIGAI SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P195, DOI 10.1145/3196959.3196983
   Libkin L, 2016, ACM T DATABASE SYST, V41, DOI 10.1145/2877206
   Lipski W. J., 1984, P 3 ACM SIGACT SIGMO, P201
   Reiter R., 1978, Logic and data bases, P55
   Rothe J, 2003, INFORM PROCESS LETT, V87, P7, DOI 10.1016/S0020-0190(03)00229-1
   Schaefer M., 2002, SIGACT News, V33, P32, DOI 10.1145/582475.582484
   van der Meyden R, 1998, SPRING INT SER ENG C, P307
   WAGNER KW, 1990, SIAM J COMPUT, V19, P833, DOI 10.1137/0219058
NR 41
TC 0
Z9 0
U1 1
U2 1
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD 2023 NOV 28
PY 2023
DI 10.1017/S1471068423000364
EA NOV 2023
PG 31
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA Z5WK6
UT WOS:001112773100001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Eiter, T
   Geibinger, T
   Musliu, N
   Oetsch, J
   Skocovsky, P
   Stepanova, D
AF Eiter, Thomas
   Geibinger, Tobias
   Musliu, Nysret
   Oetsch, Johannes
   Skocovsky, Peter
   Stepanova, Daria
TI Answer-Set Programming for Lexicographical Makespan Optimisation in
   Parallel Machine Scheduling
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer-set programming; parallel machine scheduling; lexicographical
   optimisation
ID ELIGIBILITY; TIMES; CONSTRAINTS
AB We deal with a challenging scheduling problem on parallel machines with sequence-dependent setup times and release dates from a real-world application of semiconductor work-shop production. There, jobs can only be processed by dedicated machines, thus few machines can determine the makespan almost regardless of how jobs are scheduled on the remaining ones. This causes problems when machines fail and jobs need to be rescheduled. Instead of optimising only the makespan, we put the individual machine spans in non-ascending order and lexicographically minimise the resulting tuples. This achieves that all machines complete as early as possible and increases the robustness of the schedule. We study the application of answer-set programming (ASP) to solve this problem. While ASP eases modelling, the combination of timing constraints and the considered objective function challenges current solving technology. The former issue is addressed by using an extension of ASP by difference logic. For the latter, we devise different algorithms that use multi-shot solving. To tackle industrial-sized instances, we study different approximations and heuristics. Our experimental results show that ASP is indeed a promising knowledge representation and reasoning (KRR) paradigm for this problem and is competitive with state-of-the-art constraint programming (CP) and Mixed-Integer Programming (MIP) solvers.
C1 [Eiter, Thomas; Geibinger, Tobias; Musliu, Nysret; Oetsch, Johannes] Vienna Univ Technol, TU Wien, Inst L & Computat, Vienna, Austria.
   [Skocovsky, Peter; Stepanova, Daria] Robert Bosch Campus 1, D-71272 Renningen, Germany.
C3 Technische Universitat Wien
RP Eiter, T (corresponding author), Vienna Univ Technol, TU Wien, Inst L & Computat, Vienna, Austria.
EM eiter@kr.tuwien.ac.at; tgeibing@dbai.tuwien.ac.at;
   musliu@dbai.tuwien.ac.at; oetsch@kr.tuwien.ac.at;
   fixed-term.peter.skocovsky@de.bosch.com; daria.stepanova@de.bosch.com
RI Eiter, Thomas/ABE-9263-2021
OI Oetsch, Johannes/0000-0002-9902-7662; Eiter, Thomas/0000-0001-6003-6345;
   Geibinger, Tobias/0000-0002-0856-7162
FU Bosch Center for Artificial Intelligence; Bosch Center for Artificial
   Intelligence; Bosch Center for Artificial Intelligence
FX We would like to thank the reviewers for their comments and Michel
   Janus, AndrejGisbrecht, and Sebastian Bayer for very helpful discussions
   on the scheduling problemsat Bosch, as well as Roland Kaminski, Max
   Ostrowski, Torsten Schaub, and Philipp Wanko for their help, valuable
   suggestions, and feedback on constraint ASP. Johannes Oetsch was
   supported by funding from the Bosch Center for Artificial Intelligence
CR Abels D, 2019, LECT NOTES ARTIF INT, V11481, P3, DOI 10.1007/978-3-030-20528-7_1
   Afzalirad M, 2016, COMPUT IND ENG, V98, P40, DOI 10.1016/j.cie.2016.05.020
   Allahverdi A, 2008, EUR J OPER RES, V187, P985, DOI 10.1016/j.ejor.2006.06.060
   Allahverdi A, 2015, EUR J OPER RES, V246, P345, DOI 10.1016/j.ejor.2015.04.004
   Avalos-Rosales O., 2013, P 23 INT C AUT PLANN, P278
   Bektur G, 2019, COMPUT OPER RES, V103, P46, DOI 10.1016/j.cor.2018.10.010
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   BURKARD RE, 1991, OPER RES LETT, V10, P303, DOI 10.1016/0167-6377(91)90018-K
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Eiter T., 2021, KR 2021, P280, DOI DOI 10.24963/KR.2021/27
   El-Kholany, 2020, P 4 WORKSHOP TRENDS
   Fanjul-Peyro L, 2019, COMPUT OPER RES, V101, P173, DOI 10.1016/j.cor.2018.07.007
   Gebser M., 2012, SYNTHESIS LECT ARTIF, DOI [10.2200/S00457ED1V01Y201211AIM019, DOI 10.2200/S00457ED1V01Y201211AIM019, 10.1007/978-3-031-01561-8]
   Gebser M., 2016, TECHNICAL COMMUNICAT, DOI [10.4230/OASIcs.ICLP.2016.2, DOI 10.4230/OASICS.ICLP.2016.2]
   Gebser M., 2013, PROC AAAI, P350, DOI 10.1609/aaai.v27i1.8585
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P235, DOI 10.1007/978-3-642-02846-5_22
   Gedik R, 2018, COMPUT IND ENG, V121, P139, DOI 10.1016/j.cie.2018.05.014
   Janhunen T, 2017, THEOR PRACT LOG PROG, V17, P872, DOI 10.1017/S1471068417000242
   Letsios D, 2021, EUR J OPER RES, V290, P469, DOI 10.1016/j.ejor.2020.08.032
   Lierler Y, 2014, ARTIF INTELL, V207, P1, DOI 10.1016/j.artint.2013.10.004
   Lifschitz V., 2019, Answer Set Programming, DOI DOI 10.1007/978-3-030-24658-7
   McCarthy J., 1998, COMMON SENSE, V98
   Nethercote N, 2007, LECT NOTES COMPUT SC, V4741, P529
   Ogryczak W, 2006, LECT NOTES COMPUT SC, V3982, P802, DOI 10.1007/11751595_85
   Ouazene Y, 2014, INT J COMPUT INT SYS, V7, P58, DOI 10.1080/18756891.2013.853932
   Perez-Gonzalez P, 2019, COMPUT IND ENG, V131, P131, DOI 10.1016/j.cie.2019.03.034
   Rajakumar S, 2004, INT J ADV MANUF TECH, V23, P366, DOI 10.1007/s00170-003-1603-4
   Sabuncu O., 2020, P 13 WORKSHOP ANSWER, V2678
   Vallada E, 2011, EUR J OPER RES, V211, P612, DOI 10.1016/j.ejor.2011.01.011
   Walter R, 2017, CENT EUR J OPER RES, V25, P139, DOI 10.1007/s10100-015-0429-0
   Weng MX, 2001, INT J PROD ECON, V70, P215, DOI 10.1016/S0925-5273(00)00066-9
   Yildirim M. B., 2007, International Journal of Operations Research, V4, P42
NR 33
TC 1
Z9 1
U1 1
U2 3
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2023
VL 23
IS 6
BP 1281
EP 1306
AR PII S1471068423000017
DI 10.1017/S1471068423000017
EA JAN 2023
PG 26
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7N0
UT WOS:000920784500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Charalambidis, A
   Rondogiannis, P
   Troumpoukis, A
AF Charalambidis, Angelos
   Rondogiannis, Panos
   Troumpoukis, Antonis
TI A Logical Characterization of the Preferred Models of Logic Programs
   with Ordered Disjunction
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE ordered disjunction; answer sets; logic of here-and-there; preferences
AB Logic programs with ordered disjunction (LPODs) extend classical logic programs with the capability of expressing alternatives with decreasing degrees of preference in the heads of program rules. Despite the fact that the operational meaning of ordered disjunction is clear, there exists an important open issue regarding its semantics. In particular, there does not exist a purely model-theoretic approach for determining the most preferred models of an LPOD. At present, the selection of the most preferred models is performed using a technique that is not based exclusively on the models of the program and in certain cases produces counterintuitive results. We provide a novel, model-theoretic semantics for LPODs, which uses an additional truth value in order to identify the most preferred models of a program. We demonstrate that the proposed approach overcomes the shortcomings of the traditional semantics of LPODs. Moreover, the new approach can be used to define the semantics of a natural class of logic programs that can have both ordered and classical disjunctions in the heads of clauses. This allows programs that can express not only strict levels of preferences but also alternatives that are equally preferred.
C1 [Charalambidis, Angelos; Rondogiannis, Panos; Troumpoukis, Antonis] Natl & Kapodistrian Univ Athens, Dept Informat & Telecommun, Athens, Greece.
C3 National & Kapodistrian University of Athens
RP Charalambidis, A (corresponding author), Natl & Kapodistrian Univ Athens, Dept Informat & Telecommun, Athens, Greece.
EM a.charalambidis@di.uoa.gr; prondo@di.uoa.gr; antru@di.uoa.gr
OI Charalambidis, Angelos/0000-0001-7437-410X
FU European Union (European Social Fund-ESF) through the Operational
   Programme "Human Resources Development, Education and Lifelong Learning
   2014-2020" in the context of the project "Techniques for implementing
   qualitative preferences in deductive querying sy [5048151]
FX This research is co-financed by Greece and the European Union (European
   Social Fund-ESF) through the Operational Programme "Human Resources
   Development, Education and Lifelong Learning 2014-2020" in the context
   of the project "Techniques for implementing qualitative preferences in
   deductive querying systems" (5048151).
CR Aguado F, 2019, THEOR PRACT LOG PROG, V19, P908, DOI 10.1017/S1471068419000267
   Balduccini M., 2003, ANSWER SET PROGRAMMI, V78
   Brewka G, 2004, ARTIF INTELL, V157, P203, DOI 10.1016/j.artint.2004.04.006
   Brewka G, 2004, COMPUT INTELL-US, V20, P335, DOI 10.1111/j.0824-7935.2004.00241.x
   Brewka G, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P100
   Cabalar P, 2011, AI COMMUN, V24, P165, DOI 10.3233/AIC-2011-0494
   diaeresis>arger P., 2008, P WORKSH ANSW SET PR, P46
   Faber W., 2008, P 11 INT C PRINC KNO, P433
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Heyting A, 1930, SITZBER PREUSS AKAD, P42
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Nelson D., 1949, J. Symb. Log., V14, P16
   Pearce D, 1997, LECT NOTES ARTIF INT, V1216, P57, DOI 10.1007/BFb0023801
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
NR 14
TC 4
Z9 4
U1 1
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2021
VL 21
IS 5
SI SI
BP 629
EP 645
AR PII S1471068421000235
DI 10.1017/S1471068421000235
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA XB4RH
UT WOS:000721317500008
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Robbins, E
   King, A
   Howe, JM
AF Robbins, Ed
   King, Andy
   Howe, Jacob M.
TI Backjumping is Exception Handling
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE backjumping; exception handling; conflict-driven clause learning; SAT
ID SEARCH ALGORITHM; SAT; PEARL; BACKTRACKING
AB ISO Prolog provides catch and throw to realize the control flow of exception handling. This pearl demonstrates that catch and throw are inconspicuously amenable to the implementation of backjumping. In fact, they have precisely the semantics required: rewinding the search to a specific point and carrying of a preserved term to that point. The utility of these properties is demonstrated through an implementation of graph coloring with backjumping and a backjumping SAT solver that applies conflict-driven clause learning.
C1 [Robbins, Ed; King, Andy] Univ Kent, Canterbury CT2 7NF, Kent, England.
   [Howe, Jacob M.] City Univ London, London EC1V 0HB, England.
C3 University of Kent; City University London
RP Robbins, E (corresponding author), Univ Kent, Canterbury CT2 7NF, Kent, England.
EM edd.robbins@gmail.com; a.m.king@kent.ac.uk; j.m.howe@city.ac.uk
OI Howe, Jacob/0000-0001-8013-6941; Robbins, Edward/0000-0002-8179-1355
FU EPSRC [EP/K031929/1, EP/N020243/1]
FX The authors thank the editor and anonymous referees for their
   thought-provoking comments. This is a better paper for these
   suggestions. This work was supported, in part, by EPSRC grants
   EP/K031929/1 and EP/N020243/1.
CR Baljeu A, 2005, USING EXCEPTIONS IMP
   Bentley J., 1986, PROGRAMMING PEARLS, VSecond
   Bruynooghe M, 2004, THEOR PRACT LOG PROG, V4, P371, DOI 10.1017/S1471068403001893
   Bruynooghe M, 1980, LECT NOTES ARTIFICIA, V87, P293
   Carlsson M, 2012, THEOR PRACT LOG PROG, V12, P35, DOI 10.1017/S1471068411000482
   Cooper K. D, 2006, TR0633870 RIC U COMP TR0633870 RIC U COMP
   DEBOSSCHERE K, 1993, LOGIC PROGRAMM, P299
   Deransart P., 1996, PROLOG STANDARD
   Drabent W, 2018, THEOR PRACT LOG PROG, V18, P1, DOI 10.1017/S1471068417000047
   GASCHNIG J, 1979, CMUCS79124
   Howe JM, 2012, THEOR COMPUT SCI, V435, P43, DOI 10.1016/j.tcs.2012.02.024
   Howe JM, 2010, LECT NOTES COMPUT SC, V6009, P165, DOI 10.1007/978-3-642-12251-4_13
   Kondrak G, 1997, ARTIF INTELL, V89, P365, DOI 10.1016/S0004-3702(96)00027-6
   KOWALSKI R, 1979, COMMUN ACM, V22, P424, DOI 10.1145/359131.359136
   Marques-Silva J, 2009, FRONT ARTIF INTEL AP, V185, P131, DOI 10.3233/978-1-58603-929-5-131
   Moskewicz MW, 2001, DES AUT CON, P530, DOI 10.1109/DAC.2001.935565
   Robbins E, 2015, SCI COMPUT PROGRAM, V111, P3, DOI 10.1016/j.scico.2014.05.013
   Silva JPM, 1996, IEEE IC CAD, P220, DOI 10.1109/ICCAD.1996.569607
   STALLMAN RM, 1977, ARTIF INTELL, V9, P135, DOI 10.1016/0004-3702(77)90029-7
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
NR 20
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2021
VL 21
IS 2
BP 125
EP 144
AR PII S1471068420000435
DI 10.1017/S1471068420000435
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA TH4CP
UT WOS:000672039800001
OA Green Accepted, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Brewka, G
   Diller, M
   Heissenberger, G
   Linsbichler, T
   Woltran, S
AF Brewka, Gerhard
   Diller, Martin
   Heissenberger, Georg
   Linsbichler, Thomas
   Woltran, Stefan
TI Solving Advanced Argumentation Problems with Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE ADFs; GRAPPA; encodings; ASP
ID ABSTRACT DIALECTICAL FRAMEWORKS; COMPLEXITY; SEMANTICS; DIAMOND; SYSTEM;
   SAT
AB Powerful formalisms for abstract argumentation have been proposed, among them abstract dialectical frameworks (ADFs) that allow for a succinct and flexible specification of the relationship between arguments and the GRAPPA framework which allows argumentation scenarios to be represented as arbitrary edge-labeled graphs. The complexity of ADFs and GRAPPA is located beyond NP and ranges up to the third level of the polynomial hierarchy. The combined complexity of Answer Set Programming (ASP) exactly matches this complexity when programs are restricted to predicates of bounded arity. In this paper, we exploit this coincidence and present novel efficient translations from ADFs and GRAPPA to ASP. More specifically, we provide reductions for the five main ADF semantics of admissible, complete, preferred, grounded, and stable interpretations, and exemplify how these reductions need to be adapted for GRAPPA for the admissible, complete, and preferred semantics.
C1 [Brewka, Gerhard] Univ Leipzig, Leipzig, Germany.
   [Diller, Martin] Tech Univ Dresden, Dresden, Germany.
   [Heissenberger, Georg; Linsbichler, Thomas; Woltran, Stefan] TU Wien, Vienna, Austria.
C3 Leipzig University; Technische Universitat Dresden; Technische
   Universitat Wien
RP Brewka, G (corresponding author), Univ Leipzig, Leipzig, Germany.
OI Diller, Martin/0000-0001-6342-0756
FU DFG [BR 1817/7-2, 389792660 -TRR 248]; FWF [I2854, Y698, P32830,
   S11409-N23, W1255-N23]; Austrian Science Fund (FWF) [I2854] Funding
   Source: Austrian Science Fund (FWF)
FX This research has been supported by DFG (projects BR 1817/7-2 as well as
   389792660 -TRR 248) and FWF (projects I2854, Y698, P32830, S11409-N23,
   and W1255-N23). The authors also thank Jorg Puhrer for his helpful
   observations regarding the encodings. Also thanks to Wolfgang Dvorak and
   Ringo Baumann for guiding the paper through the editing process.
CR Al-Abdulkarim L, 2016, ARTIF INTELL LAW, V24, P1, DOI 10.1007/s10506-016-9178-1
   Amgoud L, 2009, ARTIF INTELL, V173, P413, DOI 10.1016/j.artint.2008.11.006
   [Anonymous], 1977, STOC
   [Anonymous], 2015, Potassco User Guide
   [Anonymous], 2010, JSAT
   [Anonymous], 2012, Lecture Notes in Computer Science
   Atkinson K, 2018, FRONT ARTIF INTEL AP, V305, P109, DOI 10.3233/978-1-61499-906-5-109
   Bench-Capon TJM, 2005, ARTIF INTELL LAW, V13, P1, DOI 10.1007/s10506-006-9007-z
   Berthold M., 2016, P SAFA, P52
   Bichler M, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1714
   Bichler M, 2016, THEOR PRACT LOG PROG, V16, P552, DOI 10.1017/S1471068416000338
   Bogaerts B, 2016, THEOR PRACT LOG PROG, V16, P570, DOI 10.1017/S1471068416000387
   Booth Richard, 2015, Advances in Knowledge Representation, Logic Programming, and Abstract Argumentation. LNCS 9060, P296
   Brewka G., 2018, HDB FORMAL ARGUMENTA, P236
   Brewka G, 2018, AAAI CONF ARTIF INTE, P1779
   Brewka G, 2019, LECT NOTES ARTIF INT, V11468, P85, DOI 10.1007/978-3-030-19570-0_6
   Brewka G, 2017, AAAI CONF ARTIF INTE, P1077
   Brewka G, 2014, FRONT ARTIF INTEL AP, V263, P153, DOI 10.3233/978-1-61499-419-0-153
   Brewka G, 2014, IEEE INTELL SYST, V29, P30, DOI 10.1109/MIS.2013.122
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Brewka Gerhard., 2010, Proceedings of the International Conference on Principles of Knowledge Representation and Reasoning, P102
   Brewka Gerhard., 2013, 23rd International Joint Conference on Artificial Intelligence, P803
   Cabrio Elena, 2016, ICAART 2016. 8th International Conference on Agents and Artificial Intelligence. Proceedings, P85
   Cartwright D, 2009, IEEE INTELL SYST, V24, P42, DOI 10.1109/MIS.2009.104
   Cerutti F., 2017, EXPLOITING PLANNING
   Charwat G, 2015, ARTIF INTELL, V220, P28, DOI 10.1016/j.artint.2014.11.008
   Diller M., 2017, TRAFFIC NETWORKS BEC
   Diller M., 2019, THESIS
   Diller M, 2015, ARGUM COMPUT, V6, P149, DOI 10.1080/19462166.2015.1036922
   Diller M, 2014, FRONT ARTIF INTEL AP, V266, P241, DOI 10.3233/978-1-61499-436-7-241
   Dillera M, 2018, FRONT ARTIF INTEL AP, V305, P61, DOI 10.3233/978-1-61499-906-5-61
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Eiter T, 2007, ANN MATH ARTIF INTEL, V51, P123, DOI 10.1007/s10472-008-9086-5
   Ellmauthaler S., 2012, THESIS
   Ellmauthaler S, 2016, FRONT ARTIF INTEL AP, V287, P471, DOI 10.3233/978-1-61499-686-6-471
   Ellmauthaler S, 2014, FRONT ARTIF INTEL AP, V266, P233, DOI 10.3233/978-1-61499-436-7-233
   Gaggl SA, 2018, AI MAG, V39, P73
   Gaggl SA, 2014, FRONT ARTIF INTEL AP, V266, P281, DOI 10.3233/978-1-61499-436-7-281
   Gebser M, 2018, KUNSTL INTELL, V32, P181, DOI 10.1007/s13218-018-0528-x
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Heule M, 2015, J ARTIF INTELL RES, V53, P127, DOI 10.1613/jair.4694
   Janhunen T, 2017, THEOR PRACT LOG PROG, V17, P872, DOI 10.1017/S1471068417000242
   Janhunen T, 2016, AI MAG, V37, P13, DOI 10.1609/aimag.v37i3.2671
   Keshavarzi Zafarghandi A., 2017, THESIS
   Lehtonen T., 2017, ASSUMPTION BASED ARG
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Linsbichler T, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1905
   Lonsing F, 2017, LECT NOTES ARTIF INT, V10395, P371, DOI 10.1007/978-3-319-63046-5_23
   MORAK M., 2016, LECT NOTES COMPUTER, V10184, P114
   Neugebauer D, 2018, FRONT ARTIF INTEL AP, V305, P469, DOI 10.3233/978-1-61499-906-5-469
   Polberg S, 2014, FRONT ARTIF INTEL AP, V264, P240, DOI 10.3233/978-1-61499-421-3-240
   Redl C, 2017, LECT NOTES ARTIF INT, V10377, P160, DOI 10.1007/978-3-319-61660-5_15
   Strass H., 2017, GODIAMOND 0 6 6 ICCM
   Strass H, 2015, ARTIF INTELL, V226, P34, DOI 10.1016/j.artint.2015.05.003
NR 57
TC 5
Z9 5
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2020
VL 20
IS 3
BP 391
EP 431
AR PII S1471068419000474
DI 10.1017/S1471068419000474
PG 41
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA OA2BG
UT WOS:000577597100003
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Condie, T
   Das, A
   Interlandi, M
   Shkapsky, A
   Yang, M
   Zaniolo, C
AF Condie, Tyson
   Das, Ariyam
   Interlandi, Matteo
   Shkapsky, Alexander
   Yang, Mohan
   Zaniolo, Carlo
TI Scaling-up reasoning and advanced analytics on BigData
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Deductive databases; Datalog; BigData; parallel and distributed
   computing
ID DATALOG; SEMANTICS; PROGRAMS; SOCIALITE; SYSTEM; PROLOG
AB BigDatalog is an extension of Datalog that achieves performance and scalability on both Apache Spark and multicore systems to the point that its graph analytics outperform those written in GraphX. Looking back, we see how this realizes the ambitious goal pursued by deductive database researchers beginning 40 years ago: this is the goal of combining the rigor and power of logic in expressing queries and reasoning with the performance and scalability by which relational databases managed BigData. This goal led to Datalog which is based on Horn Clauses like Prolog but employs implementation techniques, such as semi-naive fixpoint and magic sets, that extend the bottom-up computation model of relational systems, and thus obtain the performance and scalability that relational systems had achieved, as far back as the 80s, using data-parallelization on shared-nothing architectures. But this goal proved difficult to achieve because of major issues at (i) the language level and (ii) at the system level. The paper describes how (i) was addressed by simple rules under which the fixpoint semantics extends to programs using count, sum and extrema in recursion, and (ii) was tamed by parallel compilation techniques that achieve scalability on multicore systems and Apache Spark. This paper is under consideration for acceptance in Theory and Practice of Logic Programming.
C1 [Condie, Tyson; Das, Ariyam; Interlandi, Matteo; Shkapsky, Alexander; Yang, Mohan; Zaniolo, Carlo] Univ Calif Los Angeles, Los Angeles, CA 90095 USA.
C3 University of California System; University of California Los Angeles
RP Condie, T (corresponding author), Univ Calif Los Angeles, Los Angeles, CA 90095 USA.
EM tcondie@cs.ucla.edu; ariyam@cs.ucla.edu; minterlandi@cs.ucla.edu;
   shkapsky@cs.ucla.edu; yang@cs.ucla.edu; zaniolo@cs.ucla.edu
FU NSF [IIS-1218471, IIS-1302698, CNS-1351047]; NIH BigData to Knowledge
   (BD2K) [U54EB020404]
FX This work was supported in part by NSF under Grants IIS-1218471,
   IIS-1302698 and CNS-1351047, and in part by NIH BigData to Knowledge
   (BD2K) under Grant U54EB020404.
CR Abiteboul S., 1988, SIGMOD Record, V17, P143, DOI 10.1145/971701.50218
   Abiteboul Serge, 1995, FDN DATABASES LOGICA
   Agrawal R., P 20 INT C VERY LARG
   Martínez-Angeles CA, 2016, INT J PARALLEL PROG, V44, P663, DOI 10.1007/s10766-015-0364-7
   Martínez-Angeles CA, 2014, LECT NOTES ARTIF INT, V8439, P152, DOI 10.1007/978-3-319-08909-6_10
   Ameloot T.J., 2011, P 30 ACM S PRINC DAT, P283
   Aref M, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1371, DOI 10.1145/2723372.2742796
   Armbrust M, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1383, DOI 10.1145/2723372.2742797
   Arni F, 2003, THEOR PRACT LOG PROG, V3, P61, DOI 10.1017/S1471068402001515
   Bell D. A., 1991, Data & Knowledge Engineering, V6, P367, DOI 10.1016/0169-023X(91)90008-L
   Borkar V.R., 2012, IEEE Data Eng. Bull, V35
   Borkar V, 2011, PROC INT CONF DATA, P1151, DOI 10.1109/ICDE.2011.5767921
   Bu Yingyi., 2012, CoRR
   Cardoso JCS, 2009, LAT-AM SYMP DEP COMP, P33, DOI 10.1109/LADC.2009.19
   Chimenti Danette., 1987, IEEE Data Eng. Bull, V10, P52
   Cohen S. R., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P200, DOI 10.1145/73721.73742
   Condie T, 2008, PROC VLDB ENDOW, V1, P1153, DOI 10.14778/1453856.1453978
   Conway N., 2012, ACM S CLOUD COMP SOC
   Das Ariyam., 2016, SDM, P576
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   DEKERGOMMEAUX JC, 1994, ACM COMPUT SURV, V26, P295, DOI 10.1145/185403.185453
   Erdem E, 2016, AI MAG, V37, P53, DOI 10.1609/aimag.v37i3.2678
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   GANGULY S, 1990, SIGMOD REC, V19, P143, DOI 10.1145/93605.98724
   GANGULY S, 1995, J COMPUT SYST SCI, V51, P244, DOI 10.1006/jcss.1995.1064
   Ganguly S., 1991, Proceedings of the Tenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P154, DOI 10.1145/113413.113427
   GANGULY S, 1992, J LOGIC PROGRAM, V14, P101, DOI 10.1016/0743-1066(92)90048-8
   Gebser M., 2014, Theory Pract. Log. Program.
   Gelfond M., 2014, THEOR PRACT LOG PROG, V14, P4
   Giacometti Arnaud., 2014, SIGKDD Explor. Newsl, V15, P41, DOI DOI 10.1145/2594473.2594480
   Giannotti F, 2004, IEEE T KNOWL DATA EN, V16, P1232, DOI 10.1109/TKDE.2004.64
   Giannotti F, 2002, LECT NOTES ARTIF INT, V2424, P517, DOI 10.1007/3-540-45757-7_45
   Gonzalez J. E., 2014, P 11 USENIX S OP SYS, P599
   Greco S., 1992, Proceedings of the Eleventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P105, DOI 10.1145/137097.137836
   Gupta G, 2001, ACM T PROGR LANG SYS, V23, P472, DOI 10.1145/504083.504085
   Halperin D, 2014, SIGMOD'14: PROCEEDINGS OF THE 2014 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P881, DOI 10.1145/2588555.2594530
   Han JW, 2000, SIGMOD RECORD, V29, P1
   Hu TM, 2008, INFORM SCIENCES, V178, P69, DOI 10.1016/j.ins.2007.08.006
   Interlandi M., 2015, P A MEND INT WORKSH
   Kang U, 2011, ACM T KNOWL DISCOV D, V5, DOI 10.1145/1921632.1921634
   KEMP DB, 1991, LOGIC PROGRAMM, P387
   KOWALSKI R, 1979, COMMUN ACM, V22, P424, DOI 10.1145/359131.359136
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lewis D. D., 1998, Machine Learning: ECML-98. 10th European Conference on Machine Learning. Proceedings, P4, DOI 10.1007/BFb0026666
   Li XW, 2015, 2015 VISUAL COMMUNICATIONS AND IMAGE PROCESSING (VCIP)
   Lifschitz S, 1998, THEOR COMPUT SCI, V190, P211, DOI 10.1016/S0304-3975(97)00091-1
   Loo B. T., 2005, P 20 ACM S OP SYST P, P75, DOI [10.1145/1095810.1095818, DOI 10.1145/1095810.1095818]
   Loo Boon Thau, 2006, SIGMOD C, P97, DOI [10.1145/1142473.1142485, DOI 10.1145/1142473.1142485]
   MATULA DW, 1983, J ACM, V30, P417, DOI 10.1145/2402.322385
   Mazuran M., 2013, THEOR PRACT LOG PROG, V13, P4
   Mazuran M, 2013, VLDB J, V22, P471, DOI 10.1007/s00778-012-0299-1
   Min Fang, 1998, Proceedings of the Twenty-Fourth International Conference on Very-Large Databases, P299
   Minker Jack., 2014, Computational Logic, P571
   Mitchell T. M., 1997, MACHINE LEARNING
   MORRIS K, 1986, LECT NOTES COMPUT SC, V225, P554
   Motik B, 2014, AAAI CONF ARTIF INTE, P129
   MUMICK IS, 1990, VERY LARGE DATA BASES, P264
   Murray DG, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P439, DOI 10.1145/2517349.2522738
   Mutharaju Raghava., 2010, 23rd International Workshop on Description Logics DL2010, P456
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Przymusinski T. C., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1081
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Ramakrishnan R., 1992, Very Large Data Bases. VLDB '92. Proceedings of the 18th International Conference on Very Large Data Bases, P238
   Ross K. A., 1992, Proceedings of the Eleventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P114, DOI 10.1145/137097.137852
   Seib J., 1991, Proceedings of the Tenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P241, DOI 10.1145/113413.113435
   Seo J, 2013, PROC VLDB ENDOW, V6, P1906, DOI 10.14778/2556549.2556572
   Seo J, 2013, PROC INT CONF DATA, P278, DOI 10.1109/ICDE.2013.6544832
   Shin K, 2016, IEEE DATA MINING, P469, DOI [10.1109/ICDM.2016.23, 10.1109/ICDM.2016.0058]
   Shkapsky A, 2016, SIGMOD'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1135, DOI 10.1145/2882903.2915229
   Shkapsky A, 2013, PROC VLDB ENDOW, V6, P1258, DOI 10.14778/2536274.2536290
   Simons Patrik, 2002, ARTIF INTELL, V138, P181
   Son TC, 2007, THEOR PRACT LOG PROG, V7, P355, DOI 10.1017/S1471068406002936
   SUDARSHAN S, 1991, PROC INT CONF VERY L, P501
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Swift T, 2010, LECT NOTES ARTIF INT, V6341, P300, DOI 10.1007/978-3-642-15675-5_26
   Tachmazidis I, 2012, FRONT ARTIF INTEL AP, V242, P738, DOI 10.3233/978-1-61499-098-7-738
   Tachmazidis I, 2014, THEOR PRACT LOG PROG, V14, P445, DOI 10.1017/S1471068414000131
   Tsur S., 1991, Proceedings of the Tenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P142, DOI 10.1145/113413.113426
   Urbani J, 2016, AAAI CONF ARTIF INTE, P258
   Urbani J, 2012, J WEB SEMANT, V10, P59, DOI 10.1016/j.websem.2011.05.004
   Vaghani Jayen., 1994, VLDB J, V3, P245
   Van Gelder A., 1993, P INT C DED OBJ OR D, P13
   Venu Balaji., 2011, CoRR
   Wang JJ, 2015, PROC VLDB ENDOW, V8, P1542
   WOLFSON O, 1990, SIGMOD REC, V19, P133, DOI 10.1145/93605.98723
   Wolfson O., 1988, SIGMOD Record, V17, P329, DOI 10.1145/971701.50242
   Yang M., 2017, Theses and Dissertations
   Yang MH, 2017, VLDB J, V26, P229, DOI 10.1007/s00778-016-0448-z
   Yang MH, 2014, IEEE INT CONF BIG DA, P251, DOI 10.1109/BigData.2014.7004240
   Yu YA, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P247
   Zaharia Matei., 2012, NSDI 12
   Zaniolo C, 2017, THEOR PRACT LOG PROG, V17, P1048, DOI 10.1017/S1471068417000436
   Zaniolo Carlo, 2018, AMW 18
   ZHANG WN, 1995, IEEE T KNOWL DATA EN, V7, P163, DOI 10.1109/69.368511
NR 94
TC 13
Z9 18
U1 0
U2 43
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2018
VL 18
IS 5-6
BP 806
EP 845
DI 10.1017/S1471068418000418
PG 40
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA GS5FG
UT WOS:000443682000004
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Arias, J
   Carro, M
   Salazar, E
   Marple, K
   Gupta, G
AF Arias, Joaquin
   Carro, Manuel
   Salazar, Elmer
   Marple, Kyle
   Gupta, Gopal
TI Constraint Answer Set Programming without Grounding
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
AB Extending ASP with constraints (CASP) enhances its expressiveness and performance. This extension is not straightforward as the grounding phase, present in most ASP systems, removes variables and the links among them, and also causes a combinatorial explosion in the size of the program. Several methods to overcome this issue have been devised: restricting the constraint domains (e.g., discrete instead of dense), or the type (or number) of models that can be returned. In this paper we propose to incorporate constraints into s(ASP), a goal-directed, top-down execution model which implements ASP while retaining logical variables both during execution and in the answer sets. The resulting model, s(CASP), can constrain variables that, as in CLP, are kept during the execution and in the answer sets. s(CASP) inherits and generalizes the execution model of s(ASP) and is parametric w.r.t. the constraint solver. We describe this novel execution model and show through several examples the enhanced expressiveness of s(CASP) w.r.t. ASP, CLP, and other CASP systems. We also report improved performance w.r.t. other very mature, highly optimized ASP systems in some benchmarks.
C1 [Arias, Joaquin; Carro, Manuel] IMDEA Software Inst, Madrid, Spain.
   [Arias, Joaquin; Carro, Manuel] Univ Politecn Madrid, Madrid, Spain.
   [Salazar, Elmer; Marple, Kyle; Gupta, Gopal] Univ Texas Dallas, Richardson, TX 75083 USA.
C3 IMDEA Software Institute; Universidad Politecnica de Madrid; University
   of Texas System; University of Texas Dallas
RP Arias, J (corresponding author), IMDEA Software Inst, Madrid, Spain.; Arias, J (corresponding author), Univ Politecn Madrid, Madrid, Spain.
EM joaquin.arias@imdea.org; manuel.carro@imdea.org; ees101020@utdallas.edu;
   kmarple1@utdallas.edu; guptal@utdallas.edu
RI Carro, Manuel/AAE-9653-2021
OI Carro, Manuel/0000-0001-5199-3135; Arias, Joaquin/0000-0003-4148-311X
FU EIT Digital; MINECO [TIN2015-67522-C3-1-R]; Comunidad de Madrid project
   [S2013/ICE-2731]; NSF [IIS 1718945, IIS 1423419]
FX Work partially supported by EIT Digital (https://eitdigital.eu), MINECO
   project TIN2015-67522-C3-1-R (TRACES), Comunidad de Madrid project
   S2013/ICE-2731 N-Greens Software, NSF IIS 1718945, and NSF IIS 1423419.
CR Alferes JJ, 2004, THEOR PRACT LOG PROG, V4, P383, DOI 10.1017/S1471068403001960
   Alviano M, 2012, ARTIF INTELL, V187, P156, DOI 10.1016/j.artint.2012.04.008
   ARIAS J., 2016, THESIS, V52, P1
   Arias J, 2016, PROCEEDINGS OF THE 18TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING (PPDP 2016), P10, DOI 10.1145/2967973.2968596
   Balduccini M, 2017, THEOR PRACT LOG PROG, V17, P462, DOI 10.1017/S1471068417000102
   Banbara M, 2017, THEOR PRACT LOG PROG, V17, P408, DOI 10.1017/S1471068417000138
   Baselice S, 2010, THEOR PRACT LOG PROG, V10, P481, DOI 10.1017/S1471068410000232
   Baselice S, 2009, THEOR PRACT LOG PROG, V9, P213, DOI 10.1017/S147106840900372X
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Calimeri F, 2007, ANN MATH ARTIF INTEL, V50, P333, DOI 10.1007/s10472-007-9076-z
   Clark Keith L., 1978, LOGIC DATA BASES, P293, DOI [10.1007/978-1-4684-3384-5_11, DOI 10.1007/978-1-4684-3384-5_11]
   Dal Palù A, 2009, FUND INFORM, V96, P297, DOI 10.3233/FI-2009-180
   Dovier A, 2005, LECT NOTES COMPUT SC, V3668, P67, DOI 10.1007/11562931_8
   GABBRIELLI M., 1991, P 8 INT C LOG PROGR
   Gebser M., 2008, USERS GUIDE GRINGO C, P11086
   Gelfond M., 1991, NEW GENERAT COMPUT, V9, P365, DOI DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Gupta G, 2007, LECT NOTES COMPUT SC, V4670, P27, DOI 10.1007/978-3-540-74610-2_4
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Holldobler S, 2014, YOUNG SCI INT WORKSH, P77
   HOLZBAUR, 1995, TR9509 AUSTR RES I A
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   Janhunen T, 2017, THEOR PRACT LOG PROG, V17, P872, DOI 10.1017/S1471068417000242
   JI J., 2016, IJCAI, P1130
   Marple K., 2017, The Association for Logic Programming Newsletter
   MARPLE K., 2017, ABS170900501 CORR
   REVESZ PZ, 1993, THEOR COMPUT SCI, V116, P117, DOI 10.1016/0304-3975(93)90222-F
NR 27
TC 33
Z9 33
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 337
EP 354
DI 10.1017/S1471068418000285
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400004
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Inclezan, D
   Zhang, Q
   Balduccini, M
   Israney, A
AF Inclezan, Daniela
   Zhang, Qinglin
   Balduccini, Marcello
   Israney, Ankush
TI An ASP Methodology for Understanding Narratives about Stereotypical
   Activities
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
DE natural language understanding; stereotypical activities; intentions
AB We describe an application of Answer Set Programming to the understanding of narratives about stereotypical activities, demonstrated via question answering. Substantial work in this direction was done by Erik Mueller, who modeled stereotypical activities as scripts. His systems were able to understand a good number of narratives, but could not process texts describing exceptional scenarios. We propose addressing this problem by using a theory of intentions developed by Blount, Gelfond, and Balduccini. We present a methodology in which we substitute scripts by activities (i.e., hierarchical plans associated with goals) and employ the concept of an intentional agent to reason about both normal and exceptional scenarios. We exemplify the application of this methodology by answering questions about a number of restaurant stories. This paper is under consideration for acceptance in TPLP.
C1 [Inclezan, Daniela; Zhang, Qinglin] Miami Univ, Oxford, OH 45056 USA.
   [Balduccini, Marcello] St Josephs Univ, Philadelphia, PA 19131 USA.
   [Israney, Ankush] Drexel Univ, Philadelphia, PA 19104 USA.
C3 University System of Ohio; Miami University; Saint Joseph's University;
   Drexel University
RP Inclezan, D (corresponding author), Miami Univ, Oxford, OH 45056 USA.
EM inclezd@miamioh.edu; zhangq7@miamioh.edu; marcello.balduccini@gmail.com;
   avi26@drexel.edu
CR [Anonymous], 2015, P 12 INT S LOG FORM
   [Anonymous], 1997, Solving the frame problem-a mathematical investigation of the common sense law of inertia
   Baldini M, 2009, PUBLIC HEALTH NUTR, V12, P148, DOI 10.1017/S1368980008002759
   Balduccini M., 2007, HDB KNOWLEDGE REPRES
   Balduccini M., 2003, P INT S LOG FORM COM, V102, P9
   Balduccini M, 2007, LECT NOTES COMPUT SC, V4483, P18, DOI 10.1007/978-3-540-72200-7_4
   Baral C., 2005, AAAI, P689
   Blount Justin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P134, DOI 10.1007/978-3-319-23264-5_12
   Blount J., 2013, THESIS
   Bordini R., 2007, PROGRAMMING MULTIAGE
   Gabaldon A, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P1696
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 2014, KNOWLEDGE REPRESENTA
   Inclezan D., 2017, 33 INT C LOG PROGR I
   Kamp H., 1993, DISCOURSE LOGIC, V1, P2
   Lierler Y., 2017, IWCS 2017
   Michael L., 2013, 11 INT S LOG FORM CO, P64
   Mostafazadeh Nasrin, 2016, P 4 WORKSHOP EVENTS, P24
   Mueller E., 2004, COGNITIVE SYSTEMS RE, V5, P307
   Mueller Erik T., 2007, Literary & Linguistic Computing, V22. no 1, P67, DOI 10.1093/llc/fql014
   NG HT, 1992, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE (KR 92), P499
   Nieves JC, 2013, FRONT ARTIF INTEL AP, V257, P195, DOI 10.3233/978-1-61499-330-8-195
   Palmer M, 2005, COMPUT LINGUIST, V31, P71, DOI 10.1162/0891201053630264
   RAO AS, 1991, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P473
   Regneri M, 2010, ACL 2010: 48TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P979
   Richardson Matthew, 2013, P 2013 C EMP METH NA, P193
   Schank Roger C., 1977, SCRIPTS PLANS GOALS
   Todorova Y, 2012, CORRECT REASONING, P311
   Wooldridge M., 2009, An introduction to multiagent systems
   Zhang Qinglin., 2017, Proceedings of PAoASP'17
NR 30
TC 4
Z9 8
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 535
EP 552
DI 10.1017/S1471068418000121
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400016
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Lee, J
   Talsania, S
   Wang, Y
AF Lee, Joohyung
   Talsania, Samidh
   Wang, Yi
TI <i>Computing</i> LP<SUP>MLN</SUP> <i>using ASP and MLN solvers</i>
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming colocated with the
   23rd International Conference on Principles and Practice of Constraint
   Programming / 20th International Conference on Theory and Applications
   of Satisfiability Testing
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google
DE Answer Set Programming; Markov Logic; LPMLN
AB LPMLN is a recent addition to probabilistic logic programming languages. Its main idea is to overcome the rigid nature of the stable model semantics by assigning a weight to each rule in a way similar to Markov Logic is defined. We present two implementations of LPMLN, LPMLN2ASP and LPMLN2MLN. System LPMLN2ASP translates LPMLN programs into the input language of answer set solver CLINGO, and using weak constraints and stable model enumeration, it can compute most probable stable models as well as exact conditional and marginal probabilities. System LPMLN2MLN translates LPMLN programs into the input language of Markov Logic solvers, such as alchemy, TUFFY, and ROCKIT, and allows for performing approximate probabilistic inference on LPMLN programs. We also demonstrate the usefulness of the LPMLN systems for computing other languages, such as ProbLog and Pearl's Causal Models, that are shown to be translatable into LPMLN.
C1 [Lee, Joohyung; Talsania, Samidh; Wang, Yi] Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ 85281 USA.
C3 Arizona State University; Arizona State University-Tempe
RP Lee, J (corresponding author), Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ 85281 USA.
EM joolee@asu.edu; stalsani@asu.edu; ywang485@asu.edu
FU National Science Foundation [IIS-1319794, IIS-1526301]; Div Of
   Information & Intelligent Systems; Direct For Computer & Info Scie &
   Enginr [1319794] Funding Source: National Science Foundation
FX This work was partially supported by the National Science Foundation
   under Grants IIS-1319794 and IIS-1526301.
CR [Anonymous], **DROPPED REF**
   Balai E., 2016, P INT JOINT C ART IN, P915
   Baral C, 2009, THEOR PRACT LOG PROG, V9, P57, DOI 10.1017/S1471068408003645
   Buccafurri F, 2000, IEEE T KNOWL DATA EN, V12, P845, DOI 10.1109/69.877512
   Calimeri F., 2012, TECHNICAL REPORT
   Fierens D, 2015, THEOR PRACT LOG PROG, V15, P358, DOI 10.1017/S1471068414000076
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P323, DOI 10.1017/S1471068410000554
   Lee J., 2015, TECHN COMM 31 INT C
   Lee J., 2017, TPLP ARCHIVE
   Lee J, 2017, AAAI CONF ARTIF INTE, P1170
   Lee JC, 2016, PROCEEDINGS OF KNOWLEDGE MANAGEMENT INTERNATIONAL CONFERENCE (KMICE) 2016, P145
   Nickles M, 2016, LECT NOTES COMPUT SC, V10021, P369, DOI 10.1007/978-3-319-48758-8_24
   Raedt L. D., 2007, P 20 INT JOINT C ART, P2462
   Richardson M, 2006, MACH LEARN, V62, P107, DOI 10.1007/s10994-006-5833-1
NR 14
TC 25
Z9 26
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 942
EP 960
DI 10.1017/S1471068417000400
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800016
DA 2024-07-18
ER

PT J
AU Inclezan, D
   Gelfond, M
AF Inclezan, Daniela
   Gelfond, Michael
TI Modular action language ALM
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic programming; reasoning about actions and change; action language
ID STABLE MODEL; LOGIC; SYSTEM; SEMANTICS; PROGRAMS
AB The paper introduces a new modular action language, ALM, and illustrates the methodology of its use. It is based on the approach of Gelfond and Lifschitz (1993, Journal of Logic Programming 17, 2-4, 301-321; 1998, Electronic Transactions on AI 3, 16, 193-210) in which a high-level action language is used as a front end for a logic programming system description. The resulting logic programming representation is used to perform various computational tasks. The methodology based on existing action languages works well for small and even medium size systems, but is not meant to deal with larger systems that require structuring of knowledge. ALM is meant to remedy this problem. Structuring of knowledge in ALM is supported by the concepts of module (a formal description of a specific piece of knowledge packaged as a unit), module hierarchy, and library, and by the division of a system description of ALM into two parts: theory and structure. A theory consists of one or more modules with a common theme, possibly organized into a module hierarchy based on a dependency relation. It contains declarations of sorts, attributes, and properties of the domain together with axioms describing them. Structures are used to describe the domain's objects. These features, together with the means for defining classes of a domain as special cases of previously defined ones, facilitate the stepwise development, testing, and readability of a knowledge base, as well as the creation of knowledge representation libraries.
C1 [Inclezan, Daniela] Miami Univ, Dept Comp Sci & Software Engn, Oxford, OH 45056 USA.
   [Gelfond, Michael] Texas Tech Univ, Dept Comp Sci, Lubbock, TX 79409 USA.
C3 University System of Ohio; Miami University; Texas Tech University
   System; Texas Tech University
RP Inclezan, D (corresponding author), Miami Univ, Dept Comp Sci & Software Engn, Oxford, OH 45056 USA.; Gelfond, M (corresponding author), Texas Tech Univ, Dept Comp Sci, Lubbock, TX 79409 USA.
EM inclezd@MiamiOH.edu; michael.gelfond@ttu.edu
OI Gelfond, Michael/0000-0003-0574-3092
FU NSF [IIS-1018031]
FX We are grateful to Evgenii Balai, Justin Blount, Vinay Chaudhri,
   Vladimir Lifschitz, Yana Todorova, and the anonymous reviewers for
   useful comments and discussions. This work was partially supported by
   NSF grant IIS-1018031.
CR Akman V., 2004, ARTIF INTELL, V153, p[1, 105]
   [Anonymous], 2006, P AAAI C ARTIFICIAL
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], 1968, Semantic Information Processing
   Balai E., 2012, P ANSW SET PROGR OTH, P19
   Balduccini M, 2004, LECT NOTES COMPUT SC, V3057, P135
   Balduccini M, 2003, THEOR PRACT LOG PROG, V3, P425, DOI 10.1017/S1471068403001807
   Balduccini M., 2012, P ANSW SET PROGR OTH, P35
   Balduccini M., 2003, P INT S LOG FORM COM, V102, P9
   Balduccini M, 2007, LECT NOTES COMPUT SC, V4483, P18, DOI 10.1007/978-3-540-72200-7_4
   Balduccini M, 2013, THEOR PRACT LOG PROG, V13, P547, DOI 10.1017/S1471068413000343
   Baral C., 2000, REASONING AGENTS DYN, P257
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Baral C, 2006, LECT NOTES COMPUT SC, V4079, P376, DOI 10.1007/11799573_28
   Bartholomew M, 2013, THEOR PRACT LOG PROG, V13, P863, DOI 10.1017/S1471068413000549
   Blount J., 2014, AAAI 2014 SPRING S S
   Cabalar P, 2011, THEOR PRACT LOG PROG, V11, P203, DOI 10.1017/S1471068410000517
   Calimeri F, 2006, AI COMMUN, V19, P193
   Chintabathina S, 2012, FRONT ARTIF INTEL AP, V241, P59, DOI 10.3233/978-1-61499-096-3-59
   Chintabathina Sandeep, 2005, P ASP 05 ANSW SET PR, V142, P303
   Desai Nirmit., 2007, P 22 C ARTIFICIAL IN, P962
   Dovier A, 2007, LECT NOTES COMPUT SC, V4670, P255, DOI 10.1007/978-3-540-74610-2_18
   Eiter T., 2004, ACM Transactions on Computational Logic, V5, P206, DOI 10.1145/976706.976708
   Eiter T, 2008, ARTIF INTELL, V172, P1495, DOI 10.1016/j.artint.2008.04.002
   Eiter T, 2010, ARTIF INTELL, V174, P1172, DOI 10.1016/j.artint.2010.07.004
   Erdogan S. T., 2008, THESIS U TEXAS AUSTI
   Erdogan SelimT., 2006, P INT C PRINCIPLES K, P377
   Fodor P., 2011, P 27 INT C LOG PROGR, P162
   Gebser M., 2012, Answer Set Solving in Practice
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P54
   Gebser M, 2011, AI COMMUN, V24, P195, DOI 10.3233/AIC-2011-0496
   Gelfond Michael, 2013, Journal of Applied Non-Classical Logic, V23, P105, DOI 10.1080/11663081.2013.798954
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   GELFOND M, 1993, J LOGIC PROGRAM, V17, P301, DOI 10.1016/0743-1066(93)90035-F
   Gelfond M., 2014, KNOWLEDGE REPRESENTA
   Gelfond M., 1998, ELECT T ARTIFICIAL I, V2, P193
   Gelfond M., 2009, P 2 INT WORKSHOP SOF, P64
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Giunchiglia E, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P623
   Giunchiglia Enrico, 2004, ARTIF INTELL, V153, P105
   Grosof B., 2009, INT RULEML S RUL INT
   Gunning D, 2010, AI MAG, V31, P33, DOI 10.1609/aimag.v31i3.2302
   Gustafsson J, 2004, ARTIF INTELL, V153, P239, DOI 10.1016/j.artint.2003.08.004
   HANUS M, 1994, J LOGIC PROGRAM, V20, P583, DOI 10.1016/0743-1066(94)90034-5
   Henschel A., 2000, LINKOPING ELECT ARTI, V5
   Inclezan D., 2011, P 2011 AAAI SPRING S, P49
   Inclezan D., 2010, NONMON 30 30 YEARS N
   Kakas A, 1997, J LOGIC PROGRAM, V31, P157, DOI 10.1016/S0743-1066(96)00138-0
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lierler Y., 2013, P 27 AAAI C ART INT, P68
   Lifschitz V., 2012, P INT C PRINC KNOWL, P24
   McCarthy J., 1998, P COMM REAS
   MCCARTHY J, 1963, 2 STANF U
   Niemela I, 1997, LECT NOTES ARTIF INT, V1265, P420
   NIEMELA I., 1998, P WORKSHOP COMPUTATI, P72
   Oikarinen E, 2006, FRONT ARTIF INTEL AP, V141, P412
   PFENNING F, 1992, TYPES LOGIC PROGRAMM
   Sandewall E., 1999, LOG MOD WORKSH COMM
   Strass H., 2012, LECT NOTES COMPUTER, V7265, P527
   Turner H, 1999, ARTIF INTELL, V113, P87, DOI 10.1016/S0004-3702(99)00058-2
   Turner H, 1997, J LOGIC PROGRAM, V31, P245, DOI 10.1016/S0743-1066(96)00125-2
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   WIRTH N, 1971, COMMUN ACM, V14, P221, DOI 10.1145/362575.362577
NR 63
TC 10
Z9 15
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2016
VL 16
BP 189
EP 235
DI 10.1017/S1471068415000095
PN 2
PG 47
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA DG3KX
UT WOS:000371969300003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU De Angelis, E
   Fioravanti, F
   Pettorossi, A
   Proietti, M
AF De Angelis, Emanuele
   Fioravanti, Fabio
   Pettorossi, Alberto
   Proietti, Maurizio
TI Proving correctness of imperative programs by linearizing constrained
   Horn clauses
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
DE Program verification; Partial correctness specifications; Horn clauses;
   Constraint Logic Programming; Program transformation
ID POLYNOMIAL INVARIANTS; VERIFICATION
AB We present a method for verifying the correctness of imperative programs which is based on the automated transformation of their specifications. Given a program prog, we consider a partial correctness specification of the form {phi} prog {psi}, where the assertions phi and psi are predicates defined by a set Spec of possibly recursive Horn clauses with linear arithmetic (LA) constraints in their premise (also called constrained Horn clauses). The verification method consists in constructing a set PC of constrained Horn clauses whose satisfiability implies that {phi} prog {psi} is valid. We highlight some limitations of state-of-the-art constrained Horn clause solving methods, here called LA-solving methods, which prove the satisfiability of the clauses by looking for linear arithmetic interpretations of the predicates. In particular, we prove that there exist some specifications that cannot be proved valid by any of those LA-solving methods. These specifications require the proof of satisfiability of a set PC of constrained Horn clauses that contain nonlinear clauses (that is, clauses with more than one atom in their premise). Then, we present a transformation, called linearization, that converts PC into a set of linear clauses (that is, clauses with at most one atom in their premise). We show that several specifications that could not be proved valid by LA-solving methods, can be proved valid after linearization. We also present a strategy for performing linearization in an automatic way and we report on some experimental results obtained by using a preliminary implementation of our method.
C1 [De Angelis, Emanuele; Fioravanti, Fabio] Univ G dAnnunzio, DEC, Pescara, Italy.
   [Pettorossi, Alberto] Univ Roma Tor Vergata, DICII, Rome, Italy.
   [Proietti, Maurizio] CNR IASI, Rome, Italy.
C3 G d'Annunzio University of Chieti-Pescara; University of Rome Tor
   Vergata; Consiglio Nazionale delle Ricerche (CNR); Istituto di Analisi
   dei Sistemi ed Informatica "Antonio Ruberti" (IASI-CNR)
RP De Angelis, E (corresponding author), Univ G dAnnunzio, DEC, Pescara, Italy.
EM emanuele.deangelis@unich.it; fabio.fioravanti@unich.it;
   pettorossi@disp.uniroma2.it; maurizio.proietti@iasi.cnr.it
RI Pettorossi, Alberto/D-8503-2016; Proietti, Maurizio/AAW-7487-2020
OI De Angelis, Emanuele/0000-0002-7319-8439; Pettorossi,
   Alberto/0000-0001-7858-4032; FIORAVANTI, Fabio/0000-0002-1268-7829
FU National Group of Computing Science (GNCS-INDAM)
FX We thank the participants in the Workshop VPT '15 on Verification and
   Program Transformation, held in London on April 2015, for their comments
   on a preliminary version of this paper. This work has been partially
   supported by the National Group of Computing Science (GNCS-INDAM).
CR Albert E, 2007, LECT NOTES COMPUT SC, V4354, P124
   [Anonymous], 1970, DOKL AKAD NAUK SSSR+
   Apt K.R., 2009, Texts in Computer Science, DOI 10.1007/978-1-84882-745-5
   Benoy F, 1997, LECT NOTES COMPUT SC, V1207, P204
   Bjorner Nikolaj S., 2012, EPiC Series in Computing, V20, P3, DOI DOI 10.29007/1L7F
   Cimatti A, 2013, LECT NOTES COMPUT SC, V7795, P93
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   De Angelis E, 2014, SCI COMPUT PROGRAM, V95, P149, DOI 10.1016/j.scico.2014.05.017
   De Angelis E., 2014, Lecture Notes in Computer Science, V8413, P568, DOI [DOI 10.1007/978-3-642-54862-8_47, 10.1007/978-3-642-54862-8_47]
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   De Schreye D, 1999, J LOGIC PROGRAM, V41, P231, DOI 10.1016/S0743-1066(99)00030-8
   Etalle S, 1996, THEOR COMPUT SCI, V166, P101, DOI 10.1016/0304-3975(95)00148-4
   Felsing D, 2014, P 29 ACM IEEE INT C, P349, DOI [10.1145/2642937.2642987, DOI 10.1145/2642937.2642987]
   Fioravanti F, 2013, THEOR PRACT LOG PROG, V13, P175, DOI 10.1017/S1471068411000627
   Grebenshchikov S, 2012, ACM SIGPLAN NOTICES, V47, P405, DOI 10.1145/2345156.2254112
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Jaffar Joxan, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P758, DOI 10.1007/978-3-642-31424-7_61
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   Kafle B, 2015, PROCEEDINGS OF THE 2015 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION (PEPM'15), P85, DOI 10.1145/2678015.2682544
   Leuschel M, 2000, LECT NOTES COMPUT SC, V1817, P62, DOI 10.1007/10720327_5
   Lisitsa A, 2008, INT J FOUND COMPUT S, V19, P953, DOI 10.1142/S0129054108006066
   Lloyd J. W., 2012, Foundations of Logic Programming
   Peralta JC, 1998, LECT NOTES COMPUT SC, V1503, P246
   Podelski A, 2007, LECT NOTES COMPUT SC, V4354, P245
   Reynolds C. J., 1998, THEORIES PROGRAMMING
   Rodríguez-Carbonell E, 2007, SCI COMPUT PROGRAM, V64, P54, DOI 10.1016/j.scico.2006.03.003
   Rodríguez-Carbonell E, 2007, J SYMB COMPUT, V42, P443, DOI 10.1016/j.jsc.2007.01.002
   Rummer Philipp, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P347, DOI 10.1007/978-3-642-39799-8_24
   SEBELIK J, 1982, LOGIC PROGRAMM, P325
NR 30
TC 14
Z9 14
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 635
EP 650
DI 10.1017/S1471068415000289
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200016
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mesnard, F
   Payet, É
   Vidal, G
AF Mesnard, Fred
   Payet, Etienne
   Vidal, German
TI Concolic testing in logic programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
DE Symbolic execution; logic programming; testing
ID EXECUTION
AB Software testing is one of the most popular validation techniques in the software industry. Surprisingly, we can only find a few approaches to testing in the context of logic programming. In this paper, we introduce a systematic approach for dynamic testing that combines both concrete and symbolic execution. Our approach is fully automatic and guarantees full path coverage when it terminates. We prove some basic properties of our technique and illustrate its practical usefulness through a prototype implementation.
C1 [Mesnard, Fred; Payet, Etienne] LIM Univ Reunion, Paris, France.
   [Vidal, German] Univ Politecn Valencia, DSIC, MiST, E-46022 Valencia, Spain.
C3 Universitat Politecnica de Valencia
RP Mesnard, F (corresponding author), LIM Univ Reunion, Paris, France.
EM fred@univ-reunion.fr; epayet@univ-reunion.fr; gvidal@dsic.upv.es
RI Vidal, German/B-2217-2014; Vidal, German/P-5548-2019
OI Vidal, German/0000-0002-1857-6951; Payet, Etienne/0000-0002-3519-025X
FU EU (FEDER); Spanish Ministerio de Economia y Competitividad
   [TIN2013-44742-C4-1-R]; Generalitat Valenciana [PROMETEOII/2015/013]
FX This work has been partially supported by the EU (FEDER) and the Spanish
   Ministerio de Economia y Competitividad under grant TIN2013-44742-C4-1-R
   and by the Generalitat Valenciana under grant PROMETEOII/2015/013. Part
   of this research was done while the third author was visiting the
   University of Reunion; G. Vidal gratefully acknowledges their
   hospitality.
CR Albert Elvira, 2014, Formal Methods for Executable Software Models. 14th International School on Formal Methods for the Design of Computer, Communication, and Software Systems, SFM 2014. Advanced Lectures: LNCS 8483, P263, DOI 10.1007/978-3-319-07317-0_7
   Apt K. R., 1997, From Logic Programming to Prolog
   Belli F., 1993, SIGSOFT Software Engineering Notes, V18, P70, DOI 10.1145/174146.154203
   Carlsson M, 2012, THEOR PRACT LOG PROG, V12, P35, DOI 10.1017/S1471068411000482
   Claessen K, 2000, ACM SIGPLAN NOTICES, V35, P268, DOI 10.1145/357766.351266
   Clarke LoriA., 1976, Proc. of the 1976 annual conference, P488, DOI [10.1145/800191.805647, DOI 10.1145/800191.805647]
   Degrave Francois, 2008, Logic-Based Program Synthesis and Transformation. 18th International Symposium, LOPSTR 2008. Revised Selected Papers, P71
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P, 2012, COMMUN ACM, V55, P40, DOI 10.1145/2093548.2093564
   Gómez-Zamalloa M, 2010, THEOR PRACT LOG PROG, V10, P659, DOI 10.1017/S1471068410000347
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Lloyd J. W., 2012, Foundations of Logic Programming
   MARTELLI A, 1982, ACM T PROGR LANG SYS, V4, P258, DOI 10.1145/357162.357169
   Mera E, 2009, LECT NOTES COMPUT SC, V5649, P281, DOI 10.1007/978-3-642-02846-5_25
   Pasareanu Corina S., 2010, P 25 IEEE ACM INT C, P179, DOI [10.1145/1858996.1859035, DOI 10.1145/1858996.1859035]
   Plotkin G. D., 1970, Machine Intelligence, V5, P153
   Schimpf J, 2012, THEOR PRACT LOG PROG, V12, P127, DOI 10.1017/S1471068411000469
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   STRODER T., 2011, LNCS, V7225, P237
   Vasak T., 1986, Proceedings of the 1986 Symposium on Logic Programming (Cat. No.86CH2340-8), P140
   Vidal G, 2015, LECT NOTES COMPUT SC, V8981, P167, DOI 10.1007/978-3-319-17822-6_10
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
NR 24
TC 6
Z9 7
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 711
EP 725
DI 10.1017/S1471068415000332
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200021
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Hoos, H
   Kaminski, R
   Lindauer, M
   Schaub, T
AF Hoos, Holger
   Kaminski, Roland
   Lindauer, Marius
   Schaub, Torsten
TI aspeed: Solver scheduling via answer set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE algorithm schedules; answer set programming; portfolio-based solving
ID ALGORITHM SELECTION; CONFIGURATION
AB Although Boolean Constraint Technology has made tremendous progress over the last decade, the efficacy of state-of-the-art solvers is known to vary considerably across different types of problem instances, and is known to depend strongly on algorithm parameters. This problem was addressed by means of a simple, yet effective approach using handmade, uniform, and unordered schedules of multiple solvers in ppfolio, which showed very impressive performance in the 2011 Satisfiability Testing (SAT) Competition. Inspired by this, we take advantage of the modeling and solving capacities of Answer Set Programming (ASP) to automatically determine more refined, that is, nonuniform and ordered solver schedules from the existing benchmarking data. We begin by formulating the determination of such schedules as multi-criteria optimization problems and provide corresponding ASP encodings. The resulting encodings are easily customizable for different settings, and the computation of optimum schedules can mostly be done in the blink of an eye, even when dealing with large runtime data sets stemming from many solvers on hundreds to thousands of instances. Also, the fact that our approach can be customized easily enabled us to swiftly adapt it to generate parallel schedules for multi-processor machines.
C1 [Hoos, Holger] Univ British Columbia, Dept Comp Sci, Vancouver, BC V5Z 1M9, Canada.
   [Kaminski, Roland; Lindauer, Marius; Schaub, Torsten] Univ Potsdam, Inst Informat, Potsdam, Germany.
C3 University of British Columbia; University of Potsdam
RP Hoos, H (corresponding author), Univ British Columbia, Dept Comp Sci, Vancouver, BC V5Z 1M9, Canada.
EM hoos@cs.ubc.ca; kaminski@cs.uni-potsdam.de; manju@cs.uni-potsdam.de;
   torsten@cs.uni-potsdam.de
RI Schaub, Torsten/O-5873-2019; Kaminski, Roland/HMD-8407-2023; Hoos,
   Holger H./B-1461-2008
OI Schaub, Torsten/0000-0002-7456-041X; Kaminski,
   Roland/0000-0002-1361-6045; Lindauer, Marius/0000-0002-9675-3175; Hoos,
   Holger H./0000-0003-0629-0099
FU German Science Foundation (DFG) [SCHA 550/8-3]
FX This work was partially funded by the German Science Foundation (DFG)
   under grant SCHA 550/8-3.
CR Andres B., 2012, TECHNICAL COMMUNICAT, V17, P211
   [Anonymous], 2012, SAT, DOI 10.1007/978-3-642-31612-8_18
   [Anonymous], 2011, TECHNICAL REPORT
   [Anonymous], P 6 ANN S COMB SEARC
   [Anonymous], 2012, ICAPS
   [Anonymous], LECT NOTES ARTIFICIA
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], P 19 EUR C ART INT E
   [Anonymous], DESCRIPTION PPFOLIO
   [Anonymous], 2008, IR C ART INT COGN SC
   Ansótegui C, 2009, LECT NOTES COMPUT SC, V5732, P142, DOI 10.1007/978-3-642-04244-7_14
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Calimeri F, 2011, LECT NOTES ARTIF INT, V6645, P388
   Gagliolo M, 2006, ANN MATH ARTIF INTEL, V47, P295, DOI 10.1007/s10472-006-9036-z
   Gebruers C, 2004, LECT NOTES COMPUT SC, V3011, P380
   Gebser M., 2010, A user's guide to gringo, clasp, clingo, and iclingo
   Gebser M., 2012, Answer Set Solving in Practice
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P352
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gent IP, 2010, FRONT ARTIF INTEL AP, V215, P873, DOI 10.3233/978-1-60750-606-5-873
   Gomes CP, 2001, ARTIF INTELL, V126, P43, DOI 10.1016/S0004-3702(00)00081-3
   Guerri A, 2004, FRONT ARTIF INTEL AP, V110, P475
   Guo HP, 2004, LECT NOTES ARTIF INT, V3339, P307
   Helmert Malte., 2011, International Conference on Automated Planning and Scheduling, P28
   Hoos Holger H., 2013, Learning and Intelligent Optimization. 7th International Conference, LION 7. Revised Selected Papers: LNCS 7997, P138, DOI 10.1007/978-3-642-44973-4_16
   Huberman BA, 1997, SCIENCE, V275, P51, DOI 10.1126/science.275.5296.51
   Hutter Frank, 2011, Learning and Intelligent Optimization. 5th International Conference, LION 5. Selected Papers, P507, DOI 10.1007/978-3-642-25566-3_40
   HUTTER F., 2007, National Conference on Artificial Intelligence, P1152
   Hutter F, 2009, J ARTIF INTELL RES, V36, P267, DOI 10.1613/jair.2861
   Kadioglu Serdar, 2011, Principles and Practice of Constraint Programming - CP 2011. Proceedings of the 17th International Conference (CP 2011), P454, DOI 10.1007/978-3-642-23786-7_35
   Kadioglu S, 2010, FRONT ARTIF INTEL AP, V215, P750, DOI 10.3233/978-1-60750-606-5-751
   Malitsky Yuri, 2012, Principles and Practice of Constraint Programming. Proceedings 18th International Conference, CP 2012, P512, DOI 10.1007/978-3-642-33558-7_38
   Pulina L, 2009, CONSTRAINTS, V14, P80, DOI 10.1007/s10601-008-9051-2
   Rice J. R., 1976, Advances in computers, vol.15, P65, DOI 10.1016/S0065-2458(08)60520-3
   Schneider Marius, 2012, Learning and Intelligent Optimization. 6th International Conference, LION 6. Revised Selected Papers, P190, DOI 10.1007/978-3-642-34413-8_14
   Streeter M., 2007, P 22 C ARTIFICIAL IN, V2, P1197
   Tamura N, 2009, CONSTRAINTS, V14, P254, DOI 10.1007/s10601-008-9061-0
   Xi Yun, 2012, Learning and Intelligent Optimization. 6th International Conference, LION 6. Revised Selected Papers, P323, DOI 10.1007/978-3-642-34413-8_23
   Xu L, 2007, LECT NOTES COMPUT SC, V4741, P696
   Xu L, 2008, J ARTIF INTELL RES, V32, P565, DOI 10.1613/jair.2490
   Xu L, 2010, AAAI CONF ARTIF INTE, P210
NR 43
TC 23
Z9 23
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2015
VL 15
BP 117
EP 142
DI 10.1017/S1471068414000015
PN 1
PG 26
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA CB5LK
UT WOS:000349668400005
DA 2024-07-18
ER

PT J
AU Bellodi, E
   Lamma, E
   Riguzzi, F
   Costa, VS
   Zese, R
AF Bellodi, Elena
   Lamma, Evelina
   Riguzzi, Fabrizio
   Costa, Vitor Santos
   Zese, Riccardo
TI Lifted Variable Elimination for Probabilistic Logic Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
DE Probabilistic Logic Programming; Lifted Inference; Variable Elimination;
   Distribution Semantics; ProbLog; Statistical Relational Artificial
   Intelligence
AB Lifted inference has been proposed for various probabilistic logical frameworks in order to compute the probability of queries in a time that depends on the size of the domains of the random variables rather than the number of instances. Even if various authors have underlined its importance for probabilistic logic programming (PLP), lifted inference has been applied up to now only to relational languages outside of logic programming. In this paper we adapt Generalized Counting First Order Variable Elimination (GC-FOVE) to the problem of computing the probability of queries to probabilistic logic programs under the distribution semantics. In particular, we extend the Prolog Factor Language (PFL) to include two new types of factors that are needed for representing ProbLog programs. These factors take into account the existing causal independence relationships among random variables and are managed by the extension to variable elimination proposed by Zhang and Poole for dealing with convergent variables and heterogeneous factors. Two new operators are added to GC-FOVE for treating heterogeneous factors. The resulting algorithm, called LP2 for Lifted Probabilistic Logic Programming, has been implemented by modifying the PFL implementation of GC-FOVE and tested on three benchmarks for lifted inference. A comparison with PITA and ProbLog2 shows the potential of the approach.
C1 [Bellodi, Elena; Lamma, Evelina; Zese, Riccardo] Univ Ferrara, Dipartimento Ingn, I-44122 Ferrara, Italy.
   [Riguzzi, Fabrizio] Univ Ferrara, Dipartimento Matemat & Informat, I-44122 Ferrara, Italy.
   [Costa, Vitor Santos] Univ Porto, CRACS INESC TEC, P-4169007 Oporto, Portugal.
   [Costa, Vitor Santos] Univ Porto, DCC FCUP, P-4169007 Oporto, Portugal.
C3 University of Ferrara; University of Ferrara; INESC TEC; Universidade do
   Porto; Universidade do Porto
RP Bellodi, E (corresponding author), Univ Ferrara, Dipartimento Ingn, Via Saragat 1, I-44122 Ferrara, Italy.
EM elena.bellodi@unife.it; evelina.lamma@unife.it;
   fabrizio.riguzzi@unife.it; vsc@dcc.fc.up.pt; riccardo.zese@unife.it
RI Fabrizio, Riguzzi/C-7679-2012; Bellodi, Elena/AAE-7286-2020; Zese,
   Riccardo/Q-8581-2017; BELLODI, Elena/HNP-1127-2023; Santos Costa,
   Vitor/B-2859-2012
OI Fabrizio, Riguzzi/0000-0003-1654-9703; Zese,
   Riccardo/0000-0001-8352-6304; BELLODI, Elena/0000-0002-3717-3779; Santos
   Costa, Vitor/0000-0002-3344-8237
CR [Anonymous], 2007, Introduction to Statistical Relational Learning (Adaptive Computation and Machine Learning)
   Braz RD, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P1319
   De Raedt L., 2008, LNCS, V4911
   De Raedt L, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2468
   Diez FJ, 2003, INT J INTELL SYST, V18, P165, DOI 10.1002/int.10080
   Fierens D., 2014, THEORY PRACTICE LOGI
   Gomes T., 2012, INT C INDUCTIVE LOGI, P74
   Kisynski J., 2009, P 25 C UNCERTAINTY A, P293
   Kisynski J, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P1922
   Meert W, 2008, FUND INFORM, V89, P131
   Milch B., 2008, AAAI08 P 23 NAT C AR, V2, P1062
   Poole D, 1997, ARTIF INTELL, V94, P7, DOI 10.1016/S0004-3702(97)00027-1
   POOLE D, 1993, ARTIF INTELL, V64, P81, DOI 10.1016/0004-3702(93)90061-F
   Poole David, 2008, Probabilistic Inductive Logic Programming. Theory and Applications, P222, DOI 10.1007/978-3-540-78652-8_8
   Poole D., 2003, IJCAI03 P 18 INT JOI, P985
   Riguzzi F, 2011, THEOR PRACT LOG PROG, V11, P433, DOI 10.1017/S147106841100010X
   Sato T., 1995, P INT C LOG PROGR, P715
   Taghipour N, 2013, J ARTIF INTELL RES, V47, P393, DOI 10.1613/jair.3793
   Takikawa M, 1999, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P622
   Van den Broeck G., 2014, 14 INT C PR IN PRESS
   Van den Broeck G., 2011, IJCAI11 P 22 INT JOI, P2178
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P195, DOI 10.1007/978-3-540-27775-0_14
   Zhang NL, 1996, J ARTIF INTELL RES, V5, P301, DOI 10.1613/jair.305
NR 23
TC 11
Z9 14
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 681
EP 695
DI 10.1017/S1471068414000283
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200019
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Maher, MJ
AF Maher, Michael J.
TI Relative expressiveness of defeasible logics II
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
DE defeasible logic; non-monotonic reasoning; relative expressiveness
AB Maher (2012) introduced an approach for relative expressiveness of defeasible logics, and two notions of relative expressiveness were investigated. Using the first of these definitions of relative expressiveness, we show that all the defeasible logics in the DL framework are equally expressive under this formulation of relative expressiveness. The second formulation of relative expressiveness is stronger than the first. However, we show that logics incorporating individual defeat are equally expressive as the corresponding logics with team defeat. Thus the only differences in expressiveness of logics in DL arise from differences in how ambiguity is handled. This completes the study of relative expressiveness in DL begun in Maher (2012).
C1 Univ New S Wales, Sch Engn & Informat Technol, Canberra, ACT 2600, Australia.
C3 Australian Defense Force Academy; University of New South Wales Sydney
RP Maher, MJ (corresponding author), Univ New S Wales, Sch Engn & Informat Technol, Canberra, ACT 2600, Australia.
EM m.maher@adfa.edu.au
FU UNSW, Canberra
FX The author thanks the referees for their comments, and UNSW, Canberra
   for a grant supporting this work.
CR Antoniou G, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P405
   Billington D, 2010, ACM T COMPUT LOG, V12, DOI 10.1145/1838552.1838558
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Maher M. J., 2011, WELL FOUNDED DEFEASI
   Maher MJ, 2012, THEOR PRACT LOG PROG, V12, P793, DOI 10.1017/S1471068412000294
   Maher MJ, 2001, THEOR PRACT LOG PROG, V1, P691, DOI 10.1017/S1471068401001168
   Maher MJ, 1999, SIXTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-99)/ELEVENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE (IAAI-99), P299
   Maier F, 2006, LECT NOTES ARTIF INT, V4160, P306, DOI 10.1007/11853886_26
   Maier F, 2010, SYNTHESE, V176, P243, DOI 10.1007/s11229-009-9492-1
   Rahwan I, 2009, ARGUMENTATION IN ARTIFICIAL INTELLIGENCE, P1, DOI 10.1007/978-0-387-98197-0
NR 10
TC 6
Z9 6
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 579
EP 592
DI 10.1017/S1471068413000367
PN 4-5
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dovier, A
   Formisano, A
   Pontelli, E
AF Dovier, Agostino
   Formisano, Andrea
   Pontelli, Enrico
TI Autonomous agents coordination: Action languages meet CLP(FD) and Linda
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Action languages; Multi-agent systems; Constraint logic programming
AB The paper presents a knowledge representation formalism, in the form of a high-level Action Description Language (ADL) for multi-agent systems, where autonomous agents reason and act in a shared environment. Agents are autonomously pursuing individual goals, but are capable of interacting through a shared knowledge repository. In their interactions through shared portions of the world, the agents deal with problems of synchronization and concurrency; the action language allows the description of strategies to ensure a consistent global execution of the agents' autonomously derived plans. A distributed planning problem is formalized by providing the declarative specifications of the portion of the problem pertaining to a single agent. Each of these specifications is executable by a stand-alone CLP-based planner. The coordination among agents exploits a Linda infrastructure. The proposal is validated in a prototype implementation developed in SICStus Prolog.
C1 [Dovier, Agostino] Univ Udine, Dipartimento Matemat & Informat, I-33100 Udine, Italy.
   [Formisano, Andrea] Univ Perugia, Dipartimento Matemat & Informat, I-06100 Perugia, Italy.
   [Pontelli, Enrico] New Mexico State Univ, Dept Comp Sci, University Pk, NM USA.
C3 University of Udine; University of Perugia; New Mexico State University
RP Dovier, A (corresponding author), Univ Udine, Dipartimento Matemat & Informat, I-33100 Udine, Italy.
EM dovier@dimi.uniud.it; formis@dmi.unipg.it; epontell@cs.nmsu.edu
RI Dovier, Agostino/JAO-3262-2023; Pontelli, Enrico/AAJ-5161-2021;
   Formisano, Andrea/B-7283-2013
OI Pontelli, Enrico/0000-0002-7753-1737; Formisano,
   Andrea/0000-0002-6755-9314; Dovier, Agostino/0000-0003-2052-8593
FU GNCS-INdAM; MUR-PRIN; NSF [IIS-0812267, HRD-0420407];  [2009.010.0336]; 
   [2010.011.0403]; Division Of Graduate Education; Direct For Education
   and Human Resources [0947465] Funding Source: National Science
   Foundation
FX Research partially funded by GNCS-INdAM projects, MUR-PRIN: Innovative
   and multidisciplinary approaches for constraint and preference reasoning
   project; NSF grants IIS-0812267 and HRD-0420407; and grants
   2009.010.0336 and 2010.011.0403.
CR [Anonymous], 2005, P 4 INT JOINT C AUTO
   [Anonymous], 2007, Developing Multi-Agent Systems with JADE
   Bartak R, 2008, P FLAIRS 2008, P525
   Bordini R., 2007, PROGRAMMING MULTIAGE
   CARRIERO N, 1989, COMMUN ACM, V32, P444, DOI 10.1145/63334.63337
   Cheyer A, 2001, AUTON AGENT MULTI-AG, V4, P143, DOI 10.1023/A:1010091302035
   Dastani M., 2003, ERCIM NEWS, V53, P28
   de Boer F.S., 2007, J APPL LOGIC, V5, P277, DOI [10.1016/j.jal.2005.12.014, DOI 10.1016/J.JAL.2005.12.014]
   De Giacomo G, 2000, ARTIF INTELL, V121, P109, DOI 10.1016/S0004-3702(00)00031-X
   Dovier A, 2010, THEOR PRACT LOG PROG, V10, P167, DOI 10.1017/S1471068410000013
   Dovier A, 2009, LECT NOTES COMPUT SC, V5753, P423, DOI 10.1007/978-3-642-04238-6_37
   Fagin R, 1995, Reasoning about knowledge
   Gelfond M., 1998, Electron. Trans. Artif. Intell., V2, P193
   Gerbrandy J., 2006, LOGICS PROPOSITIONAL, P193
   Hayzelden A., 2001, Agent technology for communication infrastructures
   Mallya AU, 2003, IEEE INTERNET COMPUT, V7, P90, DOI 10.1109/MIC.2003.1215666
   Mascardi V., 2004, THEOR PRACT LOG PROG, V4, P495
   Nakashima H., 2006, P INT JOINT C AUT AG
   Pokahr A, 2005, MU S ART SOC SIM ORG, V15, P149, DOI 10.1007/0-387-26350-0_6
   RAO AS, 1996, LECT NOTES ARTIF INT, V1038, P42, DOI DOI 10.1007/BFB0031845
   Sauro L., 2006, REASONING ACTION COO
   Son TC, 2009, LECT NOTES COMPUT SC, V5649, P99, DOI 10.1007/978-3-642-02846-5_13
   SPAAN MTJ, 2006, P INT JOINT C AUT AG, P249
   Subrahmanian VentatramananS., 2000, HETEROGENEOUS AGENT
NR 24
TC 8
Z9 9
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2013
VL 13
SI SI
BP 149
EP 173
DI 10.1017/S1471068411000615
PN 2
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 102TP
UT WOS:000315867300002
DA 2024-07-18
ER

PT J
AU Martin, ÉA
AF Martin, Eric A.
TI Contextual hypotheses and semantics of logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Kripke-Kleene semantics; answer-set semantics; stable model semantics;
   well-founded semantics; classical negation; contextual hypotheses;
   hypothetical reasoning
ID NEGATION
AB Logic programming has developed as a rich field, built over a logical substratum whose main constituent is a nonclassical form of negation, sometimes coexisting with classical negation. The field has seen the advent of a number of alternative semantics, with Kripke-Kleene semantics, the well-founded semantics, the stable model semantics, and the answer-set semantics standing out as the most successful. We show that all aforementioned semantics are particular cases of a generic semantics, in a framework where classical negation is the unique form of negation and where the literals in the bodies of the rules can be 'marked' to indicate that they can be the targets of hypotheses. A particular semantics then amounts to choosing a particular marking scheme and choosing a particular set of hypotheses. When a literal belongs to the chosen set of hypotheses, all marked occurrences of that literal in the body of a rule are assumed to be true, whereas the occurrences of that literal that have not been marked in the body of the rule are to be derived in order to contribute to the firing of the rule. Hence the notion of hypothetical reasoning that is presented in this framework is not based on making global assumptions, but more subtly on making local, contextual assumptions, taking effect as indicated by the chosen marking scheme on the basis of the chosen set of hypotheses. Our approach offers a unified view on the various semantics proposed in logic programming, classical in that only classical negation is used, and links the semantics of logic programs to mechanisms that endow rule-based systems with the power to harness hypothetical reasoning.
C1 Univ New S Wales, Sch Comp Sci & Engn, Sydney, NSW 2052, Australia.
C3 University of New South Wales Sydney
RP Martin, ÉA (corresponding author), Univ New S Wales, Sch Comp Sci & Engn, Sydney, NSW 2052, Australia.
EM emartin@cse.unsw.edu.au
CR Alferes JJ, 1998, J AUTOM REASONING, V20, P107, DOI 10.1023/A:1005900924623
   Alferes JJ, 1996, LECT NOTES ARTIF INT, V1126, P143
   APT KR, 1994, J LOGIC PROGRAM, V20, P9, DOI 10.1016/0743-1066(94)90024-8
   Clark KL., 1987, READINGS NONMONOTONI, P311
   Denecker Marc., 2001, ACM Transactions on Computational Logic, V2, P623
   EMDEN M, 1976, J ACM, V23, P733
   Fitting M, 2002, THEOR COMPUT SCI, V278, P25, DOI 10.1016/S0304-3975(00)00330-3
   Fitting M., 1985, Journal of Logic Programming, V2, P295, DOI 10.1016/S0743-1066(85)80005-4
   GELDER AV, 1991, J ACM, V38, P620
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, MIT PRESS SERIES LOG, V2, P1070
   Hitzler P, 2005, J LOGIC COMPUT, V15, P391, DOI 10.1093/logcom/exi018
   JAGER G, 1993, J LOGIC PROGRAM, V15, P55, DOI 10.1016/0743-1066(93)90013-7
   Kaminski M., 2002, ACM Transactions on Computational Logic, V3, P542, DOI 10.1145/566385.566388
   Lloyd J. W., 2012, Foundations of Logic Programming
   Loyer Y, 2003, THEOR COMPUT SCI, V308, P429, DOI [10.1016/S0304-3975(03)00047-1, 10.1016/S0304-3975(02)00047-1]
   MAREK W., 1991, J ACM, V38, P587
   Martin E., 2006, ADV MODAL LOGIC, V6, P353
   Minker J, 2002, LECT NOTES ARTIF INT, V2407, P472
   MINKER J, 1993, J LOGIC PROGRAM, V17, P95, DOI 10.1016/0743-1066(93)90028-F
   MOORE RC, 1985, ARTIF INTELL, V25, P75, DOI 10.1016/0004-3702(85)90042-6
   Pearce D, 2006, ANN MATH ARTIF INTEL, V47, P3, DOI 10.1007/s10472-006-9028-z
   Pedreschi D, 2002, THEOR PRACT LOG PROG, V2, P369, DOI 10.1017/S1471068402001400
NR 23
TC 3
Z9 4
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2012
VL 12
BP 843
EP 887
DI 10.1017/S1471068411000378
PN 6
PG 45
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 034EW
UT WOS:000310854200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ostrowski, M
   Schaub, T
AF Ostrowski, Max
   Schaub, Torsten
TI ASP modulo CSP: The clingcon system
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
ID ANSWER SET; CONSTRAINTS; LOGIC; SMT
AB We present the hybrid ASP solver clingcon, combining the simple modeling language and the high performance Boolean solving capacities of Answer Set Programming (ASP) with techniques for using non-Boolean constraints from the area of Constraint Programming (CP). The new clingcon system features an extended syntax supporting global constraints and optimize statements for constraint variables. The major technical innovation improves the interaction between ASP and CP solver through elaborated learning techniques based on irreducible inconsistent sets. A broad empirical evaluation shows that these techniques yield a performance improvement of an order of magnitude.
C1 [Ostrowski, Max; Schaub, Torsten] Univ Potsdam, Inst Informat, Potsdam, Germany.
C3 University of Potsdam
RP Ostrowski, M (corresponding author), Univ Potsdam, Inst Informat, Potsdam, Germany.
RI Schaub, Torsten/O-5873-2019
OI Schaub, Torsten/0000-0002-7456-041X
FU German Science Foundation (DFG) [SCHA 550/8-2, SCHA 550/10-1 AOBJ:
   593494]
FX This work was partially funded by the German Science Foundation (DFG)
   under grants SCHA 550/8-2, SCHA 550/10-1 AOBJ: 593494.
CR [Anonymous], LPARSE 1 0 USERS MAN
   [Anonymous], 2011, ASP COMPETITION
   Balduccini M., 2009, WORKSH ASPOCP 09
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Baselice S, 2005, LECT NOTES COMPUT SC, V3668, P52, DOI 10.1007/11562931_7
   Biere A., 2009, Handbook of Satisfiability
   Bofill M, 2008, LECT NOTES COMPUT SC, V5123, P294
   Chinneck J. W., 1991, ORSA Journal on Computing, V3, P157, DOI 10.1287/ijoc.3.2.157
   Dal Palù A, 2009, LECT NOTES COMPUT SC, V5649, P115, DOI 10.1007/978-3-642-02846-5_14
   Dechter R., 2003, Constraint Processing
   Drescher C, 2010, THEOR PRACT LOG PROG, V10, P465, DOI 10.1017/S1471068410000220
   Gebser M., 2011, COMPLEX OPTIMI UNPUB
   Gebser M., 2011, P LPNMR 11, P352
   Gebser M., USERS GUIDE GRINGO C
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P235, DOI 10.1007/978-3-642-02846-5_22
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Hill P., 2009, P ICLP 09
   Janhunen T., 2011, Proceedings of Grounding and Transformations for Theories with Variables, V11, P1
   Junker U., 2001, IJCAI 01 WORKSH MOD
   Mellarkod VS, 2008, LECT NOTES COMPUT SC, V4989, P15
   Mellarkod VS, 2008, ANN MATH ARTIF INTEL, V53, P251, DOI 10.1007/s10472-009-9116-y
   MOHR R, 1986, ARTIF INTELL, V28, P225, DOI 10.1016/0004-3702(86)90083-4
   Niemelä I, 2008, ANN MATH ARTIF INTEL, V53, P313, DOI 10.1007/s10472-009-9118-9
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Schulte C., 2012, MODELING PROGRAMMING
   Tamura N., 2008, 3 INT CSP SOLV COMP, P71
   van Loon J., 1981, EUR J OPER RES, V3, P283
   Yu YL, 2006, LECT NOTES COMPUT SC, V4121, P142
NR 29
TC 43
Z9 44
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2012
VL 12
BP 485
EP 503
DI 10.1017/S1471068412000142
PN 4-5
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 000CV
UT WOS:000308365000005
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Schneider-Kamp, P
   Giesl, J
   Ströder, T
   Serebrenik, A
   Thiemann, R
AF Schneider-Kamp, Peter
   Giesl, Juergen
   Stroeder, Thomas
   Serebrenik, Alexander
   Thiemann, Rene
TI Automated termination analysis for logic programs with cut
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE automated termination analysis; cut; definite logic programs
ID DENOTATIONAL SEMANTICS; PROLOG
AB Termination is an important and well-studied property for logic programs. However, almost all approaches for automated termination analysis focus on definite logic programs, whereas real-world Prolog programs typically use the cut operator. We introduce a novel pre-processing method which automatically transforms Prolog programs into logic programs without cuts, where termination of the cut-free program implies termination of the original program. Hence after this pre-processing, any technique for proving termination of definite logic programs can be applied. We implemented this pre-processing in our termination prover AProVE and evaluated it successfully with extensive experiments.
C1 [Schneider-Kamp, Peter] Univ So Denmark, Dept Math & Comp Sci, Odense, Denmark.
   [Giesl, Juergen; Stroeder, Thomas] Rhein Westfal TH Aachen, LuFG Informat 2, Aachen, Germany.
   [Serebrenik, Alexander] TU Eindhoven, Dept Math & Comp Sci, Eindhoven, Netherlands.
   [Thiemann, Rene] Univ Innsbruck, Inst Comp Sci, A-6020 Innsbruck, Austria.
C3 University of Southern Denmark; RWTH Aachen University; Eindhoven
   University of Technology; University of Innsbruck
RP Schneider-Kamp, P (corresponding author), Univ So Denmark, Dept Math & Comp Sci, Odense, Denmark.
RI Schneider-Kamp, Peter/E-4111-2013; Serebrenik, Alexander/E-1132-2012
OI Serebrenik, Alexander/0000-0002-1418-0095; Thiemann,
   Rene/0000-0002-0323-8829; Giesl, Jurgen/0000-0003-0283-8520;
   Schneider-Kamp, Peter/0000-0003-4000-5570
CR Andrews JH, 2003, THEOR PRACT LOG PROG, V3, P1, DOI 10.1017/S1471068402001540
   Apt K. R., 1997, From Logic Programming to Prolog
   BILLAUD M, 1990, THEOR COMPUT SCI, V71, P193, DOI 10.1016/0304-3975(90)90197-P
   Bruynooghe M, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1216374.1216378
   Codish M, 2005, LECT NOTES COMPUT SC, V3668, P326, DOI 10.1007/11562931_25
   COUSOT P, 1992, J LOGIC PROGRAM, V13, P103, DOI 10.1016/0743-1066(92)90030-7
   De Schreye D, 1994, J LOGIC PROGRAM, V20, P199, DOI 10.1016/0743-1066(94)90027-2
   Deransart P., 1996, PROLOG STANDARD
   DEVINK EP, 1990, SCI COMPUT PROGRAM, V13, P237, DOI 10.1016/0167-6423(90)90072-L
   FILE G, 1993, LECT NOTES ARTIF INT, V698, P134
   Giesl J, 2006, LECT NOTES ARTIF INT, V4130, P281
   Giesl J, 2006, LECT NOTES COMPUT SC, V4098, P297
   Howe JM, 2003, THEOR PRACT LOG PROG, V3, P95, DOI 10.1017/S1471068402001485
   KULAS M, 2000, ELECT NOTES THEORETI, V36, P39
   LECHARLIER B, 1994, ILPS 94, P157
   MARCHIORI M, 1996, LECT NOTES COMPUTER, V1101, P375
   MESNARD F, 2007, THEOR PRACT LOG PROG, V8, P111
   MOGENSEN T, 1996, LNCS, V1181, P374
   Nguyen M. T., 2010, THEORY PRAC IN PRESS
   Schneider-Kamp P, 2009, ACM T COMPUT LOG, V11, DOI 10.1145/1614431.1614433
   SCHNEIDERKAMP P, 2010, AIB201010 RWTH AACH
   Serebrenik A, 2005, THEOR PRACT LOG PROG, V5, P355, DOI 10.1017/S1471068404002248
   SORENSEN MH, 1995, INT LOG PROGR S, P465
   Spoto F, 1999, LECT NOTES COMPUT SC, V1548, P455
   Spoto F, 2000, J LOGIC PROGRAM, V42, P1, DOI 10.1016/S0743-1066(99)00012-6
   STRODER T, 2010, THESIS RWTH AACHEN
NR 26
TC 16
Z9 17
U1 0
U2 6
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 365
EP 381
DI 10.1017/S1471068410000165
PN 4-6
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lukácsy, G
   Szeredi, P
AF Lukacsy, Gergely
   Szeredi, Peter
TI Efficient description logic reasoning in Prolog: The DLog system
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE description logic; logic programming; resolution; large data sets; open
   world
AB Traditional algorithms for description logic (DL) instance retrieval are inefficient for large amounts of underlying data. As DL is becoming more and more Popular in areas Such as the Semantic Web and information integration, it is very important to have systems which can reason efficiently over large data sets. In this paper we present all approach to transform DL axioms, formalised in the SHIQ DL language, into a Prolog program under the unique name assumption. This transformation is performed with no knowledge about particular individuals: they are accessed dynamically during the normal Prolog execution of the generated program. This technique, together with the top-down Prolog execution, implies that only those pieces of data are accessed that are indeed important for answering the query. This makes it possible to store the individuals in a database instead of memory, which results in better scalability and helps in using DL ontologies directly on top of existing information sources. The transformation process consists of two steps: (1) the DL axioms are converted to first-order clauses of a restricted form, and (2) a Prolog program is generated from these clauses. Step (2), which is the focus of the present paper, actually works on more general clauses than those obtainable by applying step (1) to a SHIQ knowledge base. We first present a base transformation, the Output of which can be either executed Using a simple interpreter or further extended to executable Prolog code. We then discuss several optimisation techniques, applicable to the output of the base transformation. Some of these techniques are specific to our approach, while others are general enough to be interesting for DL reasoner implementors not using Prolog. We give ail overview of DLog, a DL reasoner in Prolog, which is an implementation of the techniques outlined above. We evaluate the performance of DLog and compare it to some widely used DL reasoners, such as RacerPro, Pellet and KAON2.
C1 [Lukacsy, Gergely; Szeredi, Peter] Budapest Univ Technol & Econ, Dept Comp Sci & Informat Theory, H-1117 Budapest, Hungary.
C3 Budapest University of Technology & Economics
RP Lukácsy, G (corresponding author), Budapest Univ Technol & Econ, Dept Comp Sci & Informat Theory, Magyar Tudosok Korutja 2, H-1117 Budapest, Hungary.
EM lukacsy@cs.bme.hu; szeredi@cs.bme.hu
CR [Anonymous], 1990, Logic, Programming and Prolog
   Baader F., 2004, DESCRIPTION LOGIC HD
   Bechhofer S., 2004, W3C recommendation
   BECHHOFER S, 2006, DIG DESCRIPTION LOGI
   CALVANESE D, 1998, P 6 INT C PRINC KNOW, P2
   CHENG MH, 1994, P INT WORKSH HIGH OR
   COSTA VS, 1991, LOGIC PROGRAMM, P443
   DELBRU R, 2008, P 4 INT WORKSH SCAL
   EISFELD M, 2002, P WORKSH APPL DESCR
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   FERNANDEZ M, 2004, XML QUERY XQUERY
   Franconi E, 2003, DESCRIPTION LOGIC HANDBOOK: THEORY, IMPLEMENTATION AND APPLICATIONS, P450
   FREYTAG JC, 1989, P IFIP 11 WORLD COMP, P801
   Glimm B, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P399
   Grosof BenjaminN., 2003, P 12 INT WORLD WIDE, P48, DOI DOI 10.1145/775152.775160
   GUO Y, 2004, INT SEM WEB C, P274
   Haarslev V., 2004, Proceedings of the 2004 International Workshop on Description Logics (DL-2004), Whistler, BC, Canada, June 6-8, P148
   HAARSLEV V, 2004, 9 INT C PRINC KNOWL, P163
   Hogan A., 2008, LNCS, V5367, P76
   Horrocks I, 2006, LECT NOTES COMPUT SC, V3861, P201
   HORROCKS I, 2004, P DL2004
   HORROCKS L, 2000, LECT NOTES COMPUTER, V1955, P441
   Hustadt U, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P466
   Hustadt Ullrich., 2004, Reasoning for Description Logics around SHIQ in a resolution framework
   KOWALSKI R, 1971, ARTIF INTELL, V2, P227, DOI 10.1016/0004-3702(71)90012-9
   LUKACSY G, 2006, P SEM 2006, P113
   Lukácsy G, 2008, LECT NOTES COMPUT SC, V5366, P455, DOI 10.1007/978-3-540-89982-2_40
   Motik B., 2006, THESIS U KARLSRUHE K
   Motik B, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P477
   MUTHUKUMAR K, 1992, J LOGIC PROGRAM, V13, P315, DOI 10.1016/0743-1066(92)90035-2
   Nagy Z, 2006, LECT NOTES COMPUT SC, V3819, P168
   NAGY Z, 2006, P 2006 INT WORKSH DE, V189
   Nagypál G, 2003, LECT NOTES COMPUT SC, V2888, P906
   NIEUWENHUIS R, 1995, J SYMB COMPUT, V19, P321, DOI 10.1006/jsco.1995.1020
   PLAISTED DA, 1986, J SYMB COMPUT, V2, P293, DOI 10.1016/S0747-7171(86)80028-1
   Przymusinski T. C., 1994, Annals of Mathematics and Artificial Intelligence, V12, P141, DOI 10.1007/BF01530784
   Samuel K, 2008, THEOR PRACT LOG PROG, V8, P301, DOI 10.1017/S1471068407003249
   Sirin E, 2007, J WEB SEMANT, V5, P51, DOI 10.1016/j.websem.2007.03.004
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   Stevens R, 2002, IEEE T INF TECHNOL B, V6, P129, DOI 10.1109/TITB.2002.1006300
   STICKEL ME, 1992, THEOR COMPUT SCI, V104, P109, DOI 10.1016/0304-3975(92)90168-F
   VENKEN R, 1984, P 6 EUR C ART INT EC, P347
   WARREN DS, 1999, PROGRAMMING IN PRESS
   Zombori Z, 2008, INT FED INFO PROC, V276, P393
NR 44
TC 16
Z9 17
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2009
VL 9
BP 343
EP 414
DI 10.1017/S1471068409003792
PN 3
PG 72
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 477HA
UT WOS:000268508600003
DA 2024-07-18
ER

PT J
AU Buccafurri, F
   Caminiti, G
AF Buccafurri, Francesco
   Caminiti, Gianluca
TI Logic programming with social features
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Logic programming; stable model semantics; knowledge representation
ID SEMANTICS
AB In everyday life it happens that a person has to reason out what other people think and how they behave, in order to achieve his goals. In other words, an individual may be required to adapt his behavior by reasoning about the others' mental state. In this paper we focus on a knowledge-representation language derived from logic programming which both supports the representation of mental states of individual communities and provides each with the capability of reasoning about others' mental states and acting accordingly. The proposed semantics is shown to be translatable into stable model semantics of logic programs with aggregates.
C1 [Buccafurri, Francesco; Caminiti, Gianluca] Univ Mediterranea Reggio Calabria, DIMET, I-89122 Reggio Di Calabria, Italy.
C3 Universita Mediterranea di Reggio Calabria
RP Buccafurri, F (corresponding author), Univ Mediterranea Reggio Calabria, DIMET, Via Graziella, I-89122 Reggio Di Calabria, Italy.
EM bucca@unirc.it; gianluca.caminiti@unirc.it
OI BUCCAFURRI, Francesco/0000-0003-0448-8464
CR ALBERTI M, 2004, LNCS, P314
   Alferes JJ, 2000, J LOGIC PROGRAM, V45, P43, DOI 10.1016/S0743-1066(99)00065-5
   ALFERES JJ, 2002, ELECT NOTES THEORETI, V70, P20
   [Anonymous], 2000, Reasoning About Rational Agents
   [Anonymous], 1990, Intentions in Communication
   Baral C., 2003, KNOWLEDGE REPRESENTA
   BRACCIALI A, 2004, LECT NOTES COMPUTER, V3476, P53
   Brézillon P, 1999, KNOWL ENG REV, V14, P47, DOI 10.1017/S0269888999141018
   Buccafurri F, 2005, LECT NOTES ARTIF INT, V3662, P317, DOI 10.1007/11546207_25
   BUCCAFURRI F, 2002, LNCS LNAI, V2407
   BUVAC S, 1993, PROCEEDINGS OF THE ELEVENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, P412
   Cost RS, 2001, COORDINATION OF INTERNET AGENTS: MODELS, TECHNOLOGIES AND APPLICATIONS, P183
   Costantini S, 2002, LECT NOTES ARTIF INT, V2424, P1, DOI 10.1007/3-540-45757-7_1
   DELLARMI T, 2003, IJCAI 2003 AC MEX, P847
   DESAEGER S, 2006, P COMP LOG MULT SYST
   DEVOS M, 2005, LNCS, P72
   DEVOS M, 2003, LNCS, P362
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Ghidini C, 2001, ARTIF INTELL, V127, P221, DOI 10.1016/S0004-3702(01)00064-9
   KONOLIGE K, 1984, THESIS STANFORD U CA
   LEITE JA, 2002, LECT NOTES ARTIF INT, P141
   LEONE N, 2002, ARXIV COMPUTER SCI
   Mascardi V, 2004, THEOR PRACT LOG PROG, V4, P429, DOI 10.1017/S1471068404002029
   MAYFIELD J, 1996, LECT NOTES ARTIF INT, V1037, P347
   McCarthy H., 1993, IJCAI-93. Proceedings of the Thirteenth International Joint Conference on Artificial Intelligence, P555
   Rao AS., 1995, Proceedings of the first international conference on multi-agent systems, P312
   RAO AS, 1996, LECT NOTES ARTIF INT, V1038, P42, DOI DOI 10.1007/BFB0031845
   SATOH K, 2002, 1 INT JOINT C AUT AG, P897
   Serafini L, 2004, ARTIF INTELL, V155, P41, DOI 10.1016/j.artint.2003.11.001
   Subrahmanian VentatramananS., 2000, HETEROGENEOUS AGENT
   van der Hoek W, 2003, LOG J IGPL, V11, P135, DOI 10.1093/jigpal/11.2.135
   WOOLDRIDGE M, 1995, KNOWL ENG REV, V10, P115, DOI 10.1017/S0269888900008122
NR 34
TC 5
Z9 5
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP-NOV
PY 2008
VL 8
BP 643
EP 690
DI 10.1017/S1471068408003463
PN 5-6
PG 48
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 385UH
UT WOS:000261838600004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dung, PM
   Hanh, DD
   Thang, PM
AF Dung, PM
   Hanh, DD
   Thang, PM
TI Stabilization of cooperative information agents in unpredictable
   environment: a logic programming approach
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE stabilization; cooperative information agents; logic programming
ID REPRESENTATION
AB An information agent is viewed as a deductive database consisting of three parts:
   (.) an observation database containing the facts the agent has observed or sensed from its surrounding environment;
   (.) an input database containing the information the agent has obtained from other agents;
   (.) an intensional database which is a set of rules for computing derived information from the information stored in the observation and input databases.
   Stabilization of a system of information agents represents a capability of the agents to eventually get correct information about their Surrounding despite unpredictable environment changes and the incapability of many agents to sense Such changes causing them to have temporary incorrect information. We argue that the stabilization of a system of cooperative information agents could be understood as the convergence of the behavior of the whole system toward the behavior of a "superagent", who has the sensing and Computing capabilities of all agents combined. We show that unfortunately, stabilization is not guaranteed in general, even if the agents are fully cooperative and do not hide any information from each other. We give sufficient conditions for stabilization. We discuss the consequences of our results.
C1 Asian Inst Technol, Comp Sci & Informat Management Dept, Bangkok, Thailand.
C3 Asian Institute of Technology
RP Asian Inst Technol, Comp Sci & Informat Management Dept, Bangkok, Thailand.
EM dung@cs.ait.ac.th; hanh@cs.ait.ac.th; thangplam@cs.ait.ac.th
CR [Anonymous], 1998, RFC2328 OSPF VER 2
   [Anonymous], 1962, FLOWS NETWORKS
   APTT K, 1988, FDN DEDUCTIVE LOGIC, P89
   Bellman R., 1957, Dynamic programming
   Brooks R., 2002, Robot: The Future of Flesh and Machines
   BROOKS RA, 1991, ARTIF INTELL, V47, P139, DOI 10.1016/0004-3702(91)90053-M
   BROOKS RA, 1986, IEEE T ROBOTIC AUTOM, V2, P14, DOI 10.1109/JRA.1986.1087032
   CIAMPOLINI A, 2000, ANN MATH ARTIF INTEL, V37, P28
   DUKSTRA E, 1974, COMM ACM, V17
   DURFEE EH, 1995, IEEE T KNOWL DATA EN
   FLATEBO M, 1994, DISTRIBUTED COMPUTER, P100
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   HEDRICK C., 1988, ROUTING INFORM PROTO
   Huitema C., 2000, Routing in the Internet
   Kowalski R, 1999, ANN MATH ARTIF INTEL, V25, P391, DOI 10.1023/A:1018934223383
   ROSENSCHEIN SJ, 1995, ARTIF INTELL, V73, P149, DOI 10.1016/0004-3702(94)00056-7
   SADRI F, 2001, J J MAHER ED LNAI, V2333, P405
   SATOH K, 2002, P 1 INT JOINT C AUT
   SCHNEIDER M, 1993, COMPUT SURV, V25, P45, DOI 10.1145/151254.151256
   SHOHAM Y, 1993, ARTIF INTELL, V60, P51, DOI 10.1016/0004-3702(93)90034-9
   Steels L., 1995, The Artificial Life Route to Artificial Intelligence: Building Embodied Situated Agents
   WOOLDRIDGE M, 1995, KNOWL ENG REV, V10, P115, DOI 10.1017/S0269888900008122
   Wooldridge M., 1997, IEE Proceedings-Software Engineering, V144, P26, DOI 10.1049/ip-sen:19971026
NR 23
TC 1
Z9 1
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2006
VL 6
BP 1
EP 22
DI 10.1017/S1471068405002553
PN 1-2
PG 22
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 011WO
UT WOS:000235299500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Howe, JM
   King, A
AF Howe, JM
   King, A
TI Efficient groundness analysis in Prolog
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE abstract interpretation; groundness analysis; definite Boolean
   functions; fix-point algorithms
ID DEFINITE BOOLEAN FUNCTIONS; CONSTRAINT LOGIC PROGRAMS; DEPENDENCY
   ANALYSIS; ABSTRACT INTERPRETATION; COMPILATION; PROP
AB Boolean functions can be used to express the groundness of, and trace grounding dependencies between, program variables in (constraint) logic programs. In this paper, a variety of issues pertaining to the efficient Prolog implementation of groundness analysis are investigated, focusing on the domain of definite Boolean functions, Def. The systematic design of the representation of an abstract domain is discussed in relation to its impact on the algorithmic complexity of the domain operations; the most frequently called operations should be the most lightweight. This methodology is applied to Def, resulting in a new representation, together with new algorithms for its domain operations utilising previously unexploited properties of Def - for instance, quadratic-time entailment checking. The iteration strategy driving the analysis is also discussed and a simple, but very effective, optimisation of induced magic is described. The analysis can be implemented straightforwardly in Prolog and the use of a non-ground representation results in an efficient, scalable tool which does not require widening to be invoked, even on the largest benchmarks. An extensive experimental evaluation is given.
C1 City Univ London, Dept Comp, London EC1V OHB, England.
   Univ Kent, Comp Lab, Canterbury CT2 7NF, Kent, England.
C3 City University London; University of Kent
RP Howe, JM (corresponding author), City Univ London, Dept Comp, London EC1V OHB, England.
OI Howe, Jacob/0000-0001-8013-6941
CR Armstrong T, 1998, SCI COMPUT PROGRAM, V31, P3, DOI 10.1016/S0167-6423(96)00039-1
   Bagnara R, 1999, LECT NOTES COMPUT SC, V1548, P471
   BAGNARA R, 1996, LNCS, V1140, P107
   Baker N., 1993, Australian Computer Science Communications, V15, P321
   Bancilhon F., 1986, ACM SIGMOD INT C MAN, P16
   BOURDONCLE F, 1993, LECT NOTES COMPUTER, V735, P128
   Bueno F., 1996, LNCS, V1058, P108, DOI [10.1007/3-540-61055-3_32, DOI 10.1007/3-540-61055-3_32]
   Codish M, 1999, J LOGIC PROGRAM, V41, P125, DOI 10.1016/S0743-1066(99)00014-X
   Codish M, 1995, J LOGIC PROGRAM, V25, P249, DOI 10.1016/0743-1066(95)00064-X
   Codish M, 1999, J LOGIC PROGRAM, V38, P355, DOI 10.1016/S0743-1066(98)10024-9
   Codish M, 1999, ACM T PROGR LANG SYS, V21, P948, DOI 10.1145/330249.330252
   Corsini, 1994, LECT NOTES COMPUTER, V714, P75
   DART PW, 1991, J LOGIC PROGRAM, V11, P163, DOI 10.1016/0743-1066(91)90017-J
   DEBACKER B, 1993, INT C LOG PROGR, P550
   DeLaBanda MG, 1996, ACM T PROGR LANG SYS, V18, P564, DOI 10.1145/232706.232734
   Fecht C, 1999, SCI COMPUT PROGRAM, V35, P137, DOI 10.1016/S0167-6423(99)00009-X
   FECHT C, 1997, THESIS U SAARLANDES
   FECHT C, 1996, LNCS, V1145, P189
   Gallagher John P., 1994, ICLP 94, P599
   Genaim S, 2001, LECT NOTES COMPUT SC, V2028, P417
   Genaim S, 2001, THEOR PRACT LOG PROG, V1, P611, DOI 10.1017/S1471068401001077
   Heaton A, 2000, J LOGIC PROGRAM, V45, P143, DOI 10.1016/S0743-1066(00)00006-6
   Hermenegildo M, 2000, ACM T PROGR LANG SYS, V22, P187, DOI 10.1145/349214.349216
   HERMENEGILDO MV, 1992, J LOGIC PROGRAM, V13, P349, DOI 10.1016/0743-1066(92)90053-6
   Howe JM, 2000, LECT NOTES COMPUT SC, V1782, P200
   JAFFAR J, 1984, NEW GENERAT COMPUT, V2, P207, DOI 10.1007/BF03037057
   Kelly AD, 1998, ACM T PROGR LANG SYS, V20, P1223, DOI 10.1145/295656.295661
   King A, 1999, LECT NOTES COMPUT SC, V1576, P59
   LECHARLIER B, 1994, ACM T PROGR LANG SYS, V16, P35, DOI 10.1145/174625.174627
   Marriott K., 1993, ACM Letters on Programming Languages and Systems, V2, P181, DOI 10.1145/176454.176519
   MUTHUKUMAR K, 1992, J LOGIC PROGRAM, V13, P315, DOI 10.1016/0743-1066(92)90035-2
   Plotkin G. D., 1970, Machine Intelligence, V5, P153
   SCHACHTE P, 1999, THESIS U MELBOURNE A
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   VANHENTENRYCK P, 1995, J LOGIC PROGRAM, V23, P237, DOI 10.1016/0743-1066(94)00029-6
   WUNDERWALD J, 1995, LNCS, V1048, P17
NR 36
TC 12
Z9 12
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 40 WEST 20TH ST, NEW YORK, NY 10011-4221 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2003
VL 3
BP 95
EP 124
DI 10.1017/S1471068402001485
PN 1
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 674LJ
UT WOS:000182638000004
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Heyninck, J
   Bogaerts, B
AF Heyninck, Jesse
   Bogaerts, Bart
TI Non-deterministic Approximation Operators: Ultimate Operators,
   Semi-equilibrium Semantics, and Aggregates
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE approximation fixpoint theory; disjunctive logic programming;
   semi-equilibrium semantics
ID LOGIC PROGRAMS; MODELS
AB Approximation fixpoint theory (AFT) is an abstract and general algebraic framework for studying the semantics of non-monotonic logics. In recent work, AFT was generalized to non-deterministic operators, that is, operators whose range are sets of elements rather than single elements. In this paper, we make three further contributions to non-deterministic AFT: (1) we define and study ultimate approximations of non-deterministic operators, (2) we give an algebraic formulation of the semi-equilibrium semantics by Amendola et al., and (3) we generalize the characterizations of disjunctive logic programs to disjunctive logic programs with aggregates.
C1 [Heyninck, Jesse] Open Univ, Heerlen, Netherlands.
   [Bogaerts, Bart] Vrij Univ Brussels, Brussels, Belgium.
C3 Open University Netherlands
RP Heyninck, J (corresponding author), Open Univ, Heerlen, Netherlands.
EM jesse.heyninck@ou.nl; bart.bogaerts@ai.vub.ac.be
OI Heyninck, Jesse/0000-0002-3825-4052; Bogaerts, Bart/0000-0003-3460-4251
CR Alcântara J, 2005, LECT NOTES COMPUT SC, V3668, P341, DOI 10.1007/11562931_26
   Alviano M, 2023, THEOR PRACT LOG PROG, V23, P157, DOI 10.1017/S1471068422000047
   Amendola G, 2016, ARTIF INTELL, V234, P219, DOI 10.1016/j.artint.2016.01.011
   Bogaerts B., 2015, THESIS FACULTY ENG S
   Bogaerts B, 2019, AAAI CONF ARTIF INTE, P2686
   Denecker M, 2000, SPRINGER INT SER ENG, V597, P127
   Denecker Marc, 2002, P KR 02, P177
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   FERNANDEZ JA, 1995, J LOGIC PROGRAM, V25, P33, DOI 10.1016/0743-1066(94)00106-G
   Gelfond M, 2019, ARTIF INTELL, V275, P28, DOI 10.1016/j.artint.2019.04.004
   Heyninck J., 2022, ARXIV
   Heyninck J., 2023, ARXIV
   Marek VW, 2008, THEOR PRACT LOG PROG, V8, P167, DOI 10.1017/S147106840700302X
   Marek VW, 2004, LECT NOTES ARTIF INT, V2923, P167
   Pearce D, 2006, ANN MATH ARTIF INTEL, V47, P3, DOI 10.1007/s10472-006-9028-z
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Pelov Nikolay, 2004, P NMR 04, P327
   Truszczynski M, 2006, ANN MATH ARTIF INTEL, V48, P245, DOI 10.1007/s10472-007-9049-2
   Vanbesien L., 2021, ARXIV
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
NR 20
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2023
VL 23
IS 4
SI SI
BP 632
EP 647
AR PII S1471068423000236
DI 10.1017/S1471068423000236
EA JUL 2023
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7Z0
UT WOS:001026283300001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Tarau, P
   Blanco, E
AF Tarau, Paul
   Blanco, Eduardo
TI Interactive Text Graph Mining with a Prolog-Based Dialog Engine
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic-based dialog engine; graph-based natural language processing;
   dependency graphs; query-driven salient sentence extraction; synergies
   between neural and symbolic text processing
AB On top of a neural network-based dependency parser and a graph-based natural language processing module, we design a Prolog-based dialog engine that explores interactively a ranked fact database extracted from a text document. We reorganize dependency graphs to focus on the most relevant content elements of a sentence and integrate sentence identifiers as graph nodes. Additionally, after ranking the graph, we take advantage of the implicit semantic information that dependency links and WordNet bring in the form of subject-verb-object, "is-a" and "part-of" relations. Working on the Prolog facts and their inferred consequences, the dialog engine specializes the text graph with respect to a query and reveals interactively the document's most relevant content elements. The open-source code of the integrated system is available at https://github.com/ptarau/DeepRank.
C1 [Tarau, Paul; Blanco, Eduardo] Univ North Texas, Dept Comp Sci & Engn, 1155 Union Circle, Denton, TX 76203 USA.
C3 University of North Texas System; University of North Texas Denton
RP Tarau, P (corresponding author), Univ North Texas, Dept Comp Sci & Engn, 1155 Union Circle, Denton, TX 76203 USA.
EM paul.tarau@unt.edu; eduardo.blanco@unt.edu
RI Blanco, Eduardo/AAR-1246-2021
OI Blanco, Eduardo/0000-0002-6741-2881
CR Adolphs P, 2011, LECT NOTES ARTIF INT, V7006, P50, DOI 10.1007/978-3-642-24455-1_5
   Allahyari Mehdi, 2017, ABS170702268 CORR
   [Anonymous], 2008, LARGE DATASET KEYPHR
   [Anonymous], 2004, COLING 2004 P 20 INT
   [Anonymous], 2002, P 11 INT C WORLD WID, DOI DOI 10.1145/511446.511513
   Blanco E., 2019, ABS190909742 ARXIV
   Bos Johan, 2015, P 20 NORDIC C COMPUT, V109, P301
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Bunescu RC, 2005, P C HUM LANG TECHN E, P724, DOI DOI 10.3115/1220575.1220666
   Chen D., 2014, P 2014 C EMPIRICAL M, P740, DOI DOI 10.3115/V1/D14-1082
   Choi J.D, 2017, P 15 INT WORKSH TREE, P35
   Choi Jinho D., 2011, Proceedings of ACL workshop on Relational Models of Semantics, RELMS'11, P37
   de Marneffe MC, 2014, LREC 2014 - NINTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, P4585
   Denecker M, 2002, LECT NOTES ARTIF INT, V2407, P402
   Erkan G, 2004, J ARTIF INTELL RES, V22, P457, DOI 10.1613/jair.1523
   Fellbaum C., 1998, WORDNET ELECT LEXICA, DOI DOI 10.7551/MITPRESS/7287.001.0001
   Gebser M, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5450
   Haveliwala T, 2003, 200335 STANF INFOLAB
   Inclezan D., 2019, ELECTRON P THEOR COM
   Inclezan D, 2018, THEOR PRACT LOG PROG, V18, P535, DOI 10.1017/S1471068418000121
   Li WG, 2016, 2016 3RD INTERNATIONAL CONFERENCE ON INFORMATION SCIENCE AND CONTROL ENGINEERING (ICISCE), P683, DOI 10.1109/ICISCE.2016.151
   Lierler Y., 2017, IWCS 2017
   Loper E, 2002, ETMTNLP 02 P ACL 02, P63, DOI [10.3115/1225403.1225421, DOI 10.3115/1225403.1225421, DOI 10.3115/1118108.1118117]
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Mihalcea R., 2005, P INT JOINT C NAT LA
   Mihalcea Rada, 2007, P 16 ACM C C INF KNO, P233, DOI DOI 10.1145/1321440.1321475.19
   Mihalcea Rada, 2004, EMNLP
   Mihalcea Rada, 2011, Graph-based Natural Language Processing and Information Retrieval
   Mitra A, 2019, AAAI CONF ARTIF INTE, P3003
   Nenkova A., 2012, MINING TEXT DATA, P43, DOI [10.1007/978-1-4614-3223-4_3, 10.1007/978- 1- 4614-3223- 4_3.]
   Page L., 1999, PAGERANK CITATION RA
   Peng Y., 2015, P BIONLP 15, V15, P21
   Schaub T, 2018, KUNSTL INTELL, V32, P101, DOI 10.1007/s13218-018-0554-8
   Schulte C, 1997, LECT NOTES COMPUT SC, V1330, P519, DOI 10.1007/BFb0017464
   Stevenson M., 2009, Research on Language Computation, V7, P13, DOI 10.1007/s11168-009-9061-2
   Tarau P, 2020, LECT NOTES COMPUT SC, V12007, P3, DOI [10.1007/978-3-030-39197-3_1, 10.1017/S1471068420000137]
   Vaswani A, 2017, ADV NEUR IN, V30
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
NR 38
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2021
VL 21
IS 2
BP 244
EP 263
AR PII S1471068420000137
DI 10.1017/S1471068420000137
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA TH4CP
UT WOS:000672039800004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Calimeri, F
   Dodaro, C
   Fuscà, D
   Perri, S
   Zangari, J
AF Calimeri, Francesco
   Dodaro, Carmine
   Fusca, Davide
   Perri, Simona
   Zangari, Jessica
TI Efficiently Coupling the I-DLV Grounder with ASP Solvers
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE knowledge representation and nonmonotonic reasoning; constraints;
   technical notes and rapid communications
ID ALGORITHM SELECTION; ANSWER; GRINGO
AB We present I-dlv+MS, a new answer set programming (ASP) system that integrates an efficient grounder, namely I-dlv, with an automatic selector that inductively chooses a solver: depending on some inherent features of the instantiation produced by I-dlv, machine learning techniques guide the selection of the most appropriate solver. The system participated in the latest (7th) ASP competition, winning the regular track, category SP (i.e., one processor allowed).
C1 [Calimeri, Francesco; Fusca, Davide; Perri, Simona; Zangari, Jessica] Univ Calabria, Dept Math & Comp Sci, Arcavacata Di Rende, Italy.
   [Dodaro, Carmine] Univ Genoa, Dept Informat Bioengn Robot & Syst Engn, Genoa, Italy.
C3 University of Calabria; University of Genoa
RP Calimeri, F (corresponding author), Univ Calabria, Dept Math & Comp Sci, Arcavacata Di Rende, Italy.
EM calimeri@mat.unical.it; dodaro@dibris.unige.it; fusca@mat.unical.it;
   perri@mat.unical.it; zangari@mat.unical.it
RI Calimeri, Francesco/J-1935-2012; Zangari, Jessica/AAA-6522-2021; Dodaro,
   Carmine/AAE-5732-2020; Perri, Simona/IQV-7425-2023
OI Calimeri, Francesco/0000-0002-0866-0834; Zangari,
   Jessica/0000-0002-6418-7711; Dodaro, Carmine/0000-0002-5617-5286; Perri,
   Simona/0000-0002-8036-5709
CR Alviano M., 2015, LECT NOTES COMPUTER, V9345, P40
   ALVIANO M., 2016, THEOR PRACT LOG PROG, V16, P5
   Alviano M., 2015, J LOGIC COMPUTATION
   Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   [Anonymous], 1988, PRINCIPLES DATABASE
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Bruynooghe M, 2015, THEOR PRACT LOG PROG, V15, P783, DOI 10.1017/S147106841400009X
   Calimeri F., 2017, I DLV MS HOMEPAGE
   Calimeri F., 2016, I DLV HOMEPAGE
   Calimeri F., 2012, TECHNICAL REPORT
   Calimeri F, 2018, LECT NOTES COMPUT SC, V10702, P135, DOI 10.1007/978-3-319-73305-0_9
   Calimeri F, 2017, INTELL ARTIF, V11, P5, DOI 10.3233/IA-170104
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   Dal Palù A, 2009, FUND INFORM, V96, P297, DOI 10.3233/FI-2009-180
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   DODARO C., 2016, THEOR PRACT LOG PROG, V16, P5
   Dodaro C., 2011, CILC, P99
   Dodaro C, 2015, LECT NOTES COMPUT SC, V9209, P77, DOI 10.1007/978-3-319-22002-4_7
   Erdem E, 2016, AI MAG, V37, P53, DOI 10.1609/aimag.v37i3.2678
   Esfahani MS, 2014, BIOINFORMATICS, V30, P242, DOI 10.1093/bioinformatics/btt662
   Faber W., 2012, Correct Reasoning, P247, DOI DOI 10.1007/978-3-642-30743-0
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P368, DOI 10.1007/978-3-319-23264-5_31
   Gebser M., 2016, TECHNICAL COMMUNICAT, DOI [10.4230/OASIcs.ICLP.2016.2, DOI 10.4230/OASICS.ICLP.2016.2]
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Gebser M, 2017, J ARTIF INTELL RES, V60, P41, DOI 10.1613/jair.5373
   Gebser M, 2017, LECT NOTES ARTIF INT, V10377, P3, DOI 10.1007/978-3-319-61660-5_1
   Gebser M, 2016, AAAI CONF ARTIF INTE, P4327
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Grasso G, 2009, LECT NOTES COMPUT SC, V5753, P591, DOI 10.1007/978-3-642-04238-6_63
   Hoos H, 2014, THEOR PRACT LOG PROG, V14, P569, DOI 10.1017/S1471068414000210
   Kaufmann B, 2016, AI MAG, V37, P25, DOI 10.1609/aimag.v37i3.2672
   Kotthoff L, 2017, J MACH LEARN RES, V18
   Lefévre C, 2017, THEOR PRACT LOG PROG, V17, P266, DOI 10.1017/S1471068416000569
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Leone N, 2015, LECT NOTES COMPUT SC, V9203, P308, DOI 10.1007/978-3-319-21768-0_10
   Lierler Y, 2004, LECT NOTES ARTIF INT, V2923, P346
   Maratea M, 2008, J ALGORITHMS, V63, P70, DOI 10.1016/j.jalgor.2008.02.006
   Maratea M, 2014, THEOR PRACT LOG PROG, V14, P841, DOI 10.1017/S1471068413000094
   Minh Dao-Tran, 2012, Logics in Artificial Intelligence. Proceedings of the 13th European Conference (JELIA 2012), P480, DOI 10.1007/978-3-642-33353-8_38
   Nogueira M., 2001, Practical Aspects of Declarative Languages. Third International Symposium, PADL 2001. Proceedings (Lecture Notes in Computer Science Vol.1990), P169
   Pulina L, 2009, CONSTRAINTS, V14, P80, DOI 10.1007/s10601-008-9051-2
   Ricca F, 2012, THEOR PRACT LOG PROG, V12, P361, DOI 10.1017/S147106841100007X
   Rice J. R., 1976, Advances in computers, vol.15, P65, DOI 10.1016/S0065-2458(08)60520-3
   Simons Patrik, 2002, ARTIF INTELL, V138, P181
   Smola AJ, 2004, STAT COMPUT, V14, P199, DOI 10.1023/B:STCO.0000035301.49549.88
   Syrjanen, 2002, LPARSE 1 0 USERS MAN
   Syrjanen T., 2001, LOGIC PROGRAMMING NO, P267, DOI DOI 10.1007/3-540-45402-0_20
   Tiihonen J., 2003, INT C ENG DES
   Weinzierl A, 2017, LECT NOTES ARTIF INT, V10377, P191, DOI 10.1007/978-3-319-61660-5_17
   Xu L, 2008, J ARTIF INTELL RES, V32, P565, DOI 10.1613/jair.2490
NR 54
TC 8
Z9 8
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2020
VL 20
IS 2
BP 205
EP 224
AR PII S1471068418000546
DI 10.1017/S1471068418000546
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA OC6NY
UT WOS:000579274100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, QL
   Benton, C
   Inclezan, D
AF Zhang, Qinglin
   Benton, Chris
   Inclezan, Daniela
TI An Application of ASP Theories of Intentions to Understanding Restaurant
   Scenarios: Insights and Narrative Corpus
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Answer Set Programming; natural language understanding; intentional
   agents
AB This paper presents a practical application of Answer Set Programming to the understanding of narratives about restaurants. While this task was investigated in depth by Erik Mueller,exceptionalscenarios remained a serious challenge for his script-based story comprehension system. We present a methodology that remedies this issue by modeling characters in a restaurant episode asintentional agents. We focus especially on the refinement of certain components of this methodology in order to increase coverage and performance. We present a restaurant story corpus that we created to design and evaluate our methodology.
C1 [Zhang, Qinglin; Benton, Chris; Inclezan, Daniela] Miami Univ, Coll Engn & Comp, Oxford, OH 45056 USA.
C3 University System of Ohio; Miami University
RP Zhang, QL (corresponding author), Miami Univ, Coll Engn & Comp, Oxford, OH 45056 USA.
EM zhangq7@miamioh.edu; bentoncl@miamioh.edu; inclezd@miamioh.edu
CR [Anonymous], 1997, Solving the frame problem-a mathematical investigation of the common sense law of inertia
   [Anonymous], 1981, The Handbook of Artificial Intelligence, Volume
   Baldini M, 2009, PUBLIC HEALTH NUTR, V12, P148, DOI 10.1017/S1368980008002759
   Balduccini M., 2003, P INT S LOG FORM COM, V102, P9
   Balduccini M, 2007, LECT NOTES COMPUT SC, V4483, P18, DOI 10.1007/978-3-540-72200-7_4
   Baral C, 2000, SPRINGER INT SER ENG, V597, P257
   Baral C., 2005, AAAI, P689
   Bertelson O.W., 2003, HCI MODELS THEORIES, P291, DOI DOI 10.1016/B978-155860808-5/50011-3
   Blount Justin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P134, DOI 10.1007/978-3-319-23264-5_12
   Blount J., 2013, THESIS
   Bratman M.E., 1987, Intention, Plans, and Practical Reason
   Chambers N., 2008, P ACL 08 HLT, P789
   Craik K.J.W., 1943, The Nature of Explanation, DOI DOI 10.2307/2018933
   Gabaldon A, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P1696
   Gelfond M, 2014, KNOWLEDGE REPRESENTATION, REASONING, AND THE DESIGN OF INTELLIGENT AGENTS: THE ANSWER-SET PROGRAMMING APPROACH, P1, DOI 10.1017/CBO9781139342124
   Gordon AS, 2007, K-CAP'07: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON KNOWLEDGE CAPTURE, P167
   Gupta R, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P605
   Hoos Holger H., 2013, Learning and Intelligent Optimization. 7th International Conference, LION 7. Revised Selected Papers: LNCS 7997, P138, DOI 10.1007/978-3-642-44973-4_16
   Inclezan D., 2011, P 2011 AAAI SPRING S, P49
   Inclezan D., 2017, TECHN COMM 33 INT C
   Inclezan D, 2018, THEOR PRACT LOG PROG, V18, P535, DOI 10.1017/S1471068418000121
   Johansson R., 2007, Language Technology at LTH
   Johansson Richard., 2007, P 4 INT WORKSHOP SEM, P227, DOI DOI 10.3115/1621474.1621522
   Johnson-Laird PN., 1983, Mental Models: towards a Cognitive Science of Language, Inference, and Consciousness
   Manning C. D., 2014, STANFORD CORENLP SUI
   Manshadi M., 2008, P FLAIRS
   Modi A., 2017, CORR, P3485
   Mueller E., 2004, COGNITIVE SYSTEMS RE, V5, P307
   Mueller Erik T., 2007, Literary & Linguistic Computing, V22. no 1, P67, DOI 10.1093/llc/fql014
   NG HT, 1992, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE (KR 92), P499
   Regneri M, 2010, ACL 2010: 48TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P979
   Schank Roger C., 1977, SCRIPTS PLANS GOALS
   Singh P, 2002, LECT NOTES COMPUT SC, V2519, P1223
   Smith D., 2009, P COMM WORKSH IUT 09
   Van Dijk T., 1983, STRATEGIES DISCOURSE
   Zhang Qinglin., 2017, Proceedings of PAoASP'17
NR 36
TC 2
Z9 4
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2020
VL 20
IS 2
BP 273
EP 293
AR PII S1471068419000048
DI 10.1017/S1471068419000048
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA OC6NY
UT WOS:000579274100005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Redl, C
AF Redl, Christoph
TI Mining External Sources in Answer Set Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; external computation; HEX-programs; inlining;
   equivalence
ID DESCRIPTION LOGICS; EQUIVALENCE; UNIFORM; NOTIONS
AB HEX-programs are an extension of answer set programs (ASP) with external sources. To this end, external atoms provide a bidirectional interface between the program and an external source. The traditional evaluation algorithm for HEX-programs is based on guessing truth values of external atoms and verifying them by explicit calls of the external source. The approach was optimized by techniques that reduce the number of necessary verification calls or speed them up, but the remaining external calls are still expensive. In this paper, we present an alternative evaluation approach based on Wining of external atoms, motivated by existing but less general approaches for specialized formalisms such as DL-programs. External atoms are then compiled away such that no verification calls are necessary. The approach is implemented in the dlvhex reasoner. Experiments show a significant performance gain. Besides performance improvements, we further exploit inlining rig for extending previous (semantic) characterizations of program equivalence from ASP to HEX-programs, including those of strong equivalence, uniform equivalence, and (H, B)equivalence. Finally, based on these equivalence criteria, we characterize also inconsistency of programs w.r.t. extensions. Since well-known ASP extensions (such as constraint ASP) are special cases of HEX, the results are interesting beyond the particular formalism.
C1 [Redl, Christoph] Vienna Univ Technol, Inst Log & Computat, Favoritenstr 9-11, A-1040 Vienna, Austria.
C3 Technische Universitat Wien
RP Redl, C (corresponding author), Vienna Univ Technol, Inst Log & Computat, Favoritenstr 9-11, A-1040 Vienna, Austria.
EM redl@kr.tuwien.ac.at
FU Austrian Science Fund (FWF) [P27730]; Austrian Science Fund (FWF)
   [P27730] Funding Source: Austrian Science Fund (FWF)
FX This work has been supported by the Austrian Science Fund (FWF) Grant
   P27730.
CR ALVIANO M., 2015, THEOR PRACT LOG PROG, V15, P4
   Alviano M, 2016, FUND INFORM, V149, P1, DOI 10.3233/FI-2016-1441
   BAJRAKTARI L, 2017, CEUR WORKSHOP P, V1879
   Baumann R, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P800
   Bettex M., 2009, P IJCAI 09 WORKSH CO, P53
   Bliem B, 2016, LECT NOTES COMPUT SC, V9616, P95, DOI 10.1007/978-3-319-30024-5_6
   Calvanese D, 2007, J AUTOM REASONING, V39, P385, DOI 10.1007/s10817-007-9078-x
   Darwiche A, 2002, J ARTIF INTELL RES, V17, P229, DOI 10.1613/jair.989
   De Rosis A.F., 2015, 8 WORKSH ANSW SET PR
   Drescher C., 2012, LIPICS, V17, P188
   Eiter T, 2003, LECT NOTES COMPUT SC, V2916, P224, DOI 10.1007/978-3-540-24599-5_16
   Eiter T., 2005, P AAAI C ART INT AAA, P695
   EITER T, 2008, RR18430802 INFSYS TU
   Eiter T, 2008, ARTIF INTELL, V172, P1495, DOI 10.1016/j.artint.2008.04.002
   Eiter T, 2016, THEOR PRACT LOG PROG, V16, P418, DOI 10.1017/S1471068415000113
   Eiter T, 2014, AAAI CONF ARTIF INTE, P1041
   Eiter T, 2016, ARTIF INTELL, V233, P84, DOI 10.1016/j.artint.2016.01.003
   Eiter T, 2014, FRONT ARTIF INTEL AP, V263, P285, DOI 10.3233/978-1-61499-419-0-285
   Eiter T, 2014, J ARTIF INTELL RES, V49, P269, DOI 10.1613/jair.4175
   Eiter T, 2012, THEOR PRACT LOG PROG, V12, P659, DOI 10.1017/S1471068412000233
   Eiter T, 2009, LECT NOTES COMPUT SC, V5689, P40, DOI 10.1007/978-3-642-03754-2_2
   Faber W, 2005, LECT NOTES ARTIF INT, V3662, P40, DOI 10.1007/11546207_4
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Franco J, 2009, FRONT ARTIF INTEL AP, V185, P3, DOI 10.3233/978-1-58603-929-5-3
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P235, DOI 10.1007/978-3-642-02846-5_22
   Gelfond M., 1991, NEW GENERAT COMPUT, V9, P365, DOI DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Guohui Xiao, 2011, Web Reasoning and Rule Systems. Proceedings 5th International Conference (RR 2011), P300, DOI 10.1007/978-3-642-23580-1_28
   Heymans S, 2010, FRONT ARTIF INTEL AP, V215, P35, DOI 10.3233/978-1-60750-606-5-35
   LEMBO D, 2011, QUERY REWRITING INCO, P155
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Nieuwenhuis R, 2005, LECT NOTES COMPUT SC, V3576, P321
   Ohrimenko O, 2009, CONSTRAINTS, V14, P357, DOI 10.1007/s10601-008-9064-x
   Ostrowski M, 2012, THEOR PRACT LOG PROG, V12, P485, DOI 10.1017/S1471068412000142
   Redl C., 2017, P 31 AAAI C AAAI 201
   Redl C, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1239
   Truszczynski M, 2010, ARTIF INTELL, V174, P1285, DOI 10.1016/j.artint.2010.08.004
   Woltran S, 2004, LECT NOTES COMPUT SC, V3229, P161, DOI 10.1007/978-3-540-30227-8_16
   Woltran S, 2008, THEOR PRACT LOG PROG, V8, P217, DOI 10.1017/S1471068407003250
NR 40
TC 1
Z9 1
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2019
VL 19
IS 3
BP 360
EP 411
DI 10.1017/S147106841800056X
PG 52
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA HR0WQ
UT WOS:000462850000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zese, R
   Cota, G
   Lamma, E
   Bellodi, E
   Riguzzi, F
AF Zese, Riccardo
   Cota, Giuseppe
   Lamma, Evelina
   Bellodi, Elena
   Riguzzi, Fabrizio
TI Probabilistic DL Reasoning with Pinpointing Formulas: A Prolog-based
   Approach
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE probabilistic description logics; Semantic Web; Binary Decision Diagram;
   tableau; Prolog
ID DESCRIPTION LOGIC
AB When modeling real-world domains, we have to deal with information that is incomplete or that comes from sources with different trust levels. This motivates the need for managing uncertainty in the Semantic Web. To this purpose, we introduced a probabilistic semantics, named DISPONTE, in order to combine description logics (DLs) with probability theory. The probability of a query can be then computed from the set of its explanations by building a Binary Decision Diagram (BDD). The set of explanations can be found using the tableau algorithm, which has to handle non-determinism. Prolog, with its efficient handling of non-determinism, is suitable for implementing the tableau algorithm. TRILL and TRILLP are systems offering a Prolog implementation of the tableau algorithm. TRILLP builds a pinpointing formula that compactly represents the set of explanations and can be directly translated into a BDD. Both reasoners were shown to outperform state-othe-art DL reasoners. In this paper, we present an improvement of TRILLP, named TORNADO, in which the BDD is directly built during the construction of the tableau, further speeding up the overall inference process. An experimental comparison shows the effectiveness of TORNADO. All systems can be tried online in the TRILL on SWISH web application at http://trill.ml.unife. it/.
C1 [Zese, Riccardo; Cota, Giuseppe; Lamma, Evelina] Univ Ferrara, Dipartimento Ingn, Via Saragat 1, I-44122 Ferrara, Italy.
   [Bellodi, Elena; Riguzzi, Fabrizio] Univ Ferrara, Dipartimento Matemat & Informat, Via Saragat 1, I-44122 Ferrara, Italy.
C3 University of Ferrara; University of Ferrara
RP Zese, R (corresponding author), Univ Ferrara, Dipartimento Ingn, Via Saragat 1, I-44122 Ferrara, Italy.
EM riccardo.zese@unife.it; giuseppe.cota@unife.it; evelina.lamma@unife.it;
   elena.bellodi@unife.it; fabrizio.riguzzi@unife.it
RI Cota, Giuseppe/AAU-3295-2020; Zese, Riccardo/Q-8581-2017; BELLODI,
   Elena/HNP-1127-2023; Fabrizio, Riguzzi/C-7679-2012; Bellodi,
   Elena/AAE-7286-2020
OI Cota, Giuseppe/0000-0002-3780-6265; Zese, Riccardo/0000-0001-8352-6304;
   BELLODI, Elena/0000-0002-3717-3779; Fabrizio,
   Riguzzi/0000-0003-1654-9703; 
FU Gruppo Nazionale per il Calcolo Scientifico (GNCS-INdAM)
FX This work was supported by Gruppo Nazionale per il Calcolo Scientifico
   (GNCS-INdAM).
CR [Anonymous], 2006, EVEN MORE IRRESISTIB
   Baader F., 2001, Studia Logica, V69, P5, DOI 10.1023/A:1013882326814
   Baader F, 2010, J AUTOM REASONING, V45, P91, DOI 10.1007/s10817-010-9181-2
   Baader F, 2010, J LOGIC COMPUT, V20, P5, DOI 10.1093/logcom/exn058
   Baader F, 2008, FOUND ARTIF INTELL, P135, DOI 10.1016/S1574-6526(07)03003-9
   BECKERT B, 1995, J AUTOM REASONING, V15, P339, DOI 10.1007/BF00881804
   Bellodi E., 2011, CEUR WORKSHOP P, V778, P75
   Bock C., 2012, OWL 2 Web Ontology Language Structural Specification and Functional-Style Syntax, VSecond
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Carvalho R.N., 2013, UNCERTAINTY REASONIN, P1, DOI DOI 10.1007/978-3-642-35975-0_
   Ceylan, 2015, P 4 INT WORKSH OWL R, V1387, P8
   Ceylan II, 2015, LECT NOTES ARTIF INT, V9310, P21, DOI 10.1007/978-3-319-23540-0_2
   Ding Z., 2004, P 37 ANN HAW INT C S, P1, DOI DOI 10.1109/HICSS.2004.1265290
   Gavanelli M., 2015, TECHN COMM 31 INT C, V1433
   Heinsohn J., 1994, Uncertainty in Artificial Intelligence. Proceedings of the Tenth Conference (1994), P311
   Horrocks I, 2007, J AUTOM REASONING, V39, P249, DOI 10.1007/s10817-007-9079-9
   Hustadt U, 2008, INFORM COMPUT, V206, P579, DOI 10.1016/j.ic.2007.11.006
   JAEGER M, 1994, MOR KAUF R, P305
   Jung Jean Christoph, 2012, The Semantic Web. 11th International Semantic Web Conference (ISWC 2012). Proceedings, P182, DOI 10.1007/978-3-642-35176-1_12
   KIFER M, 1992, J LOGIC PROGRAM, V12, P335, DOI 10.1016/0743-1066(92)90007-P
   Kimmig A, 2011, THEOR PRACT LOG PROG, V11, P235, DOI 10.1017/S1471068410000566
   Klinov P, 2008, LECT NOTES COMPUT SC, V5021, P822
   Klinov P, 2011, LECT NOTES ARTIF INT, V6803, P354, DOI 10.1007/978-3-642-22438-6_27
   Klinov P, 2008, LECT NOTES COMPUT SC, V5318, P213, DOI 10.1007/978-3-540-88564-1_14
   Lakshmanan LVS, 2001, THEOR PRACT LOG PROG, V1, P5, DOI 10.1017/S1471068400001058
   Lukácsy G, 2009, THEOR PRACT LOG PROG, V9, P343, DOI 10.1017/S1471068409003792
   Lukasiewicz T, 2008, ARTIF INTELL, V172, P852, DOI 10.1016/j.artint.2007.10.017
   Lutz C., 2010, Proceedings of the 12th International Conference on Principles of Knowledge Representation and Reasoning, P393
   NILSSON NJ, 1986, ARTIF INTELL, V28, P71, DOI 10.1016/0004-3702(86)90031-7
   Panda S, 1995, 1995 IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER-AIDED DESIGN, P74, DOI 10.1109/ICCAD.1995.479994
   Patel-Schneider P. F., 2003, SEM WEB ISWC 2003 2
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   Riguzzi Fabrizio, 2013, Web Reasoning and Rule Systems. 7th International Conference, RR 2013. Proceedings. LNCS 7994, P265, DOI 10.1007/978-3-642-39666-3_26
   RIGUZZI F, 2011, THEOR PRACT LOG PROG, V11, P4
   Riguzzi F, 2015, SEMANT WEB, V6, P477, DOI 10.3233/SW-140154
   Riguzzi F, 2010, LEIBNIZ INT PR INFOR, V7, P162, DOI 10.4230/LIPIcs.ICLP.2010.162
   Roller Daphne., 1997, P 14 NATL C ARTIFICI, P390
   Sato T., 1995, P INT C LOG PROGR, P715
   Shearer R., 2008, P 5 OWLED WORKSH OWL, V432
   Sirin E, 2007, J WEB SEMANT, V5, P51, DOI 10.1016/j.websem.2007.03.004
   Steigmiller A, 2014, J WEB SEMANT, V27-28, P78, DOI 10.1016/j.websem.2014.06.003
   Tsarkov D, 2006, LECT NOTES ARTIF INT, V4130, P292
   Zese R, 2017, STUD SEMANTIC WEB, V28, P1
   Zese R, 2018, ANN MATH ARTIF INTEL, V82, P101, DOI 10.1007/s10472-016-9529-3
NR 44
TC 3
Z9 3
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2019
VL 19
IS 3
BP 449
EP 476
DI 10.1017/S1471068418000480
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA HR0WQ
UT WOS:000462850000003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yuen, TT
   Reyes, M
   Zhang, YL
AF Yuen, Timothy T.
   Reyes, Maritza
   Zhang, Yuanlin
TI Introducing Computer Science to High School Students Through Logic
   Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE CS education; high school CS; declarative programming; logic
   programming; answer set programming
ID COMPUTATIONAL THINKING
AB This paper investigates how high school students in an introductory computer science (CS) course approach computing in the logic programming (LP) paradigm. This qualitative study shows how novice students operate within the LP paradigm while engaging in foundational computing concepts and skills: students are engaged in a cyclical process of abstraction, reasoning, and creating representations of their ideas in code while also being informed by the (procedural) requirements and the revision/debugging process. As these computing concepts and skills are also expected in traditional approaches to introductory K-12 CS courses, this paper asserts that LP is a viable paradigm choice for high school novices.
C1 [Yuen, Timothy T.] Univ Texas San Antonio, San Antonio, TX 78249 USA.
   [Reyes, Maritza] Univ Texas Austin, Austin, TX 78712 USA.
   [Zhang, Yuanlin] Texas Tech Univ, Lubbock, TX 79409 USA.
C3 University of Texas System; University of Texas at San Antonio (UTSA);
   University of Texas System; University of Texas Austin; Texas Tech
   University System; Texas Tech University
RP Yuen, TT (corresponding author), Univ Texas San Antonio, San Antonio, TX 78249 USA.
EM timothy.yuen@utsa.edu; maritza_reyes@utexas.edu; y.zhang@ttu.edu
RI Zhang, Yuanlin/I-9289-2017
OI Mondol, Anupom/0000-0001-9956-433X
FU NSF [CNS-1359359]
FX The authors thank Cynthia Perez, Rocky Upchurch, and Edward Wertz for
   their contributions to this project, and thank Michael Gelfond for
   valuable discussions and sharing his teaching materials. This work is
   partially supported by NSF grant CNS-1359359. We thank the anonymous
   reviewers whose feedback helps to improve the quality of this paper.
CR ALLAN W., 2011, COMPUTATIONAL THINKI
   Alviano M, 2011, LECT NOTES COMPUT SC, V6702, P282
   [Anonymous], 2011, P C INN TECHN COMP S
   Balai E, 2013, LECT NOTES COMPUT SC, V8148, P135, DOI 10.1007/978-3-642-40564-8_14
   Ball T, 2015, COMMUN ACM, V58, P30, DOI 10.1145/2663342
   Barr Valerie, 2011, ACM Inroads, V2, P48, DOI 10.1145/1929887.1929905
   Beux S., 2015, CILC, P31
   Brennan K., 2012, P 2012 ANN M AM ED R, V1, P25
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Chakravarty MMI, 2004, J FUNCT PROGRAM, V14, P113, DOI 10.1017/S0956796803004805
   Clocksin W. F., 2003, Programming in PROLOG
   CollegeBoard, 2017, AP COMP SCI PRINC IN
   Cooper S., 2000, NE C J COMPUTING SMA, P107
   Corbin J., 2008, QUAL RES, DOI DOI 10.4135/9781452230153.N10
   CSTA, 2012, CSTA K 12 COMPUTER S
   Dovier A., 2016, CILC, P205
   Febbraro O, 2011, LECT NOTES ARTIF INT, V6645, P317
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gelfond M., 2014, KNOWLEDGE REPRESENTA
   Ginsberg H.P., 1997, ENTERING CHILDS MIND
   Grover S, 2013, EDUC RESEARCHER, V42, P38, DOI 10.3102/0013189X12463051
   Guzdial M, 2004, COMPUTER SCIENCE EDUCATION RESEARCH, P127
   Hemmendinger D., 2010, ACM INROADS, V1, P4
   K-12 CS FRAMEWORK COMMITTEE, 2016, K 12 COMP SCI FRAM
   Kahn K, 2004, LEARNING ZONE OF ONE'S OWN: SHARING REPRESENTATIONS AND FLOW IN COLLABORATIVE LEARNING ENVIRONMENTS, P255
   Kelleher C, 2007, COMMUN ACM, V50, P58, DOI 10.1145/1272516.1272540
   Kleinberg J., 2006, Algorithm Design
   KOWALSKI R. A., 1987, LOGIC COMPUTER LANGU
   Kowalski Robert, 2014, HDB HIST LOGIC, V9
   Kowalski Robert A, 1982, ECAI, P2
   Levesque HJ, 2012, Thinking as computation: A first course
   Lye SY, 2014, COMPUT HUM BEHAV, V41, P51, DOI 10.1016/j.chb.2014.09.012
   MARCOPOULOS E, 2017, CORR
   Mendelsohn Patrick, 1990, Psychology of programming, P175, DOI [10.1016/B978-0-12-350772-3.50016-1, DOI 10.1016/B978-0-12-350772-3.50016-1]
   NICHOL J, 1988, PROLOG CHILDREN STUD
   Papert S., 1980, MINDSTORMS CHILDREN
   Pears Arnold, 2007, SIGCSE Bulletin, V39, P204, DOI 10.1145/1345375.1345441
   Resnick M, 2009, COMMUN ACM, V52, P60, DOI 10.1145/1592761.1592779
   Scherz Z., 1995, SIGCSE Bulletin, V27, P331, DOI 10.1145/199691.199848
   Sherin B.L., 1993, Interactive Learning Environments, V3, P91
   Smith M., 2016, Computer science for all
   Sterling L. S., 1994, The Art of Prolog, V2nd
   Stutterheim Jurrien, 2013, ARXIV13015077
   Tzu-Yi Chen, 2006, SIGCSE Bulletin, V38, P495, DOI 10.1145/1124706.1121496
   Vilner T, 2007, ITICSE 2007: 12TH ANNUAL CONFERENCE ON INNOVATION & TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P171, DOI 10.1145/1269900.1268835
   Voogt J, 2015, EDUC INF TECHNOL, V20, P715, DOI 10.1007/s10639-015-9412-6
   Wing J., 2011, LINK MAGAZINE
   ZHANG Y, 2015, LECT NOTES TEACHING
NR 48
TC 4
Z9 4
U1 2
U2 39
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2019
VL 19
IS 2
SI SI
BP 204
EP 228
DI 10.1017/S1471068418000431
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA HL5XX
UT WOS:000458807300003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gavanelli, M
   Nonato, M
   Peano, A
   Bertozzi, D
AF Gavanelli, Marco
   Nonato, Maddalena
   Peano, Andrea
   Bertozzi, Davide
TI Logic programming approaches for routing fault-free and maximally
   parallel wavelength-routed optical networks-on-chip (Application paper)
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming colocated with the
   23rd International Conference on Principles and Practice of Constraint
   Programming / 20th International Conference on Theory and Applications
   of Satisfiability Testing
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google
DE Answer set programming; Logic programming applications; Optical
   networks-on-chip; Constrained optimization; Constraint logic programming
   on finite domains
AB One promising trend in digital system integration consists of boosting on-chip communication performance by means of silicon photonics, thus materializing the so-called Optical Networkson- Chip. Among them, wavelength routing can be used to route a signal to destination by univocally associating a routing path to the wavelength of the optical carrier. Such wavelengths should be chosen so to minimize interferences among optical channels and to avoid routing faults. As a result, physical parameter selection of such networks requires the solution of complex constrained optimization problems. In previous work, published in the proceedings of the International Conference on Computer-Aided Design, we proposed and solved the problem of computing the maximum parallelism obtainable in the communication between any two endpoints while avoiding misrouting of optical signals. The underlying technology, only quickly mentioned in that paper, is Answer Set Programming. In this work, we detail the Answer Set Programming approach we used to solve such problem.
   Another important design issue is to select the wavelengths of optical carriers such that they are spread across the available spectrum, in order to reduce the likelihood that, due to imperfections in the manufacturing process, unintended routing faults arise. We show how to address such problem in Constraint Logic Programming on Finite Domains.
C1 [Gavanelli, Marco; Nonato, Maddalena; Bertozzi, Davide] Ferrara Univ, Dept Engn, Ferrara, Italy.
   [Peano, Andrea] QuanTek, Bologna, Italy.
C3 University of Ferrara; Arcispedale Sant'Anna
RP Gavanelli, M (corresponding author), Ferrara Univ, Dept Engn, Ferrara, Italy.
EM marco.gavanelli@unife.it; maddalena.nonato@unife.it;
   andrea.peano@quantek.it; davide.bertozzi@unife.it
RI Nonato, Maddalena/G-8564-2013; GAVANELLI, Marco/ISA-6918-2023
OI GAVANELLI, Marco/0000-0001-7433-5899
CR Balduccini Marcello, 2012, Practical Aspects of Declarative Languages. Proceedings 14th International Symposium, PADL 2012, P78, DOI 10.1007/978-3-642-27694-1_7
   Bartholomew M, 2014, LECT NOTES ARTIF INT, V8761, P529, DOI 10.1007/978-3-319-11558-0_37
   Berthold J, 2008, J LIGHTWAVE TECHNOL, V26, P1104, DOI 10.1109/JLT.2008.923609
   Bogaerts W, 2012, LASER PHOTONICS REV, V6, P47, DOI 10.1002/lpor.201100017
   Briere M., 2007, DESIGN AUTOMATION TE, P1
   CHLAMTAC I, 1992, IEEE T COMMUN, V40, P1171, DOI 10.1109/26.153361
   Drescher C, 2010, THEOR PRACT LOG PROG, V10, P465, DOI 10.1017/S1471068410000220
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gebser M, 2009, LECT NOTES COMPUT SC, V5753, P502, DOI 10.1007/978-3-642-04238-6_49
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Giunchiglia E, 2006, J AUTOM REASONING, V36, P345, DOI 10.1007/s10817-006-9033-2
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   Janhunen T., 2011, Proceedings of Grounding and Transformations for Theories with Variables, V11, P1
   Kazmierczak A, 2009, J LIGHTWAVE TECHNOL, V27, P3317, DOI 10.1109/JLT.2008.2010462
   Koohi S., 2011, Networks on Chip (NoCS), 2011 Fifth IEEE/ACM International Symposium on, P97
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Liu G., 2012, P 13 INT C KR 2012 R
   Lloyd J. W., 2012, Foundations of Logic Programming
   Mellarkod VS, 2008, ANN MATH ARTIF INTEL, V53, P251, DOI 10.1007/s10472-009-9116-y
   Nonato M., 2017, P INT NETW OPT C 201
   Parini A., 2011, P 5 INT WORKSH INT N, P31
   Peano A, 2016, ICCAD-IEEE ACM INT, DOI 10.1145/2966986.2967023
   REGIN JC, 1994, PROCEEDINGS OF THE TWELFTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P362
   Schimpf J, 2012, THEOR PRACT LOG PROG, V12, P127, DOI 10.1017/S1471068411000469
   Simons Patrik, 2002, ARTIF INTELL, V138, P181
   Susman B., 2016, P TECHN COMM 32 INT, V52, P15
   Tan XF, 2012, J LIGHTWAVE TECHNOL, V30, P368, DOI 10.1109/JLT.2011.2178019
   Van Hentenryck P., 1988, AAAI 88. Seventh National Conference on Artificial Intelligence, P660
   Wittocx Johan., 2008, LaSh, P153
   Zhou NF, 2009, LECT NOTES COMPUT SC, V5649, P402, DOI 10.1007/978-3-642-02846-5_33
NR 31
TC 2
Z9 2
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 800
EP 818
DI 10.1017/S1471068417000424
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Le, T
   Son, TC
   Pontelli, E
   Yeoh, W
AF Le, Tiep
   Son, Tran Cao
   Pontelli, Enrico
   Yeoh, William
TI Solving distributed constraint optimization problems using logic
   programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE DCOP; DPOP; logic programming; ASP
ID ADOPT
AB This paper explores the use of Answer Set Programming (ASP) in solving Distributed Constraint Optimization Problems (DCOPs). The paper provides the following novel contributions: (1) it shows how one can formulate DCOPs as logic programs; (2) it introduces ASP-DPOP, the first DCOP algorithm that is based on logic programming; (3) it experimentally shows that ASP-DPOP can be up to two orders of magnitude faster than DPOP (its imperative programming counterpart) as well as solve some problems that DPOP fails to solve, due to memory limitations; and (4) it demonstrates the applicability of ASP in a wide array of multi-agent problems currently modeled as DCOPs.
C1 [Le, Tiep; Son, Tran Cao; Pontelli, Enrico; Yeoh, William] New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88001 USA.
C3 New Mexico State University
RP Le, T (corresponding author), New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88001 USA.
EM tile@cs.nmsu.edu; tson@cs.nmsu.edu; epontell@cs.nmsu.edu;
   wyeoh@cs.nmsu.edu
RI Yeoh, William/ABD-6399-2020; Pontelli, Enrico/AAJ-5161-2021
OI Yeoh, William/0000-0002-2964-4518; Pontelli, Enrico/0000-0002-7753-1737;
   Yeoh, William/0000-0002-2617-870X
FU NSF grants [HRD-1345232, DGE-0947465]; Direct For Biological Sciences;
   Div Of Biological Infrastructure [1458595] Funding Source: National
   Science Foundation; Direct For Education and Human Resources; Division
   Of Human Resource Development [1345232] Funding Source: National Science
   Foundation
FX This research is partially supported by NSF grants HRD-1345232 and
   DGE-0947465.
CR [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   Baral C, 2010, THEOR PRACT LOG PROG, V10, P675, DOI 10.1017/S1471068410000359
   Baral C., 2010, Proceed- ings of the 9th International Conference on Autonomous Agents and Multiagent Systems, volume 1 of AAMAS '10, P259
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Bessiere Christian, 2012, Principles and Practice of Constraint Programming. Proceedings 18th International Conference, CP 2012, P175, DOI 10.1007/978-3-642-33558-7_15
   Carlsson M., 2015, SICSTUS PROLOG USERS
   Citrigno Simona., 1997, P 12 WORKSHOP LOGIC, P128
   De Vos M., 2005, P DALT
   Dechter R., 2003, Constraint Processing
   Dovier A, 2013, THEOR PRACT LOG PROG, V13, P149, DOI 10.1017/S1471068411000615
   Dovier A, 2010, FUND INFORM, V105, P79, DOI 10.3233/FI-2010-359
   Dovier A, 2010, THEOR PRACT LOG PROG, V10, P167, DOI 10.1017/S1471068410000013
   Erdos P., 1959, Publicationes Mathematicae Debrecen, V6, P18
   Farinelli Alessandro, 2008, AAMAS, P639
   Fioretto F., 2014, P AAMAS
   Fioretto F., 2014, P CP
   Fioretto F, 2016, AAAI CONF ARTIF INTE, P2480
   Gebser M., 2012, Answer Set Solving in Practice
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P260, DOI 10.1007/978-3-540-72200-7_23
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gelfond G., 2007, P ASP WORKSH
   Gelfond M, 2014, KNOWLEDGE REPRESENTATION, REASONING, AND THE DESIGN OF INTELLIGENT AGENTS: THE ANSWER-SET PROGRAMMING APPROACH, P1, DOI 10.1017/CBO9781139342124
   GELFOND M, 1990, LOGIC PROGRAMM, P579
   Gershman A, 2009, J ARTIF INTELL RES, V34, P61, DOI 10.1613/jair.2591
   Greenstadt Rachel., 2006, Proceedings of the A A A I Conference on Artificial Intelligence (AAAI), P647
   Gupta Saurabh., 2013, Proceedings of the Distributed Constraint Reasoning Workshop, P45
   Gutierrez P., 2011, P 22 INT JOINT C ART, P554
   Gutierrez P, 2013, LECT NOTES COMPUT SC, V8124, P365, DOI 10.1007/978-3-642-40627-0_30
   Gutierrez P, 2012, J ARTIF INTELL RES, V45, P287, DOI 10.1613/jair.3696
   Gutierrez Patricia., 2012, Proceedings of the International Conference on Autonomous Agents and Multiagent Systems (AAM AS), P273
   Hamadi Y, 1998, ECAI 1998: 13TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P219
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   Jain P., 2012, P PEDES
   Kakas A., 2004, P ECAI
   Kaufmann B, 2016, AI MAG, V37, P25, DOI 10.1609/aimag.v37i3.2672
   Kowalski R, 1999, ANN MATH ARTIF INTEL, V25, P391, DOI 10.1023/A:1018934223383
   Kumar Akshat., 2009, Proceedings of the International Conference on Autonomous Agents and Multiagent Systems (AAM AS), P923
   Kumar Akshat., 2008, Proceedings of the AAAI Conference on Artificial Intelligence (AAAI), P325
   Lass R., 2008, P INT JOINT C AUTONO, P1409
   Le T., 2014, TECHN COMM 30 INT C
   Le T., 2015, P AAAI
   Leaute T., 2009, Proceedings of the Distributed Constraint Reasoning Workshop, P160
   Leaute T., 2011, International Joint Conference on Artificial Intelligence, P2482
   Liu CB, 2012, PROC VLDB ENDOW, V5, P752, DOI 10.14778/2212351.2212357
   Maheswaran R., 2004, P 3 INT JOINT C AUT, P310
   Maheswaran RT, 2004, PARALLEL AND DISTRIBUTED COMPUTING SYSTEMS, P432
   Mailler R., 2004, AAMAS 04, P438
   Modi PJ, 2005, ARTIF INTELL, V161, P149, DOI 10.1016/j.artint.2004.09.003
   Nguyen DucThien., 2013, Proceedings of the International Conference on Autonomous Agents and Multiagent Systems (AAM AS), P167
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Ottens Brammert., 2012, Proceedings of the A A A I Conference on Artificial Intelligence (AAAI), P528
   Petcu A, 2009, FRONT ARTIF INTEL AP, V194, P1
   Petcu A., 2005, Proceedings of the International Joint Conference on Artificial Intelligence (IJCAI), P1413
   Petcu A., 2005, P AAAI, P449
   Petcu A, 2008, J ARTIF INTELL RES, V32, P705, DOI 10.1613/jair.2500
   Petcu A, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1452
   Petcu A, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P167
   Petcu Adrian., 2006, P INT JOINT C ARTIFI, P703
   Sadri F., 2003, ALP NEWSLETTER
   Sakama Chiaki., 2011, Proc. of IJCAI, P1069
   Son TC, 2009, LECT NOTES COMPUT SC, V5649, P99, DOI 10.1007/978-3-642-02846-5_13
   Sultanik E., 2007, P DISTR CONSTR REAS
   Ueda S, 2010, AAAI CONF ARTIF INTE, P197
   Vinyals M, 2011, AUTON AGENT MULTI-AG, V22, P439, DOI 10.1007/s10458-010-9132-7
   Vlahavas I, 2002, INFORM SCIENCES, V144, P127, DOI 10.1016/S0020-0255(02)00190-1
   Yeoh W., 2009, International Conference on Autonomous Agents and Multiagent Systems, P609
   Yeoh W, 2012, AI MAG, V33, P53, DOI 10.1609/aimag.v33i3.2429
   Yeoh W, 2010, J ARTIF INTELL RES, V38, P85, DOI 10.1613/jair.2849
   Zivan R, 2014, ARTIF INTELL, V212, P1, DOI 10.1016/j.artint.2014.03.002
NR 69
TC 4
Z9 6
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2017
VL 17
IS 4
BP 634
EP 683
DI 10.1017/S147106841700014X
PG 50
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA FC7RG
UT WOS:000407039000008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cabalar, P
   Fandinno, J
AF Cabalar, Pedro
   Fandinno, Jorge
TI Justifications for programs with disjunctive and causal-choice rules
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
ID LOGIC PROGRAMS; SEMANTICS
AB In this paper, we study an extension of the stable model semantics for disjunctive logic programs where each true atom in a model is associated with an algebraic expression (in terms of rule labels) that represents its justifications. As in our previous work for non-disjunctive programs, these justifications are obtained in a purely semantic way, by algebraic operations (product, addition and application) on a lattice of causal values. Our new definition extends the concept of causal stable model to disjunctive logic programs and satisfies that each (standard) stable model corresponds to a disjoint class of causal stable models sharing the same truth assignments, but possibly varying the obtained explanations. We provide a pair of illustrative examples showing the behaviour of the new semantics and discuss the need of introducing a new type of rule, which we call causal-choice. This type of rule intuitively captures the idea of "A may cause B" and, when causal information is disregarded, amounts to a usual choice rule under the standard stable model semantics.
C1 [Cabalar, Pedro; Fandinno, Jorge] Univ A Coruna, Dept Comp Sci, Corunna, Spain.
C3 Universidade da Coruna
RP Cabalar, P (corresponding author), Univ A Coruna, Dept Comp Sci, Corunna, Spain.
EM cabalar@udc.es; jorge.fandino@udc.es
RI Cabalar, Pedro/AAE-5198-2020; Fandinno, Jorge/JJC-6227-2023; Fandiño,
   Jorge/F-8705-2016
OI Fandiño, Jorge/0000-0002-3917-8717
CR [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Cabalar P., 2016, ABS160800870 CORR
   Cabalar P, 2014, THEOR PRACT LOG PROG, V14, P603, DOI 10.1017/S1471068414000234
   Cabalar P, 2014, LECT NOTES ARTIF INT, V8761, P297, DOI 10.1007/978-3-319-11558-0_21
   Caban P, 2016, THEME OF INCENSE AND FRAGRANCES IN THE BIBLE AND IN THE LITURGY: SCIENTIFIC-LITURGICAL ASPECT, P1
   Damásio CV, 2013, LECT NOTES COMPUT SC, V8148, P530, DOI 10.1007/978-3-642-40564-8_53
   Denecker Marc, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P250, DOI 10.1007/978-3-319-23264-5_22
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Fandinno J., 2015, THESIS
   Fandinno J., 2015, P 8 INT WORKSH ANSW
   Fandinno J., 2016, THEORY PRAC IN PRESS
   Fangzhen Lin, 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1985
   Gebser M, 2008, P 23 NAT C ART INT, V1
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Hall N., 2004, CAUSATION COUNTERFAC, P225
   Hitchcock C, 2009, J PHILOS, V106, P587, DOI 10.5840/jphil20091061128
   Lewis David, 1974, The Journal of Philosophy, V70, P556, DOI DOI 10.2307/2025310
   McCain N., 1997, THESIS
   McCarthy John., 1987, Readings in artificial intelligence, P459
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Oetsch J., 2010, ABS10074986 CORR
   Pearce D, 2006, ANN MATH ARTIF INTEL, V47, P3, DOI 10.1007/s10472-006-9028-z
   Pearl Judea, 2000, MODELS REASONING INF, V19, DOI DOI 10.1017/CBO9780511803161
   Pemmasani G, 2004, LECT NOTES COMPUT SC, V2998, P24
   Pontelli E, 2009, THEOR PRACT LOG PROG, V9, P1, DOI 10.1017/S1471068408003633
   Schulz C, 2016, THEOR PRACT LOG PROG, V16, P59, DOI 10.1017/S1471068414000702
   Specht G., 1993, P 5 WORKSH LOG PROGR, P8
   Thielscher M, 1997, ARTIF INTELL, V89, P317, DOI 10.1016/S0004-3702(96)00033-1
   Vennekens J, 2011, THEOR PRACT LOG PROG, V11, P647, DOI 10.1017/S1471068411000226
NR 31
TC 3
Z9 3
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 587
EP 603
DI 10.1017/S1471068416000454
PN 5-6
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bellodi, E
   Riguzzi, F
AF Bellodi, Elena
   Riguzzi, Fabrizio
TI Structure learning of probabilistic logic programs by searching the
   clause space
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE probabilistic inductive logic programming; statistical relational
   learning; structure learning; distribution semantics; logic programs
   with annotated disjunction; CP-logic
ID EXPECTATION MAXIMIZATION; CP-LOGIC; REFINEMENT; INFERENCE; 1ST-ORDER;
   ALGORITHM; SYSTEM
AB Learning probabilistic logic programming languages is receiving an increasing attention, and systems are available for learning the parameters (PRISM, LeProbLog, LFI-ProbLog and EMBLEM) or both structure and parameters (SEM-CP-logic and SLIPCASE) of these languages. In this paper we present the algorithm SLIPCOVER for "Structure LearnIng of Probabilistic logic programs by searChing OVER the clause space." It performs a beam search in the space of probabilistic clauses and a greedy search in the space of theories using the log likelihood of the data as the guiding heuristics. To estimate the log likelihood, SLIPCOVER performs Expectation Maximization with EMBLEM. The algorithm has been tested on five real world datasets and compared with SLIPCASE, SEM-CP-logic, Aleph and two algorithms for learning Markov Logic Networks (Learning using Structural Motifs (LSM) and ALEPH++ExactL1). SLIPCOVER achieves higher areas under the precision-recall and receiver operating characteristic curves in most cases.
C1 [Bellodi, Elena] Univ Ferrara, Dipartimento Ingn, I-44122 Ferrara, Italy.
   [Riguzzi, Fabrizio] Univ Ferrara, Dipartimento Matemat & Informat, I-44122 Ferrara, Italy.
C3 University of Ferrara; University of Ferrara
RP Bellodi, E (corresponding author), Univ Ferrara, Dipartimento Ingn, Via Saragat 1, I-44122 Ferrara, Italy.
EM elena.bellodi@unife.it; fabrizio.riguzzi@unife.it
RI BELLODI, Elena/HNP-1127-2023; Bellodi, Elena/AAE-7286-2020; Fabrizio,
   Riguzzi/C-7679-2012
OI BELLODI, Elena/0000-0002-3717-3779; Fabrizio,
   Riguzzi/0000-0003-1654-9703
CR [Anonymous], 2008, PROC ICML 2008, DOI DOI 10.1145/1390156.1390209
   Beerenwinkel N, 2005, J COMPUT BIOL, V12, P584, DOI 10.1089/cmb.2005.12.584
   Bellodi E., 2011, LNCS, V7207, P61
   Bellodi E, 2012, INTELL ARTIF, V6, P3, DOI 10.3233/IA-2012-0027
   Bellodi E, 2013, INTELL DATA ANAL, V17, P343, DOI 10.3233/IDA-130582
   Berka P., 2002, P ECML PKDD DISC CHA, P108
   Biba M, 2008, LECT NOTES ARTIF INT, V5194, P59, DOI 10.1007/978-3-540-85928-4_9
   Boyd Kendrick., 2012, Proceedings of the 29th international conference on machine learning, P639
   Bragaglia S, 2011, LECT NOTES ARTIF INT, V6489, P30, DOI 10.1007/978-3-642-21295-6_7
   Costa V.S., 2003, Proceedings of the 19th Annual Conference on Uncertainty in Artificial Intelligence (UAI-03), P517
   Costa VS, 2012, THEOR PRACT LOG PROG, V12, P5, DOI 10.1017/S1471068411000512
   Craven M, 2001, MACH LEARN, V43, P97, DOI 10.1023/A:1007676901476
   Dantsin E., 1991, LNCS, P152
   Darwiche A, 2004, FRONT ARTIF INTEL AP, V110, P328
   Davis Jesse, 2006, P 23 INT C MACH LEAR, P233, DOI [DOI 10.1145/1143844.1143874, 10.1145/1143844.1143874]
   De Raedt L, 2008, MACH LEARN, V70, P151, DOI 10.1007/s10994-007-5030-x
   De Raedt L., 2008, 1 WORKSH PROB PROGR, P1
   De Raedt L, 2011, LECT NOTES ARTIF INT, V6489, P47, DOI 10.1007/978-3-642-21295-6_9
   De Raedt L, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2468
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Friedman N., 1998, Uncertainty in Artificial Intelligence. Proceedings of the Fourteenth Conference (1998), P129
   Fuhr N, 2000, J AM SOC INFORM SCI, V51, P95, DOI 10.1002/(SICI)1097-4571(2000)51:2<95::AID-ASI2>3.0.CO;2-H
   Getoor Lise, 2007, Introduction to Statistical Relational Learning, P129
   Gutmann B., 2010, 583 CW KU LEUV
   Gutmann B, 2008, LECT NOTES ARTIF INT, V5211, P473, DOI 10.1007/978-3-540-87479-9_49
   Gutmann B, 2011, LECT NOTES ARTIF INT, V6911, P581, DOI 10.1007/978-3-642-23780-5_47
   Inoue K, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P810
   ISHIHATA M, 2008, P 18 INT C IND LOG P, P44
   Ishihata M., 2008, TR080004 TOK I TECHN
   Ishihata M, 2011, LECT NOTES ARTIF INT, V7106, P203, DOI 10.1007/978-3-642-25832-9_21
   Kersting Kristian, 2008, Probabilistic Inductive Logic Programming. Theory and Applications, P189, DOI 10.1007/978-3-540-78652-8_7
   Khosravi H, 2012, MACH LEARN, V89, P257, DOI 10.1007/s10994-012-5307-6
   Kimmig A, 2011, THEOR PRACT LOG PROG, V11, P235, DOI 10.1017/S1471068410000566
   Kok S., 2005, P 22 INT C MACHINE L, P441, DOI DOI 10.1145/1102351.1102407
   Kok Stanley., 2009, P 26 ANN INT C MACHI, P505
   Kok Stanley, 2010, 27 INT C MACH LEARN, P551
   Lowd D, 2007, LECT NOTES ARTIF INT, V4702, P200
   Meert W, 2008, FUND INFORM, V89, P131
   Mihalkova L., 2007, P 24 INT C MACH LEAR, P625, DOI [DOI 10.1145/1273496.1273575, 10.1145/1273496.1273575]
   Minato S, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2550
   MUGGLETON S, 1995, NEW GENERAT COMPUT, V13, P245, DOI 10.1007/BF03037227
   OURSTON D, 1994, ARTIF INTELL, V66, P273, DOI 10.1016/0004-3702(94)90028-0
   Paes A, 2006, LECT NOTES COMPUT SC, V4140, P441
   Poole D, 1997, ARTIF INTELL, V94, P7, DOI 10.1016/S0004-3702(97)00027-1
   POOLE D, 1993, NEW GENERAT COMPUT, V11, P377, DOI 10.1007/BF03037184
   Przymusinski T. C., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P11, DOI 10.1145/73721.73723
   Quinlan J. R., 1993, Machine Learning: ECML-93. European Conference on Machine Learning Proceedings, P3
   Rauzy A, 2003, RELIAB ENG SYST SAFE, V79, P33, DOI 10.1016/S0951-8320(02)00165-5
   RICHARDS BL, 1995, MACH LEARN, V19, P95
   Richardson M, 2006, MACH LEARN, V62, P107, DOI 10.1007/s10994-006-5833-1
   Riguzzi F, 2004, LECT NOTES ARTIF INT, V3194, P270
   Riguzzi F., 2006, LNCS, V4455, P43
   Riguzzi F, 2008, MACH LEARN, V70, P207, DOI 10.1007/s10994-007-5032-8
   Riguzzi F, 2007, LECT NOTES COMPUT SC, V4733, P109
   Riguzzi F, 2014, COMPUT J, V57, P347, DOI 10.1093/comjnl/bxt096
   Riguzzi F, 2013, FUND INFORM, V124, P521, DOI 10.3233/FI-2013-847
   Riguzzi F, 2013, THEOR PRACT LOG PROG, V13, P279, DOI 10.1017/S1471068411000664
   Riguzzi F, 2012, MACH LEARN, V86, P89, DOI 10.1007/s10994-011-5247-6
   Riguzzi F, 2010, LEIBNIZ INT PR INFOR, V7, P162, DOI 10.4230/LIPIcs.ICLP.2010.162
   Riguzzi F, 2011, THEOR PRACT LOG PROG, V11, P433, DOI 10.1017/S147106841100010X
   Riguzzi F, 2010, FUND INFORM, V102, P429, DOI 10.3233/FI-2010-313
   Riguzzi F, 2009, LOG J IGPL, V17, P589, DOI 10.1093/jigpal/jzp025
   Riguzzi F, 2008, LECT NOTES COMPUT SC, V5366, P667, DOI 10.1007/978-3-540-89982-2_54
   Sang T., 2005, P 10 NAT C ART INT 1, P475
   Sato T, 2001, J ARTIF INTELL RES, V15, P391
   Sato T., 1995, P INT C LOG PROGR, P715
   SCHWARZ G, 1978, ANN STAT, V6, P461, DOI 10.1214/aos/1176344136
   Srinivasan A, 1996, ARTIF INTELL, V85, P277, DOI 10.1016/0004-3702(95)00122-0
   Srinivasan A., 1994, PROCEEDING ILP, P217
   Thayse A., 1978, Proceedings of the Eighth International Symposium on Multiple-Valued Logic, P171
   Thou I, 2008, LECT NOTES ARTIF INT, V5212, P506, DOI 10.1007/978-3-540-87481-2_33
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P195, DOI 10.1007/978-3-540-27775-0_14
   Vennekens J., 2003, CW386 KU LEUV
   Vennekens J, 2009, THEOR PRACT LOG PROG, V9, P245, DOI 10.1017/S1471068409003767
NR 75
TC 39
Z9 41
U1 0
U2 6
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2015
VL 15
SI SI
BP 169
EP 212
DI 10.1017/S1471068413000689
PN 2
PG 44
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA CB5LO
UT WOS:000349668800003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sato, T
   Meyer, P
AF Sato, Taisuke
   Meyer, Philipp
TI Infinite probability computation by cyclic explanation graphs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE tabling; probability computation; prefix; probability equation
ID PRISM
AB Tabling in logic programming has been used to eliminate redundant computation and also to stop infinite loop. In this paper(1) we investigate another possibility of tabling, i.e. to compute an infinite sum of probabilities for probabilistic logic programs. Using PRISM, a logic-based probabilistic modeling language with a tabling mechanism, we generalize prefix probability computation for probabilistic context-free grammars (PCFGs) to probabilistic logic programs. Given a top-goal, we search for all proofs with tabling and obtain an explanation graph which compresses them and may be cyclic. We then convert the explanation graph to a set of linear probability equations and solve them by matrix operation. The solution gives us the probability of the top-goal, which, in nature, is an infinite sum of probabilities. Our general approach to prefix probability computation through tabling not only allows to deal with non-probabilistic context-free grammars such as probabilistic left-corner grammars but has applications such as plan recognition and probabilistic model checking and makes it possible to compute probability for probabilistic models describing cyclic relations.
C1 [Sato, Taisuke] Tokyo Inst Technol, Meguro, Tokyo, Japan.
   [Meyer, Philipp] Tech Univ Munich, D-80290 Munich, Germany.
C3 Tokyo Institute of Technology; Technical University of Munich
RP Sato, T (corresponding author), Tokyo Inst Technol, 2-12-1 Ookayama, Meguro, Tokyo, Japan.
EM sato@mi.cs.titech.ac.jp; meyerphi@in.tum.de
RI ; sato, taisuke/Q-3245-2016
OI Meyer, Klara/0000-0003-1334-9079; sato, taisuke/0000-0001-9062-0729
FU Grants-in-Aid for Scientific Research [23240043, 23300054] Funding
   Source: KAKEN
CR Amft O, 2007, IFMBE PROC, V13, P242
   [Anonymous], TRIT0056 ATR INT TEL
   [Anonymous], 1999, Proceedings of the 37th Annual Meeting of the Association for Computational Linguistics
   Baker J., 1979, The Journal of the Acoustical Society of America, V65, P547
   Bobick AF, 1998, PROC CVPR IEEE, P196, DOI 10.1109/CVPR.1998.698609
   De Raedt L, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2468
   Etessami K, 2009, J ACM, V56, DOI 10.1145/1462153.1462154
   Geib C. W., 2011, P 25 AAAI C ART INT, P958
   Gorlin A, 2012, THEOR PRACT LOG PROG, V12, P681, DOI 10.1017/S1471068412000245
   Hinton A, 2006, LECT NOTES COMPUT SC, V3920, P441
   Jelinek F., 1991, Computational Linguistics, V17, P315
   Kameya Y, 2000, LECT NOTES ARTIF INT, V1861, P269
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Lymberopoulos Dimitrios, 2007, 2007 International Conference on Sensor Technologies and Applications - SensorComm 2007, P590, DOI 10.1109/SENSORCOMM.2007.4394984
   Manning C.D., 1997, P 5 INT WORKSHOP PAR, P147
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Mantadelis T, 2010, LEIBNIZ INT PR INFOR, V7, P124, DOI 10.4230/LIPIcs.ICLP.2010.124
   Meyer CD, 2001, Matrix analysis and applied linear algebra
   Nederhof M., 2011, 49 ANN M ASS COMP LI, P460
   Nederhof Mark-Jan, 2011, P 2011 C EMP METH NA, P1213
   NEDERHOF MJ, 1998, 36 ANN M ASS COMP LI, V2, P953
   Pomponio L., 2011, P HLTH AMB INF SYST, V729
   Riguzzi F, 2011, THEOR PRACT LOG PROG, V11, P433, DOI 10.1017/S147106841100010X
   Rocha R, 2005, THEOR PRACT LOG PROG, V5, P161, DOI 10.1017/S1471068404002030
   Sato T, 2001, J ARTIF INTELL RES, V15, P391
   Sato T, 1997, INT JOINT CONF ARTIF, P1330
   Sato T., 2012, TECHN COMM 28 INT C, V17, P348
   SATO T, 2008, LNCS, V4911, P118
   Sato T, 2008, J INTELL INF SYST, V31, P161, DOI 10.1007/s10844-008-0062-7
   STOLCKE A, 1995, COMPUT LINGUIST, V21, P165
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   TAMAKI H, 1986, LECT NOTES COMPUT SC, V225, P84
   VANUYTSEL D, 2001, P IEEE AUT SPEECH RE
   WARREN DS, 1992, COMMUN ACM, V35, P93, DOI 10.1145/131295.131299
   WETHERELL CS, 1980, COMPUT SURV, V12, P361, DOI 10.1145/356827.356829
   Zhou N.-F., 2003, P IJCAI 03 WORKSH LE, P133
   Zhou N.-F., 2010, P 22 INT C TOOLS ART
   Zhou NF, 2008, THEOR PRACT LOG PROG, V8, P81, DOI 10.1017/S147106840700316X
NR 38
TC 5
Z9 5
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2014
VL 14
BP 909
EP 937
DI 10.1017/S1471068413000562
PN 6
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA AX3OJ
UT WOS:000346848400004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alviano, M
   Dodaro, C
   Ricca, F
AF Alviano, Mario
   Dodaro, Carmine
   Ricca, Francesco
TI Anytime Computation of Cautious Consequences in Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
DE answer set programming; query answering; cautious reasoning; anytime
   algorithms
ID SYSTEM; DLV; SAT
AB Query answering in Answer Set Programming (ASP) is usually solved by computing (a subset of) the cautious consequences of a logic program. This task is computationally very hard, and there are programs for which computing cautious consequences is not viable in reasonable time. However, current ASP solvers produce the (whole) set of cautious consequences only at the end of their computation. This paper reports on strategies for computing cautious consequences, also introducing anytime algorithms able to produce sound answers during the computation.
C1 [Alviano, Mario; Dodaro, Carmine; Ricca, Francesco] Univ Calabria, Dept Math & Comp Sci, I-87036 Arcavacata Di Rende, CS, Italy.
C3 University of Calabria
RP Alviano, M (corresponding author), Univ Calabria, Dept Math & Comp Sci, I-87036 Arcavacata Di Rende, CS, Italy.
EM alviano@mat.unical.it; dodaro@mat.unical.it; ricca@mat.unical.it
RI Alviano, Mario/H-1355-2012; Dodaro, Carmine/AAE-5732-2020
OI Dodaro, Carmine/0000-0002-5617-5286
CR Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P54, DOI 10.1007/978-3-642-40564-8_6
   Alviano M, 2011, LECT NOTES COMPUT SC, V6702, P282
   Alviano M, 2011, AI COMMUN, V24, P125, DOI 10.3233/AIC-2011-0492
   [Anonymous], AI MAGAZINE
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   Arenas M, 2003, THEOR PRACT LOG PROG, V3, P393, DOI 10.1017/S1471068403001832
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Brewka Gerhard., 2007, Proceedings of the 22nd national conference on Artificial intelligence - Volume 1, V1, P385
   Calimeri F, 2014, THEOR PRACT LOG PROG, V14, P117, DOI 10.1017/S1471068412000105
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   Eén N, 2005, LECT NOTES COMPUT SC, V3569, P61, DOI 10.1007/11499107_5
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Een N., 2003, ELECT NOTES THEORETI, V89, P543, DOI 10.1016/s1571-0661(05)82542-3
   Eiter T, 2005, LECT NOTES ARTIF INT, V3662, P13, DOI 10.1007/11546207_2
   Eiter T, 2008, ARTIF INTELL, V172, P1495, DOI 10.1016/j.artint.2008.04.002
   GASCHNIG J, 1979, CMUCS79124
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gebser M, 2012, THEOR PRACT LOG PROG, V12, P525, DOI 10.1017/S1471068412000166
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 2014, KNOWLEDGE REPRESENTA
   Gomes CP, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P431
   Greco S, 2003, IEEE T KNOWL DATA EN, V15, P368, DOI 10.1109/TKDE.2003.1185840
   Janota M., 2014, AI COMMUN IN PRESS
   Kolaitis PG, 2013, PROC VLDB ENDOW, V6, P397, DOI 10.14778/2536336.2536341
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lierler Y, 2004, LECT NOTES ARTIF INT, V2923, P346
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   LUBY M, 1993, INFORM PROCESS LETT, V47, P173, DOI 10.1016/0020-0190(93)90029-9
   Manna M, 2013, THEOR PRACT LOG PROG, V13, P227, DOI 10.1017/S1471068411000640
   Maratea M, 2008, J ALGORITHMS, V63, P70, DOI 10.1016/j.jalgor.2008.02.006
   Marques-Silva J, 2010, FRONT ARTIF INTEL AP, V215, P15, DOI 10.3233/978-1-60750-606-5-15
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Ravi K, 2004, LECT NOTES COMPUT SC, V2988, P31
   Slaney John., 2001, International Joint Conference on Artificial Intelligence, P254
   Zhang LT, 2001, ICCAD 2001: IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN, DIGEST OF TECHNICAL PAPERS, P279, DOI 10.1109/ICCAD.2001.968634
NR 36
TC 31
Z9 31
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 755
EP 770
DI 10.1017/S1471068414000325
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200024
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mantadelis, T
   Rocha, R
   Moura, P
AF Mantadelis, Theofrastos
   Rocha, Ricardo
   Moura, Paulo
TI Tabling, Rational Terms, and Coinduction Finally Together!
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
DE Tabling; Rational Terms; Coinduction; Implementation
ID TABLED EVALUATION; LOGIC PROGRAMS; PROLOG
AB Tabling is a commonly used technique in logic programming for avoiding cyclic behavior of logic programs and enabling more declarative program definitions. Furthermore, tabling often improves computational performance. Rational term are terms with one or more infinite sub-terms but with a finite representation. Rational terms can be generated in Prolog by omitting the occurs check when unifying two terms. Applications of rational terms include definite clause grammars, constraint handling systems, and coinduction. In this paper, we report our extension of YAP's Prolog tabling mechanism to support rational terms. We describe the internal representation of rational terms within the table space and prove its correctness. We then use this extension to implement a tabling based approach to coinduction. We compare our approach with current coinductive transformations and describe the implementation. In addition, we present an algorithm that ensures a canonical representation for rational terms.
C1 [Mantadelis, Theofrastos] Univ Porto, Fac Sci, CRACS, P-4169007 Oporto, Portugal.
   Univ Porto, Fac Sci, INESC TEC, P-4169007 Oporto, Portugal.
C3 Universidade do Porto; Universidade do Porto; INESC TEC
RP Mantadelis, T (corresponding author), Univ Porto, Fac Sci, CRACS, Rua Campo Alegre 1021-1055, P-4169007 Oporto, Portugal.
EM theo.mantadelis@dcc.fc.up.pt; ricroc@dcc.fc.up.pt; pmoura@inescporto.pt
RI Moura, Paulo/D-6920-2019; Rocha, Ricardo/B-2862-2012
OI Moura, Paulo/0000-0001-9792-9104; Mantadelis,
   Theofrastos/0000-0002-9188-7764; Rocha, Ricardo/0000-0003-4502-8835
CR Ancona D, 2013, COMPUT LANG SYST STR, V39, P142, DOI 10.1016/j.cl.2013.05.001
   [Anonymous], 1982, Logic Programming
   Bagnara R., 2001, FINITE TREE ANAL CON
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   Costa VS, 2012, THEOR PRACT LOG PROG, V12, P5, DOI 10.1017/S1471068411000512
   Giannesini F., 1984, Journal of Logic Programming, V1, P253, DOI 10.1016/0743-1066(84)90013-X
   Gordon A. D., 1994, GLASG FUNCT PROGR WO, P78
   Gupta G, 2007, LECT NOTES COMPUT SC, V4670, P27, DOI 10.1007/978-3-540-74610-2_4
   Hopcroft JohnE., 1971, A linear algorithm for testing equivalence of finite automata
   JAFFAR J, 1986, THEOR COMPUT SCI, V46, P141, DOI 10.1016/0304-3975(86)90027-7
   MEISTER M, 2006, CHR 2006, V452, P77
   Moura P., 2013, LNCS, V7752, P77
   Raimundo J, 2010, LECT NOTES COMPUT SC, V5937, P249, DOI 10.1007/978-3-642-11503-5_21
   Ramakrishnan IV, 1999, J LOGIC PROGRAM, V38, P31, DOI 10.1016/S0743-1066(98)10013-4
   Schrijvers T., 2012, IMPLEMENTATION APPL
   Simon L, 2007, LECT NOTES COMPUT SC, V4596, P472
   Stickel M. E., 1988, Journal of Automated Reasoning, V4, P353, DOI 10.1007/BF00297245
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
NR 19
TC 4
Z9 4
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 429
EP 443
DI 10.1017/S147106841400012X
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU López-Fraguas, FJ
   Martin-Martin, E
   Rodríguez-Hortalá, J
   Sánchez-Hernández, J
AF Lopez-Fraguas, Francisco J.
   Martin-Martin, Enrique
   Rodriguez-Hortala, Juan
   Sanchez-Hernandez, Jaime
TI Rewriting and narrowing for constructor systems with call-time choice
   semantics
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE term rewriting systems; constructor-based rewriting logic; narrowing;
   non-determinism; call-time choice semantics; sharing; local bindings
ID LOGIC; PROGRAMS
AB Non-confluent and non-terminating constructor-based term rewriting systems are useful for the purpose of specification and programming. In particular, existing functional logic languages use such kinds of rewrite systems to define possibly non-strict non-deterministic functions. The semantics adopted for non-determinism is call-time choice, whose combination with non-strictness is a non-trivial issue, addressed years ago from a semantic point of view with the Constructor-based Rewriting Logic (CRWL), a well-known semantic framework commonly accepted as suitable semantic basis of modern functional logic languages. A drawback of CRWL is that it does not come with a proper notion of one-step reduction, which would be very useful to understand and reason about how computations proceed. In this paper, we develop thoroughly the theory for the first-order version of let-rewriting, a simple reduction notion close to that of classical term rewriting, but extended with a let-binding construction to adequately express the combination of call-time choice with non-strict semantics. Let-rewriting can be seen as a particular textual presentation of term graph rewriting. We investigate the properties of let-rewriting, most remarkably their equivalence with respect to a conservative extension of the CRWL-semantics coping with let-bindings, and we show by some case studies that having two interchangeable formal views (reduction/semantics) of the same language is a powerful reasoning tool. After that, we provide a notion of let-narrowing, which is adequate for call-time choice as proved by soundness and completeness results of let-narrowing with respect to let-rewriting. Moreover, we relate those let-rewriting and let-narrowing relations (and hence CRWL) with ordinary term rewriting and narrowing, providing in particular soundness and completeness of let-rewriting with respect to term rewriting for a class of programs which are deterministic in a semantic sense.
C1 [Lopez-Fraguas, Francisco J.; Martin-Martin, Enrique; Rodriguez-Hortala, Juan; Sanchez-Hernandez, Jaime] Univ Complutense Madrid, Dept Sistemas Informat & Comp, Madrid, Spain.
C3 Complutense University of Madrid
RP López-Fraguas, FJ (corresponding author), Univ Complutense Madrid, Dept Sistemas Informat & Comp, Madrid, Spain.
EM fraguas@sip.ucm.es; emartinm@fdi.ucm.es;
   juan.rodriguez.hortala@gmail.com; jaime@sip.ucm.es
RI Sánchez-Hernández, Jaime/AAE-3854-2020; LOPEZ FRAGUAS, FRANCISCO
   JAVIER/J-2945-2012
OI Sánchez-Hernández, Jaime/0000-0002-8940-5543; LOPEZ FRAGUAS, FRANCISCO
   JAVIER/0000-0001-8898-8647; MARTIN-MARTIN, ENRIQUE/0000-0002-1664-018X
FU Spanish projects FAST-STAMP [TIN2008-06622-C03-01/TIN]; PROMETIDOS-CM
   [S2009TIC-1465]; GPD-UCM [UCM-BSCH-GR58/08-910502]
FX This work has been partially supported by the Spanish projects
   FAST-STAMP (TIN2008-06622-C03-01/TIN), PROMETIDOS-CM (S2009TIC-1465) and
   GPD-UCM (UCM-BSCH-GR58/08-910502).
CR Albert E, 2005, J SYMB COMPUT, V40, P795, DOI 10.1016/j.jsc.2004.01.001
   Alpuente M, 2003, J LOGIC COMPUT, V13, P287, DOI 10.1093/logcom/13.2.287
   [Anonymous], 1995, C RECORD POPL 95 22, DOI DOI 10.1145/199448.199507
   [Anonymous], 1963, Studies in Logic and the Foundations of Mathematics, DOI DOI 10.1016/S0049-237X(08)72018-4
   Antoy S, 2005, J SYMB COMPUT, V40, P875, DOI 10.1016/j.jsc.2004.12.007
   Antoy S., 1994, Conference Record of POPL '94: 21st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P268, DOI 10.1145/174675.177899
   Antoy S, 2000, LECT NOTES ARTIF INT, V1794, P171
   Antoy S, 2000, J ACM, V47, P776, DOI 10.1145/347476.347484
   Antoy S, 2006, LECT NOTES COMPUT SC, V4098, P35
   Antoy S, 2006, LECT NOTES COMPUT SC, V4079, P87, DOI 10.1007/11799573_9
   Antoy S, 2007, ELECTRON NOTES THEOR, V176, P3, DOI 10.1016/j.entcs.2006.10.026
   Ariola Z. M., 1997, Journal of Functional Programming, V7, P265, DOI 10.1017/S0956796897002724
   ARIOLA ZM, 1995, THEOR COMPUT SCI, V146, P69, DOI 10.1016/0304-3975(94)00185-L
   Baader Franz, 1998, TERM REWRITING ALL
   BARENDREGT HP, 1987, LECT NOTES COMPUT SC, V259, P141
   Brassel B, 2007, LECT NOTES COMPUT SC, V4807, P122
   Caballero R., 2006, TECHNICAL REPORT
   CHEONG PH, 1993, LOGIC PROGRAMMING LA, P1
   Castro JD, 2007, ELECTRON NOTES THEOR, V188, P3, DOI 10.1016/j.entcs.2006.05.049
   DEGROOT D, 1986, LOGIC PROGRAMMING FU
   DELVADOVIRSEDA R, 2003, P ACM SIGPLAN C PRIN, P213
   Echahed R, 1998, LOGIC PROGRAMM, P325
   ECHAHED R, 1997, 985I IMAG
   Escobar S, 2005, LECT NOTES COMPUT SC, V3467, P279
   Gonzalez-Moreno J. C., 1996, Programming Languages and Systems - ESOP '96. 6th European Symposium on Programming. Proceedings, P156
   González-Moreno JC, 1999, J LOGIC PROGRAM, V40, P47, DOI 10.1016/S0743-1066(98)10029-8
   GonzalezMoreno JC, 1997, LOGIC PROGRAMM, P153
   HANUS M, 1994, J LOGIC PROGRAM, V20, P583, DOI 10.1016/0743-1066(94)90034-5
   Hanus M., 2012, CURRY INTEGRATED FUN
   Hanus M, 2007, LECT NOTES COMPUT SC, V4670, P45, DOI 10.1007/978-3-540-74610-2_5
   Hanus Michael., 1995, P ILP WORKSHOP VISIO, P95
   Hullot Jean-Marie., 1980, CADE, volume 87 of Lecture Notes in Computer Science, V87, P318
   Hussmann H., 1993, Nondeterminism in Algebraic Specifications and Algebraic Programs
   López-Fraguas FJ, 2009, LECT NOTES COMPUT SC, V5595, P320, DOI 10.1007/978-3-642-02348-4_23
   Kutzner A, 1999, ACM SIGPLAN NOTICES, V34, P324, DOI 10.1145/291251.289462
   Launchbury J., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P144, DOI 10.1145/158511.158618
   Loogen R., 1993, Programming Language Implementation and Logic Programming. 5th International Symposium, PLILP '93 Proceedings, P184
   Lopez-Fraguas Francisco J., 2007, Proceedings of the 9th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP'07), P197, DOI 10.1145/1273920.1273947
   López-Fraguas FJ, 2007, ELECTRON NOTES THEOR, V188, P117, DOI 10.1016/j.entcs.2007.05.042
   Lopez-Fraguas F. J., 2010, 19 WORKSH LOG BAS ME
   Lopez-Fraguas F. J., 2009, P 2009 ACM SIGPLAN W, P91
   Lopez-Fraguas F. J., 2001, LNCS, V2250, P455
   López-Fraguas F, 2010, LECT NOTES COMPUT SC, V6461, P80, DOI 10.1007/978-3-642-17164-2_7
   López-Fraguas FJ, 2010, LECT NOTES COMPUT SC, V5979, P128, DOI 10.1007/978-3-642-11999-6_9
   López-Fraguas FJ, 2009, LECT NOTES ARTIF INT, V5437, P206, DOI 10.1007/978-3-642-00675-3_14
   López-Fraguas FJ, 2008, LECT NOTES COMPUT SC, V4989, P147
   LOPEZFRAGUAS F, 1999, LNCS, V1631, P244
   Maraist J., 1998, Journal of Functional Programming, V8, P275, DOI 10.1017/S0956796898003037
   MORENONAVARRO JJ, 1992, J LOGIC PROGRAM, V12, P191, DOI 10.1016/0743-1066(92)90024-W
   Plump D., 1998, CSIR9822 U NIJM
   Plump D., 2001, ELECT NOTES THEORETI, V51, P277
   Riesco A, 2010, PEPM '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION, P83, DOI 10.1145/1706356.1706373
   Rodríguez-Artalejo M, 2001, LECT NOTES COMPUT SC, V2002, P202
   Sanchez-Hernandez J., 2004, THESIS U COMPLUTENSE
   Sanchez-Hernandez J., 2011, 11 JORN PROGR LENG P
   Schmidt-Schauss M, 2008, LECT NOTES COMPUT SC, V5117, P321, DOI 10.1007/978-3-540-70590-1_22
   SONDERGAARD H, 1990, ACTA INFORM, V27, P505, DOI 10.1007/BF00277387
   SONDERGAARD H, 1992, COMPUT J, V35, P514, DOI 10.1093/comjnl/35.5.514
   Vado-Virseda R. D., 2002, TRABAJO INVESTIGACIO
   Zartmann F., 1997, Static Analysis. 4th International Symposium, SAS '97 Proceedings, P141, DOI 10.1007/BFb0032739
NR 60
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2014
VL 14
BP 165
EP 213
DI 10.1017/S1471068412000373
PN 2
PG 49
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA AK3AG
UT WOS:000338293300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alviano, M
   Peñaloza, R
AF Alviano, Mario
   Penaloza, Rafael
TI Fuzzy answer sets approximations
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
DE fuzzy logic; answer set programming; search-space pruning operators
ID WELL-FOUNDED SEMANTICS; LOGIC PROGRAMS
AB Fuzzy answer set programming (FASP) is a recent formalism for knowledge representation that enriches the declarativity of answer set programming by allowing propositions to be graded. To now, no implementations of FASP solvers are available and all current proposals are based on compilations of logic programs into different paradigms, like mixed integer programs or bilevel programs. These approaches introduce many auxiliary variables which might affect the performance of a solver negatively. To limit this downside, operators for approximating fuzzy answer sets can be introduced: Given a FASP program, these operators compute lower and upper bounds for all atoms in the program such that all answer sets are between these bounds. This paper analyzes several operators of this kind which are based on linear programming, fuzzy unfounded sets and source pointers. Furthermore, the paper reports on a prototypical implementation, also describing strategies for avoiding computations of these operators when they are guaranteed to not improve current bounds. The operators and their implementation can be used to obtain more constrained mixed integer or bilevel programs, or even for providing a basis for implementing a native FASP solver. Interestingly, the semantics of relevant classes of programs with unique answer sets, like positive programs and programs with stratified negation, can be already computed by the prototype without the need for an external tool.
C1 [Alviano, Mario] Univ Calabria, Dept Math & Comp Sci, I-87036 Arcavacata Di Rende, CS, Italy.
   [Penaloza, Rafael] Tech Univ Dresden, D-01062 Dresden, Germany.
   [Penaloza, Rafael] Ctr Adv Elect Dresden, Dresden, Germany.
C3 University of Calabria; Technische Universitat Dresden
RP Alviano, M (corresponding author), Univ Calabria, Dept Math & Comp Sci, I-87036 Arcavacata Di Rende, CS, Italy.
EM alviano@mat.unical.it; penaloza@tcs.inf.tu-dresden.de
RI Alviano, Mario/H-1355-2012
OI Penaloza, Rafael/0000-0002-2693-5790
FU Regione Calabria within the PIA project KnowRex POR FESR; DFG [BA
   1122/17-1]; DFG within the Cluster of Excellence 'cfAED'
FX Partially supported by Regione Calabria within the PIA project KnowRex
   POR FESR 2007-2013.; Partially supported by DFG under grant BA 1122/17-1
   and within the Cluster of Excellence 'cfAED'.
CR Achs A., 1995, Acta Cybernetica, V12, P153
   Achs A., 1997, Acta Cybernetica, V13, P85
   Alviano M, 2011, LECT NOTES COMPUT SC, V6702, P282
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Blondeel M., 2012, P 1 WORKSH WEIGHT LO, P43
   Calimeri F, 2011, LECT NOTES ARTIF INT, V6645, P388
   Damasio CarlosViegas., 2001, Proceedings of the International Conference on Logic Programming and Non-Monotonic Reasoning, P379
   Delgrande JamesP., 2008, Principles of Knowledge Representation and Reasoning: Proceedings of the Eleventh International Conference, KR 2008, Sydney, Australia, September 16-19, 2008, P411
   DUBOIS D, 1991, FUZZY SET SYST, V40, P203, DOI 10.1016/0165-0114(91)90051-Q
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Janssen J., 2011, THESIS GHENT U
   Janssen J, 2012, THEOR PRACT LOG PROG, V12, P811, DOI 10.1017/S1471068411000093
   Klement E.P, 2000, Triangular norms
   Lierler Y, 2004, LECT NOTES ARTIF INT, V2923, P346
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Lin FZ, 2002, ARTIF INTELL, V140, P175, DOI 10.1016/S0004-3702(02)00227-8
   Loyer Y, 2009, ANN MATH ARTIF INTEL, V55, P389, DOI 10.1007/s10472-008-9099-0
   Lukasiewicz T, 2006, RULEML 2006: SECOND INTERNATIONAL CONFERENCE ON RULES AND RULE MARKUP LANGUAGES FOR THE SEMANTIC WEB, PROCEEDINGS, P89
   Marek V. W., 2004, 10 INT WORKSH NONM R, P276
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Van Nieuwenborgh D, 2007, LECT NOTES COMPUT SC, V4670, P449
   Van Nieuwenborgh D, 2007, ANN MATH ARTIF INTEL, V50, P363, DOI 10.1007/s10472-007-9080-3
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
NR 27
TC 8
Z9 8
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 753
EP 767
DI 10.1017/S1471068413000471
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400020
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ferraris, P
   Lee, J
   Lierler, Y
   Lifschitz, V
   Yang, FK
AF Ferraris, Paolo
   Lee, Joohyung
   Lierler, Yuliya
   Lifschitz, Vladimir
   Yang, Fangkai
TI Representing first-order causal theories by logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE reasoning about actions; nonmonotonic causal logic; answer set
   programming
AB Nonmonotonic causal logic, introduced by McCain and Turner (McCain, N. and Turner, H. 1997. Causal theories of action and change. In Proceedings of National Conference on Artificial Intelligence (AAAI), Stanford, CA, 460-465) became the basis for the semantics of several expressive action languages. McCain's embedding of definite propositional causal theories into logic programming paved the way to the use of answer set solvers for answering queries about actions described in such languages. In this paper we extend this embedding to nondefinite theories and to the first-order causal logic.
C1 [Ferraris, Paolo] Google Inc, Mountain View, CA 94043 USA.
   [Lee, Joohyung] Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ 85287 USA.
   [Lierler, Yuliya] Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
   [Lifschitz, Vladimir; Yang, Fangkai] Univ Texas Austin, Dept Comp Sci, Austin, TX 78712 USA.
C3 Google Incorporated; Arizona State University; Arizona State
   University-Tempe; University of Kentucky; University of Texas System;
   University of Texas Austin
RP Ferraris, P (corresponding author), Google Inc, Mountain View, CA 94043 USA.
EM otto@cs.utexas.edu; joolee@asu.edu; yuliya@cs.utexas.edu;
   vl@cs.utexas.edu; fkyang@cs.utexas.edu
FU National Science Foundation [IIS-0916116, IIS-0712113]; Office of the
   Director of National Intelligence (ODNI) through the US Army; 2010
   Computing Innovation Fellowship
FX We are grateful to the anonymous referees for useful comments. Joohyung
   Lee was partially supported by the National Science Foundation under
   grant IIS-0916116 and by the Office of the Director of National
   Intelligence (ODNI), Intelligence Advanced Research Projects Activity
   (IARPA) through the US Army. Yuliya Lierler was supported by a 2010
   Computing Innovation Fellowship. Vladimir Lifschitz and Fangkai Yang
   were supported by the National Science Foundation under grant
   IIS-0712113. All statements of fact, opinion, or conclusions contained
   herein are those of the authors and should not be construed as
   representing the official views or policies of IARPA, the ODNI, or the
   US Government.
CR Akman V, 2004, ARTIF INTELL, V153, P105, DOI 10.1016/j.artint.2003.08.002
   [Anonymous], 2006, P AAAI C ARTIFICIAL
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], 2000, A Short Introduction to Intuitionistic Logic
   [Anonymous], 1997, Proceedings of the 14th National Conference on Artificial Intelligence (AAAI), DOI DOI 10.1093/ACPROF:OSO/9780198235880.003.0005
   [Anonymous], 1997, Solving the frame problem-a mathematical investigation of the common sense law of inertia
   Armando A., 2009, P 6 INT C TRUST PRIV
   Artikis A, 2009, ACM T COMPUT LOG, V10, DOI 10.1145/1459010.1459011
   Caldiran O, 2009, LECT NOTES COMPUT SC, V5753, P342, DOI 10.1007/978-3-642-04238-6_29
   Clark K. L., 1978, Logic and data bases, P293
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Ferraris P., 2006, P WORKSH LOG PROGR W, P35
   Ferraris P, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P366
   Ferraris P, 2011, ARTIF INTELL, V175, P236, DOI 10.1016/j.artint.2010.04.011
   Ferraris P, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P797
   Gebser M., 2010, Proceedings of European Conference on Logics in Artificial Intelligence (JELIA), P169
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Giunchiglia E, 2004, ARTIF INTELL, V153, P49, DOI [10.1016/j.artint.2002.12.001, 10.1016/j.artint.2003.12.001]
   Giunchiglia E, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P623
   Glivenko, 1929, ACAD ROY BELG, V15, P183
   Lee J, 2010, 2010 2ND INTERNATIONAL WORKSHOP ON DATABASE TECHNOLOGY AND APPLICATIONS PROCEEDINGS (DBTA)
   Lee J, 2009, LECT NOTES COMPUT SC, V5753, P515, DOI 10.1007/978-3-642-04238-6_51
   LIFSCHITZ, 1994, HDB LOGIC AI LOGIC P, V3, P298
   Lifschitz V, 1997, ARTIF INTELL, V96, P451, DOI 10.1016/S0004-3702(97)00057-X
   Lifschitz V., 1985, P IJCAI 85, P121
   Lifschitz V., 2007, P NAT C ART INT AAAI, P1025
   Lifschitz V., 2008, AAAI, V3, P1594
   Lifschitz V, 2010, LECT NOTES ARTIF INT, V6341, P247, DOI 10.1007/978-3-642-15675-5_22
   McCain N., 1997, THESIS U TEXAS AUSTI
   MCCARTHY J, 1986, ARTIF INTELL, V28, P89, DOI 10.1016/0004-3702(86)90032-9
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Ren W., 2009, THESIS U TEXAS AUSTI
NR 33
TC 4
Z9 6
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2012
VL 12
BP 383
EP 412
DI 10.1017/S1471068411000081
PN 3
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 946PH
UT WOS:000304364400004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gebser, M
   Kaminski, R
   Schaub, T
AF Gebser, Martin
   Kaminski, Roland
   Schaub, Torsten
TI Complex optimization in answer set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Logic Programming
CT 27th International Conference on Logic Programming
CY 2010
CY JUL 06-10, 2011
CL Lexington, KY
CL Lexington, KY
DE Answer Set Programming; Preference Handling; Complex optimization;
   Meta-Programming
ID LOGIC; CIRCUMSCRIPTION; CONSTRAINT
AB Preference handling and optimization are indispensable means for addressing nontrivial applications in Answer Set Programming (ASP). However, their implementation becomes difficult whenever they bring about a significant increase in computational complexity. As a consequence, existing ASP systems do not offer complex optimization capacities, supporting, for instance, inclusion-based minimization or Pareto efficiency. Rather, such complex criteria are typically addressed by resorting to dedicated modeling techniques, like saturation. Unlike the ease of common ASP modeling, however, these techniques are rather involved and hardly usable by ASP laymen. We address this problem by developing a general implementation technique by means of meta-prpogramming, thus reusing existing ASP systems to capture various forms of qualitative preferences among answer sets. In this way, complex preferences and optimization capacities become readily available for ASP applications.
C1 [Gebser, Martin; Kaminski, Roland; Schaub, Torsten] Univ Potsdam, Inst Informat, Potsdam, Germany.
   [Schaub, Torsten] Simon Fraser Univ, Burnaby, BC V5A 1S6, Canada.
   [Schaub, Torsten] Griffith Univ, Nathan, Qld 4111, Australia.
C3 University of Potsdam; Simon Fraser University; Griffith University
RP Gebser, M (corresponding author), Univ Potsdam, Inst Informat, Potsdam, Germany.
RI Gebser, Martin/B-7169-2018; Schaub, Torsten/O-5873-2019; Kaminski,
   Roland/HMD-8407-2023
OI Schaub, Torsten/0000-0002-7456-041X; Kaminski,
   Roland/0000-0002-1361-6045
CR [Anonymous], LPARSE 1 0 USERS MAN
   [Anonymous], 2008, KR
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Brewka G, 2004, COMPUT INTELL-US, V20, P335, DOI 10.1111/j.0824-7935.2004.00241.x
   Brewka G, 2004, LECT NOTES ARTIF INT, V2923, P34
   Brewka Gerhard., 2003, IJCAI, P867
   Chevaleyre Y, 2007, LECT NOTES COMPUT SC, V4362, P51
   Delgrande JP, 2003, THEOR PRACT LOG PROG, V3, P129, DOI 10.1017/S1471068402001539
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Eiter T, 2006, THEOR PRACT LOG PROG, V6, P23, DOI 10.1017/S1471068405002577
   Eiter T, 2003, THEOR PRACT LOG PROG, V3, P463, DOI 10.1017/S1471068403001753
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Faber W, 2009, LECT NOTES COMPUT SC, V5753, P115, DOI 10.1007/978-3-642-04238-6_12
   FAGES F, 1994, J METHODS LOGIC COMP, V1, P51
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Gebser M., 2011, COMPLEX OPTIMIZATION
   Gebser M., 2010, A user's guide to gringo, clasp, clingo, and iclingo
   Gebser M., 2010, P 12 INT C PRINC KNO, P497
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gries M, 2004, INTEGRATION, V38, P131, DOI 10.1016/j.vlsi.2004.06.001
   Janhunen T, 2004, LECT NOTES COMPUT SC, V3229, P134, DOI 10.1007/978-3-540-30227-8_14
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lifschitz V., 1985, P IJCAI 85, P121
   Liu GH, 2010, FUND INFORM, V101, P237, DOI 10.3233/FI-2010-286
   Lloyd J. W., 2012, Foundations of Logic Programming
   MCCARTHY J, 1980, ARTIF INTELL, V13, P27, DOI 10.1016/0004-3702(80)90011-9
   Oetsch J, 2010, THEOR PRACT LOG PROG, V10, P513, DOI 10.1017/S1471068410000256
   Oikarinen E, 2008, LECT NOTES ARTIF INT, V5253, P167, DOI 10.1007/978-3-540-85776-1_15
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   Sakama C, 2000, ARTIF INTELL, V123, P185, DOI 10.1016/S0004-3702(00)00054-0
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
NR 33
TC 45
Z9 47
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 821
EP 839
DI 10.1017/S1471068411000329
PN 4-5
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100024
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pelov, N
   Denecker, M
   Bruynooghe, M
AF Pelov, Nikolay
   Denecker, Marc
   Bruynooghe, Maurice
TI Well-founded and stable semantics of logic programs with aggregates
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic programming; aggregates
ID PREDICATE LOGIC
AB In this paper, we present a framework for the semantics and the computation of aggregates in the context of logic programming. In our study, an aggregate can be an arbitrary interpreted second order predicate or function. We define extensions of the Kripke-Kleene, the well-founded and the stable semantics for aggregate programs. The semantics is based on the concept of a three-valued immediate consequence operator of an aggregate program. Such an operator approximates the standard two-valued immediate consequence operator of the program, and induces a unique Kripke-Kleene model, a unique well-founded model and a collection of stable models. We study different ways of defining such operators and thus obtain a framework of semantics, offering different trade-offs between precision and tractability. In particular, we investigate conditions on the operator that guarantee that the computation of the three types of semantics remains on the same level as for logic programs without aggregates. Other results show that, in practice, even efficient three-valued immediate consequence operators which are very low in the precision hierarchy, still provide optimal precision.
C1 Katholieke Univ Leuven VIB, Dept Comp Sci, B-3000 Louvain, Belgium.
C3 KU Leuven; Flanders Institute for Biotechnology (VIB)
RP Pelov, N (corresponding author), Katholieke Univ Leuven VIB, Dept Comp Sci, B-3000 Louvain, Belgium.
EM pelov@cs.keleuven.be; marcd@cs.keleuven.be; maurice@cs.keleuven.be
RI Bruynooghe, Maurice/A-6196-2014; Denecker, Marc/O-1056-2013
OI Bruynooghe, Maurice/0000-0002-6881-1462; Denecker,
   Marc/0000-0002-0422-7339
CR [Anonymous], 1988, International Symposium on Logic Programming
   [Anonymous], 1990, Introduction to Lattices and Order
   Apt K.R., 1988, THEORY DECLARATIVE K, P89
   DELLARMI T, 2003, 18 INT JOINT C ART I, P847
   Denecker M, 2004, INFORM COMPUT, V192, P84, DOI 10.1016/j.ic.2004.02.004
   Denecker M, 2003, ARTIF INTELL, V143, P79, DOI 10.1016/S0004-3702(02)00293-X
   Denecker M, 2000, SPRINGER INT SER ENG, V597, P127
   Denecker M, 2000, LECT NOTES ARTIF INT, V1861, P703
   DENECKER M, 2001, LNCS, V2237, P212
   ELKABANI I, 2004, INT C LOG PROGR, P73
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Fitting M., 1985, Journal of Logic Programming, V2, P295, DOI 10.1016/S0743-1066(85)80005-4
   Gelfond M, 2002, LECT NOTES ARTIF INT, V2408, P413
   KEMP DB, 1991, LOGIC PROGRAMM, P387
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   LINDSTROM P, 1966, THEORIA, V32, P186
   MAREK V, 2004, LNCS, V2923, P155
   Marek VW, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P86
   Marek VW, 2004, LECT NOTES ARTIF INT, V2923, P167
   Mitchell D., 2005, Proc. of the 20th National Conf. on Artif. Intell. (AAAI), P430
   MUMICK IS, 1990, VERY LARGE DATA BASES, P264
   Pelov N, 2004, LECT NOTES ARTIF INT, V2923, P207
   PELOV N, 2004, THESIS K U LEUVEN
   Ross KA, 1997, J COMPUT SYST SCI, V54, P79, DOI 10.1006/jcss.1997.1453
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   SON TC, 2007, IN PRESS THEORY PRAC
   VANEIJCK J, 1996, QUANTIFIERS LOGIC LA, P105
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   VANGELDER A, 1992, 11 ACM S PRINC DAT S, P127
   VANNUFFELEN B, 2000, 8 INT WORSH NONM REA
   VENNEKENS J, 2006, IN PRESS ACM T COMPU
NR 33
TC 86
Z9 89
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2007
VL 7
BP 301
EP 353
DI 10.1017/S1471068406002973
PN 3
PG 53
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 158HV
UT WOS:000245783300002
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Falaschi, M
   Villanueva, A
AF Falaschi, Moreno
   Villanueva, Alicia
TI Automatic verification of timed concurrent constraint programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE automatic verification; reactive systems; timed concurrent constraint
   programming; model checking
ID MODEL CHECKING
AB The language Timed Concurrent Constraint (tccp) is the extension over time of the Concurrent Constraint Programming (cc) paradigm that allows us to specify concurrent systems where timing is critical, for example reactive systems. Systems which may have an infinite number of states can be specified in tccp. Model checking is a technique which is able to verify finite-state systems with a huge number of states in an automatic way. In the last years several studies have investigated how to extend model checking techniques to systems with an infinite number of states. In this paper we propose an approach which exploits the computation model of tccp. Constraint based computations allow us to define a methodology for applying a model checking algorithm to (a class of) infinite-state systems. We extend the classical algorithm of model checking for LTL to a specific logic defined for the verification of tccp and to the tccp Structure which we define in this work for modeling the program behavior. We define a restriction on the time in order to get a finite model and then we develop some illustrative examples. To the best of our knowledge this is the first approach that defines a model checking methodology for tccp.
C1 Univ Udine, Dipartimento Matemat & Informat, I-33100 Udine, Italy.
   Univ Politecn Valencia, Dept Sistemas Informat & Computac, E-46022 Valencia, Spain.
C3 University of Udine; Universitat Politecnica de Valencia
RP Falaschi, M (corresponding author), Univ Udine, Dipartimento Matemat & Informat, Via Sci 206, I-33100 Udine, Italy.
EM falaschi@dimi.uniud.it; villanue@dsic.upv.es
RI Villanueva, Alicia/C-2972-2014
OI Villanueva, Alicia/0000-0003-1090-5009; FALASCHI,
   Moreno/0000-0002-6659-3828
CR ABDULLA PA, 1999, LECT NOTES COMPUTER, V1633, P146
   ALUR R, 1995, THEOR COMPUT SCI, V138, P3, DOI 10.1016/0304-3975(94)00202-T
   Alur R, 1997, IEEE DECIS CONTR P, P702, DOI 10.1109/CDC.1997.650717
   [Anonymous], 1995, Temporal verification of reactive systems-safety
   [Anonymous], THESIS EINDHOVEN U T
   [Anonymous], 1968, An Introduction to Modal Logic
   [Anonymous], THESIS CARNEGIE MELL
   BOIGELOT B, 1996, P 8 INT C COMP AID V, V1102, P1
   Bouajjani A, 1997, LECT NOTES COMPUT SC, V1243, P135
   BOUAJJANI A, 2000, LECT NOTES COMPUTER, V1855, P403, DOI DOI 10.1007/10722167_
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   CLARKE EM, 1994, ACM T PROGR LANG SYS, V16, P1512, DOI 10.1145/186025.186051
   Clarke EM, 1999, MODEL CHECKING, P1
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   de Boer FS, 2001, EIGHTH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P227, DOI 10.1109/TIME.2001.930721
   de Boer FS, 2000, INFORM COMPUT, V161, P45, DOI 10.1006/inco.1999.2879
   DEBOER FS, 2002, IN PRESS ACM T COMPU
   Delzanno G., 2001, International Journal on Software Tools for Technology Transfer, V3, P250, DOI 10.1007/s100090100049
   Delzanno G, 1999, LECT NOTES COMPUT SC, V1579, P223
   Esparza J, 1997, LECT NOTES COMPUT SC, V1248, P1
   FALASCHI M, 2000, ELECT NOTES THEORETI, V48
   FALASCHI M, 2001, P INT WORKSH SPEC AN
   FALASCHI M, 2000, P 2000 JOINT C DECL
   FISCHER MJ, 1979, J COMPUT SYST SCI, V18, P194, DOI 10.1016/0022-0000(79)90046-1
   Gupta V, 1998, SCI COMPUT PROGRAM, V30, P3, DOI 10.1016/S0167-6423(97)00006-3
   Kesten Y, 1997, LECT NOTES COMPUT SC, V1254, P424
   LOISEAUX C, 1995, FORM METHOD SYST DES, V6, P11, DOI 10.1007/BF01384313
   McMillan K. L., 1993, Symbolic model checking
   NIELSEN M, 2002, NORDIC J COMPUTING, V1, P145
   Queille J.-P., 1982, ser. Lecture Notes in Computer Science, P337, DOI [DOI 10.1007/3-540-11494-722, DOI 10.1007/3-540-11494-7_22, 10 . 1007 / 3 - 540 - 11494-7_22]
   SARASWAT VA, 1990, CONFERENCE RECORD OF THE SEVENTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P232, DOI 10.1145/96709.96733
   SARASWAT VA, 1994, IEEE S LOG, P71, DOI 10.1109/LICS.1994.316085
   Saraswat Vijay A., 1991, P 18 ACM SIGPLANSIGA, P333, DOI DOI 10.1145/99583.99627
   VALENCIA F, 2002, THESIS U AARHUS
   Valencia FD, 2003, LECT NOTES COMPUT SC, V2916, P422, DOI 10.1007/978-3-540-24599-5_29
   VILLANUEVA A, 2003, THESIS U UDINE
   [No title captured]
NR 37
TC 11
Z9 12
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2006
VL 6
BP 265
EP 300
DI 10.1017/S1471068406002675
PN 3
PG 36
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 051EI
UT WOS:000238143400003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Van Nieuwenborgh, D
   Vermeir, D
AF Van Nieuwenborgh, D
   Vermeir, D
TI Preferred answer sets for ordered logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE nonmonotonic reasoning; knowledge representation; answer set
   programming; preference
ID SEMANTICS
AB We extend answer set semantics to deal with inconsistent programs (containing classical negation), by finding a "best" answer set. Within the context of inconsistent programs, it is natural to have a partial order on rules, representing a preference for satisfying certain rules, possibly at the cost of violating less important ones. We show that such a rule order induces a natural order on extended answer sets, the minimal elements of which we call preferred answer sets. We characterize the expressiveness of the resulting semantics and show that it can simulate negation as failure, disjunction and some other formalisms such as logic programs with ordered disjunction. The approach is shown to be useful in several application areas, e.g. repairing database, where minimal repairs correspond to preferred answer sets.
C1 Vrije Univ Brussel, Dept Comp Sci, B-1050 Brussels, Belgium.
C3 Vrije Universiteit Brussel
RP Van Nieuwenborgh, D (corresponding author), Vrije Univ Brussel, Dept Comp Sci, Pleinlaan 2, B-1050 Brussels, Belgium.
EM dvnieuwe@vub.ac.be; dvermeir@vub.ac.be
CR Alferes JJ, 2000, LECT NOTES ARTIF INT, V1919, P345, DOI 10.1007/3-540-40006-0_24
   [Anonymous], 1988, International Symposium on Logic Programming
   Arenas M., 1999, Proceedings of the Eighteenth ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems, P68, DOI 10.1145/303976.303983
   ARENAS M, 2000, P 4 INT C FLEX QUER, P27
   BALDUCCINI M, 2003, AAAI 2003 SPRING S S
   BALDUCCINI M, 2003, CEUR WORKSH P, V78
   Balduccini Marcello, 2004, LECT NOTES ARTIFICIA
   Brewka G, 2002, LECT NOTES ARTIF INT, V2424, P444, DOI 10.1007/3-540-45757-7_37
   Brewka G, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P100
   BREWKA G, 2002, P KR 2002, P158
   BREWKA G, 1999, ARTIF INTELL, V109, P1
   BRY F, 1997, INTEGRITY INTERNAL C
   Buccafurri F, 1999, LOGIC PROGRAMM, P79
   BUCCAFURRI F, 1998, P 6 INT C PRINC KNOW, P418
   Clark K. L., 1978, Logic and data bases, P293
   De Vos M, 2001, COMPUT INTELL-US, V17, P651, DOI 10.1111/0824-7935.00168
   Delgrande JP, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P392
   Dix J., 1996, Fundamenta Informaticae, V28, P87
   EITER T, 1993, MIT PS LOG, P266
   Eiter T, 2000, LECT NOTES ARTIF INT, V1919, P2, DOI 10.1007/3-540-40006-0_2
   Eiter T, 1997, THEOR COMPUT SCI, V189, P129, DOI 10.1016/S0304-3975(96)00179-X
   GABBAY D, 1991, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P208
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Inoue K, 1996, J LOGIC PROGRAM, V27, P107, DOI 10.1016/0743-1066(95)00119-0
   INOUE K, 1994, MOR KAUF R, P293
   Inoue K, 1998, J LOGIC PROGRAM, V35, P39, DOI 10.1016/S0743-1066(97)10001-2
   Kakas A. C., 1992, Journal of Logic and Computation, V2, P719, DOI 10.1093/logcom/2.6.719
   KOWALSKI RA, 1990, P 7 INT C LOG PROGR, P598
   Laenens E., 1992, Journal of Logic and Computation, V2, P133, DOI 10.1093/logcom/2.2.133
   LAENENS E, 1990, EUR WORKSH JELIA 90, V478, P317
   Leone N, 1997, INFORM COMPUT, V135, P69, DOI 10.1006/inco.1997.2630
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   OJEDAACIEGO M, 2000, LNAI, V1919
   PRZYMUSINSKI TC, 1991, NEW GENERAT COMPUT, V9, P3
   REITER R, 1980, ARTIF INTELL, V13, P81, DOI 10.1016/0004-3702(80)90014-4
   SAKAMA C, 1994, J AUTOM REASONING, V13, P145, DOI 10.1007/BF00881915
   SAKAMA C, 1993, P 1996 JOINT C S LOG, P82
   Schaub Torsten., 2001, IJCAI, P597
   Van Gelder A., 1988, Proceedings of the Seventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P221, DOI 10.1145/308386.308444
   Van Nieuwenborgh D, 2003, LECT NOTES ARTIF INT, V2850, P244
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   VANNIEUWENBORGH D, 2003, P APPIA GULP PRODE C, P374
   Wang KW, 2000, LECT NOTES ARTIF INT, V1861, P164
NR 43
TC 9
Z9 10
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2006
VL 6
BP 107
EP 167
DI 10.1017/S1471068404002315
PN 1-2
PG 61
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 011WO
UT WOS:000235299500004
DA 2024-07-18
ER

PT J
AU Bozzano, M
   DelZanno, G
   Martelli, M
AF Bozzano, M
   DelZanno, G
   Martelli, M
TI Model checking linear logic specifications
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 2nd International Workshop on Verification and Computational Logic (VCL
   2001)
CY SEP 04, 2001
CL Florence, ITALY
DE linear logic; fixpoint semantics; bottom-up evaluation
ID SEMANTICS; VERIFICATION; PROOFS
AB The overall goal of this paper is to investigate the theoretical foundations of algorithmic verification techniques for first order linear logic specifications. The fragment of linear logic we consider in this paper is based on the linear logic programming language called LO (Andreoli and Pareschi, 1990) enriched with universally quantified goal formulas. Although LO was originally introduced as a theoretical foundation for extensions of logic programming languages, it can also be viewed as a very general language to specify a wide range of infinite-state concurrent systems (Andreoli, 1992; Cervesato, 1995). Our approach is based on the relation between backward reachability and provability highlighted in our previous work on propositional LO programs (Bozzano et al., 2002). Following this line of research, we define here a general framework for the bottom-up evaluation of first order linear logic specifications. The evaluation procedure is based on an effective fixpoint operator working on a symbolic representation of infinite collections of first order linear logic formulas. The theory of well quasi-orderings (Abdulla et al., 1996; Finkel and Schnoebelen, 2001) can be used to provide sufficient conditions for the termination of the evaluation of non trivial fragments of first order linear logic.
C1 IRST, ITC, I-38050 Trento, Italy.
   Univ Genoa, Dipartimento Informat & Sci Informaz, I-16146 Genoa, Italy.
C3 University of Genoa
RP IRST, ITC, Via Sommarive 18, I-38050 Trento, Italy.
EM bozzano@irst.itc.it; giorgio@disi.unige.it; martelli@disi.unige.it
RI Bozzano, Marco/ABD-3241-2020
OI Bozzano, Marco/0000-0002-4135-103X
CR Abdulla PA, 1996, IEEE S LOG, P313, DOI 10.1109/LICS.1996.561359
   Abdulla PA, 2001, THEOR COMPUT SCI, V256, P145, DOI 10.1016/S0304-3975(00)00105-5
   Andreoli J. M., 1991, New Generation Computing, V9, P445, DOI 10.1007/BF03037173
   Andreoli J. M., 1992, Journal of Logic and Computation, V2, P297, DOI 10.1093/logcom/2.3.297
   Andreoli JM, 1997, NEW GENERAT COMPUT, V15, P449, DOI 10.1007/BF03037301
   ANDREOLI JM, 1990, P 7 INT C LOG PROGR, P495
   BOSSI A, 1994, J LOGIC PROGRAM, V20, P149, DOI 10.1016/0743-1066(94)90026-4
   Bozzano M, 2001, LECT NOTES COMPUT SC, V2024, P138
   Bozzano M, 2002, THEOR PRACT LOG PROG, V2, P85, DOI 10.1017/S1471068402001254
   BOZZANO M, 2002, THESIS U GENOVA
   BOZZANO M, 2003, MODEL CHECKING LINEA
   Bozzano Marco., 2002, Principles and Practice of Declarative Programming (PPDP'02), P38
   Cerva H, 1999, ELEC SOC S, V99, P55
   Cervesato I, 2002, INFORM COMPUT, V179, P19, DOI 10.1006/inco.2001.2951
   CERVESATO I, 2000, P 2000 WORKSH FORM M
   CERVESATO I, 1994, UNPUB PETRI NETS MUL
   CERVESATO I, 1995, P 1995 JOINT C DECL, P313
   Delzanno G, 2001, THEOR COMPUT SCI, V258, P269, DOI 10.1016/S0304-3975(00)00024-4
   Dickson LE, 1913, AM J MATH, V35, P413, DOI 10.2307/2370405
   Durgin N., 1999, WORKSH FORM METH SEC
   EDER E, 1985, J SYMB COMPUT, V1, P31, DOI 10.1016/S0747-7171(85)80027-4
   ELLIOTT C, 1991, TOPICS ADV LANGUAGE, P289
   ENGBERG U, 1990, LECT NOTES COMPUTER, V389, P147
   Esparza J., 1999, Proceedings. 14th Symposium on Logic in Computer Science (Cat. No. PR00158), P352, DOI 10.1109/LICS.1999.782630
   Esparza J, 2000, FORM METHOD SYST DES, V16, P159, DOI 10.1023/A:1008743212620
   FALASCHI M, 1993, INFORM COMPUT, V103, P86, DOI 10.1006/inco.1993.1015
   Farwer B., 1999, Fundamenta Informaticae, V37, P225
   FARWER B, 2000, THESIS
   Finkel A, 2001, THEOR COMPUT SCI, V256, P63, DOI 10.1016/S0304-3975(00)00102-X
   FINKEL A, 1993, LECT NOTES COMP SCI, V674, P210, DOI DOI 10.1007/3-540-56689-9_45
   Gabbrielli M., 1995, Journal of Logic and Computation, V5, P133, DOI 10.1093/logcom/5.2.133
   GIRARD JY, 1987, THEOR COMPUT SCI, V50, P1, DOI 10.1016/0304-3975(87)90045-4
   HARLAND J, 1998, P JICSLP 98 WORKSH T, P43
   Higman G., 1952, Proc. Lond. Math. Soc., V3, P326
   HODAS J, 1990, P 7 INT C LOG PROGR, P511
   Jensen K., 1997, MONOGRAPHS THEORETIC
   Karp R. M., 1969, J COMPUT SYST SCI, V3, P147, DOI DOI 10.1016/S0022-0000(69)80011-5
   Kobayashi N., 1995, Formal Aspects of Computing, V7, P113, DOI 10.1007/BF01211602
   KOBAYASHI N, 1994, SIGPLAN NOTICES, V29, P31, DOI 10.1145/191081.191088
   KOPYLOV AP, 1995, IEEE S LOG, P496, DOI 10.1109/LICS.1995.523283
   LASSEZ JL, 1988, FDN DEDUCTIVE DATABA, P587
   LINCOLN P, 1994, THEOR COMPUT SCI, V135, P139, DOI 10.1016/0304-3975(94)00107-3
   LINCOLN P, 1992, ANN PURE APPL LOGIC, V56, P239, DOI 10.1016/0168-0072(92)90075-B
   LINCOLN P, 1995, LONDON MATH SOC LECT, V222
   MARTIOLIET N, 1991, INT J FOUND COMPUT S, V4, P297
   MAYR EW, 1984, SIAM J COMPUT, V13, P441, DOI 10.1137/0213029
   MCDOWELL R, 1996, ENTCS, V3
   MESEGUER J, 1992, THEOR COMPUT SCI, V96, P73, DOI 10.1016/0304-3975(92)90182-F
   Miller D, 1996, THEOR COMPUT SCI, V165, P201, DOI 10.1016/0304-3975(96)00045-X
   MILLER D, 1991, ANN PURE APPL LOGIC, V51, P125, DOI 10.1016/0168-0072(91)90068-W
   Miller Dale, 1992, LECT NOTES COMPUTER, V660, P242, DOI DOI 10.1007/3-540-56454-3_13
   Milner E.C., 1985, NATO ASI Series C, V147, P487, DOI [10.1007/978-94-009-5315-4_14, DOI 10.1007/978-94-009-5315-4_14]
   PALAMIDESSI C, 1990, LECT NOTES COMPUT SC, V443, P386
   Silva M., 1998, Lectures on Petri Nets I: Basic Models. Advances in Petri Nets, P309
NR 54
TC 5
Z9 7
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP-NOV
PY 2004
VL 4
BP 573
EP 619
DI 10.1017/S1471068404002066
PN 5-6
PG 47
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 861VZ
UT WOS:000224448000003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Howe, JM
   King, A
AF Howe, JM
   King, A
TI Three optimisations for sharing
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE abstract interpretation; sharing analysis; freeness; linearity and
   rational trees
AB To improve precision and efficiency, sharing analysis should track both freeness and linearity. The abstract unification algorithms for these combined domains are suboptimal, hence there is scope for improving precision. This paper proposes three optimisations for tracing sharing in combination with freeness and linearity. A novel connection between equations and sharing abstractions is used to establish correctness of these optimisations even in the presence of rational trees. A method for pruning intermediate sharing abstractions to improve efficiency is also proposed. The optimisations are lightweight and therefore some, if not all, of these optimisations will be of interest to the implementor.
C1 City Univ London, Dept Comp, London EC1V OHB, England.
   Univ Kent, Comp Lab, Canterbury CT2 7NF, Kent, England.
C3 City University London; University of Kent
RP Howe, JM (corresponding author), City Univ London, Dept Comp, London EC1V OHB, England.
OI Howe, Jacob/0000-0001-8013-6941
CR Bagnara R., 2000, Proceedings of the 2nd International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP '00), P103, DOI 10.1145/351268.351280
   Codish M, 1999, ACM T PROGR LANG SYS, V21, P948, DOI 10.1145/330249.330252
   CODISH M, 1991, P 8 INT C LOG PROGR, P79
   FILE G, 1994, 15 U STUD PAD DIP MA
   Hill PM, 2002, THEOR PRACT LOG PROG, V2, P155, DOI 10.1017/S1471068401001338
   King A, 2000, J LOGIC PROGRAM, V46, P139, DOI 10.1016/S0743-1066(00)00009-1
   LANGEN A, 1991, THESIS U SO CALIFORN
   LASSEZ JL, 1988, FDN DEDUCTIVE DATABA, P587
   MUTHUKUMAR K, 1992, J LOGIC PROGRAM, V13, P315, DOI 10.1016/0743-1066(92)90035-2
NR 9
TC 6
Z9 6
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 40 WEST 20TH ST, NEW YORK, NY 10011-4221 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2003
VL 3
BP 243
EP 257
DI 10.1017/S1471068402001497
PN 2
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 674LK
UT WOS:000182638100004
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Leite, J
   Slota, M
AF Leite, Joao
   Slota, Martin
TI A Brief History of Updates of Answer-Set Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE belief update; belief change; logic programming; answer-set programming
ID LOGIC PROGRAMS; FRAMEWORK; SEMANTICS; REVISION; MODELS; ASP
AB Over the last couple of decades, there has been a considerable effort devoted to the problem of updating logic programs under the stable model semantics (a.k.a. answer-set programs) or, in other words, the problem of characterising the result of bringing up-to-date a logic program when the world it describes changes. Whereas the state-of-the-art approaches are guided by the same basic intuitions and aspirations as belief updates in the context of classical logic, they build upon fundamentally different principles and methods, which have prevented a unifying framework that could embrace both belief and rule updates. In this paper, we will overview some of the main approaches and results related to answer-set programming updates, while pointing out some of the main challenges that research in this topic has faced.
C1 [Leite, Joao; Slota, Martin] Univ Nova Lisboa, Fac Ciencias & Tecnol, NOVA LINCS, Dept Informat, Lisbon, Portugal.
C3 Universidade Nova de Lisboa
RP Leite, J (corresponding author), Univ Nova Lisboa, Fac Ciencias & Tecnol, NOVA LINCS, Dept Informat, Lisbon, Portugal.
EM jleite@fct.unl.pt; martin.slota@gmail.com
RI Leite, Joao/HGB-4757-2022; Leite, Joao/C-6162-2009
OI Leite, Joao/0000-0001-6786-7360
FU Fundacao para a Ciencia e Tecnologia [PTDC/CCI-INF/32219/2017,
   PTDC/CCI-COM/30952/2017, UIDB/04516/2020]; Fundação para a Ciência e a
   Tecnologia [PTDC/CCI-COM/30952/2017, PTDC/CCI-INF/32219/2017] Funding
   Source: FCT
FX The authors would like to thank Jose Alferes, Martin Balaz, Federico
   Banti, Antonio Brogi, Martin Homola, Lu ' is Moniz Pereira, Halina
   Przymusinska, Teodor C. Przymusinski, and Theresa Swift, with whom they
   worked on the topic of this paper over the years, as well as Ricardo
   Goncalves andMatthias Knorr for valuable comments on an earlier draft of
   this paper. The authors would also like to thank the anonymous reviewers
   for their insightful comments and suggestions, which greatly helped us
   improve this paper. The authors were partially supported by Fundacao
   para a Ciencia e Tecnologia through projects FORGET
   (PTDC/CCI-INF/32219/2017) and RIVER (PTDC/CCI-COM/30952/2017), and
   strategic project NOVA LINCS (UIDB/04516/2020).
CR ALCHOURRON CE, 1985, J SYMBOLIC LOGIC, V50, P510, DOI 10.2307/2274239
   Alferes J. J., 2005, Studia Logica, V79, P7, DOI 10.1007/s11225-005-0492-y
   Alferes JJ, 1997, LECT NOTES ARTIF INT, V1216, P110, DOI 10.1007/BFb0023804
   Alferes JJ, 2000, J LOGIC PROGRAM, V45, P43, DOI 10.1016/S0743-1066(99)00065-5
   Alferes JJ, 2003, LECT NOTES ARTIF INT, V2902, P394
   [Anonymous], 1992, Belief revision, DOI DOI 10.1017/CBO9780511526664.001
   Apt K. R., 1991, New Generation Computing, V9, P335, DOI 10.1007/BF03037168
   Apt K. R., 1988, FDN DEDUCTIVE DATABA, P89, DOI DOI 10.1016/B978-0-934613-40-8.50006-3
   Banti F, 2005, LECT NOTES ARTIF INT, V3662, P356, DOI 10.1007/11546207_28
   Binnewies S, 2018, ACM T COMPUT LOG, V19, DOI 10.1145/3190783
   Brewka G, 1999, ARTIF INTELL, V109, P297, DOI 10.1016/S0004-3702(99)00015-6
   Buccafurri F, 1999, LOGIC PROGRAMM, P79
   Cabalar P, 2007, THEOR PRACT LOG PROG, V7, P745, DOI 10.1017/S1471068407003110
   Cabalar P, 2007, LECT NOTES COMPUT SC, V4670, P104, DOI 10.1007/978-3-540-74610-2_8
   Calvanese D, 2010, LECT NOTES COMPUT SC, V6496, P112, DOI 10.1007/978-3-642-17746-0_8
   Dalal M., 1988, P 7 NAT C ART INT AA, P475
   De Giacomo G, 2009, J LOGIC COMPUT, V19, P745, DOI 10.1093/logcom/exn051
   Delgrande J, 2013, LECT NOTES COMPUT SC, V8148, P264, DOI 10.1007/978-3-642-40564-8_27
   Delgrande J, 2013, ACM T COMPUT LOG, V14, DOI 10.1145/2480759.2480766
   Delgrande JP, 2007, LECT NOTES COMPUT SC, V4483, P71, DOI 10.1007/978-3-540-72200-7_8
   Delgrande JP, 2015, AAAI CONF ARTIF INTE, P1482
   Delgrande JP, 2010, THEOR PRACT LOG PROG, V10, P565, DOI 10.1017/S1471068410000281
   Delgrande JamesP., 2008, Principles of Knowledge Representation and Reasoning: Proceedings of the Eleventh International Conference, KR 2008, Sydney, Australia, September 16-19, 2008, P411
   Delgrande JP, 2003, THEOR PRACT LOG PROG, V3, P129, DOI 10.1017/S1471068402001539
   Dix J., 1995, Fundamenta Informaticae, V22, P257
   Eiter T, 2002, THEOR PRACT LOG PROG, V2, P711, DOI 10.1017/S1471068401001247
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Erdem E, 2018, KUNSTL INTELL, V32, P143, DOI 10.1007/s13218-018-0544-x
   Erdem E, 2016, AI MAG, V37, P53, DOI 10.1609/aimag.v37i3.2678
   Fages F., 1994, Methods of Logic in Computer Science, V1, P51
   Falkner A, 2018, KUNSTL INTELL, V32, P165, DOI 10.1007/s13218-018-0548-6
   Fermé E, 2011, J PHILOS LOGIC, V40, P295, DOI 10.1007/s10992-011-9171-9
   Garcia L, 2019, J ARTIF INTELL RES, V66, P989
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Goncalves M., 2016, P 15 INT C PRINC KNO
   HANSSON SO, 1993, J PHILOS LOGIC, V22, P637, DOI 10.1007/BF01054039
   Herzig A, 1999, ARTIF INTELL, V115, P107, DOI 10.1016/S0004-3702(99)00072-7
   Heyting A., 1986, SITZUNGSBERICHTE PRE, P42
   Hitzler P, 2005, THEOR PRACT LOG PROG, V5, P93, DOI 10.1017/S1471068404002212
   Homola M, 2004, LECT NOTES ARTIF INT, V3487, P78
   Ilic M, 2008, LECT NOTES COMPUT SC, V5290, P352, DOI 10.1007/978-3-540-88309-8_36
   Inoue K, 2004, LECT NOTES COMPUT SC, V3229, P174, DOI 10.1007/978-3-540-30227-8_17
   Katsuno H., 1989, IJCAI-89 Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, P1413
   KATSUNO H, 1991, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P387
   KELLER AM, 1985, IEEE T SOFTWARE ENG, V11, P620, DOI 10.1109/TSE.1985.232506
   Krümpelmann P, 2012, LOG J IGPL, V20, P943, DOI 10.1093/jigpal/jzs012
   Krumpelmann P., 2010, P 13 INT WORKSH NONM
   Leite, 2003, FRONTIERS ARTIFICIAL, V81
   Leite JA, 1998, LECT NOTES ARTIF INT, V1471, P224, DOI 10.1007/BFb0054796
   Lenzerini M., 2011, CEUR WORKSHOP PROC, V745
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lifschitz V, 2008, LECT NOTES COMPUT SC, V5366, P37, DOI 10.1007/978-3-540-89982-2_8
   Liu H., 2006, P 10 INT C PRINC KNO, P46
   Lukasiewicz J, 1941, ENTRETIENS ZURICH SU, V12, P82
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Marek V. W., 1994, Logics in Artificial Intelligence. European Workshop JELIA '94. Proceedings, P122, DOI 10.1007/BFb0021968
   Marek VW, 1998, THEOR COMPUT SCI, V190, P241, DOI 10.1016/S0304-3975(97)00092-3
   McCarthy, 1998, 4 INT S LOG FORM COM
   Newtono, 1726, PHILOS NATURALIS PRI
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Osorio M, 2007, LECT NOTES ARTIF INT, V4827, P283
   Osorio M, 2007, THEOR PRACT LOG PROG, V7, P451, DOI 10.1017/S1471068406003000
   Pearce D, 1997, LECT NOTES ARTIF INT, V1216, P57, DOI 10.1007/BFb0023801
   Przymusinski TC, 1997, J LOGIC PROGRAM, V30, P125, DOI 10.1016/S0743-1066(96)00091-X
   Przymusinski TC, 1995, LECT NOTES ARTIF INT, V928, P156
   Saias J., 2004, Artificial Intelligence and Law, V12, P397, DOI 10.1007/s10506-005-4162-1
   Sakama C, 2003, THEOR PRACT LOG PROG, V3, P671, DOI 10.1017/S1471068403001716
   Satoh K., 1988, P INT C 5 GENERATION, P455
   Schaub T, 2003, THEOR PRACT LOG PROG, V3, P569, DOI 10.1017/S1471068403001844
   Schwind N, 2016, THEOR PRACT LOG PROG, V16, P111, DOI 10.1017/S1471068415000101
   Sefranek J., 2011, 2011 10th Mexican International Conference on Artificial Intelligence (MICAI 2011), P36, DOI 10.1109/MICAI.2011.18
   Sefránek J, 2006, LECT NOTES ARTIF INT, V4160, P426, DOI 10.1007/11853886_35
   Siska J., 2006, P 20 WORKSH LOG PROG, V1843-06-02, P64
   Slota Martin, 2012, Logics in Artificial Intelligence. Proceedings of the 13th European Conference (JELIA 2012), P372, DOI 10.1007/978-3-642-33353-8_29
   Slota M., 2012, THESIS U NOVA LISBOA
   Slota M., 2013, P 23 INT JOINT C ART, P1097
   Slota M., 2012, P 13 INT C PRINC KNO, P158
   Slota M, 2015, ARTIF INTELL, V229, P33, DOI 10.1016/j.artint.2015.07.008
   Slota M, 2014, THEOR PRACT LOG PROG, V14, P869, DOI 10.1017/S1471068413000100
   Slota M, 2011, LECT NOTES ARTIF INT, V6645, P174
   Slota M, 2010, FRONT ARTIF INTEL AP, V215, P956, DOI 10.3233/978-1-60750-606-5-957
   Slota M, 2011, THEOR PRACT LOG PROG, V11, P801, DOI 10.1017/S1471068411000317
   Wang Y., 2012, P KR, P643
   Wang Y., 2013, P 23 INT JOINT C ART
   Wang YS, 2014, J ARTIF INTELL RES, V50, P31, DOI 10.1613/jair.4297
   Winslett M., 1988, Reasoning about action using a possible models approach
   Winslett M., 1990, Updating Logical Databases
   Zhang Y, 2003, THEOR PRACT LOG PROG, V3, P223, DOI 10.1017/S1471068402001552
   Zhang Y, 1998, ECAI 1998: 13TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P403
   Zhang Y, 2006, ACM T COMPUT LOG, V7, P421, DOI 10.1145/1149114.1149115
   Zhang YQ, 2005, PROCEEDINGS OF THE 8TH JOINT CONFERENCE ON INFORMATION SCIENCES, VOLS 1-3, P707
   Zhuang ZQ, 2016, FRONT ARTIF INTEL AP, V285, P671, DOI 10.3233/978-1-61499-672-9-671
NR 96
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2023
VL 23
IS 1
BP 57
EP 110
AR PII S1471068422000060
DI 10.1017/S1471068422000060
EA MAR 2022
PG 54
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA JO5Y4
UT WOS:000771967500001
OA hybrid, Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Izmirlioglu, Y
   Erdem, E
AF Izmirlioglu, Yusuf
   Erdem, Esra
TI Reasoning about Cardinal Directions between 3-Dimensional Extended
   Objects using Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE Qualitative Spatial Reasoning; Answer Set Programming; Cardinal
   Directional Calculus; 3D Space; Consistency Checking; Marine
   Exploration; Building Design; Digital Forensics
AB We propose a novel formal framework (called 3D-NCDC-ASP) to represent and reason about cardinal directions between extended objects in 3-dimensional (3D) space, using Answer Set Programming (ASP). 3D-NCDC-ASP extends Cardinal Directional Calculus (CDC) with a new type of default constraints, andNCDC-ASP to 3D. 3D-NCDC-ASP provides a flexible platform offering different types of reasoning: Nonmonotonic reasoning with defaults, checking consistency of a set of constraints on 3D cardinal directions between objects, explaining inconsistencies, and inferring missing CDC relations. We prove the soundness of 3D-NCDC-ASP, and illustrate its usefulness with applications.
C1 [Izmirlioglu, Yusuf; Erdem, Esra] Sabanci Univ, Fac Engn & Nat Sci, TR-34956 Istanbul, Turkey.
C3 Sabanci University
RP Izmirlioglu, Y (corresponding author), Sabanci Univ, Fac Engn & Nat Sci, TR-34956 Istanbul, Turkey.
EM yizmirlioglu@sabanciuniv.edu; esra.erdem@sabanciuniv.edu
RI Izmirlioglu, Yusuf/HLH-8350-2023; Erdem, Esra/I-4587-2012
OI Izmirlioglu, Yusuf/0000-0003-4740-5147; Erdem, Esra/0000-0001-8384-7810
FU Cost Action [CA17124]
FX We have benefited from useful discussions with Philippe Balbiani (on the
   use of ASP for qualitative reasoning about cardinal directions), Anthony
   Cohn, Volkan Patoglu and Subramanian Ramamoorthy (on applications of
   3D-nCDC in robotics), Stefania Costantini (on applications of 3D-nCDC in
   digital forensics), and Mehdi Nourbakhsh (on applications of 3D-nCDC in
   building design). This work is partially supported by Cost Action
   CA17124.
CR ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   Balbiani P, 2002, J LOGIC COMPUT, V12, P885, DOI 10.1093/logcom/12.5.885
   Baryannis G, 2018, THEOR PRACT LOG PROG, V18, P355, DOI 10.1017/S147106841800011X
   Borrmann A, 2010, P 8 EUR C PROD PROC, P61
   Brenton Christopher., 2016, OASIcs-OpenAccess Series in Informatics, V52
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Chen JA, 2007, LECT NOTES ARTIF INT, V4798, P623
   Chen J, 2015, KNOWL ENG REV, V30, P106, DOI 10.1017/S0269888913000350
   Cohn, 1997, GEOINFORMATICA, V1, P275, DOI [DOI 10.1023/A:1009712514511, 10.1023/a:1009712514511]
   Costantini S, 2019, ANN MATH ARTIF INTEL, V86, P193, DOI 10.1007/s10472-019-09632-y
   DAVID A., 1992, P KR
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dylla F, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3038927
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Goyal R.K., 1997, The Annual Assembly and the Summer Retreat of University Consortium fo r Geographic Information Systems Science, V3, P95
   HOU R., 2016, P ICEITI
   IZMIRLIOGLU Y, 2020, REASONING CARDINAL D
   Izmirlioglu Y, 2018, AAAI CONF ARTIF INTE, P1880
   Li CL, 2009, ICICTA: 2009 SECOND INTERNATIONAL CONFERENCE ON INTELLIGENT COMPUTATION TECHNOLOGY AND AUTOMATION, VOL I, PROCEEDINGS, P653, DOI 10.1109/ICICTA.2009.163
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Liu WM, 2010, ARTIF INTELL, V174, P951, DOI 10.1016/j.artint.2010.05.006
   Mota T, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1928
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Pais J., 2000, Spatial and Temporal Granularity. Papers from the AAAI Workshop. (Technical Report WS-00-08), P79
   Pascoal Antonio, 2018, ANNU REV CONTROL
   Skiadopoulos S, 2005, ARTIF INTELL, V163, P91, DOI 10.1016/j.artint.2004.10.010
   Skiadopoulos S, 2004, ARTIF INTELL, V152, P143, DOI 10.1016/S0004-3702(03)00137-1
   Walega PA, 2017, THEOR PRACT LOG PROG, V17, P205, DOI 10.1017/S1471068416000193
   Zampogiannis K, 2015, IEEE INT CONF ROBOT, P1389, DOI 10.1109/ICRA.2015.7139371
NR 32
TC 1
Z9 2
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2020
VL 20
IS 6
SI SI
BP 942
EP 957
AR PII S1471068420000411
DI 10.1017/S1471068420000411
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR3IT
UT WOS:000571456800010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Marynissen, S
   Bogaerts, B
   Denecker, M
AF MARYNISSEN, S. I. M. O. N.
   BOGAERTS, B. A. R. T.
   DENECKER, M. A. R. C.
TI Exploiting Game Theory for Analysing Justifications
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE justification theory; positional games; logic programming; non-monotonic
   logic
ID LOGIC; SEMANTICS
AB Justification theory is a unifying semantic framework. While it has its roots in non-monotonic logics, it can be applied to various areas in computer science, especially in explainable reasoning; its most central concept is a justification: an explanation why a property holds (or does not hold) in a model. In this paper, we continue the study of justification theory by means of three major contributions. The first is studying the relation between justification theory and game theory. We show that justification frameworks can be seen as a special type of games. The established connection provides the theoretical foundations for our next two contributions. The second contribution is studying under which condition two different dialects of justification theory (graphs as explanations vs trees as explanations) coincide. The third contribution is establishing a precise criterion of when a semantics induced by justification theory yields consistent results. In the past proving that such semantics were consistent took cumbersome and elaborate proofs. We show that these criteria are indeed satisfied for all common semantics of logic programming.
C1 [MARYNISSEN, S. I. M. O. N.; DENECKER, M. A. R. C.] Katholieke Univ Leuven, Leuven, Belgium.
   [MARYNISSEN, S. I. M. O. N.; BOGAERTS, B. A. R. T.] Vrije Univ Brussel, Brussels, Belgium.
C3 KU Leuven; Vrije Universiteit Brussel
RP Marynissen, S (corresponding author), Katholieke Univ Leuven, Leuven, Belgium.; Marynissen, S (corresponding author), Vrije Univ Brussel, Brussels, Belgium.
RI Denecker, Marc/O-1056-2013
OI Denecker, Marc/0000-0002-0422-7339; Marynissen,
   Simon/0000-0002-2894-1377; Bogaerts, Bart/0000-0003-3460-4251
CR Blair HA, 1995, LECT NOTES ARTIF INT, V928, P99
   Bogaerts B, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1737
   Denecker Marc, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P250, DOI 10.1007/978-3-319-23264-5_22
   Denecker M, 2000, SPRINGER INT SER ENG, V597, P127
   DENECKER M., 1993, THESIS
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Galanaki C, 2008, ANN PURE APPL LOGIC, V151, P70, DOI 10.1016/j.apal.2007.10.004
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P250, DOI 10.1007/978-3-642-02846-5_23
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Gimbert H, 2005, LECT NOTES COMPUT SC, V3653, P428, DOI 10.1007/11539452_33
   Gimbert H, 2004, LECT NOTES COMPUT SC, V3153, P686
   Lapauw R, 2020, LECT NOTES COMPUT SC, V11990, P449, DOI 10.1007/978-3-030-39322-9_21
   Loddo JV, 2000, LECT NOTES ARTIF INT, V1955, P207
   MARTIN DA, 1975, ANN MATH, V102, P363, DOI 10.2307/1971035
   Marynissen S., 2018, Proceedings of 17th International Workshop on Non-Monotonic Reasoning, NMR 2018, P41
   Marynissen S, 2020, THEOR PRACT LOG PROG, V20, P880, DOI 10.1017/S1471068420000186
   Miller T, 2019, ARTIF INTELL, V267, P1, DOI 10.1016/j.artint.2018.07.007
   Soare RI, 2016, THEOR APPL COMPUT, P217, DOI 10.1007/978-3-642-31933-4_15
   VANEMDEN MH, 1986, J LOGIC PROGRAM, V3, P37, DOI 10.1016/0743-1066(86)90003-8
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
NR 20
TC 4
Z9 4
U1 1
U2 9
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2020
VL 20
IS 6
SI SI
BP 880
EP 894
AR PII S1471068420000186
DI 10.1017/S1471068420000186
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR3IT
UT WOS:000571456800006
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Dodaro, C
   Ricca, F
AF Dodaro, Carmine
   Ricca, Francesco
TI The External Interface for Extending WASP
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE knowledge representation and reasoning; answer set programming;
   application programming interface; propagators; choice heuristics
ID ANSWER SET; SAT; INTEGRATION
AB Answer set programming (ASP) is a successful declarative formalism for knowledge representation and reasoning. The evaluation of ASP programs is nowadays based on the conflict-driven clause learning (CDCL) backtracking search algorithm. Recent work suggested that the performance of CDCL-based implementations can be considerably improved on specific benchmarks by extending their solving capabilities with custom heuristics and propagators. However, embedding such algorithms into existing systems requires expert knowledge of the internals of ASP implementations. The development of effective solver extensions can be made easier by providing suitable programming interfaces. In this paper, we present the interface for extending the CDCL-based ASP solver wasp. The interface is bothgeneral, that is, it can be used for providing either new branching heuristics or propagators, andexternal, that is, the implementation of new algorithms requires no internal modifications of wasp. Moreover, we review the applications of the interface witnessing it can be successfully used to extend wasp for solving effectively hard instances of both real-world and synthetic problems.
C1 [Dodaro, Carmine] Univ Genoa, DIBRIS, Genoa, Italy.
   [Ricca, Francesco] Univ Calabria, DEMACS, Arcavacata Di Rende, Italy.
C3 University of Genoa; University of Calabria
RP Dodaro, C (corresponding author), Univ Genoa, DIBRIS, Genoa, Italy.
EM dodaro@dibris.unige.it; ricca@mat.unical.it
RI Dodaro, Carmine/AAE-5732-2020
OI Dodaro, Carmine/0000-0002-5617-5286
FU Italian Ministry for Economic Development (MISE) under project
   "PIUCultura - Paradigmi Innovativi per l'Utilizzo della Cultura" within
   the call "HORIZON2020" PON IC 2014-2020 [F/020016/0102/X27]; Italian
   Ministry for Economic Development (MISE) under project "Smarter
   Solutions in the Big Data World (S2BDW)" within the call "HORIZON2020"
   PON IC 2014-2020 [F/050389/0103/X32]
FX The paper has been partially supported by the Italian Ministry for
   Economic Development (MISE) under project "PIUCultura - Paradigmi
   Innovativi per l'Utilizzo della Cultura" (no. F/020016/0102/X27), and
   under project "Smarter Solutions in the Big Data World (S2BDW)" (no.
   F/050389/0103/X32) funded within the call "HORIZON2020" PON I&C
   2014-2020. Authors are grateful to Mario Alviano, Bernardo Cuteri,
   Philip Gasteiger, Nicola Leone, Benjamin Musitsch, Peter Schuller, and
   Kostyantyn Shchekotykhin for their suggestions.
CR Abseher M, 2016, FUND INFORM, V147, P1, DOI 10.3233/FI-2016-1396
   Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   Alviano M., 2016, P 25 INT JOINT C ART, P886
   Alviano M, 2018, THEOR PRACT LOG PROG, V18, P301, DOI 10.1017/S1471068418000133
   Alviano M, 2017, LECT NOTES ARTIF INT, V10640, P468, DOI 10.1007/978-3-319-70169-1_35
   Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P54, DOI 10.1007/978-3-642-40564-8_6
   Balduccini M, 2017, THEOR PRACT LOG PROG, V17, P462, DOI 10.1017/S1471068417000102
   Balduccini M, 2011, AI COMMUN, V24, P147, DOI 10.3233/AIC-2011-0493
   Balduccini Marcello., 2001, LPNMR, P439
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Bartholomew M., 2013, P 23 INT JOINT C ART, P718
   Bartholomew M, 2014, LECT NOTES ARTIF INT, V8761, P529, DOI 10.1007/978-3-319-11558-0_37
   Baselice S, 2005, LECT NOTES COMPUT SC, V3668, P52, DOI 10.1007/11562931_7
   Biere A, 2015, LECT NOTES COMPUT SC, V9340, P405, DOI 10.1007/978-3-319-24318-4_29
   Bomanson Jori, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P143, DOI 10.1007/978-3-319-23264-5_13
   Bomanson J, 2016, FUND INFORM, V147, P63, DOI 10.3233/FI-2016-1398
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Caniupán M, 2010, DATA KNOWL ENG, V69, P545, DOI 10.1016/j.datak.2010.01.005
   Cuteri Bernardo, 2017, THEOR PRACT LOG PROG, V17, P780
   Derler Y, 2016, AI MAG, V37, P45
   Dodaro C., 2016, CEUR WORKSHOP P, V1745, P1
   DODARO C., 2016, THEOR PRACT LOG PROG, V16, P5
   Dodaro C., 2015, THESIS
   Dodaro C., 2011, CILC, P99
   Dodaro C, 2017, LECT NOTES ARTIF INT, V10377, P301, DOI 10.1007/978-3-319-61660-5_27
   Dodaro C, 2015, LECT NOTES COMPUT SC, V9209, P77, DOI 10.1007/978-3-319-22002-4_7
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Erdem E, 2016, AI MAG, V37, P53, DOI 10.1609/aimag.v37i3.2678
   Erdem E, 2015, THEOR PRACT LOG PROG, V15, P35, DOI 10.1017/S1471068413000598
   Friedrich G., 2015, JOINT INVITED TALK I
   Garro A, 2006, AI COMMUN, V19, P137
   Gavanelli M, 2015, J LOGIC COMPUT, V25, P1351, DOI 10.1093/logcom/ext065
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P531, DOI 10.1007/978-3-319-23264-5_44
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P368, DOI 10.1007/978-3-319-23264-5_31
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P384, DOI 10.1007/978-3-319-23264-5_32
   Gebser M., 2013, AAAI C ART INT
   Gebser M., 2013, INT JOINT C ART INT
   Gebser M., 2016, TECHNICAL COMMUNICAT, DOI [10.4230/OASIcs.ICLP.2016.2, DOI 10.4230/OASICS.ICLP.2016.2]
   Gebser M., 2012, Answer Set Solving in Practice
   Gebser M., 2014, CORR
   Gebser M, 2017, J ARTIF INTELL RES, V60, P41, DOI 10.1613/jair.5373
   Gebser M, 2016, AAAI CONF ARTIF INTE, P4327
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gebser M, 2008, FRONT ARTIF INTEL AP, V178, P15, DOI 10.3233/978-1-58603-891-5-15
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Janhunen T, 2016, AAAI CONF ARTIF INTE, P978
   Janhunen T, 2016, AI MAG, V37, P13, DOI 10.1609/aimag.v37i3.2671
   Kaufmann B, 2016, AI MAG, V37, P25, DOI 10.1609/aimag.v37i3.2672
   Koponen L, 2015, THEOR PRACT LOG PROG, V15, P604, DOI 10.1017/S1471068415000265
   Lifschitz V, 2016, AI MAG, V37, P7, DOI 10.1609/aimag.v37i3.2670
   Manna M, 2015, THEOR PRACT LOG PROG, V15, P696, DOI 10.1017/S1471068415000320
   Manna M, 2013, THEOR PRACT LOG PROG, V13, P227, DOI 10.1017/S1471068411000640
   Maratea Marco, 2012, Logics in Artificial Intelligence. Proceedings of the 13th European Conference (JELIA 2012), P484, DOI 10.1007/978-3-642-33353-8_39
   Marques-Silva JP, 1999, IEEE T COMPUT, V48, P506, DOI 10.1109/12.769433
   Moskewicz MW, 2001, DES AUT CON, P530, DOI 10.1109/DAC.2001.935565
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Ostrowski M, 2012, THEOR PRACT LOG PROG, V12, P485, DOI 10.1017/S1471068412000142
   Schüller P, 2016, FUND INFORM, V149, P159, DOI 10.3233/FI-2016-1446
   Susman B., 2016, OASICS, V52
   Van Beek P., 2006, Foundations of artificial intelligence: vol. 2, Handbook of constraint programming, V2
   Zhang LT, 2001, ICCAD 2001: IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN, DIGEST OF TECHNICAL PAPERS, P279, DOI 10.1109/ICCAD.2001.968634
NR 63
TC 10
Z9 10
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2020
VL 20
IS 2
BP 225
EP 248
AR PII S1471068418000558
DI 10.1017/S1471068418000558
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA OC6NY
UT WOS:000579274100003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Berthold, M
   Gonçalves, R
   Knorr, M
   Leite, J
AF Berthold, Matti
   Goncalves, Ricardo
   Knorr, Matthias
   Leite, Joao
TI A Syntactic Operator for Forgetting that Satisfies Strong Persistence
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Answer Set Programming; Forgetting; Strong Persistence; Syntactic
   Operator
AB Whereas the operation of forgetting has recently seen a considerable amount of attention in the context of Answer Set Programming (ASP), most of it has focused on theoretical aspects, leaving the practical issues largely untouched. Recent studies include results about what sets of properties operators should satisfy, as well as the abstract characterization of several operators and their theoretical limits. However, no concrete operators have been investigated.
   In this paper, we address this issue by presenting the first concrete operator that satisfies strong persistence - a property that seems to best capture the essence of forgetting in the context of ASP - whenever this is possible, and many other important properties. The operator is syntactic, limiting the computation of the forgetting result to manipulating the rules in which the atoms to be forgotten occur, naturally yielding a forgetting result that is close to the original program.
C1 [Berthold, Matti] Tech Univ Dresden, Dresden, Germany.
   [Berthold, Matti] Univ Leipzig, Leipzig, Germany.
   [Goncalves, Ricardo; Knorr, Matthias; Leite, Joao] Univ Nova Lisboa, Dept Informat, NOVA LINCS, Lisbon, Portugal.
C3 Technische Universitat Dresden; Leipzig University; Universidade Nova de
   Lisboa
RP Berthold, M (corresponding author), Tech Univ Dresden, Dresden, Germany.; Berthold, M (corresponding author), Univ Leipzig, Leipzig, Germany.
RI Leite, Joao/HGB-4757-2022; Knorr, Matthias/J-4220-2012; Goncalves,
   Ricardo/M-4645-2013; Leite, Joao/C-6162-2009
OI Knorr, Matthias/0000-0003-1826-1498; Goncalves,
   Ricardo/0000-0003-4289-7197; Leite, Joao/0000-0001-6786-7360
FU FCT [PTDC/CCI-INF/32219/2017, UID/CEC/04516/2019]; International MSc
   Program in Computational Logic (MCL); Fundação para a Ciência e a
   Tecnologia [PTDC/CCI-INF/32219/2017] Funding Source: FCT
FX M. Berthold was partially supported by the International MSc Program in
   Computational Logic (MCL). R. Goncalves, M. Knorr, and J. Leite were
   partially supported by FCT projects FORGET (PTDC/CCI-INF/32219/2017) and
   NOVA LINCS (UID/CEC/04516/2019).
CR Alferes JJ, 2013, LECT NOTES COMPUT SC, V8148, P36, DOI 10.1007/978-3-642-40564-8_4
   [Anonymous], 2011, IJCAI 2011 P 22 INT
   BERTHOLD M, 2019, ABS190712501 CORR
   Brass S, 1999, J LOGIC PROGRAM, V40, P1, DOI 10.1016/S0743-1066(98)10030-4
   CABALAR P, 2007, P ICLP
   Cabalar P, 2007, THEOR PRACT LOG PROG, V7, P745, DOI 10.1017/S1471068407003110
   Delgrande JP, 2015, AAAI CONF ARTIF INTE, P1482
   Eiter T, 2008, ARTIF INTELL, V172, P1644, DOI 10.1016/j.artint.2008.05.002
   Eiter T, 2019, KUNSTL INTELL, V33, P9, DOI 10.1007/s13218-018-0564-6
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Goncalves R., 2019, P AAAI
   Gonçalves R, 2017, LECT NOTES ARTIF INT, V10423, P643, DOI 10.1007/978-3-319-65340-2_53
   Gonçalves R, 2017, THEOR PRACT LOG PROG, V17, P837, DOI 10.1017/S1471068417000382
   Gonçalves R, 2016, FIFTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P135
   Gonçalves R, 2016, FRONT ARTIF INTEL AP, V285, P957, DOI 10.3233/978-1-61499-672-9-957
   Inoue K, 1998, J LOGIC PROGRAM, V35, P39, DOI 10.1016/S0743-1066(97)10001-2
   INOUE K., 2004, P JELIA
   Knorr M, 2014, LECT NOTES ARTIF INT, V8761, P412, DOI 10.1007/978-3-319-11558-0_29
   Kontchakov R, 2010, ARTIF INTELL, V174, P1093, DOI 10.1016/j.artint.2010.06.003
   Lang J, 2003, J ARTIF INTELL RES, V18, P391, DOI 10.1613/jair.1113
   Lang J, 2010, ARTIF INTELL, V174, P799, DOI 10.1016/j.artint.2010.04.023
   Leite J, 2017, LECT NOTES ARTIF INT, V10377, P10, DOI 10.1007/978-3-319-61660-5_2
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lin FZ, 1997, ARTIF INTELL, V92, P131, DOI 10.1016/S0004-3702(96)00044-6
   Rajaratnam D., 2014, P KR
   Rossi Y, 2013, IJCAI 2013 P 23 INT, P1162
   SLOTA M, 2011, P LPNMR
   Wang YS, 2014, J ARTIF INTELL RES, V50, P31, DOI 10.1613/jair.4297
   Wang Z, 2010, ANN MATH ARTIF INTEL, V58, P117, DOI 10.1007/s10472-010-9187-9
   Zhang Y, 2006, ARTIF INTELL, V170, P739, DOI 10.1016/j.artint.2006.02.002
   Zhang Y, 2009, ARTIF INTELL, V173, P1525, DOI 10.1016/j.artint.2009.07.005
NR 31
TC 8
Z9 8
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 1038
EP 1055
DI 10.1017/S1471068419000346
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500026
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kaminski, T
   Eiter, T
   Inoue, K
AF Kaminski, Tobias
   Eiter, Thomas
   Inoue, Katsumi
TI Exploiting Answer Set Programming with External Sources for
   Meta-Interpretive Learning
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
DE Inductive Logic Programming; Meta-Interpretive Learning; Answer Set
   Programming
AB Meta-Interpretive Learning (MIL) learns logic programs from examples by instantiating meta-rules, which is implemented by the Metagol system based on Prolog. Viewing MIL-problems as combinatorial search problems, they can alternatively be solved by employing Answer Set Programming (ASP), which may result in performance gains as a result of efficient conflict propagation. However, a straightforward ASP-encoding of MIL results in a huge search space due to a lack of procedural bias and the need for grounding. To address these challenging issues, we encode MIL in the HEX-formalism, which is an extension of ASP that allows us to outsource the background knowledge, and we restrict the search space to compensate for a procedural bias in ASP. This way, the import of constants from the background knowledge can for a given type of meta-rules be limited to relevant ones. Moreover, by abstracting from term manipulations in the encoding and by exploiting the HEX interface mechanism, the import of such constants can be entirely avoided in order to mitigate the grounding bottleneck. An experimental evaluation shows promising results.
C1 [Kaminski, Tobias; Eiter, Thomas] Tech Univ Vienna TU Wien, Vienna, Austria.
   [Inoue, Katsumi] Natl Inst Informat, Tokyo, Japan.
C3 Technische Universitat Wien; Research Organization of Information &
   Systems (ROIS); National Institute of Informatics (NII) - Japan
RP Kaminski, T (corresponding author), Tech Univ Vienna TU Wien, Vienna, Austria.
EM kaminski@kr.tuwien.ac.at; eiter@kr.tuwien.ac.at; inoue@nii.ac.jp
RI Eiter, Thomas/ABE-9263-2021
OI Inoue, Katsumi/0000-0002-2717-9122
FU Austrian Science Fund (FWF) project [P27730, W1255-N23]; NII
   International Internship Program; Austrian Science Fund (FWF) [P27730]
   Funding Source: Austrian Science Fund (FWF)
FX This research has been supported by the Austrian Science Fund (FWF)
   projects P27730 and W1255-N23. Tobias Kaminski was supported by the NII
   International Internship Program. We thank the reviewers for their
   efforts and constructive suggestions, and Andrew Cropper for helpful
   comments.
CR [Anonymous], 1977, ACM SIGART Bulletin, DOI DOI 10.1145/1045343.1045369.URL
   Cropper A., 2015, P INT C IND LOG PROG, P46
   CROPPER A., 2014, LNCS, V9046, P62
   Cropper A., 2016, P IJCAI NEW YORK NY, P1418
   Cropper A., 2016, Metagol System
   Cropper A, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P3423
   Dai W-Z, 2017, P INT C IND LOG PROG, P46
   Dietterich TG, 2008, MACH LEARN, V73, P3, DOI 10.1007/s10994-008-5079-1
   Eiter T, 2016, THEOR PRACT LOG PROG, V16, P418, DOI 10.1017/S1471068415000113
   Eiter T, 2016, ARTIF INTELL, V233, P84, DOI 10.1016/j.artint.2016.01.003
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   FARQUHAR C., 2015, CEUR WORKSHOP P, V1636, P17
   Gebser M, 2016, ICLP TECHNICAL COMMU, V52
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gelfond M., 1991, NEW GENERAT COMPUT, V9, P365, DOI DOI 10.1007/BF03037169
   Law M, 2014, LECT NOTES ARTIF INT, V8761, P311, DOI 10.1007/978-3-319-11558-0_22
   Lin DH, 2014, FRONT ARTIF INTEL AP, V263, P525, DOI 10.3233/978-1-61499-419-0-525
   Michie D., 1994, TECH REP
   Muggleton SH, 2015, MACH LEARN, V100, P49, DOI 10.1007/s10994-014-5471-y
   Muggleton SH, 2014, MACH LEARN, V94, P25, DOI 10.1007/s10994-013-5358-3
   Otero R. P., 2001, Inductive Logic Programming. 11th International Conference, ILP 2001. Proceedings (Lecture Notes in Artificial Intelligence Vol.2157), P193
   Ray O, 2009, J APPL LOGIC, V7, P329, DOI 10.1016/j.jal.2008.10.007
   Tamaddoni-Nezhad A., 2014, LECT NOTES COMPUTER, V9046, P154
NR 23
TC 19
Z9 19
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 571
EP 588
DI 10.1017/S1471068418000261
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400018
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Lopez-Garcia, P
   Darmawan, L
   Klemen, M
   Liqat, U
   Bueno, F
   Hermenegildo, MV
AF Lopez-Garcia, P.
   Darmawan, L.
   Klemen, M.
   Liqat, U.
   Bueno, F.
   Hermenegildo, M., V
TI Interval-based resource usage verification by translation into Horn
   clauses and an application to energy consumption
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE static analysis; resource usage analysis and verification; Horn
   clause-based analysis and verification; energy consumption; program
   verification and debugging
ID ABSTRACT INTERPRETATION; CHECKING
AB Many applications require conformance with specifications that constrain the use of resources, such as execution time, energy, bandwidth, etc. We present a configurable framework for static resource usage verification where specifications can include data size-dependent resource usage functions, expressing both lower and upper bounds. Ensuring conformance with respect to such specifications is an undecidable problem. Therefore, to statically check such specifications, our framework infers the same type of resource usage functions, which safely approximate the actual resource usage of the program, and compares them against the specification. We review how this framework supports several languages and compilation output formats by translating them to an intermediate representation based on Horn clauses and using the configurability of the framework to describe the resource semantics of the input language. We provide a detailed formalization and extend the framework so that both resource usage specification and analysis/verification output can include preconditions expressing intervals for the input data sizes for which assertions are intended to hold, proved, or disproved. Most importantly, we also extend the classes of functions that can be checked. We also report on and provide results from an implementation within the Ciao/CiaoPP framework, as well as on a practical tool built by instantiating this framework for the verification of energy consumption specifications for imperative/embedded programs. Finally, we show as an example how embedded software developers can use this tool, in particular, for determining values for program parameters that ensure meeting a given energy budget while minimizing the loss in quality of service.
C1 [Lopez-Garcia, P.; Darmawan, L.; Klemen, M.; Liqat, U.; Hermenegildo, M., V] IMDEA Software Inst, Madrid, Spain.
   [Lopez-Garcia, P.] Spanish Council Sci Res CSIC, Madrid, Spain.
   [Klemen, M.; Liqat, U.; Bueno, F.; Hermenegildo, M., V] UPM, Madrid, Spain.
C3 IMDEA Software Institute; Consejo Superior de Investigaciones
   Cientificas (CSIC); Universidad Politecnica de Madrid
RP Lopez-Garcia, P (corresponding author), IMDEA Software Inst, Madrid, Spain.; Lopez-Garcia, P (corresponding author), Spanish Council Sci Res CSIC, Madrid, Spain.
EM pedro.lopez@imdea.org; luthfi.darmawan@imdea.org;
   maximiliano.klemen@imdea.org; umer.liqat@imdea.org; bueno@fi.upm.es;
   manuel.hermenegildo@imdea.org
RI Lopez-Garcia, Pedro/KIA-1704-2024; Lopez-Garcia, Pedro/AAH-4048-2021
OI Lopez-Garcia, Pedro/0000-0002-1092-2071; Liqat, Umer/0000-0001-9104-8410
FU EU FP7 [318337]; Spanish MINECO [TIN2012-39391, TIN2015-67522-C3-1-R];
   Madrid N-GREENS program [M141047003]
FX This research was partially funded by EU FP7 318337 ENTRA, Spanish
   MINECO TIN2012-39391 StrongSoft, and TIN2015-67522-C3-1-R TRACES
   projects, and the Madrid M141047003 N-GREENS program.
CR Albert E, 2015, SCI COMPUT PROGRAM, V111, P483, DOI 10.1016/j.scico.2014.12.001
   Albert E, 2010, LECT NOTES COMPUT SC, V6324, P1
   [Anonymous], 2009, Programming XC on XMOS devices
   Bjorner N., 2014, P WORKSH HORN CLAUS
   BOURDONCLE F, 1993, SIGPLAN NOTICES, V28, P46, DOI 10.1145/173262.155095
   Bueno F., 1997, PROC 3 INT WS AUTOMA, P155
   Comini M, 1999, J LOGIC PROGRAM, V39, P43, DOI 10.1016/S0743-1066(98)10033-X
   Comini M., 1995, 1995 INT LOG PROGR S, P275
   Cousot P, 2003, LECT NOTES COMPUT SC, V2575, P20
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Dart Philip W., 1992, TYPES LOGIC PROGRAMM, P157
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Debray S, 1997, LOGIC PROGRAMM, P291
   DEBRAY SK, 1990, SIGPLAN NOTICES, V25, P174, DOI 10.1145/93548.93564
   DEBRAY SK, 1993, ACM T PROGR LANG SYS, V15, P826, DOI 10.1145/161468.161472
   Fähndrich M, 2011, LECT NOTES COMPUT SC, V6528, P10
   Galassi M., 2009, GNU Scientific Library Reference Manual, V3rd edn
   Georgiou K, 2017, ACM T ARCHIT CODE OP, V14, DOI 10.1145/3046679
   Gleich David, 2005, Finite Calculus: A Tutorial for Solving Nasty Sums
   Grebenshchikov S, 2012, LECT NOTES COMPUT SC, V7214, P549, DOI 10.1007/978-3-642-28756-5_46
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Hermenegildo MV, 2005, SCI COMPUT PROGRAM, V58, P115, DOI 10.1016/j.scico.2005.02.006
   Hermenegildo MV, 1999, LOGIC PROGRAMM, P54
   Hojjat Hossein, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P247, DOI 10.1007/978-3-642-32759-9_21
   Kafle B, 2016, LECT NOTES COMPUT SC, V9779, P261, DOI 10.1007/978-3-319-41528-4_14
   Kerrison S, 2015, ACM T EMBED COMPUT S, V14, DOI 10.1145/2700104
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Lichtenstein Y., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P512
   Liqat U., 2016, Foundational and Practical Aspects of Resource Analysis. 4th International Workshop, FOPARA 2015. Revised Selected Papers: LNCS 9964, P81, DOI 10.1007/978-3-319-46559-3_5
   Liqat U, 2014, LECT NOTES COMPUT SC, V8901, P72, DOI 10.1007/978-3-319-14125-1_5
   Lopez-Garcia Pedro, 2012, Foundational and Practical Aspects of Resource Analysis. Second International Workshop, FOPARA 2011. Revised Selected Papers, P54, DOI 10.1007/978-3-642-32495-6_4
   Lopez-Garcia P., 2015, P WORKSH HIGH PERF E
   Lopez-Garcia P., 2014, 318337 ENTRA FET
   Lopez-Garcia P, 2010, LEIBNIZ INT PR INFOR, V7, P104, DOI 10.4230/LIPIcs.ICLP.2010.104
   Méndez-Lojo M, 2008, LECT NOTES COMPUT SC, V4915, P154, DOI 10.1007/978-3-540-78769-3_11
   Mera E, 2009, LECT NOTES COMPUT SC, V5649, P281, DOI 10.1007/978-3-642-02846-5_25
   MUTHUKUMAR K, 1992, J LOGIC PROGRAM, V13, P315, DOI 10.1016/0743-1066(92)90035-2
   Navas J., 2007, LECT NOTES COMPUTER, V4670
   Navas J., 2008, 6 NASA LANGLEY FORMA, P29
   Navas J, 2009, ELECTRON NOTES THEOR, V253, P65, DOI 10.1016/j.entcs.2009.11.015
   Nguyen PC, 2015, ACM SIGPLAN NOTICES, V50, P446, DOI 10.1145/2737924.2737971
   Puebla G, 2000, LECT NOTES COMPUT SC, V1870, P23
   Puebla G, 2000, LECT NOTES COMPUT SC, V1817, P273, DOI 10.1007/10720327_16
   Serrano A, 2014, THEOR PRACT LOG PROG, V14, P739, DOI 10.1017/S147106841400057X
   Tobin-Hochstadt S, 2012, ACM SIGPLAN NOTICES, V47, P537, DOI 10.1145/2398857.2384655
   Vaucheret C, 2002, LECT NOTES COMPUT SC, V2477, P102
NR 46
TC 17
Z9 17
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2018
VL 18
IS 2
SI SI
BP 167
EP 223
DI 10.1017/S1471068418000042
PG 57
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA GF5VA
UT WOS:000432034700003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bogaerts, B
   Janhunen, T
   Tasharrofi, S
AF Bogaerts, Bart
   Janhunen, Tomi
   Tasharrofi, Shahab
TI Stable-unstable semantics: Beyond NP with normal logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
DE disjunctive logic programming; polynomial hierarchy; quantified Boolean
   formulas
ID GENERALIZED QUANTIFIERS; MODEL SEMANTICS; ANSWER; SYSTEM; GRINGO
AB Standard answer set programming (ASP) targets at solving search problems from the first level of the polynomial time hierarchy (PH). Tackling search problems beyond NP using ASP is less straightforward. The class of disjunctive logic programs offers the most prominent way of reaching the second level of the PH, but encoding respective hard problems as disjunctive programs typically requires sophisticated techniques such as saturation or meta-interpretation. The application of such techniques easily leads to encodings that are inaccessible to non-experts. Furthermore, while disjunctive ASP solvers often rely on calls to a (co-)NP oracle, it may be difficult to detect from the input program where the oracle is being accessed. In other formalisms, such as Quantified Boolean Formulas (QBFs), the interface to the underlying oracle is more transparent as it is explicitly recorded in the quantifier prefix of a formula. On the other hand, ASP has advantages over QBFs from the modeling perspective. The rich high-level languages such as ASP-Core-2 offer a wide variety of primitives that enable concise and natural encodings of search problems. In this paper, we present a novel logic programming-based modeling paradigm that combines the best features of ASP and QBFs. We develop so-called combined logic programs in which oracles are directly cast as (normal) logic programs themselves. Recursive incarnations of this construction enable logic programming on arbitrarily high levels of the PH. We develop a proof-of-concept implementation for our new paradigm.
C1 [Bogaerts, Bart; Janhunen, Tomi; Tasharrofi, Shahab] Aalto Univ, HIIT, Dept Comp Sci, FI-00076 Aalto, Finland.
C3 Aalto University
RP Bogaerts, B (corresponding author), Aalto Univ, HIIT, Dept Comp Sci, FI-00076 Aalto, Finland.
EM bart.bogaerts@aalto.fi; tomi.janhunen@aalto.fi;
   shahab.tasharrofi@aalto.fi
RI Janhunen, Tomi/E-8362-2012
OI Bogaerts, Bart/0000-0003-3460-4251
CR Andres Benjamin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P69, DOI 10.1007/978-3-319-23264-5_7
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], 2008, KR
   Ben-Eliyahu R., 1994, Annals of Mathematics and Artificial Intelligence, V12, P53, DOI 10.1007/BF01530761
   Bogaerts B., 2016, P AAAI 16 WORKSH NP, P307
   Bogaerts B, 2016, FIFTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P74
   Bogaerts B, 2014, THEOR PRACT LOG PROG, V14, P477, DOI 10.1017/S1471068414000155
   Bomanson J, 2013, LECT NOTES COMPUT SC, V8148, P187, DOI 10.1007/978-3-642-40564-8_19
   Brooks DR, 2007, J AUTOM REASONING, V39, P471, DOI 10.1007/s10817-007-9082-1
   Bruynooghe M, 2015, THEOR PRACT LOG PROG, V15, P783, DOI 10.1017/S147106841400009X
   Calimeri F., 2013, TECH REP
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   Denecker M., 2012, LIPICS, V17, P277
   Denecker M, 2007, LECT NOTES COMPUT SC, V4483, P84, DOI 10.1007/978-3-540-72200-7_9
   Eiter T, 2006, THEOR PRACT LOG PROG, V6, P23, DOI 10.1017/S1471068405002577
   Eiter T, 1997, LECT NOTES ARTIF INT, V1265, P289
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   EMERSON EA, 1991, PROCEEDINGS - 32ND ANNUAL SYMPOSIUM ON FOUNDATIONS OF COMPUTER SCIENCE, P368, DOI 10.1109/SFCS.1991.185392
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P368, DOI 10.1007/978-3-319-23264-5_31
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Gebser M, 2015, THEOR PRACT LOG PROG, V15, P449, DOI 10.1017/S1471068415000150
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P821, DOI 10.1017/S1471068411000329
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M, 1996, INT J SOFTW ENG KNOW, V6, P89, DOI 10.1142/S0218194096000053
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Grasso G, 2009, LECT NOTES COMPUT SC, V5753, P591, DOI 10.1007/978-3-642-04238-6_63
   Heljanko K, 2012, J COMPUT SYST SCI, V78, P430, DOI 10.1016/j.jcss.2011.05.004
   Janhunen T., 2015, STAT COMPUTING
   Janhunen T, 2006, ACM T COMPUT LOG, V7, P1, DOI 10.1145/1119439.1119440
   Janhunen T, 2016, AAAI CONF ARTIF INTE, P978
   Koponen L, 2015, THEOR PRACT LOG PROG, V15, P604, DOI 10.1017/S1471068415000265
   LEONE N., 2001, P IJCAI 01 WORKSH PL
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   LINDSTROM P, 1966, THEORIA, V32, P186
   Mostowski A., 1957, Fundamenta Mathematicae, V44, P12, DOI 10.4064/fm-44-1-12-36
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Nogueira M., 2001, Practical Aspects of Declarative Languages. Third International Symposium, PADL 2001. Proceedings (Lecture Notes in Computer Science Vol.1990), P169
   Oikarinen E, 2006, FRONT ARTIF INTEL AP, V141, P412
   Ricca F, 2010, FUND INFORM, V105, P35, DOI 10.3233/FI-2010-357
   Stockmeyer L.J., 1973, P STOC 73, P1
   Tiihonen J., 2003, P 14 INT C ENG DESIG, P1290
NR 42
TC 10
Z9 11
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 570
EP 586
DI 10.1017/S1471068416000387
PN 5-6
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800005
OA Green Submitted, Green Accepted, Bronze
DA 2024-07-18
ER

PT J
AU Costantini, S
   Formisano, A
AF Costantini, Stefania
   Formisano, Andrea
TI Query answering in resource-based answer set semantics
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
DE Answer Set Programming; Procedural Semantics; Top-down Query-answering
ID NEGATION
AB In recent work we defined resource-based answer set semantics, which is an extension to answer set semantics stemming from the study of its relationship with linear logic. In fact, the name of the new semantics comes from the fact that in the linear-logic formulation every literal (including negative ones) were considered as a resource. In this paper, we propose a query-answering procedure reminiscent of Prolog for answer set programs under this extended semantics as an extension of XSB-resolution for logic programs with negation.(1) We prove formal properties of the proposed procedure.
   Under consideration for acceptance in TPLP.
C1 [Costantini, Stefania] Univ Aquila, DISIM, I-67100 Laquila, Italy.
   [Formisano, Andrea] Univ Perugia, DMI, GNCS, INdAM, I-06100 Perugia, Italy.
C3 University of L'Aquila; University of Perugia
RP Costantini, S (corresponding author), Univ Aquila, DISIM, I-67100 Laquila, Italy.
EM stefania.costantini@univaq.it; formis@dmi.unipg.it
RI Formisano, Andrea/B-7283-2013
CR [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   APT KR, 1994, J LOGIC PROGRAM, V20, P9, DOI 10.1016/0743-1066(94)90024-8
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Bonatti P.A., 2008, Proceedings of the 23rd national conference on Artificial Intelligence - Volume 1, AAAI'08, V1, P418
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   CHEN WD, 1993, J LOGIC PROGRAM, V17, P279, DOI 10.1016/0743-1066(93)90034-E
   Costantini Stefania, 2013, Journal of Applied Non-Classical Logic, V23, P49, DOI 10.1080/11663081.2013.798997
   Costantini S., 2016, ONLINE SUPPLEMENTARY
   Costantini S., 2014, P 29 IT C COMP LOG C
   Costantini S, 2015, FUND INFORM, V140, P279, DOI 10.3233/FI-2015-1255
   Costantini S, 2011, LECT NOTES ARTIF INT, V6645, P229
   Costantini S, 2010, J LOGIC COMPUT, V20, P533, DOI 10.1093/logcom/exp071
   Dix J., 1995, Fundamenta Informaticae, V22, P227
   Dix J., 1995, Fundamenta Informaticae, V22, P257
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Gebser M, 2006, LECT NOTES COMPUT SC, V4079, P11, DOI 10.1007/11799573_4
   Gebser M, 2009, J LOGIC COMPUT, V19, P539, DOI 10.1093/logcom/exn040
   Gelfond M, 2008, FOUND ARTIF INTELL, P285, DOI 10.1016/S1574-6526(07)03007-6
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Giunchiglia E, 2008, ANN MATH ARTIF INTEL, V53, P169, DOI 10.1007/s10472-009-9113-1
   Lin FZ, 2002, ARTIF INTELL, V140, P175, DOI 10.1016/S0004-3702(02)00227-8
   Lloyd JohnWylie., 1993, FDN LOGIC PROGRAMMIN, Vsecond
   Marek V. W., 1991, P 1 INT WORKSH LOG P, P35
   MAREK W, 1991, J ACM, V38, P588, DOI 10.1145/116825.116836
   Marple K, 2014, THEOR PRACT LOG PROG, V14, P415, DOI 10.1017/S1471068414000118
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Truszczynski M, 2007, LECT NOTES COMPUT SC, V4670, P76, DOI 10.1007/978-3-540-74610-2_6
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Wiktor Marek V., 1993, LOGIC PROGRAMMING NO, P115
NR 30
TC 6
Z9 6
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 619
EP 635
DI 10.1017/S1471068416000478
PN 5-6
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yamada, A
   Winkler, S
   Hirokawa, N
   Middeldorp, A
AF Yamada, Akihisa
   Winkler, Sarah
   Hirokawa, Nao
   Middeldorp, Aart
TI AC-KBO revisited
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Term rewriting; termination; associative-commutative theory;
   Knuth-Bendix order
ID TERMINATION; ORDERINGS; SYSTEMS
AB Equational theories that contain axioms expressing associativity and commutativity (AC) of certain operators are ubiquitous. Theorem proving methods in such theories rely on well-founded orders that are compatible with the AC axioms. In this paper, we consider various definitions of AC-compatible Knuth-Bendix orders. The orders of Steinbach and of Korovin and Voronkov are revisited. The former is enhanced to a more powerful version, and we modify the latter to amend its lack of monotonicity on non-ground terms. We further present new complexity results. An extension reflecting the recent proposal of subterm coefficients in standard Knuth-Bendix orders is also given. The various orders are compared on problems in termination and completion.
C1 [Yamada, Akihisa] AIST, Res Inst Secure Syst, Amagasaki, Hyogo, Japan.
   [Winkler, Sarah] Univ Innsbruck, Inst Comp Sci, A-6020 Innsbruck, Austria.
   [Hirokawa, Nao] JAIST, Sch Informat Sci, Nomi, Japan.
   [Middeldorp, Aart] Univ Innsbruck, Inst Comp Sci, A-6020 Innsbruck, Austria.
C3 National Institute of Advanced Industrial Science & Technology (AIST);
   University of Innsbruck; Japan Advanced Institute of Science &
   Technology (JAIST); University of Innsbruck
RP Middeldorp, A (corresponding author), Univ Innsbruck, Inst Comp Sci, A-6020 Innsbruck, Austria.
EM aart.middeldorp@uibk.ac.at
RI Yamada, Akihisa/AAQ-4545-2020
OI Winkler, Sarah/0000-0001-8114-3107; Middeldorp,
   Aart/0000-0001-7366-8464; Yamada, Akihisa/0000-0001-8872-2240; Hirokawa,
   Nao/0000-0002-8499-0501
FU Austrian Science Fund (FWF) [I963]; Japan Society for the Promotion of
   Science; KAKENHI Grant [25730004]; Grants-in-Aid for Scientific Research
   [25730004] Funding Source: KAKEN; Austrian Science Fund (FWF) [I963]
   Funding Source: Austrian Science Fund (FWF)
FX The research described in this paper is supported by the Austrian
   Science Fund (FWF) international project I963, the bilateral programs of
   the Japan Society for the Promotion of Science and the KAKENHI Grant No.
   25730004.
CR Alarcón B, 2010, LECT NOTES COMPUT SC, V6381, P35, DOI 10.1007/978-3-642-16310-4_4
   [Anonymous], 1970, Computational Problems in Abstract Algebra, DOI DOI 10.1016/B978-0-08-012975-4.50028-X
   Arts T, 2000, THEOR COMPUT SCI, V236, P133, DOI 10.1016/S0304-3975(99)00207-8
   BACHMAIR L, 1985, J SYMB COMPUT, V1, P329, DOI 10.1016/S0747-7171(85)80019-5
   BENCHERIFA A, 1987, SCI COMPUT PROGRAM, V9, P137, DOI 10.1016/0167-6423(87)90030-X
   Codish M, 2012, J AUTOM REASONING, V49, P53, DOI 10.1007/s10817-010-9211-0
   DERSHOWITZ N, 1982, THEOR COMPUT SCI, V17, P279, DOI 10.1016/0304-3975(82)90026-3
   Giesl J., 2001, Rewriting Techniques and Applications. 12th International Conference, RTA 2001. Proceedings (Lecture Notes in Computer Science Vol.2051), P93
   Korovin K, 2003, LECT NOTES ARTIF INT, V2741, P47
   Korovin K, 2003, INFORM COMPUT, V183, P165, DOI 10.1016/S0890-5401(03)00021-X
   KRISHNAMOORTHY MS, 1985, THEOR COMPUT SCI, V40, P323, DOI 10.1016/0304-3975(85)90175-6
   Kusakari K, 2001, IEICE T INF SYST, VE84D, P604
   Kusakari K, 2000, THESIS JAIST NOMI
   Lankford D, 1979, MTP3 LOUIS TU RUSTON
   Löchner B, 2006, J AUTOM REASONING, V36, P289, DOI 10.1007/s10817-006-9031-4
   Ludwig M, 2007, LECT NOTES ARTIF INT, V4790, P348, DOI 10.1007/978-3-540-75560-9_26
   Marché C, 2004, J SYMB COMPUT, V38, P873, DOI 10.1016/j.jsc.2004.02.003
   Middeldorp A, 1997, THEOR COMPUT SCI, V175, P127, DOI 10.1016/S0304-3975(96)00172-7
   Rubio A, 2002, INFORM COMPUT, V178, P515, DOI 10.1006/inco.2002.3158
   Schrijver A., 1998, THEORY LINEAR INTEGE
   STEINBACH J, 1990, LECT NOTES COMPUT SC, V463, P372
   Thiemann R., 2012, LIPICS, V15, P339, DOI [DOI 10.4230/LIPICS.RTA.2012.339, 10.4230/LIPIcs.RTA.2012.339]
   Winkler S., 2013, THESIS UIBK INNSBRUC
   Winkler S, 2012, LECT NOTES COMPUT SC, V7180, P420, DOI 10.1007/978-3-642-28717-6_33
   Yamada A, 2014, LECT NOTES COMPUT SC, V8475, P319, DOI 10.1007/978-3-319-07151-0_20
   Zankl H, 2009, J AUTOM REASONING, V43, P173, DOI 10.1007/s10817-009-9131-z
NR 26
TC 2
Z9 2
U1 1
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2016
VL 16
BP 163
EP 188
DI 10.1017/S1471068415000083
PN 2
PG 26
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA DG3KX
UT WOS:000371969300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Calautti, M
   Greco, S
   Spezzano, F
   Trubitsyna, I
AF Calautti, Marco
   Greco, Sergio
   Spezzano, Francesca
   Trubitsyna, Irina
TI Checking termination of bottom-up evaluation of logic programs with
   function symbols
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Logic programming with function symbols; bottom-up execution; program
   termination; stable models
ID OPTIMIZATION; QUERIES; ASP
AB Recently, there has been an increasing interest in the bottom-up evaluation of the semantics of logic programs with complex terms. The presence of function symbols in the program may render the ground instantiation infinite, and finiteness of models and termination of the evaluation procedure, in the general case, are not guaranteed anymore. Since the program termination problem is undecidable in the general case, several decidable criteria (called program termination criteria) have been recently proposed. However, current conditions are not able to identify even simple programs, whose bottom-up execution always terminates. The paper introduces new decidable criteria for checking termination of logic programs with function symbols under bottom-up evaluation, by deeply analyzing the program structure. First, we analyze the propagation of complex terms among arguments by means of the extended version of the argument graph called propagation graph. The resulting criterion, called G-acyclicity, generalizes most of the decidable criteria proposed so far. Next, we study how rules may activate each other and define a more powerful criterion, called safety. This criterion uses the so-called safety function able to analyze how rules may activate each other and how the presence of some arguments in a rule limits its activation. We also study the application of the proposed criteria to bound queries and show that the safety criterion is well-suited to identify relevant classes of programs and bound queries. Finally, we propose a hierarchy of classes of terminating programs, called k-safety, where the k-safe class strictly includes the (k-1)-safe class.
C1 [Calautti, Marco; Greco, Sergio; Spezzano, Francesca; Trubitsyna, Irina] Univ Calabria, DIMES, I-87036 Arcavacata Di Rende, CS, Italy.
C3 University of Calabria
RP Calautti, M (corresponding author), Univ Calabria, DIMES, I-87036 Arcavacata Di Rende, CS, Italy.
EM calautti@dimes.unical.it; greco@dimes.unical.it;
   fspezzano@dimes.unical.it; trubitsyna@dimes.unical.it
RI Calautti, Marco/ABD-4482-2020; Trubitsyna, Irina/AAY-7265-2020
OI CALAUTTI, MARCO/0000-0003-0921-4040; TRUBITSYNA,
   Irina/0000-0002-9031-0672; Spezzano, Francesca/0000-0002-0361-9728;
   Greco, Sergio/0000-0003-2966-3484
CR Alviano M, 2010, THEOR PRACT LOG PROG, V10, P497, DOI 10.1017/S1471068410000244
   Arts T, 2000, THEOR COMPUT SCI, V236, P133, DOI 10.1016/S0304-3975(99)00207-8
   Baselice S, 2009, THEOR PRACT LOG PROG, V9, P213, DOI 10.1017/S147106840900372X
   BEERI C, 1991, J LOGIC PROGRAM, V10, P255, DOI 10.1016/0743-1066(91)90038-Q
   Bonatti PA, 2004, ARTIF INTELL, V156, P75, DOI [10.1016/j.artint.2004.02.001, 10.1016/j.artint.2004.02.002]
   Brockschmidt Marc, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P105, DOI 10.1007/978-3-642-31424-7_13
   Bruynooghe M, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1216374.1216378
   Calimeri F, 2008, LECT NOTES COMPUT SC, V5366, P407, DOI 10.1007/978-3-540-89982-2_37
   Codish M, 2005, LECT NOTES COMPUT SC, V3668, P326, DOI 10.1007/11562931_25
   De Schreye D, 1994, J LOGIC PROGRAM, V20, P199, DOI 10.1016/0743-1066(94)90027-2
   Endrullis J, 2008, J AUTOM REASONING, V40, P195, DOI 10.1007/s10817-007-9087-9
   Fagin R, 2005, THEOR COMPUT SCI, V336, P89, DOI 10.1016/j.tcs.2004.10.033
   Ferreira MCF, 1996, APPL ALGEBR ENG COMM, V7, P133, DOI 10.1007/s002000050024
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P260, DOI 10.1007/978-3-540-72200-7_23
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Greco G, 2005, THEOR PRACT LOG PROG, V5, P713, DOI 10.1017/S1471068404002273
   Greco S, 2003, IEEE T KNOWL DATA EN, V15, P368, DOI 10.1109/TKDE.2003.1185840
   Greco S., 2012, P INT C LOG PROGR TE, P323
   Greco S, 2011, PROC VLDB ENDOW, V4, P1158
   Greco S, 2010, PROC VLDB ENDOW, V3, P93, DOI 10.14778/1920841.1920858
   Krishnamurthy R, 1996, J COMPUT SYST SCI, V52, P100, DOI 10.1006/jcss.1996.0009
   Leone N, 2002, LECT NOTES ARTIF INT, V2424, P537, DOI 10.1007/3-540-45757-7_50
   Liang SL, 2013, THEOR PRACT LOG PROG, V13, P705, DOI 10.1017/S1471068413000446
   Lierler Y, 2009, LECT NOTES COMPUT SC, V5649, P489, DOI 10.1007/978-3-642-02846-5_40
   Marchiori M., 1996, Algebraic Methodology and Software Technology. 5th International Conference, AMAST '96. Proceedings, P375, DOI 10.1007/BFb0014328
   Marnette B, 2009, PODS'09: PROCEEDINGS OF THE TWENTY-EIGHTH ACM SIGMOD-SIGACT-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P13, DOI 10.1145/1559795.1559799
   MEIER M., 2009, P VLDB ENDOWMENT, V2, P970
   Nguyen MT, 2008, LECT NOTES COMPUT SC, V4915, P8, DOI 10.1007/978-3-540-78769-3_2
   Nishida N, 2010, APPL ALGEBR ENG COMM, V21, P177, DOI 10.1007/s00200-010-0122-4
   Ohlebusch E, 2001, APPL ALGEBR ENG COMM, V12, P73, DOI 10.1007/s002000100064
   Schneider-Kamp P, 2010, THEOR PRACT LOG PROG, V10, P365, DOI 10.1017/S1471068410000165
   Schneider-Kamp P, 2010, LECT NOTES COMPUT SC, V6037, P37, DOI 10.1007/978-3-642-12592-8_4
   Schneider-Kamp P, 2009, ACM T COMPUT LOG, V11, DOI 10.1145/1614431.1614433
   Serebrenik A, 2005, THEOR PRACT LOG PROG, V5, P355, DOI 10.1017/S1471068404002248
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Sternagel C, 2008, LECT NOTES COMPUT SC, V5117, P336, DOI 10.1007/978-3-540-70590-1_23
   Ströder T, 2011, LECT NOTES COMPUT SC, V6564, P184, DOI 10.1007/978-3-642-20551-4_12
   Syrjanen T., 2001, LOGIC PROGRAMMING NO, P267, DOI DOI 10.1007/3-540-45402-0_20
   Voets D, 2011, LECT NOTES COMPUT SC, V6564, P133, DOI 10.1007/978-3-642-20551-4_9
   Zantema H., 1995, Fundamenta Informaticae, V24, P89
   Zilli M. V., 1975, Calcolo, V12, P361, DOI 10.1007/BF02575754
NR 43
TC 7
Z9 7
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2015
VL 15
BP 854
EP 889
DI 10.1017/S1471068414000623
PN 6
PG 36
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA DA3JK
UT WOS:000367692800004
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Haykazyan, L
AF Haykazyan, Levon
TI Decidability of the Clark's completion semantics for monadic programs
   and queries
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE monadic programs; general programs; Clark's completion; decidability
ID LOGIC PROGRAMS
AB There are many different semantics for general logic programs (i.e. programs that use negation in the bodies of clauses). Most of these semantics are Turing complete (in a sense that can be made precise), implying that they are undecidable. To obtain decidability one needs to put additional restrictions on programs and queries. In logic programming it is natural to put restrictions on the underlying first-order language. In this note, we show the decidability of the Clark's completion semantics for monadic general programs and queries.
C1 Univ Oxford, Math Inst, Oxford OX2 6GG, England.
C3 University of Oxford
RP Haykazyan, L (corresponding author), Univ Oxford, Math Inst, Woodstock Rd, Oxford OX2 6GG, England.
EM haykazyanl@maths.ox.ac.uk
CR BORGER E, 1997, CLASSICAL DECISION P
   Clark K. L., 1978, Logic and data bases, P293
   Gurevich Y., 1966, Algebra and Logic, V5, P25
   Gurevich Y., 1976, J SYMBOLIC LOGIC, V21, P460
   KUNEN K, 1987, J LOGIC PROGRAM, V4, P289, DOI 10.1016/0743-1066(87)90007-0
   Lloyd J. W., 1984, Foundations of Logic Programming
   Matos AB, 1997, THEOR COMPUT SCI, V176, P175, DOI 10.1016/S0304-3975(96)00093-X
   Matsushita T, 2001, THEOR COMPUT SCI, V266, P59, DOI 10.1016/S0304-3975(00)00011-6
   Meyer A. R., 1975, LECT NOTES MATH, P132
   RABIN MO, 1969, T AM MATH SOC, V141, P1, DOI 10.2307/1995086
   Shepherdson J. C., 2002, LOGIC MEANING COMPUT, P365
NR 11
TC 0
Z9 0
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2015
VL 15
BP 402
EP 412
DI 10.1017/S1471068414000660
PN 3
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA CE3WZ
UT WOS:000351762100004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Jaeger, M
AF Jaeger, Manfred
TI Lower complexity bounds for lifted inference
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Probabilistic-logic models; lifted inference
AB One of the big challenges in the development of probabilistic relational (or probabilistic logical) modeling and learning frameworks is the design of inference techniques that operate on the level of the abstract model representation language, rather than on the level of ground, propositional instances of the model. Numerous approaches for such "lifted inference" techniques have been proposed. While it has been demonstrated that these techniques will lead to significantly more efficient inference on some specific models, there are only very recent and still quite restricted results that show the feasibility of lifted inference on certain syntactically defined classes of models. Lower complexity bounds that imply some limitations for the feasibility of lifted inference on more expressive model classes were established earlier in Jaeger (2000; Jaeger, M. 2000. On the complexity of inference about probabilistic relational models. Artificial Intelligence 117, 297-308). However, it is not immediate that these results also apply to the type of modeling languages that currently receive the most attention, i.e., weighted, quantifier-free formulas. In this paper we extend these earlier results, and show that under the assumption that NETIME not equal ETIME, there is no polynomial lifted inference algorithm for knowledge bases of weighted, quantifier-, and function-free formulas. Further strengthening earlier results, this is also shown to hold for approximate inference and for knowledge bases not containing the equality predicate.
C1 [Jaeger, Manfred] Aalborg Univ, Dept Comp Sci, DK-9220 Aalborg, Denmark.
C3 Aalborg University
RP Jaeger, M (corresponding author), Aalborg Univ, Dept Comp Sci, DK-9220 Aalborg, Denmark.
EM jaeger@cs.aau.dk
OI Jaeger, Manfred/0000-0002-5641-8153
CR [Anonymous], 2012, Proceedings of the 26th Conference on Artificial Intelligence
   Apsel U., 2011, UAI, P11
   Braz RD, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P1319
   Breese J.S., 1992, Computational Intelligence, V8, P624
   FAGIN R, 1976, J SYMBOLIC LOGIC, V41, P50, DOI 10.2307/2272945
   Fierens D., 2011, P C UNCERTAINTY ARTI, P211
   Friedman N, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P1300
   Gogate V, 2011, UAI, P256
   Jaeger M, 2000, ARTIF INTELL, V117, P297, DOI 10.1016/S0004-3702(99)00109-5
   Jaeger M., 1997, UAI, P266
   Jaeger M., 2012, P 2 INT WORKSH STAT
   Jaeger M., 2012, LOWER COMPLEXITY BOU
   Jha A., 2010, Advances in Neural Information Processing Systems 23, P973
   Johnson D. S., 1990, Algorithms and Complexity, VA, P67
   Jones N. D., 1972, STOC 72, P157
   Kersting K., 2001, Inductive Logic Programming. 11th International Conference, ILP 2001. Proceedings (Lecture Notes in Artificial Intelligence Vol.2157), P118
   Kisynski J, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P1922
   Liem Ngo, 1995, Uncertainty in Artificial Intelligence. Proceedings of the Eleventh Conference (1995), P419
   Milch B., 2008, AAAI08 P 23 NAT C AR, V2, P1062
   Milch B, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P1352
   POOLE D, 1993, ARTIF INTELL, V64, P81, DOI 10.1016/0004-3702(93)90061-F
   Poole D., 2003, IJCAI03 P 18 INT JOI, P985
   Richardson M, 2006, MACH LEARN, V62, P107, DOI 10.1007/s10994-006-5833-1
   Sato T., 1995, ICLP
   Singla P., 2010, P AAAI 10 WORKSH STA
   Taskar B., 2002, em Proceedings of the Eighteenth conference on Uncertainty in artificial intelligence, P485
   Van den Broeck G., 2011, IJCAI11 P 22 INT JOI, P2178
   Van den Broeck G., 2012, Proceedings of the Twenty-Sixth AAAI Conference on Artificial Intelligence, P1961
   Van den Broeck G., 2011, Advances in Neural Information Processing Systems, P1386
   Vennekens J, 2006, LECT NOTES ARTIF INT, V4160, P452, DOI 10.1007/11853886_37
NR 30
TC 10
Z9 11
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2015
VL 15
SI SI
BP 246
EP 263
DI 10.1017/S1471068413000707
PN 2
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA CB5LO
UT WOS:000349668800005
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Calimeri, F
   Ianni, G
   Ricca, F
AF Calimeri, Francesco
   Ianni, Giovambattista
   Ricca, Francesco
TI The third open answer set programming competition
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; logic programming; declarative languages;
   artificial intelligence competitions
ID LOGIC PROGRAMS; SOLVER; SYSTEM; SAT; SEMANTICS; MODELS
AB Answer Set Programming (ASP) is a well-established paradigm of declarative programming in close relationship with other declarative formalisms such as SAT Modulo Theories, Constraint Handling Rules, FO(.), PDDL and many others. Since its first informal editions, ASP systems have been compared in the now well-established ASP Competition. The Third (Open) ASP Competition, as the sequel to the ASP Competitions Series held at the University of Potsdam in Germany (2006-2007) and at the University of Leuven in Belgium in 2009, took place at the University of Calabria (Italy) in the first half of 2011. Participants competed on a pre-selected collection of benchmark problems, taken from a variety of domains as well as real world applications. The Competition ran on two tracks: the Model and Solve (M&S) Track, based on an open problem encoding, and open language, and open to any kind of system based on a declarative specification paradigm; and the System Track, run on the basis of fixed, public problem encodings, written in a standard ASP language. This paper discusses the format of the competition and the rationale behind it, then reports the results for both tracks. Comparison with the second ASP competition and state-of-the-art solutions for some of the benchmark domains is eventually discussed.
C1 [Calimeri, Francesco; Ianni, Giovambattista; Ricca, Francesco] Univ Calabria, Dipartimento Matemat, I-87030 Commenda Di Rende, Italy.
C3 University of Calabria
RP Calimeri, F (corresponding author), Univ Calabria, Dipartimento Matemat, I-87030 Commenda Di Rende, Italy.
EM calimeri@mat.unical.it; ianni@mat.unical.it; ricca@mat.unical.it
RI Ianni, Giovambattista/IQS-4399-2023; Ianni, Giovambattista/I-7826-2012;
   Calimeri, Francesco/J-1935-2012
OI Ianni, Giovambattista/0000-0003-0534-6425; Calimeri,
   Francesco/0000-0002-0866-0834
CR Aclasp, 2011, ACL SOURC
   Anger C, 2005, LECT NOTES ARTIF INT, V3835, P95, DOI 10.1007/11591191_8
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], 2011, 3 ASP COMPETITION FI
   [Anonymous], 1985, P 5 ACM SIGACT SIGMO, DOI DOI 10.1145/6012.15399
   [Anonymous], P ECAI 2010 WORKSH C
   [Anonymous], 2008, KR
   ASP-Draft, 2004, STEER COMM IN PRESS
   BALDUCCINI M., 2009, ASPOCP WORKSH ICLP
   Balduccini Marcello., 2001, LPNMR, P439
   Baral C, 2000, SPRINGER INT SER ENG, V597, P257
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Baral C., 2001, LOGIC PROGRAMMING NO, P186
   Bardadym V. A., 1996, Practice and Theory of Automated Timetabling. First International Conference. Selected Papers, P22
   BELL C, 1994, J ACM, V41, P1178, DOI 10.1145/195613.195637
   Ben-Eliyahu-Zohary R, 1997, ARTIF INTELL, V96, P421, DOI 10.1016/S0004-3702(97)00060-X
   Bomze I. M., 1999, HDB COMBINATORIAL OP, P1, DOI DOI 10.1007/978-1-4757-3023-4_1
   BOPPANA R, 1992, BIT, V32, P180, DOI 10.1007/BF01994876
   CADE-ATP, 2011, CADE ATP SYST COMP
   Cadoli M, 1997, IEEE T KNOWL DATA EN, V9, P448, DOI 10.1109/69.599933
   CALIMERI F., 2010, 3 ANSWER SET PROGRAM
   Calimeri F, 2011, LECT NOTES ARTIF INT, V6645, P388
   Caniupán M, 2010, DATA KNOWL ENG, V69, P545, DOI 10.1016/j.datak.2010.01.005
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   CHR, 2004, CONSTR HANDL RUL 200
   CPLEX, 2011, IBM ILOG CPLEX
   Dal Palù A, 2009, FUND INFORM, V96, P297, DOI 10.3233/FI-2009-180
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Dao-Tran M., 2010, KR 2010, P60
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Denecker M, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1342991.1342998
   Denecker M, 2009, LECT NOTES COMPUT SC, V5753, P637, DOI 10.1007/978-3-642-04238-6_75
   Dovier A, 2011, INTELL ARTIF, V5, P113, DOI 10.3233/IA-2011-0013
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Een N., 2006, J SATISFIABILITY BOO, V2, P1, DOI DOI 10.3233/SAT190014
   Eiter T, 2009, LECT NOTES COMPUT SC, V5689, P40, DOI 10.1007/978-3-642-03754-2_2
   Ellguth E, 2009, LECT NOTES COMPUT SC, V5753, P490, DOI 10.1007/978-3-642-04238-6_47
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   Fages F., 1994, Methods of Logic in Computer Science, V1, P51
   Feige U, 2004, SIAM J DISCRETE MATH, V18, P219, DOI 10.1137/S089548010240415X
   FODOR P., 2011, COMPUTING, P1
   Franconi E., 2001, Proceedings of the 8th International Conference on Logic for Programming, Artificial Intelligence, and Reasoning, volume 2250 of Lecture Notes in Computer Science, V2250, P561
   FRIEDRICH G, 2008, DIAGNOSIS 1 PRINCIPL
   Garcia-Molina Hector., 2000, DATABASE SYSTEM IMPL
   GEBSER M., 2007, POTASSCO POTSDAM ANS
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P3, DOI 10.1007/978-3-540-72200-7_3
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P352
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P323, DOI 10.1017/S1471068410000554
   Gebser M, 2009, LECT NOTES COMPUT SC, V5753, P509, DOI 10.1007/978-3-642-04238-6_50
   GECODE, 2011, GECODE OP FREE EFF C
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   GEREVINI A., 2005, Plan Constraints and Preferences in PDDL3: The Language of the Fifth International Planning Competition
   Gibbons LE, 1997, MATH OPER RES, V22, P754, DOI 10.1287/moor.22.3.754
   Graphviz, 2011, GRAPHV GRAPH VIS SOF
   GRASSO G., 2010, LECT NOTES AI LNAI, V6565
   Grasso G, 2009, LECT NOTES COMPUT SC, V5753, P591, DOI 10.1007/978-3-642-04238-6_63
   Gusfield D., 1989, STABLE MARRIAGE PROB
   Gutin G., 2004, HDB GRAPH THEORY, P389
   Healy P, 1999, LECT NOTES COMPUT SC, V1731, P205
   Helmert M, 2006, J ARTIF INTELL RES, V26, P191, DOI 10.1613/jair.1705
   HENTENRYCK P. V., 1989, CONSTRAINT SATISFACT, VI-XXVI
   Jaffar J., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P111, DOI 10.1145/41625.41635
   Janhunen T, 2004, LECT NOTES ARTIF INT, V2923, P331
   Janhunen T., 2006, J APPL NONCLASSICAL, V1-2, P35, DOI DOI 10.3166/JANCL.16.35-86
   Janhunen T, 2009, LECT NOTES COMPUT SC, V5753, P142, DOI 10.1007/978-3-642-04238-6_14
   Johnson DavidS., 1996, DIMACS SERIES DISCRE, V26
   Junger M., 1997, Graph Drawing. 5th International Symposium, GD '97. Proceedings, P13, DOI 10.1007/3-540-63938-1_46
   Lee J, 2003, LECT NOTES COMPUT SC, V2916, P451, DOI 10.1007/978-3-540-24599-5_31
   Lefevre C, 2009, LECT NOTES COMPUT SC, V5753, P522, DOI 10.1007/978-3-642-04238-6_52
   Lefevre C, 2009, LECT NOTES COMPUT SC, V5753, P196, DOI 10.1007/978-3-642-04238-6_18
   Leone N., 2005, P 2005 ACM SIGMOD IN, P915
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lierler Y, 2004, LECT NOTES ARTIF INT, V2923, P346
   Lierler Y, 2008, LECT NOTES COMPUT SC, V5366, P377, DOI 10.1007/978-3-540-89982-2_35
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Marien M, 2008, LECT NOTES COMPUT SC, V4996, P211, DOI 10.1007/978-3-540-79719-7_20
   Mutzel P, 2001, SIAM J OPTIMIZ, V11, P1065, DOI 10.1137/S1052623498334013
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Nieuwenhuis R, 2005, LECT NOTES COMPUT SC, V3576, P321
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   NISKANEN S., 2003, 2003
   Nogueira M., 2001, Practical Aspects of Declarative Languages. Third International Symposium, PADL 2001. Proceedings (Lecture Notes in Computer Science Vol.1990), P169
   Östergård PRJ, 2002, DISCRETE APPL MATH, V120, P197, DOI 10.1016/S0166-218X(01)00290-6
   Palopoli L, 2005, LECT NOTES COMPUT SC, V3488, P504
   Papadimitriou C. H., 1994, Computational Complexity
   PDDL 3.1, 2008, CHANG PDDL 3 1
   Ricca F, 2010, FUND INFORM, V105, P35, DOI 10.3233/FI-2010-357
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   SMT-LIB-WEB, 2011, SAT MOD THEOR LIB
   SUBRAHMANIAN VS, 1995, IEEE T KNOWL DATA EN, V7, P362, DOI 10.1109/69.390244
   WASP, 2003, WASP SHOWC 2003
   WITTOCX J., 2008, NMR 2008
   Wittocx Johan., 2008, LaSh, P153
   XSB, 2011, HOM XSB
   Xu K., 2004, BHOSLIB: benchmarks with hidden optimum solutions for graph problems
   ZHOU N.-F., 2011, TPLP PROLOG SY UNPUB
   [No title captured]
NR 99
TC 36
Z9 36
U1 0
U2 6
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2014
VL 14
BP 117
EP 135
DI 10.1017/S1471068412000105
PN 1
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA AJ9PG
UT WOS:000338044200003
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Busoniu, PA
   Oetsch, J
   Pührer, J
   Skocovsky, P
   Tompits, H
AF Busoniu, Paula-Andra
   Oetsch, Johannes
   Puehrer, Joerg
   Skocovsky, Peter
   Tompits, Hans
TI SeaLion: An eclipse-based IDE for answer-set programming with advanced
   debugging support
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
ID KNOWLEDGE REPRESENTATION; LOGIC PROGRAMS; TOOL
AB In this paper, we present SeaLion, an integrated development environment (IDE) for answer-set programming (ASP). SeaLion provides source-code editors for the languages of Gringo and DLV and offers popular amenities like syntax highlighting, syntax checking, code completion, visual program outline, and refactoring functionality. The tool has been realised in the context of a research project whose goal is the development of techniques to support the practical coding process of answer-set programs. In this respect, SeaLion is the first IDE for ASP that provides debugging features that work for real-world answer-set programs and supports the rich languages of modern answer-set solvers. Indeed, SeaLion implements a stepping-based debugging approach that allows the developer to quickly track down programming errors by simply following his or her intuitions on the intended semantics. Besides that, SeaLion supports ASP development using model-driven engineering techniques including domain modelling with extended UML class diagrams and visualisation of answer sets in corresponding instance diagrams. Moreover, customised visualisation as well as visual editing of answer sets is realised by the Kara plugin of SeaLion. Further implemented features are a documentation generator based on the LANA annotation language, support for external solvers, and interoperability with external tools. SeaLion comes as a plugin of the popular Eclipse platform and provides interfaces for future extensions of the IDE.
C1 [Busoniu, Paula-Andra; Oetsch, Johannes; Puehrer, Joerg; Tompits, Hans] Vienna Univ Technol, Inst Informat Syst 184 3, A-1040 Vienna, Austria.
   [Skocovsky, Peter] Univ Nova Lisboa, CENTRIA, P-2829516 Caparica, Portugal.
   [Skocovsky, Peter] Dept Informat, P-2829516 Caparica, Portugal.
C3 Technische Universitat Wien; Universidade Nova de Lisboa
RP Busoniu, PA (corresponding author), Vienna Univ Technol, Inst Informat Syst 184 3, Favoritenstr 9-11, A-1040 Vienna, Austria.
EM andra.busoniu@gmail.com; oetsch@kr.tuwien.ac.at;
   puehrer@kr.tuwien.ac.at; aifargonos@gmail.com; tompits@kr.tuwien.ac.at
OI Oetsch, Johannes/0000-0002-9902-7662
FU Austrian Science Fund (FWF) [P21698]; Austrian Science Fund (FWF)
   [P21698] Funding Source: Austrian Science Fund (FWF)
FX This work was partially supported by the Austrian Science Fund (FWF)
   under project P21698.
CR Calimeri F, 2012, ASP CORE 2 INPUT LAN
   Calimeri F., 2009, P 2 INT WORKSH SOFTW
   Cliffe O, 2008, LECT NOTES COMPUT SC, V5366, P724, DOI 10.1007/978-3-540-89982-2_65
   De Vos M, 2012, THEOR PRACT LOG PROG, V12, P619, DOI 10.1017/S147106841200021X
   Faber W, 2005, LECT NOTES ARTIF INT, V3662, P40, DOI 10.1007/11546207_4
   Febbraro O., 2010, P 25 IT C COMP LOG C, V598
   FEBBRARO O., 2011, P INAP WLP 2011, P165
   Febbraro O, 2011, LECT NOTES ARTIF INT, V6645, P317
   Fowler M, 2004, UML distilled: A brief guide to the standard object modeling language
   Fruhstuck M., 2013, P 12 INT C LOG PROGR
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Gebser M, 2009, LECT NOTES COMPUT SC, V5753, P509, DOI 10.1007/978-3-642-04238-6_50
   Gebser M, 2009, LECT NOTES ARTIF INT, V5437, P247, DOI 10.1007/978-3-642-00675-3_17
   Gelfond M, 2002, ARTIF INTELL, V138, P3, DOI 10.1016/S0004-3702(02)00207-2
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Järvisalo M, 2012, AI MAG, V33, P89
   Kloimullner C., 2011, P INAP WLP 2011, P152
   LEBERRE D, 2009, SAT 2009 COMPETITION
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Oetsch J., 2010, 26 INT C LOG PROGR I, V7
   Oetsch J., 2013, STEPPING ANSWE UNPUB
   OETSCH J., 2012, LECT NOTES COMPUTER, V7265, P492
   Oetsch J., 2011, P INAP WLP 2011, P141
   Oetsch J, 2011, LECT NOTES ARTIF INT, V6645, P382
   Oetsch J, 2011, LECT NOTES ARTIF INT, V6645, P134
   Oetsch J, 2010, THEOR PRACT LOG PROG, V10, P513, DOI 10.1017/S1471068410000256
   Polleres A., 2013, P 12 INT C LOG PROGR
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   SMITH A, 2011, LONSDALEITE
   Sureshkumar Adrian, 2007, P 1 INT WORKSH SOFTW, V281, P71
   Syrjanen T., 2000, LPARSE 1 0 USERS MAN
   Wittocx J., 2009, IDPDRAW TOOL USED VI
NR 32
TC 13
Z9 14
U1 1
U2 9
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 657
EP 673
DI 10.1017/S1471068413000410
PN 4-5
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400014
DA 2024-07-18
ER

PT J
AU Gebser, M
   Kaufmann, B
   Schaub, T
AF Gebser, Martin
   Kaufmann, Benjamin
   Schaub, Torsten
TI Multi-threaded ASP solving with clasp
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
ID PARALLEL EXECUTION; SAT; ALGORITHM; SEARCH
AB We present the new multi-threaded version of the state-of-the-art answer set solver clasp. We detail its component and communication architecture and illustrate how they support the principal functionalities of clasp. Also, we provide some insights into the data representation used for different constraint types handled by clasp. All this is accompanied by an extensive experimental analysis of the major features related to multi-threading in clasp.
C1 [Gebser, Martin; Kaufmann, Benjamin; Schaub, Torsten] Univ Potsdam, Inst Informat, Potsdam, Germany.
C3 University of Potsdam
RP Gebser, M (corresponding author), Univ Potsdam, Inst Informat, Potsdam, Germany.
RI Schaub, Torsten/O-5873-2019; Gebser, Martin/B-7169-2018
OI Schaub, Torsten/0000-0002-7456-041X; 
FU German Science Foundation (DFG) [SCHA 550/8-2]
FX We are grateful to Hannes Schroder for support with experiments and to
   the anonymous referees for their comments. This work was partially
   funded by the German Science Foundation (DFG) under grant SCHA 550/8-2.
CR [Anonymous], P 21 INT JOINT C ART
   [Anonymous], LPARSE 1 0 USERS MAN
   [Anonymous], MAXSAT HARD SOFT CON
   [Anonymous], DESCRIPTION PPFOLIO
   Audemard G, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P399
   Balduccini M, 2005, PARALLEL COMPUT, V31, P608, DOI 10.1016/j.parco.2005.03.004
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Blochinger W, 2003, PARALLEL COMPUT, V29, P969, DOI 10.1016/S0167-8191(03)00068-1
   Clark K. L., 1978, Logic and data bases, P293
   DAVIS M, 1960, J ACM, V7, P201, DOI 10.1145/321033.321034
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   DEKERGOMMEAUX JC, 1994, ACM COMPUT SURV, V26, P295, DOI 10.1145/185403.185453
   Eén N, 2005, LECT NOTES COMPUT SC, V3569, P61, DOI 10.1007/11499107_5
   Ellguth E, 2009, LECT NOTES COMPUT SC, V5753, P490, DOI 10.1007/978-3-642-04238-6_47
   Finkel R. A., 2001, Answer Set Programming: Towards Efficient and Scalable Knowledge Representation and Reasoning. Papers from the 2001 AAAI Symposium, P72
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P136, DOI 10.1007/978-3-540-72200-7_13
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P364
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P323, DOI 10.1017/S1471068410000554
   Gebser M, 2008, FRONT ARTIF INTEL AP, V178, P15, DOI 10.3233/978-1-58603-891-5-15
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P235, DOI 10.1007/978-3-642-02846-5_22
   Gomes CP, 2001, ARTIF INTELL, V126, P43, DOI 10.1016/S0004-3702(00)00081-3
   Gressmann J, 2005, LECT NOTES ARTIF INT, V3662, P227, DOI 10.1007/11546207_18
   Gressmann J, 2006, FRONT ARTIF INTEL AP, V141, P392
   Gropp W., 1999, Using MPI-2: Advanced Features of the Message Passing Interface, Vsecond
   Gupta G, 2001, ACM T PROGR LANG SYS, V23, P472, DOI 10.1145/504083.504085
   Hamadi Y, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P499
   Hamadi Youssef, 2009, Journal on Satisfiability, Boolean Modeling and Computation, DOI DOI 10.3233/SAT190070
   Han H, 2009, LECT NOTES COMPUT SC, V5584, P209
   Herlihy M., 2008, ART MULTIPROCESSOR P
   Hyvärinen AEJ, 2011, FUND INFORM, V107, P289, DOI 10.3233/FI-2011-404
   Jarvisalo M, 2010, LECT NOTES COMPUT SC, V6015, P129, DOI 10.1007/978-3-642-12002-2_10
   Kullmann Oliver, 2009, Lecture Notes in Computer Science, V5584
   Marques-Silva J, 2011, ANN MATH ARTIF INTEL, V62, P317, DOI 10.1007/s10472-011-9233-2
   Marques-Silva JP, 1999, IEEE T COMPUT, V48, P506, DOI 10.1109/12.769433
   Moskewicz MW, 2001, DES AUT CON, P530, DOI 10.1109/DAC.2001.935565
   Pontelli E, 2003, LECT NOTES COMPUT SC, V2562, P37
   Ryan Lawrence, 2004, Master's thesis
   Schubert Tobias, 2009, J SATISF BOOLEAN MOD, V6, P203, DOI [10.3233/sat190068, DOI 10.3233/SAT190068]
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Soos M, 2009, LECT NOTES COMPUT SC, V5584, P244, DOI 10.1007/978-3-642-02777-2_24
   Zhang HT, 1996, J SYMB COMPUT, V21, P543, DOI 10.1006/jsco.1996.0030
   Zhang LT, 2003, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, PROCEEDINGS, P880
   Zhang LT, 2001, ICCAD 2001: IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN, DIGEST OF TECHNICAL PAPERS, P279, DOI 10.1109/ICCAD.2001.968634
   [No title captured]
   [No title captured]
   [No title captured]
NR 49
TC 17
Z9 17
U1 1
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2012
VL 12
BP 525
EP 545
DI 10.1017/S1471068412000166
PN 4-5
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 000CV
UT WOS:000308365000007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Metodi, A
   Codish, M
AF Metodi, Amit
   Codish, Michael
TI Compiling finite domain constraints to SAT with BEE
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE SAT encoding; FD constraints; equi-propagation; partial evaluation
ID DIAGNOSIS
AB We present BEE, a compiler which enables to encode finite domain constraint problems to CNF. Using BEE both eases the encoding process for the user and also performs transformations to simplify constraints and optimize their encoding to CNF. These optimizations are based primarily on equi-propagation and on partial evaluation, and also on the idea that a given constraint may have various possible CNF encodings. Often, the better encoding choice is made after constraint simplification. BEE is written in Prolog and integrates directly with a SAT solver through a suitable Prolog interface. We demonstrate that constraint simplification is often highly beneficial when solving hard finite domain constraint problems. A BEE implementation is available with this paper.
C1 [Metodi, Amit; Codish, Michael] Ben Gurion Univ Negev, Dept Comp Sci, IL-84105 Beer Sheva, Israel.
C3 Ben Gurion University
RP Metodi, A (corresponding author), Ben Gurion Univ Negev, Dept Comp Sci, IL-84105 Beer Sheva, Israel.
RI Codish, Michael/AAH-2961-2020; CODISH, MICHAEL/F-1287-2012
OI Codish, Michael/0000-0003-0394-5854
FU Lynn and William Frankel Center for Computer Sciences
FX Partially supported by the Lynn and William Frankel Center for Computer
   Sciences.
CR [Anonymous], 1999, OPL OPTIMIZATION PRO
   Ansótegui C, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P137
   Asín R, 2011, CONSTRAINTS, V16, P195, DOI 10.1007/s10601-010-9105-0
   Bailleux O, 2003, LECT NOTES COMPUT SC, V2833, P108
   Batcher K. E., 1968, P AFIPS SPRING JOINT, P307, DOI [DOI 10.1145/1468075.1468121, 10.1145/1468075. 1468121]
   Cadoli M, 2005, ARTIF INTELL, V162, P89, DOI 10.1016/j.artint.2004.01.006
   Chen J, 2010, WORKSH CONSTR MOD RE
   Codish M, 2008, THEOR PRACT LOG PROG, V8, P121, DOI 10.1017/S1471068407003146
   Codish M, 2010, LECT NOTES ARTIF INT, V6355, P154, DOI 10.1007/978-3-642-17511-4_10
   CRAWFORD JM, 1994, PROCEEDINGS OF THE TWELFTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P1092
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Een N., 2006, J SATISFIABILITY BOO, V2, P1, DOI DOI 10.3233/SAT190014
   Feldman A., 2010, SOLVING MODEL DIAGNO
   Frisch A. M., 2010, WORKSH CONSTR MOD RE
   Frutos AG, 1997, NUCLEIC ACIDS RES, V25, P4748, DOI 10.1093/nar/25.23.4748
   Gallian J. A., 2011, ELECT J COMBINATORIC, V18
   Gavanelli M, 2007, LECT NOTES COMPUT SC, V4741, P815
   Gomes CP, 1997, LECT NOTES COMPUT SC, V1330, P121, DOI 10.1007/BFb0017434
   Jager G., 2010, P 9 COL TWENT WORKSH, P97
   MacDougall JA, 2002, UTILITAS MATHEMATICA, V61, P3
   Mancini T, 2008, CONSTRAINTS, V13, P407, DOI 10.1007/s10601-007-9028-6
   Metodi Amit, 2011, Principles and Practice of Constraint Programming - CP 2011. Proceedings of the 17th International Conference (CP 2011), P621, DOI 10.1007/978-3-642-23786-7_47
   Metodi A., 2012, AAAI C ART INT, P793
   Metodi A., 2012, BEE
   Nethercote N, 2007, LECT NOTES COMPUT SC, V4741, P529
   Regin J.C., 1994, A filtering algorithm for constraints of difference in CSP, P362
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   Smith A, 2005, IEEE T COMPUT AID D, V24, P1606, DOI 10.1109/TCAD.2005.852031
   Soos M., 2010, CRYPTOMINISAT V2 5 1
   Tamura N, 2009, CONSTRAINTS, V14, P254, DOI 10.1007/s10601-008-9061-0
NR 30
TC 20
Z9 22
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2012
VL 12
BP 465
EP 483
DI 10.1017/S1471068412000130
PN 4-5
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 000CV
UT WOS:000308365000004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Carlsson, M
   Mildner, P
AF Carlsson, Mats
   Mildner, Per
TI SICStus Prolog-The first 25 years
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Prolog; logic programming system; virtual machine; compilers; memory
   management
AB SICStus Prolog has evolved for nearly 25 years. This is an appropriate point in time for revisiting the main language and design decisions, and try to distill some lessons. SICStus Prolog was conceived in a context of multiple, conflicting Prolog dialect camps and a fledgling standardization effort. We reflect on the impact of this effort and role model implementations on our development. After summarizing the development history, we give a guided tour of the system anatomy, exposing some designs that were not published before. We give an overview of our new interactive development environment, and describe a sample of key applications. Finally, we try to identify key good and not so good design decisions.
C1 [Carlsson, Mats; Mildner, Per] SICS, SE-16429 Kista, Sweden.
C3 RISE Research Institutes of Sweden
RP Carlsson, M (corresponding author), SICS, POB 1263, SE-16429 Kista, Sweden.
EM matsc@sics.se
FU Ericsson Telecom AB; NobelTech Systems AB; Infologics AB; Televerket;
   Ellemtel Utvecklings AB
FX A large number of people have contributed to the development of SICStus
   Prolog, including: Jonas Almgren, Johan Andersson, Stefan Andersson,
   Nicolas Beldiceanu, Tamas Benko, Kent Boortz, Per Brand, Goran Bage, Per
   Danielsson, Joakim Eriksson, Jesper Eskilson, Niklas Finne, Lena Flood,
   Gyorgy Gyaraki, David Hanak, Seif Haridi, Ralph Haygood, Christian
   Holzbaur, Key Hyckenberg, Carl Kesselman, Peter Laszlo, Carl Nettelblad,
   Greger Ottosson, Dan Sahlin, Peter Schachte, Rob Scott, Thomas Sjoland,
   Peter Szeredi, Tamas Szeredi, Johan Widen, Magnus Agren, Emil Astrom,
   and the authors. The Industrialization of SICStus Prolog (1988-1991) was
   funded by Ericsson Telecom AB, NobelTech Systems AB, Infologics AB, and
   Televerket, under the National Swedish Information Technology Program
   IT4. The development of SICStus Prolog 3 (1991-1995) was funded in part
   by Ellemtel Utvecklings AB. We thank Magnus Agren and the anonymous
   referees for their constructive comments.
CR ALI KAM, 1990, INT J PARALLEL PROG, V19, P129, DOI 10.1007/BF01407834
   ALI KAM, 1990, LOGIC PROGRAMM, P757
   Amdahl G. M., 1967, P SPRING JOINT COMP, P483, DOI DOI 10.1145/1465482.1465560
   [Anonymous], 96 CW K U LEUV DEP C
   [Anonymous], STUDIES COMPUTER SCI
   [Anonymous], P INT C LOG PROGR IC
   [Anonymous], P 1 WORKSH CHR SEL C
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], P 8 SEM PROGR LOG SP
   [Anonymous], LECT NOTES COMPUT SC
   [Anonymous], LACON
   [Anonymous], T9109 SICS
   [Anonymous], P ACM SIGPLAN SIGACT
   [Anonymous], TR9509 AUST RES I AR
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], P WORKSH CSP TECHN I
   [Anonymous], R9107 SICS
   [Anonymous], 1982, Logic Programming
   [Anonymous], C RES PRACT INF TECH
   [Anonymous], 283 U PARM DIP MAT
   [Anonymous], P INT ACM SIGPLAN C
   [Anonymous], 1983, 309 SRI INT ART INT
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], 1979, THESIS FLINDERS U AD
   [Anonymous], CONSTRAINT PROCESSIN
   [Anonymous], THESIS TRINITY COLL
   [Anonymous], P INT C LOG PROGR IC
   [Anonymous], MIT PRESS SERIES LOG
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], CSLI STUDIES COMPUTA
   [Anonymous], MIT PRESS SERIES LOG
   [Anonymous], ACM T PROGRAMMING LA
   [Anonymous], 2003, High Integrity Software: The SPARK Approach to Safety and Security
   APPLEBY K, 1988, COMMUN ACM, V31, P719, DOI 10.1145/62959.62968
   CHENEY CJ, 1970, COMMUN ACM, V13, P677, DOI 10.1145/362790.362798
   da Silva AF, 2007, LECT NOTES COMPUT SC, V4670, P410
   DEMOEN B, 1989, LOGIC PROGRAMM, P1001
   FARKAS Z, 1994, IMPLEMENTATIONS OF LOGIC PROGRAMMING SYSTEMS, P103
   Gorlick M. M., 1987, Proceedings of the 1987 Symposium on Logic Programming (Cat. No.87CH2472-9), P426
   LUSK E, 1990, NEW GENERAT COMPUT, V7, P243, DOI 10.1007/BF03037208
   Cardona PAN, 2015, CUAD ACT, P154
   Schimpf J, 2002, LECT NOTES COMPUT SC, V2401, P224, DOI 10.1007/3-540-45619-8_16
   Taylor A., 1991, New Generation Computing, V9, P221, DOI 10.1007/BF03037163
   VANROY P, 1992, COMPUTER, V25, P54, DOI 10.1109/2.108055
   Wilson WG, 2005, LECT NOTES COMPUT SC, V3668, P14, DOI 10.1007/11562931_4
NR 45
TC 27
Z9 30
U1 1
U2 6
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2012
VL 12
BP 35
EP 66
DI 10.1017/S1471068411000482
PN 1-2
PG 32
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 886XS
UT WOS:000299888500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Caroprese, L
   Truszczynski, M
AF Caroprese, Luciano
   Truszczynski, Miroslaw
TI Active integrity constraints and revision programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE inconsistent databases; active integrity constraints; revision
   programming
ID DECLARATIVE SEMANTICS
AB We study active integrity constraints and revision programming, two formalisms designed to describe integrity constraints on databases and to specify policies on preferred ways to enforce them. Unlike other more commonly accepted approaches, these two formalisms attempt to provide a declarative solution to the problem. However, the original semantics of founded repairs for active integrity constraints and justified revisions for revision programs differ. Our main goal is to establish a comprehensive framework of semantics for active integrity constraints, to find a parallel framework for revision programs, and to relate the two. By doing so, we demonstrate that the two formalisms proposed independently of each other and based on different intuitions when viewed within a broader semantic framework turn out to be notational variants of each other. That lends support to the adequacy of the semantics we develop for each of the formalisms as the foundation for a declarative approach to the problem of database update and repair. In the paper, we also study computational properties of the semantics we consider and establish results concerned with the concept of the minimality of change and the invariance under the shifting transformation.
C1 [Caroprese, Luciano] Univ Calabria, I-87030 Arcavacata Di Rende, Italy.
   [Truszczynski, Miroslaw] Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
C3 University of Calabria; University of Kentucky
RP Caroprese, L (corresponding author), Univ Calabria, I-87030 Arcavacata Di Rende, Italy.
EM caroprese@deis.unical.it; mirek@cs.uky.edu
RI Caroprese, Luciano/AGS-3720-2022
OI Caroprese, Luciano/0000-0002-0173-0131
FU NSF [IIS-0325063, IIS-0913459]; KSEF [KSEF-1036-RDE-008]
FX The authors thank anonymous reviewers for many insightful comments that
   resulted in substantial improvements to the original manuscript. This
   work was partially supported by the NSF grants IIS-0325063 and
   IIS-0913459, and the KSEF grant KSEF-1036-RDE-008.
CR [Anonymous], P 2 INT C PRINC KNOW
   Arenas M, 2003, THEOR PRACT LOG PROG, V3, P393, DOI 10.1017/S1471068403001832
   Arenas M., 1999, Proceedings of the Eighteenth ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems, P68, DOI 10.1145/303976.303983
   Bravo L, 2006, LECT NOTES COMPUT SC, V4254, P336
   Caniupan M, 2007, LECT NOTES ARTIF INT, V4772, P74
   Caroprese L, 2008, LECT NOTES ARTIF INT, V5293, P100, DOI 10.1007/978-3-540-87803-2_10
   Caroprese L, 2006, LECT NOTES COMPUT SC, V4079, P26, DOI 10.1007/11799573_5
   Caroprese L, 2008, LECT NOTES COMPUT SC, V5366, P269, DOI 10.1007/978-3-540-89982-2_28
   CHAKRAVARTHY US, 1990, ACM T DATABASE SYST, V15, P162, DOI 10.1145/78922.78924
   Chomicki J, 2006, LECT NOTES COMPUT SC, V4353, P1
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Greco G, 2003, IEEE T KNOWL DATA EN, V15, P1389, DOI 10.1109/TKDE.2003.1245280
   Jagadish HV, 1999, J COMPUT SYST SCI, V58, P13, DOI 10.1006/jcss.1998.1596
   LIFSCHITZ V, 1992, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE (KR 92), P603
   Lopatenko A, 2006, INT WORKSHOP DATABAS, P558, DOI 10.1109/DEXA.2006.43
   Marek V., 1999, Computer Science Logic. 12th International Workshop, CSL'98. Annual Conference of the EACSL. Proceedings, P73
   Marek V. W., 1994, Logics in Artificial Intelligence. European Workshop JELIA '94. Proceedings, P122, DOI 10.1007/BFb0021968
   Marek VW, 1998, THEOR COMPUT SCI, V190, P241, DOI 10.1016/S0304-3975(97)00092-3
   MAREK W, 1991, J ACM, V38, P588, DOI 10.1145/116825.116836
   McCarthy J., 1969, Machine Intelligence, VVol. 4, P463
   PIVKINA I, 2001, THESIS U KENTUCKY
   WIDOM J., 1996, ACTIVE DATABASE SYST, P293
   Winslett M., 1990, Updating Logical Databases
NR 24
TC 12
Z9 12
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2011
VL 11
BP 905
EP 952
DI 10.1017/S1471068410000475
PN 6
PG 48
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 853RB
UT WOS:000297442300003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cattafi, M
   Gavanelli, M
   Nonato, M
   Alvisi, S
   Franchini, M
AF Cattafi, Massimiliano
   Gavanelli, Marco
   Nonato, Maddalena
   Alvisi, Stefano
   Franchini, Marco
TI Optimal placement of valves in a water distribution network with CLP(FD)
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Logic Programming
CT 27th International Conference on Logic Programming
CY 2010
CY JUL 06-10, 2011
CL Lexington, KY
CL Lexington, KY
DE constraint logic programming; hydraulic engineering; valve placement;
   graph partitioning
ID ALGORITHMS; SEGMENTS; DESIGN; COST; ASP
AB This paper presents a new application of logic programming to a real-life problem in hydraulic engineering. The work is developed as a collaboration of computer scientists and hydraulic engineers, and applies Constraint Logic Programming to solve a hard combinatorial problem. This application deals with one aspect of the design of a water distribution network, i.e., the valve isolation system design. We take the formulation of the problem by Giustolisi and Savic (2008 Optimal design of isolation valve system for water distribution networks. In Proceedings of the 10th Annual Water Distribution Systems Analysis Conference WDSA2008, J. Van Zyl, A. Ilemobade, and H. Jacobs, Eds.) and show how, thanks to constraint propagation, we can get better solutions than the best solution known in the literature for the Apulian distribution network. We believe that the area of the so-called hydroinformatics can benefit from the techniques developed in Constraint Logic Programming and possibly from other areas of logic programming, such as Answer Set Programming.
C1 [Cattafi, Massimiliano; Gavanelli, Marco; Nonato, Maddalena; Alvisi, Stefano; Franchini, Marco] Univ Ferrara, Dept Engn, I-44122 Ferrara, Italy.
C3 University of Ferrara
RP Cattafi, M (corresponding author), Univ Ferrara, Dept Engn, Via Saragat 1, I-44122 Ferrara, Italy.
RI Alvisi, Stefano/E-9489-2015; Carloni, Massimiliano/I-7721-2014;
   GAVANELLI, Marco/ISA-6918-2023; Nonato, Maddalena/G-8564-2013;
   Franchini, Marco/O-9831-2015
OI Alvisi, Stefano/0000-0002-5690-2092; Carloni,
   Massimiliano/0000-0003-3019-8612; GAVANELLI, Marco/0000-0001-7433-5899;
   Nonato, Maddalena/0000-0001-8708-120X; Franchini,
   Marco/0000-0002-0215-2855
CR [Anonymous], 2006, Constraint Logic Programming using Eclipse
   Boussemart F, 2004, FRONT ARTIF INTEL AP, V110, P146
   CATTAFI M, 2011, CLP FD PROGRAM OPTIM
   Chung F. R. K., 1994, SPECTRAL GRAPH THEOR
   Creaco E, 2010, WATER RESOUR MANAG, V24, P4317, DOI 10.1007/s11269-010-9661-5
   Dal Palù A, 2010, THEOR PRACT LOG PROG, V10, P709, DOI 10.1017/S1471068410000372
   Dechter R., 2003, Constraint Processing
   Dovier A, 2005, LECT NOTES COMPUT SC, V3668, P67, DOI 10.1007/11562931_8
   Faber W, 2008, THEOR PRACT LOG PROG, V8, P545, DOI 10.1017/S1471068408003323
   FAGES F, 1996, LECT NOTES COMPUTER, V1118, P537
   Fiduccia C. M., 1982, DES AUT C P, P175, DOI DOI 10.1109/DAC.1982.1585498
   FIEDLER M, 1973, CZECH MATH J, V23, P298
   Focacci F, 2002, INFORMS J COMPUT, V14, P403, DOI 10.1287/ijoc.14.4.403.2827
   Focacci F, 1999, LECT NOTES COMPUT SC, V1713, P189
   Fruhwirth Thom., 2003, COG TECH, DOI 10.1007/978-3-662-05138-2
   Garey M. R., 1979, Computers and intractability. A guide to the theory of NP-completeness
   Gavanelli M, 2002, FR ART INT, V77, P136
   Gervet C., 1999, PACLP99. Proceedings of the First International Conference on the Practical Application of Constraint Technologies and Logic Programming, P255
   GIUSTOLISI O, 2008, P 10 ANN WAT DISTR S, P1
   Giustolisi O, 2010, URBAN WATER J, V7, P1, DOI 10.1080/15730620903287530
   Gomes CP, 1997, LECT NOTES COMPUT SC, V1330, P121, DOI 10.1007/BFb0017434
   HENDRICKSON B, 1995, SIAM J SCI COMPUT, V16, P452, DOI 10.1137/0916028
   Hendrickson B, 1995, SUPERCOMP PROC, P626
   HOPCROFT J, 1973, COMMUN ACM, V16, P372, DOI 10.1145/362248.362272
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   Jun H, 2007, J WATER RES PLAN MAN, V133, P145, DOI 10.1061/(ASCE)0733-9496(2007)133:2(145)
   Kao JJ, 2007, J AM WATER WORKS ASS, V99, P83
   Karypis G, 1998, SIAM J SCI COMPUT, V20, P359, DOI 10.1137/S1064827595287997
   Kernighan B. W., 1970, The Bell System Technical Journal, V49, P291, DOI [10.1002/j.1538-7305.1970.tb01770.x, DOI 10.1002/J.1538-7305.1970.TB01770.X]
   LIPTON RJ, 1979, SIAM J APPL MATH, V36, P177, DOI 10.1137/0209046
   Mancini T, 2008, CONSTRAINTS, V13, P407, DOI 10.1007/s10601-007-9028-6
   Marriot K., 1998, Programming with constraints: An introduction
   MARRIOTT K, 1994, P ICLP WORKSH INT DE, P23
   Pichler R, 2010, LECT NOTES COMPUT SC, V6078, P167, DOI 10.1007/978-3-642-13073-1_16
   PRESTWICH S, 1996, P 4 COMP NET WORKSH, P183
   Russell S., 2016, Artificial intelligence a modern approach
   Schimpf J, 2002, LECT NOTES COMPUT SC, V2401, P224, DOI 10.1007/3-540-45619-8_16
   SCHIMPF J, 2009, ECLIPSE 6 0 REFERENC
   SPIELMAN A, 1996, SPECTRAL PARTITIONIN
   VANWASSENHOVE LN, 1980, EUR J OPER RES, V4, P42, DOI 10.1016/0377-2217(80)90038-7
   WARREN DS, 1992, COMMUN ACM, V35, P93, DOI 10.1145/131295.131299
   Zhou NF, 2008, THEOR PRACT LOG PROG, V8, P81, DOI 10.1017/S147106840700316X
   ZHOU NF, 2011, THEORY PRAC IN PRESS
NR 43
TC 13
Z9 15
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 731
EP 747
DI 10.1017/S1471068411000275
PN 4-5
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100019
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Józefowska, J
   Lawrynowicz, A
   Lukaszewski, T
AF Jozefowska, Joanna
   Lawrynowicz, Agnieszka
   Lukaszewski, Tomasz
TI The role of semantics in mining frequent patterns from knowledge bases
   in description logics with rules
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE frequent pattern discovery; ontologies; Semantic Web; DL-safe rules
ID ASSOCIATION RULES; DISCOVERY; OWL; SEQUENCE; DATALOG; DL
AB We propose a new method for mining frequent patterns in a language that combines both Semantic Web ontologies and rules. In particular, we consider the setting of using a language that combines description logics (DLs) with DL-safe rules. This setting is important for the practical application of data mining to the Semantic Web. We focus on the relation of the semantics of the representation formalism to the task of frequent pattern discovery, and for the core of our method, we propose an algorithm that exploits the semantics of the combined knowledge base. We have developed a proof-of-concept data mining implementation of this. Using this we have empirically shown that using the combined knowledge base to perform semantic tests can make data mining faster by pruning useless candidate patterns before their evaluation. We have also shown that the quality of the set of patterns produced may be improved: the patterns are more compact, and there are fewer patterns. We conclude that exploiting the semantics of a chosen representation formalism is key to the design and application of (onto-)relational frequent pattern discovery methods.
C1 [Jozefowska, Joanna; Lawrynowicz, Agnieszka; Lukaszewski, Tomasz] Poznan Univ Tech, Inst Comp Sci, PL-60965 Poznan, Poland.
C3 Poznan University of Technology
RP Józefowska, J (corresponding author), Poznan Univ Tech, Inst Comp Sci, Ul Piotrowo 2, PL-60965 Poznan, Poland.
EM jjozefowska@cs.put.poznan.pl; alawrynowicz@cs.put.poznan.pl;
   tlukaszewski@cs.put.poznan.pl
RI Lawrynowicz, Agnieszka/HPG-3313-2023; Józefowska, Joanna/B-7311-2011;
   Lawrynowicz, Agnieszka/J-6681-2012; Lukaszewski, Tomasz/L-8394-2014
OI Lawrynowicz, Agnieszka/0000-0002-2442-345X; Józefowska,
   Joanna/0000-0003-1994-6982; Lukaszewski, Tomasz/0000-0002-3273-5373
FU Polish Ministry of Science and Higher Education [N N516 186437]
FX The authors acknowledge the support of the Polish Ministry of Science
   and Higher Education (grant number N N516 186437). We are grateful to
   Boris Motik for explanations on DL-safe rules formalism, and for
   providing KAON2 reasoner, to Prof. Ross D. King for valuable discussions
   on KR and data mining in biology, and the remarks on earlier versions of
   the paper, to Jan Ramon for explanations on the concept of the semantic
   freeness of Data log patterns. We are also very grateful to the
   anonymous reviewers for all their comments.
CR [Anonymous], 2004, Proceedings of KR
   Baader F., 2003, DESCRIPTION LOGIC HD
   Berners-Lee T, 2001, SCI AM, V284, P34, DOI 10.1038/scientificamerican0501-34
   Cali A, 2009, PODS'09: PROCEEDINGS OF THE TWENTY-EIGHTH ACM SIGMOD-SIGACT-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P77, DOI 10.1145/1559795.1559809
   Calvanese D, 2007, J AUTOM REASONING, V39, P385, DOI 10.1007/s10817-007-9078-x
   CUMBO C, 2004, P ICLP 2004, P371
   d'Amato C, 2008, LECT NOTES ARTIF INT, V5268, P48, DOI 10.1007/978-3-540-87696-0_7
   Dean M., 2004, SWRL: a semantic web Rule Language combining OWL and RuleML
   Dehaspe L, 1999, DATA MIN KNOWL DISC, V3, P7, DOI 10.1023/A:1009863704807
   Dehaspe L., 1998, Proceedings Fourth International Conference on Knowledge Discovery and Data Mining, P30
   DERAEDT L, 2004, P 9 INT C PRINC KNOW, P438
   Donini FM, 1998, J INTELL INF SYST, V10, P227, DOI 10.1023/A:1008687430626
   Dzeroski S, 2001, RELATIONAL DATA MINING, P3
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   EITER T, 2004, P 3 INT WORKSH RUL R, P81
   Eiter T, 2008, ARTIF INTELL, V172, P1495, DOI 10.1016/j.artint.2008.04.002
   Eiter Thomas., 2004, KR2004, P141
   FANIZZI N, 2008, ISWC 08, P195
   Fanizzi N, 2006, LECT NOTES ARTIF INT, V4203, P322
   Grosof BenjaminN., 2003, P 12 INT WORLD WIDE, P48, DOI DOI 10.1145/775152.775160
   HUSTADT U, 2005, P 19 INT JOINT C ART, P466
   Hustadt U, 2007, J AUTOM REASONING, V39, P351, DOI 10.1007/s10817-007-9080-3
   Jozefowska J, 2005, LECT NOTES COMPUT SC, V3791, P84, DOI 10.1007/11580072_8
   Józefowska J, 2006, LECT NOTES ARTIF INT, V4248, P287
   Józefowska J, 2008, LECT NOTES COMPUT SC, V5341, P205, DOI 10.1007/978-3-540-88737-9_16
   King R. D., 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P384, DOI 10.1145/347090.347172
   King RD, 2001, BIOINFORMATICS, V17, P445, DOI 10.1093/bioinformatics/17.5.445
   King RD, 2000, YEAST, V17, P283, DOI 10.1002/1097-0061(200012)17:4<283::AID-YEA52>3.0.CO;2-F
   Levy AY, 1998, ARTIF INTELL, V104, P165, DOI 10.1016/S0004-3702(98)00048-4
   Lisi FA, 2004, MACH LEARN, V55, P175, DOI 10.1023/B:MACH.0000023151.65011.a3
   LIST F, 2007, P 3 INT WORKSH OWL E
   LIST FA, 2008, LECT NOTES COMPUTER, V5194, P158
   Lukasiewicz T, 2007, LECT NOTES COMPUT SC, V4519, P384
   McGuinness D. L., 2004, OWL WEB ONTOLOGY LAN, DOI DOI 10.2004-03
   Motik B, 2005, J WEB SEMANT, V3, P41, DOI 10.1016/j.websem.2005.05.001
   MOTIK B, 2006, P 13 INT C LOG PROGR
   Motik B., 2006, THESIS U KARLSRUHE T
   Motik B, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P477
   NIENHUYSCHENG SH, 1997, LECT NOTES ARTIFICIA, V1228
   Nijssen S, 2003, LECT NOTES ARTIF INT, V2838, P350
   NIJSSEN S., 2001, IJCAI, P891
   Parsons JT, 2006, ATHLET THER TODAY, V11, P1
   Rosati Riccardo., 2006, P 10 INT C PRINCIPLE, P68
   RUTTENBERG A, 2005, P OWL ED 05, V188
   Stevens R, 2007, INT J HUM-COMPUT ST, V65, P583, DOI 10.1016/j.ijhcs.2007.03.006
NR 45
TC 21
Z9 21
U1 0
U2 11
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2010
VL 10
SI SI
BP 251
EP 289
DI 10.1017/S1471068410000098
PN 3
PG 39
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 614FF
UT WOS:000279040100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Heymans, S
   De Bruijn, J
   Predoiu, L
   Feier, C
   Van Niewenborgh, D
AF Heymans, Stijn
   De Bruijn, Jos
   Predoiu, Livia
   Feier, Cristina
   Van Niewenborgh, Davy
TI Guarded hybrid knowledge bases
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE g-hybrid knowledge bases; open answer set programming; guarded logic
   programs; description logics
ID ONTOLOGIES
AB Recently, there has been a lot of interest in the integration of Description Logics (DL) and rules on the Semantic Web. We define guarded hybrid knowledge bases (or g-hybrid knowledge bases) as knowledge bases that consist of a Description Logic knowledge base and a guarded logic program, similar to the DL+log knowledge bases from Rosati (In Proceedings of the 10th International Conference on Principles of Knowledge Representation and Reasoning, AAAI Press, Menlo Park, CA, 2006, pp. 68 - 78.). g-Hybrid knowledge bases enable an integration of Description Logics and Logic Programming where, unlike in other approaches, variables in the rules of a guarded program do not need to appear in positive non-DL atoms of the body, i.e., DL atoms can act as guards as well. Decidability of satisfiability checking of g-hybrid knowledge bases is shown for the particular DL DLRO-{<=} which is close to OWL DL, by a reduction to guarded programs under the open answer set semantics. Moreover, we show 2-EXPTIME-completeness for satisfiability checking of such g-hybrid knowledge bases.
C1 [Heymans, Stijn; Feier, Cristina] Univ Innsbruck, Digital Enterprise Res Inst, A-6020 Innsbruck, Austria.
   [De Bruijn, Jos] Free Univ Bozen Bolzano, Fac Comp Sci, I-39100 Bozen Bolzano, Italy.
   [Predoiu, Livia] Univ Mannheim, Inst Comp Sci, D-68159 Mannheim, Germany.
   [Van Niewenborgh, Davy] Vrije Univ Brussel, VUB, Dept Comp Sci, B-1050 Brussels, Belgium.
C3 University of Innsbruck; Free University of Bozen-Bolzano; University of
   Mannheim; Vrije Universiteit Brussel
RP Heymans, S (corresponding author), Univ Innsbruck, Digital Enterprise Res Inst, Tech Str 21A, A-6020 Innsbruck, Austria.
EM stijn.heymans@deri.at; debruijn@inf.unibz.it;
   livia@informatik.uni-mannheim.de; cristina.feier@deri.at;
   dvnieuwe@vub.ac.be
OI Feier, Cristina/0000-0003-0180-5356
CR [Anonymous], 2004, Proceedings of KR
   [Anonymous], 2004, J. of Web Semantics
   Baader F., 2003, DESCRIPTION LOGIC HD
   Dean M., 2004, OWL WEB ONTOLOGY LAN
   DEBRUIJN J, 2006, P ONT RUL INT WORKSH
   DEBRUIJN J, 2007, P 12 INT JOINT C ART
   DEBRUIJN J, 2006, P 2 INT C KNOWL SCI, V4092
   Donini FM, 1998, J INTELL INF SYST, V10, P227, DOI 10.1023/A:1008687430626
   Eiter Thomas., 2004, KR2004, P141
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Gradel E., 1999, Proceedings. 14th Symposium on Logic in Computer Science (Cat. No. PR00158), P45, DOI 10.1109/LICS.1999.782585
   Heymans S, 2005, LECT NOTES COMPUT SC, V3532, P392
   Heymans S, 2005, LECT NOTES ARTIF INT, V3662, P92, DOI 10.1007/11546207_8
   HEYMANS S, 2006, IN PRESS ACM T COMPU
   HEYMANS S, 2006, P REAS WEB WORKSH RO
   Heymans S, 2006, ANN MATH ARTIF INTEL, V47, P103, DOI 10.1007/s10472-006-9030-5
   Horrocks I., 2004, Proceedings of the 13th Conference on World Wide Web, May 2004, P723, DOI DOI 10.1145/988672.988771
   Inoue K, 1998, J LOGIC PROGRAM, V35, P39, DOI 10.1016/S0743-1066(97)10001-2
   LEVY AY, 1996, P 12 EUR C ART INT E, P323
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Motik B, 2004, LECT NOTES COMPUT SC, V3298, P549
   MOTIK B, 2007, P 12 INT JOINT C ART
   Rosati R, 2005, LECT NOTES COMPUT SC, V3703, P50
   Rosati R, 2005, J WEB SEMANT, V3, P61, DOI 10.1016/j.websem.2005.05.002
   Rosati Riccardo., 2006, P 10 INT C PRINCIPLE, P68
   Swift T, 2004, LECT NOTES ARTIF INT, V2923, P275
NR 26
TC 14
Z9 17
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2008
VL 8
BP 411
EP 429
DI 10.1017/S1471068407003201
PN 3
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 304KX
UT WOS:000256109500008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Janhunen, T
   Oikarinen, E
AF Janhunen, Tomi
   Oikarinen, Emilia
TI Automated verification of weak equivalence within the SMODELS system
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; weak equivalence; programming methodology;
   program optimization
ID STABLE MODEL SEMANTICS; LOGIC PROGRAMS; KNOWLEDGE REPRESENTATION
AB In answer set programming (ASP), a problem at hand is solved by (i) writing a logic program whose answer sets correspond to the solutions of the problem, and by (ii) computing the answer sets of the program using an answer set solver as a search engine. Typically, a programmer creates a series of gradually improving logic programs for a particular problem when optimizing program length and execution time on a particular solver. This leads the programmer to a meta-level problem of ensuring that the programs are equivalent, i.e., they give rise to the same answer sets. To case answer set programming at methodological level, we propose a translation-based method for verifying the equivalence of logic programs. The basic idea is to translate logic programs P and Q under consideration into a single logic program EQT(P,Q) whose answer sets (if such exist) yield counter-examples to the equivalence of P and Q. The method is developed here in a slightly more general setting by taking the visibility of atoms properly into account when comparing answer sets. The translation-based approach presented in the paper has been implemented as a translator called LPEQ that enables the verification of weak equivalence within the SMODELS system using the same search engine as for the search of models. Our experiments with LPEQ and SMODELS suggest that establishing the equivalence of logic programs in this way is in certain cases much faster than naive cross-checking of answer sets.
C1 [Janhunen, Tomi; Oikarinen, Emilia] Aalto Univ, Dept Comp Sci & Engn, Lab Theoret Comp Sci, FIN-02150 Espoo, Finland.
C3 Aalto University
RP Janhunen, T (corresponding author), Aalto Univ, Dept Comp Sci & Engn, Lab Theoret Comp Sci, PO Box 5400, FIN-02150 Espoo, Finland.
EM Tomi.Janhunen@tkk.fi; Emilia.Oikarinen@tkk.fi
RI Janhunen, Tomi/E-8362-2012
OI Oikarinen, Emilia/0000-0002-9623-6282
CR ANGER C, 2005, LECT NOTES ARTIF INT, V3662, P426
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   Apt K.R., 1988, THEORY DECLARATIVE K, P89
   BALDUCCINI M, 2001, P 3 INT S PRACT ASP, P169
   Cholewinski P, 1999, J LOGIC PROGRAM, V38, P219, DOI 10.1016/S0743-1066(98)10020-1
   DOVIER A, 2005, P CONV IT LOG COMP I
   Dowling W. F., 1984, Journal of Logic Programming, V1, P267, DOI 10.1016/0743-1066(84)90014-1
   Eiter T, 2004, LECT NOTES ARTIF INT, V2923, P87
   EITER T, 2006, P 11 INT WORKSH NONM, P85
   Eiter T, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P97
   Gelfond M, 2002, ARTIF INTELL, V138, P3, DOI 10.1016/S0004-3702(02)00207-2
   GELFOND M, 1990, LOGIC PROGRAMM, P579
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Gressmann J, 2005, LECT NOTES ARTIF INT, V3662, P227, DOI 10.1007/11546207_18
   Janhunen T, 2004, FRONT ARTIF INTEL AP, V110, P358
   Janhunen T, 2004, LECT NOTES ARTIF INT, V2923, P336
   Janhunen T, 2002, LECT NOTES ARTIF INT, V2424, P493, DOI 10.1007/3-540-45757-7_41
   JANHUNEN T, 2003, 82 HELS U TECHN LAB
   JANHUNEN T, 2000, P 7 INT C PRINC KNOW, P411
   Janhunen T., 2006, J APPL NONCLASSICAL, V1-2, P35, DOI DOI 10.3166/JANCL.16.35-86
   Janhunen T, 2006, ACM T COMPUT LOG, V7, P1, DOI 10.1145/1119439.1119440
   Jorge, 2001, LECT NOTES ARTIF INT, V2258, P306
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lierler Y, 2004, LECT NOTES ARTIF INT, V2923, P346
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lin F., 2002, KR-02, P170
   Lin FZ, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P112
   Liu LN, 2005, LECT NOTES ARTIF INT, V3662, P410, DOI 10.1007/11546207_37
   Lloyd J. W., 2012, Foundations of Logic Programming
   MAREK W, 1991, J ACM, V38, P588, DOI 10.1145/116825.116836
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Oikarinen E, 2004, LECT NOTES ARTIF INT, V2923, P180
   Oikarinen E, 2006, FRONT ARTIF INTEL AP, V141, P412
   Roth D, 1996, ARTIF INTELL, V82, P273, DOI 10.1016/0004-3702(94)00092-1
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Simons P, 1999, LECT NOTES ARTIF INT, V1730, P305, DOI 10.1007/3-540-46767-X_22
   SOININEN T, 2001, P AAAI SPRING S ANSW, P195
   Stockmeyer L. J., 1976, Theoretical Computer Science, V3, P1, DOI 10.1016/0304-3975(76)90061-X
   Syrjänen T, 2004, LECT NOTES COMPUT SC, V3229, P187, DOI 10.1007/978-3-540-30227-8_18
   Syrjanen T, 2001, LPARSE 1 0 USERS MAN
   Syrjanen Tommi., 2001, LP-NMR'01: Proceedings of the 6th International Conference on Logic Programming and Nonmonotonic Reasoning, P434, DOI DOI 10.1007/3-540-45402-038
   Turner H, 2003, THEOR PRACT LOG PROG, V3, P609, DOI 10.1017/S1471068403001819
NR 42
TC 6
Z9 6
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2007
VL 7
BP 697
EP 744
DI 10.1017/S1471068407003031
PN 6
PG 48
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 239ZR
UT WOS:000251557300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hruza, J
   Stepánek, P
AF Hruza, J
   Stepánek, P
TI Speedup of logic programs by binarization and partial deduction
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic programming; binarization; transforination; partial deduction;
   continuation
ID CONTINUATION
AB Binary logic programs can be obtained from ordinary logic programs by a binarizing transformation. In most cases, binary programs obtained this way are less efficient than the original programs. (Demoen, 1992) showed an interesting example of a logic program whose computational behaviour was improved when it, was transformed to a binary program and then specialized by partial deduction. The class of B-stratifiable logic programs is defined. It is shown that for every B-stratifiable logic program, binarization and Subsequent partial deduction produce a binary program which does not contain variables for continuations introduced by binarization. Such programs usually have a better computational behaviour than the original ones. Both binarization and partial deduction can be easily automated. A comparison with other related approaches to program transformation is given.
C1 Charles Univ Prague, Dept Theoret Comp Sci & Math Log, Prague 11800 1, Czech Republic.
C3 Charles University Prague
RP Hruza, J (corresponding author), Charles Univ Prague, Dept Theoret Comp Sci & Math Log, Malostranske Namesti 25, Prague 11800 1, Czech Republic.
EM hruza@kti.mff.cuni.cz; petr.stepanek@mff.cuni.cz
CR APT K, 1996, LOGIC PROGRAMMING PR
   De Schreye D, 1999, J LOGIC PROGRAM, V41, P231, DOI 10.1016/S0743-1066(99)00030-8
   DEMOEN B., 1992, P LOPSTR 92 INT WORK, P242
   GALLAGHER JP, 1990, P MET 90 WORKSH MET
   Hruza J, 2000, LECT NOTES ARTIF INT, V1861, P116
   Leuschel M, 2002, THEOR PRACT LOG PROG, V2, P461, DOI 10.1017/S147106840200145X
   LEUSCHEL M, 1996, LNCS, V1207, P83
   LEUSCHEL M, 1999, DOZENS PROBLEMS PART
   LLOYD JW, 1991, J LOGIC PROGRAM, V11, P217, DOI 10.1016/0743-1066(91)90027-M
   MAHER MJ, 1986, LECT NOTES COMPUT SC, V225, P410
   PETTOROSSI A, 1997, P ACM SIGPL WORKSH C
   PROIETTI M, 1994, J LOGIC PROGRAM, V19, P261
   Sagonas K, 1995, P 12 INT C LOG PROGR, P349
   SAHLIN D, 1993, NEW GENERAT COMPUT, V12, P7, DOI 10.1007/BF03038271
   SATO T, 1989, NEW GENERAT COMPUT, V6, P421, DOI 10.1007/BF03037449
   STEPANKOVA O, 1989, LECT NOTES COMP SCI, V440, P396
   TARAU P, 1992, LECT NOTES COMPUT SC, V631, P479, DOI 10.1007/3-540-55844-6_158
   TARAU P, 1990, LECT NOTES COMPUT SC, V456, P159
   Tarnlund S.-A., 1977, BIT (Nordisk Tidskrift for Informationsbehandling), V17, P215, DOI 10.1007/BF01932293
   WAND M, 1980, J ACM, V27, P164, DOI 10.1145/322169.322183
NR 20
TC 2
Z9 2
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2004
VL 4
BP 355
EP 369
DI 10.1017/S147106840300190X
PN 3
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 819GE
UT WOS:000221302000004
DA 2024-07-18
ER

PT J
AU Le, TH
   Cao, HP
   Son, TC
AF Le, Trung Hoang
   Cao, Huiping
   Cao Son, Tran
TI ASPER: Answer Set Programming Enhanced Neural Network Models for Joint
   Entity-Relation Extraction
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE joint entity-relation extraction; semi-supervised learning; answer set
   programming; knowledge-enhanced models
AB A plethora of approaches have been proposed for joint entity-relation (ER) extraction. Most of these methods largely depend on a large amount of manually annotated training data. However, manual data annotation is time-consuming, labor-intensive, and error-prone. Human beings learn using both data (through induction) and knowledge (through deduction). Answer Set Programming (ASP) has been a widely utilized approach for knowledge representation and reasoning that is elaboration tolerant and adept at reasoning with incomplete information. This paper proposes a new approach, ASP-enhanced Entity-Relation extraction (ASPER), to jointly recognize entities and relations by learning from both data and domain knowledge. In particular, ASPER takes advantage of the factual knowledge (represented as facts in ASP) and derived knowledge (represented as rules in ASP) in the learning process of neural network models. We have conducted experiments on two real datasets and compare our method with three baselines. The results show that our ASPER model consistently outperforms the baselines.
C1 [Le, Trung Hoang; Cao, Huiping; Cao Son, Tran] New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88003 USA.
C3 New Mexico State University
RP Le, TH (corresponding author), New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88003 USA.
EM trungle@nmsu.edu; hcao@nmsu.edu; tson@cs.nmsu.edu
RI Cao, Huiping/M-2596-2018
OI Cao, Huiping/0000-0002-1350-1846; Tran, Son/0000-0003-3689-8433
CR Bengio Y., 2009, P 26 ANN INT C MACH, V60, P6, DOI [DOI 10.1145/1553374.1553380, 10.1145/1553374.1553380]
   Cai L., 2021, ABDUCTIVE LEARNING G, P1815
   Cascante-Bonilla P, 2021, AAAI CONF ARTIF INTE, V35, P6912
   Chapelle O., 2006, SEMISUPERVISED LEARN
   Chen M., 2022, ABS221108722 CORR
   Dai WZ, 2019, ADV NEUR IN, V32
   Eberts M, 2020, FRONT ARTIF INTEL AP, V325, P2006, DOI 10.3233/FAIA200321
   Garcez AD, 2019, J APPL LOG-IFCOLOG, V6, P611
   Gebser M., 2014, TECHNICAL COMMUNICAT, V14
   GELFOND M, 1990, LOGIC PROGRAMM, P579
   Gupta P., 2016, COLING 2016 26 INT C, P2537
   Hu XM, 2021, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2021, P487
   Hu ZT, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2410, DOI 10.18653/v1/p16-1228
   Huang YX, 2020, IEEE DATA MINING, P1070, DOI 10.1109/ICDM50108.2020.00127
   Li X, 2004, HLT-NAACL 2004: HUMAN LANGUAGE TECHNOLOGY CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE MAIN CONFERENCE, P17
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Luan Y, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P3219
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   McClosky David, 2006, P MAIN C HUM LANG TE, P152, DOI DOI 10.3115/1220835.1220855
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Ouali Y., 2020, ABS200605278 CORR
   Reichart R., 2007, ACL
   Ruder S, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P1044
   Wang J, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P1706
   Yang Z, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1755
   Zhou ZH, 2005, IEEE T KNOWL DATA EN, V17, P1529, DOI 10.1109/TKDE.2005.186
   Zhou ZH, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-018-9801-4
NR 27
TC 0
Z9 0
U1 1
U2 7
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2023
VL 23
IS 4
SI SI
BP 765
EP 781
AR PII S1471068423000297
DI 10.1017/S1471068423000297
EA JUL 2023
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7Z0
UT WOS:001035412900001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fandinno, J
   Hansen, Z
   Lierler, Y
   Lifschitz, V
   Temple, N
AF Fandinno, Jorge
   Hansen, Zachary
   Lierler, Yuliya
   Lifschitz, Vladimir
   Temple, Nathan
TI External Behavior of a Logic Program and Verification of Refactoring
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; software verification; proof assistant;
   automated reasoning
AB Refactoring is modifying a program without changing its external behavior. In this paper, we make the concept of external behavior precise for a simple answer set programming language. Then we describe a proof assistant for the task of verifying that refactoring a program in that language is performed correctly.
C1 [Fandinno, Jorge; Hansen, Zachary; Lierler, Yuliya] Univ Nebraska, Omaha, NE 68182 USA.
   [Lifschitz, Vladimir; Temple, Nathan] Univ Texas Austin, Austin, TX USA.
C3 University of Nebraska System; University of Texas System; University of
   Texas Austin
RP Fandinno, J (corresponding author), Univ Nebraska, Omaha, NE 68182 USA.
EM jfandinno@unomaha.edu; zachhansen@unomaha.edu; ylierler@unomaha.edu;
   lifschitzv@gmail.com; nathan-temple@live.com
RI Fandinno, Jorge/JJC-6227-2023; Fandiño, Jorge/IVV-0515-2023; Fandino,
   Jorge/F-8705-2016
OI Lifschitz, Vladimir/0000-0001-6051-7907; Lierler,
   Yuliya/0000-0002-6146-623X; Fandino, Jorge/0000-0002-3917-8717
FU University of Nebraska Omaha, ORCA [26215]
FX We are grateful to Isil Dillig, Warren Hunt and Jayadev Misra for
   valuable comments on the problems discussed in this paper. Thanks also
   to Michael Gelfond and to the anonymous referees for advice on improving
   the previous versions. This work was partially supported by the
   University of Nebraska Omaha, ORCA Grant 26215.
CR Buddenhagen M., 2015, P INT C LOG PROGR NO
   Clark K. L., 1978, Logic and data bases, P293
   Fandinno J., 2022, P AAAI C ART INT
   Fandinno J., 2021, ELECT P THEORETICAL, V345
   Fandinno J., 2020, THEOR PRACT LOG PROG, V20
   Gebser Martin, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P74, DOI 10.1007/978-3-642-20832-4_6
   Gebser M., 2019, POTASSCO USER GUIDE
   Gebser M, 2015, THEOR PRACT LOG PROG, V15, P449, DOI 10.1017/S1471068415000150
   Gelfond M, 2014, KNOWLEDGE REPRESENTATION, REASONING, AND THE DESIGN OF INTELLIGENT AGENTS: THE ANSWER-SET PROGRAMMING APPROACH, P1, DOI 10.1017/CBO9781139342124
   Gelfond M, 2002, LECT NOTES ARTIF INT, V2408, P413
   Kovacs Laura, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P1, DOI 10.1007/978-3-642-39799-8_1
   Lifschitz V., 2022, THEOR PRACT LOG PROG, V22
   Oetsch J, 2008, LECT NOTES COMPUT SC, V5366, P591, DOI 10.1007/978-3-540-89982-2_49
   Serebrenik A., 2003, INT C LOG PROGR
   Wang Y., 2018, P ACM S PROGR LANG
NR 15
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2023
VL 23
IS 4
SI SI
BP 933
EP 947
AR PII S1471068423000200
DI 10.1017/S1471068423000200
EA JUL 2023
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7Z0
UT WOS:001030786900001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Lifschitz, V
AF Lifschitz, Vladimir
TI On Program Completion, with an Application to the Sum and Product Puzzle
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; program completion; stable models; sum and
   product puzzle; tight programs
AB This paper describes a generalization of Clark's completion that is applicable to logic programs containing arithmetic operations and produces syntactically simple, natural looking formulas. If a set of first-order axioms is equivalent to the completion of a program, then we may be able to find standard models of these axioms by running an answer set solver. As an example, we apply this "reverse completion" procedure to the Sum and Product Puzzle.
C1 [Lifschitz, Vladimir] Univ Texas Austin, Austin, TX 78712 USA.
C3 University of Texas System; University of Texas Austin
RP Lifschitz, V (corresponding author), Univ Texas Austin, Austin, TX 78712 USA.
EM lifschitzv@gmail.com
OI Lifschitz, Vladimir/0000-0001-6051-7907
CR Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Clark K. L., 1978, Logic and data bases, P293
   Fages F., 1991, New Generation Computing, V9, P425, DOI 10.1007/BF03037172
   Fandinno J., 2020, THEOR PRACT LOG PROG, V20
   Gebser M., 2019, POTASSCO USER GUIDE
   Gebser M, 2015, THEOR PRACT LOG PROG, V15, P449, DOI 10.1017/S1471068415000150
   Lierler Y, 2004, LECT NOTES ARTIF INT, V2923, P346
   Lifschitz V., 2021, P EUR C ART INT
   Lifschitz V, 2019, LECT NOTES ARTIF INT, V11481, P270, DOI 10.1007/978-3-030-20528-7_20
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Lloyd J. W., 1984, Journal of Logic Programming, V1, P225, DOI 10.1016/0743-1066(84)90011-6
   McCarthy J., 1990, FORMALIZING COMMON S
   Misra J., 2022, EFFECTIVE THEORIES P
   van Ditmarsch HP, 2005, LECT NOTES ARTIF INT, V3809, P790
NR 14
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2023
VL 23
IS 4
SI SI
BP 664
EP 677
AR PII S1471068423000224
DI 10.1017/S1471068423000224
EA JUL 2023
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7Z0
UT WOS:001027937700001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Bozzato, L
   Eiter, T
   Serafini, L
AF Bozzato, Loris
   Eiter, Thomas
   Serafini, Luciano
TI Reasoning on DL-Lite<sub>R</sub> with Defeasibility in ASP
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE defeasible knowledge; description logics; answer set programming;
   justifiable exceptions
ID KNOWLEDGE REPOSITORIES; DESCRIPTION LOGICS; COMPLEXITY
AB Reasoning on defeasible knowledge is a topic of interest in the area of description logics, as it is related to the need of representing exceptional instances in knowledge bases. In this direction, in our previous works we presented a framework for representing (contextualized) OWL RL knowledge bases with a notion of justified exceptions on defeasible axioms: reasoning in such framework is realized by a translation into ASP programs. The resulting reasoning process for OWL RL, however, introduces a complex encoding in order to capture reasoning on the negative information needed for reasoning on exceptions. In this paper, we apply the justified exception approach to knowledge bases in DL-Lite(R), that is, the language underlying OWL QL. We provide a definition for DL-Lite(R )knowledge bases with defeasible axioms and study their semantic and computational properties. In particular, we study the effects of exceptions over unnamed individuals. The limited form of DL-Lite(R) axioms allows us to formulate a simpler ASP encoding, where reasoning on negative information is managed by direct rules. The resulting materialization method gives rise to a complete reasoning procedure for instance checking in DL-LiteR with defeasible axioms.(1)
C1 [Bozzato, Loris; Serafini, Luciano] Fdn Bruno Kessler, Via Sommar 18, I-38123 Trento, Italy.
   [Eiter, Thomas] Tech Univ Wien, Favoritenstr 9-11, A-1040 Vienna, Austria.
C3 Fondazione Bruno Kessler; Technische Universitat Wien
RP Bozzato, L (corresponding author), Fdn Bruno Kessler, Via Sommar 18, I-38123 Trento, Italy.
EM bozzato@fbk.eu; eiter@kr.tuwien.ac.at; serafini@fbk.eu
RI Eiter, Thomas/ABE-9263-2021
OI Eiter, Thomas/0000-0001-6003-6345; Bozzato, Loris/0000-0003-1757-9859
CR Alviano M, 2018, KUNSTL INTELL, V32, P119, DOI 10.1007/s13218-018-0545-9
   [Anonymous], 2006, EVEN MORE IRRESISTIB
   Baader F, 2003, DESCRIPTION LOGIC HANDBOOK: THEORY, IMPLEMENTATION AND APPLICATIONS, P43
   Bichler M, 2016, THEOR PRACT LOG PROG, V16, P552, DOI 10.1017/S1471068416000338
   Bonatti PA, 2015, ARTIF INTELL, V222, P1, DOI 10.1016/j.artint.2014.12.010
   BONATTI P. A., 2006, DESCRIPTION LOGICS C, P400
   Bonatti PA, 2011, J ARTIF INTELL RES, V42, P719
   BOZZATO L., 2014, CEUR WORKSHOP PROC, V1193, P112
   Bozzato L, 2013, CEUR WORKSHOP P, V1014, P552
   BOZZATO L., 2012, CEUR WORKSHOP PROC, V846, P114
   BOZZATO L., DESCRIPTION LOGIC TH, V11560, P110
   Bozzato L, 2018, SIXTEENTH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P329
   Bozzato L, 2019, LECT NOTES COMPUT SC, V11784, P19, DOI 10.1007/978-3-030-31095-0_2
   Bozzato L, 2018, ARTIF INTELL, V257, P72, DOI 10.1016/j.artint.2017.12.005
   Britz K, 2016, LECT NOTES COMPUT SC, V10021, P174, DOI 10.1007/978-3-319-48758-8_12
   Buccafurri F, 1999, LOGIC PROGRAMM, P79
   CADOLI M, 1994, J COMPUT SYST SCI, V48, P255, DOI 10.1016/S0022-0000(05)80004-2
   Calì A, 2012, J WEB SEMANT, V14, P57, DOI 10.1016/j.websem.2012.03.001
   Calvanese D, 2007, J AUTOM REASONING, V39, P385, DOI 10.1007/s10817-007-9078-x
   Casini G, 2019, INFORM SCIENCES, V501, P588, DOI 10.1016/j.ins.2018.09.037
   Casini G, 2010, LECT NOTES ARTIF INT, V6341, P77, DOI 10.1007/978-3-642-15675-5_9
   de Bruijn J, 2008, P 11 INT C PRINC KNO, P485
   De Bruijn J, 2011, ACM T COMPUT LOG, V12, DOI 10.1145/1929954.1929957
   DOHERTY P., 2006, 10 INT C PRINC KNOWL
   Eiter T, 2008, ARTIF INTELL, V172, P1495, DOI 10.1016/j.artint.2008.04.002
   Eiter T, 2016, FIFTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P359
   Fitting Melvin, 1996, Texts and Monographs in Computer Science, V2
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Giordano L, 2013, ARTIF INTELL, V195, P165, DOI 10.1016/j.artint.2012.10.004
   GIORDANO L., 2011, 22 INT JOINT C ARTIF, P894
   Grosof BenjaminN., 2003, P 12 INT WORLD WIDE, P48, DOI DOI 10.1145/775152.775160
   JANHUNEN T., 2010, LECT NOTES COMPUTER, V6341
   Krötzsch M, 2010, LECT NOTES ARTIF INT, V6341, P234, DOI 10.1007/978-3-642-15675-5_21
   Lembo D, 2010, LECT NOTES COMPUT SC, V6333, P103, DOI 10.1007/978-3-642-15918-3_9
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Motik B, 2012, OWL 2 Web Ontology Language Profiles
   Pensel M, 2018, INT J APPROX REASON, V103, P28, DOI 10.1016/j.ijar.2018.08.005
   Pensel M, 2017, LECT NOTES ARTIF INT, V10377, P78, DOI 10.1007/978-3-319-61660-5_9
   Serafini L, 2012, J WEB SEMANT, V12-13, P64, DOI 10.1016/j.websem.2011.12.003
   Woltran S, 2008, THEOR PRACT LOG PROG, V8, P217, DOI 10.1017/S1471068407003250
NR 40
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2022
VL 22
IS 2
SI SI
BP 254
EP 304
AR PII S1471068421000132
DI 10.1017/S1471068421000132
PG 51
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 6M9AN
UT WOS:000889154700005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lierler, Y
AF Lierler, Yuliya
TI Constraint Answer Set Programming: Integrational and Translational (or
   SMT-based) Approaches
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; constraints; satisfiability modulo theories
ID LOGIC-PROGRAMS; LANGUAGE; SYSTEM; ASP
AB Constraint answer set programming or CASP, for short, is a hybrid approach in automated reasoning putting together the advances of distinct research areas such as answer set programming, constraint processing, and satisfiability modulo theories. CASP demonstrates promising results, including the development of a multitude of solvers: acsolver, clingcon, ezcsp, idp, inca, dingo, mingo, aspmt2smt, clingo[l,dl], and ezsmt. It opens new horizons for declarative programming applications such as solving complex train scheduling problems. Systems designed to find solutions to constraint answer set programs can be grouped according to their construction into, what we call, integrational or translational approaches. The focus of this paper is an overview of the key ingredients of the design of constraint answer set solvers drawing distinctions and parallels between integrational and translational approaches. The paper also provides a glimpse at the kind of programs its users develop by utilizing a CASP encoding of Traveling Salesman problem for illustration. In addition, we place the CASP technology on the map among its automated reasoning peers as well as discuss future possibilities for the development of CASP.
C1 [Lierler, Yuliya] Univ Nebraska, Omaha, NE 68182 USA.
C3 University of Nebraska System
RP Lierler, Y (corresponding author), Univ Nebraska, Omaha, NE 68182 USA.
EM ylierler@unomaha.edu
FU NSF [1707371]; Div Of Information & Intelligent Systems; Direct For
   Computer & Info Scie & Enginr [1707371] Funding Source: National Science
   Foundation
FX I would like to acknowledge and cordially thank many of my collaborators
   with whom we had a chance to contribute to an exciting field of
   Constraint Answer Set Programming and many of my colleagues who have
   fostered my understanding of the subject matter: Marcello Balduccini,
   Broes De Cat, Marc Denecker, Martin Gebser, Michael Gelfond, Tomi
   Janhunen, Roland Kaminski, Martin Nyx Brain, Joohyung Lee, Ilkka
   Niemela, Max Ostrowski, Torsten Schaub, Peter Schueller, Da Shen,
   Benjamin Susman, Cesare Tinelli, Miroslaw Truszczynski, Philipp Wanko,
   Yuanlin Zhang. Thank you for the years of an incredible journey. Also, I
   would like to thank the anonymous reviewers for their valuable feedback,
   which helped to bring the article to this form. This work was partially
   supported by the NSF 1707371 grant.
CR Abels D, 2019, LECT NOTES ARTIF INT, V11481, P3, DOI 10.1007/978-3-030-20528-7_1
   Andres B., 2012, TECHNICAL COMMUNICAT, V17, P211
   [Anonymous], 2007, The Traveling Salesman Problem and Its Variations
   [Anonymous], 2012, PRINCIPLES KNOWLEDGE
   [Anonymous], 1974, ROSENFELD
   Balduccini M., 2005, P INF AER
   Balduccini M, 2017, THEOR PRACT LOG PROG, V17, P591, DOI 10.1017/S1471068417000187
   Balduccini M, 2017, THEOR PRACT LOG PROG, V17, P462, DOI 10.1017/S1471068417000102
   Balduccini M, 2013, THEOR PRACT LOG PROG, V13, P547, DOI 10.1017/S1471068413000343
   Balduccini M, 2011, LECT NOTES ARTIF INT, V6645, P284
   Banbara Mutsunori, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P112, DOI 10.1007/978-3-319-23264-5_10
   Banbara M, 2017, THEOR PRACT LOG PROG, V17, P408, DOI 10.1017/S1471068417000138
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Barrett C., 2008, HDB SATISFIABILITY, P737
   Barrett C, 2015, Tech. rep.
   Barrett Clark., 2014, Handbook of Model Checking
   Bartholomew M., 2016, THESIS ARIZONA STATE
   Bartholomew M., 2013, P 23 INT JOINT C ART, P718
   Bartholomew M, 2014, LECT NOTES ARTIF INT, V8761, P529, DOI 10.1007/978-3-319-11558-0_37
   Biavaschi, 2017, ANN REPORT
   Biere A, 2003, ADV COMPUT, V58, P117
   Bomanson J, 2020, ACM T COMPUT LOG, V21, DOI 10.1145/3412854
   Bomanson J, 2016, FUND INFORM, V147, P63, DOI 10.3233/FI-2016-1398
   Brain M., 2012, INT J ADV SOFTWARE, V5, P3
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Bromberger M, 2015, LECT NOTES ARTIF INT, V9195, P623, DOI 10.1007/978-3-319-21401-6_42
   Cabalar P., 2020, THEOR PRACT LOG PROG, V20
   Calimeri F, 2007, ANN MATH ARTIF INTEL, V50, P333, DOI 10.1007/s10472-007-9076-z
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   Calimeri F, 2011, LECT NOTES ARTIF INT, V6645, P388
   Calimeri F, 2008, LECT NOTES COMPUT SC, V5366, P407, DOI 10.1007/978-3-540-89982-2_37
   Carlsson Mats., 2014, Sicstus PROLOG User's Manual 4.3
   Clark K. L., 1978, Logic and data bases, P293
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Dal Palù A, 2004, BMC BIOINFORMATICS, V5, DOI 10.1186/1471-2105-5-186
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Denecker M., 2019, ARXIV190109125
   Dovier A, 2009, J EXP THEOR ARTIF IN, V21, P79, DOI 10.1080/09528130701538174
   Drescher C., 2011, P 22 INT JOINT C ART, P2596
   Drescher C, 2010, THEOR PRACT LOG PROG, V10, P465, DOI 10.1017/S1471068410000220
   Dutertre B., 2017, YICES
   Eiter T, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P90
   Elkabani I, 2004, LECT NOTES COMPUT SC, V3132, P73, DOI 10.1007/978-3-540-27775-0_6
   Erdogan ST, 2004, LECT NOTES ARTIF INT, V2923, P114
   Fages F., 1994, Methods of Logic in Computer Science, V1, P51
   Fandinno J, 2020, THEOR PRACT LOG PROG, V20, P735, DOI 10.1017/S1471068420000344
   Ferraris P, 2005, THEOR PRACT LOG PROG, V5, P45, DOI 10.1017/S1471068403001923
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Gebser M., 2010, 2010 Proceedings of 22nd International Conference on Tools with Artificial Intelligence (ICTAI 2010), P383, DOI 10.1109/ICTAI.2010.62
   Gebser M., 2016, OASIcs, V52, DOI 10.4230
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P136, DOI 10.1007/978-3-540-72200-7_13
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P953, DOI 10.1017/S1471068411000019
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P235, DOI 10.1007/978-3-642-02846-5_22
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P250, DOI 10.1007/978-3-642-02846-5_23
   Gomes CP, 2008, FOUND ARTIF INTELL, P89, DOI 10.1016/S1574-6526(07)03002-7
   Helsgaun K, 2000, EUR J OPER RES, V126, P106, DOI 10.1016/S0377-2217(99)00284-2
   IBM, 2009, IBM ILOG AMPL VERS 1
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   Janhunen T., 2006, J APPL NONCLASSICAL, V1-2, P35, DOI DOI 10.3166/JANCL.16.35-86
   Janhunen T., 2011, 1 WORKSH GROUND TRAN
   Janhunen T, 2017, THEOR PRACT LOG PROG, V17, P872, DOI 10.1017/S1471068417000242
   Janhunen T, 2009, LECT NOTES COMPUT SC, V5753, P142, DOI 10.1007/978-3-642-04238-6_14
   KAUTZ H, 1992, ECAI 92 - 10TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE : PROCEEDINGS, P359
   KOWALSKI RA, 1988, COMMUN ACM, V31, P38, DOI 10.1145/35043.35046
   Lee Joohyung., 2013, P 23 INT JOINT C ART
   Lierler Yuliya, 2012, Practical Aspects of Declarative Languages. Proceedings 14th International Symposium, PADL 2012, P63, DOI 10.1007/978-3-642-27694-1_6
   Lierler Y., 2010, THESIS U TEXAS AUSTI
   Lierler Y, 2017, THEOR PRACT LOG PROG, V17, P559, DOI 10.1017/S1471068417000114
   Lierler Y, 2017, CONSTRAINTS, V22, P307, DOI 10.1007/s10601-016-9257-7
   Lierler Y, 2014, ARTIF INTELL, V207, P1, DOI 10.1016/j.artint.2013.10.004
   Lierler Y, 2011, THEOR PRACT LOG PROG, V11, P629, DOI 10.1017/S1471068411000214
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Lifschitz V, 2017, THEOR PRACT LOG PROG, V17, P961, DOI 10.1017/S1471068417000345
   Lin, 2008, KR 2008, P454
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Mellarkod VS, 2008, ANN MATH ARTIF INTEL, V53, P251, DOI 10.1007/s10472-009-9116-y
   Nethercote N, 2007, LECT NOTES COMPUT SC, V4741, P529
   Niemelä I, 2000, SPRINGER INT SER ENG, V597, P491
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Niemelä I, 2008, ANN MATH ARTIF INTEL, V53, P313, DOI 10.1007/s10472-009-9118-9
   Nieuwenhuis R, 2005, LECT NOTES COMPUT SC, V3576, P321
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Nogueira M., 2001, Practical Aspects of Declarative Languages. Third International Symposium, PADL 2001. Proceedings (Lecture Notes in Computer Science Vol.1990), P169
   Nudelman E., 2004, SAT COMPETITION
   Ostrowski M., 2018, THESIS U POTSDAM
   PALU AD, 2010, INT J DATA MIN BIOIN, V4, P1
   Prasad M. R., 2005, International Journal on Software Tools for Technology Transfer, V7, P156, DOI 10.1007/s10009-004-0183-4
   Ricca F, 2012, THEOR PRACT LOG PROG, V12, P361, DOI 10.1017/S147106841100007X
   Rintanen J, 2012, ARTIF INTELL, V193, P45, DOI 10.1016/j.artint.2012.08.001
   Robinson N., 2010, ICAPS 2010 WORKSH CO
   Rosis A. F. D., 2015, 8 WORKSH ANSW SET PR
   Rossi F, 2008, FOUND ARTIF INTELL, P181, DOI 10.1016/S1574-6526(07)03004-0
   Shen D., 2018, P 34 INT C LOG PROGR
   Shen D., 2018, P 16 INT C PRINCIPLE
   Susman B., 2016, OPENACCESS SERIES IN
   Tinelli C., 2015, AUFLIRA
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
   Wintersteiger C. M., 2016, Z3
   Wittocx Johan., 2008, LaSh, P153
   Young R., 2017, WORKSH ANSW SET PROG
   Zhou NF, 2012, THEOR PRACT LOG PROG, V12, P189, DOI 10.1017/S1471068411000445
NR 105
TC 4
Z9 4
U1 1
U2 1
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2023
VL 23
IS 1
BP 195
EP 225
AR PII S1471068421000478
DI 10.1017/S1471068421000478
EA NOV 2021
PG 31
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA JO5Y4
UT WOS:000792145300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Besin, V
   Hecher, M
   Woltran, S
AF Besin, Viktor
   Hecher, Markus
   Woltran, Stefan
TI Utilizing Treewidth for Quantitative Reasoning on Epistemic Logic
   Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE epistemic logic programming; treewidth; tree decompositions;
   abstractions; hybrid solving; nested dynamic programming
AB Extending the popular answer set programming paradigm by introspective reasoning capacities has received increasing interest within the last years. Particular attention is given to the formalism of epistemic logic programs (ELPs) where standard rules are equipped with modal operators which allow to express conditions on literals for being known or possible, that is, contained in all or some answer sets, respectively. ELPs thus deliver multiple collections of answer sets, known as world views. Employing ELPs for reasoning problems so far has mainly been restricted to standard decision problems (complexity analysis) and enumeration (development of systems) of world views. In this paper, we take a next step and contribute to epistemic logic programming in two ways: First, we establish quantitative reasoning for ELPs, where the acceptance of a certain set of literals depends on the number (proportion) of world views that are compatible with the set. Second, we present a novel system that is capable of efficiently solving the underlying counting problems required to answer such quantitative reasoning problems. Our system exploits the graph-based measure treewidth and works by iteratively finding and refining (graph) abstractions of an ELP program. On top of these abstractions, we apply dynamic programming that is combined with utilizing existing search-based solvers like (e)clingo for hard combinatorial subproblems that appear during solving. It turns out that our approach is competitive with existing systems that were introduced recently.
C1 [Besin, Viktor; Hecher, Markus; Woltran, Stefan] TU Wien, Vienna, Austria.
C3 Technische Universitat Wien
RP Besin, V (corresponding author), TU Wien, Vienna, Austria.
EM vbesin@dbai.tuwien.ac.at; hecher@dbai.tuwien.ac.at;
   woltran@dbai.tuwien.ac.at
OI Woltran, Stefan/0000-0003-1594-8972
FU Austrian Science Fund (FWF) [P32830, Y698]; Vienna Science and
   Technology Fund [WWTF ICT19-065]; Austrian Science Fund (FWF) [P32830]
   Funding Source: Austrian Science Fund (FWF)
FX This work has been supported by the Austrian Science Fund (FWF), Grants
   P32830 and Y698, as well as the Vienna Science and Technology Fund,
   Grant WWTF ICT19-065. We would like to thank the reviewers for their
   detailed and valuable comments. Part of the research was carried out
   while Hecher was visiting the Simons Institute for the Theory of
   Computing.
CR Abseher M, 2017, LECT NOTES COMPUT SC, V10335, P376, DOI 10.1007/978-3-319-59776-8_30
   [Anonymous], 2019, P ICLP
   Bichler M, 2020, THEOR PRACT LOG PROG, V20, P435, DOI 10.1017/S1471068420000022
   Bliem B, 2016, FRONT ARTIF INTEL AP, V285, P1105, DOI 10.3233/978-1-61499-672-9-1105
   Bodlaender HL, 1996, J ALGORITHMS, V21, P358, DOI 10.1006/jagm.1996.0049
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Cabalar P, 2020, THEOR PRACT LOG PROG, V20, P834, DOI 10.1017/S1471068420000228
   Cabalar P, 2019, LECT NOTES ARTIF INT, V11481, P120, DOI 10.1007/978-3-030-20528-7_10
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Fichte JK, 2021, AAAI CONF ARTIF INTE, V35, P6349
   Fichte JK, 2020, IEEE S LOG, P410, DOI 10.1145/3373718.3394756
   Fichte JK, 2019, ANN MATH ARTIF INTEL, V86, P121, DOI 10.1007/s10472-019-09633-x
   Fierens D, 2015, THEOR PRACT LOG PROG, V15, P358, DOI 10.1017/S1471068414000076
   Ganian R, 2017, LEIBNIZ INT PR INFOR, V66, DOI 10.4230/LIPIcs.STACS.2017.36
   GELFOND M, 1991, PROCEEDINGS : NINTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P386
   Hanks S., 1986, Proceedings AAAI-86: Fifth National Conference on Artificial Intelligence, P328
   Hecher M, 2020, KR2020: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P485
   Hecher M, 2020, AAAI CONF ARTIF INTE, V34, P2830
   Hecher M, 2020, LECT NOTES COMPUT SC, V12178, P343, DOI 10.1007/978-3-030-51825-7_25
   Jakl M, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P816
   Kahl P. T., 2015, J LOG COMPUT, V25
   Lonc Z., 2003, ACM Transactions on Computational Logic, V4, P91, DOI 10.1145/601775.601779
   Shen YD, 2016, ARTIF INTELL, V237, P115, DOI 10.1016/j.artint.2016.04.004
   Son TC, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1269
   Truszczyriski Miroslaw, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P315, DOI 10.1007/978-3-642-20832-4_20
NR 25
TC 3
Z9 3
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2021
VL 21
IS 5
SI SI
BP 575
EP 592
AR PII S1471068421000399
DI 10.1017/S1471068421000399
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA XB4RH
UT WOS:000721317500005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Taupe, R
   Weinzierl, A
   Friedrich, G
AF Taupe, Richard
   Weinzierl, Antonius
   Friedrich, Gerhard
TI Conflict Generalisation in ASP: Learning Correct and Effective
   Non-Ground Constraints
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE Answer Set Programming; Deductive Learning; Non-Ground Nogood Learning
AB Generalising and re-using knowledge learned while solving one problem instance has been neglected by state-of-the-art answer set solvers. We suggest a new approach that generalises learned nogoods for re-use to speed-up the solving of future problem instances. Our solution combines well-known ASP solving techniques with deductive logic-based machine learning. Solving performance can be improved by adding learned non-ground constraints to the original program. We demonstrate the effects of our method by means of realistic examples, showing that our approach requires low computational cost to learn constraints that yield significant performance benefits in our test cases. These benefits can be seen with ground-and-solve systems as well as lazy-grounding systems. However, ground-and-solve systems suffer from additional grounding overheads, induced by the additional constraints in some cases. By means of conflict minimization, non-minimal learned constraints can be reduced. This can result in significant reductions of grounding and solving efforts, as our experiments show.
C1 [Taupe, Richard] Siemens AG Osterreich, Graz, Austria.
   [Taupe, Richard; Friedrich, Gerhard] Alpen Adria Univ, Klagenfurt, Austria.
   [Weinzierl, Antonius] TU Wien Vienna Univ Technol, Vienna, Austria.
C3 Siemens AG; University of Klagenfurt; Technische Universitat Wien
RP Taupe, R (corresponding author), Siemens AG Osterreich, Graz, Austria.; Taupe, R (corresponding author), Alpen Adria Univ, Klagenfurt, Austria.
EM richard.taupe@siemens.com; antonius.weinzierl@kr.tuwien.ac.at;
   gerhard.friedrich@aau.at
OI Comploi-Taupe, Richard/0000-0001-7639-1616
FU Austrian Federal Ministry of Transport, Innovation and Technology
   (BMVIT) [861263]; EU-ECSEL [737459]
FX This work has been conducted in the scope of the research project
   DynaCon (FFG-PNr.: 861263), which is funded by the Austrian Federal
   Ministry of Transport, Innovation and Technology (BMVIT) under the
   program "ICT of the Future" between 2017 and 2020,<SUP>13</SUP> and in
   the scope of the research project Productive4.0, which is funded by
   EU-ECSEL under grant agreement no737459.
CR Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   Bogaerts B, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1737
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Dejong G., 1986, Machine Learning, V1, P145, DOI 10.1007/BF00114116
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   FRIEDRICH G., 2011, CONF WORKSH
   GEBSER M., 2020, THEORY PRACT LOG PRO, V20, P176
   Gebser M., 2014, ABS14053694 CORR
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   HIRSH H., 1987, IJCAI, P221
   LEUTGEB L., 2017, LECT NOTES COMPUTER, V10997, P132
   Marques-Silva J, 2009, FRONT ARTIF INTEL AP, V185, P131, DOI 10.3233/978-1-58603-929-5-131
   Mitchell T. M., 1986, Machine Learning, V1, P47, DOI 10.1023/A:1022691120807
   Mitchell T.M., 2017, MACH LEARN
   Redl C, 2016, RCRA AI IA CEUR WORK, P45
   Russell S., 2010, ARTIF INTELL, V3rd
   RYABOKON A., 2015, THESIS
   Shepherdson J. C., 1984, Journal of Logic Programming, V1, P51, DOI 10.1016/0743-1066(84)90023-2
   Taupe R, 2019, LECT NOTES ARTIF INT, V11481, P298, DOI 10.1007/978-3-030-20528-7_22
   VANHARMELEN F, 1988, ARTIF INTELL, V36, P401, DOI 10.1016/0004-3702(88)90088-4
   WEINZIERL A., 2013, 2 WORKSH GROUND TRAN, P25
   Weinzierl A, 2017, LECT NOTES ARTIF INT, V10377, P191, DOI 10.1007/978-3-319-61660-5_17
   Zhang LT, 2001, ICCAD 2001: IEEE/ACM INTERNATIONAL CONFERENCE ON COMPUTER AIDED DESIGN, DIGEST OF TECHNICAL PAPERS, P279, DOI 10.1109/ICCAD.2001.968634
NR 23
TC 1
Z9 1
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2020
VL 20
IS 5
SI SI
BP 799
EP 814
AR PII S1471068420000368
DI 10.1017/S1471068420000368
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR5RA
UT WOS:000571619500015
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Kafle, B
   Gallagher, JP
   Gange, G
   Schachte, P
   Sondergaard, H
   Stuckey, PJ
AF Kafle, Bishoksan
   Gallagher, John P.
   Gange, Graeme
   Schachte, Peter
   Sondergaard, Harald
   Stuckey, Peter J.
TI An iterative approach to precondition inference using constrained Horn
   clauses
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
DE Precondition inference; backwards analysis; abstract interpretation;
   refinement; program specialisation; program transformation
ID ABSTRACT INTERPRETATION; VERIFICATION; SEMANTICS; PROGRAMS
AB We present a method for automatic inference of conditions on the initial states of a program that guarantee that the safety assertions in the program are not violated. Constrained Horn clauses (CHCs) are used to model the program and assertions in a uniform way, and we use standard abstract interpretations to derive an over-approximation of the set of unsafe initial states. The precondition then is the constraint corresponding to the complement of that set, under-approximating the set of safe initial states. This idea of complementation is not new, but previous attempts to exploit it have suffered from the loss of precision. Here we develop an iterative specialisation algorithm to give more precise, and in some cases optimal safety conditions. The algorithm combines existing transformations, namely constraint specialisation, partial evaluation and a trace elimination transformation. The last two of these transformations perform polyvariant specialisation, leading to disjunctive constraints which improve precision. The algorithm is implemented and tested on a benchmark suite of programs from the literature in precondition inference and software verification competitions.
C1 [Kafle, Bishoksan; Schachte, Peter; Sondergaard, Harald; Stuckey, Peter J.] Univ Melbourne, Melbourne, Vic, Australia.
   [Gallagher, John P.] Roskilde Univ, Roskilde, Denmark.
   [Gallagher, John P.] IMDEA Software Inst, Madrid, Spain.
   [Gange, Graeme] Monash Univ, Clayton, Vic, Australia.
C3 University of Melbourne; Roskilde University; IMDEA Software Institute;
   Monash University
RP Kafle, B (corresponding author), Univ Melbourne, Melbourne, Vic, Australia.
RI Schachte, Peter/H-4848-2016
OI Schachte, Peter/0000-0001-5959-3769; Sondergaard,
   Harald/0000-0002-2352-1883; Stuckey, Peter/0000-0003-2186-0459; Kafle,
   Bishoksan/0000-0001-5191-1216; Gallagher, John P./0000-0001-6984-7419
FU Australian Research Council; Discovery Project [DP140102194]; Discovery
   Early Career Researcher Award [DE160100568]
FX We are grateful for support from the Australian Research Council. The
   work was supported by Discovery Project grant DP140102194, and Graeme
   Gange is supported through Discovery Early Career Researcher Award
   DE160100568. We wish to thank Jorge Navas, for useful discussions based
   on an early draft of the manuscript, Emanuele De Angelis, for making
   benchmarks available to us, and the three anonymous reviewers, for
   suggestions which led to clear improvements of the paper.
CR [Anonymous], 1993, Partial Evaluation and Automatic Program Generation
   Bagnara R, 2008, SCI COMPUT PROGRAM, V72, P3, DOI 10.1016/j.scico.2007.08.001
   Bakhirkin A, 2017, LECT NOTES COMPUT SC, V10422, P23, DOI 10.1007/978-3-319-66706-5_2
   Bakhirkin A, 2014, LECT NOTES COMPUT SC, V8723, P34, DOI 10.1007/978-3-319-10936-7_3
   Ball T, 2004, LECT NOTES COMPUT SC, V2999, P1
   Beyer D, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P300, DOI 10.1145/1250734.1250769
   Beyer D, 2013, LECT NOTES COMPUT SC, V7795, P594
   Cassez F., 2017, LNCS, P42
   Clarke E, 2003, J ACM, V50, P752, DOI 10.1145/876638.876643
   Consot P, 2011, LECT NOTES COMPUT SC, V6538, P150, DOI 10.1007/978-3-642-18275-4_12
   COUSOT P, 1992, J LOGIC PROGRAM, V13, P103, DOI 10.1016/0743-1066(92)90030-7
   De Angelis E, 2017, SCI COMPUT PROGRAM, V147, P78, DOI 10.1016/j.scico.2016.11.002
   De Angelis E, 2014, SCI COMPUT PROGRAM, V95, P149, DOI 10.1016/j.scico.2014.05.017
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   Gallagher J., 1996, Partial Evaluation. International Seminar. Selected Papers, P115
   Gallagher J. P., 1993, Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation. PEPM'93, P88, DOI 10.1145/154630.154640
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   Grebenshchikov S, 2012, ACM SIGPLAN NOTICES, V47, P405, DOI 10.1145/2345156.2254112
   Gulavani BS, 2008, LECT NOTES COMPUT SC, V4963, P443, DOI 10.1007/978-3-540-78800-3_33
   Gupta A, 2009, LECT NOTES COMPUT SC, V5643, P634, DOI 10.1007/978-3-642-02658-4_48
   Gurfinkel A, 2015, LECT NOTES COMPUT SC, V9206, P343, DOI 10.1007/978-3-319-21690-4_20
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Howe JM, 2004, LECT NOTES COMPUT SC, V3049, P152
   Jaffar Joxan, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P758, DOI 10.1007/978-3-642-31424-7_61
   Jaffar J, 1998, J LOGIC PROGRAM, V37, P1, DOI 10.1016/S0743-1066(98)10002-X
   Jhala R, 2006, LECT NOTES COMPUT SC, V3920, P459
   Kafle B, 2017, SCI COMPUT PROGRAM, V137, P125, DOI 10.1016/j.scico.2017.01.002
   Kafle B, 2017, COMPUT LANG SYST STR, V47, P2, DOI 10.1016/j.cl.2015.11.001
   Kafle B, 2016, LECT NOTES COMPUT SC, V9779, P261, DOI 10.1007/978-3-319-41528-4_14
   Marriott K., 1993, ACM Letters on Programming Languages and Systems, V2, P181, DOI 10.1145/176454.176519
   Mine A., 2006, Higher-Order and Symbolic Computation, V19, P31, DOI 10.1007/s10990-006-8609-1
   Mine A., 2012, SUFFICIENT CONDITION
   Miné A, 2012, ELECTRON NOTES THEOR, V287, P89, DOI 10.1016/j.entcs.2012.09.009
   Moy Y, 2008, LECT NOTES COMPUT SC, V4905, P188, DOI 10.1007/978-3-540-78163-9_18
   Peralta JC, 1998, LECT NOTES COMPUT SC, V1503, P246
NR 35
TC 9
Z9 10
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 553
EP 570
DI 10.1017/S1471068418000091
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400017
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Kafle, B
   Gallagher, JP
   Ganty, P
AF Kafle, Bishoksan
   Gallagher, John P.
   Ganty, Pierre
TI Tree dimension in verification of constrained Horn clauses
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Specification; analysis and verification of systems; Horn clauses; tree
   dimension
ID IMPERATIVE PROGRAMS
AB In this paper, we show how the notion of tree dimension can be used in the verification of constrained Horn clauses (CHCs). The dimension of a tree is a numerical measure of its branching complexity and the concept here applies to Horn clause derivation trees. Derivation trees of dimension zero correspond to derivations using linear CHCs, while trees of higher dimension arise from derivations using non-linear CHCs. We show how to instrument CHCs predicates with an extra argument for the dimension, allowing a CHC verifier to reason about bounds on the dimension of derivations. Given a set of CHCs P, we define a transformation of P yielding a dimension-bounded set of CHCs P-<= k. The set of derivations for P-<= k consists of the derivations for P that have dimension at most k. We also show how to construct a set of clauses denoted P->k whose derivations have dimension exceeding k. We then present algorithms using these constructions to decompose a CHC verification problem. One variation of this decomposition considers derivations of successively increasing dimension. The paper includes descriptions of implementations and experimental results.
C1 [Kafle, Bishoksan] Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Vic, Australia.
   [Gallagher, John P.] Roskilde Univ, Dept People & Technol, Roskilde, Denmark.
   [Gallagher, John P.; Ganty, Pierre] IMDEA Software Inst, Madrid, Spain.
C3 University of Melbourne; Roskilde University; IMDEA Software Institute
RP Kafle, B (corresponding author), Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Vic, Australia.
EM bishoksank@unimelb.edu.au; jpg@ruc.dk; pierre.ganty@imdea.org
OI Gallagher, John P./0000-0001-6984-7419
FU EU FP7 Project [318337, 611004, 610686]; Madrid Regional Government
   [S2013/ICE-2731]; Spanish Ministry of Economy and Competitiveness
   [TIN2015-71819-P]; Australian Research Council Discovery Project
   [DP140102194]
FX The research leading to these results has been supported by EU FP7
   Project 318337, ENTRA - Whole-Systems Energy Transparency, EU FP7
   Project 611004, coordination and support action ICT- Energy, EU FP7
   Project 610686, POLCA - Programming Large Scale Heterogeneous
   Infrastructures, Madrid Regional Government Project S2013/ICE-2731,
   N-Greens Software - Next-GeneRation Energy-EfficieNt Secure Software,
   and the Spanish Ministry of Economy and Competitiveness Project
   TIN2015-71819-P, RISCO - RIgorous analysis of Sophisticated COncurrent
   and distributed systems. Author B. Kafle is supported by the Australian
   Research Council Discovery Project under Grant DP140102194.
CR Afrati F, 2003, THEOR COMPUT SCI, V308, P199, DOI 10.1016/S0304-3975(02)00730-2
   [Anonymous], 2013, Tech. Rep. MSR-TR-2013-6
   [Anonymous], 2015, TOOLS ALGORITHMS CON
   [Anonymous], 1996, Structure and interpretation of computer programs
   [Anonymous], 1992, Semantics with applications: a formal introduction
   [Anonymous], 1993, Partial Evaluation and Automatic Program Generation
   Bagnara R, 2008, SCI COMPUT PROGRAM, V72, P3, DOI 10.1016/j.scico.2007.08.001
   Beyer Dirk, 2015, Tools and Algorithms for the Construction and Analysis of Systems. 21st International Conference, TACAS 2015, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2015. Proceedings: LNCS 9035, P401, DOI 10.1007/978-3-662-46681-0_31
   Bjorner N, 2015, LECT NOTES COMPUT SC, V9300, P24, DOI 10.1007/978-3-319-23534-9_2
   Bjorner N, 2013, LECT NOTES COMPUT SC, V7935, P105
   De Angelis E., 2014, Lecture Notes in Computer Science, V8413, P568, DOI [DOI 10.1007/978-3-642-54862-8_47, 10.1007/978-3-642-54862-8_47]
   De Angelis E, 2015, THEOR PRACT LOG PROG, V15, P635, DOI 10.1017/S1471068415000289
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   Esparza J, 2007, LECT NOTES COMPUT SC, V4393, P296
   Esparza J, 2014, LECT NOTES COMPUT SC, V8370, P1, DOI 10.1007/978-3-319-04921-2_1
   Esparza J, 2010, J ACM, V57, DOI 10.1145/1857914.1857917
   Gallagher J., 1996, Partial Evaluation. International Seminar. Selected Papers, P115
   Gallagher J. P., 1993, Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation. PEPM'93, P88, DOI 10.1145/154630.154640
   Ganty P, 2017, INT J SOFTW TOOLS TE, V19, P565, DOI 10.1007/s10009-016-0420-7
   Gonnord L, 2006, LECT NOTES COMPUT SC, V4134, P144
   Grebenshchikov S, 2012, ACM SIGPLAN NOTICES, V47, P405, DOI 10.1145/2345156.2254112
   Grebenshchikov S, 2012, LECT NOTES COMPUT SC, V7214, P549, DOI 10.1007/978-3-642-28756-5_46
   Heizmann Matthias, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P36, DOI 10.1007/978-3-642-39799-8_2
   Heizmann M, 2009, LECT NOTES COMPUT SC, V5673, P69, DOI 10.1007/978-3-642-03237-0_7
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Hoder Krystof, 2012, LNCS, P157, DOI [10.1007/978-3-642-31612-8_13, DOI 10.1007/978-3-642-31612-8_13, DOI 10.1007/978-3-642-31612-813]
   Hojjat Hossein, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P247, DOI 10.1007/978-3-642-32759-9_21
   Jaffar J, 1998, J LOGIC PROGRAM, V37, P1, DOI 10.1016/S0743-1066(98)10002-X
   Kafle B, 2016, ELECTRON P THEOR COM, P33, DOI 10.4204/EPTCS.219.4
   Kafle B, 2017, COMPUT LANG SYST STR, V47, P2, DOI 10.1016/j.cl.2015.11.001
   Kafle B, 2016, LECT NOTES COMPUT SC, V9779, P261, DOI 10.1007/978-3-319-41528-4_14
   Mordvinov D., 2017, LPAR-21, 21st International Conference on Logic for Programming, Artificial Intelligence and Reasoning, Maun, Botswana, May 7-12, 2017, volume 46 of EPiC Series in Computing, V46, P338
   Peralta JC, 1998, LECT NOTES COMPUT SC, V1503, P246
   Reps T, 2016, ACM SIGPLAN NOTICES, V51, P663, DOI 10.1145/2914770.2837659
   Rummer Philipp, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P347, DOI 10.1007/978-3-642-39799-8_24
   Sharygina N., 2013, LECT NOTES COMPUTER, V8044
NR 36
TC 2
Z9 2
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2018
VL 18
IS 2
SI SI
BP 224
EP 251
DI 10.1017/S1471068418000030
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA GF5VA
UT WOS:000432034700004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alpuente, M
   Escobar, S
   Sapiña, J
   Cuenca-Ortega, A
AF Alpuente, M.
   Escobar, S.
   Sapina, J.
   Cuenca-Ortega, A.
TI <i>Inspecting Maude variants with</i> GLINTS
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming colocated with the
   23rd International Conference on Principles and Practice of Constraint
   Programming / 20th International Conference on Theory and Applications
   of Satisfiability Testing
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google
DE Rewriting Logic; Narrowing; Variant; Maude; Embedding; Finite Variant
   Property
ID LOGIC
AB This paper introduces GLINTS, a graphical tool for exploring variant narrowing computations in Maude. The most recent version of Maude, version 2.7.1, provides quite sophisticated unification features, including order-sorted equational unification for convergent theories modulo axioms such as associativity, commutativity, and identity. This novel equational unification relies on built-in generation of the set of variants of a term t, i.e., the canonical form of t sigma for a computed substitution sigma. Variant generation relies on a novel narrowing strategy called folding variant narrowing that opens up new applications in formal reasoning, theorem proving, testing, protocol analysis, and model checking, especially when the theory satisfies the finite variant property, i.e., there is a finite number of most general variants for every term in the theory. However, variant narrowing computations can be extremely involved and are simply presented in text format by Maude, often being too heavy to be debugged or even understood. The GLINTS system provides support for (i) determining whether a given theory satisfies the finite variant property, (ii) thoroughly exploring variant narrowing computations, (iii) automatic checking of node embedding and closedness modulo axioms, and (iv) querying and inspecting selected parts of the variant trees.
C1 [Alpuente, M.; Escobar, S.; Sapina, J.; Cuenca-Ortega, A.] Univ Politecn Valencia, DSIC ELP, Valencia, Spain.
   [Alpuente, M.; Escobar, S.; Sapina, J.; Cuenca-Ortega, A.] Univ Guayaquil, Guayaquil, Ecuador.
C3 Universitat Politecnica de Valencia; Universidad de Guayaquil
RP Alpuente, M (corresponding author), Univ Politecn Valencia, DSIC ELP, Valencia, Spain.; Alpuente, M (corresponding author), Univ Guayaquil, Guayaquil, Ecuador.
EM alpuente@dsic.upv.es; sescobar@dsic.upv.es; jsapina@dsic.upv.es;
   angel.cuencao@ug.edu.ec
RI Sapiña, Julia/P-8581-2019; Cuenca-Ortega, Angel/M-9005-2016; Escobar,
   Santiago/AAL-3399-2020; ALPUENTE, MARÍA/E-1899-2012
OI Sapiña, Julia/0000-0003-2994-6986; Cuenca-Ortega,
   Angel/0000-0001-7798-611X; Escobar, Santiago/0000-0002-3550-4781;
   ALPUENTE, MARÍA/0000-0002-9268-1178
FU EU (FEDER); Spanish MINECO [TIN 2015-69175-C4-1-R]; Generalitat
   Valenciana [PROMETEO-II/2015/013]; SENESCYT, Ecuador; FPI-UPV
   [SP2013-0083]; Air Force Office of Scientific Research
   [FA9550-17-1-0286]
FX This work has been partially supported by EU (FEDER) and Spanish MINECO
   grant TIN 2015-69175-C4-1-R and by Generalitat Valenciana
   PROMETEO-II/2015/013. Angel Cuenca-Ortega is supported by SENESCYT,
   Ecuador (scholarship program 2013), and Julia Sapina by FPI-UPV grant
   SP2013-0083. Santiago Escobar is supported by the Air Force Office of
   Scientific Research under award number FA9550-17-1-0286.
CR Alpuente M, 2016, THEOR PRACT LOG PROG, V16, P515, DOI 10.1017/S1471068416000375
   Alpuente M., 1997, Algebraic and Logic Programming. 6th International Joint Conference ALP'97 - HOA '97. Proceedings, P1, DOI 10.1007/BFb0026999
   Alpuente M, 1998, ACM T PROGR LANG SYS, V20, P768, DOI 10.1145/291891.291896
   Alpuente M, 2017, LECT NOTES COMPUT SC, V10184, P3, DOI 10.1007/978-3-319-63139-4_1
   [Anonymous], ACM COMPUTING SURVEY
   [Anonymous], 2016, TECHNICAL REPORT
   Bae K., 2013, LIPICS, V21, P81
   Bouchard C, 2013, LECT NOTES COMPUT SC, V8152, P327, DOI 10.1007/978-3-642-40885-4_23
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   Comon-Lundh H, 2005, LECT NOTES COMPUT SC, V3467, P294
   Deransart P., 2006, LECT NOTES COMPUTER, V1870
   Durán F, 2016, LECT NOTES ARTIF INT, V9706, P183, DOI 10.1007/978-3-319-40229-1_13
   Durán F, 2012, J LOGIC ALGEBR PROGR, V81, P816, DOI 10.1016/j.jlap.2011.12.004
   Durán F, 2009, LECT NOTES ARTIF INT, V5749, P246, DOI 10.1007/978-3-642-04222-5_15
   Erbatur Serdar, 2012, Computer Security - ESORICS 2012. Proceedings 17th European Symposium on Research in Computer Security, P73, DOI 10.1007/978-3-642-33167-1_5
   Escobar S, 2012, J LOGIC ALGEBR PROGR, V81, P898, DOI 10.1016/j.jlap.2012.01.002
   Escobar S, 2009, LECT NOTES COMPUT SC, V5705, P1, DOI 10.1007/978-3-642-03829-7_1
   Hanus Michael, 2013, Programming Logics. Essays in Memory of Harald Ganzinger: LNCS 7797, P123, DOI 10.1007/978-3-642-37651-1_6
   Leuschel M, 2002, LECT NOTES COMPUT SC, V2566, P379
   Mau-Dev, 2016, MAU DEV WEB SIT
   Meier Simon, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P696, DOI 10.1007/978-3-642-39799-8_48
   MESEGUER J, 1992, THEOR COMPUT SCI, V96, P73, DOI 10.1016/0304-3975(92)90182-F
   Meseguer J, 2006, LECT NOTES COMPUT SC, V4060, P252, DOI 10.1007/11780274_14
   Meseguer J, 2016, COMM COM INF SC, V596, P3, DOI 10.1007/978-3-319-29510-7_1
   Pettorossi A., 1996, Partial Evaluation. International Seminar. Selected Papers, P355
   Yang F., 2011, P 16 INT S PRINC PRA, P123
NR 26
TC 3
Z9 3
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 689
EP 707
DI 10.1017/S147106841700031X
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800002
OA Green Published
DA 2024-07-18
ER

PT J
AU Bauters, K
   Schockaert, S
   De Cock, M
   Vermeir, D
AF Bauters, Kim
   Schockaert, Steven
   De Cock, Martine
   Vermeir, Dirk
TI Characterizing and extending answer set semantics using possibility
   theory
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic programming; answer set programming; possibility theory
ID DISJUNCTIVE LOGIC PROGRAMS
AB Answer Set Programming (ASP) is a popular framework for modelling combinatorial problems. However, ASP cannot be used easily for reasoning about uncertain information. Possibilistic ASP (PASP) is an extension of ASP that combines possibilistic logic and ASP. In PASP a weight is associated with each rule, whereas this weight is interpreted as the certainty with which the conclusion can be established when the body is known to hold. As such, it allows us to model and reason about uncertain information in an intuitive way. In this paper we present new semantics for PASP in which rules are interpreted as constraints on possibility distributions. Special models of these constraints are then identified as possibilistic answer sets. In addition, since ASP is a special case of PASP in which all the rules are entirely certain, we obtain a new characterization of ASP in terms of constraints on possibility distributions. This allows us to uncover a new form of disjunction, called weak disjunction, that has not been previously considered in the literature. In addition to introducing and motivating the semantics of weak disjunction, we also pinpoint its computational complexity. In particular, while the complexity of most reasoning tasks coincides with standard disjunctive ASP, we find that brave reasoning for programs with weak disjunctions is easier.
C1 [Bauters, Kim; De Cock, Martine] Univ Ghent, Dept Appl Math Comp Sci & Stat, B-9000 Ghent, Belgium.
   [Schockaert, Steven] Cardiff Univ, Sch Comp Sci & Informat, Cardiff CF24 3AA, S Glam, Wales.
   [Vermeir, Dirk] Vrije Univ Brussel, Dept Comp Sci, B-1050 Brussels, Belgium.
C3 Ghent University; Cardiff University; Vrije Universiteit Brussel
RP Bauters, K (corresponding author), Univ Ghent, Dept Appl Math Comp Sci & Stat, Krijgslaan 281,WE02, B-9000 Ghent, Belgium.
EM kim.bauters@gmail.com; s.schockaert@cs.cardiff.ac.uk;
   martine.decock@ugent.be; dirk.vermeir@vub.ac.be
RI De Cock, Martine/B-8567-2009
OI De Cock, Martine/0000-0001-7917-0771; Schockaert,
   Steven/0000-0002-9256-2881
CR [Anonymous], P ICLP 1988
   [Anonymous], P 26 C UNC ART INT U
   [Anonymous], 2005, ADV MODAL LOGIC
   [Anonymous], 1993, LOGIC PROGRAMMING NO
   Banerjee M, 2009, LECT NOTES COMPUT SC, V5590, P805, DOI 10.1007/978-3-642-02906-6_69
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Bauters K., 2011, P 11 INT C SCAL UNC
   Benferhat S, 2002, INT J APPROX REASON, V29, P135, DOI 10.1016/S0888-613X(01)00061-5
   BENFERHAT S, 1992, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE (KR 92), P673
   Benferhat S, 1997, ARTIF INTELL-AMST, V92, P259, DOI 10.1016/S0004-3702(97)00012-X
   Brewka G, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P100
   Buccafurri F, 2002, THEOR PRACT LOG PROG, V2, P293, DOI 10.1017/S1471068402001394
   Buccafurri F, 2000, IEEE T KNOWL DATA EN, V12, P845, DOI 10.1109/69.877512
   CAI JY, 1988, SIAM J COMPUT, V17, P1232, DOI 10.1137/0217078
   Nieves JC, 2013, THEOR PRACT LOG PROG, V13, P33, DOI 10.1017/S1471068411000408
   Damasio C. V., 2001, Symbolic and Quantitative Approaches to Reasoning with Uncertainty. 6th European Conference, ECSQARU 2001. Proceedings (Lecture Notes in Artificial Intelligence Vol.2143), P748
   Dubois D, 1997, INT J APPROX REASON, V17, P295, DOI 10.1016/S0888-613X(97)00019-4
   DUBOIS D, 1991, ARTIF INTELL-AMST, V50, P223, DOI 10.1016/0004-3702(91)90101-O
   DUBOIS D, 1991, LOGIC PROGRAMM, P581
   Dubois D., 2012, P 13 INT C PRINC KNO, P519
   Dubois D., 1994, Handbook of Logic in Artificial Intelligence and Logic Programming, V3, P439
   EITER T, 1993, MIT PS LOG, P266
   Faber W, 2009, LECT NOTES COMPUT SC, V5753, P115, DOI 10.1007/978-3-642-04238-6_12
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1991, AAAI-91. Proceedings Ninth National Conference on Artificial Intelligence, P386
   Gelfond M., 1987, P AAAI 87, P207
   Huth Michael, 2004, Logic in Computer Science: Modelling and reasoning about systems
   Jaynes E. T., 2003, Probability Theory
   Lifschitz V, 2010, LECT NOTES COMPUT SC, V6300, P488, DOI 10.1007/978-3-642-15025-8_24
   Loyer Y, 2006, THEOR PRACT LOG PROG, V6, P355, DOI 10.1017/S1471068405002619
   MAREK W, 1991, J ACM, V38, P588, DOI 10.1145/116825.116836
   MOORE RC, 1985, ARTIF INTELL, V25, P75, DOI 10.1016/0004-3702(85)90042-6
   Nicolas P, 2006, ANN MATH ARTIF INTEL, V47, P139, DOI 10.1007/s10472-006-9029-y
   Nieves J.C., 2012, TECHNICAL COMMUNICAT, P267
   Papadimitriou C. H., 1994, Computational Complexity
   Pearce D, 1997, LECT NOTES ARTIF INT, V1216, P57, DOI 10.1007/BFb0023801
   SAKAMA C, 1994, J AUTOM REASONING, V13, P145, DOI 10.1007/BF00881915
   Truszczyriski Miroslaw, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P315, DOI 10.1007/978-3-642-20832-4_20
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P431, DOI 10.1007/978-3-540-27775-0_30
   Vlaeminck H., 2012, P 13 INT C PRINC KNO
   ZADEH LA, 1992, INT SYM MVL, P480, DOI 10.1109/ISMVL.1992.186834
NR 41
TC 8
Z9 9
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2015
VL 15
BP 79
EP 116
DI 10.1017/S147106841300063X
PN 1
PG 38
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA CB5LK
UT WOS:000349668400004
OA Bronze, Green Accepted, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Costa, VS
   Vaz, D
AF Costa, Vitor Santos
   Vaz, David
TI BigYAP: Exo-compilation meets UDI
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
ID PROLOG
AB The widespread availability of large data-sets poses both an opportunity and a challenge to logic programming. A first approach is to couple a relational database with logic programming, say, a Prolog system with MySQL. While this approach does pay off in cases where the data cannot reside in main memory, it is known to introduce substantial overheads. Ideally, we would like the Prolog system to deal with large data-sets in an efficient way both in terms of memory and of processing time. Just In Time Indexing (JITI) was mainly motivated by this challenge, and can work quite well in many application.
   Exo-compilation, designed to deal with large tables, is a next step that achieves very interesting results, reducing the memory footprint over two thirds. We show that combining exo-compilation with Just In Time Indexing can have significant advantages both in terms of memory usage and in terms of execution time.
   An alternative path that is relevant for many applications is User-Defined Indexing (UDI). This allows the use of specialized indexing for specific applications, say the spatial indexing crucial to any spatial system. The UDI sees indexing as pluggable modules, and can naturally be combined with Exo-compilation. We do so by using UDI with exo-data, and incorporating ideas from the UDI into high-performance indexers for specific tasks.
C1 [Costa, Vitor Santos; Vaz, David] Univ Porto, CRACS DCC FCUP, P-4100 Oporto, Portugal.
C3 Universidade do Porto
RP Costa, VS (corresponding author), Univ Porto, CRACS DCC FCUP, Rua Campo Alegre 823, P-4100 Oporto, Portugal.
RI Santos Costa, Vitor/B-2859-2012
OI Santos Costa, Vitor/0000-0002-3344-8237
FU ERDF European Regional Development Fund through the COMPETE Program
   (operational program for competitiveness); National Funds through the
   FCT Fundacao para a Ciencia e a Tecnologia (Portuguese Foundation for
   Science and Technology) [LEAP PTDC/EIA-CCO/112158/2009, ADE
   PTDC/EIA-EIA/121686/2010]
FX We would like to acknowledge the referees for their very valuable
   comments. This work is partially financed by the ERDF European Regional
   Development Fund through the COMPETE Program (operational program for
   competitiveness) and by National Funds through the FCT Fundacao para a
   Ciencia e a Tecnologia (Portuguese Foundation for Science and
   Technology) within projects LEAP PTDC/EIA-CCO/112158/2009 and ADE
   PTDC/EIA-EIA/121686/2010.
CR Angelopoulos N., 2013, COMMUNICATIONS ACM, V7752
   Ashburner M, 2000, NAT GENET, V25, P25, DOI 10.1038/75556
   CODD EF, 1970, COMMUN ACM, V13, P377, DOI 10.1145/357980.358007
   CONWAY T, 1995, P 12 INT C LOG PROGR, P242
   Costa VS, 2007, LECT NOTES COMPUT SC, V4670, P395
   Costa VS, 2007, LECT NOTES COMPUT SC, V4354, P185
   Costa VS, 2012, THEOR PRACT LOG PROG, V12, P5, DOI 10.1017/S1471068411000512
   DEMOEN B, 1989, LOGIC PROGRAMM, P1001
   Demoen B, 2000, LECT NOTES ARTIF INT, V1861, P1240
   Demoen B., 2007, P 7 C IMPL CONSTR LO, P117
   Guo HF, 2008, SOFTWARE PRACT EXPER, V38, P75, DOI 10.1002/spe.824
   Henke C., 2007, EMPIRICAL EVALUATION, V11
   Murray R. E., 2012, P ANIA ANN S WASH DC, V1176-1185
   Page D., 2012, P 26 C ART INT AAAI
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Van Roy P., 1994, J LOGIC PROGRAM, V19, P20
   Vaz D, 2009, LECT NOTES COMPUT SC, V5649, P372, DOI 10.1007/978-3-642-02846-5_31
   Warren D. H. D, 1977, TECH REP 39 AND 40
   Warren D. H. D, 1983, TECHNICAL NOTE 309
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
   Zhou NF, 2012, THEOR PRACT LOG PROG, V12, P547, DOI 10.1017/S1471068412000178
NR 21
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 799
EP 813
DI 10.1017/S1471068413000501
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400023
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lopes, R
   Costa, VS
   Silva, F
AF Lopes, Ricardo
   Costa, Vitor Santos
   Silva, Fernando
TI A design and implementation of the Extended Andorra Model
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic Programming; implementation; extended Andorra model
ID BEAM
AB Logic programming provides a high-level view of programming, giving implementers a vast latitude into what techniques to explore to achieve the best performance for logic programs. Towards obtaining maximum performance, one of the holy grails of logic programming has been to design computational models that could be executed efficiently and that would allow both for a reduction of the search space and for exploiting all the available parallelism in the application. These goals have motivated the design of the Extended Andorra Model (EAM), a model where goals that do not constrain nondeterministic goals can execute first. In this work, we present and evaluate the Basic design for EAM, a system that builds upon David H. D. Warren's original EAM with Implicit Control. We provide a complete description and implementation of the Basic design for EAM System as a set of rewrite and control rules. We present the major data structures and execution algorithms that are required for efficient execution, and evaluate system performance. A detailed performance study of our system is included. Our results show that the system achieves acceptable base performance and that a number of applications benefit from the advanced search inherent to the EAM.
C1 [Lopes, Ricardo] Univ Porto, CRACS INESC Porto LA, P-4169007 Oporto, Portugal.
   Univ Porto, Fac Ciencias, P-4169007 Oporto, Portugal.
C3 INESC TEC; Universidade do Porto; Universidade do Porto
RP Lopes, R (corresponding author), Univ Porto, CRACS INESC Porto LA, Rua Campo Alegre 1021, P-4169007 Oporto, Portugal.
EM vsc@dcc.fc.up.pt; fds@dcc.fc.up.pt
RI Silva, Fernando/HKW-3350-2023; Silva, Fernando/ABD-2062-2020; INESC-TEC,
   CRACS/F-7527-2012; Ih, Ahahah/K-2338-2015; Lopes, Ricardo T/O-8840-2014;
   Silva, Fernando/C-5986-2009; Santos Costa, Vitor/B-2859-2012
OI Ih, Ahahah/0000-0003-2851-0400; Silva, Fernando/0000-0001-8411-7094;
   Santos Costa, Vitor/0000-0002-3344-8237
FU HORUS [PTDC/EIA-EIA/100897/2008]; LEAP [PTDC/EIA-CCO/112158/2009];
   Programa de Financiamento Plurianual; Fundacao para a Ciencia e
   Tecnologia; Programa POSI; Fundação para a Ciência e a Tecnologia
   [PTDC/EIA-CCO/112158/2009] Funding Source: FCT
FX We would like to gratefully acknowledge the contributions we received
   from Salvador Abreu, Gopal Gupta, Enrico Pontelli and Ricardo Rocha. The
   work presented in this paper has been partially supported by project
   HORUS (PTDC/EIA-EIA/100897/2008), LEAP (PTDC/EIA-CCO/112158/2009), and
   funds granted to LIACC and CRACS & INESC-Porto LA through the Programa
   de Financiamento Plurianual, Fundacao para a Ciencia e Tecnologia and
   Programa POSI. Last, but not least, we would like to gratefully
   acknowledge the anonymous referees for the major contributions that they
   have given to this paper.
CR AGGOUN A., 1995, ECLIPSE 3 5 USER MAN
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], ACM T PROGRAMMING LA
   BUENO F., 1992, P INT C 5 GEN COMP S, P759
   CARLSSON M., 2004, 3120 SWED I COMP SCI
   COLMERAUER A., 1993, P 2 HIST PROGR LANG, P37
   DETLEFS D, 1994, SOFTWARE PRACT EXPER, V24, P527, DOI 10.1002/spe.4380240602
   GUPTA G., 1991, INTERPRETER EXTENDED
   GUPTA G., 1997, P 2 INT S PAR SYMB C, P68
   Hermenegildo M. V., 1991, New Generation Computing, V9, P233, DOI 10.1007/BF03037164
   HERMENEGILDO MV, 1986, LECT NOTES COMPUT SC, V225, P40
   HILL R., 1974, 78 U ED DEP ART INT
   JANSON S., 1991, P 1991 INT LOG PROGR, P167
   Janson S., 1992, Design of a Sequential Prototype Implementation of the Andorra Kernel Language
   JANSON S., 1994, THESIS UPPSALA U SWE
   Jones R.E., 1996, Garbage Collection: Algorithms for Automatic Dynamic Memory Management
   Lloyd J. W., 2012, Foundations of Logic Programming
   Lopes R, 2005, LECT NOTES COMPUT SC, V3350, P143
   Lopes R, 2003, LECT NOTES COMPUT SC, V2916, P407, DOI 10.1007/978-3-540-24599-5_28
   Lopes R, 2004, LECT NOTES COMPUT SC, V3057, P120
   Lopes R, 2003, LECT NOTES ARTIF INT, V2902, P131
   LOPES R., 2001, LECT NOTES COMPUTER, V1990, P199
   MONTELIUS J., 1995, NEW GENERAT COMPUT, V13, P31
   MONTELIUS J., 1997, P INT S LOG PROGR IL, P133
   PALMER D, 1991, P 8 INT C LOG PROGR
   Sagonas K, 1998, ACM T PROGR LANG SYS, V20, P586, DOI 10.1145/291889.291897
   SAGONAS K., 1996, THESIS STATE U NEW Y
   SAGONAS K., 1997, XSB PROGRAMMERS MANU
   SANTOS COSTA V., 2007, LECT NOTES COMPUTER, V4670, P305
   SANTOS COSTA V., 2008, LECT NOTES COMPUTER, V5366, P1
   SANTOS COSTA V., 1991, P 3 ACM SIGPLAN S PR, P83
   SANTOS COSTA V., 1991, P 8 INT C LOG PROGR, P443
   SANTOS COSTA V., 2000, YAP USERS MANUAL
   SANTOS COSTA V., 1993, THESIS U BRISTOL UK
   SANTOS COSTA V., 2003, J MACHINE LEARNING R, V4, P465
   SANTOS COSTA V., 1999, LECT NOTES COMPUTER, V1702, P261
   Smolka G, 1995, LECT NOTES COMPUT SC, V1000, P324
   SWIFT T., 1994, THESIS STATE U NEW Y
   UEDA K, 1990, LOGIC PROGRAMM, P3
   Ueda K, 2002, LECT NOTES ARTIF INT, V2407, P138
   WARREN D. H. D., 1990, ICLP 90 WORKSH PAR L
   WARREN D. H. D., 1989, PEPMA PROJ WORKSH
   WARREN D. H. D., 1988, GIG PROJ WORKSH
   Warren D. H. D., 1983, 309 SRI INT
   WARREN D. S., 1984, P 1984 S LOG PROGR, P198
NR 45
TC 2
Z9 2
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2012
VL 12
BP 319
EP 360
DI 10.1017/S1471068411000068
PN 3
PG 42
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 946PH
UT WOS:000304364400002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Codish, M
   Gonopolskiy, I
   Ben-Amram, AM
   Fuhs, C
   Giesl, J
AF Codish, Michael
   Gonopolskiy, Igor
   Ben-Amram, Amir M.
   Fuhs, Carsten
   Giesl, Juergen
TI SAT-based termination analysis using monotonicity constraints over the
   integers
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Logic Programming
CT 27th International Conference on Logic Programming
CY 2010
CY JUL 06-10, 2011
CL Lexington, KY
CL Lexington, KY
DE termination analysis; monotonicity constraints; SAT encoding
ID SIZE-CHANGE TERMINATION; PROVING TERMINATION
AB We describe an algorithm for proving termination of programs abstracted to systems of monotonicity constraints in the integer domain. Monotonicity constraints are a nontrivial extension of the well-known size-change termination method. While deciding termination for systems of monotonicity constraints is PSPACE complete, we focus on a well-defined and significant subset, which we call MCNP (for "monotonicity constraints in NP"), designed to be amenable to a SAT-based solution. Our technique is based on the search for a special type of ranking function defined in terms of bounded differences between multisets of integer values. We describe the application of our approach as the back end for the termination analysis of Java Bytecode. At the front end, systems of monotonicity constraints are obtained by abstracting information, using two different termination analyzers: AProVE and COSTA. Preliminary results reveal that our approach provides a good trade-off between precision and cost of analysis.
C1 [Codish, Michael; Gonopolskiy, Igor] Ben Gurion Univ Negev, Dept Comp Sci, IL-84105 Beer Sheva, Israel.
   [Ben-Amram, Amir M.] Tel Aviv Acad Coll, Sch Comp Sci, Tel Aviv, Israel.
   [Fuhs, Carsten; Giesl, Juergen] Rhein Westfal TH Aachen, LuFG Informat 2, Aachen, Germany.
C3 Ben Gurion University; RWTH Aachen University
RP Codish, M (corresponding author), Ben Gurion Univ Negev, Dept Comp Sci, IL-84105 Beer Sheva, Israel.
EM mcodish@cs.bgu.ac.il; gonopols@cs.bgu.ac.il; amirben@mta.ac.il;
   fuhs@informatik.rwth-aachen.de; giesl@informatik.rwth-aachen.de
RI Codish, Michael/AAH-2961-2020; CODISH, MICHAEL/F-1287-2012
OI Codish, Michael/0000-0003-0394-5854; Giesl, Jurgen/0000-0003-0283-8520
CR Albert E, 2008, LECT NOTES COMPUT SC, V5051, P2, DOI 10.1007/978-3-540-68863-1_2
   Alias C, 2010, LECT NOTES COMPUT SC, V6337, P117, DOI 10.1007/978-3-642-15769-1_8
   [Anonymous], 2010, Journal on Satisfiability, Boolean Modeling and Computation, DOI DOI 10.3233/SAT190075
   Avery J, 2006, LECT NOTES COMPUT SC, V3945, P192
   Ben-Amram AM, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1180475.1180480
   Ben-Amram A, 2009, ACTA INFORM, V46, P57, DOI 10.1007/s00236-008-0085-0
   Ben-Amrami AM, 2008, LECT NOTES COMPUT SC, V4963, P218, DOI 10.1007/978-3-540-78800-3_16
   BENAMRAM AM, LOGICAL MET IN PRESS
   Brockschmidt M, 2010, LECT NOTES ARTIF INT, V6463, P17, DOI 10.1007/978-3-642-17172-7_2
   Codish M, 2005, LECT NOTES COMPUT SC, V3668, P326, DOI 10.1007/11562931_25
   Codish M, 1999, J LOGIC PROGRAM, V41, P103, DOI 10.1016/S0743-1066(99)00006-0
   Codish M, 2006, LECT NOTES COMPUT SC, V4098, P4
   COLON M, 2002, LNCS, V2404, P442
   DERSHOWITZ N, 1979, COMMUN ACM, V22, P465, DOI 10.1145/359138.359142
   Dershowitz N, 2001, APPL ALGEBR ENG COMM, V12, P117, DOI 10.1007/s002000100065
   Fuhs C, 2009, LECT NOTES COMPUT SC, V5595, P32, DOI 10.1007/978-3-642-02348-4_3
   Giesl J, 2007, LECT NOTES ARTIF INT, V4603, P443
   Giesl J, 2006, J AUTOM REASONING, V37, P155, DOI 10.1007/s10817-006-9057-7
   Hirokawa N, 2005, INFORM COMPUT, V199, P172, DOI 10.1016/j.ic.2004.10.004
   Lee Chin Soon, 2001, PRINCIPLES PROGRAMMI, P81, DOI [10.1145/360204.360210, DOI 10.1145/360204.360210]
   Lindenstrauss N, 2004, LECT NOTES COMPUT SC, V3049, P453
   Lindenstrauss N, 1997, LOGIC PROGRAMM, P63
   MANNA Z, 1978, COMMUN ACM, V21, P159, DOI 10.1145/359340.359353
   Manolios P, 2006, LECT NOTES COMPUT SC, V4144, P401, DOI 10.1007/11817963_36
   Otto C, 2010, LEIBNIZ INT PR INFOR, V6, P259, DOI 10.4230/LIPIcs.RTA.2010.259
   Serebrenik A, 2004, THEOR PRACT LOG PROG, V4, P719, DOI 10.1017/S1471068404002042
   Spoto F, 2010, ACM T PROGR LANG SYS, V32, DOI 10.1145/1709093.1709095
NR 27
TC 5
Z9 5
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 503
EP 520
DI 10.1017/S1471068411000147
PN 4-5
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Comini, M
   Titolo, L
   Villanueva, A
AF Comini, Marco
   Titolo, Laura
   Villanueva, Alicia
TI Abstract diagnosis for timed concurrent constraint programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Logic Programming
CT 27th International Conference on Logic Programming
CY 2010
CY JUL 06-10, 2011
CL Lexington, KY
CL Lexington, KY
DE concurrent constraint paradigm; denotational semantics; abstract
   diagnosis; abstract interpretation
AB The timed concurrent constraint language (tccp in short) is a concurrent logic language based on the simple but powerful concurrent constraint paradigm of Saraswat. In this paradigm, the notion of store-as-value is replaced by the notion of store-as-constraint, which introduces some differences w.r.t. other approaches to concurrency. In this paper, we provide a general framework for the debugging of tccp programs. To this end, we first present a new compact, bottom-up semantics for the language that is well suited for debugging and verification purposes in the context of reactive systems. We also provide an abstract semantics that allows us to effectively implement debugging algorithms based on abstract interpretation. Given a tccp program and a behavior specification, our debugging approach automatically detects whether the program satisfies the specification. This differs from other semi-automatic approaches to debugging and avoids the need to provide symptoms in advance. We show the efficacy of our approach by introducing two illustrative examples. We choose a specific abstract domain and show how we can detect that a program is erroneous.
C1 [Comini, Marco; Titolo, Laura] Univ Udine, Dipartimento Matemat & Informat, I-33100 Udine, Italy.
   [Villanueva, Alicia] Univ Politecn Valencia, Dept Sistemas Informat & Computac, Valencia 46022, Spain.
C3 University of Udine; Universitat Politecnica de Valencia
RP Comini, M (corresponding author), Univ Udine, Dipartimento Matemat & Informat, Via Sci 206, I-33100 Udine, Italy.
EM marco.comini@uniud.it; laura.titolo@uniud.it; villanue@dsic.upv.es
RI Villanueva, Alicia/C-2972-2014; Comini, Marco/G-8074-2014
OI Villanueva, Alicia/0000-0003-1090-5009; Titolo,
   Laura/0000-0001-7820-7640; Comini, Marco/0000-0002-8069-3411
CR Alpuente M, 2005, THEOR COMPUT SCI, V346, P58, DOI 10.1016/j.tcs.2005.08.009
   Alpuente M, 2003, LECT NOTES COMPUT SC, V2664, P1, DOI 10.1007/3-540-45013-0_1
   [Anonymous], 2001, LECT NOTES COMPUTER, DOI DOI 10.1007/3-540-45578-7
   Bacci G, 2011, LECT NOTES COMPUT SC, V6564, P215, DOI 10.1007/978-3-642-20551-4_14
   Comini M, 1999, J LOGIC PROGRAM, V39, P43, DOI 10.1016/S0743-1066(98)10033-X
   COMINI M, 2011, DIMIUD012011RR
   Cousot P., 1979, 6 ACM S PRINCIPLES P, P269, DOI DOI 10.1145/567752.567778
   de Boer FS, 2000, INFORM COMPUT, V161, P45, DOI 10.1006/inco.1999.2879
   Falaschi M, 2007, LECT NOTES COMPUT SC, V4670, P271, DOI 10.1007/978-3-540-74610-2_19
   GELERNTER D, 1985, ACM T PROGR LANG SYS, V7, P80, DOI 10.1145/2363.2433
   Saraswat Vijay A., 1993, Concurrent Constraint Programming
   SHAPIRO EY, 1982, P 9 ANN ACM S PRINC, P412
NR 12
TC 10
Z9 10
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 487
EP 502
DI 10.1017/S1471068411000135
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100005
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Mileo, A
   Merico, D
   Bisiani, R
AF Mileo, A.
   Merico, D.
   Bisiani, R.
TI Reasoning support for risk prediction and prevention in independent
   living
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 24th International Conference on Logic Programming (ICLP)
CY DEC 09-13, 2008
CL Udine, ITALY
SP Assoc Log Programming
DE answer set programming; wireless sensor networks; independent living;
   prediction; context-awareness; knowledge representation; dependency
   graph
ID PEOPLE; SYSTEM; FALLS
AB In recent years there has been a growing interest in solutions for the delivery of clinical care for the elderly because of the large increase in aging population. Monitoring a patient in his home environment is necessary to ensure continuity of care in home settings, but, to be useful, this activity must not be too invasive for patients and a burden for caregivers. We prototyped a system called Secure and IN Dependent lIving (SINDI), focused on (a) collecting a limited amount of data about the person and the environment through Wireless Sensor Networks (WSN), and (b) inferring from these data enough information to support caregivers in understanding patients' well-being and in predicting possible evolutions of their health. Our hierarchical logic-based model of health combines data from different sources, sensor data, tests results, common-sense knowledge and patient's clinical profile at the lower level, and correlation rules between health conditions across upper levels. The logical formalization and the reasoning process are based on Answer Set Programming. The expressive power of this logic programming paradigm makes it possible to reason about health evolution even when the available information is incomplete and potentially incoherent, while declarativity simplifies rules specification by caregivers and allows automatic encoding of knowledge. This paper describes how these issues have been targeted in the application scenario of the SINDI system.
C1 [Mileo, A.; Merico, D.; Bisiani, R.] Univ Milano Bicocca, NOMADIS Res Lab, Dept Informat Syst & Commun, I-20126 Milan, Italy.
C3 University of Milano-Bicocca
RP Mileo, A (corresponding author), Univ Milano Bicocca, NOMADIS Res Lab, Dept Informat Syst & Commun, Viale Sarca 336-14, I-20126 Milan, Italy.
EM alessandra.mileo@disco.unimib.it; davide.merico@disco.unimib.it;
   roberto.bisiami@disco.unimib.it
RI Mileo, Alessandra/K-7175-2015
CR Akyildiz IF, 2002, IEEE COMMUN MAG, V40, P102, DOI 10.1109/MCOM.2002.1024422
   ALOMARI S, 2007, P ACM SIGMOBILE HEAL, P31
   [Anonymous], 2000, PROC HICSS
   Boger J, 2006, IEEE T INF TECHNOL B, V10, P323, DOI 10.1109/TITB.2006.864480
   Brewka G, 2004, COMPUT INTELL-US, V20, P335, DOI 10.1111/j.0824-7935.2004.00241.x
   Connell BR, 1997, ARCH PHYS MED REHAB, V78, P179, DOI 10.1016/S0003-9993(97)90261-6
   FLEMING KC, 1995, MAYO CLIN PROC, V70, P890
   FOLSTEIN MF, 1975, J PSYCHIAT RES, V12, P189, DOI 10.1016/0022-3956(75)90026-6
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P260, DOI 10.1007/978-3-540-72200-7_23
   GELFOND, 1988, ICLP, P1070
   GUIGOZ Y, 1994, FACTS RES GERONTOL, V2, pS15
   Haigh K., 2002, PROC AAAI 02 WORKSHO, P39
   KATZ S, 1970, GERONTOLOGIST, V10, P20, DOI 10.1093/geront/10.1_Part_1.20
   LAWTON MP, 1988, PSYCHOPHARMACOL BULL, V24, P609
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   LIAO L, 2004, P AAAI 04 WORKSH SUP, P30
   Malan D.J., 2004, P MOBISYS WORKSH APP
   MAREK W, 1989, LOGIC PROGRAMM, P243
   Mellarkod VS, 2008, ANN MATH ARTIF INTEL, V53, P251, DOI 10.1007/s10472-009-9116-y
   MILEO A, 2009, P IJCAI WORKSH INT S, P56
   Ness KK, 2003, PHYS THER, V83, P631, DOI 10.1093/ptj/83.7.631
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   NIEMELA I, 2001, LOGIC BASED ARTIFICI, P491
   Pollack ME, 2005, AI MAG, V26, P9
   Pollack ME, 2003, ROBOT AUTON SYST, V44, P273, DOI 10.1016/S0921-8890(03)00077-0
   Rubenstein LZ, 2006, AGE AGEING, V35, P37, DOI 10.1093/ageing/afl084
   Rudary M., 2004, PROC ICML 04, P91, DOI 10.1145/1015330.1015411.91.
   Ryan N.S., 1998, COMPUTER APPL ARCHAE
   SAVVIDES, 2001, P 7 ANN INT C MOB CO, P166
   Schilit B., 1994, 1994 1 WORKSHOP MOBI, P85, DOI [DOI 10.1109/WMCSA.1994.16, 10.1109/WMCSA.1994.16]
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Stuck AE, 1999, SOC SCI MED, V48, P445, DOI 10.1016/S0277-9536(98)00370-0
   TINETTI M, 2002, AM J MED, V80, P429
   Tonelli M R, 2001, Respir Care, V46, P1435
   Wei B, 2008, INT C COMP ELEC ENG, P398, DOI 10.1109/ICCEE.2008.59
   WOOD A, 2006, CS200611 U VIRGINIA
   Yamamoto S, 2004, DEMENT GERIATR COGN, V18, P172, DOI 10.1159/000079198
   YESAVAGE JA, 1983, J PSYCHIATR RES, V17, P37, DOI 10.1016/0022-3956(82)90033-4
NR 39
TC 6
Z9 6
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2011
VL 11
BP 361
EP 395
DI 10.1017/S147106841000058X
PN 2-3
PG 35
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 729UV
UT WOS:000287977500009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gabbrielli, M
   Mauro, J
   Meo, MC
   Sneyers, J
AF Gabbrielli, Maurizio
   Mauro, Jacopo
   Meo, Maria Chiara
   Sneyers, Jon
TI Decidability properties for fragments of CHR
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE constraint programming; expressivity; well-structured transition systems
AB We study the decidability of termination for two CH R dialects which, similarly to the Datalog like languages, are defined by using a signature which does not allow function symbols (of arity > 0). Both languages allow the use of the = built-in in the body of rules, thus are built on a host language that supports unification. However each imposes one further restriction. The first CHR dialect allows only range-restricted rules, that is, it does not allow the use of variables in the body or in the guard of a rule if they do not appear in the head. We show that the existence of an infinite computation is decidable for this dialect. The second dialect instead limits the number of atoms in the head of rules to one. We prove that in this case, the existence of a terminating computation is decidable. These results show that both dialects are strictly less expressive(1) than Turing Machines. It is worth noting that the language (without function symbols) without these restrictions is as expressive as Turing Machines.
C1 [Gabbrielli, Maurizio; Mauro, Jacopo] Univ Bologna, Dipartimento Sci Informaz, I-40126 Bologna, Italy.
   [Gabbrielli, Maurizio] Univ Bologna, Lab Focus INRIA, I-40126 Bologna, Italy.
   [Meo, Maria Chiara] Univ G dAnnunzio, Dipartimento Sci, Pescara, Italy.
   [Sneyers, Jon] Katholieke Univ Leuven, Dept Comp Wetenschappen, Louvain, Belgium.
C3 University of Bologna; University of Bologna; G d'Annunzio University of
   Chieti-Pescara; KU Leuven
RP Gabbrielli, M (corresponding author), Univ Bologna, Dipartimento Sci Informaz, I-40126 Bologna, Italy.
EM gabbri@cs.unibo.it; jmauro@cs.unibo.it; cmeo@unich.it;
   jon.sneyers@cs.kuleuven.be
OI Mauro, Jacopo/0000-0002-5285-2868; MEO, MARIA
   CHIARA/0000-0002-3700-3788; GABBRIELLI, MAURIZIO/0000-0003-0609-8662
CR Abdulla PA, 1996, IEEE S LOG, P313, DOI 10.1109/LICS.1996.561359
   Betz Hariolf, 2007, 4 WORKSH CONSTR HAND, P33
   Busi N, 2004, LECT NOTES COMPUT SC, V3142, P307
   de Boer FS, 2000, INFORM COMPUT, V161, P45, DOI 10.1006/inco.1999.2879
   DEBOER FS, 1990, LECT NOTES COMPUT SC, V458, P99
   Di Giusto C, 2009, LECT NOTES COMPUT SC, V5404, P205
   Duck GJ, 2004, LECT NOTES COMPUT SC, V3132, P90, DOI 10.1007/978-3-540-27775-0_7
   Finkel A, 2001, THEOR COMPUT SCI, V256, P63, DOI 10.1016/S0304-3975(00)00102-X
   Frühwirth T, 2001, THEOR PRACT LOG PROG, V1, P303, DOI 10.1017/S1471068401001181
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Fruhwirth T.W., 2009, Constraint Handling Rules
   Fruhwirth T. W., 2002, KR 02, P547
   GABBRIELLI M, 2010, DECIDABILITY PROPERT
   Sneyers J, 2010, THEOR PRACT LOG PROG, V10, P1, DOI 10.1017/S1471068409990123
   Sneyers J, 2009, ACM T PROGR LANG SYS, V31, DOI 10.1145/1462166.1462169
   Sneyers J, 2008, LECT NOTES COMPUT SC, V5366, P759, DOI 10.1007/978-3-540-89982-2_72
NR 16
TC 3
Z9 3
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 611
EP 626
DI 10.1017/S1471068410000311
PN 4-6
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200017
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Kucera, A
   Jancar, P
AF Kucera, Antonin
   Jancar, Petr
TI Equivalence-checking on infinite-state systems: Techniques and results
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE behavioral equivalences; infinite-state systems
ID BISIMULATION EQUIVALENCE; MODEL-CHECKING; DECIDING BISIMILARITY; WEAK
   BISIMILARITY; NORMED BPP; DECIDABILITY; UNDECIDABILITY; SIMULATION;
   COMPLEXITY; REGULARITY
AB The paper presents a selection of recently developed and/or used techniques for equivalence-checking on infinite-state systems, and an up-to-date overview of existing results (as of September 2004).
C1 Masaryk Univ, Fac Informat, CZ-60200 Brno, Czech Republic.
   Tech Univ Ostrava, FEI, Dept Comp Sci, CZ-70833 Ostrava, Czech Republic.
C3 Masaryk University Brno; Technical University of Ostrava
RP Kucera, A (corresponding author), Masaryk Univ, Fac Informat, Bot 68A, CZ-60200 Brno, Czech Republic.
EM tony@fi.muni.cz; Petr.Jancar@vsb.cz
RI Kucera, Antonin/G-5866-2013
OI Kucera, Antonin/0000-0002-6602-8028; Jancar, Petr/0000-0002-8738-9850
CR Abdulla PA, 1998, LECT NOTES COMPUT SC, V1466, P253, DOI 10.1007/BFb0055627
   ABDULLA PA, 1995, LECT NOTES COMPUTER, V962, P333
   ABDULLA PA, 1996, P LICS 96, P160
   [Anonymous], 2001, Modal and Temporal properties of processes
   [Anonymous], 1976, 62 YAL U
   Baeten J.C.M., 1990, Cambridge Tracts in Theoretical Computer Science, V18
   BAETEN JCM, 1993, J ACM, V40, P653, DOI 10.1145/174130.174141
   BAETEN JCM, 1987, THEOR COMPUT SCI, V51, P129, DOI 10.1016/0304-3975(87)90052-1
   BLANCO J, 1995, P ACP 94 WORKSH COMP, P242
   Bouajjani A, 2001, LECT NOTES COMPUT SC, V2076, P24
   Brázdil T, 2004, LECT NOTES COMPUT SC, V3170, P193
   BURCH J, 1992, INFORMATION COMPUTAT, V2, P142
   BURKART O, 1996, LECT NOTES COMPUTER, V1119, P247
   BURKART O, 1999, HDB PROCESS ALGEBRA, P545
   Burkart Olaf, 1995, MFCS, V969, P423
   CAUCAL D, 1992, THEOR COMPUT SCI, V106, P61, DOI 10.1016/0304-3975(92)90278-N
   CAUCAL D, 1990, RAIRO-INF THEOR APPL, V24, P339, DOI 10.1051/ita/1990240403391
   Cerná I, 1999, ACTA INFORM, V36, P233, DOI 10.1007/s002360050159
   CHRISTENSEN S, 1995, INFORM COMPUT, V121, P143, DOI 10.1006/inco.1995.1129
   Christensen S., 1993, THESIS U EDINBURGH
   Christensen S., 1993, LECTURE NOTES COMPUT, V715, P143
   Clark E., 1999, MODEL CHECKING
   Esparza J, 1997, ACTA INFORM, V34, P85, DOI 10.1007/s002360050074
   ESPARZA J, 1995, LNCS, V965, P221
   Friedman E. P., 1976, Theoretical Computer Science, V1, P297, DOI 10.1016/0304-3975(76)90074-8
   GROOTE JF, 1992, INFORM PROCESS LETT, V42, P167, DOI 10.1016/0020-0190(92)90142-I
   Hirshfeld E B, 1996, Health Matrix Clevel, V6, P3
   Hirshfeld Y, 1996, THEOR COMPUT SCI, V158, P143, DOI 10.1016/0304-3975(95)00064-X
   HIRSHFELD Y, 1994, LECT NOTES COMPUTER, V832, P165
   HIRSHFELD Y, 1996, ELECT NOTES THEORETI, V5
   HIRSHFELD Y, 1999, LECT NOTES COMPUTER, V1644, P412
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   Huttel H, 1998, J LOGIC COMPUT, V8, P485, DOI 10.1093/logcom/8.4.485
   HUYNH DT, 1994, THEOR COMPUT SCI, V123, P183, DOI 10.1016/0304-3975(92)00078-6
   Jancar P., 1996, Automata, Languages and Programming. 23rd International Colloquium, ICALP '96. Proceedings, P478
   Jancar P, 2004, INT FED INFO PROC, V155, P507
   Jancar P, 2004, INFORM COMPUT, V188, P1, DOI 10.1016/S0890-540l(03)00171-8
   Jancar P, 2003, IEEE S LOG, P218, DOI 10.1109/LICS.2003.1210061
   Jancar P, 2003, LECT NOTES COMPUT SC, V2761, P159
   Jancar P, 1995, LECT NOTES COMPUT SC, V915, P349
   Jancar P, 2001, THEOR COMPUT SCI, V258, P409, DOI 10.1016/S0304-3975(00)00027-X
   Jancar P, 2000, LECT NOTES COMPUT SC, V1770, P334
   Jancar P, 1999, LECT NOTES COMPUT SC, V1725, P404
   Jancar P, 1999, LECT NOTES COMPUT SC, V1664, P30
   JANCAR P, 1995, THEOR COMPUT SCI, V148, P281, DOI 10.1016/0304-3975(95)00037-W
   Jancar P, 2000, INFORM COMPUT, V158, P1, DOI 10.1006/inco.1999.2813
   Jancar P., 2004, P 3 INT WORKSH AUT V
   JANCAR P, 1997, ELECT NOTES THEORETI, V9
   JANCAR P, 1995, LECT NOTES COMPUTER, V962, P348
   KOT M, 2004, P INFINITY 2004, P73
   KOZEN D, 1983, THEOR COMPUT SCI, V27, P333, DOI 10.1016/0304-3975(82)90125-6
   Kucera A, 1999, INFORM PROCESS LETT, V72, P9, DOI 10.1016/S0020-0190(99)00125-8
   Kucera A, 2000, THEOR COMPUT SCI, V242, P71, DOI 10.1016/S0304-3975(98)00201-1
   Kucera A, 2004, LECT NOTES COMPUT SC, V3170, P371
   Kucera A, 2002, LECT NOTES COMPUT SC, V2420, P433
   Kucera A, 2003, THEOR COMPUT SCI, V304, P157, DOI 10.1016/S0304-3975(03)00081-1
   Kucera A, 2002, INFORM COMPUT, V173, P184, DOI 10.1006/inco.2001.3122
   Kucera A, 2002, THEOR COMPUT SCI, V270, P677, DOI 10.1016/S0304-3975(01)00094-9
   Kucera A, 2000, LECT NOTES COMPUT SC, V1961, P133
   KUCERA A, 2002, LNCS, V2421, P594
   KUCERA A, 2004, P IFIP TCS 2004, P395
   Mayr R, 2003, LECT NOTES COMPUT SC, V2719, P570
   Mayr R, 2000, INFORM COMPUT, V156, P264, DOI 10.1006/inco.1999.2826
   Mayr R., 2000, Theoretical Computer Science. Exploring New Frontiers of Theoretical Informatics. International Conference IFIP TCS 2000. Proceedings (Lecture Notes in Computer Science Vol.1872), P474
   Mayr R, 2001, THEOR COMPUT SCI, V256, P31, DOI 10.1016/S0304-3975(00)00101-8
   Mayr R, 2000, LECT NOTES COMPUT SC, V1853, P329
   Mayr R., 2004, ELECT NOTES THEORETI, V96, P153
   MAYR R, 1996, LNCS, V1180, P88
   Milner R., 1989, Communication and concurrency
   Moller F., 1996, LECT NOTES COMPUTER, V1119, P195
   Papadimitriou C. H., 1994, Computational Complexity
   Park K, 2005, J CONTROL RELEASE, V104, P167, DOI 10.1016/j.jconrel.2005.01.013
   Schnoebelen P, 2002, INFORM PROCESS LETT, V83, P251, DOI 10.1016/S0020-0190(01)00337-4
   SCHNOEBELEN P, 2001, LNCS, V2215, P385, DOI DOI 10.1007/3-540-45500-0_
   Sénizergues G, 2001, THEOR COMPUT SCI, V251, P1, DOI 10.1016/S0304-3975(00)00285-1
   Sénizergues G, 1998, ANN IEEE SYMP FOUND, P120, DOI 10.1109/SFCS.1998.743435
   Srba J., 2003, Mathematical Structures in Computer Science, V13, P567, DOI 10.1017/S0960129503003992
   Srba J, 2002, LECT NOTES COMPUT SC, V2380, P716
   SRBA J, 2002, LNCS, V2285, P535
   SRBA J, 2002, EATCS B, V78, P163
   SRBA J, 2002, LNCS, V2421, P579
   SRBA J, 2002, LECT NOTES COMPUTER, P197
   Srba J., 2004, ELECT NOTES COMPUTER, V98, P5
   STEFFEN B, 1994, INFORM COMPUT, V110, P149, DOI 10.1006/inco.1994.1028
   Stirling C, 2002, LECT NOTES COMPUT SC, V2380, P821
   Stirling C, 1998, THEOR COMPUT SCI, V195, P113, DOI 10.1016/S0304-3975(97)00216-8
   STRIBRNA J, 1998, ELECT NTES THEORETIC, V18
   THOMAS W, 1993, LECT NOTES COMPUTER, V668, P559
   van Glabbeek R.J., 1993, Lecture Notes in Computer Science, V715, P66, DOI [10.1007/3-540-57208-26, DOI 10.1007/3-540-57208-26]
   VANGLABBEEK R, 1999, HDB PROCESS ALGEBRA, P3
   Walukiewicz I, 2000, LECT NOTES COMPUT SC, V1974, P127
   Walukiewicz I, 2001, INFORM COMPUT, V164, P234, DOI 10.1006/inco.2000.2894
NR 92
TC 26
Z9 27
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2006
VL 6
BP 227
EP 264
DI 10.1017/S1471068406002651
PN 3
PG 38
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 051EI
UT WOS:000238143400002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Genaim, S
   Codish, M
AF Genaim, S
   Codish, M
TI Inferring termination conditions for logic programs using backwards
   analysis
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE program analysis; abstract interpretation; termination analysis;
   backwards analysis
ID ABSTRACT INTERPRETATION
AB This paper focuses on the inference of modes for which a logic program is guaranteed to terminate. This generalises traditional termination analysis where an analyser tries to verify termination for a specified mode. Our contribution is a methodology in which components of traditional termination analysis are combined with backwards analysis to obtain an analyser for termination inference. We identify a condition on the components of the analyser which guarantees that termination inference will infer all modes which can be checked to terminate. The application of this methodology to enhance a traditional termination analyser to perform also termination inference is demonstrated.
C1 Univ Verona, Dipartimento Informat, Verona, Italy.
   Ben Gurion Univ Negev, Dept Comp Sci, IL-84105 Beer Sheva, Israel.
C3 University of Verona; Ben Gurion University
RP Genaim, S (corresponding author), Univ Verona, Dipartimento Informat, Verona, Italy.
EM genaim@sci.univr.it; mcodish@cs.bgu.ac.il
RI CODISH, MICHAEL/F-1287-2012; Codish, Michael/AAH-2961-2020
OI Genaim, Samir/0000-0002-7176-1881; Codish, Michael/0000-0003-0394-5854
CR Apt K.R., 1990, HDB THEORETICAL COMP, P495
   Armstrong T, 1998, SCI COMPUT PROGRAM, V31, P3, DOI 10.1016/S0167-6423(96)00039-1
   BENOY F, 1996, 6 INT WORKSH LOG PRO, P204
   Brodsky A., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P190, DOI 10.1145/73721.73741
   Codish M, 1995, J LOGIC PROGRAM, V25, P249, DOI 10.1016/0743-1066(95)00064-X
   Codish M, 1999, J LOGIC PROGRAM, V41, P103, DOI 10.1016/S0743-1066(99)00006-0
   CODISH M, 2002, TERMIN WEB TERMINATI
   COUSOT P, 1992, J LOGIC PROGRAM, V13, P103, DOI 10.1016/0743-1066(92)90030-7
   Cousot P., 1977, C RECORD 1977 ACM S, P238
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   De Schreye D, 1994, J LOGIC PROGRAM, V20, P199, DOI 10.1016/0743-1066(94)90027-2
   DESCHREYE D, 1995, NEW GENERAT COMPUT, V13, P117, DOI 10.1007/BF03038311
   GENAIM S, 2001, LECT NOTES ARTIF INT, V2250, P681
   Giacobazzi R, 1998, ACM T PROGR LANG SYS, V20, P1067, DOI 10.1145/293677.293680
   KARR M, 1976, ACTA INFORM, V6, P133, DOI 10.1007/BF00268497
   King A, 2002, THEOR PRACT LOG PROG, V2, P517, DOI 10.1017/S1471068402001436
   LINDENSTRAUSS N, 1997, P 14 INT C LOG PROGR, P63
   Lloyd J. W., 2012, Foundations of Logic Programming
   Marriott K., 1993, ACM Letters on Programming Languages and Systems, V2, P181, DOI 10.1145/176454.176519
   MARRIOTT K, 1993, ACM LETTERS PROGRAMM, V2, P1
   Mesnard F, 2001, LECT NOTES COMPUT SC, V2126, P93
   MESNARD F, P JICSLP 96, V96, P7
   MESNARD F, 2001, PROVING LEFT TERMINA
   SCHACHTE P, 1999, THESIS U MELBOURNE A
   SOHN K, 1991, INT S PRINC DAT SYST, P216
NR 25
TC 9
Z9 10
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 40 WEST 20TH ST, NEW YORK, NY 10011-4211 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2005
VL 5
BP 75
EP 91
DI 10.1017/S1471068404002236
PN 1-2
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 903EN
UT WOS:000227408400003
DA 2024-07-18
ER

PT J
AU Van Roy, P
   Brand, P
   Duchier, D
   Haridi, S
   Schulte, C
   Henz, M
AF Van Roy, P
   Brand, P
   Duchier, D
   Haridi, S
   Schulte, C
   Henz, M
TI Logic programming in the context of multiparadigm programming: the Oz
   experience
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT International Conference on Logic Programming
CY NOV, 1999
CL LAS CRUCES, NM
DE multiparadigm programming; language design; Prolog; Oz; encapsulated
   search; concurrent constraint programming; history; software development
ID LANGUAGE; MACHINE
AB Oz is a multiparadigm language that supports logic programming as one of its major paradigms. A multiparadigm language is designed to support different programming paradigms (logic, functional, constraint, object-oriented, sequential, concurrent, etc.) with equal ease. This paper has two goals: to give a tutorial of logic programming in Oz; and to show how logic programming fits naturally into the wider context of multiparadigm programming. Our experience shows that there are two classes of problems, which we call algorithmic and search problems, for which logic programming can help formulate practical solutions. Algorithmic problems have known efficient algorithms. Search problems do not have known efficient algorithms but can be solved with search. The Oz support for logic programming targets these two problem classes specifically, using the concepts needed for each. This is in contrast to the Prolog approach, which targets both classes with one set of concepts, which results in less than optimal support for each class. We give examples that can be run interactively on the Mozart system, which implements Oz, To explain the essential difference between algorithmic and search programs, we define the Oz execution model. This model subsumes both concurrent logic programming (committed-choice-style) and search-based logic programming (Prolog-style). Furthermore, as consequences of its multiparadigm nature, the model supports new abilities such as first-class top levels, deep guards, active objects, and sophisticated control of the search process. Instead of Horn clause syntax, Oz has a simple, fully compositional, higher-order syntax that accommodates the abilities of the language. We give a brief history of Oz that traces the development of its main ideas and we summarize the lessons learned from this work. Finally, we give many entry points into the Oz literature.
C1 Catholic Univ Louvain, B-1348 Louvain, Belgium.
   Swedish Inst Comp Sci, S-16428 Kista, Sweden.
   Univ Saarland, D-66123 Saarbrucken, Germany.
   Royal Inst Technol, KTH, S-16428 Kista, Sweden.
   Natl Univ Singapore, Singapore 117543, Singapore.
C3 Universite Catholique Louvain; Saarland University; Royal Institute of
   Technology; National University of Singapore
RP Van Roy, P (corresponding author), Catholic Univ Louvain, B-1348 Louvain, Belgium.
EM pvr@info.ucl.ac.be; perbrand@sics.se; Denys.Duchier@ps.uni-ab.de;
   seif@imit.kth.se; schulte@imit.kth.se; henz@comp.nus.edu.sg
RI Van Roy, Peter/GLV-4000-2022
OI Van Roy, Peter/0000-0002-5427-2445; Henz, Martin/0000-0002-6529-5896
CR Ait-Kaci H., 1989, LISP and Symbolic Computation, V2, P51, DOI 10.1007/BF01806313
   AITKACI H, 1993, J LOGIC PROGRAM, V16, P195, DOI 10.1016/0743-1066(93)90043-G
   AITKACI H, 1994, WILD LIFE HDB
   [Anonymous], 1999, Haskell: The Craft of Functional Programming
   [Anonymous], ACAST07488 MCC
   [Anonymous], 1996, Structure and interpretation of computer programs
   [Anonymous], PLDI 91
   [Anonymous], 1992, 19th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, DOI DOI 10.1145/143165.143169
   [Anonymous], 1983, TR003 ICOT
   Armstrong Joe, 1996, Concurrent Programming in Erlang
   Arnold K., 1998, JAVA PROGRAMMING LAN
   ASHENHURST RL, 1987, ACM TURNING AWARD LE
   BAL HE, 1989, COMPUT SURV, V21, P261, DOI 10.1145/72551.72552
   BAUMGARTNER G, 2001, WORKSH MULT PROGR OB, V7, P111
   BUDD TA, 1995, MULTIPARADIGM PROGRA
   CARLSSON, 1999, SICSTUS PROLOG 3 8 1
   CARRIERO N, 1989, COMMUN ACM, V32, P444, DOI 10.1145/63334.63337
   Caseau Y, 1999, LECT NOTES COMPUT SC, V1713, P144
   Caseau Y, 1999, LOGIC PROGRAMM, P245
   CHAILLOUX E, 2000, DEV APPL AVEC OBJECT
   CHAKRAVARTY M, 1995, 1 INT WORKSH CONC CO
   CHEN WD, 1993, J LOGIC PROGRAM, V15, P187, DOI 10.1016/0743-1066(93)90039-J
   Clark K. L., 1979, Expert Systems in the Micro-Electronic Age. Proceedings of the 1979 AISB Summer School, P122
   Clark KeithL., 1982, LOGIC PROGRAMMING, P253
   CLARK KL, 1987, LECT NOTES COMPUT SC, V259, P30
   CLARK KL, 1977, P IFIP 77, P939
   CLINGER W, 1991, LISP POINTERS, V4, P1
   Colmerauer Alain., 1982, Prolog II Reference Manual and Theoretical Model
   Costa V.S., 1991, PPOPP, P83
   Cousineau G., 1998, FUNCTIONAL APPROACH
   Darwin Charles., 2001, On the origin of species by means of natural selection or, the preservation of favoured races in the struggle for life
   DAVISON A, 1993, RES DIRECTIONS CONCU
   DUCHIER D, 1999, 6 M MATH LANG MOL6
   DUCHIER D, 1999, LECT NOTES
   DUCHIER D, 1999, SYSTEM MODULES
   Duchier Denys, 1998, HIGHER ORDER MODULE
   FOSTER I, 1993, MCSP3540293 ARG NAT
   Fujise Tetsuro, 1994, 5 GEN COMP SYST FGCS, P66
   GABBAY DM, 1995, HDB LOGIC ARTIFICIAL, V5
   Garey M., 1979, Computers and Intractibility: A Guide to NP-Completeness
   GELERNTER D, 1992, COMMUN ACM, V35, P96, DOI 10.1145/129630.129635
   GOLDBERG A, 1983, SMALLTALK, V80
   HALSTEAD RH, 1985, ACM T PROGR LANG SYS, V7, P501, DOI 10.1145/4472.4478
   HANUS M, 1994, J LOGIC PROGRAM, V20, P583, DOI 10.1016/0743-1066(94)90034-5
   HANUS M, 1997, P 24 ACM S PRINC PRO, P80, DOI DOI 10.1145/263699.263710
   Haridi S, 1999, ACM T PROGR LANG SYS, V21, P569, DOI 10.1145/319301.319347
   Haridi S, 1998, NEW GENERAT COMPUT, V16, P223, DOI 10.1007/BF03037481
   HARIDI S, 1988, P INT C 5 GEN COMP S, V2, P745
   HARIDI S, 1990, P 7 INT C LOG PROGR, P31
   Harper Robert, 1986, Standard ml
   HENZ M, 1999, WORKSH PAR IMPL TECH
   HENZ M, 1997, THESIS U SAARLANDES
   Henz Martin, 1997, KLUWER INT SERIES EN, V426
   HOARE CAR, 1987, ACM TURNING AWARD LE
   Holmer BK, 1996, J LOGIC PROGRAM, V29, P107, DOI 10.1016/S0743-1066(96)88981-3
   HUDAK P, 1992, SIGPLAN NOTICES, V27, pR1
   HUGHES J, 1989, COMPUT J, V32, P98, DOI 10.1093/comjnl/32.2.98
   *I NEW GEN COMP TE, 1992, 5 GEN COMP SYST 1992, V2
   *I NEW GEN COMP TE, 1992, 5 GEN COMP SYST 1992, V1
   JANSON S, 1991, LOGIC PROGRAMM, P167
   Janson S., 1993, RES DIRECTIONS CONCU
   JANSON S, 1994, THESIS UPPSALA U
   JONES SLP, 1993, P 20 ACM SIGPLAN SIG, P71, DOI DOI 10.1145/158511.158524
   KAGEDAL A, 1997, LOGICAL STATE THREAD
   KOLLER A, 2000, P 8 CSLI WORKSH LOG
   Laburthe F, 1998, LECT NOTES COMPUT SC, V1520, P310
   LAUER HC, 1978, 2 INT S OP SYST IRIA
   Lea D., 2000, CONCURRENT PROGRAMMI
   MAHER MJ, 1987, P 4 INT C LOG PROGR, P858
   MAIER D., 1988, Computing with Logic: Logic Programming with PROLOG
   Marriott K., 1999, Programming with Constraints: An Introduction
   Mehl M, 1995, LECT NOTES COMPUT SC, V982, P151, DOI 10.1007/BFb0026819
   MEHL M, 2000, INTERFACING C C
   MEHL M, 1998, FUTURES BY NEED SYNC
   Mehl Michael, 1999, THESIS U SAARLANDES
   Milner R., 1990, The Definition of Standard ML
   Moss Chris., 1994, PROLOG POWER OBJECT
   *MOZ CONS, 2000, MOZ PROGR SYST OZ 3
   MULLER M, 1995, WORKSH FUT LOG PROGR
   MULLER T, 2000, MOZART CONSTRAINT EX
   MULLER T, 1999, PROBLEM SOLVING FINI
   NADATHUR G, 1995, HDB LOGIC ARTIFICIAL, V5
   Nikhil R., 2001, Implicit parallel programming in pH
   NIKHIL RS, 1994, OVERVIEW PARALLEL LA
   NIKHIL RS, 1994, 2842 MIT COMP STRUCT
   Odersky Martin., 1997, P 24 ACM S PRINCIPLE, P146
   Remy D, 1998, THEOR PRACT OBJ SYST, V4, P27, DOI 10.1002/(SICI)1096-9942(1998)4:1<27::AID-TAPO3>3.0.CO;2-4
   RITCHIE DM, 1987, ACM TURING AWARD LEC
   ROBINSON JA, 1965, J ACM, V12, P23, DOI 10.1145/321250.321253
   SARASWAT VA, 1990, CONFERENCE RECORD OF THE SEVENTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P232, DOI 10.1145/96709.96733
   Saraswat Vijay A., 1993, Concurrent Constraint Programming
   Scheidhauer R., 1998, THESIS U SAARLANDES
   SCHLICHTING RD, 1991, 9124 TR U AR DEP COM
   SCHULTE C, 1994, MIT PS LOG, P505
   Schulte C, 1999, LOGIC PROGRAMM, P275
   Schulte C, 1997, LOGIC PROGRAMM, P286
   Schulte C, 1997, LECT NOTES COMPUT SC, V1330, P519, DOI 10.1007/BFb0017464
   Schulte C, 2000, LECT NOTES COMPUT SC, V1753, P215
   SCHULTE C, 2000, THESIS U SAARLANDES
   Schulte C., 2000, Proceedings of Techniques for Implementing Constraint Programming Systems, Post-conference workshop of CP 2000, TRA9/00, P41
   SCHULTE C, 1999, OZ EXPLORER VISUAL C
   SCHULTE C, 1994, LECT NOTES COMPUTER, V874, P134
   Schulte C., 1999, FINITE DOMAIN CONSTR
   Schulte Christian., 2002, LECT NOTES ARTIFICIA, V2302
   SHAPIRO E, 1989, COMPUT SURV, V21, P412, DOI 10.1145/72551.72555
   SMOLKA G, 1994, J LOGIC PROGRAM, V18, P229, DOI 10.1016/0743-1066(94)90044-2
   Smolka G, 1995, LECT NOTES COMPUT SC, V1000, P324
   SMOLKA G, 1996, ACM COMPUTING SURVEY, V28
   SMOLKA G, 1995, PERDIO PERSISTENT DI
   SMOLKA G, 1995, LECT NOTES COMPUTER, V910, P251
   Sommerville I., 1992, SOFTWARE ENG, V4th
   Steele G.L., 1984, Common LISP: The Language, V2nd
   STERLING L, 1986, ART PROLOG ADV PROGR
   THOMPSON K, 1987, ACM TURING AWARD LEC
   TICK E, 1995, J LOGIC PROGRAM, V23, P89, DOI 10.1016/0743-1066(94)00038-8
   UEDA K, 1986, LECT NOTES COMPUT SC, V221, P168
   Van Roy P, 1999, LOGIC PROGRAMM, P38
   Van Roy Peter, 1999, DISTRIBUTED PROGRAMM
   Van Roy Peter, 1999, INT WORKSH PAR DISTR
   VANHENTENRYCK P, 1999, OPL PROGRAMMING LANG
   VANROY P, 1989, SIGPLAN NOTICES, V24, P132, DOI 10.1145/71605.71617
   VanRoy P, 1997, ACM T PROGR LANG SYS, V19, P804, DOI 10.1145/265943.265972
   VANROY P, 1992, IEEE COMPUTER MAGAZI, P54
   VANROY P, 1996, P 8 INT S PROGR LANG
   VANROY P, 1989, VLSI BAM DIAGNOSTIC
   VANROY P, 2002, UNPUB CONCEPTS TECHN
   Wikstrom C., 1994, First International Symposium on Parallel Symbolic Computation PASCO '94, P412
   [No title captured]
NR 128
TC 17
Z9 17
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2003
VL 3
BP 717
EP 763
DI 10.1017/S1471068403001741
PN 6
PG 47
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 754EG
UT WOS:000187289300003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Schaub, T
   Wang, KW
AF Schaub, T
   Wang, KW
TI A semantic framework for preference handling in answer set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; preferences; priorities
ID EXTENDED LOGIC PROGRAMS
AB We provide a semantic framework for preference handling in answer set programming. To this end, we introduce preference preserving consequence operators. The resulting fixpoint characterizations provide us with a uniform semantic framework for characterizing preference handling in existing approaches. Although our approach is extensible to other semantics by means of an alternating fixpoint theory, we focus here on the elaboration of preferences under answer set semantics. Alternatively, we show how these approaches can be characterized by the concept of order preservation. These uniform semantic characterizations provide us with new insights about inter-relationships and moreover about ways of implementation.
C1 Univ Potsdam, Inst Informat, D-14415 Potsdam, Germany.
   Griffith Univ, Sch Comp & Informat Technol, Brisbane, Qld 4111, Australia.
C3 University of Potsdam; Griffith University
RP Univ Potsdam, Inst Informat, Postfach 60 15 53, D-14415 Potsdam, Germany.
EM torsten@cs.uni-potsdam.de; K.Wang@cit.gu.edu.au
RI Schaub, Torsten/O-5873-2019
OI Schaub, Torsten/0000-0002-7456-041X; Wang, Kewen/0000-0002-0542-3761
CR Alferes J.J., 1998, KR, V98, P98
   [Anonymous], 1996, Principles of Knowledge Representation
   Apt K., 1987, F DEDUCTIVE DATABASE, P89
   BAADER F, 1993, P INT JOINT C ART IN, P669
   Brewka G, 1999, ARTIF INTELL, V109, P297, DOI 10.1016/S0004-3702(99)00015-6
   Brewka G, 1996, J ARTIF INTELL RES, V4, P19, DOI 10.1613/jair.284
   BREWKA G, 2001, P INT C LOG PROGR NO, P121
   BREWKA G, 1994, EUR WORKSH LOG ART I, P247
   BREWKA G, 2000, INTELLECTICS COMPUTA, P27
   BUCCAFURRI F, 1999, THEOR PRACT LOG PROG, V2, P293
   Cui BQ, 2002, ARTIF INTELL, V138, P117, DOI 10.1016/S0004-3702(02)00185-6
   DELGRANDE J, 2000, P EUR WORKSH LOG ART, P376
   DELGRANDE J, 2003, THEORY PRACTICE LOGI, V3
   Delgrande JP, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P392
   Delgrande JP, 2000, SPRINGER INT SER ENG, V597, P107
   DIMOPOULOS Y, 1995, P INT S LOG PROGR, P369
   EITER T, 2000, P 7 EUR WORKSH LOG A, P2
   GELFOND M, 1997, INT WORKSH LOG PROGR, P164
   GORDON T, 1993, THESIS TU DARMSTADT
   GROSOF B, 1999, BUSINESS RULES ELECT
   Grosof BN, 1997, LOGIC PROGRAMM, P197
   KONOLIGE K, 1988, ARTIF INTELL, V35, P343, DOI 10.1016/0004-3702(88)90021-5
   Lloyd J. W., 2012, Foundations of Logic Programming
   Nute D., 1987, Proceedings of the Twentieth Hawaii International Conference on System Sciences 1987, P470
   Nute D., 1994, Handbook of Logic in Artificial Intelligence and Logic Programming, V3, P353
   Pradhan S, 1996, INT J COOP INF SYST, V5, P333, DOI 10.1142/S0218843096000130
   PRAKKEN H, 1997, LOGICAL TOOLS MODELL
   Przymusinski T. C., 1988, F DEDUCTIVE DATABASE, P193
   RINTANEN J, 1995, P IJCAI 95 MONTR QUE, P1474
   SAKAMA C, 1996, P 1996 JOINT INT C S, P82
   SCHAUB T, 2002, P WORKSH NONM REAS, P238
   SCHWIND CB, 1990, P CADE 90, P528
   VANGELDER A, 1993, J COMPUT SYST SCI, V47, P185, DOI 10.1016/0022-0000(93)90024-Q
   WANG K, 2000, P INT JOINT C COMP L, P164
   You JH, 2001, IEEE T KNOWL DATA EN, V13, P968, DOI 10.1109/69.971190
   ZHANG Y, 1997, P INT S LOG PROGR IL, P69
NR 36
TC 25
Z9 25
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL-SEP
PY 2003
VL 3
BP 569
EP 607
DI 10.1017/S1471068403001844
PN 4-5
PG 39
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 708LE
UT WOS:000184567800008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Totis, P
   De Raedt, L
   Kimmig, A
AF Totis, Pietro
   De Raedt, Luc
   Kimmig, Angelika
TI sm<i>ProbLog: Stable Model Semantics in ProbLog for Probabilistic
   Argumentation</i>
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE probabilistic logic programming; ProbLog; distribution semantics; stable
   model semantics; probabilistic argumentation
ID PROGRAMMING-SEMANTICS; LOGIC; COMPLEXITY; FRAMEWORKS
AB Argumentation problems are concerned with determining the acceptability of a set of arguments from their relational structure. When the available information is uncertain, probabilistic argumentation frameworks provide modeling tools to account for it. The first contribution of this paper is a novel interpretation of probabilistic argumentation frameworks as probabilistic logic programs. Probabilistic logic programs are logic programs in which some of the facts are annotated with probabilities. We show that the programs representing probabilistic argumentation frameworks do not satisfy a common assumption in probabilistic logic programming (PLP) semantics, which is, that probabilistic facts fully capture the uncertainty in the domain under investigation. The second contribution of this paper is then a novel PLP semantics for programs where a choice of probabilistic facts does not uniquely determine the truth assignment of the logical atoms. The third contribution of this paper is the implementation of a PLP system supporting this semantics: smProbLog. smProbLog is a novel PLP framework based on the PLP language ProbLog. smProbLog supports many inference and learning tasks typical of PLP, which, together with our first contribution, provide novel reasoning tools for probabilistic argumentation. We evaluate our approach with experiments analyzing the computational cost of the proposed algorithms and their application to a dataset of argumentation problems.
C1 [Totis, Pietro; De Raedt, Luc; Kimmig, Angelika] Katholieke Univ Leuven, Dept Comp Sci, B-3000 Leuven, Belgium.
C3 KU Leuven
RP Totis, P (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, B-3000 Leuven, Belgium.
EM pietro.totis@cs.kuleuven.be; luc.deraedt@cs.kuleuven.be;
   angelika.kimmig@cs.kuleuven.be
RI De Raedt, Luc/AAX-1544-2021
OI De Raedt, Luc/0000-0002-6860-6303; Totis, Pietro/0000-0001-5845-6914
CR Alfano G, 2020, THEOR PRACT LOG PROG, V20, P703, DOI 10.1017/S1471068420000253
   Amgoud L., 2004, NONMONOTONIC REASONI, P1
   Amgoud L, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P56
   [Anonymous], 2015, CEUR WORKSHOP PROC
   Aziz RA, 2015, AAAI CONF ARTIF INTE, P3468
   Azzolini D, 2022, LECT NOTES ARTIF INT, V13416, P43, DOI 10.1007/978-3-031-15707-3_4
   Baral C, 2009, THEOR PRACT LOG PROG, V9, P57, DOI 10.1017/S1471068408003645
   Baroni P, 2019, INT J APPROX REASON, V105, P252, DOI 10.1016/j.ijar.2018.11.019
   Berry DA, 2006, NAT REV DRUG DISCOV, V5, P27, DOI 10.1038/nrd1927
   Besnard P, 2020, ARGUM COMPUT, V11, P41, DOI 10.3233/AAC-190476
   BONDARENKO A, 1993, LOGIC PROGRAMMING AND NON-MONOTONIC REASONING, P171
   Cadoli M, 1997, AI COMMUN, V10, P137
   Caminada M, 2015, INT J APPROX REASON, V58, P87, DOI 10.1016/j.ijar.2014.12.004
   Cayrol C, 2005, J ARTIF INTELL RES, V23, P245, DOI 10.1613/jair.1411
   CHARNIAK E, 1991, AI MAG, V12, P50
   Choi Arthur, 2013, Symbolic and Quantitative Approaches to Reasoning with Uncertainty. 12th European Conference, ECSQARU 2013. Proceedings. LNCS 7958, P121, DOI 10.1007/978-3-642-39091-3_11
   Cozman F.G., 2016, CEUR WORKSHOP P, V1661, P3
   Cozman FG, 2020, INT J APPROX REASON, V125, P218, DOI 10.1016/j.ijar.2020.07.004
   Cozman FG, 2017, J ARTIF INTELL RES, V60, P221, DOI 10.1613/jair.5482
   Cussens J, 2001, MACH LEARN, V44, P245, DOI 10.1023/A:1010924021315
   Darwiche A, 2004, FRONT ARTIF INTEL AP, V110, P328
   de Finetti B, 1931, Fundam. Math., V17, P298, DOI DOI 10.4064/FM-17-1-298-329
   De Raedt L, 2004, LECT NOTES ARTIF INT, V3244, P19
   Dries A, 2015, LECT NOTES ARTIF INT, V9286, P312, DOI 10.1007/978-3-319-23461-8_37
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Fierens D., 2011, P C UNCERTAINTY ARTI, P211
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Gelfond M, 2008, FOUND ARTIF INTELL, P285, DOI 10.1016/S1574-6526(07)03007-6
   Gutmann B, 2011, LECT NOTES ARTIF INT, V6911, P581, DOI 10.1007/978-3-642-23780-5_47
   Hadjichristodoulou S, 2012, INT SYM MVL, P232, DOI 10.1109/ISMVL.2012.26
   Hengfei Li, 2012, Theory and Applications of Formal Argumentation. First International Workshop, TAFA 2011. Revised Selected Papers, P1, DOI 10.1007/978-3-642-29184-5_1
   Hunter A., 2018, ARXIV
   Hunter A, 2020, ARTIF INTELL, V281, DOI 10.1016/j.artint.2020.103236
   Hunter A, 2013, INT J APPROX REASON, V54, P47, DOI 10.1016/j.ijar.2012.08.003
   Hunter Anthony, 2021, Handbook of Formal Argumentation, V2, P397
   Jaynes E.T., 1988, The Relation of Bayesian and Maximum Entropy Methods, P25
   Lee J, 2016, FIFTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P145
   Lukasiewicz T, 1998, ECAI 1998: 13TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P388
   Mantadelis T, 2020, INT J APPROX REASON, V119, P204, DOI 10.1016/j.ijar.2019.12.006
   Mcburney P, 2011, KNOWL ENG REV, V26, P1, DOI 10.1017/S0269888910000330
   Meert W, 2014, LECT NOTES ARTIF INT, V8754, P350
   Muggleton Stephen, 1996, Advances in Inductive Logic Programming, V32, P254
   Muise Christian, 2012, Advances in Artificial Intelligence. Proceedings 25th Canadian Conference on Artificial Intelligence, Canadian AI 2012, P356, DOI 10.1007/978-3-642-30353-1_36
   Nielsen SH, 2007, LECT NOTES ARTIF INT, V4766, P54
   Nilsson N., 2014, MIT PRESS ESSENTIAL
   Pearl J., 1988, PROBABILISTIC REASON
   Polberg S, 2017, LECT NOTES ARTIF INT, V10564, P223, DOI 10.1007/978-3-319-67582-4_16
   Poole David, 2008, Probabilistic Inductive Logic Programming. Theory and Applications, P222, DOI 10.1007/978-3-540-78652-8_8
   Raedt L. D., 2007, P 20 INT JOINT C ART, P2462
   Rocha V. H. N., 2022, P 19 INT C PRINC KNO
   SACCA D, 1990, PROCEEDINGS OF THE NINTH ACM SIGACT-SIGMOD-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P205, DOI 10.1145/298514.298572
   Sato T., 2008, NEW ADV LOGIC BASED, P118
   Sato T., 1995, ICLP
   Stede M, 2016, LREC 2016 - TENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, P1051
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Vennekens J., 2013, ARXIV
   Vennekens J, 2009, THEOR PRACT LOG PROG, V9, P245, DOI 10.1017/S1471068409003767
   Wu Y., 2009, STUDIA LOGICA, V93, P383, DOI DOI 10.1007/S11225-009-9210-5
NR 59
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2023
VL 23
IS 6
BP 1198
EP 1247
AR PII S147106842300008X
DI 10.1017/S147106842300008X
EA MAY 2023
PG 50
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7N0
UT WOS:001007783900001
OA Green Published, hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Broda, K
   Sadri, F
   Butler, S
AF Broda, Krysia
   Sadri, Fariba
   Butler, Stephen
TI Reactive Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic programming; logic production systems; KELPS; Answer Set
   Programming; reactivity; prospective reasoning
ID LOGIC
AB Logic Production System (LPS) is a logic-based framework for modelling reactive behaviour. Based on abductive logic programming, it combines reactive rules with logic programs, a database and a causal theory that specifies transitions between the states of the database. This paper proposes a systematic mapping of the Kernel of this framework (called KELPS) into an answer set program (ASP). For this purpose a new variant of KELPS with finite models, called n-distance KELPS, is introduced. A formal definition of the mapping from this n-distance KELPS to ASP is given and proven sound and complete. The Answer Set Programming paradigm allows to capture additional behaviours to the basic reactivity of KELPS, in particular proactive, pre-emptive and prospective behaviours. These are all discussed and illustrated with examples. Then a hybrid framework is proposed that integrates KELPS and ASP, allowing to combine the strengths of both paradigms.
C1 [Broda, Krysia; Sadri, Fariba] Imperial Coll London, London, England.
C3 Imperial College London
RP Broda, K (corresponding author), Imperial Coll London, London, England.
EM k.brodad@imperial.ac.uk; f.sadri@imperial.ac.uk;
   stephenjbutler@virginmedia.com
CR Aguado Felicidad, 2013, Journal of Applied Non-Classical Logic, V23, P2, DOI 10.1080/11663081.2013.798985
   Alferes JJ, 2006, LECT NOTES ARTIF INT, V4160, P29, DOI 10.1007/11853886_5
   Baral C., 1998, ELECT T ARTIFICIAL I, P211
   Beck H, 2018, ARTIF INTELL, V261, P16, DOI 10.1016/j.artint.2018.04.003
   Berstel-Da Silva Bruno, 2012, Rules on the Web: Research and Applications. Proceedings of the 6th International Symposium, RuleML 2012, P47, DOI 10.1007/978-3-642-32689-9_5
   Brewka G, 2013, LECT NOTES COMPUT SC, V8148, P1, DOI 10.1007/978-3-642-40564-8_1
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Cabalar P, 2018, THEOR PRACT LOG PROG, V18, P406, DOI 10.1017/S1471068418000297
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Clark, 2018, P 15 INT C INF CONTR, P5
   Clark KL, 2015, IEEE INT CONF ROBOT, P5040, DOI 10.1109/ICRA.2015.7139900
   Costantini S, 2004, LECT NOTES COMPUT SC, V3229, P685, DOI 10.1007/978-3-540-30227-8_57
   Costantini S, 2015, ADV INTELL SYST, V373, P285, DOI 10.1007/978-3-319-19638-1_33
   Costantini S, 2011, LECT NOTES COMPUT SC, V6702, P37
   Deane G., 2016, THESIS IMPERIAL COLL
   Dyoub A, 2018, KNOWL ENG REV, V33, DOI 10.1017/S0269888918000164
   Eiter T., 2004, DECLARATIVE UPDATE P, P85
   Erdem E, 2016, AI MAG, V37, P53, DOI 10.1609/aimag.v37i3.2678
   Fernandes AAA, 1997, NEW GENERAT COMPUT, V15, P205, DOI 10.1007/BF03037238
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Gebser M., 2019, POTASSCO USER GUIDE
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P54
   Gebser Martin, 2013, Answer Set Solving in Practice
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Gelfond Michael., 2007, Handbook of Knowledge Representation Chapter 7: Answer Sets
   GUREVICH Y, 2000, ACM T COMPUT LOG, V1, P77, DOI DOI 10.1145/343369.343384
   Kowalski R, 1999, ANN MATH ARTIF INTEL, V25, P391, DOI 10.1023/A:1018934223383
   KOWALSKI R, 1986, NEW GENERAT COMPUT, V4, P67, DOI 10.1007/BF03037383
   Kowalski R, 2016, THEOR PRACT LOG PROG, V16, P269, DOI 10.1017/S1471068416000041
   Kowalski R, 2015, NEW GENERAT COMPUT, V33, P33, DOI 10.1007/s00354-015-0103-z
   Kowalski R, 2011, ANN MATH ARTIF INTEL, V62, P129, DOI 10.1007/s10472-011-9253-y
   Lausen G., 1998, Transactions and Change in Logic Databases. International Seminar on Logic Databases and the Meaning of Change and ILPS'97 Post-Conference Workshop on (Trans) Actions and Change in Logic Programming and Deductive Databases, (DYNAMICS'97). Invited Surveys and Selected Papers, P69, DOI 10.1007/BFb0055496
   Law L., 2015, DTR20152 IMP COLL LO
   Law M, 2016, THEOR PRACT LOG PROG, V16, P834, DOI 10.1017/S1471068416000351
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Mancarella P, 2009, THEOR PRACT LOG PROG, V9, P691, DOI 10.1017/S1471068409990093
   McCarthy, 1998, 4 INT S LOG FORM COM
   Nilsson NJ, 1993, J ARTIF INTELL RES, V1, P139, DOI 10.1613/jair.30
   Paschke Adrian, 2012, Rules on the Web: Research and Applications. Proceedings of the 6th International Symposium, RuleML 2012, P100, DOI 10.1007/978-3-642-32689-9_9
   Pereira L., 2011, MODELLING MORALITY P, P98
   Pereira Luis Moniz, 2009, International Journal of Reasoning-based Intelligent Systems, V1, P200, DOI 10.1504/IJRIS.2009.028019
   Rao A. S., 1995, ICMAS-95 Proceedings. First International Conference on Multi-Agent Systems, P312
   Rao A. S., 1996, Agents Breaking Away. 7th European Workshop on Modelling Autonomous Agents in a Multi-Agent World, MAAMAW '96 Proceedings, P42, DOI 10.1007/BFb0031845
   Ribeiro T., 2013, THEOR PRACT LOG PROG, V13, P4
   Russell S., 2016, Artificial intelligence a modern approach
   Sánchez P, 2016, J SYST SOFTWARE, V117, P317, DOI 10.1016/j.jss.2016.03.064
   Suchan J, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1879
   Han TA, 2011, LECT NOTES ARTIF INT, V7026, P254, DOI 10.1007/978-3-642-24769-9_19
   Tran N., 2004, P 9 INT C PRINC KNOW, P554
   Tran N, 2007, ANN MATH ARTIF INTEL, V51, P267, DOI 10.1007/s10472-008-9091-8
   Vaseqi, 2013, 26 CAN C ART INT, P315
   Wielemaker J, 2019, THEOR PRACT LOG PROG, V19, P229, DOI 10.1017/S1471068418000522
   Zaniolo, 2003, ADV DATABASES, P23
NR 54
TC 0
Z9 0
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2022
VL 22
IS 3
BP 367
EP 418
AR PII S147106842100051X
DI 10.1017/S147106842100051X
EA MAR 2022
PG 52
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 6N1DF
UT WOS:000773138900001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Dodaro, C
   Galatà, G
   Khan, MK
   Maratea, M
   Porro, I
AF Dodaro, Carmine
   Galata, Giuseppe
   Khan, Muhammad Kamran
   Maratea, Marco
   Porro, Ivan
TI Operating Room (Re)Scheduling with Bed Management via ASP
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic programming methodology and applications; knowledge representation
   and nonmonotonic reasoning
ID ANSWER; SEMANTICS
AB The Operating Room Scheduling (ORS) problem is the task of assigning patients to operating rooms (ORs), taking into account different specialties, lengths, and priority scores of each planned surgery, OR session durations, and the availability of beds for the entire length of stay (LOS) both in the Intensive Care Unit (ICU) and in the wards. A proper solution to the ORS problem is of primary importance for the healthcare service quality and the satisfaction of patients in hospital environments. In this paper we first present a solution to the problem based on Answer Set Programming (ASP). The solution is tested on benchmarks with realistic sizes and parameters, on three scenarios for the target length on 5-day scheduling, common in small-medium-sized hospitals, and results show that ASP is a suitable solving methodology for the ORS problem in such setting. Then, we also performed a scalability analysis on the schedule length up to 15 days, which still shows the suitability of our solution also on longer plan horizons. Moreover, we also present an ASP solution for the rescheduling problem, that is, when the offline schedule cannot be completed for some reason. Finally, we introduce a web framework for managing ORS problems via ASP that allows a user to insert the main parameters of the problem, solve a specific instance, and show results graphically in real time.
C1 [Dodaro, Carmine] Univ Calabria, Genoa, Italy.
   [Galata, Giuseppe; Porro, Ivan] SurgiQ Srl, Genoa, Italy.
   [Khan, Muhammad Kamran; Maratea, Marco] Univ Genoa, Genoa, Italy.
C3 University of Calabria; University of Genoa
RP Dodaro, C (corresponding author), Univ Calabria, Genoa, Italy.
EM dodaro@mat.unical.it; giuseppe.galata@surgiq.com;
   muhammad.kamrankhan@edu.unige.it; marco.maratea@unige.it;
   ivan.porro@surgiq.com
RI Khan, Muhammad Kamran/JCD-7906-2023; Maratea, Marco/AAR-5779-2020
OI Khan, Muhammad Kamran/0000-0002-1366-512X; MARATEA,
   MARCO/0000-0002-9034-2527; Dodaro, Carmine/0000-0002-5617-5286
FU "POR FESR Liguria 2014-2020"public grant scheme; EIT Health through the
   Headstart 2020 grant [2020-HS-0339]
FX The research of three of the authors of the paper, Ivan Porro, Giuseppe
   GalataandMuhammad Kamran Khan, is partially funded by the "POR FESR
   Liguria 2014-2020"public grant scheme, and by EIT Health through the
   Headstart 2020 grant received bySurgiQ srl (Reference: 2020 Headstart
   Program, PoC activity #20206, Innostars, 2020-HS-0339)
CR Abedini A, 2016, PROCEDIA MANUF, V5, P15, DOI 10.1016/j.promfg.2016.08.005
   Alviano M, 2019, LECT NOTES ARTIF INT, V11481, P241, DOI 10.1007/978-3-030-20528-7_18
   Alviano M, 2018, INTELL ARTIF, V12, P109, DOI 10.3233/IA-170030
   Alviano M, 2017, LECT NOTES ARTIF INT, V10640, P468, DOI 10.1007/978-3-319-70169-1_35
   Alviano M, 2020, J LOGIC COMPUT, V30, P863, DOI 10.1093/logcom/exv061
   Alviano M, 2015, THEOR PRACT LOG PROG, V15, P559, DOI 10.1017/S1471068415000228
   AMENDOLA G., 2018, RICERCA AI IA CEUR W, V2272
   Amendola G, 2016, LECT NOTES COMPUT SC, V10037, P164, DOI 10.1007/978-3-319-49130-1_13
   [Anonymous], 2015, Electronic Notes in Discrete Mathematics, DOI DOI 10.1016/J.ENDM.2014.11.023
   Aringhieri R, 2015, COMPUT OPER RES, V54, P21, DOI 10.1016/j.cor.2014.08.014
   Balduccini M, 2011, LECT NOTES ARTIF INT, V6645, P284
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Buccafurri F, 2000, IEEE T KNOWL DATA EN, V12, P845, DOI 10.1109/69.877512
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   Di Rosa E, 2008, FRONT ARTIF INTEL AP, V178, P510, DOI 10.3233/978-1-58603-891-5-510
   Dodaro C, 2019, LECT NOTES COMPUT SC, V11784, P67, DOI 10.1007/978-3-030-31095-0_5
   Dodaro C, 2019, INTELL ARTIF, V13, P63, DOI 10.3233/IA-190020
   Dodaro C, 2018, LECT NOTES ARTIF INT, V11298, P445, DOI 10.1007/978-3-030-03840-3_33
   Dodaro C, 2017, LECT NOTES ARTIF INT, V10377, P301, DOI 10.1007/978-3-319-61660-5_27
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Falkner A, 2018, KUNSTL INTELL, V32, P165, DOI 10.1007/s13218-018-0548-6
   Ferraris P, 2011, ACM T COMPUT LOG, V12, DOI 10.1145/1970398.1970401
   Gebser M., 2016, OASIcs, V52, DOI 10.4230
   Gebser M, 2018, THEOR PRACT LOG PROG, V18, P520, DOI 10.1017/S1471068418000182
   Gebser M, 2017, J ARTIF INTELL RES, V60, P41, DOI 10.1613/jair.5373
   Gebser M, 2017, LECT NOTES ARTIF INT, V10377, P3, DOI 10.1007/978-3-319-61660-5_1
   Gebser M, 2015, THEOR PRACT LOG PROG, V15, P449, DOI 10.1017/S1471068415000150
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Giunchiglia E, 2003, LECT NOTES COMPUT SC, V2833, P842
   Giunchiglia E, 2002, LECT NOTES ARTIF INT, V2424, P296, DOI 10.1007/3-540-45757-7_25
   Landa P, 2016, OPER RES HEALTH CARE, V8, P103, DOI 10.1016/j.orhc.2016.01.001
   Molina-Pariente JM, 2015, COMPUT IND ENG, V90, P429, DOI 10.1016/j.cie.2015.10.002
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Ricca F, 2012, THEOR PRACT LOG PROG, V12, P361, DOI 10.1017/S147106841100007X
   Zhang JP, 2019, IEEE ACM T COMPUT BI, V16, P396, DOI 10.1109/TCBB.2017.2701379
NR 39
TC 3
Z9 3
U1 1
U2 7
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2022
VL 22
IS 2
SI SI
BP 229
EP 253
DI 10.1017/S1471068421000090
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 6M9AN
UT WOS:000889154700004
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Kumar, N
   Kuzelka, O
   De Raedt, L
AF Kumar, Nitesh
   Kuzelka, Ondrej
   De Raedt, Luc
TI Learning Distributional Programs for Relational Autocompletion
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE probabilistic logic programming; statistical relational learning;
   structure learning; inductive logic programming
ID LOGIC PROGRAMS; INFERENCE; INDUCTION; NETWORKS
AB Relational autocompletion is the problem of automatically filling out some missing values in multi-relational data. We tackle this problem within the probabilistic logic programming framework of Distributional Clauses (DCs), which supports both discrete and continuous probability distributions. Within this framework, we introduce DiceML - an approach to learn both the structure and the parameters of DC programs from relational data (with possibly missing data). To realize this, DiceML integrates statistical modeling and DCs with rule learning. The distinguishing features of DiceML are that it (1) tackles autocompletion in relational data, (2) learns DCs extended with statistical models, (3) deals with both discrete and continuous distributions, (4) can exploit background knowledge, and (5) uses an expectation-maximization-based (EM) algorithm to cope with missing data. The empirical results show the promise of the approach, even when there is missing data.
C1 [Kumar, Nitesh; De Raedt, Luc] Katholieke Univ Leuven, Dept Comp Sci, Leuven, Belgium.
   [Kuzelka, Ondrej] Czech Tech Univ, Dept Comp Sci, Prague, Czech Republic.
C3 KU Leuven; Czech Technical University Prague
RP Kumar, N (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Leuven, Belgium.
RI De Raedt, Luc/AAX-1544-2021; Kuzelka, Ondrej/T-3922-2017
OI De Raedt, Luc/0000-0002-6860-6303; Kuzelka, Ondrej/0000-0002-6523-9114;
   Kumar, Nitesh/0000-0002-9301-3876
CR Alberti M, 2017, INTELL ARTIF, V11, P47, DOI 10.3233/IA-170106
   [Anonymous], 1987, J ROY STAT SOC D-STA
   [Anonymous], 2007, INTRO STAT RELATIONA
   [Anonymous], 2003, KDD
   [Anonymous], 2016, MACH LEARN, DOI DOI 10.1007/s10994-016-5558-8
   [Anonymous], 2012, P NIPS WORKSH PROB P
   Bekker J, 2020, MACH LEARN, V109, P719, DOI 10.1007/s10994-020-05877-5
   Blockeel H, 1998, ARTIF INTELL, V101, P285, DOI 10.1016/S0004-3702(98)00034-4
   Boutilier C, 1996, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, P115
   Breese J., 1998, P 14 C UNC ART INT, P43
   Chickering D. M., 1997, P UAI, P80
   Choi Jaesik., 2010, Proceedings of the Twenty-Sixth Conference on Uncertainty in Artificial Intelligence, UAI 2010, P126
   De Raedt L, 2018, LECT NOTES COMPUT SC, V11191, P3, DOI 10.1007/978-3-030-01768-2_1
   De Raedt L, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P1835
   De Raedt L, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2468
   DEMPSTER AP, 1977, J ROY STAT SOC B MET, V39, P1, DOI 10.1111/j.2517-6161.1977.tb01600.x
   Diebolt J., 1995, STOCHASTIC ALGORITHM
   Dos Martires PZ, 2019, AAAI CONF ARTIF INTE, P7825
   Dzeroski S, 2010, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, SECOND EDITION, P887, DOI 10.1007/978-0-387-09823-4_46
   Friedman N, 1998, NATO ADV SCI I D-BEH, V89, P421
   Friedman N, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P1300
   Friedman N., 1997, ICML, P125
   Getoor L, 2001, RELATIONAL DATA MINING, P307
   Gutmann B, 2011, LECT NOTES ARTIF INT, V6489, P76, DOI 10.1007/978-3-642-21295-6_12
   Gutmann B, 2011, THEOR PRACT LOG PROG, V11, P663, DOI 10.1017/S1471068411000238
   Ilyas I. F., 2015, FOUND TRENDS DATABAS, V5, P281, DOI [DOI 10.1561/1900000045, 10.1561/1900000045]
   Islam MA, 2012, THEOR PRACT LOG PROG, V12, P505, DOI 10.1017/S1471068412000154
   Jaeger M., 1997, UAI, P266
   Kersting K., 2011, P 11 INT C LOG PROGR, P1
   Kersting K., 2005, UNCERTAINTY ARTIFICI, P300
   Khot T., 2012, P ICML WORKSHOP STAT
   Khot T, 2015, MACH LEARN, V100, P75, DOI 10.1007/s10994-015-5481-4
   Kok S., 2005, P 22 INT C MACHINE L, P441, DOI DOI 10.1145/1102351.1102407
   Kolb S, 2020, MACH LEARN, V109, P307, DOI 10.1007/s10994-019-05841-y
   Koller D., 2007, INTRO STAT RELATIONA
   KYBURG HE, 1991, J PHILOS, V88, P434, DOI 10.2307/2026705
   Lavrac N., 1994, Inductive Logic Programming: Techniques and Applications, P146
   Michels S., 2016, P 25 INT JOINT C ART, P3616
   Moldovan B, 2018, AUTON ROBOT, V42, P19, DOI 10.1007/s10514-017-9637-x
   MUGGLETON S, 1995, NEW GENERAT COMPUT, V13, P245, DOI 10.1007/BF03037227
   MUGGLETON S, 1990, NEW GENERAT COMPUT, V8, P295
   Närman P, 2010, IEEE INT ENTERP DIST, P57, DOI 10.1109/EDOC.2010.29
   Natarajan S, 2008, ANN MATH ARTIF INTEL, V54, P223, DOI 10.1007/s10472-009-9138-5
   Neville J, 2007, J MACH LEARN RES, V8, P653
   Ngo L, 1997, THEOR COMPUT SCI, V171, P147, DOI 10.1016/S0304-3975(96)00128-4
   Nitti D, 2017, MACH LEARN, V106, P1905, DOI 10.1007/s10994-017-5669-x
   Nitti D, 2016, FRONT ARTIF INTEL AP, V285, P1283, DOI 10.3233/978-1-61499-672-9-1283
   Pedregosa F., 2011, J MACHINE LEARING RE
   Persson A, 2020, IEEE T COGN DEV SYST, V12, P84, DOI 10.1109/TCDS.2019.2915763
   Poole David, 2008, Probabilistic Inductive Logic Programming. Theory and Applications, P222, DOI 10.1007/978-3-540-78652-8_8
   Provost F., 2000, MACH LEARN, V52, P199
   QUINLAN JR, 1990, MACH LEARN, V5, P239, DOI 10.1007/BF00117105
   QUINLAN JR, 1995, NEW GENERAT COMPUT, V13, P287, DOI 10.1007/BF03037228
   Ravkic I, 2015, MACH LEARN, V100, P217, DOI 10.1007/s10994-015-5483-2
   Rekatsinas T, 2017, PROC VLDB ENDOW, V10, P1190
   Richardson M, 2006, MACH LEARN, V62, P107, DOI 10.1007/s10994-006-5833-1
   Riguzzi F, 2014, FRONT ROBOT AI, DOI 10.3389/frobt.2014.00006
   Sato T, 2001, J ARTIF INTELL RES, V15, P391
   Sato T, 1997, INT JOINT CONF ARTIF, P1330
   Schulte O, 2014, 2014 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DATA MINING (CIDM), P121, DOI 10.1109/CIDM.2014.7008657
   SCHWARZ G, 1978, ANN STAT, V6, P461, DOI 10.1214/aos/1176344136
   Shachter R. D., 1998, Uncertainty in Artificial Intelligence. Proceedings of the Fourteenth Conference (1998), P480
   Speichert S, 2018, Arxiv, DOI arXiv:1807.05527
   Srinivasan A., 2001, The Aleph Manual
   Taskar B., 2002, em Proceedings of the Eighteenth conference on Uncertainty in artificial intelligence, P485
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P431, DOI 10.1007/978-3-540-27775-0_30
   Vens C, 2007, LECT NOTES ARTIF INT, V4455, P424
   Wang J., 2008, 23 NATL C ART INT AA, V2, P1106
   Wu Y, 2018, PR MACH LEARN RES, V80
   Yakout M., 2013, P 2013 ACM SIGMOD IN, P553
   Dos Martires PZ, 2020, FRONT ROBOT AI, V7, DOI 10.3389/frobt.2020.00100
NR 71
TC 0
Z9 0
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2022
VL 22
IS 1
BP 81
EP 114
DI 10.1017/S1471068421000144
PG 34
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 6M8ZH
UT WOS:000889151500004
OA Green Submitted, hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Bogatarkan, A
   Erdem, E
AF BOGATARKAN, A. Y. S. U.
   ERDEM, E. S. R. A.
TI Explanation Generation for Multi-Modal Multi-Agent Path Finding with
   Optimal Resource Utilization using Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
ID LOGIC PROGRAMS; JUSTIFICATIONS
AB The multi-agent path finding (MAPF) problem is a combinatorial search problem that aims at finding paths for multiple agents (e.g., robots) in an environment (e.g., an autonomous warehouse) such that no two agents collide with each other, and subject to some constraints on the lengths of paths. We consider a general version of MAPF, called mMAPF, that involves multi-modal transportation modes (e.g., due to velocity constraints) and consumption of different types of resources (e.g., batteries). The real-world applications of mMAPF require flexibility (e.g., solving variations of mMAPF) as well as explainability. Our earlier studies on mMAPF have focused on the former challenge of flexibility. In this study, we focus on the latter challenge of explainability, and introduce a method for generating explanations for queries regarding the feasibility and optimality of solutions, the nonexistence of solutions, and the observations about solutions. Our method is based on answer set programming.
C1 [BOGATARKAN, A. Y. S. U.; ERDEM, E. S. R. A.] Sabanci Univ, Fac Engn & Nat Sci, Istanbul, Turkey.
C3 Sabanci University
RP Bogatarkan, A (corresponding author), Sabanci Univ, Fac Engn & Nat Sci, Istanbul, Turkey.
EM aysubogatarkan@sabanciuniv.edu; esraerdem@sabanciuniv.edu
RI ; Erdem, Esra/I-4587-2012
OI Bogatarkan, Aysu/0000-0003-3363-1987; Erdem, Esra/0000-0001-8384-7810
CR Almagor S., 2020, P 19 INT C AUT AG MU, P34, DOI DOI 10.5555/3398761.3398771
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   Bogatarkan Aysu, 2020, Proceedings of 5th International Conference on the Industry 4.0 Model for Advanced Manufacturing, (AMP 2020). Lecture Notes in Mechanical Engineering (LNME), P313, DOI 10.1007/978-3-030-46212-3_24
   Bogatarkan Aysu, 2019, PROC GCAI, V65, P54, DOI [10.1609/aaai.v33i01.33017732, DOI 10.1609/AAAI.V33I01.33017732]
   BRAIN M., 2007, IS ILLOGICAL CAPTAIN
   Cabalar P, 2016, THEOR PRACT LOG PROG, V16, P587, DOI 10.1017/S1471068416000454
   Cabalar P, 2014, THEOR PRACT LOG PROG, V14, P603, DOI 10.1017/S1471068414000234
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Chouhan SS, 2015, LECT NOTES ARTIF INT, V9457, P123, DOI 10.1007/978-3-319-26350-2_11
   Damásio CV, 2013, LECT NOTES COMPUT SC, V8148, P530, DOI 10.1007/978-3-642-40564-8_53
   Dijkstra EW., 1959, NUMER MATH, V1, P269, DOI [10.1007/BF01386390, DOI 10.1007/BF01386390]
   Dodaro C, 2019, THEOR PRACT LOG PROG, V19, P290, DOI 10.1017/S1471068418000492
   Dresner K, 2008, J ARTIF INTELL RES, V31, P591, DOI 10.1613/jair.2502
   Eifler R, 2020, AAAI CONF ARTIF INTE, V34, P9818
   Erdem E., 2013, PROC AAAI C ARTIFICI, P290, DOI DOI 10.1609/AAAI.V27I1.8592
   Erdem E, 2015, THEOR PRACT LOG PROG, V15, P35, DOI 10.1017/S1471068413000598
   Fandinno J, 2019, THEOR PRACT LOG PROG, V19, P114, DOI 10.1017/S1471068418000534
   Gebser M, 2008, P 23 NAT C ART INT, V1
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Jansen Renee., 2008, Em Proceedings of the 7th International Joint Conference on Autonomous Agents and Multiagent Systems, paginas, P1401, DOI DOI 10.1145/1402821.1402883
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Luna R, 2011, IEEE INT C INT ROBOT, P3268, DOI 10.1109/IROS.2011.6048846
   Morris A, 2005, IEEE INT CONF ROBOT, P2117
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Oetsch J, 2010, THEOR PRACT LOG PROG, V10, P513, DOI 10.1017/S1471068410000256
   Pontelli E, 2009, THEOR PRACT LOG PROG, V9, P1, DOI 10.1017/S1471068408003633
   Ratner D., 1986, Proceedings AAAI-86: Fifth National Conference on Artificial Intelligence, P168
   Schulz C, 2016, THEOR PRACT LOG PROG, V16, P59, DOI 10.1017/S1471068414000702
   Sharon G, 2015, ARTIF INTELL, V219, P40, DOI 10.1016/j.artint.2014.11.006
   Smith D., 2012, P AAAI
   Stern R, 2019, P INT S COMB SEARCH, P151, DOI DOI 10.48550/ARXIV.1906.08291
   Surynek P, 2012, PROC INT C TOOLS ART, P524, DOI 10.1109/ICTAI.2012.77
   Toni F., 2013, THEOR PRACT LOG PROG, V13, P4
   Wang K.-H. C., 2008, ICAPS, P380
   Yu JJ, 2013, IEEE INT CONF ROBOT, P3612, DOI 10.1109/ICRA.2013.6631084
NR 36
TC 3
Z9 3
U1 0
U2 7
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2020
VL 20
IS 6
SI SI
BP 974
EP 989
DI 10.1017/S1471068420000320
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR3IT
UT WOS:000571456800012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dagnino, F
   Ancona, D
   Zucca, E
AF DAGNINO, F. R. A. N. C. E. S. C. O.
   ANCONA, D. A. V. I. D. E.
   ZUCCA, E. L. E. N. A.
TI Flexible coinductive logic programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE coinduction; operational semantics; declarative semantics; soundness;
   completeness
ID CORECURSION
AB Recursive definitions of predicates are usually interpreted either inductively or coinductively. Recently, a more powerful approach has been proposed, calledflexible coinduction, to express a variety of intermediate interpretations, necessary in some cases to get the correct meaning. We provide a detailed formal account of an extension of logic programming supporting flexible coinduction. Syntactically, programs are enriched bycoclauses, clauses with a special meaning used to tune the interpretation of predicates. As usual, the declarative semantics can be expressed as a fixed point which, however, is not necessarily the least, nor the greatest one, but is determined by the coclauses. Correspondingly, the operational semantics is a combination of standard SLD resolution and coSLD resolution. We prove that the operational semantics is sound and complete with respect to declarative semantics restricted to finite comodels.
C1 [DAGNINO, F. R. A. N. C. E. S. C. O.; ANCONA, D. A. V. I. D. E.; ZUCCA, E. L. E. N. A.] Univ Genoa, DIBRIS, Genoa, Italy.
C3 University of Genoa
RP Dagnino, F (corresponding author), Univ Genoa, DIBRIS, Genoa, Italy.
EM francesco.dagnino@dibris.unige.it; davide.ancona@unige.it;
   elena.zucca@unige.it
RI Ancona, Davide/U-6156-2018
OI Ancona, Davide/0000-0002-6297-2011
CR Adámek J, 2006, MATH STRUCT COMP SCI, V16, P1085, DOI 10.1017/S0960129506005706
   Ancona D., 2018, 32 EUROPEAN C OBJECT, V109, p21:1, DOI [10.4230/LIPIcs.ECOOP.2018.21, DOI 10.4230/LIPICS.ECOOP.2018.21]
   Ancona D, 2020, SCI COMPUT PROGRAM, V197, DOI 10.1016/j.scico.2020.102492
   Ancona D, 2017, ELECTRON P THEOR COM, P1, DOI 10.4204/EPTCS.258.1
   Ancona D, 2017, LECT NOTES COMPUT SC, V10201, P29, DOI 10.1007/978-3-662-54434-1_2
   Ancona D, 2015, FUND INFORM, V140, P221, DOI 10.3233/FI-2015-1252
   Ancona D, 2013, COMPUT LANG SYST STR, V39, P142, DOI 10.1016/j.cl.2013.05.001
   [Anonymous], 1977, Studies in Logic and the Foundations of Mathematics, DOI [DOI 10.1016/S0049-237X, DOI 10.1016/S0049-237X(08)71120-0, 10.1016/S0049-237X(08)71120-0]
   Apt K. R., 1997, From Logic Programming to Prolog
   Basold H, 2019, LECT NOTES COMPUT SC, V11423, P783, DOI 10.1007/978-3-030-17184-1_28
   COURCELLE B, 1983, THEOR COMPUT SCI, V25, P95, DOI 10.1016/0304-3975(83)90059-2
   DAGNINO F., 2020, TECH REP
   DAGNINO F., 2017, THESIS
   Dagnino F, 2019, LOG METH COMPUT SCI, V15, DOI 10.23638/LMCS-15(1:26)2019
   Gupta Gopal, 2011, Algebra and Coalgebra in Computer Science. Proceedings 4th International Conference, CALCO 2011, P40, DOI 10.1007/978-3-642-22944-2_4
   Komendantskaya E, 2017, THEOR PRACT LOG PROG, V17, P906, DOI 10.1017/S147106841700028X
   Komendantskaya E, 2017, LECT NOTES COMPUT SC, V10184, P168, DOI 10.1007/978-3-319-63139-4_10
   Komendantskaya E, 2016, J LOGIC COMPUT, V26, P745, DOI 10.1093/logcom/exu026
   Leroy X, 2009, INFORM COMPUT, V207, P284, DOI 10.1016/j.ic.2007.12.004
   Li Y, 2017, ELECTRON P THEOR COM, P52, DOI 10.4204/EPTCS.258.4
   Lloyd J. W., 2012, Foundations of Logic Programming
   LODING C., 2016, LIPICS, V58
   Mantadelis T, 2014, THEOR PRACT LOG PROG, V14, P429, DOI 10.1017/S147106841400012X
   Moura Paulo, 2013, Practical Aspects of Declarative Languages. 15th International Symposium, PADL 2013. Proceedings: LNCS 7752, P77, DOI 10.1007/978-3-642-45284-0_6
   Simon L, 2007, LECT NOTES COMPUT SC, V4596, P472
   Simon L, 2006, LECT NOTES COMPUT SC, V4079, P330, DOI 10.1007/11799573_25
   Simon Luke, 2006, THESIS
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
NR 28
TC 4
Z9 4
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2020
VL 20
IS 6
SI SI
BP 818
EP 833
AR PII S147106842000023X
DI 10.1017/S147106842000023X
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR3IT
UT WOS:000571456800002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fandinno, J
   Lifschitz, V
   Lühne, P
   Schaub, T
AF Fandinno, Jorge
   Lifschitz, Vladimir
   Luehne, Patrick
   Schaub, Torsten
TI <i>Verifying Tight Logic Programs with</i> ANTHEM <i>and</i> VAMPIRE
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
AB This paper continues the line of research aimed at investigating the relationship between logic programs and first-order theories. We extend the definition of program completion to programs with input and output in a subset of the input language of the ASP grounder gringo, study the relationship between stable models and completion in this context, and describe preliminary experiments with the use of two software tools, anthem and vampire, for verifying the correctness of programs with input and output. Proofs of theorems are based on a lemma that relates the semantics of programs studied in this paper to stable models of first-order formulas.
C1 [Fandinno, Jorge; Luehne, Patrick; Schaub, Torsten] Univ Potsdam, Potsdam, Germany.
   [Lifschitz, Vladimir] Univ Texas Austin, Austin, TX 78712 USA.
C3 University of Potsdam; University of Texas System; University of Texas
   Austin
RP Fandinno, J (corresponding author), Univ Potsdam, Potsdam, Germany.
RI Schaub, Torsten/O-5873-2019; Fandinno, Jorge/JJC-6227-2023; Fandiño,
   Jorge/F-8705-2016
OI Schaub, Torsten/0000-0002-7456-041X; Fandiño, Jorge/0000-0002-3917-8717;
   Luhne, Patrick/0000-0001-5902-4152; Lifschitz,
   Vladimir/0000-0001-6051-7907
FU Alexander von Humboldt Foundation
FX We thank Michael Gelfond and the anonymous referees for their valuable
   comments. Jorge Fandinno is funded by the Alexander von Humboldt
   Foundation.
CR Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Cabalar P., 2020, THEORY PRACTICE LOGI
   Clark K. L., 1978, Logic and data bases, P293
   Erdem E, 2003, THEOR PRACT LOG PROG, V3, P499, DOI 10.1017/S1471068403001765
   Fages F., 1994, Methods of Logic in Computer Science, V1, P51
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Ferraris P, 2011, ARTIF INTELL, V175, P236, DOI 10.1016/j.artint.2010.04.011
   Ferraris P, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P797
   Gebser M, 2015, THEOR PRACT LOG PROG, V15, P449, DOI 10.1017/S1471068415000150
   Gelfond M, 1996, INT J SOFTW ENG KNOW, V6, P89, DOI 10.1142/S0218194096000053
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Harrison A, 2017, THEOR PRACT LOG PROG, V17, P855, DOI 10.1017/S1471068417000394
   Harrison A, 2017, ARTIF INTELL, V246, P22, DOI 10.1016/j.artint.2017.02.002
   Kovacs Laura, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P1, DOI 10.1007/978-3-642-39799-8_1
   Lee J., 2008, P 23 NAT C ART INT A, P472
   Lifschitz Vladimir, 2020, Fields of Logic and Computation III. Essays Dedicated to Yuri Gurevich on the Occasion of His 80th Birthday. Lecture Notes in Computer Science (LNCS 12180), P190, DOI 10.1007/978-3-030-48006-6_14
   Lifschitz V., 2018, P 11 WORKSH ANS SET
   Lifschitz V, 2019, LECT NOTES ARTIF INT, V11481, P270, DOI 10.1007/978-3-030-20528-7_20
   Oikarinen E, 2009, J LOGIC COMPUT, V19, P591, DOI 10.1093/logcom/exn039
   Sutcliffe G, 2017, J AUTOM REASONING, V59, P483, DOI 10.1007/s10817-017-9407-7
   Truszczynski M., 2012, Lecture Notes in Computer Science, V7265, P543
NR 21
TC 14
Z9 14
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2020
VL 20
IS 5
SI SI
BP 735
EP 750
DI 10.1017/S1471068420000344
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR5RA
UT WOS:000571619500011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Weinzierl, ANTONIUS
   Taupe, R
   Friedrich, G
AF Weinzierl, Antonius
   Taupe, Richard
   Friedrich, Gerhard
TI Advancing Lazy-Grounding ASP Solving Techniques - Restarts, Phase
   Saving, Heuristics, and More
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE Answer-Set Programming; Lazy-Grounding; Solving Techniques; Knowledge
   Representation
ID ANSWER; SATISFIABILITY; COMPLEXITY; SYSTEM; DLV
AB Answer-Set Programming (ASP) is a powerful and expressive knowledge representation paradigm with a significant number of applications in logic-based AI. The traditional ground-and-solve approach, however, requires ASP programs to be grounded upfront and thus suffers from the so-called grounding bottleneck (i.e., ASP programs easily exhaust all available memory and thus become unsolvable). As a remedy, lazy-grounding ASP solvers have been developed, but many state-of-the-art techniques for grounded ASP solving have not been available to them yet. In this work we present, for the first time, adaptions to the lazy-grounding setting for many important techniques, like restarts, phase saving, domain-independent heuristics, and learned-clause deletion. Furthermore, we investigate their effects and in general observe a large improvement in solving capabilities and also uncover negative effects in certain cases, indicating the need for portfolio solving as known from other solvers.
C1 [Weinzierl, Antonius] TU Wien Vienna Univ Technol, Vienna, Austria.
   [Taupe, Richard; Friedrich, Gerhard] Alpen Adria Univ, Klagenfurt, Austria.
   [Taupe, Richard] Siemens AG Osterreich, Vienna, Austria.
C3 Technische Universitat Wien; University of Klagenfurt; Siemens AG
RP Weinzierl, ANTONIUS (corresponding author), TU Wien Vienna Univ Technol, Vienna, Austria.
EM antonius.weinzierl@kr.tuwien.ac.at; richard.taupe@siemens.com;
   gerhard.friedrich@aau.at
OI Comploi-Taupe, Richard/0000-0001-7639-1616
FU Austrian Federal Ministry of Transport, Innovation and Technology
   (BMVIT) [861263]; EU-ECSEL [737459]
FX This work has been conducted in the scope of the research project
   DynaCon (FFG-PNr.: 861263), which is funded by the Austrian Federal
   Ministry of Transport, Innovation and Technology (BMVIT) under the
   program "ICT of the Future" between 2017 and 2020,12 and in the scope of
   the research project Productive4.0, which is funded by EU-ECSEL under
   grant agreement no737459. The first author would like to thank Bart
   Bogaerts and Jakob Nordstr <spacing diaeresis>om for the discussions of
   modern SAT techniques.
CR Abels D, 2019, LECT NOTES ARTIF INT, V11481, P3, DOI 10.1007/978-3-030-20528-7_1
   Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P42, DOI 10.1007/978-3-642-40564-8_5
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P54, DOI 10.1007/978-3-642-40564-8_6
   Anger C, 2006, FRONT ARTIF INTEL AP, V141, P769
   Aschinger M, 2011, LECT NOTES COMPUT SC, V6697, P4, DOI 10.1007/978-3-642-21311-3_4
   Audemard Gilles, 2012, Principles and Practice of Constraint Programming. Proceedings 18th International Conference, CP 2012, P118, DOI 10.1007/978-3-642-33558-7_11
   Audemard G, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P399
   Biere A., 2018, EPIC SERIES COMPUTIN, V59, P1, DOI [10.29007/89dw, DOI 10.29007/89DW]
   Bogaerts B, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1737
   Bomanson J, 2019, AAAI CONF ARTIF INTE, P2694
   Cabalar P, 2019, LECT NOTES ARTIF INT, V11481, P256, DOI 10.1007/978-3-030-20528-7_19
   Calimeri F, 2017, INTELL ARTIF, V11, P5, DOI 10.3233/IA-170104
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   Calimeri F, 2014, THEOR PRACT LOG PROG, V14, P117, DOI 10.1017/S1471068412000105
   Clark K. L., 1978, Logic and data bases, P293
   Cuteri B, 2019, THEOR PRACT LOG PROG, V19, P857, DOI 10.1017/S1471068419000231
   Dal Palù A, 2009, FUND INFORM, V96, P297, DOI 10.3233/FI-2009-180
   De Cat B, 2015, J ARTIF INTELL RES, V52, P235, DOI 10.1613/jair.4591
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Eiter T, 2018, J ARTIF INTELL RES, V62, P665, DOI 10.1613/jair.1.11221
   Elffers J, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1300
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Falkner A, 2018, KUNSTL INTELL, V32, P165, DOI 10.1007/s13218-018-0548-6
   FRIEDRICH G., 2011, CEUR WORKSHOP P, V755
   Gebser M., 2016, TECHNICAL COMMUNICAT, DOI [10.4230/OASIcs.ICLP.2016.2, DOI 10.4230/OASICS.ICLP.2016.2]
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gebser M, 2011, AI COMMUN, V24, P195, DOI 10.3233/AIC-2011-0496
   Gebser Martin, 2013, AAAI
   Goldberg E, 2002, DESIGN, AUTOMATION AND TEST IN EUROPE CONFERENCE AND EXHIBITION, 2002 PROCEEDINGS, P142, DOI 10.1109/DATE.2002.998262
   Gomes CP, 2000, J AUTOM REASONING, V24, P67, DOI 10.1023/A:1006314320276
   Lefévre C, 2017, THEOR PRACT LOG PROG, V17, P266, DOI 10.1017/S1471068416000569
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   LEUTGEB L., 2017, LECT NOTES COMPUTER, V10997, P132
   LUBY M, 1993, INFORM PROCESS LETT, V47, P173, DOI 10.1016/0020-0190(93)90029-9
   MARPLE K., 2017, ABS170900501 CORR
   Marple K., 2012, Proceedings of the 14th symposium on Principles and practice of declarative programming, PPDP '12, P35, DOI DOI 10.1145/2370776.2370782
   Minh Dao-Tran, 2012, Logics in Artificial Intelligence. Proceedings of the 13th European Conference (JELIA 2012), P480, DOI 10.1007/978-3-642-33353-8_38
   Moskewicz MW, 2001, DES AUT CON, P530, DOI 10.1109/DAC.2001.935565
   Pipatsrisawat K, 2007, LECT NOTES COMPUT SC, V4501, P294
   Pretolani D., 1993, CLIQUES COLORING SAT, V26, P479
   Redl C, 2016, RCRA AI IA CEUR WORK, P45
   TAUPE R., 2019, ICLP TECHNICAL COMMU, V306, P22
   TAUPE R., 2017, 1 INT WORKSH PRACT A
   Taupe R, 2019, LECT NOTES ARTIF INT, V11481, P298, DOI 10.1007/978-3-030-20528-7_22
   Teppan EC, 2017, ARTIF INTELL, V248, P112, DOI 10.1016/j.artint.2017.04.002
   WEINZIERL A., 2013, 2 WORKSH GROUND TRAN, P25
   Weinzierl A, 2017, LECT NOTES ARTIF INT, V10377, P191, DOI 10.1007/978-3-319-61660-5_17
NR 49
TC 7
Z9 7
U1 1
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2020
VL 20
IS 5
SI SI
BP 609
EP 624
AR PII S1471068420000332
DI 10.1017/S1471068420000332
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR5RA
UT WOS:000571619500003
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Alviano, M
   Leone, N
   Veltri, P
   Zangari, J
AF Alviano, Mario
   Leone, Nicola
   Veltri, Pierfrancesco
   Zangari, Jessica
TI Enhancing Magic Sets with an Application to Ontological Reasoning
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Datalog; query answering; magic sets; nonmonotonic reasoning;
   aggregations
ID LOGIC PROGRAMS; OPTIMIZATION; SEMANTICS; DATALOG; ASP; COMPUTATION;
   COMPLEXITY; QUERIES
AB Magic sets are a Datalog to Datalog rewriting technique to optimize query answering. The rewritten program focuses on a portion of the stable model(s) of the input program which is sufficient to answer the given query. However, the rewriting may introduce new recursive definitions, which can involve even negation and aggregations, and may slow down program evaluation. This paper enhances the magic set technique by preventing the creation of (new) recursive definitions in the rewritten program. It turns out that the new version of magic sets is closed for Datalog programs with stratified negation and aggregations, which is very convenient to obtain efficient computation of the stable model of the rewritten program. Moreover, the rewritten program is further optimized by the elimination of subsumed rules and by the efficient handling of the cases where binding propagation is lost. The research was stimulated by a challenge on the exploitation of Datalog/DLV for efficient reasoning on large ontologies. All proposed techniques have been hence implemented in the DLV system, and tested for ontological reasoning, confirming their effectiveness.
C1 [Alviano, Mario; Leone, Nicola; Veltri, Pierfrancesco; Zangari, Jessica] Univ Calabria, Dept Math & Comp Sci, Commenda Di Rende, Italy.
C3 University of Calabria
RP Alviano, M (corresponding author), Univ Calabria, Dept Math & Comp Sci, Commenda Di Rende, Italy.
EM alviano@mat.unical.it; leone@mat.unical.it; veltri@mat.unical.it;
   zangari@mat.unical.it
RI Leone, Nicola/B-1890-2012; Alviano, Mario/H-1355-2012; Zangari,
   Jessica/AAA-6522-2021; Veltri, Pierluigi/J-1348-2014
OI Zangari, Jessica/0000-0002-6418-7711; 
FU MIUR under project "Declarative Reasoning over Streams" - PRIN 2017 [CUP
   H24I17000080001]; MISE under project "S2BDW" - "Horizon2020" PON
   IC2014-20 [F/050389/01-03/X32]; Regione Calabria under project "DLV
   LargeScale" - POR Calabria 2014-20 [CUP J28C17000220006]; GNCS-INdAM
FX This work has been partially supported by MIUR under project
   "Declarative Reasoning over Streams" (CUP H24I17000080001) - PRIN 2017,
   by MISE under project "S2BDW" (F/050389/01-03/X32) - "Horizon2020" PON
   I&C2014-20, by Regione Calabria under project "DLV LargeScale" (CUP
   J28C17000220006) - POR Calabria 2014-20, and by GNCS-INdAM.
CR Adrian WT, 2018, KUNSTL INTELL, V32, P177, DOI 10.1007/s13218-018-0533-0
   Alviano Mario, 2019, Logic Programming and Nonmonotonic Reasoning. 15th International Conference, LPNMR 2019. Proceedings: Lecture Notes in Artificial Intelligence (LNAI 11481), P241, DOI 10.1007/978-3-030-20528-7_18
   ALVIANO M., 2016, THEOR PRACT LOG PROG, V16, P5
   ALVIANO M., 2015, THEOR PRACT LOG PROG, V15, P4
   Alviano M, 2016, INT JOINT C ART INT, P4100
   Alviano M, 2018, KUNSTL INTELL, V32, P119, DOI 10.1007/s13218-018-0545-9
   Alviano M, 2018, THEOR PRACT LOG PROG, V18, P301, DOI 10.1017/S1471068418000133
   Alviano M, 2018, THEOR PRACT LOG PROG, V18, P319, DOI 10.1017/S1471068418000145
   Alviano M, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4781
   Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   Alviano M, 2014, THEOR PRACT LOG PROG, V14, P755, DOI 10.1017/S1471068414000325
   Alviano M, 2014, THEOR PRACT LOG PROG, V14, P339, DOI 10.1017/S147106841300001X
   Alviano M, 2011, LECT NOTES ARTIF INT, V6645, P148
   Alviano M, 2012, ARTIF INTELL, V187, P156, DOI 10.1016/j.artint.2012.04.008
   Alviano M, 2011, AI COMMUN, V24, P125, DOI 10.3233/AIC-2011-0492
   [Anonymous], 1985, P 5 ACM SIGACT SIGMO, DOI DOI 10.1145/6012.15399
   BALBIN I, 1991, J LOGIC PROGRAM, V11, P295, DOI 10.1016/0743-1066(91)90030-S
   Bartholomew M, 2011, LOGICAL FORMALIZATIO
   BEERI C, 1991, J LOGIC PROGRAM, V10, P255, DOI 10.1016/0743-1066(91)90038-Q
   BEHREND A, 2003, PODS 2003, P102
   Codish M, 1995, J LOGIC PROGRAM, V25, P249, DOI 10.1016/0743-1066(95)00064-X
   Dodaro C., 2011, CILC, P99
   Eiter T., 2012, P 26 AAAI C ART INT
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Ferraris P, 2011, ACM T COMPUT LOG, V12, DOI 10.1145/1970398.1970401
   Furfaro F, 2002, INFORM SYST, V27, P321, DOI 10.1016/S0306-4379(02)00006-6
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P250, DOI 10.1007/978-3-642-02846-5_23
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 2014, THEOR PRACT LOG PROG, V14, P4
   Greco G, 2005, THEOR PRACT LOG PROG, V5, P713, DOI 10.1017/S1471068404002273
   Greco S, 2003, IEEE T KNOWL DATA EN, V15, P368, DOI 10.1109/TKDE.2003.1185840
   KEMP DB, 1995, THEOR COMPUT SCI, V146, P145, DOI 10.1016/0304-3975(94)00153-A
   KERISIT J., 1988, FGCS, P719
   LEONE N, 2019, CEUR WORKSHOP P, V2396
   Leone N, 2019, LECT NOTES ARTIF INT, V11481, P312, DOI 10.1007/978-3-030-20528-7_23
   LIU L., 2010, ARTIF INTELL, V174, P3
   MUMICK IS, 1990, VERY LARGE DATA BASES, P264
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Przymusinski T. C., 1989, Journal of Automated Reasoning, V5, P167, DOI 10.1007/BF00243002
   ROSS KA, 1994, J ASSOC COMPUT MACH, V41, P1216, DOI 10.1145/195613.195646
   Simons Patrik, 2002, ARTIF INTELL, V138, P181
   Stuckey P. J., 1994, Proceedings of the Thirteenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems. PODS 1994, P56, DOI 10.1145/182591.182598
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   VANGELDER A, 1989, J LOGIC PROGRAM, V6, P109, DOI 10.1016/0743-1066(89)90032-0
   Whaley J, 2005, LECT NOTES COMPUT SC, V3780, P97
NR 45
TC 2
Z9 2
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 654
EP 670
DI 10.1017/S1471068419000115
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Das, A
   Zaniolo, C
AF Das, Ariyam
   Zaniolo, Carlo
TI A Case for Stale Synchronous Distributed Model for Declarative Recursive
   Computation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Datalog; Deductive Databases; Recursive Query; Stale Synchronous
   Parallel Model; Bulk Synchronous Parallel Model; Parallel and
   Distributed Computing
ID SCALING-UP; DATALOG; COORDINATION
AB A large class of traditional graph and data mining algorithms can be concisely expressed in Datalog, and other Logic-based languages, once aggregates are allowed in recursion. In fact, for most BigData algorithms, the difficult semantic issues raised by the use of non-monotonic aggregates in recursion are solved by Pre-Mappability (PreM), a property that assures that for a program with aggregates in recursion there is an equivalent aggregate-stratified program. In this paper we show that, by bringing together the formal abstract semantics of stratified programs with the efficient operational one of unstratified programs, PreM can also facilitate and improve their parallel execution. We prove that PreM-optimized lock-free and decomposable parallel semi-naive evaluations produce the same results as the single executor programs. Therefore, PreM can be assimilated into the data-parallel computation plans of different distributed systems, irrespective of whether these follow bulk synchronous parallel (BSP) or asynchronous computing models. In addition, we show that non-linear recursive queries can be evaluated using a hybrid stale synchronous parallel (SSP) model on distributed environments. After providing a formal correctness proof for the recursive query evaluation with PreM under this relaxed synchronization model, we present experimental evidence of its benefits.
C1 [Das, Ariyam; Zaniolo, Carlo] Univ Calif Los Angeles, Dept Comp Sci, Los Angeles, CA 90024 USA.
C3 University of California System; University of California Los Angeles
RP Das, A (corresponding author), Univ Calif Los Angeles, Dept Comp Sci, Los Angeles, CA 90024 USA.
EM ariyam@cs.ucla.edu; zaniolo@cs.ucla.edu
CR AMELOOT T. J, 2015, ACM T DATABASE SYST
   Ameloot TJ, 2017, J ACM, V64, DOI 10.1145/3106412
   Ameloot TJ, 2014, SIGMOD REC, V43, P5
   Ameloot TJ, 2013, J ACM, V60, DOI 10.1145/2450142.2450151
   Ananthanarayanan G, 2010, P 9 USENIX C OP SYST, P265
   [Anonymous], 2014, P USENIX C USENIX AN
   Aref M, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1371, DOI 10.1145/2723372.2742796
   Beckman P, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING, VOLS 1 AND 2, P81
   Condie T, 2018, THEOR PRACT LOG PROG, V18, P806, DOI 10.1017/S1471068418000418
   DAS A., 2019, ABS190710278 CORR
   Das A, 2018, CIKM'18: PROCEEDINGS OF THE 27TH ACM INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1863, DOI 10.1145/3269206.3269223
   GANGULY S, 1992, J LOGIC PROGRAM, V14, P101, DOI 10.1016/0743-1066(92)90048-8
   Gu Jiaqi., 2019, SIGMOD 19
   Ho Qirong, 2013, Adv Neural Inf Process Syst, V2013, P1223
   Interlandi M, 2018, THEOR PRACT LOG PROG, V18, P874, DOI 10.1017/S147106841800042X
   Keeton Kimberly, 2013, 14 WORKSH HOT TOP OP
   Krevat Elie., 2011, Proceedings of the 13th USENIX conference on Hot topics in operating systems, HotOS'13, P14
   Lee S, 2014, ADV NEUR IN, V27
   Low Y, 2012, PROC VLDB ENDOW, V5, P716, DOI 10.14778/2212351.2212354
   Malewicz Grzegorz, 2010, P ACM SIGMOD INT C M, P135, DOI [DOI 10.1145/1807167.1807184, 10.1145/1807167.1807184]
   Mazuran M, 2013, VLDB J, V22, P471, DOI 10.1007/s00778-012-0299-1
   Seo J, 2013, PROC VLDB ENDOW, V6, P1906, DOI 10.14778/2556549.2556572
   Shkapsky A, 2016, SIGMOD'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1135, DOI 10.1145/2882903.2915229
   Wang JJ, 2015, PROC VLDB ENDOW, V8, P1542
   Yan D, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P1307, DOI 10.1145/2736277.2741096
   Yang MH, 2017, VLDB J, V26, P229, DOI 10.1007/s00778-016-0448-z
   ZANIOLO C, 2016, AMW
   Zaniolo C, 2017, THEOR PRACT LOG PROG, V17, P1048, DOI 10.1017/S1471068417000436
   Zaniolo Carlo., 2018, AMW
NR 29
TC 5
Z9 7
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 1056
EP 1072
DI 10.1017/S1471068419000358
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500027
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gent, IP
   Miguel, I
   Nightingale, P
   Mccreesh, C
   Prosser, P
   Moore, NCA
   Unsworth, C
AF Gent, Ian P.
   Miguel, Ian
   Nightingale, Peter
   Mccreesh, Ciaran
   Prosser, Patrick
   Moore, Neil C. A.
   Unsworth, Chris
TI A review of literature on parallel constraint solving
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Review
DE Constraint programming; parallel computing; propositional
   satisfiability; parallel search
ID LOCAL SEARCH; DISTRIBUTED BREAKOUT; ALGORITHM SELECTION; SATISFACTION;
   IMPLEMENTATION; CONSISTENCY; CHALLENGES; ANOMALIES; SYSTEM
AB As multi-core computing is now standard, it seems irresponsible for constraints researchers to ignore the implications of it. Researchers need to address a number of issues to exploit parallelism, such as: investigating which constraint algorithms are amenable to parallelisation; whether to use shared memory or distributed computation; whether to use static or dynamic decomposition; and how to best exploit portfolios and cooperating search. We review the literature, and see that we can sometimes do quite well, some of the time, on some instances, but we are far from a general solution. Yet there seems to be little overall guidance that can be given on how best to exploit multi-core computers to speed up constraint solving. We hope at least that this survey will provide useful pointers to future researchers wishing to correct this situation.
C1 [Gent, Ian P.; Miguel, Ian; Nightingale, Peter] Univ St Andrews, Sch Comp Sci, St Andrews KY16 9SX, Fife, Scotland.
   [Mccreesh, Ciaran; Prosser, Patrick; Unsworth, Chris] Univ Glasgow, Sch Comp Sci, Glasgow G12 8RZ, Lanark, Scotland.
   [Moore, Neil C. A.] Adobe Syst Inc, Edinburgh, Midlothian, Scotland.
C3 University of St Andrews; University of Glasgow
RP Gent, IP (corresponding author), Univ St Andrews, Sch Comp Sci, St Andrews KY16 9SX, Fife, Scotland.
EM ian.gent@st-andrews.ac.uk; ijm@st-andrews.ac.uk; pwn1@st-andrews.ac.uk;
   ciaran.mccreesh@glasgow.ac.uk; Patrick.Prosser@glasgow.ac.uk;
   nemoore@adobe.com; chris.unsworth79@gmail.com
OI Nightingale, Peter/0000-0002-5052-8634; Miguel, Ian/0000-0002-6930-2686;
   McCreesh, Ciaran/0000-0002-6106-4871
FU EPSRC [EP/E030394/1, EP/M003728/1, EP/P015638/1, EP/P026842/1]; EPSRC
   [EP/M003728/1, EP/P026842/1, EP/P015638/1] Funding Source: UKRI
FX We would like to thank EPSRC for funding this work through grants
   EP/E030394/1, EP/M003728/1, EP/P015638/1 and EP/P026842/1.
CR Aigner M., 2013, POS SAT, P28
   Akgun O., 2010, THESIS, P1
   Akgun O., 2011, P 25 AAAI C ART INT, P4
   Akgun O, 2014, EXTENSIBLE AUTOMATED
   Akgun O, 2014, FRONT ARTIF INTEL AP, V263, P3, DOI 10.3233/978-1-61499-419-0-3
   Akgun O, 2013, LECT NOTES COMPUT SC, V8124, P107, DOI 10.1007/978-3-642-40627-0_11
   Amadini R, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1861, DOI 10.1145/2695664.2695741
   Amadini R, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P232
   [Anonymous], 2013, Proceedings of SAT Competition 2013
   Arbelaez Alejandro, 2014, 2014 22nd Euromicro International Conference on Parallel, Distributed, and Network-Based Processing, P648, DOI 10.1109/PDP.2014.28
   Arbelaez Alejandro, 2011, Learning and Intelligent Optimization. 5th International Conference, LION 5. Selected Papers, P46, DOI 10.1007/978-3-642-25566-3_4
   Arbelaez A, 2012, PROC INT C TOOLS ART, P57, DOI 10.1109/ICTAI.2012.17
   Arbelaez A, 2013, LECT NOTES COMPUT SC, V7832, P157, DOI 10.1007/978-3-642-37198-1_14
   Audemard G., 2012, LNCS, V7317, P200, DOI DOI 10.1007/978-3-642-31612-816
   Audemard G, 2014, LECT NOTES COMPUT SC, V8561, P197, DOI 10.1007/978-3-319-09284-3_15
   Bader D., 2005, TUTORIALS EMERGING M, V76, P1
   Balyo T, 2015, LECT NOTES COMPUT SC, V9340, P156, DOI 10.1007/978-3-319-24318-4_12
   Baudot B., 1997, RR9707 I CATH LOUV
   Bergman David, 2014, Integration of AI and OR Techniques in Constraint Programming. 11th International Conference, CPAIOR 2014. Proceedings: LNCS 8451, P351, DOI 10.1007/978-3-319-07046-9_25
   Biere Armin., 2010, FMV REPORTS SERIES
   Bordeaux L, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P443
   Campeotto F, 2014, FRONT ARTIF INTEL AP, V263, P189, DOI 10.3233/978-1-61499-419-0-189
   Campeotto Federico, 2014, Practical Aspects of Declarative Languages. 16th International Symposium, PADL 2014. Proceedings: LNCS 8324, P152, DOI 10.1007/978-3-319-04132-2_11
   Caniou Y, 2015, CONSTRAINTS, V20, P30, DOI 10.1007/s10601-014-9168-4
   Caniou Y, 2011, LECT NOTES COMPUT SC, V6622, P96, DOI 10.1007/978-3-642-20364-0_9
   Charnley J, 2006, FRONT ARTIF INTEL AP, V141, P73
   Chrabakh W, 2006, PARALLEL COMPUT, V32, P660, DOI 10.1016/j.parco.2006.01.004
   Chu G., 2008, SAT RACE 2008
   Chu G, 2009, LECT NOTES COMPUT SC, V5732, P226, DOI 10.1007/978-3-642-04244-7_20
   Cire AA, 2014, AAAI CONF ARTIF INTE, P842
   CLEARWATER SH, 1991, SCIENCE, V254, P1181, DOI 10.1126/science.254.5035.1181
   CLOCKSIN WF, 1987, COMPUT J, V30, P386, DOI 10.1093/comjnl/30.5.386
   Codognet Philippe., 2001, SAGA 01, P73
   Colton S., 2001, Principles and Practice of Constraint Programming - CP 2002. 7th International Conference, CP 2001. Proceedings (Lecture Notes in Computer Science Vol.2239), P575
   Crainic T.G., 2006, Parallel Combinatorial Optimization, P1, DOI DOI 10.1002/9780470053928.CH1
   Dal Palù A, 2015, J EXP THEOR ARTIF IN, V27, P293, DOI 10.1080/0952813X.2014.954274
   DAVENPORT A, 1994, PROCEEDINGS OF THE TWELFTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P325
   de Bruin A., 1995, Parallel Algorithms for Irregularly Structured Problems. Second International Workshop, IRREGULAR '95. Proceedings, P363
   Diaz D, 2012, CONCURR COMP-PRACT E, V24, P647, DOI 10.1002/cpe.1855
   Dovier Agostino, 2016, Practical Aspects of Declarative Languages. 18th International Symposium, PADL 2016. Proceedings: LNCS 9585, P30, DOI 10.1007/978-3-319-28228-2_3
   Drakakis K., 2006, J APPL MATH, V2006, P32
   Ehlers T, 2016, LECT NOTES COMPUT SC, V9676, P142, DOI 10.1007/978-3-319-33954-2_11
   Faltings B, 2006, FOUND ARTIF INTELL, P699
   Fioretto F, 2016, LECT NOTES COMPUT SC, V9892, P813, DOI 10.1007/978-3-319-44953-1_51
   Fioretto F, 2015, LECT NOTES COMPUT SC, V9255, P121, DOI 10.1007/978-3-319-23219-5_9
   Fioretto F, 2014, LECT NOTES COMPUT SC, V8656, P307, DOI 10.1007/978-3-319-10428-7_24
   Fischetti Matteo, 2014, Integration of AI and OR Techniques in Constraint Programming. 11th International Conference, CPAIOR 2014. Proceedings: LNCS 8451, P394, DOI 10.1007/978-3-319-07046-9_28
   Flener P., 2001, P SYMCON CIT, V1
   Flener Pierre., 2002, Proceedings of the International Workshop on Reformulating Constraint Satisfaction Problems, P27
   FREUDER EC, 1982, J ACM, V29, P24, DOI 10.1145/322290.322292
   Frisch A.M., 2007, P INT SYMM C
   Frisch AM, 2008, CONSTRAINTS, V13, P268, DOI 10.1007/s10601-008-9047-y
   Frisch AM, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P80
   Frisch AM, 2004, FRONT ARTIF INTEL AP, V110, P171
   FRISCH AM, 2005, P 4 INT WORKSH MOD R, P73
   Frühwirth T, 2006, FOUND ARTIF INTELL, P453
   FURUKAWA K, 1988, LECT NOTES COMPUT SC, V338, P364
   Garcia Vincent, 2008, 2008 IEEE Computer Society Conference on Computer Vision and Pattern Recognition Workshops (CVPR Workshops), P1, DOI 10.1109/CVPRW.2008.4563100
   Gecode Team, 2006, Gecode: Generic constraint development environment
   Gent I. P., 2011, P PMCS 2011 WORKSH P, P499
   Gent I. P., 2008, P INT WORKSH MOD SOL, P24
   Gharbi N, 2015, PROC INT C TOOLS ART, P17, DOI 10.1109/ICTAI.2015.17
   Gomes CP, 2001, ARTIF INTELL, V126, P43, DOI 10.1016/S0004-3702(00)00081-3
   Granvilliers L, 2000, INFORM PROCESS LETT, V74, P141, DOI 10.1016/S0020-0190(00)00048-X
   Grinshpoun T, 2013, J ARTIF INTELL RES, V47, P613, DOI 10.1613/jair.3945
   Guo L, 2010, LECT NOTES COMPUT SC, V6308, P252, DOI 10.1007/978-3-642-15396-9_22
   GUSTAFSON JL, 1988, COMMUN ACM, V31, P532, DOI 10.1145/42411.42415
   Hamadi Y., 2002, Constraints, V7, P367, DOI 10.1023/A:1020594125144
   Hamadi Y., 2011, J SATISFIABILITY BOO, V7, P127
   Hamadi Y, 2013, AI MAG, V34, P99, DOI 10.1609/aimag.v34i2.2450
   Hamadi Y, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P499
   Hamadi Youssef, 2009, Journal on Satisfiability, Boolean Modeling and Computation, DOI DOI 10.3233/SAT190070
   Held J., 2006, From a Few Cores to Many: A Tera-scale Computing Research Overview
   HENZ M, 1993, IJCAI-93, VOLS 1 AND 2, P404
   Heule M.J.H., 2012, LNCS, V7261, P50
   Heule MJH, 2017, COMMUN ACM, V60, P70, DOI 10.1145/3107239
   Heule MJH, 2016, LECT NOTES COMPUT SC, V9710, P228, DOI 10.1007/978-3-319-40970-2_15
   Hirayama K, 2005, ARTIF INTELL, V161, P89, DOI 10.1016/j.artint.2004.08.004
   Holldobler S., 2011, Proceedings of the 2011 International Conference on Advanced Computer Science and Information Systems (ICACSIS), P201
   Hoos H, 2015, THEOR PRACT LOG PROG, V15, P117, DOI 10.1017/S1471068414000015
   Huberman BA, 1997, SCIENCE, V275, P51, DOI 10.1126/science.275.5296.51
   Hurley Barry, 2014, Integration of AI and OR Techniques in Constraint Programming. 11th International Conference, CPAIOR 2014. Proceedings: LNCS 8451, P301, DOI 10.1007/978-3-319-07046-9_22
   Hyvarinen A., 2012, LNCS, V7317, P214, DOI DOI 10.1007/978-3-642-31612-817
   HYVARINEN AEJ, 2009, J SATISFIABILITY BOO, V6, P223
   Jaffar J, 2004, PROC INT C TOOLS ART, P98
   Jarvisalo Matti, 2012, Automated Reasoning. Proceedings 6th International Joint Conference, IJCAR 2012, P355, DOI 10.1007/978-3-642-31365-3_28
   Kadioglu Serdar, 2011, Principles and Practice of Constraint Programming - CP 2011. Proceedings of the 17th International Conference (CP 2011), P454, DOI 10.1007/978-3-642-23786-7_35
   KARP RM, 1993, J ACM, V40, P765, DOI 10.1145/174130.174145
   KASIF S, 1994, ARTIF INTELL, V69, P307, DOI 10.1016/0004-3702(94)90085-X
   KASIF S, 1990, ARTIF INTELL, V45, P275, DOI 10.1016/0004-3702(90)90009-O
   Katsirelos G., 2013, 27 AAAI C ART INT, V27, P481
   KIROUSIS LM, 1993, ARTIF INTELL, V64, P147, DOI 10.1016/0004-3702(93)90063-H
   Kotthoff L., 2010, P 3 WORKSH TECHN IMP
   Kotthoff L, 2014, AI MAG, V35, P48, DOI 10.1609/aimag.v35i3.2460
   LAI TH, 1984, COMMUN ACM, V27, P594, DOI 10.1145/358080.358103
   Leaute T., 2009, Proceedings of the Distributed Constraint Reasoning Workshop, P160
   LI GJ, 1986, IEEE T COMPUT, V35, P568, DOI 10.1109/TC.1986.5009434
   Lindauer M, 2015, LECT NOTES COMPUT SC, V8994, P1, DOI 10.1007/978-3-319-19084-6_1
   Lindauer M, 2017, ARTIF INTELL-AMST, V244, P272, DOI 10.1016/j.artint.2016.05.004
   Machado R, 2013, PROC INT CONF PARAL, P530, DOI 10.1109/ICPP.2013.66
   Maher M. J., 1987, Logic Programming. Proceedings of the Fourth International Conference, P858
   Malapert A, 2016, J ARTIF INTELL RES, V57, P421, DOI 10.1613/jair.5247
   Malitsky Yuri, 2012, Principles and Practice of Constraint Programming. Proceedings 18th International Conference, CP 2012, P512, DOI 10.1007/978-3-642-33558-7_38
   Malitsky Yuri., 2013, P 23 INT JOINT C ART, P608
   Malitsky Yuri., 2013, SAT COMPETITION 2013, P26
   Manolios P, 2006, LECT NOTES COMPUT SC, V4121, P311
   Manthey N., 2011, P PRAGM SAT WORKSH
   Manthey N., 2011, 1104 TU DRESD KNOWL
   Martins R, 2012, CONSTRAINTS, V17, P304, DOI 10.1007/s10601-012-9121-3
   McCreesh C., 2015, ACM Trans. Parallel Comput., V2, p8: 1
   Menouer T, 2016, INT J PARALLEL PROG, V44, P486, DOI 10.1007/s10766-015-0356-7
   Michel L, 2007, LECT NOTES COMPUT SC, V4741, P514
   Michel L, 2006, LECT NOTES COMPUT SC, V4204, P344
   Michel L, 2009, COMPUT OPER RES, V36, P2357, DOI 10.1016/j.cor.2008.08.014
   Moisan Thierry, 2014, Integration of AI and OR Techniques in Constraint Programming. 11th International Conference, CPAIOR 2014. Proceedings: LNCS 8451, P377, DOI 10.1007/978-3-319-07046-9_27
   Moisan T, 2013, LECT NOTES COMPUT SC, V8124, P30, DOI 10.1007/978-3-642-40627-0_6
   Montelius J, 1996, NEW GENERAT COMPUT, V14, P31, DOI 10.1007/BF03037217
   Munawar A, 2009, GENET PROGRAM EVOL M, V10, P391, DOI 10.1007/s10710-009-9091-4
   Munera Danny, 2014, Evolutionary Computation in Combinatorial Optimisation. 14th European Conference (EvoCOP 2014). Revised Selected Papers: LNCS 8600, P13, DOI 10.1007/978-3-662-44320-0_2
   Munera D, 2015, AAAI CONF ARTIF INTE, P1212
   Munera D, 2014, LECT NOTES ARTIF INT, V8439, P169, DOI 10.1007/978-3-319-08909-6_11
   Netzer A, 2016, AUTON AGENT MULTI-AG, V30, P364, DOI 10.1007/s10458-015-9291-7
   Nguyen T, 1998, SCI COMPUT PROGRAM, V30, P227, DOI 10.1016/S0167-6423(97)00012-9
   Nguyen T., 1995, P 1 INT WORKSH CONC
   Nightingale P, 2017, ARTIF INTELL, V251, P35, DOI 10.1016/j.artint.2017.07.001
   Nightingale P, 2015, LECT NOTES COMPUT SC, V9255, P330, DOI 10.1007/978-3-319-23219-5_23
   Nightingale P, 2014, LECT NOTES COMPUT SC, V8656, P590, DOI 10.1007/978-3-319-10428-7_43
   O'Mahony E., 2008, Irish conference on artificial intelligence and cognitive science, P210
   Otten L, 2017, J ARTIF INTELL RES, V59, P351, DOI 10.1613/jair.5456
   Palmieri A, 2016, LECT NOTES COMPUT SC, V9892, P388, DOI 10.1007/978-3-319-44953-1_25
   Perron L, 1999, LECT NOTES COMPUT SC, V1713, P346
   Prosser P., 1992, Intelligent Systems Engineering, V1, P76, DOI 10.1049/ise.1992.0007
   Ralphs T., 2017, 16T014R3 LEH U
   RAO VN, 1988, LECT NOTES COMPUT SC, V338, P161
   REYNOLDS J. C., 1993, LISP SYMBOLIC COMPUT, V6, P3
   Rice J. R., 1976, Advances in computers, vol.15, P65, DOI 10.1016/S0065-2458(08)60520-3
   Rolf C.C., 2010, TRICS WORKSHOP CP201, P38
   Rossi F, 2006, FOUND ARTIF INTELL, P1
   Roussel O., 2011, TECH REP
   Ruiz-Andino A., 1998, WORKSHOP IMPLEMENTAT, P86
   Salido MA, 2006, APPL MATH COMPUT, V183, P491, DOI 10.1016/j.amc.2006.05.090
   SARASWAT VA, 1990, CONFERENCE RECORD OF THE SEVENTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P232, DOI 10.1145/96709.96733
   Sassi N, 2017, FUTURE GENER COMP SY, V73, P44, DOI 10.1016/j.future.2016.04.021
   Schubert Tobias, 2009, J SATISF BOOLEAN MOD, V6, P203, DOI [10.3233/sat190068, DOI 10.3233/SAT190068]
   Schulte C., 2000, Proceedings of Techniques for Implementing Constraint Programming Systems, Post-conference workshop of CP 2000, TRA9/00, P41
   Singer Daniel., 2006, Parallel Resolution of the Satisfiability Problem: A Survey, pages, P123
   Smith-Miles KA, 2008, ACM COMPUT SURV, V41, DOI 10.1145/1456650.1456656
   Sun XH, 2010, J PARALLEL DISTR COM, V70, P183, DOI 10.1016/j.jpdc.2009.05.002
   Van Hentenryck P., 2009, Constraint-based local search
   Van Roy P., 1999, AGENTLINK NEWS, V4, P3
   Verhoeven M. G. A., 1995, Journal of Heuristics, V1, P43, DOI 10.1007/BF02430365
   Wahbi M, 2014, LECT NOTES COMPUT SC, V8656, P721, DOI 10.1007/978-3-319-10428-7_52
   Wang C. J., 1991, Second International Conference on Artificial Neural Networks (Conf. Publ. No.349), P295
   Wang C. J., 1992, P INT WORKSH VLSI NE
   Wetter J, 2015, LECT NOTES COMPUT SC, V9255, P480, DOI 10.1007/978-3-319-23219-5_34
   Wotzlaw A., 2012, pfoliouzk: Solver description, P45
   Xi Yun, 2012, Learning and Intelligent Optimization. 6th International Conference, LION 6. Revised Selected Papers, P323, DOI 10.1007/978-3-642-34413-8_23
   Xie F, 2010, LECT NOTES COMPUT SC, V6140, P334
   Xu L, 2008, J ARTIF INTELL RES, V32, P565, DOI 10.1613/jair.2490
   Ying Zhang, 1991, Proceedings of the Third IEEE Symposium on Parallel and Distributed Processing (Cat. No.91TH0396-2), P394, DOI 10.1109/SPDP.1991.218214
   YOKOO M, 1992, INT CON DISTR COMP S, P614, DOI 10.1109/ICDCS.1992.235101
   Yokoo M, 2000, AUTON AGENT MULTI-AG, V3, P185, DOI 10.1023/A:1010078712316
   Zhang WX, 2005, ARTIF INTELL, V161, P55, DOI 10.1016/j.artint.2004.10.004
   Zivan R, 2015, AUTON AGENT MULTI-AG, V29, P495, DOI 10.1007/s10458-014-9255-3
   Zoeteweij P, 2004, LECT NOTES COMPUT SC, V2949, P307
NR 165
TC 10
Z9 10
U1 0
U2 6
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2018
VL 18
IS 5-6
BP 725
EP 758
DI 10.1017/S1471068418000340
PG 34
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA GS5FG
UT WOS:000443682000002
OA Green Submitted, Bronze, Green Accepted
DA 2024-07-18
ER

PT J
AU Lefévre, C
   Béatrix, C
   Stéphan, I
   Garcia, L
AF Lefevre, Claire
   Beatrix, Christopher
   Stephan, Igor
   Garcia, Laurent
TI ASPeRiX, a first-order forward chaining approach for answer set
   computing
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Answer set programming; solver implementation; grounding on the fly;
   first order; forward chaining
ID ASP; PROGRAMS; GRINGO
AB The natural way to use Answer Set Programming (ASP) to represent knowledge in Artificial Intelligence or to solve a combinatorial problem is to elaborate a first-order logic program with default negation. In a preliminary step, this program with variables is translated in an equivalent propositional one by a first tool: the grounder. Then, the propositional program is given to a second tool: the solver. This last one computes (if they exist) one or many answer sets (stable models) of the program, each answer set encoding one solution of the initial problem. Until today, almost all ASP systems apply this two steps computation. In this article, the project ASPeRiX is presented as a first-order forward chaining approach for Answer Set Computing. This project was among the first to introduce an approach of answer set computing that escapes the preliminary phase of rule instantiation by integrating it in the search process. The methodology applies a forward chaining of first-order rules that are grounded on the fly by means of previously produced atoms. Theoretical foundations of the approach are presented, the main algorithms of the ASP solver ASPeRiX are detailed and some experiments and comparisons with existing systems are provided.
C1 [Lefevre, Claire; Beatrix, Christopher; Stephan, Igor; Garcia, Laurent] Univ Angers, LERIA, 2 Blvd Lavoisier, F-49045 Angers 01, France.
C3 Universite d'Angers
RP Lefévre, C (corresponding author), Univ Angers, LERIA, 2 Blvd Lavoisier, F-49045 Angers 01, France.
EM claire@info.univ-angers.fr; beatrix@info.univ-angers.fr;
   stephan@info.univ-angers.fr; garcia@info.univ-angers.fr
FU ANR (National Research Agency), project ASPIQ [ANR-12-BS02-0003]; Agence
   Nationale de la Recherche (ANR) [ANR-12-BS02-0003] Funding Source:
   Agence Nationale de la Recherche (ANR)
FX This work was supported by ANR (National Research Agency), project ASPIQ
   under the reference ANR-12-BS02-0003.
CR Alviano M., 2011, STUDIES LOGIC, V31, P1
   Alviano M, 2010, THEOR PRACT LOG PROG, V10, P497, DOI 10.1017/S1471068410000244
   [Anonymous], 1989, Principles of Database and Knowledge-Base Systems
   [Anonymous], LNCS
   Balduccini M., 2009, P 2 WORKSH ANSW SET, P16
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Baselice S, 2005, LECT NOTES COMPUT SC, V3668, P52, DOI 10.1007/11562931_7
   Baselice S, 2010, THEOR PRACT LOG PROG, V10, P481, DOI 10.1017/S1471068410000232
   Buccafurri F, 2000, IEEE T KNOWL DATA EN, V12, P845, DOI 10.1109/69.877512
   Calimeri F, 2008, J ALGORITHMS, V63, P34, DOI 10.1016/j.jalgor.2008.02.003
   Calimeri F, 2014, THEOR PRACT LOG PROG, V14, P117, DOI 10.1017/S1471068412000105
   Calimeri F, 2011, AI COMMUN, V24, P311, DOI 10.3233/AIC-2011-0509
   Calimeri F, 2008, LECT NOTES COMPUT SC, V5366, P407, DOI 10.1007/978-3-540-89982-2_37
   Dal Palù A, 2009, FUND INFORM, V96, P297, DOI 10.3233/FI-2009-180
   Eiter T, 1997, LECT NOTES ARTIF INT, V1265, P198
   Faber W, 1999, LECT NOTES ARTIF INT, V1730, P177, DOI 10.1007/3-540-46767-X_13
   Faber W., 2012, Correct Reasoning, P247, DOI DOI 10.1007/978-3-642-30743-0
   Ferraris P, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P372
   Gebser M, 2008, LECT NOTES COMPUT SC, V5366, P190, DOI 10.1007/978-3-540-89982-2_23
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Giunchiglia E, 2006, J AUTOM REASONING, V36, P345, DOI 10.1007/s10817-006-9033-2
   Gottlob G, 1996, THEOR COMPUT SCI, V166, P221, DOI 10.1016/0304-3975(95)00207-3
   Greco S, 2013, THEOR PRACT LOG PROG, V13, P737, DOI 10.1017/S147106841300046X
   Konczak K, 2006, THEOR PRACT LOG PROG, V6, P61, DOI 10.1017/S1471068405002528
   Lefevre C, 2009, LECT NOTES COMPUT SC, V5753, P196, DOI 10.1007/978-3-642-04238-6_18
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lierler Y, 2009, LECT NOTES COMPUT SC, V5649, P489, DOI 10.1007/978-3-642-02846-5_40
   Lin FZ, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P441
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Liu LN, 2010, ARTIF INTELL, V174, P295, DOI 10.1016/j.artint.2009.11.016
   Liu LN, 2005, LECT NOTES ARTIF INT, V3662, P410, DOI 10.1007/11546207_37
   Minh Dao-Tran, 2012, Logics in Artificial Intelligence. Proceedings of the 13th European Conference (JELIA 2012), P480, DOI 10.1007/978-3-642-33353-8_38
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Ostrowski M, 2012, THEOR PRACT LOG PROG, V12, P485, DOI 10.1017/S1471068412000142
   Perri S, 2007, ANN MATH ARTIF INTEL, V51, P195, DOI 10.1007/s10472-008-9090-9
   Simons Patrik, 2002, ARTIF INTELL, V138, P181
   Syrjanen T., 1998, TECHNICAL REPORT
   Truszczynski M., 2012, Lecture Notes in Computer Science, V7265, P543
   Weinzierl A., 2013, P 2 WORKSH GROUND TR
NR 43
TC 22
Z9 22
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2017
VL 17
IS 3
BP 266
EP 310
DI 10.1017/S1471068416000569
PG 45
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA EV5HR
UT WOS:000401795100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alpuente, M
   Frechina, F
   Sapiña, J
   Ballis, D
AF Alpuente, M.
   Frechina, F.
   Sapina, J.
   Ballis, D.
TI <i>Assertion-based analysis via slicing with</i> ABETS (<i>system
   description</i>)
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
DE runtime assertion checking; dynamic program and trace slicing; program
   diagnosis and Debugging; rewriting logic; Maude
ID CONDITIONAL REWRITING LOGIC
AB We present ABETS, an assertion-based, dynamic analyzer that helps diagnose errors in Maude programs. ABETS uses slicing to automatically create reduced versions of both a run's execution trace and executed program, reduced versions in which any information that is not relevant to the bug currently being diagnosed is removed. In addition, ABETS employs runtime assertion checking to automate the identification of bugs so that whenever an assertion is violated, the system automatically infers accurate slicing criteria from the failure. We summarize the main services provided by ABETS, which also include a novel assertion-based facility for program repair that generates suitable program fixes when a state invariant is violated. Finally, we provide an experimental evaluation that shows the performance and effectiveness of the system.
C1 [Alpuente, M.; Frechina, F.; Sapina, J.] Univ Politecn Valencia, Dept Sistemas Informat & Computac, Camino Vera,S-N, E-46022 Valencia, Spain.
   [Ballis, D.] Univ Udine, Dipartimento Matemat & Informat, Via Sci,206, I-33100 Udine, Italy.
C3 Universitat Politecnica de Valencia; University of Udine
RP Alpuente, M (corresponding author), Univ Politecn Valencia, Dept Sistemas Informat & Computac, Camino Vera,S-N, E-46022 Valencia, Spain.
EM alpuente@dsic.upv.es; ffrechina@dsic.upv.es; jsapina@dsic.upv.es;
   demis.ballis@dimi.uniud.it
RI ALPUENTE, MARÍA/E-1899-2012; Sapiña, Julia/P-8581-2019
OI ALPUENTE, MARÍA/0000-0002-9268-1178; Sapiña, Julia/0000-0003-2994-6986
CR Alpuente M, 2015, J SYMB COMPUT, V69, P3, DOI 10.1016/j.jsc.2014.09.028
   Alpuente M, 2016, J LOG ALGEBR METHODS, V85, P707, DOI 10.1016/j.jlamp.2016.03.001
   Alpuente M, 2014, INFORM COMPUT, V235, P98, DOI 10.1016/j.ic.2014.01.006
   Alpuente M, 2014, SCI COMPUT PROGRAM, V80, P385, DOI 10.1016/j.scico.2013.09.018
   Antoy Sergio, 2012, Practical Aspects of Declarative Languages. Proceedings 14th International Symposium, PADL 2012, P33, DOI 10.1007/978-3-642-27694-1_4
   Chitil O., 2011, Proceedings of the 20th ACM SIGPLAN workshop on Partial evaluation and program manipulation, PEPM '11, P141
   Clavel M, 2007, All About Maude: A High-Performance Logical Framework
   Duran Francisco, 2014, Specification, Algebra, and Software. Essays Dedicated to Kokichi Futatsugi: LNCS 8373, P212, DOI 10.1007/978-3-642-54624-2_11
   Durán F, 2016, LECT NOTES ARTIF INT, V9706, P183, DOI 10.1007/978-3-319-40229-1_13
   Field J., 1994, Programming Language Implementation and Logic Programming. 6th International Symposium, PLILP '94. Proceedings, P415
   Logozzo F, 2012, ACM SIGPLAN NOTICES, V47, P133, DOI 10.1145/2398857.2384626
   Mera E, 2009, LECT NOTES COMPUT SC, V5649, P281, DOI 10.1007/978-3-642-02846-5_25
   MESEGUER J, 1992, THEOR COMPUT SCI, V96, P73, DOI 10.1016/0304-3975(92)90182-F
   Rosu G, 2015, LECT NOTES COMPUT SC, V9200, P598, DOI 10.1007/978-3-319-23165-5_28
NR 14
TC 5
Z9 5
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 515
EP 532
DI 10.1017/S1471068416000375
PN 5-6
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800002
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Dasseville, I
   Van der Hallen, M
   Janssens, G
   Denecker, M
AF Dasseville, Ingmar
   Van der Hallen, Matthias
   Janssens, Gerda
   Denecker, Marc
TI Semantics of templates in a compositional framework for building logics
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
DE compositionality; modularity; templates; macros; semantics; second order
   logic
AB There is a growing need for abstractions in logic specification languages such as FO(.) and ASP. One technique to achieve these abstractions are templates (sometimes called macros). While the semantics of templates are virtually always described through a syntactical rewriting scheme, we present an alternative view on templates as second order definitions. To extend the existing definition construct of FO(.) to second order, we introduce a powerful compositional framework for defining logics by modular integration of logic constructs specified as pairs of one syntactical and one semantical inductive rule. We use the framework to build a logic of nested second order definitions suitable to express templates. We show that under suitable restrictions, the view of templates as macros is semantically correct and that adding them does not extend the descriptive complexity of the base logic, which is in line with results of existing approaches.
C1 [Dasseville, Ingmar; Van der Hallen, Matthias; Janssens, Gerda; Denecker, Marc] Katholieke Univ Leuven, Leuven, Belgium.
C3 KU Leuven
RP Dasseville, I (corresponding author), Katholieke Univ Leuven, Leuven, Belgium.
EM ingmar.dasseville@cs.kuleuven.be; matthias.vanderhallen@cs.kuleuven.be;
   gerda.janssens@cs.kuleuven.be; marc.denecker@cs.kuleuven.be
RI Janssens, Gerda/N-2662-2013; Denecker, Marc/O-1056-2013
OI van der Hallen, Matthias/0000-0003-1893-9369; Denecker,
   Marc/0000-0002-0422-7339
CR Abramson H., 1989, METAPROGRAMMING LOGI
   [Anonymous], 1952, INTRO METAMATHEMATIC
   Baral C, 2006, LECT NOTES COMPUT SC, V4079, P376, DOI 10.1007/11799573_28
   CHEN WD, 1993, J LOGIC PROGRAM, V15, P187, DOI 10.1016/0743-1066(93)90039-J
   Dao-Tran M, 2009, LECT NOTES COMPUT SC, V5649, P145, DOI 10.1007/978-3-642-02846-5_16
   Denecker M, 2000, LECT NOTES ARTIF INT, V1861, P703
   Denecker M., 2012, LIPICS, V17, P277
   Denecker M, 2014, FOURTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P22
   Denecker M, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1342991.1342998
   Eiter T., 2011, LECT NOTES COMPUTER, V7773, P269
   Ianni Giovambattista, 2004, NMR, P233
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Musser D. R., 2009, STL REFERENCE GUIDE
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   SHAW M, 1984, IEEE SOFTWARE, V1, P10, DOI 10.1109/MS.1984.229453
   Tasharrofi S, 2011, LECT NOTES ARTIF INT, V6989, P259, DOI 10.1007/978-3-642-24364-6_18
   VANFRAASSEN BC, 1966, J PHILOS, V63, P481, DOI 10.2307/2024549
NR 17
TC 5
Z9 5
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 681
EP 695
DI 10.1017/S1471068415000319
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200019
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Swift, T
AF Swift, Terrance
TI Incremental Tabling in Support of Knowledge Representation and Reasoning
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
ID LOGIC PROGRAMS; ABSTRACT MACHINE; SYSTEM; PROLOG
AB Resolution-based Knowledge Representation and Reasoning (KRR) systems, such as Flora-2, Silk or Ergo, can scale to tens or hundreds of millions of facts, while supporting reasoning that includes Hilog, inheritance, defeasibility theories, and equality theories. These systems handle the termination and complexity issues that arise from the use of these features by a heavy use of tabled resolution. In fact, such systems table by default all rules defined by users, unless they are simple facts.
   Performing dynamic updates within such systems is nearly impossible unless the tables themselves can be made to react to changes. Incremental tabling as first implemented in XSB (Saha 2006) partially addressed this problem, but the implementation was limited in scope and not always easy to use. In this paper, we introduce transparent incremental tabling which at the semantic level supports updates in the 3-valued well-founded semantics, while guaranteeing full consistency of all tabled queries. Transparent incremental tabling also has significant performance improvements over previous implementations, including lazy recomputation, and control over the dependency structures used to determine how tables are updated.
C1 [Swift, Terrance] Coherent Knowledge Syst Inc, London, England.
   [Swift, Terrance] Univ Nova Lisboa, NOVALincs, P-1200 Lisbon, Portugal.
C3 Universidade Nova de Lisboa
RP Swift, T (corresponding author), Coherent Knowledge Syst Inc, London, England.
EM terranceswift@gmail.com
CR Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   Costa VS, 2012, THEOR PRACT LOG PROG, V12, P5, DOI 10.1017/S1471068411000512
   Grosof B., 2013, C AM ASS ART INT
   Hermenegildo M, 2000, ACM T PROGR LANG SYS, V22, P187, DOI 10.1145/349214.349216
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   International Standards Organization, 1995, JTC1SC22 ISO WORK GO
   Lloyd J. W., 1984, Journal of Logic Programming, V1, P225, DOI 10.1016/0743-1066(84)90011-6
   Naish L, 2006, THEOR PRACT LOG PROG, V6, P509, DOI 10.1017/S1471068406002742
   Ramakrishnan CR, 2007, KNOWL ENG REV, V22, P269, DOI 10.1017/S026988890700118X
   Ramakrishnan IV, 1999, J LOGIC PROGRAM, V38, P31, DOI 10.1016/S0743-1066(98)10013-4
   Reece J., 2010, Campbell Biology
   Riguzzi F, 2013, THEOR PRACT LOG PROG, V13, P279, DOI 10.1017/S1471068411000664
   Sagonas K, 1998, ACM T PROGR LANG SYS, V20, P586, DOI 10.1145/291889.291897
   Sagonas K, 2000, J LOGIC PROGRAM, V45, P1, DOI 10.1016/S0743-1066(00)00005-4
   Saha D., 2006, THESIS SUNY STONY BR
   Saha Diptikalyan, 2005, P 7 ACM SIGPLAN INT, P117, DOI DOI 10.1145/1069774.1069785
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Yang G., 2013, FLORA 2 USERS MANUAL
   Zhou NF, 2012, THEOR PRACT LOG PROG, V12, P547, DOI 10.1017/S1471068412000178
NR 19
TC 6
Z9 7
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 553
EP 567
DI 10.1017/S1471068414000209
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Riesco, A
   Rodríguez-Hortalá, J
AF Riesco, Adrian
   Rodriguez-Hortala, Juan
TI Singular and plural functions for functional logic programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE non-deterministic functions; semantics; program transformation; term
   rewriting; Maude
ID SEMANTICS
AB Modern functional logic programming (FLP) languages use non-terminating and non-confluent constructor systems (CSs) as programs in order to define non-strict and non-deterministic functions. Two semantic alternatives have been usually considered for parameter passing with this kind of functions: call-time choice and run-time choice. While the former is the standard choice of modern FLP languages, the latter lacks some basic properties - mainly compositionality - that have prevented its use in practical FLP systems. Traditionally it has been considered that call-time choice induces a singular denotational semantics, while run-time choice induces a plural semantics. We have discovered that this latter identification is wrong when pattern matching is involved, and thus in this paper we propose two novel compositional plural semantics for CSs that are different from run-time choice.
   We investigate the basic properties of our plural semantics - compositionality, polarity, and monotonicity for substitutions, and a restricted form of the bubbling property for CSs - and the relation between them and to previous proposals, concluding that these semantics form a hierarchy in the sense of set inclusion of the set of values computed by them. Besides, we have identified a class of programs characterized by a simple syntactic criterion for which the proposed plural semantics behave the same, and a program transformation that can be used to simulate one of the proposed plural semantics by term rewriting. At the practical level, we study how to use the new expressive capabilities of these semantics for improving the declarative flavor of programs. As call-time choice is the standard semantics for FLP, it still remains the best option for many common programming patterns. Therefore, we propose a language that combines call-time choice and our plural semantics, which we have implemented in the Maude system. The resulting interpreter is then employed to develop and test several significant examples showing the capabilities of the combined semantics.
C1 [Riesco, Adrian; Rodriguez-Hortala, Juan] Univ Complutense Madrid, Fac Informat, Dept Sistemas Informat & Computac, Madrid 28040, Spain.
C3 Complutense University of Madrid
RP Riesco, A (corresponding author), Univ Complutense Madrid, Fac Informat, Dept Sistemas Informat & Computac, Ciudad Univ, Madrid 28040, Spain.
EM ariesco@fdi.ucm.es; juanrh@fdi.ucm.es
RI Riesco, Adrian/I-5959-2016
OI Riesco, Adrian/0000-0002-9716-4612
FU Spanish project DESAFIOS10 [TIN2009-14599-C03-01]; Spanish project
   PROMETIDOS-CM [S2009/TIC-1465, S2009TIC-1465]; Spanish project
   FAST-STAMP [TIN2008-06622-C03-01/TIN]; Spanish project GPD-UCM
   [UCM-BSCH-GR58/08-910502]
FX Research partially supported by the Spanish projects DESAFIOS10
   (TIN2009-14599-C03-01) and PROMETIDOS-CM (S2009/TIC-1465).; Research
   partially supported by the Spanish projects FAST-STAMP
   (TIN2008-06622-C03-01/TIN), PROMETIDOS-CM (S2009TIC-1465) and GPD-UCM
   (UCM-BSCH-GR58/08-910502).
CR Albert E, 2005, J SYMB COMPUT, V40, P795, DOI 10.1016/j.jsc.2004.01.001
   [Anonymous], 2007, LECT NOTES COMPUTER
   [Anonymous], 1995, C RECORD POPL 95 22, DOI DOI 10.1145/199448.199507
   [Anonymous], 1997, A Discipline of Programming
   [Anonymous], 1963, Studies in Logic and the Foundations of Mathematics, DOI DOI 10.1016/S0049-237X(08)72018-4
   Antoy S., 2002, Functional and Logic Programming. 6th International Symposium, FLOPS 2002. Proceedings (Lecture Notes in Computer Science Vol.2441), P67
   ANTOY S., 2002, ELECT NOTES THEORETI, V64, P73
   Antoy S, 2010, COMMUN ACM, V53, P74, DOI 10.1145/1721654.1721675
   Antoy S, 2007, ELECTRON NOTES THEOR, V176, P3, DOI 10.1016/j.entcs.2006.10.026
   Baader Franz, 1998, TERM REWRITING ALL
   BOROVANSKY P, 1998, ELECT NOTES THEORETI, V15, P329
   Brassel Bernd, 2010, Functional and Constraint Logic Programming.19th International Workshop, WFLP 2010. Revised Selected Papers, P30, DOI 10.1007/978-3-642-20775-4_2
   BRASSEL B., 2009, INF P 19 INT S LOG B
   Brassel B, 2007, LECT NOTES COMPUT SC, V4807, P122
   Brassel B, 2011, LECT NOTES COMPUT SC, V6816, P1, DOI 10.1007/978-3-642-22531-4_1
   CABALLERO R., 2003, J FUNCTIONAL LOGIC P, V1, P23
   DEGROOT D, 1986, LOGIC PROGRAMMING FU
   Echahed R, 1998, LOGIC PROGRAMM, P325
   Escobar S, 2004, LECT NOTES COMPUT SC, V2998, P147
   Fischer S, 2009, ACM SIGPLAN NOTICES, V44, P11, DOI 10.1145/1631687.1596556
   Futatsugi K., 1998, AMAST SERIES COMPUTI, V6
   Gonzalez-Moreno J. C., 1996, Programming Languages and Systems - ESOP '96. 6th European Symposium on Programming. Proceedings, P156
   González-Moreno JC, 1999, J LOGIC PROGRAM, V40, P47, DOI 10.1016/S0743-1066(98)10029-8
   GonzalezMoreno JC, 1997, LOGIC PROGRAMM, P153
   Hanus M., 2005, FUNCTIONAL LOGIC PRO
   Hanus M, 2007, LECT NOTES COMPUT SC, V4670, P45, DOI 10.1007/978-3-540-74610-2_5
   Hanus Michael., 2006, CURRY INTEGRATED FUN
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Hughes J., 1990, Functional programming, P308, DOI [10.1007/978-1-4471-3166-3_21, DOI 10.1007/978-1-4471-3166-3_21]
   Hussmann H., 1993, Nondeterminism in Algebraic Specifications and Algebraic Programs
   López-Fraguas FJ, 2009, LECT NOTES COMPUT SC, V5595, P320, DOI 10.1007/978-3-642-02348-4_23
   Launchbury J., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P144, DOI 10.1145/158511.158618
   Lopez Fraguas F. J., 1999, Rewriting Techniques and Applications. 10th International Conference, RTA-99. Proceedings (Lecture Notes in Computer Science Vol.1631), P244
   LOPEZ-FRAGUAS F., 2009, CORR
   LOPEZ-FRAGUAS F., THEORY PRACTICE LOGI
   Lopez-Fraguas Francisco J., 2007, Proceedings of the 9th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP'07), P197, DOI 10.1145/1273920.1273947
   Lopez-Fraguas F. J., 2009, P 2009 ACM SIGPLAN W, P91
   López-Fraguas FJ, 2008, LECT NOTES COMPUT SC, V4989, P147
   Lucas S., 1997, Algebraic and Logic Programming. 6th International Joint Conference ALP'97 - HOA '97. Proceedings, P129, DOI 10.1007/BFb0027007
   Lucas S., 1998, J FUNCT LOGIC PROGRA, V1998, P1
   Plasmeijer Rinus, 1993, FUNCTIONAL PROGRAMMI
   PLUMP D., 1999, HDB GRAPH GRAMMARS C, V2, P3, DOI DOI 10.1142/9789812815149_0001
   Riesco A., 2011, Technical report SIC-9/11,Dpto.
   Riesco A, 2010, ELECTRON NOTES THEOR, V253, P165, DOI 10.1016/j.entcs.2010.08.039
   Riesco A, 2010, PEPM '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION, P83, DOI 10.1145/1706356.1706373
   Rodriguez-Hortal J., 2008, P FDN SOFTW TECHN TH
   Rodríguez-Hortalá J, 2008, ELECTRON NOTES THEOR, V206, P153, DOI 10.1016/j.entcs.2008.03.080
   ROY P.V., 2004, CONCEPTS TECHNIQUES
   SONDERGAARD H, 1990, ACTA INFORM, V27, P505, DOI 10.1007/BF00277387
   SONDERGAARD H, 1992, COMPUT J, V35, P514, DOI 10.1093/comjnl/35.5.514
   Sterling L., 1986, ART PROLOG
   TeReSe, 2003, CAMBRIDGE TRACTS THE, V55
   THE MERCURY TEAM, 2012, MERC LANG REF MAN VE
   WADLER P, 1989, CONFERENCE RECORD OF THE SIXTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P60, DOI 10.1145/75277.75283
   Wadler Philip, 1985, P C FUNCT PROGR LANG, P113
   WARREN D. H. D., 1982, MACH INTELL, V10, P441
NR 56
TC 0
Z9 0
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2014
VL 14
BP 65
EP 116
DI 10.1017/S147106841200004X
PN 1
PG 52
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA AJ9PG
UT WOS:000338044200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Liang, SL
   Kifer, M
AF Liang, Senlin
   Kifer, Michael
TI A practical analysis of non-termination in large logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
DE terminyzer; termination and non-termination analysis; logic programming
ID PROVING TERMINATION; PROLOG
AB A large body of work has been dedicated to termination analysis of logic programs but relatively little has been done to analyze non-termination. In our opinion, explaining non-termination is a much more important task because it can dramatically improve a user's ability to effectively debug large, complex logic programs without having to abide by punishing syntactic restrictions. Non-termination analysis examines program execution history when the program is suspected to not terminate and informs the programmer about the exact reasons for this behavior. In Liang and Kifer (2013), we studied the problem of non-termination in tabled logic engines with subgoal abstraction, such as XSB, and proposed a suite of algorithms for non-termination analysis, called Terminyzer. These algorithms analyze forest logging traces and output sequences of tabled subgoal calls that are the likely causes of non-terminating cycles. However, this feedback was hard to use in practice: the same subgoal could occur in multiple rule heads and in even more places in rule bodies, so Terminyzer left too much tedious, sometimes combinatorially large amount of work for the user to do manually.
   Here we propose a new suite of algorithms, Terminyzer(+), which closes this usability gap. Terminyzer+ can detect not only sequences of subgoals that cause non-termination, but, importantly, the exact rules where they occur and the rule sequences that get fired in a cyclic manner, thus causing non-termination. This makes Terminyzer(+) suitable as a back-end for user-friendly graphical interfaces on top of Terminyzer(+), which can greatly simplify the debugging process. Terminyzer(+) back-ends exist for the SILK system as well as for the open-source Flora-2 system. A graphical interface has been developed for SILK and is currently underway for Flora-2. We also report experimental studies, which confirm the effectiveness of Terminyzer(+) on a host of large real-world knowledge bases. All tests used in this paper are available online.(1)
   In addition, we make a step towards automatic remediation of non-terminating programs by proposing an algorithm that heuristically fixes some causes of misbehavior. Furthermore, unlike Terminyzer, Terminyzer(+) does not require the underlying logic engine to support subgoal abstraction, although it can make use of it.
C1 [Liang, Senlin; Kifer, Michael] SUNY Stony Brook, Dept Comp Sci, Stony Brook, NY USA.
C3 State University of New York (SUNY) System; State University of New York
   (SUNY) Stony Brook
RP Liang, SL (corresponding author), SUNY Stony Brook, Dept Comp Sci, Stony Brook, NY USA.
EM sliang@cs.stonybrook.edu; kifer@cs.stonybrook.edu
FU Vulcan, Inc.; NSF grant [0964196]; Direct For Computer & Info Scie &
   Enginr; Division of Computing and Communication Foundations [0964196]
   Funding Source: National Science Foundation
FX This work is part of the SILK (Semantic Inference on Large Knowledge)
   project sponsored by Vulcan, Inc. The authors were also partially
   supported by the NSF grant 0964196. We would like to thank Terry Swift
   for enabling this work by implementing subgoal abstraction and forest
   logging in XSB. We also thank Benjamin Grosof, David S. Warren, and the
   anonymous referees for a number of suggestions that helped improve this
   paper.
CR BOL RN, 1991, THEOR COMPUT SCI, V86, P35, DOI 10.1016/0304-3975(91)90004-L
   Bruynooghe M, 2007, ACM T PROGR LANG SYS, V29, DOI 10.1145/1216374.1216378
   CHEN WD, 1993, J LOGIC PROGRAM, V15, P187, DOI 10.1016/0743-1066(93)90039-J
   Costa VS, 2012, THEOR PRACT LOG PROG, V12, P5, DOI 10.1017/S1471068411000512
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   KIFER M, 1995, J ASSOC COMPUT MACH, V42, P741, DOI 10.1145/210332.210335
   Liang Senlin., 2013, PRACTICAL ASPECTS DE
   Lindenstrauss N, 2004, LECT NOTES COMPUT SC, V3049, P453
   Nguyen MT, 2008, LECT NOTES COMPUT SC, V4915, P8, DOI 10.1007/978-3-540-78769-3_2
   Nguyen MT, 2007, LECT NOTES COMPUT SC, V4407, P210, DOI 10.1007/978-3-540-71410-1_15
   Schneider-Kamp P, 2010, THEOR PRACT LOG PROG, V10, P365, DOI 10.1017/S1471068410000165
   Schreye D. D., 1994, JLP, V19, P199
   Sipser M., 1996, Introduction to the Theory of Computation, V1
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Verbaeten S., 2001, ACM T COMPUT LOG, V2, P57
   Zhou NF, 2012, THEOR PRACT LOG PROG, V12, P189, DOI 10.1017/S1471068411000445
NR 16
TC 7
Z9 7
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 705
EP 719
DI 10.1017/S1471068413000446
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400017
DA 2024-07-18
ER

PT J
AU Ricca, F
   Grasso, G
   Alviano, M
   Manna, M
   Lio, V
   Iiritano, S
   Leone, N
AF Ricca, F.
   Grasso, G.
   Alviano, M.
   Manna, M.
   Lio, V.
   Iiritano, S.
   Leone, N.
TI Team-building with answer set programming in the Gioia-Tauro seaport
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; declarative problem solving; knowledge
   management; workforce management; artificial intelligence
ID KNOWLEDGE REPRESENTATION; WORKFORCE; SYSTEM; OPTIMIZATION; ASSIGNMENT;
   SEMANTICS
AB The seaport of Gioia Tauro is the largest transshipment terminal of the Mediterranean coast. A crucial management task for the companies operating in the seaport is team-building: the problem of properly allocating the available personnel for serving the incoming ships. Teams have to be carefully arranged in order to meet several constraints, such as allocation of employees with appropriate skills, fair distribution of the working load, and turnover of the heavy/dangerous roles. This makes team-building a hard and expensive task requiring several hours of manual preparation per day.
   In this paper we present a system based on Answer Set Programming for the automatic generation of the teams of employees in the seaport of Gioia Tauro. The system is currently exploited in the Gioia Tauro seaport by ICO BLG, a company specialized in automobile logistics.
C1 [Ricca, F.; Grasso, G.; Alviano, M.; Manna, M.; Leone, N.] Univ Calabria, Dipartimento Matemat, I-87030 Arcavacata Di Rende, Italy.
   [Grasso, G.] Univ Oxford, Comp Lab, Oxford OX1 3QD, England.
   [Lio, V.; Iiritano, S.] Exeura Srl, I-87036 Arcavacata Di Rende, CS, Italy.
C3 University of Calabria; University of Oxford
RP Ricca, F (corresponding author), Univ Calabria, Dipartimento Matemat, I-87030 Arcavacata Di Rende, Italy.
EM ricca@mat.unical.it; grasso@mat.unical.it; alviano@mat.unical.it;
   manna@mat.unical.it; vincenzino.lio@exeura.it;
   salvatore.iiritano@exeura.it; leone@mat.unical.it
RI Leone, Nicola/B-1890-2012; Alviano, Mario/AAI-8135-2020; Grasso,
   Giovanni/H-1246-2012; Alviano, Mario/H-1355-2012; Manna,
   Marco/G-8966-2012
OI Alviano, Mario/0000-0002-2052-2063; Grasso,
   Giovanni/0000-0002-4350-0115; Manna, Marco/0000-0003-3323-9328; Leone,
   Nicola/0000-0002-9742-1252
FU Regione Calabria; EU under POR Calabria FESR within the PIA of DLVSYSTEM
FX This work has been partially supported by the Regione Calabria and EU
   under POR Calabria FESR 2007-2013 within the PIA project of DLVSYSTEM.
CR Aickelin U., 2000, Journal of Scheduling, V3, P139, DOI 10.1002/(SICI)1099-1425(200005/06)3:3<139::AID-JOS41>3.0.CO;2-2
   Al-Yakoob SM, 2007, ANN OPER RES, V155, P119, DOI 10.1007/s10479-007-0210-4
   Alba E, 2007, INFORM SCIENCES, V177, P2380, DOI 10.1016/j.ins.2006.12.020
   Alfares H. K., 2002, Journal of Applied Mathematics and Decision Sciences, V6, P191, DOI 10.1155/S1173912602000123
   [Anonymous], CONSTRAINT PROCESSIN
   [Anonymous], P 38 ANN HAW INT C S
   Balduccini Marcello., 2001, LPNMR, P439
   Baral C, 2000, SPRINGER INT SER ENG, V597, P257
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Baral C., 2001, LOGIC PROGRAMMING NO, P186
   Bardadym V. A., 1996, Practice and Theory of Automated Timetabling. First International Conference. Selected Papers, P22
   BECHTOLD SE, 1991, DECISION SCI, V22, P683, DOI 10.1111/j.1540-5915.1991.tb00359.x
   Billionnet A, 1999, EUR J OPER RES, V114, P105, DOI 10.1016/S0377-2217(98)00182-9
   BURKE E. K., 2003, REAL WORLD WORKFORCE
   Cerulli R., 1992, ZOR, Methods and Models of Operations Research, V36, P93, DOI 10.1007/BF01541035
   Eiter T, 2000, SPRINGER INT SER ENG, V597, P79
   Eitzen G, 2004, ANN OPER RES, V127, P359, DOI 10.1023/B:ANOR.0000019096.58882.54
   Ernst AT, 2004, EUR J OPER RES, V153, P3, DOI 10.1016/S0377-2217(03)00095-X
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   Franconi E., 2001, Proceedings of the 8th International Conference on Logic for Programming, Artificial Intelligence, and Reasoning, volume 2250 of Lecture Notes in Computer Science, V2250, P561
   FRIEDRICH G., 2008, 2 ALP ADR U
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P3, DOI 10.1007/978-3-540-72200-7_3
   Gelfond M, 2002, ARTIF INTELL, V138, P1, DOI 10.1016/S0004-3702(02)00206-0
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Grasso G, 2009, LECT NOTES COMPUT SC, V5753, P591, DOI 10.1007/978-3-642-04238-6_63
   Gresh DL, 2007, IBM J RES DEV, V51, P251, DOI 10.1147/rd.513.0251
   Hultberg TH, 1997, EUR J OPER RES, V101, P463, DOI 10.1016/S0377-2217(96)00082-3
   Lau HC, 1996, COMPUT OPER RES, V23, P93, DOI 10.1016/0305-0548(94)00094-O
   Lee J, 2009, LECT NOTES COMPUT SC, V5753, P182, DOI 10.1007/978-3-642-04238-6_17
   Leone N., 2005, P 2005 ACM SIGMOD IN, P915
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lesaint D, 2003, BT TECHNOL J, V21, P23, DOI 10.1023/A:1027315016892
   Naveh Y, 2007, IBM J RES DEV, V51, P263, DOI 10.1147/rd.513.0263
   Nogueira M., 2001, Practical Aspects of Declarative Languages. Third International Symposium, PADL 2001. Proceedings (Lecture Notes in Computer Science Vol.1990), P169
   Ricca F, 2009, J LOGIC COMPUT, V19, P643, DOI 10.1093/logcom/exn042
   ROSSI F, 2000, LECT NOTES ARTIF INT, V1865, P40
   Sun M, 1998, EUR J OPER RES, V106, P441, DOI 10.1016/S0377-2217(97)00284-1
   TIEN JM, 1982, SIAM REV, V24, P275, DOI 10.1137/1024063
   VACCA I, 2007, P SWISS TRANSP RES C
   WREN A, 1995, COMPUT OPER RES, V22, P101, DOI 10.1016/0305-0548(93)E0022-L
   Yang R., 1996, PACT 96. Proceedings of the Second International Conference on the Practical Application of Constraint Technology, P373
NR 41
TC 70
Z9 70
U1 0
U2 19
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2012
VL 12
BP 361
EP 381
DI 10.1017/S147106841100007X
PN 3
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 946PH
UT WOS:000304364400003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhang, YL
   Yap, RHC
AF Zhang, Yuanlin
   Yap, Roland H. C.
TI Solving functional constraints by variable substitution
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 24th International Conference on Logic Programming (ICLP)
CY DEC 09-13, 2008
CL Udine, ITALY
SP Assoc Log Programming
DE Constraint logic programming; Constraint satisfaction problem;
   Functional constraints; Variable substitution; Arc consistency
AB Functional constraints and bi-functional constraints are an important constraint class in Constraint Programming (CP) systems, in particular for Constraint Logic Programming (CLP) systems. CP systems with finite domain constraints usually employ Constraint Satisfaction Problem(s)-based solvers which use local consistency, for example, arc consistency. We introduce a new approach which is based instead on variable substitution. We obtain efficient algorithms for reducing systems involving functional and bi-functional constraints together with other nonfunctional constraints. It also solves globally any CSP where there exists a variable such that any other variable is reachable from it through a sequence of functional constraints. Our experiments on random problems show that variable elimination can significantly improve the efficiency of solving problems with functional constraints.
C1 [Zhang, Yuanlin] Texas Tech Univ, Dept Comp Sci, Lubbock, TX 79409 USA.
   [Yap, Roland H. C.] Natl Univ Singapore, Sch Comp, Singapore 117417, Singapore.
C3 Texas Tech University System; Texas Tech University; National University
   of Singapore
RP Zhang, YL (corresponding author), Texas Tech Univ, Dept Comp Sci, Lubbock, TX 79409 USA.
EM yzhang@cs.ttu.edu; ryap@comp.nus.edu.sg
RI Zhang, Yuanlin/I-9289-2017; Yap, Roland/P-7563-2014
OI Mondol, Anupom/0000-0001-9956-433X; Yap, Roland/0000-0002-1188-7474
CR Affane M. S., 1996, Principles and Practice of Constraint Programming - CP96. Second International Conference - CP96. Proceedings, P16
   Bessière C, 2005, ARTIF INTELL, V165, P165, DOI 10.1016/j.artint.2005.02.004
   BURG J, 1995, P 12 INT C LOG PROGR, P33
   COOPER MC, 1994, ARTIF INTELL, V65, P347, DOI 10.1016/0004-3702(94)90021-3
   David P, 1994, J ARTIF INTELL RES, V2, P447
   Dechter R, 1999, ARTIF INTELL, V113, P41, DOI 10.1016/S0004-3702(99)00059-4
   ESCALADAIMAZ G, 1988, ARTIF INTELL, V36, P249, DOI 10.1016/0004-3702(88)90005-7
   JAFFAR J, 1992, ACM T PROGR LANG SYS, V14, P339, DOI 10.1145/129393.129398
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   KIROUSIS LM, 1993, ARTIF INTELL, V64, P147, DOI 10.1016/0004-3702(93)90063-H
   Liu B, 1995, INT JOINT CONF ARTIF, P119
   PATERSON MS, 1978, J COMPUT SYST SCI, V16, P158, DOI 10.1016/0022-0000(78)90043-0
   SCHULTE C, 2005, RECENT ADV CONSTRAIN, P118
   STALLMAN RM, 1977, ARTIF INTELL, V9, P135, DOI 10.1016/0004-3702(77)90029-7
   VANHENTENRYCK P, 1992, ARTIF INTELL, V57, P291, DOI 10.1016/0004-3702(92)90020-X
   ZHANG Y, 2008, P 24 INT C LOG PROGR, P606
   ZHANG Y, 1999, P 16 AAAI, P275
   Zhang YL, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P973
NR 18
TC 1
Z9 1
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2011
VL 11
BP 297
EP 322
DI 10.1017/S1471068410000591
PN 2-3
PG 26
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 729UV
UT WOS:000287977500007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Amato, G
   Scozzari, F
AF Amato, Gianluca
   Scozzari, Francesca
TI On the interaction between sharing and linearity
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE static analysis; abstract interpretation; sharing; linearity;
   unification
ID ABSTRACT INTERPRETATION; LOGIC PROGRAMS; REDUNDANT
AB In the analysis of logic programs, abstract domains for detecting sharing and linearity information are widely used. Devising abstract unification algorithms for Such domains has proved to be rather hard. At the moment, the available algorithms are correct but not optimal; i.e., they cannot fully exploit the information conveyed by the abstract domains. In this paper, we define a new (infinite) domain ShLin(omega) which can be thought of as a general framework from which other domains can be easily derived by abstraction. ShLin(omega) makes the interaction between sharing and linearity explicit. We provide I constructive characterization of the optimal abstract unification operator on ShLin(omega), and we lift it to two well-known abstractions of ShLin(omega), namely, to the classical Sharing x Lin abstract domain and to the more precise ShLin(2) abstract domain by Andy King. In the case of single-binding substitutions, we obtain optimal abstract unification algorithms for Such domains.
C1 [Amato, Gianluca; Scozzari, Francesca] Univ G dAnnunzio, Dipartimento Sci, Pescara, Italy.
C3 G d'Annunzio University of Chieti-Pescara
RP Amato, G (corresponding author), Univ G dAnnunzio, Dipartimento Sci, Pescara, Italy.
EM amato@sci.unich.it; scozzari@sci.unich.it
RI Amato, Gianluca/AAI-9505-2020; Scozzari, Francesca/KCL-0390-2024
OI Amato, Gianluca/0000-0002-6214-5198; Scozzari,
   Francesca/0000-0002-2105-4855
CR Amato G, 2003, LECT NOTES COMPUT SC, V2664, P52, DOI 10.1007/3-540-45013-0_6
   AMATO G, 2005, TR0508 U PIS DIP INF
   AMATO G, 2002, P JOINT C DECL PROGR, P189
   Amato G, 2009, THEOR PRACT LOG PROG, V9, P617, DOI 10.1017/S1471068409990111
   [Anonymous], GRADUATE TEXTS MATH
   ARMSTRONG T, 1994, LECT NOTES COMPUTER, V864, P266
   Bagnara R, 2005, THEOR PRACT LOG PROG, V5, P1, DOI 10.1017/S1471068404001978
   Bagnara R, 2002, THEOR COMPUT SCI, V277, P3, DOI 10.1016/S0304-3975(00)00312-1
   Bueno F, 2004, LECT NOTES COMPUT SC, V2998, P117
   BUENO F, 1997, CLIP397 TU MADR UPM
   CODISH M, 1991, LOGIC PROGRAMM, P79
   Codish M, 2000, J LOGIC PROGRAM, V42, P111, DOI 10.1016/S0743-1066(99)00007-2
   Codish M, 2000, J LOGIC PROGRAM, V43, P251, DOI 10.1016/S0743-1066(99)00079-5
   Codish M, 1999, ACM T PROGR LANG SYS, V21, P948, DOI 10.1145/330249.330252
   Cortesi A, 1998, THEOR COMPUT SCI, V202, P163, DOI 10.1016/S0304-3975(97)00137-0
   Cortesi A, 1997, ACM T PROGR LANG SYS, V19, P7, DOI 10.1145/239912.239914
   Cortesi A, 1999, J LOGIC PROGRAM, V38, P371, DOI 10.1016/S0743-1066(98)10026-2
   Cousot P., 1992, Journal of Logic and Computation, V2, P511, DOI 10.1093/logcom/2.4.511
   COUSOT P, 1992, J LOGIC PROGRAM, V13, P103, DOI 10.1016/0743-1066(92)90030-7
   COUSOT P, 1992, LECT NOTES COMPUT SC, V631, P269, DOI 10.1007/3-540-55844-6_142
   Cousot P., 1979, 6 ACM S PRINCIPLES P, P269, DOI DOI 10.1145/567752.567778
   Hans W., 1992, 9227 TECHN U AACH
   HFRMENEGILDO MV, 1995, J LOGIC PROGRAM, V22, P1
   Hill PM, 2004, THEOR PRACT LOG PROG, V4, P289, DOI 10.1017/S1471068403001868
   Howe JM, 2003, THEOR PRACT LOG PROG, V3, P243, DOI 10.1017/S1471068402001497
   JACOBS D, 1992, J LOGIC PROGRAM, V13, P291, DOI 10.1016/0743-1066(92)90034-Z
   JONES ND, 1987, ABSTRACT INTERPRETAT, P123
   King A, 2000, J LOGIC PROGRAM, V46, P139, DOI 10.1016/S0743-1066(00)00009-1
   KING A, 1994, LECT NOTES COMPUTER, V788, P363
   Lagoon, 2002, P PPDP, P99
   LANGEN A, 1990, THESIS U SO CALIFORN
   Levi G, 2003, INFORM COMPUT, V182, P14, DOI 10.1016/S0890-5401(02)00048-2
   MARRIOTT K, 1994, ACM T PROGR LANG SYS, V16, P607, DOI 10.1145/177492.177650
   MUTHUKUMAR K, 1992, J LOGIC PROGRAM, V13, P315, DOI 10.1016/0743-1066(92)90035-2
   SONDERGAARD H, 1986, LECT NOTES COMPUT SC, V213, P327
   Sterling L. S., 1994, The Art of Prolog, V2nd
NR 36
TC 4
Z9 4
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2010
VL 10
BP 49
EP 112
DI 10.1017/S1471068409990160
PN 1
PG 64
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 547AW
UT WOS:000273858200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Banyasad, O
   Cox, PT
AF Banyasad, O
   Cox, PT
TI Integrating design synthesis and assembly of structured objects in a
   visual design language
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE design language; design synthesis; assembly; visual programming; logic
   programming
AB Computer Aided Design systems provide tools for building and manipulating models of solid objects. Some also provide access to programming languages so that parametrised designs can be expressed. There is a sharp distinction, therefore, between building models, a concrete graphical editing activity, and programming, an abstract, textual, algorithm-construction activity. The recently proposed Language for Structured Design (LSD) was motivated by a desire to combine the design and programming activities in one language. LSD achieves this by extending a visual logic programming language to incorporate the notions of solids and operations on solids. Here we investigate another aspect of the LSD approach, namely, that by using visual logic programming as the engine to drive the parametrised assembly of objects, we also gain the powerful symbolic problem-solving capability that is the forte of logic programming languages. This allows the designer/ programmer to work at a higher level, giving declarative specifications of a design in order to obtain the design descriptions. Hence LSD integrates problem solving, design synthesis, and prototype assembly in a single homogeneous programming/design environment. We demonstrate this specification-to-final-assembly capability using the masterkeying problem for designing systems of locks and keys.
C1 Dalhousie Univ, Halifax, NS B3H 1W5, Canada.
C3 Dalhousie University
RP Banyasad, O (corresponding author), Dalhousie Univ, Halifax, NS B3H 1W5, Canada.
EM banyasad@cs.dal.ca; pcox@cs.dal.ca
CR [Anonymous], P 2 ACM S SOL MOD AP
   Antonsson EK, 1997, RES ENG DES, V9, P191, DOI 10.1007/BF01589681
   *AUT INC, 1992, AUT RESL 12 PROGR RE
   Banyasad O, 2002, IEEE 2002 SYMPOSIA ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P93, DOI 10.1109/HCC.2002.1046357
   Banyasad O, 2002, IEEE 2002 SYMPOSIA ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P90, DOI 10.1109/HCC.2002.1046356
   BANYASAD O, 2003, P 2 COLOGNET WORKSH, P39
   BANYASAD O, 2001, CS200105 DALH U FAC
   *BENTL SYST INC, 2001, MICR V8 US GUID
   BORNING A, 1986, P CHI 86, P137
   Cox PT, 1998, J VISUAL LANG COMPUT, V9, P509, DOI 10.1006/jvlc.1998.0096
   Cox PT, 2000, J VISUAL LANG COMPUT, V11, P687, DOI 10.1006/jvlc.2000.0174
   COX PT, 1985, P IEEE COMPINT, V85, P145
   Espelage W, 2000, MATH METHOD OPER RES, V52, P325, DOI 10.1007/s001860000084
   GERO JS, 1990, AI MAG, V11, P26
   GOTTSCHLICH SN, 1994, ROBOT AUTON SYST, V13, P245, DOI 10.1016/0921-8890(94)90011-6
   Kowalski Robert, 1979, Logic for Problem Solving
   NACKMAN LR, 1986, P 1986 FALL JOINT CO, P145
   Paoluzzi A, 1995, ACM T GRAPHIC, V14, P266, DOI 10.1145/212332.212349
   POPPLESTONE RJ, 1980, ARTIF INTELL, V14, P79, DOI 10.1016/0004-3702(80)90034-X
   *PROGR INT, 1993, PROGR CPX US MAN
   RAUCHAPLIN A, 1996, P INT C COMP AID DES, P25
   ROCHELEAU DN, 1987, COMPUT AIDED DESIGN, V19, P65, DOI 10.1016/S0010-4485(87)80047-7
   Smedley TJ, 1997, J VISUAL LANG COMPUT, V8, P57, DOI 10.1006/jvlc.1996.0028
   Snyder J.M., 1992, GENERATIVE MODELING
   Waldron KJ, 1999, MECH ENG, P37
   Whitney DE, 1996, RES ENG DES, V8, P125, DOI 10.1007/BF01608348
   1988, STANDARD VHDL LANGUA
NR 27
TC 2
Z9 3
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2005
VL 5
BP 601
EP 621
DI 10.1017/S1471068404002285
PN 6
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 987BP
UT WOS:000233493700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Arenas, M
   Bertossi, L
   Chomicki, J
AF Arenas, M
   Bertossi, L
   Chomicki, J
TI Answer sets for consistent query answering in inconsistent databases
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE databases; answer set programming; integrity constraints; consistency
ID SEMANTICS
AB A relational database is inconsistent if it does not satisfy a given set of integrity constraints. Nevertheless, it is likely that most of the data in it is consistent with the constraints. In this paper we apply logic programming based on answer sets to the problem of retrieving consistent information from a possibly inconsistent database. Since consistent information persists from the original database to every of its minimal repairs, the approach is based on a specification of database repairs using disjunctive logic programs with exceptions, whose answer set semantics can be represented and computed by systems that implement stable model semantics. These programs allow us to declare persistence by default of data from the original instance to the repairs; and changes to restore consistency, by exceptions. We concentrate mainly on logic programs for binary integrity constraints, among which we find most of the integrity constraints found in practice.
C1 Pontificia Univ Catolica Chile, Dept Ciencia Computac, Santiago, Chile.
   Carleton Univ, Sch Comp Sci, Ottawa, ON K1S 5B6, Canada.
   SUNY Coll Buffalo, Dept Comp Sci & Engn, Buffalo, NY 14222 USA.
C3 Pontificia Universidad Catolica de Chile; Carleton University; State
   University of New York (SUNY) System; Buffalo State College
RP Univ Toronto, Dept Comp Sci, Toronto, ON, Canada.
EM marenas@ing.puc.cl; bertossi@scs.carleton.ca; chomicki@cse.buffalo.edu
RI Arenas, Marcelo/D-1754-2014
CR Abiteboul S, 1995, FDN DATABASES
   [Anonymous], 1988, PRINCIPLES DATABASE
   Arenas M, 2001, LECT NOTES COMPUT SC, V1973, P39
   Arenas M, 2001, ADV SOFT COMP, P27
   Arenas M., 1999, Proceedings of the Eighteenth ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems, P68, DOI 10.1145/303976.303983
   Arenas M, 2000, LECT NOTES ARTIF INT, V1861, P926
   Arieli O, 1999, J AUTOM REASONING, V22, P263, DOI 10.1023/A:1006020529663
   Baral C., 1991, IEEE Transactions on Knowledge and Data Engineering, V3, P208, DOI 10.1109/69.88001
   Barceló P, 2003, LECT NOTES COMPUT SC, V2562, P208
   BARCELO P, 2002, P 9 INT WORKSH NONM, P160
   BLAIR HA, 1989, THEOR COMPUT SCI, V68, P135, DOI 10.1016/0304-3975(89)90126-6
   BRY F, 1997, P 1 IFIP TC11 WORK C, P113
   Buccafurri F, 2000, IEEE T KNOWL DATA EN, V12, P845, DOI 10.1109/69.877512
   CALIMERI F, 2002, P 9 INT WORKSH NONM, P200
   Celle A, 2000, LECT NOTES ARTIF INT, V1861, P942
   CHOU TSC, 1994, J AUTOM REASONING, V12, P157, DOI 10.1007/BF00881886
   DALAL M, 1988, P 7 NAT C ART INT AA, P475
   Damásio CV, 1998, HANDBOOK OF DEFEASIBLE REASONING AND UNCERTAINTY MANAGEMENT SYSTEMS, VOL 2, P241
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Eiter T, 2000, SPRINGER INT SER ENG, V597, P79
   EITER T, 1998, P INT C PRINC KNOWL
   FITTING M, 1996, TEXTS MONOGRAPHS COM
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Giannotti F, 1997, ANN MATH ARTIF INTEL, V19, P97, DOI 10.1023/A:1018999404360
   GRECO G, 2001, P 17 INT C LOG PROGR, P348
   Greco S, 2000, LECT NOTES ARTIF INT, V1955, P308, DOI 10.1007/3-540-44404-1_20
   GRECO S, 1995, P 5 INT C DAT THEOR, P82
   GRECO S, 2001, P 3 INT S COOP DAT S
   KIFER M, 1992, J LOGIC PROGRAM, V12, P335, DOI 10.1016/0743-1066(92)90007-P
   Kifer M., 1992, Journal of Automated Reasoning, V9, P179, DOI 10.1007/BF00245460
   Kowalski R. A., 1991, New Generation Computing, V9, P387, DOI 10.1007/BF03037170
   Leach S. M., 1996, Journal of Intelligent Information Systems: Integrating Artificial Intelligence and Database Technologies, V6, P33, DOI 10.1007/BF00712385
   Leone N, 1997, INFORM COMPUT, V135, P69, DOI 10.1006/inco.1997.2630
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lloyd J. W., 2012, Foundations of Logic Programming
   LOZINSKII EL, 1994, J AUTOM REASONING, V12, P1, DOI 10.1007/BF00881841
   Marek VW, 1998, THEOR COMPUT SCI, V190, P241, DOI 10.1016/S0304-3975(97)00092-3
   SUBRAHMANIAN VS, 1994, ACM T DATABASE SYST, V19, P291, DOI 10.1145/176567.176571
   WINSLETT M, 1988, P AAAI 88, P89
NR 40
TC 110
Z9 126
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL-SEP
PY 2003
VL 3
BP 393
EP 424
DI 10.1017/S1471068403001832
PN 4-5
PG 32
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 708LE
UT WOS:000184567800002
DA 2024-07-18
ER

PT J
AU Molina-Bravo, JM
   Pimentel, E
AF Molina-Bravo, JM
   Pimentel, E
TI Composing programs in a rewriting logic for declarative programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE functional-logic programming; modules; compositionality; full
   abstraction; semantics
ID SPECIFICATION; INSTITUTIONS; ALGEBRA; MODEL
AB Constructor-Based Conditional Rewriting Logic is a general framework for integrating first-order functional and logic programming which gives an algebraic semantics for non-deterministic functional-logic programs. In the context of this formalism, we introduce a simple notion of program module as an open program which can be extended together with several mechanisms to combine them. These mechanisms are based on a reduced set of operations. However, the high expressiveness of these operations enable us to model typical constructs for program modularization like hiding, export/import, genericity/instantiation, and inheritance in a simple way. We also deal with the semantic aspects of the proposal by introducing an immediate consequence operator, and studying several alternative semantics for a program module, based on this operator, in the line of logic programming: the operator itself, its least fixpoint (the least model of the module), the set of its pre-fixpoints (term models of the module), and some other variations in order to find a compositional and fully abstract semantics w.r.t. the set of operations and a natural notion of observability.
C1 Univ Malaga, Dept Lenguajes & Ciencias Computac, E-29071 Malaga, Spain.
C3 Universidad de Malaga
RP Univ Malaga, Dept Lenguajes & Ciencias Computac, Campus Teatinos, E-29071 Malaga, Spain.
EM jmmb@lcc.uma.es; ernesto@lcc.uma.es
RI Pimentel, Ernesto/AAC-3810-2019
OI Pimentel, Ernesto/0000-0002-7125-8434
CR [Anonymous], 1990, HDB THEOR COMPUT SCI
   [Anonymous], 1994, Handbook of logic in computer science
   APT K, 1996, LOGIC PROGRAMMING PR
   BERGSTRA JA, 1990, J ACM, V37, P335, DOI 10.1145/77600.77621
   BROGI A, 1994, ACM T PROGR LANG SYS, V16, P1361, DOI 10.1145/183432.183528
   BROGI A, 1995, THEOR COMPUT SCI, V149, P201, DOI 10.1016/0304-3975(95)00012-L
   BROGI A, 1993, THESIS U PISA GENOVA
   BUGLIESI M, 1994, J LOGIC PROGRAM, V20, P443, DOI 10.1016/0743-1066(94)90032-9
   DURAN F, 1999, THESIS U MALAGA
   EHRIG H, 1990, FUNDAMENTALS ALGEBRA, V2
   FALASCHI M, 1993, INFORM COMPUT, V103, P86, DOI 10.1006/inco.1993.1015
   GOGUEN JA, 1992, J ACM, V39, P95, DOI 10.1145/147508.147524
   González-Moreno JC, 1999, J LOGIC PROGRAM, V40, P47, DOI 10.1016/S0743-1066(98)10029-8
   GONZALEZMORENO JC, 1994, THESIS U COMPLUTENSE
   HANUS M, 1994, J LOGIC PROGRAM, V20, P583, DOI 10.1016/0743-1066(94)90034-5
   HANUS M, 2000, CURRY INTEGRATED FUN
   Hussmann H., 1993, Nondeterminism in Algebraic Specifications and Algebraic Programs
   MANCARELLA P, 1988, P 5 INT C LOG PROGR, P1006
   MESEGUER J, 1992, THEOR COMPUT SCI, V96, P73, DOI 10.1016/0304-3975(92)90182-F
   Miller D., 1986, Proceedings of the 1986 Symposium on Logic Programming (Cat. No.86CH2340-8), P106
   MOLINABRAVO JM, 1997, P ICLP 97, P183
   MOLINABRAVO JM, 2000, THESIS U MALAGA
   MOLLER B, 1985, ACTA INFORM, V22, P537
   Orejas F, 1997, THEOR COMPUT SCI, V173, P485, DOI 10.1016/S0304-3975(96)00164-8
   Orejas F., 1999, ALGEBRAIC FDN SYSTEM, P159
   Wirsing M., 1990, HDB THEORETICAL COMP, VB, P675, DOI [10.1016/B978-0-444-88074-1.50018-4, DOI 10.1016/B978-0-444-88074-1.50018-4]
NR 26
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2003
VL 3
BP 189
EP 221
DI 10.1017/S1471068402001527
PN 2
PG 33
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 674LK
UT WOS:000182638100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bresnahan, D
   Hippen, N
   Lierler, Y
AF Bresnahan, Daniel
   Hippen, Nicholas
   Lierler, Yuliya
TI System Predictor: Grounding Size Estimator for Logic Programs under
   Answer Set Semantics
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; encoding optimizations
ID DESIGN
AB Answer set programming is a declarative logic programming paradigm geared towards solving difficult combinatorial search problems. While different logic programs can encode the same problem, their performance may vary significantly. It is not always easy to identify which version of the program performs the best. We present the system Predictor (and its algorithmic backend) for estimating the grounding size of programs, a metric that can influence a performance of a system processing a program. We evaluate the impact of Predictor when used as a guide for rewritings produced by the answer set programming rewriting tools Projector and Lpopt. The results demonstrate potential to this approach.
C1 [Bresnahan, Daniel; Hippen, Nicholas; Lierler, Yuliya] Univ Nebraska Omaha, Omaha, NE 68182 USA.
C3 University of Nebraska System; University of Nebraska Omaha
RP Bresnahan, D (corresponding author), Univ Nebraska Omaha, Omaha, NE 68182 USA.
EM daniel.b.bresnahan@gmail.com; nhippen@unomaha.edu; ylierler@unomaha.edu
OI Lierler, Yuliya/0000-0002-6146-623X
FU NSF [1707371]
FX We would like to thank Mirek Truszczynski, Daniel Houston, Liu Liu,
   Michael Dingess, Roland Kaminski, Abhishek Parakh, Victor Winter,
   Parvathi Chundi, and Jorge Fandinno for valuable discussions on the
   subject of this paper. The work was partially supported by NSF grant
   1707371.
CR Abiteboul S., 1995, Foundations of Databases, DOI DOI 10.5555/551350
   [Anonymous], 2015, Potassco User Guide
   Balduccini M, 2006, ANN MATH ARTIF INTEL, V47, P183, DOI 10.1007/s10472-006-9026-1
   Bichler M., 2015, THESIS TU WIEN
   Bichler M, 2020, FUND INFORM, V177, P275, DOI 10.3233/FI-2020-1990
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Buddenhagen Matthew, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P186, DOI 10.1007/978-3-319-23264-5_17
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Calimeri F, 2019, THEOR PRACT LOG PROG, V19, P603, DOI 10.1017/S1471068419000036
   Calimeri F, 2017, INTELL ARTIF, V11, P5, DOI 10.3233/IA-170104
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   Dodaro C, 2021, THEOR PRACT LOG PROG, V21, P835, DOI 10.1017/S1471068421000363
   Eiter T., 2006, P 10 INT C PRINC KNO, P340
   Eiter T, 2006, LECT NOTES ARTIF INT, V4160, P477, DOI 10.1007/11853886_41
   Faber W., 2012, Correct Reasoning, P247, DOI DOI 10.1007/978-3-642-30743-0
   Fages F., 1994, Methods of Logic in Computer Science, V1, P51
   Gebser Martin, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P74, DOI 10.1007/978-3-642-20832-4_6
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Hippen Nicholas, 2021, Logics in Artificial Intelligence. 17th European Conference, JELIA 2021. Proceedings. Lecture Notes in Artificial Intelligence, Subseries of Lecture Notes in Computer Science (LNAI 12678), P346, DOI 10.1007/978-3-030-75775-5_23
   Hippen N., 2019, INT S PRACT ASP DECL
   Hoos H, 2014, THEOR PRACT LOG PROG, V14, P569, DOI 10.1017/S1471068414000210
   Ioannidis Y.E., 1991, On the propagation of errors in the size of join results
   Kaminski R, 2023, THEOR PRACT LOG PROG, V23, P1138, DOI 10.1017/S1471068422000308
   Lierler Y., 2012, Correct Reasoning, P436
   Liu L, 2022, LECT NOTES ARTIF INT, V13416, P415, DOI 10.1007/978-3-031-15707-3_32
   Maratea M., 2014, ARXIV
   Mastria E, 2020, ELECTRON P THEOR COM, P261, DOI 10.4204/EPTCS.325.31
   Ricca F, 2012, THEOR PRACT LOG PROG, V12, P361, DOI 10.1017/S147106841100007X
   Silberschatz A., 1997, Database system concepts, V4
   Ullman J. D., 1988, PRINCIPLES DATABASE, V14
NR 30
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2024
VL 24
IS 1
BP 132
EP 156
AR PII S1471068423000078
DI 10.1017/S1471068423000078
EA JUN 2023
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA IA4P8
UT WOS:001014402700001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Bogaerts, B
   Ketsman, B
   Zeboudj, Y
   Aamer, H
   Taelman, R
   Verborgh, R
AF Bogaerts, Bart
   Ketsman, Bas
   Zeboudj, Younes
   Aamer, Heba
   Taelman, Ruben
   Verborgh, Ruben
TI Distributed Subweb Specifications for Traversing the Web
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Early Access
DE sparql; link traversal-based query processing; web of linked data
AB Link traversal-based query processing (ltqp), in which a sparql query is evaluated over a web of documents rather than a single dataset, is often seen as a theoretically interesting yet impractical technique. However, in a time where the hypercentralization of data has increasingly come under scrutiny, a decentralized Web of Data with a simple document-based interface is appealing, as it enables data publishers to control their data and access rights. While (ltqp allows evaluating complex queries over such webs, it suffers from performance issues (due to the high number of documents containing data) as well as information quality concerns (due to the many sources providing such documents). In existing ltqp approaches, the burden of finding sources to query is entirely in the hands of the data consumer. In this paper, we argue that to solve these issues, data publishers should also be able to suggest sources of interest and guide the data consumer toward relevant and trustworthy data. We introduce a theoretical framework that enables such guided link traversal and study its properties. We illustrate with a theoretic example that this can improve query results and reduce the number of network requests. We evaluate our proposal experimentally on a virtual linked web with specifications and indeed observe that not just the data quality but also the efficiency of querying improves.
C1 [Bogaerts, Bart; Ketsman, Bas; Zeboudj, Younes] Vrije Univ Brussel, Ixelles, Belgium.
   [Aamer, Heba] Univ Hasselt, Hasselt, Belgium.
   [Taelman, Ruben; Verborgh, Ruben] Univ Ghent, Ghent, Belgium.
C3 Vrije Universiteit Brussel; Hasselt University; Ghent University
RP Bogaerts, B (corresponding author), Vrije Univ Brussel, Ixelles, Belgium.
EM Bart.Bogaerts@vub.be; bas.ketsman@vub.be; younes.zeboudj@vub.be;
   heba.mohamed@uhasselt.be; ruben.taelman@ugent.be;
   ruben.verborgh@ugent.be
RI Verborgh, Ruben/P-6571-2014; Mohamed, Heba/KIC-8705-2024
OI Bogaerts, Bart/0000-0003-3460-4251; Aamer, Heba/0000-0003-0460-8534;
   Ketsman, Bas/0000-0002-4032-0709; ZEBOUDJ, YOUNES/0000-0001-5882-9733
CR Abiteboul Serge, 2011, P 30 ACM SIGMOD SIGA, P293, DOI DOI 10.1145/1989284.1989320
   Batsakis S, 2009, DATA KNOWL ENG, V68, P1001, DOI 10.1016/j.datak.2009.04.002
   Bogaerts B., 2021, RUL REAS 5 INT JOINT
   Bosquet M., 2022, Access Control Policy (ACP
   Buil-Aranda C, 2013, LECT NOTES COMPUT SC, V8219, P277, DOI 10.1007/978-3-642-41338-4_18
   Capadisli S., 2020, SOLID PROTOCOL
   Capadisli S., 2022, SOLID WEBID PROFILE
   Capadisli S., 2022, Web Access Control
   Chakrabarti S, 1999, COMPUT NETW, V31, P1623, DOI 10.1016/S1389-1286(99)00052-3
   Coburn A., 2022, Solid-OIDC
   Cyganiak R., 2014, RDF 1 1 CONCEPTS ABS
   Erling O, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P619, DOI 10.1145/2723372.2742786
   Hartig Olaf, 2012, The Semantic Web: Research and Applications. Proceedings 9th Extended Semantic Web Conference (ESWC 2012), P8, DOI 10.1007/978-3-642-30284-8_8
   Hartig O., 2013, OVERVIEW EXECUTION S
   Hartig  O., 2012, P 23 ACM C HYP SOC M
   Hartig O., 2013, P ACM SIGMOD INT C M
   Hartig O., 2016, LDQL QUERY LANGUAGE
   Hartig O., 2015, P 9 ALBERTO MENDELZO, V1378
   Hartig O, 2016, LECT NOTES COMPUT SC, V9981, P305, DOI 10.1007/978-3-319-46523-4_19
   Hartig O, 2009, LECT NOTES COMPUT SC, V5823, P293, DOI 10.1007/978-3-642-04930-9_19
   Konopnicki D, 1998, ACM T DATABASE SYST, V23, P369, DOI 10.1145/296854.277639
   Kuhn T., 1996, 4 INT C PAR DISTR IN, P80
   Prudhommeaux E., 2021, Shape Trees Specification
   Speicher S., 2015, Linked Data Platform 1.0
   Taelman R, 2022, P 6 INT WORKSH STOR
   Taelman R, 2018, LECT NOTES COMPUT SC, V11137, P239, DOI 10.1007/978-3-030-00668-6_15
   Turdean T., 2022, Type Indexes
   Verborgh R., 2016, TRIPLE PATTERN FRAGM
   Verborgh Ruben, 2020, Linking the World's Information: Tim Berners-Lee's Invention of the World Wide Web
   Wylot M, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P1275, DOI 10.1145/2736277.2741143
   Zignani M., 2018, 12 INT AAAI C WEB SO
NR 31
TC 0
Z9 0
U1 0
U2 6
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD 2023 APR 25
PY 2023
AR PII S1471068423000054
DI 10.1017/S1471068423000054
EA APR 2023
PG 27
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA E2SE6
UT WOS:000974088500001
OA Green Accepted, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Cardellini, M
   De Nardi, P
   Dodaro, C
   Galata, G
   Giardini, A
   Maratea, M
   Porro, I
AF Cardellini, Matteo
   De Nardi, Paolo
   Dodaro, Carmine
   Galata, Giuseppe
   Giardini, Anna
   Maratea, Marco
   Porro, Ivan
TI Solving Rehabilitation Scheduling Problems via a Two-Phase ASP Approach
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Early Access
DE answer set programming; rehabilitation scheduling; healthcare
AB A core part of the rehabilitation scheduling process consists of planning rehabilitation physiotherapy sessions for patients, by assigning proper operators to them in a certain time slot of a given day, taking into account several legal, medical, and ethical requirements and optimizations, for example, patient's preferences and operator's work balancing. Being able to efficiently solve such problem is of upmost importance, in particular after the COVID-19 pandemic that significantly increased rehabilitation's needs. In this paper, we present a two-phase solution to rehabilitation scheduling based on Answer Set Programming, which proved to be an effective tool for solving practical scheduling problems. We first present a general encoding and then add domain-specific optimizations. Results of experiments performed on both synthetic and real benchmarks, the latter provided by ICS Maugeri, show the effectiveness of our solution as well as the impact of our domain-specific optimizations.
C1 [Cardellini, Matteo] Polytecn Torino, Turin, Italy.
   [Cardellini, Matteo] Univ Genoa, Genoa, Italy.
   [De Nardi, Paolo; Giardini, Anna] ICS Maugeri, Pavia, Italy.
   [Dodaro, Carmine; Maratea, Marco] Univ Calabria, DeMaCS, Arcavacata Di Rende, Italy.
   [Galata, Giuseppe; Porro, Ivan] SurgiQ Srl, Cagliari, Italy.
   [Maratea, Marco] Univ Genoa, DIBRIS, Genoa, Italy.
C3 University of Genoa; Istituti Clinici Scientifici Maugeri IRCCS;
   University of Calabria; University of Genoa
RP Cardellini, M (corresponding author), Polytecn Torino, Turin, Italy.; Cardellini, M (corresponding author), Univ Genoa, Genoa, Italy.
EM matteo.cardellini@polito.it; paolo.denardi@icsmaugeri.it;
   dodaro@mat.unical.it; giuseppe.galata@surgiq.com;
   anna.giardini@icsmaugeri.it; marco@dibris.unige.it;
   ivan.porro@surgiq.com
RI Maratea, Marco/AAR-5779-2020
OI MARATEA, MARCO/0000-0002-9034-2527; Cardellini,
   Matteo/0000-0003-3788-9475
CR ALVIANO M., 2020, JOINT P 8 IPS WORKSH, V2745
   Alviano M, 2019, LECT NOTES ARTIF INT, V11481, P241, DOI 10.1007/978-3-030-20528-7_18
   Alviano M, 2020, FUND INFORM, V176, P271, DOI 10.3233/FI-2020-1974
   Alviano M, 2016, THEOR PRACT LOG PROG, V16, P533, DOI 10.1017/S147106841600020X
   Andres B., 2012, TECHNICAL COMMUNICAT, V17, P211
   Ansotegui C., 2019, PYPBLIB
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Cardellini M, 2021, LECT NOTES COMPUT SC, V12851, P111, DOI 10.1007/978-3-030-91167-6_8
   Cieza A, 2020, LANCET, V396, P2006, DOI 10.1016/S0140-6736(20)32340-0
   Dodaro C, 2021, THEOR PRACT LOG PROG, V21, P835, DOI 10.1017/S1471068421000363
   Dodaro C, 2017, LECT NOTES ARTIF INT, V10377, P301, DOI 10.1007/978-3-319-61660-5_27
   Erdem E, 2016, AI MAG, V37, P53, DOI 10.1609/aimag.v37i3.2678
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P368, DOI 10.1007/978-3-319-23264-5_31
   Gebser M., 2016, OASIcs, V52, DOI 10.4230
   Gebser M, 2018, THEOR PRACT LOG PROG, V18, P520, DOI 10.1017/S1471068418000182
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   GUROBI OPTIMIZATION, 2021, LLC
   Huang YC, 2012, J IND PROD ENG, V29, P348, DOI [10.1080/101706692012.703249, 10.1080/10170669.2012.703249]
   Ignatiev A., 2019, Journal on Satisfiability, Boolean Modeling and Computation, V11, P53, DOI DOI 10.3233/SAT190116
   Martins R, 2014, LECT NOTES COMPUT SC, V8561, P438, DOI 10.1007/978-3-319-09284-3_33
   Morgado A, 2014, LECT NOTES COMPUT SC, V8656, P564, DOI 10.1007/978-3-319-10428-7_41
   Huynh NT, 2018, COMPUT IND ENG, V125, P221, DOI 10.1016/j.cie.2018.08.030
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Ricca F, 2012, THEOR PRACT LOG PROG, V12, P361, DOI 10.1017/S147106841100007X
   ROUSSEL O., 2012, MACH LEARN, V1, P81
   Saikko P, 2016, LECT NOTES COMPUT SC, V9710, P539, DOI 10.1007/978-3-319-40970-2_34
   Saverino A, 2021, FRONT NEUROL, V12, DOI 10.3389/fneur.2021.643251
   Schimmelpfeng K, 2012, OR SPECTRUM, V34, P461, DOI 10.1007/s00291-011-0273-0
   Xin Li, 2021, Journal of Physics: Conference Series, V1848, DOI 10.1088/1742-6596/1848/1/012009
NR 32
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD 2023 APR 17
PY 2023
AR PII S1471068423000030
DI 10.1017/S1471068423000030
EA APR 2023
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA E2AF4
UT WOS:000973619300001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Kaminski, R
   Schaub, T
AF Kaminski, Roland
   Schaub, Torsten
TI On the Foundations of Grounding in Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; grounding theory; grounding algorithms
ID LOGIC PROGRAMS; SEMANTICS; DLV; FIXPOINT; LANGUAGE; SYSTEM; GRINGO
AB We provide a comprehensive elaboration of the theoretical foundations of variable instantiation, or grounding, in Answer Set Programming (ASP). Building on the semantics of ASP's modeling language, we introduce a formal characterization of grounding algorithms in terms of (fixed point) operators. A major role is played by dedicated well-founded operators whose associated models provide semantic guidance for delineating the result of grounding along with on-the-fly simplifications. We address an expressive class of logic programs that incorporates recursive aggregates and thus amounts to the scope of existing ASP modeling languages. This is accompanied with a plain algorithmic framework detailing the grounding of recursive aggregates. The given algorithms correspond essentially to the ones used in the ASP grounder gringo.
C1 [Kaminski, Roland; Schaub, Torsten] Univ Potsdam, Potsdam, Germany.
C3 University of Potsdam
RP Kaminski, R (corresponding author), Univ Potsdam, Potsdam, Germany.
EM kaminski@cs.uni-potsdam.de; torsten@cs.uni-potsdam.de
RI Kaminski, Roland/HMD-8407-2023; Schaub, Torsten/O-5873-2019
OI Kaminski, Roland/0000-0002-1361-6045; Schaub,
   Torsten/0000-0002-7456-041X
CR Abiteboul S., 1995, Foundations of Databases, DOI DOI 10.5555/551350
   Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   Alviano M, 2015, THEOR PRACT LOG PROG, V15, P559, DOI 10.1017/S1471068415000228
   [Anonymous], 2015, Potassco User Guide
   [Anonymous], 2009, Database Systems: The Complete Book
   Belnap N., 1977, MODERN USES MULTIPLE, P8, DOI [10.1007/978-94-010-1161-7_2, DOI 10.1007/978-94-010-1161-7_2]
   Bomanson J, 2014, LECT NOTES ARTIF INT, V8761, P166, DOI 10.1007/978-3-319-11558-0_12
   Brass S, 2001, THEOR PRACT LOG PROG, V1, P497, DOI 10.1017/S147106840100103X
   Brass S, 1999, J LOGIC PROGRAM, V40, P1, DOI 10.1016/S0743-1066(98)10030-4
   Bruynooghe M., 2016, MAGAZINE 37, V3, P69
   Calimeri F, 2017, INTELL ARTIF, V11, P5, DOI 10.3233/IA-170104
   Calimeri F, 2008, LECT NOTES COMPUT SC, V5366, P407, DOI 10.1007/978-3-540-89982-2_37
   CONNOLLY D, 1991, J OPER RES SOC, V42, P513
   Dal Palù A, 2009, FUND INFORM, V96, P297, DOI 10.3233/FI-2009-180
   De Cat B., 2014, ABS14016312 CORR
   Dell'Armi T., 2003, Proceedings of the 18th International Joint Conference on Artificial Intelligence, P847
   Denecker M, 2000, SPRINGER INT SER ENG, V597, P127
   Eiter T., 2001, Answer Set Programming: Towards Efficient and Scalable Knowledge Representation and Reasoning. Papers from the 2001 AAAI Symposium, P45
   Eiter T, 1997, LECT NOTES ARTIF INT, V1265, P363
   Faber W., 2012, Correct Reasoning, P247, DOI DOI 10.1007/978-3-642-30743-0
   Ferraris P, 2005, THEOR PRACT LOG PROG, V5, P45, DOI 10.1017/S1471068403001923
   Ferraris P, 2011, ACM T COMPUT LOG, V12, DOI 10.1145/1970398.1970401
   Ferraris P, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P797
   Fitting M, 2002, THEOR COMPUT SCI, V278, P25, DOI 10.1016/S0304-3975(00)00330-3
   Gebser M., 2015, P 3 WORKSH GROUND TR
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Gebser M, 2016, AI MAG, V37, P33, DOI 10.1609/aimag.v37i3.2673
   Gebser M, 2015, THEOR PRACT LOG PROG, V15, P449, DOI 10.1017/S1471068415000150
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gebser M, 2009, LECT NOTES COMPUT SC, V5753, P502, DOI 10.1007/978-3-642-04238-6_49
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P250, DOI 10.1007/978-3-642-02846-5_23
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Giunchiglia E, 2006, J AUTOM REASONING, V36, P345, DOI 10.1007/s10817-006-9033-2
   Harrison A, 2014, FOURTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P32
   Harrison A, 2017, ARTIF INTELL, V246, P22, DOI 10.1016/j.artint.2017.02.002
   Harrison A, 2016, THEOR PRACT LOG PROG, V16, P771, DOI 10.1017/S1471068416000314
   Janhunen T., 2001, LECT NOTES COMPUTER, V2173, P93, DOI DOI 10.1007/3-540-45402-0_7
   Janhunen T, 2007, LECT NOTES COMPUT SC, V4483, P175, DOI 10.1007/978-3-540-72200-7_16
   Kaufmann B, 2016, AI MAG, V37, P25, DOI 10.1609/aimag.v37i3.2672
   KEMP DB, 1991, LOGIC PROGRAMM, P337
   Lefévre C, 2017, THEOR PRACT LOG PROG, V17, P266, DOI 10.1017/S1471068416000569
   Leone N., 2001, LOGIC PROGRAMMING NO, P280, DOI DOI 10.1007/3-540-45402-021
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lierler Y, 2009, LECT NOTES COMPUT SC, V5649, P489, DOI 10.1007/978-3-642-02846-5_40
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Lifschitz V, 2008, LECT NOTES COMPUT SC, V5366, P37, DOI 10.1007/978-3-540-89982-2_8
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Lukasiewicz J, 1941, ENTRETIENS ZURICH SU, V12, P82
   MUMICK IS, 1990, VERY LARGE DATA BASES, P264
   Niemelä I, 2008, LECT NOTES COMPUT SC, V5366, P88, DOI 10.1007/978-3-540-89982-2_15
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Perri S, 2007, ANN MATH ARTIF INTEL, V51, P195, DOI 10.1007/s10472-008-9090-9
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Syrjanen T., 2001, LOGIC PROGRAMMING NO, P267, DOI DOI 10.1007/3-540-45402-0_20
   Syrjanen T, 2001, LPARSE 1 0 USERS MAN
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   Truszczynski M., 2018, Declarative Logic Programming: Theory, Systems, and Applications, P121
   Truszczynski M., 2012, Lecture Notes in Computer Science, V7265, P543
   Ullman J., 1988, PRINCIPLES DATABASE, V1
   Vanbesien L., 2021, ABS210414789 CORR
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   VANGELDER A, 1993, J COMPUT SYST SCI, V47, P185, DOI 10.1016/0022-0000(93)90024-Q
   Weinzierl ANTONIUS, 2020, THEOR PRACT LOG PROG, V20, P609, DOI 10.1017/S1471068420000332
   Wittocx J, 2010, J ARTIF INTELL RES, V38, P223, DOI 10.1613/jair.2980
NR 67
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2023
VL 23
IS 6
BP 1138
EP 1197
AR PII S1471068422000308
DI 10.1017/S1471068422000308
EA JUL 2022
PG 60
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7N0
UT WOS:000829645200001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Hanus, M
AF Hanus, Michael
TI From Logic to Functional Logic Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE functional logic programming; transformation; resolution; narrowing
   strategies
ID LAZY EVALUATION
AB Logic programming is a flexible programming paradigm due to the use of predicates without a fixed data flow. To extend logic languages with the compact notation of functional programming, there are various proposals to map evaluable functions into predicates in order to stay in the logic programming framework. Since amalgamated functional logic languages offer flexible as well as efficient evaluation strategies, we propose an opposite approach in this paper. By mapping logic programs into functional logic programs with a transformation based on inferring functional dependencies, we develop a fully automatic transformation which keeps the flexibility of logic programming but can improve computations by reducing infinite search spaces to finite ones.
C1 [Hanus, Michael] CAU Kiel, Inst Informat, Kiel, Germany.
C3 University of Kiel
RP Hanus, M (corresponding author), CAU Kiel, Inst Informat, Kiel, Germany.
EM mh@informatik.uni-kiel.de
OI Hanus, Michael/0000-0002-4953-8202
CR [Anonymous], 2003, Haskell 98 language and libraries: the revised report
   Antoy S., 1997, Algebraic and Logic Programming. 6th International Joint Conference ALP'97 - HOA '97. Proceedings, P16, DOI 10.1007/BFb0027000
   Antoy S, 2000, LECT NOTES ARTIF INT, V1794, P171
   ANTOY S, 1992, LECT NOTES COMPUT SC, V632, P143, DOI 10.1007/BFb0013825
   Antoy S, 2000, J ACM, V47, P776, DOI 10.1145/347476.347484
   Antoy S, 2017, THEOR PRACT LOG PROG, V17, P121, DOI 10.1017/S1471068416000168
   Antoy S, 2010, COMMUN ACM, V53, P74, DOI 10.1145/1721654.1721675
   Antoy S, 2009, PPDP'09: PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING, P73, DOI 10.1145/1599410.1599420
   At-Kaci H., 1991, Warren's Abstract Machine: A Tutorial Reconstruction
   Baader Franz, 1998, TERM REWRITING ALL
   Barbosa J., 2021, LNCS, V13290, P16
   Barbuti R., 1984, 1984 International Symposium on Logic Programming (cat. no. 84CH2007-3), P160
   Brassel B, 2011, LECT NOTES COMPUT SC, V6816, P1, DOI 10.1007/978-3-642-22531-4_1
   Brassel B, 2008, ELECTRON NOTES THEOR, V216, P111, DOI 10.1016/j.entcs.2008.06.037
   BRUYNOOGHE M, 1989, J LOGIC PROGRAM, V6, P135, DOI 10.1016/0743-1066(89)90033-2
   Bry F, 2002, LECT NOTES COMPUT SC, V2401, P255, DOI 10.1007/3-540-45619-8_18
   Casas A, 2006, LECT NOTES COMPUT SC, V3945, P146
   González-Moreno JC, 1999, J LOGIC PROGRAM, V40, P47, DOI 10.1016/S0743-1066(98)10029-8
   Hanus Michael, 2013, Programming Logics. Essays in Memory of Harald Ganzinger: LNCS 7797, P123, DOI 10.1007/978-3-642-37651-1_6
   HANUS M, 1995, J LOGIC PROGRAM, V24, P219, DOI 10.1016/0743-1066(94)00105-F
   Hanus M., 2016, Curry: An Integrated Functional Logic Language (Vers. 0.9.0)
   Hanus M., 2011, 27 INT C LOG PROGR L, V11, P198
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Huet G.P., 1991, Computational Logic-Essays in Honor of Alan Robinson, P395
   Hughes John., 1990, Research Topics in Functional Programming, P17
   JIMENEZMARTIN JA, 1992, SPRING WORKSH COMP S, P253
   Launchbury J., 1993, Conference Record of the Twentieth Annual ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P144, DOI 10.1145/158511.158618
   Lloyd J. W., 1987, Foundations of logic programming
   Loogen R., 1993, Programming Language Implementation and Logic Programming. 5th International Symposium, PLILP '93 Proceedings, P184
   Lopez Fraguas F. J., 1999, Rewriting Techniques and Applications. 10th International Conference, RTA-99. Proceedings (Lecture Notes in Computer Science Vol.1631), P244
   NAISH L, 1991, LECT NOTES COMPUT SC, V528, P15
   NARAIN S, 1986, J LOGIC PROGRAM, V3, P259, DOI 10.1016/0743-1066(86)90016-6
   Partain W., 1993, Functional Programming, Glasgow 1992. Proceedings of the 1992 Glasgow Workshop on Functional Programming, P195
   Reddy U. S., 1985, 1985 Symposium on Logic Programming (Cat. No.85CH2205-3), P138
   Schrijvers T, 2008, LECT NOTES COMPUT SC, V5366, P693, DOI 10.1007/978-3-540-89982-2_59
   SLAGLE JR, 1974, J ACM, V21, P622, DOI 10.1145/321850.321859
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   Sterling L. S., 1994, The Art of Prolog, V2nd
   TeReSe, 2003, CAMBRIDGE TRACTS THE, V55
   VANROY P, 1990, LOGIC PROGRAMM, P501
   WADLER P, 1989, CONFERENCE RECORD OF THE SIXTEENTH ANNUAL ACM SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P60, DOI 10.1145/75277.75283
   Wadler P, 1997, ACM COMPUT SURV, V29, P240, DOI 10.1145/262009.262011
   Warren D. H. D., 1983, 309 SRI INT
NR 43
TC 0
Z9 0
U1 3
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2022
VL 22
IS 4
SI SI
BP 538
EP 554
AR PII S1471068422000187
DI 10.1017/S1471068422000187
EA JUL 2022
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 3T5UX
UT WOS:000820500200001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Saribatur, ZG
   Eiter, T
AF Saribatur, Zeynep G.
   Eiter, Thomas
TI Omission-Based Abstraction for Answer Set Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE knowledge representation and nonmonotonic reasoning; answer set
   programming; abstraction; inconsistency explanation
ID LOGIC PROGRAMS; NESTED EXPRESSIONS; SEMANTICS; EQUIVALENCE; ASP; MODELS
AB A Abstraction is a well-known approach to simplify a complex problem by over-approximating it with a deliberate loss of information. It was not considered so far in Answer Set Programming (ASP), a convenient tool for problem solving. We introduce a method to automatically abstract ASP programs that preserves their structure by reducing the vocabulary while ensuring an over-approximation (i.e., each original answer set maps to some abstract answer set). This allows for generating partial answer set candidates that can help with approximation of reasoning. Computing the abstract answer sets is intuitively easier due to a smaller search space, at the cost of encountering spurious answer sets. Faithful (non-spurious) abstractions may be used to represent projected answer sets and to guide solvers in answer set construction. For dealing with spurious answer sets, we employ an ASP debugging approach to help with abstraction refinement, which determines atoms as badly omitted and adds them back in the abstraction. As a show case, we apply abstraction to explain unsatisfiability of ASP programs in terms of blocker sets, which are the sets of atoms such that abstraction to them preserves unsatisfiability. Their usefulness is demonstrated by experimental results.
C1 [Saribatur, Zeynep G.; Eiter, Thomas] TU Wien, Inst Log & Computat, Vienna, Austria.
C3 Technische Universitat Wien
RP Saribatur, ZG (corresponding author), TU Wien, Inst Log & Computat, Vienna, Austria.
EM zeynep@kr.tuwien.ac.at; eiter@kr.tuwien.ac.at
RI Eiter, Thomas/ABE-9263-2021
CR Alviano M, 2018, THEOR PRACT LOG PROG, V18, P319, DOI 10.1017/S1471068418000145
   Alviano M, 2016, THEOR PRACT LOG PROG, V16, P533, DOI 10.1017/S147106841600020X
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P42, DOI 10.1007/978-3-642-40564-8_5
   Andres B., 2012, TECHNICAL COMMUNICAT, V17, P211
   [Anonymous], 2016, CEUR WORKSHOP P
   [Anonymous], 2001, P 6 EUR C PLANN ECP
   Arenas M., 1999, Proceedings of the Eighteenth ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems, P68, DOI 10.1145/303976.303983
   Balduccini M., 2003, P INT S LOG FORM COM, V102, P9
   Banihashemi B, 2017, AAAI CONF ARTIF INTE, P1048
   Brain M, 2007, LECT NOTES COMPUT SC, V4483, P31, DOI 10.1007/978-3-540-72200-7_5
   Brass S, 1997, J LOGIC PROGRAM, V32, P207, DOI 10.1016/S0743-1066(96)00115-X
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Buss S.R., 1993, Arithmetic, Proof Theory and Computational Complexity, P116
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Cerutti F, 2016, FRONT ARTIF INTEL AP, V287, P467, DOI 10.3233/978-1-61499-686-6-467
   Clark K. L., 1978, Logic and data bases, P293
   Clarke E, 2003, J ACM, V50, P752, DOI 10.1145/876638.876643
   CLARKE EM, 1994, ACM T PROGR LANG SYS, V16, P1512, DOI 10.1145/186025.186051
   COUSOT P, 1992, J LOGIC PROGRAM, V13, P103, DOI 10.1016/0743-1066(92)90030-7
   Culberson JC, 1998, COMPUT INTELL, V14, P318, DOI 10.1111/0824-7935.00065
   Delgrande JP, 2017, J ARTIF INTELL RES, V60, P1165, DOI 10.1613/jair.5530
   Delgrande JP, 2015, AAAI CONF ARTIF INTE, P1482
   Dodaro Carmine, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P279, DOI 10.1007/978-3-319-23264-5_24
   Eiter T, 2004, LECT NOTES ARTIF INT, V2923, P87
   Eiter T, 2003, LECT NOTES COMPUT SC, V2916, P224, DOI 10.1007/978-3-540-24599-5_16
   Eiter T, 2008, ARTIF INTELL, V172, P1644, DOI 10.1016/j.artint.2008.05.002
   Eiter T, 2019, KUNSTL INTELL, V33, P9, DOI 10.1007/s13218-018-0564-6
   Eiter Thomas, 1998, P 6 INT C PRINC KNOW, P406
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P531, DOI 10.1007/978-3-319-23264-5_44
   Gebser M, 2008, LECT NOTES COMPUT SC, V5366, P190, DOI 10.1007/978-3-540-89982-2_23
   Gebser M, 2008, P 23 NAT C ART INT, V1
   Gebser M, 2017, LECT NOTES ARTIF INT, V10377, P3, DOI 10.1007/978-3-319-61660-5_1
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Geisser F, 2016, P I C AUTOMAT PLAN S, P140
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Giunchiglia E, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P61
   GIUNCHIGLIA F, 1992, ARTIF INTELL, V57, P323, DOI 10.1016/0004-3702(92)90021-O
   Gonçalves R, 2017, THEOR PRACT LOG PROG, V17, P837, DOI 10.1017/S1471068417000382
   Gonçalves R, 2016, FIFTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P135
   Helmert M, 2014, J ACM, V61, DOI 10.1145/2559951
   Janhunen T, 2006, ACM T COMPUT LOG, V7, P1, DOI 10.1145/1119439.1119440
   Janota M, 2016, ARTIF INTELL, V233, P73, DOI 10.1016/j.artint.2016.01.002
   KNOBLOCK CA, 1994, ARTIF INTELL, V68, P243, DOI 10.1016/0004-3702(94)90069-8
   Kouvaros P, 2015, AAAI CONF ARTIF INTE, P2081
   Lee J, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P503
   Leite J, 2017, LECT NOTES ARTIF INT, V10377, P10, DOI 10.1007/978-3-319-61660-5_2
   Leone N, 1997, INFORM COMPUT, V135, P69, DOI 10.1006/inco.1997.2630
   Liffiton MH, 2008, J AUTOM REASONING, V40, P1, DOI 10.1007/s10817-007-9084-z
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Lynce Ines., 2004, INT S THEORY APPL SA, P305
   MAHER MJ, 1986, LECT NOTES COMPUT SC, V225, P410
   Oetsch J, 2010, THEOR PRACT LOG PROG, V10, P513, DOI 10.1017/S1471068410000256
   Osorio M, 2002, LECT NOTES COMPUT SC, V2372, P57, DOI 10.1007/3-540-45607-4_4
   Pearce D, 2004, LECT NOTES COMPUT SC, V3132, P210, DOI 10.1007/978-3-540-27775-0_15
   Pontelli E, 2009, THEOR PRACT LOG PROG, V9, P1, DOI 10.1017/S1471068408003633
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   SACERDOTI ED, 1974, ARTIF INTELL, V5, P115, DOI 10.1016/0004-3702(74)90026-5
   Sagiv Y., 1987, P 6 ACM SIGACT SIGMO, DOI [10.1145/28659.28696, DOI 10.1145/28659.28696]
   Saribatur ZG, 2019, LECT NOTES ARTIF INT, V11468, P576, DOI 10.1007/978-3-030-19570-0_38
   Syrjanen T., 2006, P 11 INT WORKSH NONM, V6, P77
   Turner H, 2003, THEOR PRACT LOG PROG, V3, P609, DOI 10.1017/S1471068403001819
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Watts DJ, 1998, NATURE, V393, P440, DOI 10.1038/30918
NR 66
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2021
VL 21
IS 2
BP 145
EP 195
AR PII S1471068420000095
DI 10.1017/S1471068420000095
PG 51
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA TH4CP
UT WOS:000672039800002
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Fandinno, J
   Schulz, C
AF Fandinno, Jorge
   Schulz, Claudia
TI Answering the "why" in answer set programming-A survey of explanation
   approaches
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set; explanation; justification; debugging
ID DERIVING CONCLUSIONS; LOGIC PROGRAMS; JUSTIFICATIONS; SEMANTICS;
   KNOWLEDGE
AB Artificial intelligence (AI) approaches to problem-solving and decision-making are becoming more and more complex, leading to a decrease in the understandability of solutions. The European Union's new General Data Protection Regulation tries to tackle this problem by stipulating a "right to explanation" for decisions made by AI systems. One of the AI paradigms that may be affected by this new regulation is answer set programming (ASP). Thanks to the emergence of efficient solvers, ASP has recently been used for problem-solving in a variety of domains, including medicine, cryptography, and biology. To ensure the successful application of ASP as a problem-solving paradigm in the future, explanations of ASP solutions are crucial. In this survey, we give an overview of approaches that provide an answer to the question of why an answer set is a solution to a given problem, notably off-line justifications, causal graphs, argumentative explanations, and why-not provenance, and highlight their similarities and differences. Moreover, we review methods explaining why a set of literals is not an answer set or why no solution exists at all.
C1 [Fandinno, Jorge] Univ Toulouse, CNRS, IRIT, Toulouse, France.
   [Schulz, Claudia] Tech Univ Darmstadt, Ubiquitous Knowledge Proc UKP Lab, Darmstadt, Germany.
C3 Universite Federale Toulouse Midi-Pyrenees (ComUE); Universite de
   Toulouse; Institut National Polytechnique de Toulouse; Centre National
   de la Recherche Scientifique (CNRS); Universite Toulouse III - Paul
   Sabatier; Technical University of Darmstadt
RP Fandinno, J (corresponding author), Univ Toulouse, CNRS, IRIT, Toulouse, France.
EM jorge.fandinno@irit.fr; schulz@ukp.informatik.tu-darmstadt.de
RI Fandiño, Jorge/F-8705-2016; Fandinno, Jorge/JJC-6227-2023
OI Fandiño, Jorge/0000-0002-3917-8717; 
FU Centre International de Mathematiques et d'Informatique de Toulouse
   [ANR-11-LABEX-0040-CIMI]
FX This study was funded by Centre International de Mathematiques et
   d'Informatique de Toulouse ANR-11-LABEX-0040-CIMI.
CR Albrecht E., 2013, LECT NOTES COMPUTER, V8439, P1
   Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P54, DOI 10.1007/978-3-642-40564-8_6
   [Anonymous], 2016, ARXIV160608813
   [Anonymous], P 6 LAT AM WORKSH NO
   Arora T., 1993, Deductive and Object-Oriented Databases. Third International Conference, DOOD '93. Proceedings, P101
   Balduccini M, 2010, THEOR PRACT LOG PROG, V10, P725, DOI 10.1017/S1471068410000384
   Beatrix C., 2016, 32 INT C LOG PROGR I
   Boenn G, 2011, THEOR PRACT LOG PROG, V11, P397, DOI 10.1017/S1471068410000530
   BRAIN M., 2008, P 3 INT WORKSH EXPL, V391, P37
   Brain M., 2005, P 3 WORKSH ANSW SET
   Brain M, 2007, LECT NOTES COMPUT SC, V4483, P31, DOI 10.1007/978-3-540-72200-7_5
   Brain Martin, 2007, P WORKSH SOFTW ENG A, P71
   Bratko I., 2001, Prolog Programming for Artificial Intelligence
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Busoniu PA, 2013, THEOR PRACT LOG PROG, V13, P657, DOI 10.1017/S1471068413000410
   Cabalar Pedro, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P334, DOI 10.1007/978-3-642-20832-4_21
   Cabalar P., 2013, CORR
   Cabalar P, 2017, THEOR PRACT LOG PROG, V17, P49, DOI 10.1017/S1471068416000107
   Cabalar P, 2016, THEOR PRACT LOG PROG, V16, P587, DOI 10.1017/S1471068416000454
   Cabalar P, 2014, THEOR PRACT LOG PROG, V14, P603, DOI 10.1017/S1471068414000234
   Cabalar P, 2014, LECT NOTES ARTIF INT, V8761, P297, DOI 10.1007/978-3-319-11558-0_21
   Calimeri F., 2009, Proceed- ings of the 2nd International Workshop on Software Engineering for Answer Set Programming (SEA 2009), P79
   Clark K. L., 1978, Logic and data bases, P293
   Costantini S, 2006, THEOR PRACT LOG PROG, V6, P169, DOI 10.1017/S1471068405002589
   Costantini S, 2002, INFORM PROCESS LETT, V84, P241, DOI 10.1016/S0020-0190(02)00290-9
   Costantini S., 2011, 2 INT WORKSH GRAPH S, P68
   Costantini S., 2001, P 1 INT WORKSH ANS S
   Damasio C. V., 2015, 31 INT C LOG PROGR I
   Damasio C. V., 2015, CEUR WORKSHOP P, V1433
   Damásio CV, 2013, LECT NOTES COMPUT SC, V8148, P530, DOI 10.1007/978-3-642-40564-8_53
   DEKLEER J, 1986, ARTIF INTELL, V28, P127, DOI 10.1016/0004-3702(86)90080-9
   Denecker Marc, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P250, DOI 10.1007/978-3-319-23264-5_22
   Denecker M, 1993, LPNMR, P365
   Dimopoulos Y, 1996, THEOR COMPUT SCI, V170, P209, DOI 10.1016/S0304-3975(96)80707-9
   Dimopoulos Y, 1996, J AUTOM REASONING, V17, P259, DOI 10.1007/BF00283131
   Dodaro Carmine, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P279, DOI 10.1007/978-3-319-23264-5_24
   Dung PM, 2009, ARGUMENTATION IN ARTIFICIAL INTELLIGENCE, P199, DOI 10.1007/978-0-387-98197-0_10
   El-Khatib O., 2005, P 6 INT WORKSH AUT D, P49
   Erdem E, 2015, THEOR PRACT LOG PROG, V15, P35, DOI 10.1017/S1471068413000598
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Fandinno J, 2016, FUND INFORM, V147, P93, DOI 10.3233/FI-2016-1399
   Fandinno J, 2016, THEOR PRACT LOG PROG, V16, P670, DOI 10.1017/S1471068416000466
   Febbraro O, 2011, LECT NOTES ARTIF INT, V6645, P317
   Ferrand G, 2006, COMPUT INFORM, V25, P105
   Frühstück M, 2013, LECT NOTES COMPUT SC, V8148, P323, DOI 10.1007/978-3-642-40564-8_32
   Gasteiger P., 2016, P WORKSH TRENDS APPL
   Gebser M, 2008, P 23 NAT C ART INT, V1
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P323, DOI 10.1017/S1471068410000554
   Gelfond, 1988, LOG PROGR P 5 INT C, V2
   Gelfond M., 1991, NEW GENERAT COMPUT, V9, P365, DOI DOI 10.1007/BF03037169
   Gelfond M, 2008, FOUND ARTIF INTELL, P285, DOI 10.1016/S1574-6526(07)03007-6
   Green Todd J., 2007, PODS, DOI DOI 10.1145/1265530.1265535
   Hall N, 2007, PHILOS STUD, V132, P109, DOI 10.1007/s11098-006-9057-9
   Hall N., 2004, CAUSATION COUNTERFAC, P225
   Halpern JosephY., 2008, P 11 C PRINCIPLES KN, P198
   Hitchcock C, 2009, J PHILOS, V106, P587, DOI 10.5840/jphil20091061128
   Inclezan D, 2015, THEOR PRACT LOG PROG, V15, P1, DOI 10.1017/S1471068413000653
   Konczak K, 2006, THEOR PRACT LOG PROG, V6, P61, DOI 10.1017/S1471068405002528
   Lee J, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P503
   Lefévre C, 2017, THEOR PRACT LOG PROG, V17, P266, DOI 10.1017/S1471068416000569
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lewis David, 1974, The Journal of Philosophy, V70, P556, DOI DOI 10.2307/2025310
   Li T., 2015, P TECHN COMM 31 INT
   Lifschitz V., 2008, AAAI, V3, P1594
   Lifschitz V, 2017, THEOR PRACT LOG PROG, V17, P961, DOI 10.1017/S1471068417000345
   Lifschitz V, 2010, LECT NOTES COMPUT SC, V6300, P488, DOI 10.1007/978-3-642-15025-8_24
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Linke T, 2001, INT JOINT C ART INT, P641
   Linke T., 2004, LECT NOTES COMPUTER, P154
   LLOYD JW, 1987, NEW GENERAT COMPUT, V5, P133, DOI 10.1007/BF03037396
   Maudlin T, 2004, CAUSATION COUNTERFAC
   McCarthy J., 1998, P 4 S LOG FORM COMM, P198
   McCarthy J, 1981, P 5 INT JOINT C ART, P459, DOI DOI 10.1016/B978-0-934613-03-3.50035-0
   OETSCH J., 2012, LIPICS, V17, P222
   Oetsch J, 2018, THEOR PRACT LOG PROG, V18, P30, DOI 10.1017/S1471068417000217
   Oetsch J, 2011, LECT NOTES ARTIF INT, V6645, P382
   Oetsch J, 2011, LECT NOTES ARTIF INT, V6645, P134
   Oetsch J, 2010, THEOR PRACT LOG PROG, V10, P513, DOI 10.1017/S1471068410000256
   Pemmasani G, 2003, LECT NOTES COMPUT SC, V2916, P500, DOI 10.1007/978-3-540-24599-5_42
   Pereira L. M., 1993, Automated and Algorithmic Debugging. First International Workshop, AADEBUG '93 Proceedings, P58, DOI 10.1007/BFb0019400
   Pereira L. M., 1991, LECT NOTES COMPUTER, V808
   PEREIRA LM, 1992, ECAI 92 - 10TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE : PROCEEDINGS, P102
   PEREIRA LM, 1993, J LOGIC PROGRAM, V17, P227, DOI 10.1016/0743-1066(93)90032-C
   Perrin S, 2007, PROCEEDINGS OF THE 2007 IEEE INTERNATIONAL FREQUENCY CONTROL SYMPOSIUM-JOINTLY WITH THE 21ST EUROPEAN FREQUENCY AND TIME FORUM, VOLS 1-4, P86, DOI 10.1109/FREQ.2007.4319037
   Polleres A, 2013, LECT NOTES COMPUT SC, V8148, P452, DOI 10.1007/978-3-642-40564-8_45
   Pontelli E, 2006, LECT NOTES COMPUT SC, V4079, P196, DOI 10.1007/11799573_16
   Pontelli E, 2009, THEOR PRACT LOG PROG, V9, P1, DOI 10.1017/S1471068408003633
   PUHRER J., 2014, THESIS
   Ricca F, 2012, THEOR PRACT LOG PROG, V12, P361, DOI 10.1017/S147106841100007X
   Roychoudhury A., 2000, Proceedings of the 2nd International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP '00), P178, DOI 10.1145/351268.351290
   Schulz Claudia, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P467, DOI 10.1007/978-3-319-23264-5_39
   Schulz C., 2017, THESIS
   Schulz C., 2013, P 11 INT S LOG FORM
   Schulz C, 2015, AAAI CONF ARTIF INTE, P1569
   Schulz C, 2016, THEOR PRACT LOG PROG, V16, P59, DOI 10.1017/S1471068414000702
   Shapiro EY., 1983, Algorithmic Program Debugging
   Shchekotykhin K, 2015, AAAI CONF ARTIF INTE, P1597
   Specht G., 1993, P 5 WORKSH LOG PROGR, P8
   Sterling L., 1989, IJCAI-89 Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, P66
   Sterling L., 1986, COMPUTATIONAL INTELL, V2, P136
   Sterling L. S., 1994, The Art of Prolog, V2nd
   Sureshkumar A., 2007, P WORKSH SOFTW ENG A, P101
   Syrjanen T., 2006, P 11 INT WORKSH NONM, V6, P77
   Syrjanen Tommi., 2001, LP-NMR'01: Proceedings of the 6th International Conference on Logic Programming and Nonmonotonic Reasoning, P434, DOI DOI 10.1007/3-540-45402-038
   Toni F., 2013, THEOR PRACT LOG PROG, V13, P4
   Ulbricht M, 2016, LECT NOTES COMPUT SC, V10021, P577, DOI 10.1007/978-3-319-48758-8_42
   Van Gelder A., 1988, Proceedings of the Seventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P221, DOI 10.1145/308386.308444
   Van Gelder A., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P1, DOI 10.1145/73721.73722
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   YOU JH, 1994, J COMPUT SYST SCI, V49, P334, DOI 10.1016/S0022-0000(05)80053-4
NR 112
TC 23
Z9 24
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2019
VL 19
IS 2
SI SI
BP 114
EP 203
DI 10.1017/S1471068418000534
PG 90
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA HL5XX
UT WOS:000458807300002
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Frioux, C
   Schaub, T
   Schellhorn, S
   Siegel, A
   Wanko, P
AF Frioux, Clemence
   Schaub, Torsten
   Schellhorn, Sebastian
   Siegel, Anne
   Wanko, Philipp
TI Technical Note Hybrid metabolic network completion
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; metabolic network; gap-filling; linear
   programming; hybrid solving; bioinformatics
AB Metabolic networks play a crucial role in biology since they capture all chemical reactions in an organism. While there are networks of high quality for many model organisms, networks for less studied organisms are often of poor quality and suffer from incompleteness. To this end, we introduced in previous work an answer set programming (ASP)-based approach to metabolic network completion. Although this qualitative approach allows for restoring moderately degraded networks, it fails to restore highly degraded ones. This is because it ignores quantitative constraints capturing reaction rates. To address this problem, we propose a hybrid approach to metabolic network completion that integrates our qualitative ASP approach with quantitative means for capturing reaction rates. We begin by formally reconciling existing stoichiometric and topological approaches to network completion in a unified formalism. With it, we develop a hybrid ASP encoding and rely upon the theory reasoning capacities of the ASP system dingo for solving the resulting logic program with linear constraints over reals. We empirically evaluate our approach by means of the metabolic network of Escherichia coli. Our analysis shows that our novel approach yields greatly superior results than obtainable from purely qualitative or quantitative approaches.
C1 [Frioux, Clemence; Siegel, Anne] Univ Rennes, Inria, CNRS, IRISA, F-35000 Rennes, France.
   [Schaub, Torsten] Inria, Rennes, France.
   [Schaub, Torsten; Schellhorn, Sebastian; Wanko, Philipp] Univ Potsdam, Potsdam, Germany.
C3 Universite de Rennes; Centre National de la Recherche Scientifique
   (CNRS); Inria; Inria; University of Potsdam
RP Frioux, C (corresponding author), Univ Rennes, Inria, CNRS, IRISA, F-35000 Rennes, France.
EM clemence.frioux@inria.fr; torsten@cs.uni-potsdam.de;
   seschell@cs.uni-potsdam.de; anne.siegel@irisa.fr;
   wanko@cs.uni-potsdam.de
RI Frioux, Clémence/A-1517-2019; Schaub, Torsten/O-5873-2019
OI Frioux, Clémence/0000-0003-2114-0697; Schaub,
   Torsten/0000-0002-7456-041X; Wanko, Philipp/0000-0003-4986-4881
FU DFG [SCHA 550/9, 11]; French Government via the National Research Agency
   investment expenditure program IDEALG [ANR-10-BTBR-04]
FX This work was partially funded by DFG grant SCHA 550/9 and 11 and
   benefited from the support of the French Government via the National
   Research Agency investment expenditure program IDEALG ANR-10-BTBR-04.
CR Ansòtegui C, 2013, ARTIF INTELL, V196, P77, DOI 10.1016/j.artint.2013.01.002
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Becker SA, 2007, NAT PROTOC, V2, P727, DOI 10.1038/nprot.2007.99
   Caspi R, 2016, NUCLEIC ACIDS RES, V44, pD471, DOI 10.1093/nar/gkv1164
   Collet G, 2013, LECT NOTES COMPUT SC, V8148, P245, DOI 10.1007/978-3-642-40564-8_25
   Dantzig G. B., 2003, Linear Programming 2: Theory and Extensions
   Ebrahim A, 2013, BMC SYST BIOL, V7, DOI 10.1186/1752-0509-7-74
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P368, DOI 10.1007/978-3-319-23264-5_31
   Gebser M., 2016, TECHNICAL COMMUNICAT, DOI [10.4230/OASIcs.ICLP.2016.2, DOI 10.4230/OASICS.ICLP.2016.2]
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Handorf T, 2005, J MOL EVOL, V61, P498, DOI 10.1007/s00239-005-0027-1
   Janhunen T, 2017, THEOR PRACT LOG PROG, V17, P872, DOI 10.1017/S1471068417000242
   Kumar VS, 2007, BMC BIOINFORMATICS, V8, DOI 10.1186/1471-2105-8-212
   Latendresse M, 2014, BMC BIOINFORMATICS, V15, DOI 10.1186/1471-2105-15-225
   Maranas C.D., 2016, Optimization methods in metabolic networks
   Orth JD, 2010, BIOTECHNOL BIOENG, V107, P403, DOI 10.1002/bit.22844
   Ostrowski M, 2012, THEOR PRACT LOG PROG, V12, P485, DOI 10.1017/S1471068412000142
   Prigent S, 2017, PLOS COMPUT BIOL, V13, DOI 10.1371/journal.pcbi.1005276
   Prigent S, 2014, PLANT J, V80, P367, DOI 10.1111/tpj.12627
   Reed JL, 2003, GENOME BIOL, V4, DOI 10.1186/gb-2003-4-9-r54
   Schaub T, 2009, LECT NOTES COMPUT SC, V5649, P312, DOI 10.1007/978-3-642-02846-5_27
   Simons Patrik, 2002, ARTIF INTELL, V138, P181
   Thiele I, 2014, BIOINFORMATICS, V30, P2529, DOI 10.1093/bioinformatics/btu321
   Vitkin E, 2012, GENOME BIOL, V13, DOI 10.1186/gb-2012-13-11-r111
NR 24
TC 5
Z9 5
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2019
VL 19
IS 1
BP 83
EP 108
DI 10.1017/S1471068418000455
PG 26
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA HF7OS
UT WOS:000454429700003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Interlandi, M
   Tanca, L
AF Interlandi, Matteo
   Tanca, Letizia
TI A datalog-based computational model for coordination-free, data-parallel
   systems
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE declarative networking; datalog; relational transducer; CALM conjecture;
   bulk synchronous parallel systems
ID OPTIMIZATION; TIME
AB Cloud computing refers to maximizing efficiency by sharing computational and storage resources, while data-parallel systems exploit the resources available in the cloud to perform parallel transformations over large amounts of data. In the same line, considerable emphasis has been recently given to two apparently disjoint research topics: data-parallel, and eventually consistent, distributed systems. Declarative networking has been recently proposed to ease the task of programming in the cloud, by allowing the programmer to express only the desired result and leave the implementation details to the responsibility of the run-time system. In this context, we deem it appropriate to propose a study on a logic-programming-based computational model for eventually consistent, data-parallel systems, the keystone of which is provided by the recent finding that the class of programs that can be computed in an eventually consistent, coordination-free way is that of monotonic programs. This principle is called Consistency and Logical Monotonicity (CALM) and has been proven by Ameloot et al. for distributed, asynchronous settings. We advocate that CALM should be employed as a basic theoretical tool also for data-parallel systems, wherein computation usually proceeds synchronously in rounds and where communication is assumed to be reliable. We deem this problem relevant and interesting, especially for what concerns parallel dataflow optimizations. Nowadays, we are in fact witnessing an increasing concern about understanding which properties distinguish synchronous from asynchronous parallel processing, and when the latter can replace the former. It is general opinion that coordination-freedom can be seen as a major discriminant factor. In this work, we make the case that the current form of CALM does not hold in general for data-parallel systems, and show how, using novel techniques, the satisfiability of the CALM principle can still be obtained although just for the subclass of programs called connected monotonic queries. We complete the study with considerations on the relationships between our model and the one employed by Ameloot et al., showing that our techniques subsume the latter when the synchronization constraints imposed on the system are loosened.
C1 [Interlandi, Matteo] Microsoft, Redmond, WA 98052 USA.
   [Tanca, Letizia] Politecn Milan, Milan, Italy.
   [Interlandi, Matteo] Univ Calif Los Angeles, Los Angeles, CA 90024 USA.
C3 Microsoft; Polytechnic University of Milan; University of California
   System; University of California Los Angeles
RP Interlandi, M (corresponding author), Microsoft, Redmond, WA 98052 USA.; Interlandi, M (corresponding author), Univ Calif Los Angeles, Los Angeles, CA 90024 USA.
EM mainterl@microsoft.com; letizia.tanca@polimi.it
CR Abiteboul S, 2000, J COMPUT SYST SCI, V61, P236, DOI [10.1006/jcss.2000.1708, 10.1006/JCSS.2000.1708]
   Abiteboul S, 1995, FDN DATABASES
   AFRATI F, 1995, J COMPUT SYST SCI, V51, P177, DOI 10.1006/jcss.1995.1060
   Afrati F. N., 2010, EDBT, P99, DOI [DOI 10.1145/1739041.1739056, 10.1145/1739041.1739056]
   Afrati F.N., 2011, EDBT, P1, DOI DOI 10.1145/1951365.1951367
   Alexandrov A, 2014, VLDB J, V23, P939, DOI 10.1007/s00778-014-0357-y
   Alvaro P., 2011, CIDR, P249
   Alvaro P., 2014, P IEEE 30 INT DAT EN
   Ameloot T. J., 2015, P 18 INT C DAT THEOR, P308
   Ameloot T. J., 2015, P ACM S PRINC DAT SY
   Ameloot TJ, 2014, PODS'14: PROCEEDINGS OF THE 33RD ACM SIGMOD-SIGACT-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P64, DOI 10.1145/2594538.2594541
   Ameloot TJ, 2014, SIGMOD REC, V43, P5
   Ameloot TJ, 2013, J ACM, V60, DOI 10.1145/2450142.2450151
   [Anonymous], 2014, P USENIX C USENIX AN
   [Anonymous], 2010, NSDI
   [Anonymous], 1994, The Bulletin of the European Association for Theoretical Computer Science
   [Anonymous], PODS
   Armbrust M, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1383, DOI 10.1145/2723372.2742797
   Babaoglu O., 1993, DISTRIBUTED SYSTEMS, P55
   Ben-zvi Ido, 2010, Journal of Applied Non-Classical Logic, V21, P323, DOI 10.3166/jancl.21.323-354
   Ben-Zvi I, 2014, J ACM, V61, DOI 10.1145/2542181
   Ben-Zvi I, 2010, LECT NOTES COMPUT SC, V6343, P421, DOI 10.1007/978-3-642-15763-9_42
   Borkar V, 2011, PROC INT CONF DATA, P1151, DOI 10.1109/ICDE.2011.5767921
   BREWER EA, 2000, PODC, V7, DOI [10.1145/343477.343502, DOI 10.1145/343477.343502]
   Cali A., 2011, P DAT REL 1 INT WORK, V6702, P351
   CHANDY KM, 1985, ACM T COMPUT SYST, V3, P63, DOI 10.1145/214451.214456
   Dean J, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P137
   DeCandia Giuseppe, 2007, Operating Systems Review, V41, P205, DOI 10.1145/1323293.1294281
   Fagin R., 2003, REASONING KNOWLEDGE
   Foster I, 1995, DESIGNING BUILDING P
   Furche T, 2014, PROC VLDB ENDOW, V7, P1845, DOI 10.14778/2733085.2733091
   GAIFMAN H, 1993, J ACM, V40, P683, DOI 10.1145/174130.174142
   GUESSARIAN I, 1990, LECT NOTES COMPUT SC, V470, P395
   Han MY, 2015, PROC VLDB ENDOW, V8, P950, DOI 10.14778/2777598.2777604
   Hellerstein JM, 2010, SIGMOD REC, V39, P5, DOI 10.1145/1860702.1860704
   Hunt Patrick, 2010, P 2010 USENIX ANN TE, P11, DOI DOI 10.5555/1855840.1855851
   Interlandi M., 2017, ABS14057264 CORR
   Interlandi M., 2013, P A MEND INT WORKSH
   Interlandi M., 2015, P A MEND INT WORKSH
   Koutris Paraschos., 2011, PROC PODS C, P223, DOI [DOI 10.1145/1989284.1989310, 10.1145/1989284.1989310]
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   LAMPORT L, 1984, ACM T PROGR LANG SYS, V6, P254, DOI 10.1145/2993.2994
   Malewicz Grzegorz, 2010, P ACM SIGMOD INT C M, P135, DOI [DOI 10.1145/1807167.1807184, 10.1145/1807167.1807184]
   Mazuran M, 2013, VLDB J, V22, P471, DOI 10.1007/s00778-012-0299-1
   Mumick I. S., 1995, ANN MATH ARTIFICIAL, V15, P3
   Olston C., 2008, Proceedings of the 2008 ACM SIGMOD International Conference on Manage- ment of Data, P1099
   Ramakrishnan R., 1988, Proceedings of the Seventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P89, DOI 10.1145/308386.308420
   RAMAKRISHNAN R, 1995, J LOGIC PROGRAM, V23, P125, DOI 10.1016/0743-1066(94)00039-9
   Recht B., 2011, ADV NEURAL INFORM PR, P693
   Ross KA, 1997, J COMPUT SYST SCI, V54, P79, DOI 10.1006/jcss.1997.1453
   Seib J., 1991, Proceedings of the Tenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P241, DOI 10.1145/113413.113435
   Shkapsky A, 2016, SIGMOD'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1135, DOI 10.1145/2882903.2915229
   Thusoo A, 2009, PROC VLDB ENDOW, V2, P1626, DOI 10.14778/1687553.1687609
   VALIANT LG, 1990, COMMUN ACM, V33, P103, DOI 10.1145/79173.79181
   Vogels W, 2009, COMMUN ACM, V52, P40, DOI 10.1145/1435417.1435432
   WOLFSON O, 1990, SIGMOD REC, V19, P133, DOI 10.1145/93605.98723
   Wolfson O., 1988, SIGMOD Record, V17, P329, DOI 10.1145/971701.50242
   Xie CN, 2015, ACM SIGPLAN NOTICES, V50, P194, DOI [10.1145/2688500.2688508, 10.1145/2858788.2688508]
   Zaharia M., 2012, P NSDI
   Zaniolo C, 2017, THEOR PRACT LOG PROG, V17, P1048, DOI 10.1017/S1471068417000436
   Zaniolo Carlo., 2016, AMW
   Zaniolo Carlo, 2018, AMW 18
   Zinn D., 2012, ICDT, P99, DOI [10.1145/2274576.2274588, DOI 10.1145/2274576.2274588]
NR 63
TC 1
Z9 2
U1 0
U2 7
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2018
VL 18
IS 5-6
BP 874
EP 927
DI 10.1017/S147106841800042X
PG 54
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA GS5FG
UT WOS:000443682000006
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Cabalar, P
   Kaminski, R
   Schaub, T
   Schuhmann, A
AF Cabalar, Pedro
   Kaminski, Roland
   Schaub, Torsten
   Schuhmann, Anna
TI Temporal Answer Set Programming on Finite Traces
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
ID EQUILIBRIUM LOGIC
AB In this paper, we introduce an alternative approach to Temporal Answer Set Programming that relies on a variation of Temporal Equilibrium Logic (TEL) for finite traces. This approach allows us to even out the expressiveness of TEL over infinite traces with the computational capacity of (incremental) Answer Set Programming (ASP). Also, we argue that finite traces are more natural when reasoning about action and change. As a result, our approach is readily implementable via multi-shot ASP systems and benefits from an extension of ASP's full-fledged input language with temporal operators. This includes future as well as past operators whose combination offers a rich temporal modeling language. For computation, we identify the class of temporal logic programs and prove that it constitutes a normal form for our approach. Finally, we outline two implementations, a generic one and an extension of the ASP system clingo.
   Under consideration for publication in Theory and Practice of Logic Programming (TPLP)
C1 [Cabalar, Pedro] Univ A Coruna, La Coruna, Spain.
   [Kaminski, Roland; Schaub, Torsten; Schuhmann, Anna] Univ Potsdam, Potsdam, Germany.
C3 Universidade da Coruna; University of Potsdam
RP Cabalar, P (corresponding author), Univ A Coruna, La Coruna, Spain.
RI Cabalar, Pedro/AAE-5198-2020; Kaminski, Roland/HMD-8407-2023; Schaub,
   Torsten/O-5873-2019
OI Kaminski, Roland/0000-0002-1361-6045; Schaub,
   Torsten/0000-0002-7456-041X
FU MINECO, Spain [TIC2017-84453-P]; Xunta de Galicia, Spain [GPC ED431B
   2016/035, 2016-2019 ED431G/01]; DFG [SCHA 550/9]
FX This work was partially supported by MINECO, Spain, grant
   TIC2017-84453-P, Xunta de Galicia, Spain (GPC ED431B 2016/035 and
   2016-2019 ED431G/01, CITIC), and DFG grant SCHA 550/9.
CR Aguado Felicidad, 2013, Journal of Applied Non-Classical Logic, V23, P2, DOI 10.1080/11663081.2013.798985
   [Anonymous], P 23 INT JOINT C ART
   [Anonymous], 1968, ZAPISKI NAUCHNYH SEM
   Bozzelli L, 2015, IEEE S LOG, P645, DOI 10.1109/LICS.2015.65
   Cabalar P, 2015, THEOR PRACT LOG PROG, V15, P666, DOI 10.1017/S1471068415000307
   Cabalar P, 2011, LECT NOTES ARTIF INT, V6645, P370
   Cabalar P, 2010, LECT NOTES ARTIF INT, V6341, P64, DOI 10.1007/978-3-642-15675-5_8
   De Giacomo Giuseppe., International Joint Conference on Artificial Intelligence, IJCAI. IJCAI/AAAI, P854, DOI DOI 10.5555/2540128.2540252
   Emerson E. A., 1990, Handbook of Theoretical Computer Science, VB, P995, DOI [10.1016/b978-0-444-88074-1.50021-4, DOI 10.1016/B978-0-444-88074-1.50021-4]
   Fages F., 1994, Methods of Logic in Computer Science, V1, P51
   GABBAY D, 1989, LECT NOTES COMPUT SC, V398, P409
   Gebser M., 2012, LNCS, V7265, P296
   Gebser M., 2018, THEORY PRACTICE LOGI
   Gelfond M., 1998, ELECT T ARTIFICIAL I, V2, P193
   Heyting A, 1930, SITZBER PREUSS AKAD, P42
   Lee J., 2013, ART INT IJCAI 23 INT, P983
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Oikarinen E, 2006, FRONT ARTIF INTEL AP, V141, P412
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   SANDEWALL E, 1994, FEATURES FLUENTS REP, V1
   Vidal, 2011, LECT NOTES COMPUT SC, V7225, P57
NR 21
TC 20
Z9 20
U1 1
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 406
EP 420
DI 10.1017/S1471068418000297
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400008
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Warren, DS
AF Warren, David S.
TI Top-down and Bottom-up Evaluation Procedurally Integrated
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
DE top-down; bottom-up; logic programming; tabling; Prolog; procedural
   interpretation
AB This paper describes how the Logic Programming System XSB combines top-down and bottomup computation through the mechanisms of variant tabling and subsumptive tabling with abstraction, respectively.
   It is well known that top-down evaluation of logical rules in Prolog has a procedural interpretation as recursive procedure invocation (Kowalski 1986). Tabling adds the intuition of short-circuiting redundant computations (Warren 1992). This paper shows how to introduce into tabled logic program evaluation a bottom-up component, whose procedural intuition is the initialization of a data structure, in which a relation is initially computed and filled, on first demand, and then used throughout the remainder of a larger computation for efficient lookup. This allows many Prolog programs to be expressed fully declaratively, programs which formerly required procedural features, such as assert, to be made efficient.
C1 [Warren, David S.] SUNY Stony Brook, Stony Brook, NY 11794 USA.
   [Warren, David S.] XSB Inc, Setauket, NY 11733 USA.
C3 State University of New York (SUNY) System; State University of New York
   (SUNY) Stony Brook
RP Warren, DS (corresponding author), SUNY Stony Brook, Stony Brook, NY 11794 USA.; Warren, DS (corresponding author), XSB Inc, Setauket, NY 11733 USA.
EM warren@cs.stonybrook.edu
CR Aref M, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1371, DOI 10.1145/2723372.2742796
   Arni F, 2003, THEOR PRACT LOG PROG, V3, P61, DOI 10.1017/S1471068402001515
   Bry F., 1990, Data & Knowledge Engineering, V5, P289, DOI 10.1016/0169-023X(90)90017-8
   Cruz F., 2011, CORR
   Dowling W. F., 1984, Journal of Logic Programming, V1, P267, DOI 10.1016/0743-1066(84)90014-1
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Johnson E, 1999, LECT NOTES COMPUT SC, V1722, P284
   Johnson E., 2000, 2 WORKSH TAB PARS DE
   Johnson E., 2002, THESIS, P11794
   Kowalski R., 1986, Logic for Problem-Solving
   Lloyd JohnWylie., 1993, FDN LOGIC PROGRAMMIN, Vsecond
   Ramakrishnan IV, 1999, J LOGIC PROGRAM, V38, P31, DOI 10.1016/S0743-1066(98)10013-4
   Ramakrishnan R., 1994, VLDB J, V3, P161
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Toman D., 1995, P 1995 INT LOG PROGR, P98
   Tuncay Tekle K., 2011, P 2011 ACM SIGMOD IN, P661, DOI DOI 10.1145/1989323.1989393
   Ullman J. D., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P140, DOI 10.1145/73721.73736
   Warren D. S., 2007, TECH REP, P11794
   WARREN DS, 1992, COMMUN ACM, V35, P93, DOI 10.1145/131295.131299
   Weilemaker J., 2017, TECH REP
   Zhou NF, 2012, THEOR PRACT LOG PROG, V12, P189, DOI 10.1017/S1471068411000445
   [No title captured]
NR 22
TC 1
Z9 1
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 706
EP 721
DI 10.1017/S1471068418000194
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400026
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Harrison, A
   Lifschitz, V
   Raju, D
AF Harrison, Amelia
   Lifschitz, Vladimir
   Raju, Dhananjay
TI Program completion in the input language of GRINGO
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming colocated with the
   23rd International Conference on Principles and Practice of Constraint
   Programming / 20th International Conference on Theory and Applications
   of Satisfiability Testing
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google
DE formal methods; program completion; Answer Set Programming
ID LOGIC
AB We argue that turning a logic program into a set of completed definitions can be sometimes thought of as the "reverse engineering" process of generating a set of conditions that could serve as a specification for it. Accordingly, it may be useful to define completion for a large class of Answer Set Programming (ASP) programs and to automate the process of generating and simplifying completion formulas. Examining the output produced by this kind of software may help programmers to see more clearly what their program does, and to what degree its behavior conforms with their expectations. As a step toward this goal, we propose here a definition of program completion for a large class of programs in the input language of the ASP grounder gringo, and study its properties.
C1 [Harrison, Amelia; Lifschitz, Vladimir; Raju, Dhananjay] Dept Comp Sci, Austin, TX 78712 USA.
RP Harrison, A (corresponding author), Dept Comp Sci, Austin, TX 78712 USA.
EM ameliaj@cs.utexas.edu; vl@cs.utexas.edu; draju@cs.utexas.edu
FU National Science Foundation [IIS-1422455]
FX This work was partially supported by the National Science Foundation
   under Grant IIS-1422455.
CR Clark K. L., 1978, Logic and data bases, P293
   Erdem E, 2003, THEOR PRACT LOG PROG, V3, P499, DOI 10.1017/S1471068403001765
   Fages F., 1994, Methods of Logic in Computer Science, V1, P51
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Ferraris P., 2010, P INT WORKSH NOM REA
   Ferraris P, 2011, ARTIF INTELL, V175, P236, DOI 10.1016/j.artint.2010.04.011
   Gebser M, 2015, THEOR PRACT LOG PROG, V15, P449, DOI 10.1017/S1471068415000150
   GUREVICH Y, 1986, ANN PURE APPL LOGIC, V32, P265, DOI 10.1016/0168-0072(86)90055-2
   Harrison A, 2014, FOURTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P32
   Lee J., 2012, WORK NOT 14 INT WORK
   Lee J, 2009, LECT NOTES COMPUT SC, V5753, P182, DOI 10.1007/978-3-642-04238-6_17
   Truszczynski M., 2012, Lecture Notes in Computer Science, V7265, P543
NR 12
TC 3
Z9 3
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 855
EP 871
DI 10.1017/S1471068417000394
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800011
DA 2024-07-18
ER

PT J
AU Komendantskaya, E
   Li, Y
AF Komendantskaya, Ekaterina
   Li, Yue
TI Productive corecursion in logic programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming colocated with the
   23rd International Conference on Principles and Practice of Constraint
   Programming / 20th International Conference on Theory and Applications
   of Satisfiability Testing
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google
DE Horn clauses; (co) recursion; (co) induction; infinite term trees;
   productivity
ID SEMANTICS
AB Logic Programming is a Turing complete language. As a consequence, designing algorithms that decide termination and non-termination of programs or decide inductive/ coinductive soundness of formulae is a challenging task. For example, the existing state-of-the-art algorithms can only semi-decide coinductive soundness of queries in logic programming for regular formulae. Another, less famous, but equally fundamental and important undecidable property is productivity. If a derivation is infinite and coinductively sound, we may ask whether the computed answer it determines actually computes an infinite formula. If it does, the infinite computation is productive. This intuition was first expressed under the name of computations at infinity in the 80s. In modern days of the Internet and stream processing, its importance lies in connection to infinite data structure processing. Recently, an algorithm was presented that semi-decides a weaker property -of productivity of logic programs. A logic program is productive if it can give rise to productive derivations. In this paper, we strengthen these recent results. We propose a method that semi-decides productivity of individual derivations for regular formulae. Thus, we at last give an algorithmic counterpart to the notion of productivity of derivations in logic programming. This is the first algorithmic solution to the problem since it was raised more than 30 years ago. We also present an implementation of this algorithm.
C1 [Komendantskaya, Ekaterina; Li, Yue] Heriot Watt Univ, Edinburgh, Midlothian, Scotland.
C3 Heriot Watt University
RP Komendantskaya, E (corresponding author), Heriot Watt Univ, Edinburgh, Midlothian, Scotland.
EM ek19@hw.ac.uk; yl55@hw.ac.uk
FU EPSRC [EP/K031864/1-2]; EPSRC [EP/N014758/1, EP/K031864/2, EP/K031864/1]
   Funding Source: UKRI
FX This work has been partially supported by EPSRC grant EP/K031864/1-2.
CR Ancona D, 2015, FUND INFORM, V140, P221, DOI 10.3233/FI-2015-1252
   [Anonymous], 1977, Studies in Logic and the Foundations of Mathematics, DOI [DOI 10.1016/S0049-237X, DOI 10.1016/S0049-237X(08)71120-0, 10.1016/S0049-237X(08)71120-0]
   Colmerauer A., 1982, PROLOG INFINITE TREE
   COURCELLE B, 1983, THEOR COMPUT SCI, V25, P95, DOI 10.1016/0304-3975(83)90059-2
   Davison A, 2002, LECT NOTES ARTIF INT, V2407, P66
   Fu P, 2017, FORM ASP COMPUT, V29, P453, DOI 10.1007/s00165-016-0403-1
   Gupta G, 2007, LECT NOTES COMPUT SC, V4670, P27, DOI 10.1007/978-3-540-74610-2_4
   Heintze N., 1992, TYPES LOGIC PROGRAMM, P141
   JAFFAR J, 1986, THEOR COMPUT SCI, V46, P141, DOI 10.1016/0304-3975(86)90027-7
   Johann P., 2015, P TECHN COMM ICLP
   Komendantskaya E., 2017, P 26 INT S LOPSTR 20, P168
   Komendantskaya E, 2016, J LOGIC COMPUT, V26, P745, DOI 10.1093/logcom/exu026
   Li Y., 2017, POSTPR COAL IN PRESS
   Lloyd J., 1988, Foundations Logic Programming, V2nd
   Peng Fu, 2016, Functional and Logic Programming. 13th International Symposium, FLOPS 2016. Proceedings: LNCS 9613, P126, DOI 10.1007/978-3-319-29604-3_9
   PROIETTI M, 1995, THEOR COMPUT SCI, V142, P89, DOI 10.1016/0304-3975(94)00227-A
   Sangiorgi Davide, 2011, Introduction to bisimulation and coinduction
   Senni V., 2008, FOLDING ALGORITHM EL, P284
   Simon L, 2007, LECT NOTES COMPUT SC, V4596, P472
   Simon L, 2006, LECT NOTES COMPUT SC, V4079, P330, DOI 10.1007/11799573_25
   Van Emden M. H., 1985, Journal of Logic Programming, V2, P67, DOI 10.1016/0743-1066(85)90005-6
   Yi-Dong Shen, 2003, ACM Transactions on Computational Logic, V4, P417, DOI 10.1145/937555.937556
NR 22
TC 7
Z9 7
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 906
EP 923
DI 10.1017/S147106841700028X
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800014
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bogaerts, B
   Van den Broeck, G
AF Bogaerts, Bart
   Van den Broeck, Guy
TI Knowledge compilation of logic programs using approximation fixpoint
   theory
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
ID SEMANTICS; INFERENCE; OPERATORS
AB Recent advances in knowledge compilation introduced techniques to compile positive logic programs into propositional logic, essentially exploiting the constructive nature of the least fixpoint computation. This approach has several advantages over existing approaches: it maintains logical equivalence, does not require (expensive) loop-breaking preprocessing or the introduction of auxiliary variables, and significantly outperforms existing algorithms. Unfortunately, this technique is limited to negation-free programs. In this paper, we show how to extend it to general logic programs under the well-founded semantics.
   We develop our work in approximation fixpoint theory, an algebraical framework that unifies semantics of different logics. As such, our algebraical results are also applicable to autoepistemic logic, default logic and abstract dialectical frameworks.
C1 [Bogaerts, Bart; Van den Broeck, Guy] Katholieke Univ Leuven, Dept Comp Sci, Leuven, Belgium.
C3 KU Leuven
RP Bogaerts, B (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Leuven, Belgium.
EM bart.bogaerts@cs.kuleuven.be; guy.vandenbroeck@cs.kuleuven.be
OI Van den Broeck, Guy/0000-0003-3434-2503; Bogaerts,
   Bart/0000-0003-3460-4251
CR ABITEBOUL S, 1991, J COMPUT SYST SCI, V43, P62, DOI 10.1016/0022-0000(91)90032-Z
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   Antic C, 2013, LECT NOTES COMPUT SC, V8148, P102, DOI 10.1007/978-3-642-40564-8_11
   Asuncion V, 2012, ARTIF INTELL, V177, P1, DOI 10.1016/j.artint.2011.11.001
   Ben-Eliyahu R., 1994, Annals of Mathematics and Artificial Intelligence, V12, P53, DOI 10.1007/BF01530761
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Cadoli M, 1997, AI COMMUN, V10, P137
   Chavira M, 2008, ARTIF INTELL, V172, P772, DOI 10.1016/j.artint.2007.11.002
   Chavira M, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P1306
   Darwiche A, 2002, J ARTIF INTELL RES, V17, P229, DOI 10.1613/jair.989
   Darwiche A., 2011, IJCAI, DOI DOI 10.5591/978-1-57735-516-8/IJCAI11-143
   Denecker M, 2004, INFORM COMPUT, V192, P84, DOI 10.1016/j.ic.2004.02.004
   Denecker M, 2000, SPRINGER INT SER ENG, V597, P127
   Denecker M., 2012, LIPICS, V17, P277
   Denecker M, 2007, LECT NOTES COMPUT SC, V4483, P84, DOI 10.1007/978-3-540-72200-7_9
   Denecker M, 2014, FOURTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P22
   Fierens D, 2015, THEOR PRACT LOG PROG, V15, P358, DOI 10.1017/S1471068414000076
   Fitting M, 2002, THEOR COMPUT SCI, V278, P25, DOI 10.1016/S0304-3975(00)00330-3
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   HUANG JB, 2005, P NAT C ART INT, V20, P300
   Janhunen T, 2004, FRONT ARTIF INTEL AP, V110, P358
   Janhunen T., 2006, J APPL NONCLASSICAL, V1-2, P35, DOI DOI 10.3166/JANCL.16.35-86
   Janhunen T, 2009, LECT NOTES COMPUT SC, V5753, P142, DOI 10.1007/978-3-642-04238-6_14
   Kleene S., 1938, J. Symb. Log., V3, P150, DOI [10.2307/2267778, DOI 10.2307/2267778]
   Lifschitz V, 2006, ACM T COMPUT LOG, V7, P261, DOI 10.1145/1131313.1131316
   Lin F., 2003, IJCAI 03, P853
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Lowd D., 2008, UAI, P383
   Palacios H., 2005, P INT C PLANNING SCH, P141
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   Przymusinski T. C., 1988, F DEDUCTIVE DATABASE, P193
   Selman B, 1996, J ACM, V43, P193, DOI 10.1145/226643.226644
   Strass H, 2013, ARTIF INTELL, V205, P39, DOI 10.1016/j.artint.2013.09.004
   Suciu D., 2011, Probabilistic databases, synthesis lectures on data management
   VandenBroeck G., 2015, P AAAI
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Vlasselaer J., 2015, P IJCAI
NR 38
TC 7
Z9 7
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 464
EP 480
DI 10.1017/S1471068415000162
PN 4-5
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200005
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Demoen, B
   De La Banda, MG
AF Demoen, Bart
   De La Banda, Maria Garcia
TI Technical Notes Redundant Sudoku rules
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Sudoku; all_different constraints; inequalities; maximal redundancy
AB The rules of Sudoku are often specified using 27 all different constraints, referred to as the big constraints. Using graphical proofs and exploratory logic programming, the following main and new result is obtained: Many subsets of six of these big constraints are redundant (i.e., they are entailed by the remaining 21 constraints), and six is maximal (i.e., removing more than six constraints is not possible while maintaining equivalence). The corresponding result for binary inequality constraints, referred to as the small constraints, is stated as a conjecture.
C1 [Demoen, Bart] Katholieke Univ Leuven, Dept Comp Sci, Leuven, Belgium.
   [De La Banda, Maria Garcia] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
C3 KU Leuven; Monash University
RP Demoen, B (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Leuven, Belgium.
EM bart.demoen@cs.kuleuven.be; Maria.GarciaDeLaBanda@monash.edu
FU Australian Research Council [DP110102258]; Brussels-Capital Region
   through project ParAps; Research Foundation Flanders (FWO) through
   projects WOG: Declarative Methods in Computer Science;  [G.0221.07]
FX The main results reported here were obtained while the first author was
   on a research visit at Monash University in April 2008, and enjoying the
   Stuckey hospitality in Apollo Bay and Elwood, Australia. Many thanks for
   the most enjoyable stay. We are grateful to Michael Codish for his help
   for obtaining some of the results related to the conjecture. This
   research was partly sponsored by the Australian Research Council grant
   DP110102258, by the Brussels-Capital Region through project ParAps, and
   by the Research Foundation Flanders (FWO) through projects WOG:
   Declarative Methods in Computer Science and G.0221.07.
CR Demoen B., 2012, TECHNICAL REPORT
   Ist I. L, 2006, P 9 INT S ART INT MA
   Jussien N., 2007, A Z SUDOKU
   Kwon G., 2006, P 13 INT C LOG PROGR
   McGuire G., 2012, 12010749 CORR ABS
   Metodi A., 2012, THEOR PRACT LOG PROG, V12, P4
   Metodi A., 2012, THEOR PRACT LOG PROG, V12, P445
   Royle G., Minimum Sudoku
   Wikipedia, MIN SUD
NR 9
TC 1
Z9 1
U1 1
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2014
VL 14
BP 363
EP 377
DI 10.1017/S1471068412000361
PN 3
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA AK3AI
UT WOS:000338293500004
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Trivellato, D
   Zannone, N
   Etalle, S
AF Trivellato, Daniel
   Zannone, Nicola
   Etalle, Sandro
TI GEM: A distributed goal evaluation algorithm for trust management
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE trust management; distributed goal evaluation; policy confidentiality
ID AUTHORIZATION; RESOLUTION; PROLOG
AB Trust management is an approach to access control in distributed systems where access decisions are based on policy statements issued by multiple principals and stored in a distributed manner. In trust management, the policy statements of a principal can refer to other principals' statements; thus, the process of evaluating an access request (i.e., a goal) consists of finding a "chain" of policy statements that allows the access to the requested resource. Most existing goal evaluation algorithms for trust management either rely on a centralized evaluation strategy, which consists of collecting all the relevant policy statements in a single location (and therefore they do not guarantee the confidentiality of intensional policies), or do not detect the termination of the computation (i.e., when all the answers of a goal are computed). In this paper, we present GEM, a distributed goal evaluation algorithm for trust management systems that relies on function-free logic programming for the specification of policy statements. GEM detects termination in a completely distributed way without disclosing intensional policies, thereby preserving their confidentiality. We demonstrate that the algorithm terminates and is sound and complete with respect to the standard semantics for logic programs.
C1 [Trivellato, Daniel; Zannone, Nicola; Etalle, Sandro] Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
   [Etalle, Sandro] Univ Twente, NL-7500 AE Enschede, Netherlands.
C3 Eindhoven University of Technology; University of Twente
RP Trivellato, D (corresponding author), Eindhoven Univ Technol, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM d.trivellato@tue.nl; n.zannone@tue.nl; s.etalle@tue.nl
RI Zannone, Nicola/H-1318-2012
OI Zannone, Nicola/0000-0002-9081-5996
FU Dutch Ministry of Economic Affairs under the BSIK03021 program
FX This work has been carried out as part of the POSEIDON project under the
   responsibility of the Embedded Systems Institute (ESI). This project is
   partially supported by the Dutch Ministry of Economic Affairs under the
   BSIK03021 program.
CR Alves M, 2006, SEVENTH IEEE INTERNATIONAL WORKSHOP ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, PROCEEDINGS, P123, DOI 10.1109/POLICY.2006.4
   [Anonymous], 1969, Machine intelligence
   [Anonymous], P NETW DISTR SYST SE
   [Anonymous], 1990, HDB THEOR COMPUT SCI
   Apt K. R., 1994, Formal Aspects of Computing, V6, P743, DOI 10.1007/BF01213601
   Apt K.R., 1988, THEORY DECLARATIVE K, P89
   APT KR, 1994, J LOGIC PROGRAM, V20, P9, DOI 10.1016/0743-1066(94)90024-8
   Becker M. Y., 2005, THESIS U CAMBRIDGE U
   Becker MY, 2010, J COMPUT SECUR, V18, P619, DOI 10.3233/JCS-2009-0364
   Becker MY, 2009, 2009 IEEE INTERNATIONAL SYMPOSIUM ON POLICIES FOR DISTRIBUTED SYSTEMS AND NETWORKS, P1, DOI 10.1109/POLICY.2009.23
   Blaze M, 1996, P IEEE S SECUR PRIV, P164, DOI 10.1109/SECPRI.1996.502679
   Böhm Klemens, 2010, J. theor. appl. electron. commer. res., V5, P77, DOI 10.4067/S0718-18762010000200006
   Bradshaw R., 2004, CCS, P146
   Bry F., 1990, Data & Knowledge Engineering, V5, P289, DOI 10.1016/0169-023X(90)90017-8
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   Chen YJ, 1997, INT J INTELL SYST, V12, P203, DOI 10.1002/(SICI)1098-111X(199703)12:3<203::AID-INT3>3.0.CO;2-T
   Costantini S., 2001, P 1 INT WORKSH ANSW
   Czenko M, 2006, ELECTRON NOTES THEOR, V157, P113, DOI 10.1016/j.entcs.2005.09.037
   Czenko M, 2007, LECT NOTES COMPUT SC, V4670, P380, DOI 10.1007/978-3-540-74610-2_26
   Damasio C. V., 2000, P 2 C TAB PARS DED, P65
   Di Marzo Serugendo G, 2004, LECT NOTES ARTIF INT, V2977, P1
   Dong CY, 2010, IFIP ADV INF COMM TE, V321, P125
   Ellison C., 1999, SPKI CERTIFICATE THE
   Fitting M., 1985, Journal of Logic Programming, V2, P295, DOI 10.1016/S0743-1066(85)80005-4
   Frikken K, 2006, IEEE T COMPUT, V55, P1259, DOI 10.1109/TC.2006.158
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Hai-Feng Guo, 2001, Logic Programming. 17th International Conference, ICLP 2001. Proceedings (Lecture Notes in Computer Science Vol.2237), P181
   Hoch JJ, 2008, LECT NOTES COMPUT SC, V5126, P616, DOI 10.1007/978-3-540-70583-3_50
   Hu R, 1997, THESIS U NEW YORK ST
   Hulin G., 1989, Proceedings of the Fifteenth International Conference on Very Large Data Bases, P87
   Koshutanski H, 2008, ACM T AUTON ADAP SYS, V3, DOI 10.1145/1380422.1380424
   Lee A. J., 2009, P 4 INT S INF COMP C, P287
   Lee AJ, 2010, ACM T INFORM SYST SE, V13, DOI 10.1145/1805974.1805981
   Leuschel M., 1998, Logic Program Synthesis and Transformation. 7th International Workshop, LOPSTR'97. Proceedings, P189
   Li NH, 2003, LECT NOTES COMPUT SC, V2562, P58
   Minami K., 2011, P 6 S INF COMP COMM, P145
   Ninghui Li, 2003, Journal of Computer Security, V11, P35
   Przymusinska H., 1990, Fundamenta Informaticae, V13, P51
   Przymusinski T., 1990, Fundamenta Informaticae, V13, P445
   Przymusinski T.C., 1988, DECLARATIVE SEMANTIC, P193
   RAMAKRISHNAN R, 1991, J LOGIC PROGRAM, V11, P189, DOI 10.1016/0743-1066(91)90026-L
   Rocha R, 2005, THEOR PRACT LOG PROG, V5, P161, DOI 10.1017/S1471068404002030
   Shen YD, 2001, THEOR PRACT LOG PROG, V1, P71, DOI 10.1017/S1471068400001010
   Stine K., 2008, SPECIAL PUBLICATION
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   TAMAKI H, 1986, LECT NOTES COMPUT SC, V225, P84
   Trevor J., 2001, Proceed- ings of the 20th ACM SIGMOD-SIGACT-SIGART Symposium on Principles of Database Systems, P28
   Trivellato D., 2011, P 12 INT C POL DISTR
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Vieille Laurent., 1987, PROC 4 INT C LOGIC P, P74
   Winsborough W.H., 2002, Anon. ACM Workshop on Privacy in the Electronic Society, Washington, DC, P41
   Winsborough W.H., 2000, DARPA INFORM SURVIVA, V1, P88
   Winslett M, 2003, LECT NOTES COMPUT SC, V2692, P275
   Yu T, 2003, P IEEE S SECUR PRIV, P110, DOI 10.1109/SECPRI.2003.1199331
   Zhang CC, 2008, LECT NOTES COMPUT SC, V5283, P282
   Zhou Neng-Fa., 2003, PPDP'03: Proceedings of the 5th ACM SIGPLAN International Conference on Principles and Practice of Declarative Programming, P275
   [No title captured]
NR 57
TC 9
Z9 11
U1 0
U2 10
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2014
VL 14
BP 293
EP 337
DI 10.1017/S1471068412000397
PN 3
PG 45
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA AK3AI
UT WOS:000338293500002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Giordano, L
   Martelli, A
   Dupré, DT
AF Giordano, Laura
   Martelli, Alberto
   Dupre, Daniele Theseider
TI Reasoning about actions with Temporal Answer Sets
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Answer Set Programming; Temporal Logic; Bounded Model Checking
ID KNOWLEDGE
AB In this paper, we combine Answer Set Programming (ASP) with Dynamic Linear Time Temporal Logic (DLTL) to define a temporal logic programming language for reasoning about complex actions and infinite computations. DLTL extends propositional temporal logic of linear time with regular programs of propositional dynamic logic, which are used for indexing temporal modalities. The action language allows general DLTL formulas to be included in domain descriptions to constrain the space of possible extensions. We introduce a notion of Temporal Answer Set for domain descriptions, based on the usual notion of Answer Set. Also, we provide a translation of domain descriptions into standard ASP and use Bounded Model Checking (BMC) techniques for the verification of DLTL constraints.
C1 [Giordano, Laura; Dupre, Daniele Theseider] Univ Piemonte Orientale, Dipartimento Informat, Alessandria, Italy.
   [Martelli, Alberto] Univ Turin, Dipartimento Informat, I-10149 Turin, Italy.
C3 University of Eastern Piedmont Amedeo Avogadro; University of Turin
RP Giordano, L (corresponding author), Univ Piemonte Orientale, Dipartimento Informat, Alessandria, Italy.
EM laura@mfn.unipmn.it; mrt@di.unito.it; dtd@mfn.unipmn.it
OI GIORDANO, Laura/0000-0001-9445-7770; Theseider Dupre,
   Daniele/0000-0001-6798-4380
FU Regione Piemonte, Project ICT4LAW
FX We thank the anonymous referees for their helpful comments. This work
   has been partially supported by Regione Piemonte, Project ICT4LAW (ICT
   Converging on Law: Next Generation Services for Citizens, Enterprises,
   Public Administration and Policymakers).
CR [Anonymous], 2005, ICAPS
   [Anonymous], 2006, KR
   Bacchus F, 2000, ARTIF INTELL, V116, P123, DOI 10.1016/S0004-3702(99)00071-5
   Bacchus F, 1998, ANN MATH ARTIF INTEL, V22, P5, DOI 10.1023/A:1018985923441
   Balduccini M, 2003, THEOR PRACT LOG PROG, V3, P425, DOI 10.1017/S1471068403001807
   Baral C, 2000, SPRINGER INT SER ENG, V597, P257
   Baral C, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P236
   Biere A, 2003, ADV COMPUT, V58, P117
   Bonatti PA, 2004, ARTIF INTELL, V156, P75, DOI [10.1016/j.artint.2004.02.001, 10.1016/j.artint.2004.02.002]
   Classen J., 2008, KR, P589
   D'Aprile D, 2010, LECT NOTES ARTIF INT, V6245, P99, DOI 10.1007/978-3-642-14977-1_10
   DENECKER M, 1998, ELECT T ARTIFICIAL I, V2, P25
   Eiter T., 2004, ACM Transactions on Computational Logic, V5, P206, DOI 10.1145/976706.976708
   Eiter T, 2003, ARTIF INTELL, V144, P157, DOI 10.1016/S0004-3702(02)00367-3
   GELFOND M, 1993, J LOGIC PROGRAM, V17, P301, DOI 10.1016/0743-1066(93)90035-F
   Gelfond M., 2007, HDB KNOWLEDGE REPRES
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Gerevini Alfonso., 2005, TECHNICAL REPORT
   Giordano L., 2007, Journal of Applied Logic. vol, V5, P214
   Giordano L., 2001, LOG J IGPL, V9, P289
   Giordano L, 2006, ANN MATH ARTIF INTEL, V46, P289, DOI 10.1007/s10472-006-9020-7
   Giunchiglia E, 2004, ARTIF INTELL, V153, P49, DOI [10.1016/j.artint.2002.12.001, 10.1016/j.artint.2003.12.001]
   Giunchiglia E, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P623
   Giunchiglia E., 2000, INT C PRINC KNOWL RE, P657
   Giunchiglia Fausto., 1999, EUROPEAN C PLANNING, V1809, P1
   Heljanko K, 2003, THEOR PRACT LOG PROG, V3, P519, DOI 10.1017/S1471068403001790
   Henriksen JG, 1999, ANN PURE APPL LOGIC, V96, P187, DOI 10.1016/S0168-0072(98)00039-6
   Kabanza F, 1997, ARTIF INTELL, V95, P67, DOI 10.1016/S0004-3702(97)00031-3
   Lago UD, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P447
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Levesque HJ, 1997, J LOGIC PROGRAM, V31, P59, DOI 10.1016/S0743-1066(96)00121-5
   LIFSCHITZ V, 1990, ARTIF INTELL, V46, P365, DOI 10.1016/0004-3702(90)90021-Q
   Nebel B., 2001, P INT JOINT C ART IN, P479
   Panati A., 2001, AI*IA 2001: Advances in Artificial Intelligence. 7th Congress of the Italian Association for Artificial Intelligence. Proceedings (Lecture Notes in Artificial Intelligence Vol.2175), P135
   Panati A, 2000, FR ART INT, V54, P176
   Phan HT, 2011, ARTIF INTELL, V175, P79, DOI 10.1016/j.artint.2010.04.007
   Son TC, 2006, ACM T COMPUT LOG, V7, P613, DOI 10.1145/1183278.1183279
   Son TC, 2006, THEOR PRACT LOG PROG, V6, P559, DOI 10.1017/S1471068406002717
NR 38
TC 11
Z9 12
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2013
VL 13
SI SI
BP 201
EP 225
DI 10.1017/S1471068411000639
PN 2
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 102TP
UT WOS:000315867300004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Maier, F
AF Maier, Frederick
TI Interdefinability of defeasible logic and logic programming under the
   well-founded semantics
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE defeasible logic; logic programming; well-founded semantics; stable
   model semantics; ambiguity blocking and propagation
ID INHERITANCE
AB We provide a method of translating theories of Nute's defeasible logic into logic programs, and a corresponding translation in the opposite direction. Under certain natural restrictions, the conclusions of defeasible theories under the ambiguity propagating defeasible logic ADL correspond to those of the well-founded semantics for normal logic programs, and so it turns out that the two formalisms are closely related. Using the same translation of logic programs into defeasible theories, the semantics for the ambiguity blocking defeasible logic NDL can be seen as indirectly providing an ambiguity blocking semantics for logic programs. We also provide antimonotone operators for both ADL and NDL, each based on the Gelfond-Lifschitz (GL) operator for logic programs. For defeasible theories without defeaters or priorities on rules, the operator for ADL corresponds to the GL operator and so can be seen as partially capturing the consequences according to ADL. Similarly, the operator for NDL captures the consequences according to NDL, though in this case no restrictions on theories apply. Both operators can be used to define stable model semantics for defeasible theories.
C1 Wright State Univ, Dept Comp Sci & Engn, Knoesis Ctr, Dayton, OH 45435 USA.
C3 University System of Ohio; Wright State University Dayton
RP Maier, F (corresponding author), Wright State Univ, Dept Comp Sci & Engn, Knoesis Ctr, 3640 Colonel Glenn Hwy, Dayton, OH 45435 USA.
EM fred@knoesis.org
CR Antoniou G, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P405
   Antoniou G, 2000, FRONT ARTIF INTEL AP, V54, P459
   Antoniou G., 2001, ACM T COMPUT LOG, V2, P255, DOI [DOI 10.1145/371316.371517, 10.1145/371316.371517]
   Antoniou G, 2006, THEOR PRACT LOG PROG, V6, P703, DOI 10.1017/S1471068406002778
   Antoniou G, 2006, INT J INTELL SYST, V21, P545, DOI 10.1002/int.20147
   Antoniou Grigoris, 2001, LNCS, V2256, P13
   BARAL CR, 1993, J AUTOM REASONING, V10, P399, DOI 10.1007/BF00881799
   Billington D, 2005, LECT NOTES ARTIF INT, V3809, P812
   Billington D, 2005, LECT NOTES ARTIF INT, V3809, P796
   Billington D., 1993, Journal of Logic and Computation, V3, P379, DOI 10.1093/logcom/3.4.379
   Billington D., 2001, Studia Logica, V67, P243, DOI 10.1023/A:1010551204574
   Billington D., 1990, Journal of Experimental and Theoretical Artificial Intelligence, V2, P151, DOI 10.1080/09528139008953720
   Billington D., 2004, P 10 INT WORKSH NONM, P65
   Billington D, 2008, LECT NOTES ARTIF INT, V5293, P34, DOI 10.1007/978-3-540-87803-2_5
   Billington D, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P256
   Brewka G, 1996, J ARTIF INTELL RES, V4, P19, DOI 10.1613/jair.284
   Brewka G., 2001, LECT NOTES COMPUTER, P121
   Donnelly S., 1999, THESIS U GEORGIA ATH
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Governatori G., 2000, PRICAI 2000. Topics in Artificial Intelligence. 6th Pacific Rim International Conference on Artificial Intelligence. Proceedings (Lecture Notes in Artificial Intelligence Vol.1886), P27
   Governatori G, 2004, J LOGIC COMPUT, V14, P675, DOI 10.1093/logcom/14.5.675
   HORTY JF, 1990, ARTIF INTELL, V42, P311, DOI 10.1016/0004-3702(90)90057-7
   KUNEN K, 1987, J LOGIC PROGRAM, V4, P289, DOI 10.1016/0743-1066(87)90007-0
   Maher M. J., 2001, International Journal on Artificial Intelligence Tools (Architectures, Languages, Algorithms), V10, P483, DOI 10.1142/S0218213001000623
   Maher MJ, 1999, SIXTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-99)/ELEVENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE (IAAI-99), P299
   Maier F, 2006, LECT NOTES ARTIF INT, V4160, P306, DOI 10.1007/11853886_26
   Maier F, 2010, SYNTHESE, V176, P243, DOI 10.1007/s11229-009-9492-1
   MAKINSON D, 1991, ARTIF INTELL, V48, P199, DOI 10.1016/0004-3702(91)90061-N
   Nute D, 2003, LECT NOTES ARTIF INT, V2543, P151
   Nute D, 1997, SYNTH LIBR, V263, P287
   Nute D, 1999, FR ART INT, V49, P201
   Nute D., 1994, Handbook of Logic in Artificial Intelligence and Logic Programming, V3, P353
   Nute D., 1986, 010013 ACMC U GEORG
   Nute D., 1989, P TUB WORKSH SEM NET, VI, P69
   REITER R, 1980, ARTIF INTELL, V13, P81, DOI 10.1016/0004-3702(80)90014-4
   Sagonas K., 1994, SIGMOD Record, V23, P442, DOI 10.1145/191843.191927
   SCHAUB T, 2002, P WORKSH NONM REAS, P238
   Syrjanen Tommi., 2001, LP-NMR'01: Proceedings of the 6th International Conference on Logic Programming and Nonmonotonic Reasoning, P434, DOI DOI 10.1007/3-540-45402-038
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   [No title captured]
NR 43
TC 5
Z9 5
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2013
VL 13
BP 107
EP 142
DI 10.1017/S147106841100041X
PN 1
PG 36
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 067KP
UT WOS:000313293200004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Nguyen, PL
   Demoen, B
AF Nguyen, Phuong-Lan
   Demoen, Bart
TI Representation sharing for Prolog
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Prolog; WAM; memory management
ID GARBAGE COLLECTION
AB Representation sharing can reduce the memory footprint of a program by sharing one representation between duplicate terms. The most common implementation of representation sharing in functional programming systems is known as hash-consing. In the context of Prolog, representation sharing has been given little attention. Some current techniques that deal with representation sharing are reviewed. The new contributions are (1) an easy implementation of input sharing for findall/3; and (2) a description of a sharer module that introduces representation sharing at runtime. Their realization is shown in the context of the Warren Abstract Machine (WAM) as implemented by hProlog. Both can be adapted to any WAM-like Prolog implementation. The sharer works independently of the garbage collector, but it can be made to cooperate with the garbage collector. Benchmark results show that the sharer has a cost comparable to the heap garbage collector, that its effectiveness is highly application-dependent, and that its policy must be tuned to the collector.
C1 [Nguyen, Phuong-Lan] UCO, Inst Appl Math, Angers, France.
   [Demoen, Bart] Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
C3 KU Leuven
RP Nguyen, PL (corresponding author), UCO, Inst Appl Math, Angers, France.
EM nguyen@ima.uco.fr; bart.demoen@cs.kuleuven.be
FU Research Foundation Flanders (FWO) [G.0221.07];  [GOA/08/008]
FX We thank the anonymous referees, as their suggestions have considerably
   improved the paper. The second author acknowledges support from project
   "GOA/08/008 Probabilistic Logic Learning," and from the Research
   Foundation Flanders (FWO) through projects "WOG: Declarative Methods in
   Computer Science" and "G.0221.07 Platform independent analysis and
   implementation of Constraint Handling Rules."
CR Ait-Kaci H., 1991, WARRENS ABSTRACT MAC
   APPEL AW, 1993, CSTR41293 PRINC U
   APPLEBY K, 1988, COMMUN ACM, V31, P719, DOI 10.1145/62959.62968
   BAKER H. G., 1992, SIGPLAN LISP POINTER, V3, P13
   Bevemyr J., 1994, Programming Language Implementation and Logic Programming. 6th International Symposium, PLILP '94. Proceedings, P88
   Blockeel H., 2000, Inductive Logic Programming. 10th International Conference, ILP 2000. Proceedings (Lecture Notes in Artificial Intelligence Vol.1866), P60
   BOEHM HJ, 1988, SOFTWARE PRACT EXPER, V18, P807, DOI 10.1002/spe.4380180902
   CARLSSON M., 1990, THESIS ROYAL I TECHN
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   Clocksin W.F., 1984, PROGRAMMING PROLOG
   Demoen B, 2002, LECT NOTES COMPUT SC, V2401, P179, DOI 10.1007/3-540-45619-8_13
   Demoen B, 2000, LECT NOTES ARTIF INT, V1861, P1240
   ERSHOV AP, 1958, COMMUN ACM, V1, P3, DOI 10.1145/368892.368907
   Gabriel Richard P., 1985, Performance and evaluation of LISP systems
   Goto Eiichi, 1974, Technical Report
   GRIMLEY-EVANS E., 1995, FINDALL 3 COPYING
   Gutmann B, 2006, LECT NOTES COMPUT SC, V4212, P174
   HIRSCH M., 1987, CONCURRENT PROLOG CO, V2, P28
   MARIEN A, 1993, LOGIC PROGRAMM, P408
   NEUMERKEL U., 1989, THESIS TU WIEN AUSTR
   O'Keefe RA, 2001, THEOR PRACT LOG PROG, V1, P617, DOI 10.1017/S1471068401001065
   Reade Chris., 1989, Elements of functional programming
   Sagonas K., 1994, SIGMOD Record, V23, P442, DOI 10.1145/191843.191927
   SAHLIN D., 1991, SICSR911907
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   TARAU P, 1992, LECT NOTES COMPUT SC, V637, P344
   TARAU P, 1991, P LOGIC PROGRAMMING, P119
   Tarau P, 2009, LECT NOTES COMPUT SC, V5418, P137, DOI 10.1007/978-3-540-92995-6_10
   Vandeginste R., 2002, Practical Aspects of Declarative Languages. 4th International Symposium, PADL 2002. Proceedings (Lecture Notes in Computer Science Vol.2257), P299
   VANROY P, 1992, COMPUTER, V25, P54, DOI 10.1109/2.108055
   Wallace M., 1997, ICL Systems Journal, V12, P159
   Warren D.H.D., 1983, 309 SRI
   Wielemaker J, 2008, THEOR PRACT LOG PROG, V8, P363, DOI 10.1017/S1471068407003237
NR 33
TC 1
Z9 1
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2013
VL 13
BP 71
EP 106
DI 10.1017/S1471068411000421
PN 1
PG 36
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 067KP
UT WOS:000313293200003
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Wielemaker, J
   Schrijvers, T
   Triska, M
   Lager, T
AF Wielemaker, Jan
   Schrijvers, Tom
   Triska, Markus
   Lager, Torbjorn
TI SWI-Prolog
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Prolog; logic programming system
ID CONSTRAINT HANDLING RULES; IMPLEMENTATION
AB SWI-Prolog is neither a commercial Prolog system nor a purely academic enterprise, but increasingly a community project. The core system has been shaped to its current form while being used as a tool for building research prototypes, primarily for knowledge-intensive and interactive systems. Community contributions have added several interfaces and the constraint (CLP) libraries. Commercial involvement has created the initial garbage collector, added several interfaces and two development tools: PlDoc (a literate programming documentation system) and PlUnit (a unit testing environment).
   In this article, we present SWI-Prolog as an integrating tool, supporting a wide range of ideas developed in the Prolog community and acting as glue between foreign resources. This article itself is the glue between technical articles on SWI-Prolog, providing context and experience in applying them over a longer period.
C1 [Wielemaker, Jan] Vrije Univ Amsterdam, Fac Sci, NL-1081 HV Amsterdam, Netherlands.
   [Schrijvers, Tom] Univ Ghent, Dept Appl Math & Comp Sci, B-9000 Ghent, Belgium.
   [Triska, Markus] Vienna Univ Technol, Inst Informat Syst 184 2, Abt Datenbanken & Artificial Intelligence, A-1040 Vienna, Austria.
   [Lager, Torbjorn] Univ Gothenburg, Dept Philosophy Linguist & Theory Sci, S-40530 Gothenburg, Sweden.
C3 Vrije Universiteit Amsterdam; Ghent University; Technische Universitat
   Wien; University of Gothenburg
RP Wielemaker, J (corresponding author), Vrije Univ Amsterdam, Fac Sci, De Boelelaan 1081A, NL-1081 HV Amsterdam, Netherlands.
EM J.Wielemaker@cs.vu.nl; Tom.Schrijvers@ugent.be;
   triska@dbai.tuwien.ac.at; lager@ling.gu.se
RI Schrijvers, Tom/A-6696-2016
OI Schrijvers, Tom/0000-0001-8771-5559; Wielemaker, Jan/0000-0001-5574-5673
CR Ambler S., 2002, MAPPING OBJECTS RELA
   ANJEWIERDEN A, 1990, FR ART INT, P41
   APPLEBY K, 1988, COMMUN ACM, V31, P719, DOI 10.1145/62959.62968
   Bellifemine F, 2001, SOFTWARE PRACT EXPER, V31, P103, DOI 10.1002/1097-024X(200102)31:2<103::AID-SPE358>3.0.CO;2-O
   BENDISPOSTO J., 2009, SEMANTICS AWARE EDIT
   BOWEN D. L., 1983, P LOG PROGR WORKSH 8
   Calejo M, 2004, LECT NOTES COMPUT SC, V3229, P714, DOI 10.1007/978-3-540-30227-8_64
   da Silva AF, 2007, LECT NOTES COMPUT SC, V4670, P410
   DEKONINCK L, 2006, WLP, P91
   Demoen B., 2002, 350 CW KU LEUV DEP C
   DRAXLER C., 1991, ALPUK9U P 3 UK ANN C, P156
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Graham S. L., 1982, SIGPLAN Notices, V17, P120, DOI 10.1145/872726.806987
   Holzbaur C, 2000, APPL ARTIF INTELL, V14, P369, DOI 10.1080/088395100117043
   HOLZBAUR C, 1992, TR9223 AUSTR RES I A
   Lassila Ora, 1998, W3C Recommendation
   NEUMERKEL U., 1993, BINARY WAM SIMPLIFIE
   Oren Eyal., 2007, Proceedings of the 16th international conference on World Wide Web, P817
   Pereira Fernando C. N., 1987, CSLI Lecture Notes
   Raymond E., 1999, CATHEDRAL BAZAAR MUS
   Schrijvers T, 2004, LECT NOTES COMPUT SC, V3132, P120, DOI 10.1007/978-3-540-27775-0_9
   Schrijvers T., 2005, Ph.D. thesis
   SCHRIJVERS T., 2005, W C LP 05, V2005-01
   Schrijvers T, 2004, P CHR 04 SEL CONTR T, P8
   Schrijvers T, 2008, LECT NOTES COMPUT SC, V5366, P693, DOI 10.1007/978-3-540-89982-2_59
   Szabó P, 2006, LECT NOTES COMPUT SC, V4079, P257, DOI 10.1007/11799573_20
   TARAU P, 2008, LOGIC ENGINES INTERA
   TRISKA M., 2009, WLPE 2009 UD IT
   Wallace M, 1999, LECT NOTES COMPUT SC, V1551, P365
   Wielemaker J, 2003, LECT NOTES COMPUT SC, V2916, P331, DOI 10.1007/978-3-540-24599-5_23
   Wielemaker J, 2003, LECT NOTES COMPUT SC, V2870, P644
   WIELEMAKER J., 2008, P CICLOPS 08 UD IT
   Wielemaker J., 2002, P 12 INT WORKSH LOG, P97
   Wielemaker J, 2007, P 17 WORKSH LOG BAS, P16
   Wielemaker J, 2008, THEOR PRACT LOG PROG, V8, P363, DOI 10.1017/S1471068407003237
   Wielemaker J, 2008, LECT NOTES COMPUT SC, V5318, P695, DOI 10.1007/978-3-540-88564-1_44
NR 36
TC 240
Z9 268
U1 0
U2 11
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2012
VL 12
BP 67
EP 96
DI 10.1017/S1471068411000494
PN 1-2
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 886XS
UT WOS:000299888500004
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Greco, S
   Molinaro, C
   Trubitsyna, I
   Zumpano, E
AF Greco, Sergio
   Molinaro, Cristian
   Trubitsyna, Irina
   Zumpano, Ester
TI NP Datalog: A logic language for expressing NP search and optimization
   problems
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic languages; stable model semantics; constraint programming;
   expressivity and complexity of declarative query languages
ID APPROXIMATION; SPECIFICATION; SEMANTICS; PROGRAM; SYSTEM
AB This paper presents a logic language for expressing NP search and optimization problems. Specifically, first a language obtained by extending (positive) DATALOG with intuitive and efficient constructs (namely, stratified negation, constraints, and exclusive disjunction) is introduced. Next, a further restricted language only using a restricted form of disjunction to define (nondeterministically) subsets (or partitions) of relations is investigated. This language, called NP Datalog, captures the power of DATALOG(-) in expressing search and optimization problems. A system prototype implementing NP Datalog is presented. The system translates NP Datalog queries into Optimization Programming Language (OPL) programs which are executed by the ILOG OPL Development Studio. Our proposal combines easy formulation of problems, expressed by means of a declarative logic language, with the efficiency of the ILOG System. Several experiments show the effectiveness of this approach.
C1 [Greco, Sergio; Molinaro, Cristian; Trubitsyna, Irina; Zumpano, Ester] Univ Calabria, DEIS, I-87036 Arcavacata Di Rende, Italy.
C3 University of Calabria
RP Greco, S (corresponding author), Univ Calabria, DEIS, I-87036 Arcavacata Di Rende, Italy.
EM greco@deis.unical.it; cmolinaro@deis.unical.it; irina@deis.unical.it;
   zumpano@deis.unical.it
RI Molinaro, Cristian/AAI-5465-2021; Trubitsyna, Irina/AAY-7265-2020
OI Molinaro, Cristian/0000-0003-4103-1084; TRUBITSYNA,
   Irina/0000-0002-9031-0672; Greco, Sergio/0000-0003-2966-3484
CR ABITEROUL S, 1995, FDN DATABASES
   BALDUCCINI M, 2000, P 12 INT C SOFTW ENG, P63
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Cadoli M, 2005, ARTIF INTELL, V162, P89, DOI 10.1016/j.artint.2004.01.006
   Cadoli M, 2000, COMPUT LANG, V26, P165, DOI 10.1016/S0096-0551(01)00010-8
   Cholewinski P, 1996, MOR KAUF R, P518
   Denecker M, 2000, LECT NOTES ARTIF INT, V1861, P703
   East D, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P163
   East D, 2006, ACM T COMPUT LOG, V7, P38, DOI 10.1145/1119439.1119441
   Eiter T, 1997, LECT NOTES ARTIF INT, V1265, P363
   Fagin R., 1974, Complexity of Computation, P43
   Finkel R, 2004, SOFTWARE PRACT EXPER, V34, P1481, DOI 10.1002/spe.623
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gelfond M, 2002, LECT NOTES ARTIF INT, V2408, P413
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Greco S, 1997, LOGIC PROGRAMM, P181
   Greco S, 2002, LECT NOTES ARTIF INT, V2408, P61
   Greco S, 2001, THEOR PRACT LOG PROG, V1, P381, DOI 10.1017/S1471068401001090
   Greco S, 1999, IEEE T KNOWL DATA EN, V11, P265, DOI 10.1109/69.761663
   GRECO S, 1995, LNCS, V893, P574
   JAFFAR J, 1992, ACM T PROGR LANG SYS, V14, P339, DOI 10.1145/129393.129398
   Johnson D. S., 1990, Algorithms and Complexity, VA, P67
   Kluzniak F, 1997, SCI COMPUT PROGRAM, V28, P193, DOI 10.1016/S0167-6423(96)00021-4
   KOLAITIS PG, 1991, J COMPUT SYST SCI, V43, P125, DOI 10.1016/0022-0000(91)90033-2
   KOLAITIS PG, 1995, J COMPUT SYST SCI, V50, P391, DOI 10.1006/jcss.1995.1031
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lierler Y, 2005, LECT NOTES ARTIF INT, V3662, P447, DOI 10.1007/11546207_44
   LIERLER Y, 2005, CEUR WORKSH P, V142, P85
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   MARF KW, 1991, J ACM, V38, P588
   Mariën M, 2004, LECT NOTES COMPUT SC, V3229, P108, DOI 10.1007/978-3-540-30227-8_12
   Marriott K., 1998, PROGRAMMING CONSTRAI
   Niemelä I, 1999, LECT NOTES ARTIF INT, V1730, P317, DOI 10.1007/3-540-46767-X_23
   Papadimitriou C. H., 1994, Computational Complexity
   PAPADIMITRIOU CH, 1991, J COMPUT SYST SCI, V43, P425, DOI 10.1016/0022-0000(91)90023-X
   PARNIAMMUOU CH, 1982, COMBINATORIAL OPTIMI
   Rao P., 1997, LECT NOTES COMPUTER, V1265, P431
   Sacca D, 1997, J COMPUT SYST SCI, V54, P441, DOI 10.1006/jcss.1997.1446
   SCHUPR J, 1995, J COMPUTER SYSTEM SC, V51, P64
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   SMITH DR, 1990, IEEE T SOFTWARE ENG, V16, P1024, DOI 10.1109/32.58788
   ULLMAN J, 1988, PRINCIPLES DATA KNOW
   Van Hentenryck P, 1999, LECT NOTES COMPUT SC, V1702, P98
   Van Roy P, 1999, LOGIC PROGRAMM, P38
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   VANHENTENRYCK P, 1988, OPL OPTIMIZATION PRO
   Wallace M, 1999, LECT NOTES COMPUT SC, V1551, P365
   ZHOU N, 2002, INTELLIGENT INF PROC, P249
   ZUMPANO E, 2004, P ACM S APPL COMP, P692
NR 49
TC 13
Z9 13
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2010
VL 10
BP 125
EP 166
DI 10.1017/S1471068409990251
PN 2
PG 42
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 574LM
UT WOS:000275990700001
DA 2024-07-18
ER

PT J
AU Vennekens, J
   Denecker, M
   Bruynooghe, M
AF Vennekens, Joost
   Denecker, Marc
   Bruynooghe, Maurice
TI CP-logic: A language of causal probabilistic events and its relation to
   logic programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE uncertainty; causality; probabilistic logic programming
ID WELL-FOUNDED SEMANTICS
AB This paper develops a logical language for representing probabilistic causal laws. Our interest in Such a language is two-fold. First, it can be motivated as a fundamental study of the representation of causal knowledge. Causality has an inherent dynamic aspect, which has been studied at the semantical level by Shafer in his framework of probability trees. In such a dynamic context, where the evolution of a domain over time is considered, the idea of a causal law as something which guides this evolution is quite natural. In our formalization, a set of probabilistic causal laws can be used to represent a class of probability trees in a concise, flexible and modular way. In this way, Our work extends Shafer's by offering a convenient logical representation for his semantical objects. Second, this language also has relevance for the area of probabilistic logic programming. In particular, we prove that the formal semantics of a theory in Our language can be equivalently defined as a probability distribution over the well-founded models of certain logic programs, rendering it formally quite similar to existing languages Such as ICL or PRISM. Because we can motivate and explain Our language in a completely self-contained way as a representation of probabilistic causal laws, this provides a new way of explaining the intuitions behind such probabilistic logic programs: we can say precisely which knowledge such a program expresses, in terms that are equally understandable by a non-logician. Moreover, we also obtain an additional piece of knowledge representation methodology for probabilistic logic programs, by showing how they call express probabilistic causal laws.
C1 [Vennekens, Joost; Denecker, Marc; Bruynooghe, Maurice] Katholieke Univ Leuven, Dept Comp Sci, B-3001 Louvain, Belgium.
C3 KU Leuven
RP Vennekens, J (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Celestijnenlaan 200A, B-3001 Louvain, Belgium.
EM joost@cs.kuleuven.be; marcd@cs.kuleuven.be; maurice@cs.kuleuven.be
RI Denecker, Marc/O-1056-2013; Vennekens, Joost/ABE-6600-2020; Bruynooghe,
   Maurice/A-6196-2014; Vennekens, Joost/A-3571-2015
OI Denecker, Marc/0000-0002-0422-7339; Vennekens,
   Joost/0000-0002-0791-0176; Bruynooghe, Maurice/0000-0002-6881-1462;
   Vennekens, Joost/0000-0002-0791-0176
CR [Anonymous], 2007, INTRO STAT RELATIONA
   [Anonymous], 1996, The art of causal conjecture
   [Anonymous], 2003, P 2 HAW INT C STAT R
   [Anonymous], 151 U FREIB I COMP S
   Baral C, 2004, LECT NOTES ARTIF INT, V2923, P21
   BARAL C, 2007, P IJCAI HYD IND
   BARAL C, THEORY PRAC IN PRESS, V9
   BARAL C, 2002, AAAI
   Blockeel H, 2007, LECT NOTES ARTIF INT, V4455, P94
   BRFESE J, 1992, COMPUT INTELL, V8, P624
   Costa V.S., 2003, Proceedings of the 19th Annual Conference on Uncertainty in Artificial Intelligence (UAI-03), P517
   Cussens J., 2000, P 16 ANN C UNC ART I, P115
   De Finetti B., 1937, Annales de l'institut Henri Poincare, V7, P1
   De Raedt L, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2468
   Dekhtyar A, 2000, J LOGIC PROGRAM, V43, P187, DOI 10.1016/S0743-1066(99)00059-X
   Denecker M, 1998, LECT NOTES ARTIF INT, V1489, P1, DOI 10.1007/3-540-49545-2_1
   Denecker M., 2008, T COMPUTATIONAL LOGI, V9, P1
   Denecker M, 2007, LECT NOTES COMPUT SC, V4483, P84, DOI 10.1007/978-3-540-72200-7_9
   Fierens D, 2005, LECT NOTES ARTIF INT, V3625, P121
   FINZI A, 2003, P 19 C UNC ART INT U
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   GELFOND M, 1993, J LOGIC PROGRAM, V17, P301, DOI 10.1016/0743-1066(93)90035-F
   Gelfond M., 1998, Electronic Transactions on AI, V3, P16
   Getoor L, 2001, RELATIONAL DATA MINING, P307
   Ghahramani Z, 1998, LECT NOTES ARTIF INT, V1387, P168, DOI 10.1007/BFb0053999
   GIUNCHIGLIA E, 1998, P AAAI 98 MAD WISC U
   HALPERN J, 2001, P 17 C UNC ART INT U
   Jaeger M, 1997, P 13 C UNC ART INT U
   Kakas A. C., 1992, Journal of Logic and Computation, V2, P719, DOI 10.1093/logcom/2.6.719
   Kersting K., 2000, Proceedings of the Work-in-Progress Track at the 10th International Conference on Inductive Logic Programming, London, P138
   LAKSHMANAN LVS, 1994, MIT PS LOG, P254
   Lifschitz V., 1999, LPNMR
   LUKASIEWICZ T, 2001, LECT NOTES ARTIF INT, V2173, P336
   MARTINLOF P, 1982, P 6 INT C LOG METH P, P153
   McCain N., 1997, THESIS U TEXAS AUSTI
   MCCAIN N, 1996, P 13 NAT C ART INT 8, P460
   Meert W., 2007, P 6 INT WORKSH MULT, P93
   MUGGLETON S, 2000, ELECT T ARTFCIAL INT, V5, P141
   NG R, 1992, INFORM COMPUT, V101, P150, DOI 10.1016/0890-5401(92)90061-J
   Ngo L, 1997, THEOR COMPUT SCI, V171, P147, DOI 10.1016/S0304-3975(96)00128-4
   Pearl J., 1988, PROBABILISTIC REASON
   Pearl Judea, 2000, MODELS REASONING INF, V19, DOI DOI 10.1017/CBO9780511803161
   PINTO J, 1993, LOGIC PROGRAMM, P203
   Poole D, 1997, ARTIF INTELL, V94, P7, DOI 10.1016/S0004-3702(97)00027-1
   POOLE D, 1993, ARTIF INTELL, V64, P81, DOI 10.1016/0004-3702(93)90061-F
   Przymusinski T. C., 1991, New Generation Computing, V9, P401, DOI 10.1007/BF03037171
   RIGUZZI F, 2004, 14 INT C IND LOG PRO
   RTGUZZI F, 2007, 14 RCRA WORKSH EXPT
   SAKAMA C, 1994, J AUTOM REASONING, V13, P145, DOI 10.1007/BF00881915
   Sato T, 1997, INT JOINT CONF ARTIF, P1330
   TRAN N, 2004, AAAI
   VanBelleghem K, 1997, J LOGIC PROGRAM, V31, P3, DOI 10.1016/S0743-1066(96)00123-9
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Venn J., 1866, The Logic of Chance. An Essay on the Foundations and Province of the Theory of Probability, With Especial Reference to Its Application to Moral and Social Science, and to Statistics
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P431, DOI 10.1007/978-3-540-27775-0_30
   Vennekens J, 2006, LECT NOTES ARTIF INT, V4160, P452, DOI 10.1007/11853886_37
   [No title captured]
NR 57
TC 68
Z9 71
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2009
VL 9
BP 245
EP 308
DI 10.1017/S1471068409003767
PN 3
PG 64
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 477HA
UT WOS:000268508600001
DA 2024-07-18
ER

PT J
AU Baselice, S
   Bonatti, PA
   Criscuolo, G
AF Baselice, Sabrina
   Bonatti, Piero A.
   Criscuolo, Giovanni
TI On finitely recursive programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Answer set programming with infinite domains; infinite stable models;
   finitary programs; compactness; skeptical resolution
ID INFINITE STABLE MODELS; LOGIC PROGRAMS; SEMANTICS
AB Disjunctive finitary programs are a class of logic programs admitting function symbols and hence infinite domains. They have very good computational properties; for example, ground queries are decidable, while in the general case the stable model semantics are Pi(1)(1)-hard. In this paper we prove that a larger class of programs, called finitely recursive programs, preserve most of the good properties of finitary programs under the stable model semantics, which are as follows: (i) finitely recursive programs enjoy a compactness property; (ii) inconsistency checking and skeptical reasoning are semidecidable; (iii) skeptical resolution is complete for normal finitely recursive programs. Moreover, we show how to check inconsistency and answer skeptical queries using finite subsets of the ground program instantiation. We achieve this by extending the splitting sequence theorem by Lifschitz and Turner: we prove that if the input program P is finitely recursive, then the partial stable models determined by any smooth splitting omega-sequence converge to a stable model of P.
C1 [Baselice, Sabrina; Bonatti, Piero A.; Criscuolo, Giovanni] Univ Naples Federico 2, Naples, Italy.
C3 University of Naples Federico II
RP Baselice, S (corresponding author), Univ Naples Federico 2, Naples, Italy.
EM baselice@na.infn.it; bonatti@na.infn.it; vanni@na.infn.it
OI BONATTI, Piero Andrea/0000-0003-1436-5660
FU PRIN; Italian Ministry of Research (MIUR)
FX This work was partially supported by the PRIN project Enhancement and
   Applications of Disjunctive Logic Programming, funded by the Italian
   Ministry of Research (MIUR).
CR Baral C., 2003, KNOWLEDGE REPRESENTA
   Baselice S, 2007, LECT NOTES COMPUT SC, V4670, P89, DOI 10.1007/978-3-540-74610-2_7
   Bonatti PA, 2004, ARTIF INTELL, V156, P75, DOI [10.1016/j.artint.2004.02.001, 10.1016/j.artint.2004.02.002]
   Bonatti PA, 2002, LECT NOTES COMPUT SC, V2401, P333, DOI 10.1007/3-540-45619-8_23
   Bonatti PA, 2001, J AUTOM REASONING, V27, P391, DOI 10.1023/A:1011960831261
   BONATTI PA, 1993, 9359 CDTR TU VIENN C
   BONATTI PA, 2001, LECT NOTES ARTIF INT, V2173, P416
   Calimeri F, 2008, LECT NOTES COMPUT SC, V5366, P407, DOI 10.1007/978-3-540-89982-2_37
   EITER T., 1997, LPNMR, P364
   FAGES F, 1994, J METHODS LOGIC COMP, V1, P51
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   LIFSCHITZ V, 1994, INT C LOG PROGR, P23
   Lloyd J. W., 1984, Foundations of Logic Programming
   Marek V.W., 1998, CSLO9809032 CORR
   MAREK VW, 2001, LNCS, V2173, P107
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   NIEMELA I, 1997, LNCS, V1265, P421
   Simkus M, 2007, LECT NOTES ARTIF INT, V4790, P514, DOI 10.1007/978-3-540-75560-9_37
   Turner H, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P645
   TURNER H, 1994, SLP, P61
NR 21
TC 18
Z9 18
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2009
VL 9
BP 213
EP 238
DI 10.1017/S147106840900372X
PN 2
PG 26
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 429DK
UT WOS:000264900800003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pontelli, E
   Villaverde, K
   Guo, HF
   Gupta, G
AF Pontelli, Enrico
   Villaverde, Karen
   Guo, Hai-Feng
   Gupta, Gopal
TI PALS: Efficient or-parallel execution of Prolog on Beowulf clusters
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE or-parallelism; Beowulf clusters; order-sensitive predicates
AB This paper describes the development of the PALS system, an implementation of Prolog capable of efficiently exploiting or-parallelism on distributed-memory platforms-specifically Beowulf clusters. PALS makes use of a novel technique, called incremental stack-splitting. The technique proposed builds on the stack-splitting approach, previously described by the authors and experimentally validated on shared-memory systems, which in turn is an evolution of the stack-copying method used in a variety of parallel logic and constraint systems-e.g., MUSE, YAP, and Penny. The PALS system is the first distributed or-parallel implementation of Prolog based on the stack-splitting method ever realized. The results presented confirm the superiority of this method as a simple yet effective technique to transition from shared-memory to distributed-memory systems. PALS extends stack-splitting by combining it with incremental copying; the paper provides a description of the implementation of PALS, including details of how distributed scheduling is handled. We also investigate methodologies to effectively support order-sensitive predicates (e.g., side-effects) in the context of the stack-splitting scheme. Experimental results obtained from running PALS on both Shared Memory and Beowulf systems are presented and analyzed.
C1 [Pontelli, Enrico; Villaverde, Karen] New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88003 USA.
   [Guo, Hai-Feng] Univ Nebraska, Dept Comp Sci, Lincoln, NE 68583 USA.
   [Gupta, Gopal] Univ Texas Dallas, Dept Comp Sci, Richardson, TX USA.
C3 New Mexico State University; University of Nebraska System; University
   of Nebraska Lincoln; University of Texas System; University of Texas
   Dallas
RP Pontelli, E (corresponding author), New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88003 USA.
EM epontell@cs.rimsu.edu; kvillave@cs.rimsu.edu;
   haifengguo@mail.unomaha.edu; gupta@utdallas.edu
RI Pontelli, Enrico/AAJ-5161-2021
OI Pontelli, Enrico/0000-0002-7753-1737
CR ALI KAM, 1990, INT J PARALLEL PROG, V19, P129, DOI 10.1007/BF01407834
   ALI KAM, 1988, P 5 INT C S LOG PROG, P1531
   ALSHAWI DB, 1988, 5 INT C S LOG PROGR, P1578
   [Anonymous], 1988, International Symposium on Logic Programming
   APT AR, 1997, LOGIC PROGRAMMING PR
   Araujo L., 1997, Euro-Par '97 Parallel Processing. Third International Euro-Par Conference. Proceedings, P1173
   Araujo L, 1997, J LOGIC PROGRAM, V33, P49, DOI 10.1016/S0743-1066(96)00117-3
   BABU H, 1996, THESIS NEW MEXICO ST
   Balduccini M, 2005, PARALLEL COMPUT, V31, P608, DOI 10.1016/j.parco.2005.03.004
   BEAUMONT T, 1993, LOGIC PROGRAMM, P135
   BENJUMEA V, 1993, INT S PROGR LANG IMP, P291
   Briat J., 1992, Implementations of Distributed Prolog, P45
   BUTLER R, 1988, P INT C S LOG PROGR, P1565
   CASTRO LF, 1999, P EUROPAR, P899
   Chassin J., 1994, COMPUT SURV, V26, P295
   CLOCKSIN WF, 1988, NEW GENERAT COMPUT, V5, P361, DOI 10.1007/BF03037415
   CONERY J, 1987, INT S LOG PROGR IEEE, P457
   CONERY J, 1981, P ACM C FUNCTIONAL P, P163
   FOONG WK, 1995, THESIS U MELBOURNE
   GANGULY S, 1990, P ACM SIGMOD C MAN D
   GUPTA G, 1993, ACM T PROGR LANG SYS, V15, P659, DOI 10.1145/155183.155220
   Gupta G, 1999, LOGIC PROGRAMM, P290
   GUPTA G, 1997, INT PAR PROC S LOS A
   GUPTA G, 1996, 8 INT S PAR DISTR PR
   GUPTA G, 1999, ACM T PROGR LANG SYS, V23, P472
   GUPTA G, 1994, MULTIPROCESSOR EXECU
   Hausman B., 1988, International Conference on Fifth Generation Computer Systems 1988, P831
   KACI HA, 1991, WARRENS ABSTRACT MAC
   Kowalski Robert, 1979, Logic for Problem Solving
   LAI TH, 1984, COMMUN ACM, V27, P594, DOI 10.1145/358080.358103
   Lloyd J. W., 2012, Foundations of Logic Programming
   LUSK E, 1990, NEW GENERAT COMPUT, V7, P243, DOI 10.1007/BF03037208
   MISRA J, 1983, ANN S PRINCIPLES DIS, P290
   Montelius J, 1996, NEW GENERAT COMPUT, V14, P31, DOI 10.1007/BF03037217
   Perron L, 1999, LECT NOTES COMPUT SC, V1713, P346
   Pontelli E, 2003, LECT NOTES COMPUT SC, V2562, P37
   Pontelli E, 2002, COMPUT LANG SYST STR, V28, P181, DOI 10.1016/S0096-0551(02)00004-8
   PONTELLI E, 2001, LNCS, V1990, P288
   Ranjan D, 1999, NEW GENERAT COMPUT, V17, P285, DOI 10.1007/BF03037223
   Ranjan D, 2000, ACTA INFORM, V37, P21, DOI 10.1007/PL00013301
   RAO VN, 1987, INT J PARALLEL PROG, V16, P479, DOI 10.1007/BF01389000
   ROCHA R, 1999, P PORT C ART INT EPI, P136
   ROCHA R, 1999, LECT NOTES ARTIF INT, V1695, P178
   Schulte C, 1999, LOGIC PROGRAMM, P275
   Schulte C., 2000, Proceedings of Techniques for Implementing Constraint Programming Systems, Post-conference workshop of CP 2000, TRA9/00, P41
   Silva F, 2000, J LOGIC PROGRAM, V43, P173, DOI 10.1016/S0743-1066(99)00064-3
   Sindaha R. Y., 1992, Proceedings of the Fourth IEEE Symposium on Parallel and Distributed Processing (Cat. No.92TH0492-9), P296, DOI 10.1109/SPDP.1992.242731
   SZEREDI P, 1991, P INT LOG PROGR S, P355
   VILLAVERDE K, 2001, METHODOLOGY ORDER SE
   VILLAVERDE K, 2001, INT C PAR PROC IEEE
   VILLAVERDE K, 2002, THESIS NEW MEXICO ST
   VILLAVERDE K, 2001, P INT C LOG PROGR
   WARREN D, 1988, 5 GENERATION COMPUTE, P943
   Warren D. H. D., 1987, Proceedings of the 1987 Symposium on Logic Programming (Cat. No.87CH2472-9), P92
   Wolfe M.J., 1996, High Performance Compilers For Parallel Computing
   WOLFSON G, 1988, P SIGMOD INT C MAN D, P329
   Zima Hans., 1991, SUPERCOMPILERS PARAL
   [No title captured]
NR 58
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2007
VL 7
BP 633
EP 695
DI 10.1017/S1471068406002985
PN 6
PG 63
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 239ZR
UT WOS:000251557300001
DA 2024-07-18
ER

PT J
AU Mesnard, F
   Bagnara, R
AF Mesnard, F
   Bagnara, R
TI cTI: a constraint-based termination inference tool for ISO-Prolog -
   Technical note
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE termination inference; termination analysis; logic programming; abstract
   interpretation
ID ABSTRACT INTERPRETATION; LOGIC PROGRAMS
AB We present cTI, the first system for universal left-termination inference of logic programs. Termination inference generalizes termination analysis and checking. Traditionally, a termination analyzer tries to prove that a given class of queries terminates. This class must be provided to the system, for instance by means of user annotations. Moreover, the analysis must be redone every time the class of queries of interest is updated. Termination inference, in contrast, requires neither user annotations nor recomputation. In this approach, terminating classes for all predicates are inferred at once. We describe the architecture of cTI and report an extensive experimental evaluation of the system covering many classical examples from the logic programming termination literature and several Prolog programs of respectable size and complexity.
C1 Univ La Reunion, Saint Denis, France.
   Univ Parma, Dept Math, Parma, Italy.
C3 University of La Reunion; University of Parma
RP Univ La Reunion, Saint Denis, France.
EM fred@univ-reunion.fr; bagnara@cs.unipr.it
RI Bagnara, Roberto/B-2420-2017; Bagnara, Roberto/AAB-3202-2022
OI Bagnara, Roberto/0000-0002-6163-6278; Bagnara,
   Roberto/0000-0002-6163-6278
CR Apt K.R., 1997, INT SERIES COMPUTER
   APT KR, 1994, ACM T PROGR LANG SYS, V16, P687, DOI 10.1145/177492.177673
   APT KR, 1993, INFORM COMPUT, V106, P109, DOI 10.1006/inco.1993.1051
   APT KR, 1990, COMPUTATIONAL LOGIC, P150
   Armstrong T, 1998, SCI COMPUT PROGRAM, V31, P3, DOI 10.1016/S0167-6423(96)00039-1
   ARTS T, 1996, LECT NOTES COMPUTER, V1048, P219
   Bagnara R, 2002, LECT NOTES COMPUT SC, V2477, P213
   Bagnara R, 2001, LECT NOTES COMPUT SC, V2126, P165
   BUENO F, 1994, MIT PS LOG, P320
   Bueno F., 1997, 3971 CLIP UPM
   Clarke Edmund M., 2001, Model Checking
   Codish M, 1999, J LOGIC PROGRAM, V41, P103, DOI 10.1016/S0743-1066(99)00006-0
   COLIN S, 1997, P ERCIM COMPULOG WOR
   COUSOT P, 1992, J LOGIC PROGRAM, V13, P103, DOI 10.1016/0743-1066(92)90030-7
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   CRNOGORAC L, 1996, LECT NOTES COMPUTER, V1145, P159
   De Schreye D, 1994, J LOGIC PROGRAM, V20, P199, DOI 10.1016/0743-1066(94)90027-2
   DEBRAY SK, 1994, LNCS, V864, P255
   Decorte S, 1999, ACM T PROGR LANG SYS, V21, P1137, DOI 10.1145/330643.330645
   DECORTE S, 1997, THESIS K U LEUVEN DE
   DERANSART P, 1991, LOGIC PROGRAMM, P533
   Deransart P., 1996, PROLOG STANDARD
   DIAZ D, 2000, P 2000 ACM S APPL CO, V2
   FRANCEZ N, 1985, LNCS, V193, P89
   Halbwachs N., 1979, THESIS U SCI MED GRE
   HERMENEGILDO MV, 2002, LECT NOTES COMPUTER, V2477
   *ISO IEC, 1995, 132111 ISO IEC 1
   King A, 2002, THEOR PRACT LOG PROG, V2, P517, DOI 10.1017/S1471068402001436
   Lee CS, 2001, ACM SIGPLAN NOTICES, V36, P81, DOI 10.1145/373243.360210
   LEVI G, 1995, P GULP PRODE 95 JOIN, P631
   Lindenstrauss N, 1997, LOGIC PROGRAMM, P63
   LLOYD LW, 1987, FDN LOGIC PROGRAMMIN
   MARCHIORI M, 1996, LECT NOTES COMPUTER, V1101, P375
   Marriott K., 1998, PROGRAMMING CONSTRAI
   MESNARD F, 2003, ACM T COMPUT LOG, V4, P1
   MESNARD F, 1996, LOGIC PROGRAMM, P7
   NIEUWENHUIS R, 2001, LECT NOTES ARTIFICIA, V2250
   PLUMER L, 1990, LECT NOTES COMPTER S, V466
   Puebla G, 2000, LECT NOTES COMPUT SC, V1870, P23
   RUGGIERI S, 1999, TD699 U PIS
   Sohn K., 1991, Proceedings of the Tenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P216, DOI 10.1145/113413.113433
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   SONDERGAARD H, 1986, LECT NOTES COMPUT SC, V213, P327
   SPEIRS C, 1997, LECT NOTES COMPUTER, V1302, P157
   Stark RF, 1998, J LOGIC PROGRAM, V36, P241, DOI 10.1016/S0743-1066(97)10013-9
   ULLMAN JD, 1988, J ACM, V35, P345, DOI 10.1145/42282.42285
   Vasak T., 1986, Proceedings of the 1986 Symposium on Logic Programming (Cat. No.86CH2340-8), P140
   VERSCHAETSE K, 1992, THESIS K U LEUVEN LE
   [No title captured]
NR 49
TC 16
Z9 16
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2005
VL 5
BP 243
EP 257
DI 10.1017/S1471068404002017
PN 1-2
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 903EN
UT WOS:000227408400008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alferes, JJ
   Pereira, LM
   Swift, T
AF Alferes, JJ
   Pereira, LM
   Swift, T
TI Abduction in well-founded semantics and generalized stable models via
   tabled dual programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE abduction; well-founded semantics; generalized stable models; tabled
   resolution
AB Abductive logic programming offers a formalism to declaratively express and solve problems in areas such as diagnosis, planning, belief revision and hypothetical reasoning. Tabled logic programming offers a computational mechanism that provides a level of declarativity superior to that of Prolog, and which has supported successful applications in fields such as parsing, program analysis, and model checking. In this paper we show how to use tabled logic programming to evaluate queries to abductive frameworks with integrity constraints when these frameworks contain both default and explicit negation. The result is the ability to compute abduction over well-founded semantics with explicit negation and answer sets. Our approach consists of a transformation and an evaluation method. The transformation adjoins to each objective literal 0 in a program, an objective literal not(O) along with rules that ensure that not(0) will be true if and only if 0 is false. We call the resulting program a dual program. The evaluation method, ABDUAL, then operates on the dual program. ABDUAL is sound and complete for evaluating queries to abductive frameworks whose entailment method is based on either the well-founded semantics with explicit negation, or oil answer sets. Further, ABDUAL is asymptotically as efficient as any known method for either class of problems. In addition, when abduction is not desired, ABDUAL operating on a dual program provides a novel tabling method for evaluating queries to ground extended programs whose complexity and termination properties are similar to those of the best tabling methods for the well-founded semantics. A publicly available meta-interpreter has been developed for ABDUAL using the XSB system.
C1 Univ Nova Lisboa, AI Ctr, Fac Ciencias & Tecnol, P-2825516 Lisbon, Portugal.
   SUNY Stony Brook, Dept Comp Sci, Stony Brook, NY 11794 USA.
C3 Universidade Nova de Lisboa; State University of New York (SUNY) System;
   State University of New York (SUNY) Stony Brook
RP Univ Nova Lisboa, AI Ctr, Fac Ciencias & Tecnol, P-2825516 Lisbon, Portugal.
EM jja@di.fct.unl.pt; lmp@di.fct.unl.pt; tswift@cs.sunysb.edu
RI Pereira, Luis M/C-6241-2009; Alferes, Jose/C-6231-2009
OI Pereira, Luis M/0000-0001-7880-4322; Alferes, Jose/0000-0001-5520-4623
CR Alferes JJ, 2000, J LOGIC PROGRAM, V45, P43, DOI 10.1016/S0743-1066(99)00065-5
   Alferes JJ, 1999, LOGIC PROGRAMM, P426
   Alferes JJ, 2000, P AISB 00 S AI PLANN, P1
   [Anonymous], LECT NOTES ARTIFICIA
   APA, 1994, AM PSYCHIATR ASSOC, V4th
   CASTRO J, 2002, ABDUCTIVE VALIDATION
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   Console L., 1991, Journal of Logic and Computation, V1, P661, DOI 10.1093/logcom/1.5.661
   DAMASIO C, 1995, LECT NOTES ARTIF INT, V1265, P29
   Damásio CV, 1998, HANDBOOK OF DEFEASIBLE REASONING AND UNCERTAINTY MANAGEMENT SYSTEMS, VOL 2, P241
   Denecker M, 1998, J LOGIC PROGRAM, V34, P111, DOI 10.1016/S0743-1066(97)00074-5
   DIX J, 2002, UNPUB LINEAR SUBCLAS
   DOWNEY RG, 1995, SIAM J COMPUT, V24, P873, DOI 10.1137/S0097539792228228
   Eiter T, 1997, LECT NOTES ARTIF INT, V1265, P363
   Eiter T, 1997, THEOR COMPUT SCI, V189, P129, DOI 10.1016/S0304-3975(96)00179-X
   Fung TH, 1997, J LOGIC PROGRAM, V33, P151, DOI 10.1016/S0743-1066(97)00026-5
   Gartner J, 2000, LECT NOTES ARTIF INT, V1861, P1362
   GELFOND M, 1990, LOGIC PROGRAMM, P579
   Gottlob G, 1999, LECT NOTES ARTIF INT, V1730, P1, DOI 10.1007/3-540-46767-X_1
   Inoue K, 1999, ANN MATH ARTIF INTEL, V25, P339, DOI 10.1023/A:1018926021566
   Iwayama N, 2000, J LOGIC PROGRAM, V44, P179, DOI 10.1016/S0743-1066(99)00076-X
   Kakas A. C., 1992, Journal of Logic and Computation, V2, P719, DOI 10.1093/logcom/2.6.719
   Kakas A. C., 1990, ECAI 90. Proceedings of the 9th European Conference on Artificial Intelligence, P385
   Kakas AC, 1997, LECT NOTES ARTIF INT, V1265, P387
   LIFSCHITZ V, 1995, LECT NOTES ARTIF INT, V927, P23
   Lloyd J. W., 1984, Foundations of Logic Programming
   Niemela I, 1997, LECT NOTES ARTIF INT, V1265, P420
   PEREIRA LM, 1991, INT JOINT C ART INT
   Przymusinski T. C., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P11, DOI 10.1145/73721.73723
   Sakama C, 2000, J LOGIC PROGRAM, V44, P75, DOI 10.1016/S0743-1066(99)00073-4
   SATOH K, 1991, LOGIC PROGRAMM, P505
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   VANNUFFELEN B, 2000, 8 INT WORKSH NONM RE, P9
   *XSB, 2003, XSB LOG PROGR SYST V
NR 34
TC 31
Z9 39
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2004
VL 4
BP 383
EP 428
DI 10.1017/S1471068403001960
PN 4
PG 46
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 835AB
UT WOS:000222450900001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lierler, Y
AF Lierler, Yuliya
TI Unifying Framework for Optimizations in Non-Boolean Formalisms
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE design; analysis and implementation of languages; knowledge
   representation and nonmonotonic reasoning; theory
ID MODULO; CLINGCON
AB Search-optimization problems are plentiful in scientific and engineering domains. Artificial intelligence (AI) has long contributed to the development of search algorithms and declarative programming languages geared toward solving and modeling search-optimization problems. Automated reasoning and knowledge representation are the subfields of AI that are particularly vested in these developments. Many popular automated reasoning paradigms provide users with languages supporting optimization statements. Recall integer linear programming, MaxSAT, optimization satisfiability modulo theory, (constraint) answer set programming. These paradigms vary significantly in their languages in ways they express quality conditions on computed solutions. Here we propose a unifying framework of so-called extended weight systems that eliminates syntactic distinctions between paradigms. They allow us to see essential similarities and differences between optimization statements provided by distinct automated reasoning languages. We also study formal properties of the proposed systems that immediately translate into formal properties of paradigms that can be captured within our framework.
C1 [Lierler, Yuliya] Univ Nebraska Omaha, Omaha, NE 68182 USA.
C3 University of Nebraska System; University of Nebraska Omaha
RP Lierler, Y (corresponding author), Univ Nebraska Omaha, Omaha, NE 68182 USA.
EM ylierler@unomaha.edu
OI Lierler, Yuliya/0000-0002-6146-623X
FU NSF [1707371]; Div Of Information & Intelligent Systems; Direct For
   Computer & Info Scie & Enginr [1707371] Funding Source: National Science
   Foundation
FX The work was partially supported by NSF grant 1707371. We are grateful
   to anonymous reviewers for valuable comments on this paper.
CR Alviano M, 2018, SIXTEENTH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P2
   Alviano M, 2018, INTELL ARTIF, V12, P1, DOI 10.3233/IA-180119
   [Anonymous], 1982, COMBINATORIAL OPTIMI
   Banbara M, 2017, THEOR PRACT LOG PROG, V17, P408, DOI 10.1017/S1471068417000138
   Barrett C., 2016, The Satisfiability Modulo Theories Library (SMT-LIB)
   Barrett C., 2010, P 8 INT WORKSHOP SAT, V13, P14
   Barrett C, 2009, FRONT ARTIF INTEL AP, V185, P825, DOI 10.3233/978-1-58603-929-5-825
   Bjorner N., 2015, TOOLS ALGORITHMS CON, P194
   Brewka G, 2015, AAAI CONF ARTIF INTE, P1467
   Brewka Gerhard., 2007, Proceedings of the 22nd national conference on Artificial intelligence - Volume 1, V1, P385
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Gebser M., 2016, OASIcs, V52, DOI 10.4230
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Lierler Y., 2022, ARXIV
   Lierler Y., 2021, P 17 EUROPEAN C LOGI
   Lierler Y, 2015, AAAI CONF ARTIF INTE, P1532
   Lierler Y, 2017, THEOR PRACT LOG PROG, V17, P559, DOI 10.1017/S1471068417000114
   Lierler Y, 2014, ARTIF INTELL, V207, P1, DOI 10.1016/j.artint.2013.10.004
   Lierler Y, 2011, THEOR PRACT LOG PROG, V11, P629, DOI 10.1017/S1471068411000214
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Nieuwenhuis R, 2006, LECT NOTES COMPUT SC, V4121, P156
   Ostrowski M, 2012, THEOR PRACT LOG PROG, V12, P485, DOI 10.1017/S1471068412000142
   Robinson N., 2010, ICAPS 2010 WORKSH CO
   Sebastiani Roberto, 2012, Automated Reasoning. Proceedings 6th International Joint Conference, IJCAR 2012, P484, DOI 10.1007/978-3-642-31365-3_38
   Shen D, 2018, SIXTEENTH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P67
NR 27
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2023
VL 23
IS 6
BP 1248
EP 1280
AR PII S1471068422000400
DI 10.1017/S1471068422000400
EA NOV 2022
PG 33
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7N0
UT WOS:000884082800001
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Aguado, F
   Cabalar, P
   Diéguez, M
   Pérez, G
   Schaub, T
   Schuhmann, A
   Vidal, C
AF Aguado, Felicidad
   Cabalar, Pedro
   Dieguez, Martin
   Perez, Gilberto
   Schaub, Torsten
   Schuhmann, Anna
   Vidal, Concepcion
TI Linear-Time Temporal Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; linear-time temporal logic; equilibrium logic;
   non-monotonic reasoning
ID EQUILIBRIUM LOGIC; MODEL CHECKING; KNOWLEDGE; FRAMEWORK; LTL; SEMANTICS;
   LANGUAGE; AUTOMATA; MOLOG
AB In this survey, we present an overview on (Modal) Temporal Logic Programming in view of its application to Knowledge Representation and Declarative Problem Solving. The syntax of this extension of logic programs is the result of combining usual rules with temporal modal operators, as in Linear-time Temporal Logic (LTL). In the paper, we focus on the main recent results of the non-monotonic formalism called Temporal Equilibrium Logic (TEL) that is defined for the full syntax of LTL but involves a model selection criterion based on Equilibrium Logic, a well known logical characterization of Answer Set Programming (ASP). As a result, we obtain a proper extension of the stable models semantics for the general case of temporal formulas in the syntax of LTL. We recall the basic definitions for TEL and its monotonic basis, the temporal logic of Here-and-There (THT), and study the differences between finite and infinite trace length. We also provide further useful results, such as the translation into other formalisms like Quantified Equilibrium Logic and Second-order LTL, and some techniques for computing temporal stable models based on automata constructions. In the remainder of the paper, we focus on practical aspects, defining a syntactic fragment called (modal) temporal logic programs closer to ASP, and explaining how this has been exploited in the construction of the solver telingo, a temporal extension of the well-known ASP solver clingo that uses its incremental solving capabilities.
C1 [Aguado, Felicidad; Cabalar, Pedro; Perez, Gilberto; Vidal, Concepcion] Univ A Coruna, La Coruna, Spain.
   [Dieguez, Martin] Univ Angers, Angers, France.
   [Schaub, Torsten; Schuhmann, Anna] Univ Potsdam, Potsdam, Germany.
C3 Universidade da Coruna; Universite d'Angers; University of Potsdam
RP Aguado, F (corresponding author), Univ A Coruna, La Coruna, Spain.
EM felicidad.aguado@udc.es; cabalar@udc.es;
   martin.dieguezlodeiro@univ-angers.fr; gilberto.perez@udc.es;
   torsten@cs.uni-potsdam.de; anna.schuhmann@uni-potsdam.de;
   concepcion.vidal@udc.es
RI Cabalar, Pedro/AAE-5198-2020; Schaub, Torsten/O-5873-2019; Vidal Martín,
   Concepción/ABD-9547-2021
OI Schaub, Torsten/0000-0002-7456-041X; Vidal Martín,
   Concepción/0000-0002-5561-6406; Dieguez, Martin/0000-0003-3440-4348
FU MICINN, Spain [PID2020-116201GB-I00]; Xunta de Galicia, Spain [GPC
   ED431B 2019/03]; Region Pays de la Loire, France; European Union COST
   action [CA-17124]; DFG, Germany [SCHA 550/11, SCHA 550/15]
FX We are thankful to the anonymous reviewers for their thorough work and
   their useful suggestions that have helped to improve the paper. A
   special thanks goes to Mirosaw Truszczy ' nski for his support in
   improving the quality of our paper. We are especially grateful to David
   Pearce, whose help and collaboration on Equilibrium Logic was the seed
   for a great part of the current paper. This work was partially supported
   by MICINN, Spain, grant PID2020-116201GB-I00, Xunta de Galicia, Spain
   (GPC ED431B 2019/03), Region Pays de la Loire, France, (projects EL4HC
   and etoiles montantes CTASP), European Union COST action CA-17124, and
   DFG grants SCHA 550/11 and 15, Germany.
CR ABADI M, 1989, J SYMB COMPUT, V8, P277, DOI 10.1016/S0747-7171(89)80070-7
   Aguado Felicidad, 2017, Journal of Applied Non-Classical Logics, V27, P161, DOI 10.1080/11663081.2018.1427987
   Aguado Felicidad, 2013, Journal of Applied Non-Classical Logic, V23, P2, DOI 10.1080/11663081.2013.798985
   AGUADO F, 2020, P 24 EUROPEAN C ARTI, P569
   Aguado F, 2017, THEOR PRACT LOG PROG, V17, P226, DOI 10.1017/S1471068416000570
   Aguado F, 2015, THEOR PRACT LOG PROG, V15, P620, DOI 10.1017/S1471068415000277
   Aguado F, 2013, LECT NOTES COMPUT SC, V8148, P23, DOI 10.1007/978-3-642-40564-8_3
   ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   [Anonymous], 1992, Logics of Time and Computation
   [Anonymous], 1983, Ph.D. thesis
   [Anonymous], 1980, C REC 7 ANN ACM S PR
   Artale A, 2000, ANN MATH ARTIF INTEL, V30, P171, DOI 10.1023/A:1016636131405
   Baader F, 2003, DESCRIPTION LOGIC HANDBOOK: THEORY, IMPLEMENTATION AND APPLICATIONS, P43
   Baader F., 2008, P KR, P684
   Bacchus F, 2000, ARTIF INTELL, V116, P123, DOI 10.1016/S0004-3702(99)00071-5
   Balbiani P, 2020, ACM T COMPUT LOG, V21, DOI 10.1145/3365833
   Balbiani P, 2016, LECT NOTES COMPUT SC, V10021, P81, DOI 10.1007/978-3-319-48758-8_6
   Baldoni M, 1997, LECT NOTES ARTIF INT, V1216, P132, DOI 10.1007/BFb0023805
   Baral C., 1996, P 3 S LOG FORM COMM
   Beck H., 2016, P 26 INT JOINT C ART, P929
   Beck H, 2015, AAAI CONF ARTIF INTE, P1431
   Bertoli Piergiorgio, 2001, Proceedings of the 17th International Joint Conference on Artificial Intelligence (IJCAI'Ol), V2001, P473
   BIEBER P, 1988, LECT NOTES COMPUT SC, V310, P762, DOI 10.1007/BFb0012886
   Biere A, 1999, LECT NOTES COMPUT SC, V1579, P193
   Bosser AG, 2018, SIXTEENTH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P12
   Bozzelli L, 2015, IEEE S LOG, P645, DOI 10.1109/LICS.2015.65
   Bozzelli L, 2015, LECT NOTES COMPUT SC, V9034, P167, DOI 10.1007/978-3-662-46678-0_11
   BRZOSKA C, 1991, LOGIC PROGRAMM, P661
   Buchi J. R, 1990, Studies in Logic and the Foundations of Mathematics, P425, DOI [10.1007/978-1-4613-8928-6_23, DOI 10.1007/978-1-4613-8928-6_23]
   Cabalar Pedro, 2019, Description Logic, Theory Combination, and All That: Essays Dedicated to Franz Baader on the Occasion of His 60th Birthday. Lecture Notes in Computer Science (LNCS 11560), P174, DOI 10.1007/978-3-030-22102-7_8
   CABALAR P, 2014, P 14 INT C PRINCIPLE
   Cabalar P, 2007, LECT NOTES COMPUT SC, V4739, P241
   Cabalar P, 2019, LECT NOTES ARTIF INT, V11805, P520, DOI 10.1007/978-3-030-30244-3_43
   Cabalar P, 2020, FRONT ARTIF INTEL AP, V325, P656, DOI 10.3233/FAIA200151
   Cabalar P, 2020, THEOR PRACT LOG PROG, V20, P783, DOI 10.1017/S1471068420000307
   Cabalar P, 2019, LECT NOTES ARTIF INT, V11481, P256, DOI 10.1007/978-3-030-20528-7_19
   Cabalar P, 2018, THEOR PRACT LOG PROG, V18, P406, DOI 10.1017/S1471068418000297
   Cabalar P, 2015, THEOR PRACT LOG PROG, V15, P666, DOI 10.1017/S1471068415000307
   Cabalar P, 2011, LECT NOTES ARTIF INT, V6645, P370
   Camacho A, 2018, P I C AUTOMAT PLAN S, P29
   Castilho MA, 1999, J LOGIC COMPUT, V9, P701, DOI 10.1093/logcom/9.5.701
   CHANDRA AK, 1981, J ACM, V28, P114, DOI 10.1145/322234.322243
   Chomicki J., 1988, Proceedings of the Seventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P61, DOI 10.1145/308386.308416
   CHOMICKI J, 1993, ACM T DATABASE SYST, V18, P181, DOI 10.1145/151634.151635
   de Bruijn J, 2010, KNOWL INF SYST, V25, P81, DOI 10.1007/s10115-010-0294-z
   De Giacomo G., 2013, P 23 INT JOINT C ART, P854, DOI DOI 10.5555/2540128.2540252
   DELCERRO LF, 1986, NEW GENERAT COMPUT, V4, P35, DOI 10.1007/BF03037381
   Demri S, 2016, CAM T THEOR, V58, P1, DOI 10.1017/CBO9781139236119
   Duret-Lutz A, 2016, LECT NOTES COMPUT SC, V9938, P122, DOI 10.1007/978-3-319-46520-3_8
   Eiter T, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P765
   Erdem E, 2020, P 18 INT C PRINC KNO, P609
   FAGES F, 1994, J METHODS LOGIC COMP, V1, P51
   Ferraris P, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P372
   Ferro M, 1999, P JOINT C DECL PROGR, P351
   FISCHER MJ, 1979, J COMPUT SYST SCI, V18, P194, DOI 10.1016/0022-0000(79)90046-1
   Fisher M, 2005, FOUND ARTIF INTELL, V1, P1
   Fisher M., 1994, Temporal Logic. First International Conference, ICTL '94 Proceedings, P480, DOI 10.1007/BFb0014005
   Fruhwirth T, 1996, J SYMB COMPUT, V22, P555, DOI 10.1006/jsco.1996.0066
   FUJITA M, 1986, LECT NOTES COMPUT SC, V225, P695
   GABBAY D, 1989, LECT NOTES COMPUT SC, V398, P409
   GABBAY DM, 1987, TEMPORAL LOGICS THEI, P197
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   GELFOND M, 1993, J LOGIC PROGRAM, V17, P301, DOI 10.1016/0743-1066(93)90035-F
   GELFOND M, 1988, P 7 NAT C ART INT AA, P455
   Gerth R., 1995, INT C PROTOCOL SPECI, P3
   Giordano L, 2013, THEOR PRACT LOG PROG, V13, P201, DOI 10.1017/S1471068411000639
   Giordano Laura, 2001, Logic Journal of the IGPL, V9, P273, DOI 10.1093/jigpal/9.2.273
   Godel K, 1932, Anzeiger Akademie der Wissenschaften Wien, Mathematisch-Naturwissenschaftliche Klasse, V69, P65
   Gottlob G., 2002, ACM Transactions on Computational Logic, V3, P42, DOI 10.1145/504077.504079
   Guessarian I, 2003, THEOR COMPUT SCI, V303, P103, DOI 10.1016/S0304-3975(02)00447-4
   HAREL D, 2000, FOUNDAT COMPUT, P3
   Heljanko K, 2003, THEOR PRACT LOG PROG, V3, P519, DOI 10.1017/S1471068403001790
   Henriksen J. G., 1995, LNCS, P89, DOI DOI 10.1007/3-540-60630-0
   Henriksen JG, 1999, ANN PURE APPL LOGIC, V96, P187, DOI 10.1016/S0168-0072(98)00039-6
   Heyting A, 1930, SITZBER PREUSS AKAD, P42
   HOSOI T, 1966, J FAC SCI U TOKYO 1, V13, P183
   Hrycej T., 1988, ECAI 88. Proceedings of the 8th European Conference on Artificial Intelligence, P296
   Jorge, 2001, LECT NOTES ARTIF INT, V2258, P306
   Kamp Johan Anthony Willem., 1968, Tense Logic and the Theory of Linear Order
   King A., 2016, OPENACCESS SERIES IN, V52
   Kvarnstrom J., 2008, ICAPS, P198
   Lee J., 2013, INPROCEEDINGS 23 INT, P983
   Levesque HJ, 1997, J LOGIC PROGRAM, V31, P59, DOI 10.1016/S0743-1066(96)00121-5
   Li JJ, 2012, PROC INT C TOOLS ART, P603, DOI 10.1109/ICTAI.2012.87
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Lloyd, 1995, P 1995 INT LOG PROGR, V51, P303
   Lukasiewicz J, 1941, ENTRETIENS ZURICH SU, V12, P82
   Lutz C, 2008, TIME 2008: 15TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P3, DOI 10.1109/TIME.2008.14
   McIlraith S, 2012, P 13 INT C PRINC KNO
   Mints G, 2010, ANN PURE APPL LOGIC, V162, P237, DOI 10.1016/j.apal.2010.09.009
   Moszkowski B.C., 1986, Executing Temporal Logic Programs
   Nebel B., 2001, P INT JOINT C ART IN, P479
   Oikarinen E, 2006, FRONT ARTIF INTEL AP, V141, P412
   Pearce D, 1997, LECT NOTES ARTIF INT, V1216, P57, DOI 10.1007/BFb0023801
   Pearce D, 2008, LECT NOTES COMPUT SC, V5366, P546, DOI 10.1007/978-3-540-89982-2_46
   Penttonen M, 1990, THEORY PRACTICE TEMP, P21
   Penttonen M, 1992, SIMPLE PROOF COMPLET, P51
   Perelli G, 2021, ABS210211184 CORR
   Pnueli A., 1977, 18th Annual Symposium on Foundations of Computer Science, P46, DOI 10.1109/SFCS.1977.32
   Simpson A., 1994, The proof theory and semantics of intuitionistic modal logic
   SISTLA AP, 1985, J ACM, V32, P733, DOI 10.1145/3828.3837
   SISTLA AP, 1987, THEOR COMPUT SCI, V49, P217, DOI 10.1016/0304-3975(87)90008-9
   Snodgrass R, 1993, TEMPORAL DATABASES T, P294
   Vallduvi E, 1997, P TBIL S LOG LANG CO, P275
   Van Dalen D, 2001, The Blackwell Guide to Philosophical Logic, P224
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   Vidal, 2011, LECT NOTES COMPUT SC, V7225, P57
   Walega PA, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1886
   WOLPER P, 1983, INFORM CONTROL, V56, P72, DOI 10.1016/S0019-9958(83)80051-5
   Zakharyaschev M., 2002, ADV MODAL LOGIC, P127
   Zhu SF, 2019, LECT NOTES COMPUT SC, V11436, P684, DOI 10.1007/978-3-030-14812-6_43
   Zhu SF, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1362
NR 112
TC 8
Z9 8
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2023
VL 23
IS 1
BP 2
EP 56
AR PII S1471068421000557
DI 10.1017/S1471068421000557
EA DEC 2021
PG 55
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA JO5Y4
UT WOS:000734879100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Miller, D
AF Miller, Dale
TI A Survey of the Proof-Theoretic Foundations of Logic Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
ID CLAUSAL INTUITIONISTIC LOGIC; LINEAR LOGIC; CUT-ELIMINATION; SEMANTICS;
   PROVABILITY; SPECIFICATION; DEFINITION; RESOLUTION; SYSTEMS; PROLOG
AB Several formal systems, such as resolution and minimal model semantics, provide a framework for logic programming. In this article, we will survey the use of structural proof theory as an alternative foundation. Researchers have been using this foundation for the past 35 years to elevate logic programming from its roots in first-order classical logic into higher-order versions of intuitionistic and linear logic. These more expressive logic programming languages allow for capturing stateful computations and rich forms of abstractions, including higher-order programming, modularity, and abstract data types. Term-level bindings are another kind of abstraction, and these are given an elegant and direct treatment within both proof theory and these extended logic programming languages. Logic programming has also inspired new results in proof theory, such as those involving polarity and focused proofs. These recent results provide a high-level means for presenting the differences between forward-chaining and backward-chaining style inferences. Anchoring logic programming in proof theory has also helped identify its connections and differences with functional programming, deductive databases, and model checking.
C1 [Miller, Dale] Ecole Polytech, Inria Saclay, Palaiseau, France.
   [Miller, Dale] Ecole Polytech, LIX, Palaiseau, France.
C3 Institut Polytechnique de Paris; Ecole Polytechnique; Institut
   Polytechnique de Paris; Ecole Polytechnique
RP Miller, D (corresponding author), Ecole Polytech, Inria Saclay, Palaiseau, France.; Miller, D (corresponding author), Ecole Polytech, LIX, Palaiseau, France.
EM dale@lix.polytechnique.fr
RI Miller, Dale/HGU-2070-2022
OI Miller, Dale/0000-0003-0274-4954
CR A it-Kaci, 1991, LOGIC PROGRAMMING RE
   Abrusci VM, 2000, ANN PURE APPL LOGIC, V101, P29, DOI 10.1016/S0168-0072(99)00014-7
   Aho A.V., 1986, COMPILERS PRINCIPLES
   Andreoli J. M., 1991, New Generation Computing, V9, P445, DOI 10.1007/BF03037173
   Andreoli J. M., 1992, Journal of Logic and Computation, V2, P297, DOI 10.1093/logcom/2.3.297
   Andreoli J.-M., 1990, THESIS U PARIS 6
   Andrews J, 1997, THEOR COMPUT SCI, V184, P105, DOI 10.1016/S0304-3975(96)00138-7
   Andrews P. B., 1984, Automated Theorem Proving : After 25 Years. Proceedings of the Special Session of the 89th Annual Meeting of the American Mathematical Society, P169
   ANDREWS PB, 1971, J SYMBOLIC LOGIC, V36, P414, DOI 10.2307/2269949
   ANDREWS PB, 1974, Z MATH LOGIK, V20, P411, DOI 10.1002/malq.19740202506
   [Anonymous], 1971, Studies in Logic and the Foundations of Mathematics, DOI DOI 10.1016/S0049
   [Anonymous], 1996, Principles of Knowledge Representation
   [Anonymous], 1999, AUTOMATED DEDUCTION
   [Anonymous], 1980, To H. B. Curry: Essays on Combinatory Logic, -calculus and Formalism
   [Anonymous], 1985, 416 INRIA
   [Anonymous], 1984, Studies in Logic
   [Anonymous], 1949, Journal of Symbolic Logic, DOI DOI 10.2307/2267044
   [Anonymous], 1930, Monatshefte Math. Phys., DOI DOI 10.1007/BF01696781
   [Anonymous], 1993, NONMONOTONIC LOGICS
   [Anonymous], 1996, COORDINATION PROGRAM
   [Anonymous], 1987, LNCS
   [Anonymous], 1974, ROSENFELD
   [Anonymous], 1981, Technical Report DAIMI FN-19
   [Anonymous], 2015, LNCS, DOI DOI 10.1007/978-3-662
   [Anonymous], 1972, INDAGATIONES MATHEMA, DOI DOI 10.1016/1385-7258(72)90034-0
   Appel AW, 1999, LOGIC PROGRAMM, P411
   APT KR, 1994, J LOGIC PROGRAM, V20, P9, DOI 10.1016/0743-1066(94)90024-8
   APT KR, 1982, J ACM, V29, P841, DOI 10.1145/322326.322339
   APT KR, 1994, J LOGIC PROGRAM, V18, P177, DOI 10.1016/0743-1066(94)90051-5
   Baelde D, 2014, J FORMALIZ REASON, V7, P1
   Barendregt H, 2013, PERSPECT LOGIC, P1, DOI 10.1017/CBO9781139032636
   Basold H, 2019, LECT NOTES COMPUT SC, V11423, P783, DOI 10.1007/978-3-030-17184-1_28
   BECKERT B, 1995, J AUTOM REASONING, V15, P339, DOI 10.1007/BF00881804
   Bezem M., 2001, Computer Science Logic. 15th International Workshop, CSL 2001 10th Annual Conference of the EACSL. Proceedings (Lecture Notes in Computer Science Vol.2142), P203
   Blanco R, 2017, LECT NOTES ARTIF INT, V10395, P255, DOI 10.1007/978-3-319-63046-5_16
   BORGER E, 1995, SCI COMPUT PROGRAM, V24, P249, DOI 10.1016/0167-6423(95)00006-E
   Borger E., 1995, LOGIC PROGRAMMING FO, P20
   BORRAS P, 1988, 3 ACM SIGSOFT S SOFT, P14
   Bowen K. A., 1982, MACH INTELL, P421
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Brock-Nannestad T, 2015, PROCEEDINGS OF THE 17TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING (PPDP 2015), P43, DOI 10.1145/2790449.2790528
   Bruscoli P, 2006, THEOR COMPUT SCI, V360, P42, DOI 10.1016/j.tcs.2005.11.047
   BUGLIESI M, 1994, J LOGIC PROGRAM, V20, P443, DOI 10.1016/0743-1066(94)90032-9
   Buss Sr, 1998, STUD LOGIC, V137, P1
   Cellucci, 1987, P C LOG COMP SCI NEW, P115
   Cervesato I, 2000, THEOR COMPUT SCI, V232, P133, DOI 10.1016/S0304-3975(99)00173-5
   Cervesato I, 1996, IEEE S LOG, P264, DOI 10.1109/LICS.1996.561339
   Cervesato I, 1998, LOGIC PROGRAMM, P115
   CHAUDHURI K, 2006, CMUCS06162
   Chaudhuri K, 2008, J AUTOM REASONING, V40, P133, DOI 10.1007/s10817-007-9091-0
   Chaudhuri K, 2015, LECT NOTES COMPUT SC, V9450, P146, DOI 10.1007/978-3-662-48899-7_11
   Chaudhuri K, 2010, LECT NOTES COMPUT SC, V6397, P202, DOI 10.1007/978-3-642-16242-8_15
   Chaudhuri K, 2010, LECT NOTES COMPUT SC, V6247, P185, DOI 10.1007/978-3-642-15205-4_17
   CHEN WD, 1993, J LOGIC PROGRAM, V15, P187, DOI 10.1016/0743-1066(93)90039-J
   Cheney J, 2004, LECT NOTES COMPUT SC, V3132, P269, DOI 10.1007/978-3-540-27775-0_19
   Chihani Z, 2017, J AUTOM REASONING, V59, P287, DOI 10.1007/s10817-016-9380-6
   Church A., 1940, J. Symbolic Logic, V5, P56, DOI [10.2307/2266170, DOI 10.2307/2266170]
   Clark K. L., 1978, Logic and data bases, P293
   Clocksin W.F., 1994, PROGRAMMING PROLOG
   COLMERAUER A, 1993, SIGPLAN NOTICES, V28, P37, DOI 10.1145/155360.155362
   Curien PL, 2010, IFIP ADV INF COMM TE, V323, P165
   Curry HB, 1934, P NATL ACAD SCI USA, V20, P584, DOI 10.1073/pnas.20.11.584
   Danos V., 1993, Computational Logic and Proof Theory. Third Kurt Godel Colloquium, KGC '93 Proceedings, P159, DOI 10.1007/BFb0022564
   Despeyroux, 1988, 94 INRIA
   Despeyroux J., 1986, Proceedings of the Symposium on Logic in Computer Science (Cat. No.86CH2321-8), P193
   Despeyroux J., 1995, Typed Lambda Calculi and Applications. Second International Conference on Typed Lambda Calculi and Applications, TLCA '95. Proceedings, P124, DOI 10.1007/BFb0014049
   DESPEYROUX J., 2016, P LSFA ENTCS, V332
   DESPEYROUX T, 1984, LECT NOTES COMPUT SC, V173, P215
   Di Cosmo Roberto, 2019, STANFORD ENCY PHILOS
   Donzeau-Gouge V., 1984, Interactive Programming Environments
   Dowling W. F., 1984, Journal of Logic Programming, V1, P267, DOI 10.1016/0743-1066(84)90014-1
   Dyckhoff R, 2006, LECT NOTES COMPUT SC, V3988, P173, DOI 10.1007/11780342_19
   EARLEY J, 1970, COMMUN ACM, V13, P94, DOI 10.1145/362007.362035
   Elliott C. M., 1989, Rewriting Techniques and Applications. 3rd International Conference, RTA-89. Proceedings, P121
   Fages F, 2001, INFORM COMPUT, V165, P14, DOI 10.1006/inco.2000.3002
   Fages F., 1998, 13 S LOG COMP SCI
   FELTY A, 1993, J AUTOM REASONING, V11, P43, DOI 10.1007/BF00881900
   FELTY A, 1990, LECT NOTES ARTIF INT, V449, P221
   Felty A., 1989, THESIS U PENNSYLVANI
   Friedman D.P., 2018, The Reasoned Schemer, VSecond
   Gabbay D. M., 1984, Journal of Logic Programming, V1, P319, DOI 10.1016/0743-1066(84)90029-3
   Gabbay D. M., 1985, Journal of Logic Programming, V2, P251, DOI 10.1016/S0743-1066(85)80003-0
   Gacek A, 2012, J AUTOM REASONING, V49, P241, DOI 10.1007/s10817-011-9218-1
   Gacek A, 2011, INFORM COMPUT, V209, P48, DOI 10.1016/j.ic.2010.09.004
   Gallier J.H., 1986, LOGIC COMPUTER SCI F
   Ganzinger H, 2002, LECT NOTES COMPUT SC, V2401, P209, DOI 10.1007/3-540-45619-8_15
   Ganzinger H., 2001, Automated Reasoning. First International Joint Conference, IJCAR 2001. Proceedings (Lecture Notes in Artificial Intelligence Vol.2083), P514
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Gentzen G., 1935, The collected papers of Gerhard Gentzen, P68
   Girard J.-Y., 1989, Cambridge Tracts in Theoretical Computer Science, V7
   Girard Jean-Yves, 1991, Math. Struct. Comput. Sci., V1, P255, DOI [DOI 10.1017/S0960129500001328, 10.1017/S0960129500001328]
   Girard Jean-Yves, 1992, A Fixpoint Theorem in Linear Logic
   Girard Jean-Yves., 1971, P 2 SCANDINAVIAN LOG, V63, P63
   GIRARD JY, 1987, THEOR COMPUT SCI, V50, P1, DOI 10.1016/0304-3975(87)90045-4
   Gordon M, 2000, FOUNDAT COMPUT, P169
   Gordon M. J. C., 1979, LNCS, V78
   Guglielmi A, 2007, ACM T COMPUT LOG, V8, DOI 10.1145/1182613.1182614
   Guidi F, 2019, MATH STRUCT COMP SCI, V29, P1125, DOI 10.1017/S0960129518000427
   Gunter C. A., 1989, MSCIS8968 U PENNS CO
   HAGIYA M, 1984, NEW GENERAT COMPUT, V2, P59, DOI 10.1007/BF03037052
   Hallnas L., 1990, Journal of Logic and Computation, V1, P261, DOI 10.1093/logcom/1.2.261
   Hallnas L., 1991, Journal of Logic and Computation, V1, P635, DOI 10.1093/logcom/1.5.635
   Hannan, 1990, THESIS U PENNSYLVANI
   Hannan J., 1993, Journal of Functional Programming, V3, P123, DOI 10.1017/S0956796800000666
   Hannan J., 1992, MATH STRUCT COMPUT S, V2, P415, DOI [DOI 10.1017/S0960129500001559, 10.1017/S0960129500001559]
   Hannan J., 1992, 7 S LOGIC COMPUTER S
   HARIDI S., 1983, LOG PROGR WORKSH NUC, P560
   Harland J., 1996, Algebraic Methodology and Software Technology. 5th International Conference, AMAST '96. Proceedings, P391, DOI 10.1007/BFb0014329
   Harland J, 1997, COMPUT LANG, V23, P161, DOI 10.1016/S0096-0551(97)00013-1
   HARPER R, 1993, J ACM, V40, P143, DOI 10.1145/138027.138060
   Harrop Ronald., 1960, J SYMBOLIC LOGIC, V25, P27, DOI DOI 10.2307/2964334
   Heath Q, 2019, J AUTOM REASONING, V63, P857, DOI 10.1007/s10817-018-9475-3
   Herbelin H., 1995, These d'universite
   Hodas J. S., 1991, Proceedings of Sixth Annual IEEE Symposium on Logic in Computer Science (Cat. No.91CH3025-4), P32, DOI 10.1109/LICS.1991.151628
   Hodas J. S., 2001, Automated Reasoning. First International Joint Conference, IJCAR 2001. Proceedings (Lecture Notes in Artificial Intelligence Vol.2083), P670
   Hodas Joshua S., 1994, Logic Programming in Intuitionistic Linear Logic: Theory, Design, and Implementation
   HODAS JS, 1994, INFORM COMPUT, V110, P327, DOI 10.1006/inco.1994.1036
   Hofmann M., 1999, Proceedings. 14th Symposium on Logic in Computer Science (Cat. No. PR00158), P204, DOI 10.1109/LICS.1999.782616
   HOWE JM, 1998, THESIS U ST ANDREWS
   HUET G, 1978, ACTA INFORM, V11, P31, DOI 10.1007/BF00264598
   Huet G. P., 1975, Theoretical Computer Science, V1, P27, DOI 10.1016/0304-3975(75)90011-0
   Huet G.P., 1973, P 3 INT JOINT C ART, P139
   ISO.org, 2000, 1321122000 ISOIEC
   Jaffar J., 1987, P 14 ACM S PRINC PRO
   Jagadeesan R, 2005, LECT NOTES COMPUT SC, V3821, P517, DOI 10.1007/11590156_42
   Joinet J.B., 1995, Advances in Linear Logic, P211, DOI [10.1017/CBO9780511629150, DOI 10.1017/CBO9780511629150]
   Kanovich M, 2019, MATH STRUCT COMP SCI, V29, P1217, DOI 10.1017/S0960129518000117
   KANOVICH MI, 1995, ANN PURE APPL LOGIC, V75, P107, DOI 10.1016/0168-0072(94)00060-G
   KOBAYASHI N, 1993, MIT PS LOG, P279
   Kobayashi N., 1994, FORM ASP COMPUT, V3, P279
   KOWALSKI R, 1979, COMMUN ACM, V22, P424, DOI 10.1145/359131.359136
   Lambek J., 1958, American Mathematical Monthly, V65, P154, DOI [DOI 10.1080/00029890.1958.11989160, 10.2307/2310058]
   Li B. Z, 1994, LECTURE NOTES COMPUT, V788, P379
   Liang C, 2007, LECT NOTES COMPUT SC, V4646, P451
   Liang C, 2009, THEOR COMPUT SCI, V410, P4747, DOI 10.1016/j.tcs.2009.07.041
   Lincoln P., 1993, HIGHER ORDER LINEAR
   LINCOLN P., 1995, P WORKSH ADV LIN LOG, P197
   Lipton J, 2018, THEOR COMPUT SCI, V712, P1, DOI 10.1016/j.tcs.2017.11.005
   Lisitsa, 2003, ULCS03017 DEP COMP S
   Lloyd J. W., 1984, Journal of Logic Programming, V1, P225, DOI 10.1016/0743-1066(84)90011-6
   LLOYD JW, 1991, J LOGIC PROGRAM, V11, P217, DOI 10.1016/0743-1066(91)90027-M
   Loveland D. W., 1987, Logic Programming. Proceedings of the Fourth International Conference, P456
   Loveland D. W, 1970, P IRIA S AUT DEM, P147
   Loveland D. W., 1991, COMPUTATIONAL LOGIC, P542
   Luckham D., 1970, P 1968 IRIA S AUT DE, P163
   MAIER D., 1988, Computing with Logic: Logic Programming with PROLOG
   Martin-Lf P., 1982, Stud. Logic Found. Math, V104, P153, DOI [DOI 10.1016/S0049-237X(09)70189-2, 10.1016/ S0049-237X(09)70189-2.]
   MCCARTY LT, 1988, J LOGIC PROGRAM, V5, P1, DOI 10.1016/0743-1066(88)90005-2
   MCCARTY LT, 1988, J LOGIC PROGRAM, V5, P93, DOI 10.1016/0743-1066(88)90014-3
   McDowell R, 2000, THEOR COMPUT SCI, V232, P91, DOI 10.1016/S0304-3975(99)00171-1
   MICHAYLOV S, 1992, LECT NOTES ARTIF INT, V596, P299, DOI 10.1007/BFb0013612
   Miller D., 2005, ACM Transactions on Computational Logic, V6, P749, DOI 10.1145/1094622.1094628
   MILLER D, 1992, J SYMB COMPUT, V14, P321, DOI 10.1016/0747-7171(92)90011-R
   Miller D, 1996, THEOR COMPUT SCI, V165, P201, DOI 10.1016/0304-3975(96)00045-X
   Miller D., 1991, Journal of Logic and Computation, V1, P497, DOI 10.1093/logcom/1.4.497
   MILLER D, 1991, ANN PURE APPL LOGIC, V51, P125, DOI 10.1016/0168-0072(91)90068-W
   MILLER D, 1994, IEEE S LOG, P272, DOI 10.1109/LICS.1994.316062
   MILLER D, 1989, J LOGIC PROGRAM, V6, P79, DOI 10.1016/0743-1066(89)90031-9
   Miller D., 2012, PROGRAMMING HIGHER O
   Miller D., 2008, REASONING SIMPLE TYP, P423
   Miller D., 1991, NEWSL ASS LOG PROGRA, V4, P3
   Miller D., 2021, PHILOS TECHNOLOGY, V34, P75
   Miller D., 2003, ELECT NOTES THEORET, V84, P18
   Miller D. A., 1986, 24th Annual Meeting of the Association for Computational Linguistics. Proceedings of the Conference, P247
   MILLER DA, 1986, LECT NOTES COMPUT SC, V225, P448
   Miller D, 2006, LECT NOTES ARTIF INT, V4130, P4
   Miller D, 2019, J AUTOM REASONING, V63, P625, DOI 10.1007/s10817-018-9483-3
   Miller D, 2017, FORM ASP COMPUT, V29, P383, DOI 10.1007/s00165-016-0393-z
   Miller Dale, 2004, London Mathematical Society Lecture Notes, V316, P119, DOI DOI 10.1017/CBO9780511550850.004
   Miller Dale, 1992, LECT NOTES COMPUTER, V660, P242, DOI DOI 10.1007/3-540-56454-3_13
   Milner R., 1990, The Definition of Standard ML
   Milner R., 1979, P INT S MATH FDN COM, P146, DOI 10.1007/3-540-09526-8 11
   MINKER J, 1990, J LOGIC PROGRAM, V9, P45, DOI 10.1016/0743-1066(90)90033-2
   MINTS GE, 1990, J LOGIC PROGRAM, V9, P179, DOI 10.1016/0743-1066(90)90039-8
   MITCHELL JC, 1991, ANN PURE APPL LOGIC, V51, P99, DOI 10.1016/0168-0072(91)90067-V
   Nadathur G, 2005, THEOR PRACT LOG PROG, V5, P305, DOI 10.1017/S1471068404002297
   Nadathur G., 1995, Proceedings Tenth Annual IEEE Symposium on Logic in Computer Science (Cat. No.95CB35768), P148, DOI 10.1109/LICS.1995.523252
   NADATHUR G, 1990, J ACM, V37, P777, DOI 10.1145/96559.96570
   NADATHUR G, 1993, J AUTOM REASONING, V11, P115, DOI 10.1007/BF00881902
   Nadathur G, 1998, J LOGIC COMPUT, V8, P209, DOI 10.1093/logcom/8.2.209
   Nadathur G, 2000, THEOR COMPUT SCI, V232, P273, DOI 10.1016/S0304-3975(99)00177-2
   Nadathur G., 1998, HDB LOGIC ARTIFICIAL, V5, P163
   Nadathur G., 1987, THESIS U PENNSYLVANI
   Nadathur Gopalan., 1988, Fifth International Logic Programming Conference, P810
   Nadathur Gopalan., 1992, TYPES IN LOGIC PROGRAMMING, P245
   Necula G. C., 1997, Conference Record of POPL '97: The 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P106, DOI 10.1145/263699.263712
   Negri, 2001, STRUCTURAL PRO
   Nigam V., 2009, THESIS ECOLE POLYTEC
   Nigam V, 2017, THEOR COMPUT SCI, V693, P35, DOI 10.1016/j.tcs.2017.06.009
   Nigam V, 2011, ELECTRON NOTES THEOR, V269, P109, DOI 10.1016/j.entcs.2011.03.009
   Nigam V, 2009, PPDP'09: PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING, P129, DOI 10.1145/1599410.1599427
   NIPKOW T, 1993, IEEE S LOG, P64
   O'Keefe R.A., 1990, The Craft of Prolog
   Olarte C, 2015, THEOR COMPUT SCI, V606, P98, DOI 10.1016/j.tcs.2015.06.031
   Ono H., 1998, Theories of Types and Proofs, P207, DOI [10.2969/msjmemoirs/00201C060, DOI 10.2969/MSJMEMOIRS/00201C060]
   Otten J, 2003, J SYMB COMPUT, V36, P139, DOI 10.1016/S0747-7171(03)00037-3
   Paulson L. C., 1989, Journal of Automated Reasoning, V5, P363, DOI 10.1007/BF00248324
   Perlis Alan J, 1982, ACM Sigplan Notices, V17, P7, DOI DOI 10.1145/947955.1083808
   PETTOROSSI A, 1994, J LOGIC PROGRAM, V20, P261, DOI 10.1016/0743-1066(94)90028-0
   Pfenning, 1988, P ACM LISP FUNCT PRO
   Pfenning F., 1999, Automated Deduction - CADE-16. 16th International Conference on Automated Deduction. Proceedings (Lecture Notes in Artificial Intelligence Vol.1632), P202
   Pfenning F., 1989, Proceedings. Fourth Annual Symposium on Logic in Computer Science (Cat. No.89CH2753-2), P313, DOI 10.1109/LICS.1989.39186
   Pfenning F, 1991, Logical frameworks, P149
   Pfenning F., 1988, PLDI'88: Proceedings of the ACM SIGPLAN 1988 conference on Programming Language design and Implementation', P199
   Pientka B, 2002, LECT NOTES COMPUT SC, V2401, P271, DOI 10.1007/3-540-45619-8_19
   Pitts AM, 2003, INFORM COMPUT, V186, P165, DOI 10.1016/S0890-5401(03)00138-X
   Plotkin GD, 2004, J LOGIC ALGEBR PROGR, V60-1, P17, DOI 10.1016/j.jlap.2004.03.002
   Polakow J, 1999, LECT NOTES COMPUT SC, V1581, P295
   Polakow J., 2001, THESIS DEP COMPUTER
   Pym D. J., 1994, Journal of Logic and Computation, V4, P175, DOI 10.1093/logcom/4.2.175
   Qi Xiaochu., 2015, The Teyjus system - version 2
   Retore C, 1997, LECT NOTES COMPUT SC, V1210, P300
   ROBINSON JA, 1965, J ACM, V12, P23, DOI 10.1145/321250.321253
   Ruet P., 1997, LNCS, V1414
   Santo JE, 2017, ELECTRON NOTES THEOR, V332, P149, DOI 10.1016/j.entcs.2017.04.010
   Saraswat, 1993, BRIEF INTRO LINEAR C
   Schroeder-Heister P., 1993, Proceedings of Eighth Annual IEEE Symposium on Logic in Computer Science (Cat. No.93CH3328-2), P222, DOI 10.1109/LICS.1993.287585
   Schroeder-Heister P., 1991, J SYMBOLIC LOGIC, V56, P1142
   Schubert A, 2018, THEOR PRACT LOG PROG, V18, P673, DOI 10.1017/S147106841800008X
   Schwichtenberg H, 2006, LECT NOTES ARTIF INT, V3600, P151
   Scott D.S., 1970, P 4 ANN PRINC C INF, P169
   Simmons RJ, 2008, LECT NOTES COMPUT SC, V5126, P336, DOI 10.1007/978-3-540-70583-3_28
   Sorensen M.H., 2006, Lectures on the Curry-Howard isomorphism, V149
   Stampoulis A, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3236788
   Statman R., 1979, Theoretical Computer Science, V9, P67, DOI 10.1016/0304-3975(79)90006-9
   Stickel M. E., 1988, Journal of Automated Reasoning, V4, P353, DOI 10.1007/BF00297245
   Stoy Joseph E., 1977, DENOTATIONAL SEMANTI
   TAKAHASH.MO, 1967, J MATH SOC JPN, V19, P399, DOI 10.2969/jmsj/01940399
   Takeuti G., JPN J MATH, V23, P39
   TAKEUTI G, 1954, JAPANESE J MATH, V24, P149
   Tarnlund S.-A., 1977, BIT (Nordisk Tidskrift for Informationsbehandling), V17, P215, DOI 10.1007/BF01932293
   Tassi E., 2018, COQPL 2018 4 INT WOR
   Tassi E., 2019, LEIBNIZ INT P INFORM, V141
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Vladimir L, 2008, P AAAI C ART INT, V8, P1594
   WADGE WW, 1991, LOGIC PROGRAMM, P289
   Wadler P, 2003, ACM SIGPLAN NOTICES, V38, P189, DOI 10.1145/944746.944723
   Wang Y., 2016, THESIS U MINNESOTA
   Wang YT, 2016, LECT NOTES COMPUT SC, V9632, P752, DOI 10.1007/978-3-662-49498-1_29
   Wansing Heinrich, 2002, Handb. Philos. Logic, V8, P61, DOI 10.1007/978-94-010-0387-2_2
   WARREN D. H. D., 1982, MACH INTELL, V10, P441
   Warren D. H. D., 1983, 309 SRI INT
   Warren DS, 2018, THEOR PRACT LOG PROG, V18, P706, DOI 10.1017/S1471068418000194
   Whalen M. W., 2005, THESIS U MINNESOTA
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
   WOS L, 1991, J LOGIC PROGRAM, V11, P1, DOI 10.1016/0743-1066(91)90008-D
   Zamov N. K., 1971, SEMINARS MATH, V16, P26
NR 248
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2022
VL 22
IS 6
BP 859
EP 904
AR PII S1471068421000533
DI 10.1017/S1471068421000533
EA NOV 2021
PG 46
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 6M4IE
UT WOS:000792199500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Amendola, G
   Dodaro, C
   Ricca, F
AF Amendola, Giovanni
   Dodaro, Carmine
   Ricca, Francesco
TI Better Paracoherent Answer Sets with Less Resources
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Answer Set Programming; Paracoherent reasoning; Semi-equilibrium models
ID SEMANTICS; SYSTEM; MODELS
AB Answer Set Programming (ASP) is a well-established formalism for logic programming. Problem solving in ASP requires to write an ASP program whose answers sets correspond to solutions. Albeit the non-existence of answer sets for some ASP programs can be considered as a modeling feature, it turns out to be a weakness in many other cases, and especially for query answering. Paracoherent answer set semantics extend the classical semantics of ASP to draw meaningful conclusions also from incoherent programs, with the result of increasing the range of applications of ASP. State of the art implementations of paracoherent ASP adopt the semi-equilibrium semantics, but cannot be lifted straightforwardly to compute efficiently the (better) split semi-equilibrium semantics that discards undesirable semi-equilibrium models. In this paper an efficient evaluation technique for computing a split semi-equilibrium model is presented. An experiment on hard benchmarks shows that better paracoherent answer sets can be computed consuming less computational resources than existing methods.
C1 [Amendola, Giovanni; Dodaro, Carmine; Ricca, Francesco] Univ Calabria, Arcavacata Di Rende, Italy.
C3 University of Calabria
RP Amendola, G (corresponding author), Univ Calabria, Arcavacata Di Rende, Italy.
EM amendola@mat.unical.it; dodaro@mat.unical.it; ricca@mat.unical.it
RI Dodaro, Carmine/AAE-5732-2020; Amendola, Giovanni/Q-1859-2018
OI Dodaro, Carmine/0000-0002-5617-5286; Amendola,
   Giovanni/0000-0002-2111-9671
CR Alcantara J.F.L., 2005, J APPL LOGIC, V3, P67, DOI 10.1016/j.jal.2004.07.012
   Alviano Mario, 2019, Logic Programming and Nonmonotonic Reasoning. 15th International Conference, LPNMR 2019. Proceedings: Lecture Notes in Artificial Intelligence (LNAI 11481), P241, DOI 10.1007/978-3-030-20528-7_18
   Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   ALVIANO M., 2016, THEOR PRACT LOG PROG, V16, P5
   Alviano M, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1669
   Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   Amendola G, 2018, AAAI CONF ARTIF INTE, P1720
   Amendola G, 2017, AAAI CONF ARTIF INTE, P1034
   Amendola G, 2016, ARTIF INTELL, V234, P219, DOI 10.1016/j.artint.2016.01.011
   Angiulli F, 2014, ARTIF INTELL, V210, P56, DOI 10.1016/j.artint.2014.02.003
   Arenas M., 2003, THEOR PRACT LOG PROG, V3, P4
   Balduccini M., 2003, P INT S LOG FORM COM, V102, P9
   Balduccini Marcello., 2001, LPNMR, P439
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Bry F, 2000, J AUTOM REASONING, V25, P35, DOI 10.1023/A:1006291616338
   Buccafurri F, 2000, IEEE T KNOWL DATA EN, V12, P845, DOI 10.1109/69.877512
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   Campeotto F, 2015, J EXP THEOR ARTIF IN, V27, P503, DOI 10.1080/0952813X.2014.993503
   Costantini S, 2016, THEOR PRACT LOG PROG, V16, P619, DOI 10.1017/S1471068416000478
   Cuteri B., 2019, CEUR WORKSHOP P, V2396, P289
   Derler Y, 2016, AI MAG, V37, P45
   DODARO C., 2016, THEOR PRACT LOG PROG, V16, P5
   Dodaro C, 2015, LECT NOTES COMPUT SC, V9209, P77, DOI 10.1007/978-3-319-22002-4_7
   Eiter T, 1997, ANN MATH ARTIF INTEL, V19, P59, DOI 10.1023/A:1018947420290
   EITER T, 2010, P INT C PRINC KNOWL
   Eiter T, 2009, LECT NOTES COMPUT SC, V5689, P40, DOI 10.1007/978-3-642-03754-2_2
   Erdem E, 2016, AI MAG, V37, P53, DOI 10.1609/aimag.v37i3.2678
   Gaggl SA, 2015, THEOR PRACT LOG PROG, V15, P434, DOI 10.1017/S1471068415000149
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P368, DOI 10.1007/978-3-319-23264-5_31
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   Gebser M, 2017, J ARTIF INTELL RES, V60, P41, DOI 10.1613/jair.5373
   Gebser M, 2016, AAAI CONF ARTIF INTE, P4327
   Gebser Martin, 2012, SYNTHESIS LECT ARTIF
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Janota M, 2016, ARTIF INTELL, V233, P73, DOI 10.1016/j.artint.2016.01.002
   Kleinberg J., 2006, Algorithm Design
   Koshimura M., 2009, P FTP 09, P49
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Niemela I, 1996, LECT NOTES ARTIF INT, V1071, P278
   Galindo M, 2008, J LOGIC COMPUT, V18, P913, DOI 10.1093/logcom/exn015
   Pearce D, 2006, ANN MATH ARTIF INTEL, V47, P3, DOI 10.1007/s10472-006-9028-z
   Pereira LM, 2007, LECT NOTES ARTIF INT, V4790, P454, DOI 10.1007/978-3-540-75560-9_33
   Przymusinski T. C., 1991, New Generation Computing, V9, P401, DOI 10.1007/BF03037171
   Sakama C., 1995, Journal of Logic and Computation, V5, P265, DOI 10.1093/logcom/5.3.265
   SEIPEL D, 1997, LECT NOTES COMPUT SC, V1471, P66
   van Harmelen F., 2008, Foundations of Artificial Intelligence, V3
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   YOU JH, 1994, J COMPUT SYST SCI, V49, P334, DOI 10.1016/S0022-0000(05)80053-4
NR 51
TC 0
Z9 0
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 757
EP 772
DI 10.1017/S1471068419000176
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Doménech, JJ
   Gallagher, JP
   Genaim, S
AF Domenech, Jesus J.
   Gallagher, John P.
   Genaim, Samir
TI Control-Flow Refinement by Partial Evaluation, and its Application to
   Termination and Cost Analysis
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Control-flow refinement; partial evaluation; termination analysis; cost
   analysis
ID ABSTRACT INTERPRETATION
AB Control-flow refinement refers to program transformations whose purpose is to make implicit control-flow explicit, and is used in the context of program analysis to increase precision. Several techniques have been suggested for different programming models, typically tailored to improving precision for a particular analysis. In this paper we explore the use of partial evaluation of Horn clauses as a general-purpose technique for control-flow refinement for integer transitions systems. These are control-flow graphs where edges are annotated with linear constraints describing transitions between corresponding nodes, and they are used in many program analysis tools. Using partial evaluation for control-flow refinement has the clear advantage over other approaches in that soundness follows from the general properties of partial evaluation; in particular, properties such as termination and complexity are preserved. We use a partial evaluation algorithm incorporating property-based abstraction, and show how the right choice of properties allows us to prove termination and to infer complexity of challenging programs that cannot be handled by state-of-the-art tools. We report on the integration of the technique in a termination analyzer, and its use as a preprocessing step for several cost analyzers.
C1 [Domenech, Jesus J.; Genaim, Samir] Univ Complutense Madrid, Madrid, Spain.
   [Gallagher, John P.] Roskilde Univ, Roskilde, Denmark.
   [Gallagher, John P.] IMDEA Software Inst, Madrid, Spain.
C3 Complutense University of Madrid; Roskilde University; IMDEA Software
   Institute
RP Doménech, JJ (corresponding author), Univ Complutense Madrid, Madrid, Spain.
EM jdomenech@ucm.es; jpg@ruc.dk; sgenaim@ucm.es
OI Gallagher, John P./0000-0001-6984-7419; Genaim,
   Samir/0000-0002-7176-1881
FU Spanish MICINN/FEDER, UE project [RTI2018-094403-B-C31]; MINECO
   [TIN2015-69175-C4-2-R]; CM project [S2018/TCS-4314]; predoctoral UCM
   grant [CT27/16-CT28/16]
FX This work was funded partially by the Spanish MICINN/FEDER, UE project
   RTI2018-094403-B-C31, the MINECO project TIN2015-69175-C4-2-R, the CM
   project S2018/TCS-4314 and by the predoctoral UCM grant CT27/16-CT28/16.
CR Albert E, 2011, J AUTOM REASONING, V46, P161, DOI 10.1007/s10817-010-9174-1
   Alias C, 2010, LECT NOTES COMPUT SC, V6337, P117, DOI 10.1007/978-3-642-15769-1_8
   Bagnara R, 2008, SCI COMPUT PROGRAM, V72, P3, DOI 10.1016/j.scico.2007.08.001
   Bagnara R, 2012, INFORM COMPUT, V215, P47, DOI 10.1016/j.ic.2012.03.003
   Ben-Amram AM, 2017, LECT NOTES COMPUT SC, V10427, P601, DOI 10.1007/978-3-319-63390-9_32
   Ben-Amram AM, 2014, J ACM, V61, DOI 10.1145/2629488
   Borralleras C, 2017, LECT NOTES COMPUT SC, V10205, P99, DOI 10.1007/978-3-662-54577-5_6
   Brockschmidt M, 2016, ACM T PROGR LANG SYS, V38, DOI 10.1145/2866575
   Brockschmidt M, 2016, LECT NOTES COMPUT SC, V9636, P387, DOI 10.1007/978-3-662-49674-9_22
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   DE ANGELIS E, 2012, LNCS, V7844, P51
   DOMENECH J. J, 2019, ABS190712345 CORR
   Fioravanti F, 2012, FUND INFORM, V119, P281, DOI 10.3233/FI-2012-738
   Flores-Montoya Antonio, 2014, Programming Languages and Systems. 12th Asian Symposium (APLAS 2014), Proceedings: LNCS 8858, P275, DOI 10.1007/978-3-319-12736-1_15
   FLORES-MONTOYA A, 2017, THESIS
   Gallagher J. P., 2019, VPT 2019 EPTCS, V299, P34
   Gulwani S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P375, DOI 10.1145/1542476.1542518
   Kafle B, 2018, THEOR PRACT LOG PROG, V18, P553, DOI 10.1017/S1471068418000091
   Leuschel M, 2004, ACM T PROGR LANG SYS, V26, P413, DOI 10.1145/982158.982159
   Leuschel M, 2000, LECT NOTES COMPUT SC, V1817, P62, DOI 10.1007/10720327_5
   LEUSCHEL M, 2006, P PEPM 2006, P88
   Podelski A, 2004, LECT NOTES COMPUT SC, V2937, P239
   Puebla G., 1999, Proceedings of the 1999 ACM SIGPLAN. Workshop on Partial Evaluation and Semantics-Based Program Manipulation (PEPM'99), P75
   Puebla G, 2006, LECT NOTES COMPUT SC, V4134, P107
   Sharma Rahul, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P703, DOI 10.1007/978-3-642-22110-1_57
NR 25
TC 8
Z9 8
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 990
EP 1005
DI 10.1017/S1471068419000310
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500023
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rodosthenous, CT
   Michael, L
AF Rodosthenous, Christos T.
   Michael, Loizos
TI Web-STAR: A Visual Web-based IDE for a Story Comprehension System
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE web-based IDE; story understanding; argumentation; reasoning; visual
   programming; collaboration
ID ARGUMENTATION; USABILITY; SUS
AB We present Web-STAR, an online platform for story understanding built on top of the STAR reasoning engine for STory comprehension through ARgumentation. The platform includes a web-based integrated development environment, integration with the STAR system, and a web service infrastructure to support integration with other systems that rely on story understanding functionality to complete their tasks. The platform also delivers a number of "social" features, including a community repository for public story sharing with a built-in commenting system, and tools for collaborative story editing that can be used for team development projects and for educational purposes.
C1 [Rodosthenous, Christos T.; Michael, Loizos] Open Univ Cyprus, Nicosia, Cyprus.
   [Michael, Loizos] Res Ctr Interact Media Smart Syst & Emerging Tech, Nicosia, Cyprus.
C3 Open University of Cyprus
RP Rodosthenous, CT (corresponding author), Open Univ Cyprus, Nicosia, Cyprus.
EM christos.rodosthenous@ouc.ac.cy; loizos@ouc.ac.cy
RI Rodosthenous, Christos/I-7321-2016; Michael, Loizos/HNB-5193-2023
OI Rodosthenous, Christos/0000-0003-2065-9200; 
CR Abbott H. Porter, 2008, CAMBRIDGE INTRO NARR, V2nd, DOI DOI 10.1017/CBO9780511816932
   Altman Rick., 2008, Theory of Narrative
   [Anonymous], 2016, IEEE Intelligent Informatics Bulletin
   [Anonymous], 1990, Representations of Commonsense Knowledge
   [Anonymous], 2015, INT J COMPUT SCI APP
   [Anonymous], ICECODER IDE
   [Anonymous], 2013, P 11 INT S LOG FORM
   [Anonymous], ECL CHE IDE
   [Anonymous], P 5 INT JOINT C ART
   [Anonymous], 1997, P RIAO
   [Anonymous], 2007, ARTIFICIAL INTELLIGE, DOI DOI 10.1016/J.ARTINT.2007.05.001
   [Anonymous], OPENACCESS SERIES IN
   [Anonymous], EUROPEAN PERSPECTIVE
   [Anonymous], 2 INT WORKSH US OR L
   [Anonymous], P 2000 ANLP NAACL WO
   [Anonymous], TECH REP
   [Anonymous], CORR
   [Anonymous], SWISH DATA LAB WEB I
   [Anonymous], 1 INT WORKSH US OR L
   [Anonymous], CODEANYWHERE IDE
   [Anonymous], 1 INT WORKSH US OR L
   [Anonymous], CODIAD WEB BASED CLO
   [Anonymous], COGNITIVE SYSTEMS RE
   [Anonymous], ACM T COMPUTATIONAL
   [Anonymous], AITR266
   [Anonymous], 2012, WebRTC: APIs and RTCWEB protocols of the HTML5 real-time web
   [Anonymous], 2015, P 12 INT S LOG FORM
   [Anonymous], CONCEPTNET
   [Anonymous], CEUR WORKSHOP P
   [Anonymous], 1999, NARRATIVE COMPREHENS
   [Anonymous], 2015, Commonsense Reasoning: An Event Calculus Based Approach
   [Anonymous], 2013, Handbook of Graph Drawing and Visualization
   [Anonymous], ANSWER SET PROGRAMMI
   [Anonymous], 1974, J PHILOS
   [Anonymous], 2006, ENCY COGNITIVE SCI
   [Anonymous], 1990, Building Large Knowledge-Based Systems: Representation and Inference in the CYC Project
   Bangor A, 2009, J USABILITY STUD, V4, P114
   Barnum CarolM., 2001, USABILITY TESTING RE
   Baroni P, 2011, KNOWL ENG REV, V26, P365, DOI 10.1017/S0269888911000166
   Besnard P., 2008, Elements of argumentation, V47
   Blackmon M. H., 2002, Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2002, P463, DOI 10.1145/503376.503459
   Brooke J., 1996, USABILITY EVALUATION, P189, DOI DOI 10.1201/9781498710411-35
   Buhrmester M, 2011, PERSPECT PSYCHOL SCI, V6, P3, DOI 10.1177/1745691610393980
   Carroll N, 2001, SUNY SER MARGINS LIT, P21
   Corcoglioniti F, 2016, IEEE T KNOWL DATA EN, V28, P3261, DOI 10.1109/TKDE.2016.2602206
   Diakidoy IA, 2014, FRONT ARTIF INTEL AP, V266, P31, DOI 10.3233/978-1-61499-436-7-31
   Eason K.D., 2005, INFORM TECHNOLOGY OR
   Forster E.M., 2010, Aspects of the Novel
   Franz M, 2016, BIOINFORMATICS, V32, P309, DOI 10.1093/bioinformatics/btv557
   Hirschman L., 1999, P 37 ANN M ASS COMPU, P325, DOI [DOI 10.3115/1034678.1034731, 10.3115/1034678.1034731]
   John B. E., 1995, Human Factors in Computing Systems. CHI'95 Conference Proceedings, P429
   Kline RB, 2005, INT J HUM-COMPUT ST, V63, P607, DOI 10.1016/j.ijhcs.2005.05.002
   Kowalski R, 2016, THEOR PRACT LOG PROG, V16, P269, DOI 10.1017/S1471068416000041
   LENAT DB, 1995, COMMUN ACM, V38, P33, DOI 10.1145/219717.219745
   Lewis JR, 2015, INT J HUM-COMPUT INT, V31, P496, DOI 10.1080/10447318.2015.1064654
   Macefield R, 2009, J USABILITY STUD, V5, P34
   Mahdisoltani F., 2015, CIDR, P1
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Michael L., 2016, Proceeding of the 4th International Workshop on Artificial Intelligence and Cognition, P2
   Michael L, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P1525
   Mitchell T, 2015, AAAI CONF ARTIF INTE, P2302
   Modgil S, 2014, ARGUM COMPUT, V5, P31, DOI 10.1080/19462166.2013.869766
   Morgan MS, 2017, STUD HIST PHILOS SCI, V62, P86, DOI 10.1016/j.shpsa.2017.03.006
   Mueller Erik T., 2007, Literary & Linguistic Computing, V22. no 1, P67, DOI 10.1093/llc/fql014
   Mueller E.T., 2003, P HLT NAACL 2003 WOR, P46
   Ng HT, 2000, PROCEEDINGS OF THE 2000 JOINT SIGDAT CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND VERY LARGE CORPORA, P124
   Prince G., 1987, A dictionary of narratology
   Rahwan I, 2009, ARGUMENTATION IN ARTIFICIAL INTELLIGENCE, P1, DOI 10.1007/978-0-387-98197-0
   RICOEUR P, 1980, CRIT INQUIRY, V7, P169, DOI 10.1086/448093
   Rodosthenous C, 2016, FRONT ARTIF INTEL AP, V284, P111, DOI 10.3233/978-1-61499-682-8-111
   ROTH PA, 1989, SOC RES, V56, P449
   Ryan ML, 2007, CAMBR COMPANION LIT, P22, DOI 10.1017/CCOL0521856965.002
   Toni F, 2014, ARGUM COMPUT, V5, P89, DOI 10.1080/19462166.2013.869878
   UzZaman N, 2013, P 7 INT WORKSHOP SEM, V2, P1, DOI DOI 10.1017/S1351324914000060
   Velleman JD, 2003, PHILOS REV, V112, P1, DOI 10.1215/00318108-112-1-1
   von Ahn L, 2008, COMMUN ACM, V51, P58, DOI 10.1145/1378704.1378719
   Wellner B., 2006, Natural Language Engineering, V12, P305, DOI 10.1017/S1351324905004018
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
   Zhang X, 2015, ADV NEUR IN, V28
NR 79
TC 0
Z9 0
U1 2
U2 7
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2019
VL 19
IS 2
SI SI
BP 317
EP 359
DI 10.1017/S1471068418000443
PG 43
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science; Science & Technology - Other Topics
GA HL5XX
UT WOS:000458807300007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU De Angelis, E
   Fioravanti, F
   Pettorossi, A
   Proietti, M
AF De Angelis, Emanuele
   Fioravanti, Fabio
   Pettorossi, Alberto
   Proietti, Maurizio
TI Solving Horn Clauses on Inductive Data Types Without Induction
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
DE Program verification; constrained Horn clauses; constraint logic
   programming; inductively defined data types; program transformation
ID LOGIC PROGRAMS; IMPERATIVE PROGRAMS; VERIFICATION; TRANSFORMATION;
   SOLVERS; RULES
AB We address the problem of verifying the satisfiability of Constrained Horn Clauses (CHCs) based on theories of inductively defined data structures, such as lists and trees. We propose a transformation technique whose objective is the removal of these data structures from CHCs, hence reducing their satisfiability to a satisfiability problem for CHCs on integers and booleans. We propose a transformation algorithm and identify a class of clauses where it always succeeds. We also consider an extension of that algorithm, which combines clause transformation with reasoning on integer constraints. Via an experimental evaluation we show that our technique greatly improves the effectiveness of applying the Z3 solver to CHCs. We also show that our verification technique based on CHC transformation followed by CHC solving, is competitive with respect to CHC solvers extended with induction.
C1 [De Angelis, Emanuele; Fioravanti, Fabio] G dAnnunzio Univ Chieti Pescara, DEC, Pescara, Italy.
   [Pettorossi, Alberto] Univ Roma Tor Vergata, DICII, Rome, Italy.
   [Proietti, Maurizio] CNR IASI, Rome, Italy.
C3 G d'Annunzio University of Chieti-Pescara; University of Rome Tor
   Vergata; Consiglio Nazionale delle Ricerche (CNR); Istituto di Analisi
   dei Sistemi ed Informatica "Antonio Ruberti" (IASI-CNR)
RP De Angelis, E (corresponding author), G dAnnunzio Univ Chieti Pescara, DEC, Pescara, Italy.
EM emanuele.deangelis@unich.it; fabio.fioravanti@unich.it;
   pettorossi@info.uniroma2.it; maurizio.proietti@iasi.cnr.it
RI Pettorossi, Alberto/D-8503-2016; Proietti, Maurizio/AAW-7487-2020
OI De Angelis, Emanuele/0000-0002-7319-8439; Proietti,
   Maurizio/0000-0003-3835-4931; FIORAVANTI, Fabio/0000-0002-1268-7829
CR Albert E, 2007, LECT NOTES COMPUT SC, V4354, P124
   Bagnara R, 2008, SCI COMPUT PROGRAM, V72, P3, DOI 10.1016/j.scico.2007.08.001
   Bjorner N, 2015, LECT NOTES COMPUT SC, V9300, P24, DOI 10.1007/978-3-319-23534-9_2
   Bradley AR, 2011, LECT NOTES COMPUT SC, V6538, P70, DOI 10.1007/978-3-642-18275-4_7
   Clarke EdmundM., 2000, Proceedings of the International Conference on Computer Aided Veri cation (CAV), P154, DOI 10.1007/1072216715
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   De Angelis Emanuele, 2018, Theory and Practice of Logic Programming, V18, P126, DOI 10.1017/S1471068417000497
   De Angelis E, 2017, SCI COMPUT PROGRAM, V147, P78, DOI 10.1016/j.scico.2016.11.002
   De Angelis E., 2014, Lecture Notes in Computer Science, V8413, P568, DOI [DOI 10.1007/978-3-642-54862-8_47, 10.1007/978-3-642-54862-8_47]
   De Angelis E, 2017, FUND INFORM, V150, P73, DOI 10.3233/FI-2017-1461
   De Angelis E, 2016, LECT NOTES COMPUT SC, V9837, P147, DOI 10.1007/978-3-662-53413-7_8
   De Angelis E, 2015, THEOR PRACT LOG PROG, V15, P635, DOI 10.1017/S1471068415000289
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   De Schreye D, 1999, J LOGIC PROGRAM, V41, P231, DOI 10.1016/S0743-1066(99)00030-8
   Dixon L, 2003, LECT NOTES ARTIF INT, V2741, P279
   Enderton H. B., 2001, A mathematical introduction to logic
   Etalle S, 1996, THEOR COMPUT SCI, V166, P101, DOI 10.1016/0304-3975(95)00148-4
   Felsing D, 2014, P 29 ACM IEEE INT C, P349, DOI [10.1145/2642937.2642987, DOI 10.1145/2642937.2642987]
   Grebenshchikov S, 2012, ACM SIGPLAN NOTICES, V47, P405, DOI 10.1145/2345156.2254112
   Hoder Krystof, 2012, LNCS, P157, DOI [10.1007/978-3-642-31612-8_13, DOI 10.1007/978-3-642-31612-8_13, DOI 10.1007/978-3-642-31612-813]
   Hojjat Hossein, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P247, DOI 10.1007/978-3-642-32759-9_21
   Jaffar J, 2012, LNCS, P396, DOI DOI 10.1007/978-3-642-29860-8_
   Kafle B, 2016, LECT NOTES COMPUT SC, V9779, P261, DOI 10.1007/978-3-319-41528-4_14
   Komuravelli Anvesh, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P846, DOI 10.1007/978-3-642-39799-8_59
   Leroy X., 2017, OCAML SYSTEM RELEASE
   McMillan KL, 2003, LECT NOTES COMPUT SC, V2725, P1
   Méndez-Lojo M, 2008, LECT NOTES COMPUT SC, V4915, P154, DOI 10.1007/978-3-540-78769-3_11
   Mordvinov D., 2017, LPAR-21, 21st International Conference on Logic for Programming, Artificial Intelligence and Reasoning, Maun, Botswana, May 7-12, 2017, volume 46 of EPiC Series in Computing, V46, P338
   Peralta JC, 1998, LECT NOTES COMPUT SC, V1503, P246
   PROIETTI M, 1995, THEOR COMPUT SCI, V142, P89, DOI 10.1016/0304-3975(94)00227-A
   Reynolds A, 2015, LECT NOTES COMPUT SC, V8931, P80
   Suter P, 2011, LECT NOTES COMPUT SC, V6887, P298, DOI 10.1007/978-3-642-23702-7_23
   Tamaki H., 1984, P 2 INT LOG PROGR C, P127
   Unno H, 2017, LECT NOTES COMPUT SC, V10427, P571, DOI 10.1007/978-3-319-63390-9_30
   WADLER P, 1990, THEOR COMPUT SCI, V73, P231, DOI 10.1016/0304-3975(90)90147-A
NR 35
TC 17
Z9 17
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 452
EP 469
DI 10.1017/S1471068418000157
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400011
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Beck, H
   Eiter, T
   Folie, C
AF Beck, Harald
   Eiter, Thomas
   Folie, Christian
TI Ticker: A system for incremental ASP-based stream reasoning
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming colocated with the
   23rd International Conference on Principles and Practice of Constraint
   Programming / 20th International Conference on Theory and Applications
   of Satisfiability Testing
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google
DE Stream reasoning; Answer set programming; Non-monotonic reasoning
AB In complex reasoning tasks, as expressible by Answer Set Programming (ASP), problems often permit for multiple solutions. In dynamic environments, where knowledge is continuously changing, the question arises how a given model can be incrementally adjusted relative to new and outdated information. This paper introduces Ticker, a prototypical engine for well-defined logical reasoning over streaming data. Ticker builds on a practical fragment of the recent rule-based language LARS, which extends ASP for streams by providing flexible expiration control and temporal modalities. We discuss Ticker's reasoning strategies: first, the repeated one-shot solving mode calls Clingo on an ASP encoding. We show how this translation can be incrementally updated when new data is streaming in or time passes by. Based on this, we build on Doyle's classic justification-based truth-maintenance system to update models of non-stratified programs. Finally, we empirically compare the obtained evaluation mechanisms.
C1 [Beck, Harald; Eiter, Thomas; Folie, Christian] Vienna Univ Technol, Inst Informat Syst, Favoritenstr 9-11, A-1040 Vienna, Austria.
C3 Technische Universitat Wien
RP Beck, H (corresponding author), Vienna Univ Technol, Inst Informat Syst, Favoritenstr 9-11, A-1040 Vienna, Austria.
EM beck@kr.tuwien.ac.at; eiter@kr.tuwien.ac.at; christian.folie@outlook.com
RI Eiter, Thomas/ABE-9263-2021
FU Austrian Science Fund (FWF) [P26471, W1255-N23]; Austrian Science Fund
   (FWF) [P26471] Funding Source: Austrian Science Fund (FWF)
FX This research has been supported by the Austrian Science Fund (FWF)
   projects P26471 and W1255-N23.
CR Alviano M, 2014, THEOR PRACT LOG PROG, V14, P755, DOI 10.1017/S1471068414000325
   Anicic D, 2012, SEMANT WEB, V3, P397, DOI 10.3233/SW-2011-0053
   [Anonymous], 2011, P CIKM
   Babu S, 2001, SIGMOD REC, V30, P109, DOI 10.1145/603867.603884
   Barbieri DF, 2010, LECT NOTES COMPUT SC, V6088, P1, DOI 10.1007/978-3-642-13486-9_1
   BECK H., 2017, RR18431702 INFSYS
   Beck H, 2015, AAAI CONF ARTIF INTE, P1431
   Beck H, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2741
   Becker HD, 2017, INTRODUCTION TO BRONCHOSCOPY, 2ND EDITION, P1
   Dal Palù A, 2009, LECT NOTES COMPUT SC, V5649, P115, DOI 10.1007/978-3-642-02846-5_14
   Le-Phuoc D, 2011, LECT NOTES COMPUT SC, V7031, P370, DOI 10.1007/978-3-642-25073-6_24
   Della Valle E, 2009, IEEE INTELL SYST, V24, P83, DOI 10.1109/MIS.2009.125
   Do TM, 2011, LECT NOTES ARTIF INT, V6657, P104, DOI 10.1007/978-3-642-21043-3_13
   DOYLE J, 1979, ARTIF INTELL, V12, P231, DOI 10.1016/0004-3702(79)90008-0
   ELKAN C, 1990, ARTIF INTELL, V43, P219, DOI 10.1016/0004-3702(90)90086-F
   Gebser Martin, 2015, Advances in Knowledge Representation, Logic Programming, and Abstract Argumentation. LNCS 9060, P17
   GEBSER M., 2014, P TECHN COMM 30 IN S
   Gupta A., 1993, SIGMOD Record, V22, P157, DOI 10.1145/170036.170066
   Lefevre C, 2009, LECT NOTES COMPUT SC, V5753, P522, DOI 10.1007/978-3-642-04238-6_52
   Minh Dao-Tran, 2012, Logics in Artificial Intelligence. Proceedings of the 13th European Conference (JELIA 2012), P480, DOI 10.1007/978-3-642-33353-8_38
   Spring N, 2004, IEEE ACM T NETWORK, V12, P2, DOI 10.1109/TNET.2003.822655
   Zaniolo Carlo, 2012, Datalog in Academia and Industry. Proceedings of the Second International Workshop, Datalog 2.0, P177, DOI 10.1007/978-3-642-32925-8_18
NR 22
TC 22
Z9 22
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 744
EP 763
DI 10.1017/S1471068417000370
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lifschitz, V
AF Lifschitz, Vladimir
TI Achievements in answer set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming colocated with the
   23rd International Conference on Principles and Practice of Constraint
   Programming / 20th International Conference on Theory and Applications
   of Satisfiability Testing
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google
DE answer set programming; teaching logic programming; programming
   methodology
AB This paper describes an approach to the methodology of answer set programming that can facilitate the design of encodings that are easy to understand and provably correct. Under this approach, after appending a rule or a small group of rules to the emerging program, we include a comment that states what has been "achieved" so far. This strategy allows us to set out our understanding of the design of the program by describing the roles of small parts of the program in a mathematically precise way.
C1 [Lifschitz, Vladimir] Univ Texas Austin, Austin, TX 78712 USA.
C3 University of Texas System; University of Texas Austin
RP Lifschitz, V (corresponding author), Univ Texas Austin, Austin, TX 78712 USA.
EM vl@cs.utexas.edu
FU National Science Foundation [IIS-1422455]
FX This research was partially supported by the National Science Foundation
   under Grant IIS-1422455
CR [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   Brain M., 2012, INT J ADV SOFTWARE, V5, P237
   Brooks DR, 2007, J AUTOM REASONING, V39, P471, DOI 10.1007/s10817-007-9082-1
   Calimeri F., 2012, ASP-CORE-2 Input Language Format
   Charwat G., 2015, P 4 INT C ALG DEC TH
   DIJKSTRA EW, 1972, COMMUN ACM, V15, P859, DOI 10.1145/355604.361591
   Eiter Thomas, 1998, P 6 INT C PRINC KNOW, P406
   Gebser M., 2015, POTASSCO USER GUIDE
   Gebser M, 2015, THEOR PRACT LOG PROG, V15, P449, DOI 10.1017/S1471068415000150
   Gebser Martin, 2012, SYNTHESIS LECT ARTIF
   GELFOND M, 1990, LOGIC PROGRAMM, P579
   GELFOND M, 1993, J LOGIC PROGRAM, V17, P301, DOI 10.1016/0743-1066(93)90035-F
   Gelfond M, 1996, INT J SOFTW ENG KNOW, V6, P89, DOI 10.1142/S0218194096000053
   Gelfond M., 2014, KNOWLEDGE REPRESENTA
   Lifschitz V, 1999, LECT NOTES ARTIF INT, V1730, P92, DOI 10.1007/3-540-46767-X_7
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
NR 16
TC 7
Z9 7
U1 1
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 961
EP 973
DI 10.1017/S1471068417000345
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800017
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Drabent, W
AF Drabent, Wlodzimierz
TI On definite program answers and least Herbrand models
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic programming; least Herbrand model; declarative semantics; function
   symbols
AB A sufficient and necessary condition is given under which least Herbrand models exactly characterize the answers of definite clause programs.
C1 [Drabent, Wlodzimierz] Polish Acad Sci, Inst Comp Sci, Ul Jana Kazimierza 5, PL-01248 Warsaw, Poland.
   [Drabent, Wlodzimierz] Linkoping Univ, Dept Comp & Informat Sci, S-58183 Linkoping, Sweden.
C3 Polish Academy of Sciences; Institute of Computer Science of the Polish
   Academy of Sciences; Linkoping University
RP Drabent, W (corresponding author), Polish Acad Sci, Inst Comp Sci, Ul Jana Kazimierza 5, PL-01248 Warsaw, Poland.; Drabent, W (corresponding author), Linkoping Univ, Dept Comp & Informat Sci, S-58183 Linkoping, Sweden.
EM drabent@ipipan.waw.pl
RI Drabent, Włodzimierz/JGM-7411-2023
OI Drabent, Włodzimierz/0000-0002-4700-7272
CR Apt K.R., 1997, INT SERIES COMPUTER
   Bossi A, 2009, THEOR COMPUT SCI, V410, P4692, DOI 10.1016/j.tcs.2009.07.039
   Davis M., 1993, HDB LOGIC ARTIFICIAL, V1, P31
   Doets Kees., 1994, LOGIC LOGIC PROGRAMM
   DRABENT W, 1987, LECT NOTES COMPUT SC, V250, P167
   DRABENT W, 1988, THEOR COMPUT SCI, V59, P133, DOI 10.1016/0304-3975(88)90099-0
   Drabent W, 2016, ACM T COMPUT LOG, V17, DOI 10.1145/2898434
   Lloyd J. W., 1987, Foundations of logic programming
   Maher M.J., 1988, FDN DEDUCTIVE DATABA, P627
   Naish L, 2014, THEOR PRACT LOG PROG, V14, P215, DOI 10.1017/S147106841200035X
   Shoenfield J.R., 1967, MATH LOGIC
   Sterling L., 1994, THE ART OF PROLOG
   van Dalen D., 2004, LOGIC STRUCTURE
NR 13
TC 3
Z9 3
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2016
VL 16
BP 498
EP 508
DI 10.1017/S1471068416000089
PN 4
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA EA4ND
UT WOS:000386588500004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Moguillansky, MO
   Rotstein, ND
   Falappa, MA
   García, AJ
   Simari, GR
AF Moguillansky, Martin O.
   Rotstein, Nicolas D.
   Falappa, Marcelo A.
   Garcia, Alejandro J.
   Simari, Guillermo R.
TI <i>Dynamics of knowledge in</i> DeLP <i>through Argument Theory
   Change</i>
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Knowledge Representation and Reasoning; Logic Programming; Belief
   revision; Argumentation; Non-monotonic reasoning
ID BELIEF REVISION; LOGIC
AB This article is devoted to the study of methods to change defeasible logic programs (de.l.p.s) which are the knowledge bases used by the Defeasible Logic Programming (DeLP) interpreter. DeLP is an argumentation formalism that allows to reason over potentially inconsistent de.l.p.s. Argument Theory Change (ATC) studies certain aspects of belief revision in order to make them suitable for abstract argumentation systems. In this article, abstract arguments are rendered concrete by using the particular rule-based defeasible logic adopted by DeLP. The objective of our proposal is to define prioritized argument revision operators a la ATC for de.l.p.s, in such a way that the newly inserted argument ends up undefeated after the revision, thus warranting its conclusion. In order to ensure this warrant, the de. l. p. has to be changed in concordance with a minimal change principle. To this end, we discuss different minimal change criteria that could be adopted. Finally, an algorithm is presented, implementing the argument revision operations.
C1 [Moguillansky, Martin O.; Rotstein, Nicolas D.; Falappa, Marcelo A.; Garcia, Alejandro J.; Simari, Guillermo R.] UNS, CONICET, Dept Comp Sci & Engn DCIC, Natl Res Council,AI R&D Lab LIDIA, Buenos Aires, DF, Argentina.
C3 Consejo Nacional de Investigaciones Cientificas y Tecnicas (CONICET)
RP Moguillansky, MO (corresponding author), UNS, CONICET, Dept Comp Sci & Engn DCIC, Natl Res Council,AI R&D Lab LIDIA, Buenos Aires, DF, Argentina.
EM mom@cs.uns.edu.ar; nicorotstein@gmail.com; maf@cs.uns.edu.ar;
   ajg@cs.uns.edu.ar; grs@cs.uns.edu.ar
RI Simari, Guillermo Ricardo/P-8739-2019
OI Simari, Guillermo Ricardo/0000-0001-6247-0428; Falappa, Marcelo
   A./0000-0002-3863-2893
CR ALCHOURRON CE, 1985, J SYMBOLIC LOGIC, V50, P510, DOI 10.2307/2274239
   Gómez SA, 2010, APPL ARTIF INTELL, V24, P102, DOI 10.1080/08839510903448692
   [Anonymous], 1999, A Textbook of Belief Dynamics: Theory Change and Database Updating
   Baroni P, 2007, ARTIF INTELL, V171, P675, DOI 10.1016/j.artint.2007.04.004
   Baroni P, 2010, FRONT ARTIF INTEL AP, V216, P63, DOI 10.3233/978-1-60750-619-5-63
   Benferhat S., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1449
   Billington D., 1999, KI 99 ADV ARTIFICIAL, P695
   Black E, 2009, AUTON AGENT MULTI-AG, V19, P173, DOI 10.1007/s10458-008-9074-5
   BOELLA G, 2008, 5 INT WORKSH ARG MUL
   Boella G, 2008, INT FED INFO PROC, V276, P215
   Cayrol C., 2008, P KR, P124
   Chesñevar CI, 2000, ACM COMPUT SURV, V32, P337, DOI 10.1145/371578.371581
   Dalal M., 1988, P 7 NAT C ART INT AA, P475
   Delgrande JamesP., 2008, Principles of Knowledge Representation and Reasoning: Proceedings of the Eleventh International Conference, KR 2008, Sydney, Australia, September 16-19, 2008, P411
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Falappa MA, 2002, ARTIF INTELL, V141, P1, DOI 10.1016/S0004-3702(02)00258-8
   García AJ, 2004, THEOR PRACT LOG PROG, V4, P95, DOI 10.1017/S1471068403001674
   GARCIA AJ, 2007, ECSQARU, V4724, P295
   García AJ, 2009, ARGUMENTATION IN ARTIFICIAL INTELLIGENCE, P153, DOI 10.1007/978-0-387-98197-0_8
   GARDENFORS P, 1981, AM PHILOS QUART, V18, P203
   Hansson S. O., 2002, Studia Logica, V70, P49, DOI 10.1023/A:1014654208944
   Hansson S. O., 1997, J APPL NONCLASSICAL, V7, P151, DOI DOI 10.1080/11663081.1997.10510904
   HANSSON SO, 1993, J PHILOS LOGIC, V22, P637, DOI 10.1007/BF01054039
   HANSSON SO, 1994, J SYMBOLIC LOGIC, V59, P845, DOI 10.2307/2275912
   Hansson SvenOve., 1991, Studia Logica, V50, P251
   Chesñevara CI, 2007, FRONT ARTIF INTEL AP, V160, P50
   LEVI I, 1977, SYNTHESE, V34, P423, DOI 10.1007/BF00485649
   Moguillansky M., 2011, LOGIC J IGPL JIGPAL
   Moguillansky M. O., 2008, P 23 C ART INT AAAI, P132
   Moguillansky MO, 2010, FRONT ARTIF INTEL AP, V216, P359, DOI 10.3233/978-1-60750-619-5-359
   Paglieri F, 2006, ARGUM LIB, V10, P359, DOI 10.1007/978-1-4020-4938-5_24
   Pollock JL, 2000, SYNTHESE, V122, P69, DOI 10.1023/A:1005220010407
   PRAKKEN H, 2001, HDB PHILOS LOGIC, V4, P219
   Rotstein N.D., 2007, AAAI, P136
   Rotstein ND, 2010, FRONT ARTIF INTEL AP, V216, P427, DOI 10.3233/978-1-60750-619-5-427
   Rotstein ND, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P898
   Rotstein ND, 2008, FRONT ARTIF INTEL AP, V172, P336
   Thimm M, 2008, FR ART INT, V172, P381
NR 38
TC 11
Z9 11
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2013
VL 13
BP 893
EP 957
DI 10.1017/S1471068411000603
PN 6
PG 65
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 298YL
UT WOS:000330360600001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Eiter, T
   Erdem, E
   Erdogan, H
   Fink, M
AF Eiter, Thomas
   Erdem, Esra
   Erdogan, Halit
   Fink, Michael
TI Finding similar/diverse solutions in answer set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE similar/diverse solutions; answer set programming; similar/diverse
   phylogenies; similar/diverse plans
ID ALGORITHMS
AB For some computational problems (e. g., product configuration, planning, diagnosis, query answering, phylogeny reconstruction), computing a set of similar/diverse solutions may be desirable for better decision-making. With this motivation, we have studied several decision/optimization versions of this problem in the context of Answer set programming (ASP), analyzed their computational complexity, and introduced offline/online methods to compute similar/diverse solutions of such computational problems with respect to a given distance function. All these methods rely on the idea of computing solutions to a problem by means of finding the answer sets for an ASP program that describes the problem. The offline methods compute all solutions of a problem in advance using the ASP formulation of the problem with an existing ASP solver, like clasp, and then identify similar/diverse solutions using some clustering methods (possibly in ASP as well). The online methods compute similar/diverse solutions of a problem following one of the three approaches: by reformulating the ASP representation of the problem to compute similar/diverse solutions at once using an existing ASP solver; by computing similar/diverse solutions iteratively (one after the other) using an existing ASP solver; by modifying the search algorithm of an ASP solver to compute similar/diverse solutions incrementally. All these methods are sound; the offline method and the first online method are complete whereas the others are not. We have modified clasp to implement the last online method and called it clasp-nk. In the first two online methods, the given distance function is represented in ASP; in the last one, however, it is implemented in C++. We have shown the applicability and the effectiveness of these methods using clasp or clasp-nk on two sorts of problems with different distance measures: on a real-world problem in phylogenetics (i.e., reconstruction of similar/diverse phylogenies for Indo-European languages), and on several planning problems in a well-known domain (i.e., Blocks World). We have observed that in terms of computational efficiency (both time and space), the last online method outperforms the others; also, it allows us to compute similar/diverse solutions when the distance function cannot be represented in ASP ( e. g., due to some mathematical functions not supported by the ASP solvers) but can be easily implemented in C++.
C1 [Eiter, Thomas; Fink, Michael] Vienna Univ Technol, Inst Informat Syst, A-1040 Vienna, Austria.
   [Erdem, Esra; Erdogan, Halit] Sabanci Univ, Fac Engn & Nat Sci, Istanbul, Turkey.
C3 Technische Universitat Wien; Sabanci University
RP Eiter, T (corresponding author), Vienna Univ Technol, Inst Informat Syst, A-1040 Vienna, Austria.
EM eiter@kr.tuwien.ac.at; esraerdem@sabanciuniv.edu; halit@sabanciuniv.edu;
   fink@kr.tuwien.ac.at
RI Eiter, Thomas/ABE-9263-2021; Erdem, Esra/I-4587-2012
OI Erdem, Esra/0000-0001-8384-7810
FU FWF (Austrian Science Funds) [P20841]; Wolfgang Pauli Institute; TUBITAK
   [107E229, 108E229]
FX Part of the results in this paper are contained, in preliminary form, in
   Proceedings of the 25th International Conference on Logic Programming
   (ICLP 2009). This work was partially supported by FWF (Austrian Science
   Funds) project P20841, the Wolfgang Pauli Institute, and TUBITAK Grants
   107E229 and 108E229.
CR [Anonymous], 1991, PHYLOGENY ECOLOGY BE
   [Anonymous], 1964, PHEN PHYLOGEN CLASSI
   Bafna V, 1998, SIAM J DISCRETE MATH, V11, P224, DOI 10.1137/S089548019528280X
   Bailleux O, 1999, SIXTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-99)/ELEVENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE (IAAI-99), P642
   Bluis J, 2003, THIRD IEEE SYMPOSIUM ON BIOINFORMATICS AND BIOENGINEERING - BIBE 2003, PROCEEDINGS, P87, DOI 10.1109/BIBE.2003.1188933
   Bodenreider O., 2008, 3 INT WORKSH APPL LO, P85
   Brooks DR, 2007, J AUTOM REASONING, V39, P471, DOI 10.1007/s10817-007-9082-1
   Brooks DR, 2005, LECT NOTES COMPUT SC, V3350, P37
   Caldiran O, 2009, LECT NOTES COMPUT SC, V5753, P342, DOI 10.1007/978-3-642-04238-6_29
   CAMIN JH, 1965, EVOLUTION, V19, P311, DOI 10.2307/2406441
   Chafle G, 2006, ICWS 2006: IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES, PROCEEDINGS, P549
   CHEN ZZ, 1995, INFORM COMPUT, V119, P231, DOI 10.1006/inco.1995.1087
   Coban E., 2008, P 2 INT WORKSH LOG S, P166
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   Do MB, 2001, ARTIF INTELL, V132, P151, DOI 10.1016/S0004-3702(01)00128-X
   Eiter T, 1999, ARTIF INTELL, V108, P257, DOI 10.1016/S0004-3702(99)00006-5
   Erdem E, 2004, LECT NOTES COMPUT SC, V3132, P386, DOI 10.1007/978-3-540-27775-0_27
   Erdem E., 2002, THESIS U TEXAS AUSTI
   Erdem E, 2006, THEOR PRACT LOG PROG, V6, P539, DOI 10.1017/S1471068406002729
   Erdem E, 2009, LECT NOTES COMPUT SC, V5753, P567, DOI 10.1007/978-3-642-04238-6_59
   Felsenstein J, 2009, PHYLIP
   Ferraris P, 2005, THEOR PRACT LOG PROG, V5, P45, DOI 10.1017/S1471068403001923
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P260, DOI 10.1007/978-3-540-72200-7_23
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gerevini A, 2003, J ARTIF INTELL RES, V20, P239, DOI 10.1613/jair.1183
   Gutin G., 2003, HDB GRAPH THEORY, P389
   HAMMING RW, 1950, BELL SYST TECH J, V29, P147, DOI 10.1002/j.1538-7305.1950.tb00463.x
   He X, 1997, PROCEEDINGS OF THE EIGHTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P427
   Hebrard E., 2005, P 20 NATL C ARTIFICI, P372
   Hebrard E, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P106
   HON WK, 2000, ALGORITHMS COMPUTATI, P369
   KAUTZ H, 1992, ECAI 92 - 10TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE : PROCEEDINGS, P359
   KUHNER MK, 1994, MOL BIOL EVOL, V11, P459
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Lifschitz V., 2008, AAAI, V3, P1594
   Lifschitz V, 2010, LECT NOTES COMPUT SC, V6300, P488, DOI 10.1007/978-3-642-15025-8_24
   Marek VW, 2003, THEOR PRACT LOG PROG, V3, P551, DOI 10.1017/S1471068403001777
   Marques-Silva JP, 1999, IEEE T COMPUT, V48, P506, DOI 10.1109/12.769433
   McIlraith S., 2002, P 8 INT C KNOWLEDGE, P482
   Nogueira M., 2001, Practical Aspects of Declarative Languages. Third International Symposium, PADL 2001. Proceedings (Lecture Notes in Computer Science Vol.1990), P169
   Nye TMW, 2006, BIOINFORMATICS, V22, P117, DOI 10.1093/bioinformatics/bti720
   Papadimitriou C. H., 1994, Computational Complexity
   Ringe D, 2002, T PHILOL SOC, V100, P59, DOI 10.1111/1467-968X.00091
   ROBINSON DF, 1981, MATH BIOSCI, V53, P131, DOI 10.1016/0025-5564(81)90043-2
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Soininen T, 1999, LECT NOTES COMPUT SC, V1551, P305
   Son TC, 2009, LECT NOTES COMPUT SC, V5649, P99, DOI 10.1007/978-3-642-02846-5_13
   Srivastava B, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2016
   Swofford D., 1993, PAUP: Phylogenetic Analysis Using Parsimony
   White J.P., 1982, A Prehistory of Australia, New Guinea and Sahul
NR 52
TC 10
Z9 11
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2013
VL 13
BP 303
EP 359
DI 10.1017/S1471068411000548
PN 3
PG 57
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 135TR
UT WOS:000318311900001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Areias, M
   Rocha, R
AF Areias, Miguel
   Rocha, Ricardo
TI Towards multi-threaded local tabling using a common table space
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE tabling; multi-threading; implementation
ID LOGIC PROGRAMS; CONCURRENT; PROLOG
AB Multi-threading is currently supported by several well-known Prolog systems providing a highly portable solution for applications that can benefit from concurrency. When multi-threading is combined with tabling, we can exploit the power of higher procedural control and declarative semantics. However, despite the availability of both threads and tabling in some Prolog systems, the implementation of these two features implies complex ties to each other and to the underlying engine. Until now, XSB was the only Prolog system combining multi-threading with tabling. In XSB, tables may be either private or shared between threads. While thread-private tables are easier to implement, shared tables have all the associated issues of locking, synchronization and potential deadlocks. In this paper, we propose an alternative view to XSB's approach. In our proposal, each thread views its tables as private but, at the engine level, we use a common table space where tables are shared among all threads. We present three designs for our common table space approach: No-Sharing (NS) (similar to XSB's private tables), Subgoal-Sharing (SS) and Full-Sharing (FS). The primary goal of this work was to reduce the memory usage for the table space but, our experimental results, using the YapTab tabling system with a local evaluation strategy, show that we can also achieve significant reductions on running time.
C1 [Areias, Miguel] Univ Porto, Fac Sci, CRACS, P-4169007 Oporto, Portugal.
   Univ Porto, Fac Sci, INESC TEC, P-4169007 Oporto, Portugal.
C3 Universidade do Porto; Universidade do Porto; INESC TEC
RP Areias, M (corresponding author), Univ Porto, Fac Sci, CRACS, Rua Campo Alegre 1021-1055, P-4169007 Oporto, Portugal.
EM miguel-areias@dcc.fc.up.pt; ricroc@dcc.fc.up.pt
RI Areias, Miguel/O-6499-2019; Areias, Miguel/F-1918-2015; INESC-TEC,
   CRACS/F-7527-2012; Rocha, Ricardo/B-2862-2012
OI Areias, Miguel/0000-0003-1589-3174; Rocha, Ricardo/0000-0003-4502-8835
FU ERDF (European Regional Development Fund) through the COMPETE Programme;
   FCT (Portuguese Foundation for Science and Technology) within project
   HORUS [PTDC/EIA-EIA/100897/2008]; FCT (Portuguese Foundation for Science
   and Technology) within project LEAP [PTDC/EIA-CCO/112158/2009]; FCT
   [SFRH/BD/69673/2010]; Fundação para a Ciência e a Tecnologia
   [SFRH/BD/69673/2010, PTDC/EIA-CCO/112158/2009, PTDC/EIA-EIA/100897/2008]
   Funding Source: FCT
FX This work is partially funded by the ERDF (European Regional Development
   Fund) through the COMPETE Programme and by FCT (Portuguese Foundation
   for Science and Technology) within projects HORUS
   (PTDC/EIA-EIA/100897/2008) and LEAP (PTDC/EIA-CCO/112158/2009). Miguel
   Areias is funded by the FCT grant SFRH/BD/69673/2010.
CR Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   Freire J, 1995, LECT NOTES COMPUT SC, V982, P115, DOI 10.1007/BFb0026817
   FREIRE J., 1996, LNCS, V1140, P243
   LIANG S., 2009, INT WORLD WID WEB C, P601
   MARQUES R, 2007, THESIS NEW U LISBON
   Marques R, 2010, LECT NOTES COMPUT SC, V5937, P264, DOI 10.1007/978-3-642-11503-5_22
   Marques R, 2008, LECT NOTES COMPUT SC, V5366, P206, DOI 10.1007/978-3-540-89982-2_24
   Moura P., 2008, 1321152007 ISOIEC DT
   Ramakrishnan IV, 1999, J LOGIC PROGRAM, V38, P31, DOI 10.1016/S0743-1066(98)10013-4
   Rocha R, 2005, THEOR PRACT LOG PROG, V5, P161, DOI 10.1017/S1471068404002030
   Rocha R, 2004, LECT NOTES COMPUT SC, V3149, P662
   Sagonas K, 1998, ACM T PROGR LANG SYS, V20, P586, DOI 10.1145/291889.291897
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Wielemaker J, 2003, LECT NOTES COMPUT SC, V2916, P331, DOI 10.1007/978-3-540-24599-5_23
NR 14
TC 8
Z9 10
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2012
VL 12
BP 427
EP 443
DI 10.1017/S1471068412000117
PN 4-5
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 000CV
UT WOS:000308365000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Drescher, C
   Thielscher, M
AF Drescher, Conrad
   Thielscher, Michael
TI ALPprolog - A new logic programming method for dynamic domains
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Logic Programming
CT 27th International Conference on Logic Programming
CY 2010
CY JUL 06-10, 2011
CL Lexington, KY
CL Lexington, KY
DE reasoning about actions; agent logic programs
ID LANGUAGE
AB Logic programming is a powerful paradigm for programming autonomous agents in dynamic domains as witnessed by languages such as Golog and Flux. In this work we present ALPprolog, an expressive, yet efficient, logic programming language for the online control of agents that have to reason about incomplete information and sensing actions.
C1 [Drescher, Conrad] Univ Oxford, Comp Lab, Oxford OX1 3QD, England.
   [Thielscher, Michael] Univ New S Wales, Sch Engn & Comp Sci, Sydney, NSW, Australia.
C3 University of Oxford; University of New South Wales Sydney
RP Drescher, C (corresponding author), Univ Oxford, Comp Lab, Oxford OX1 3QD, England.
EM Conrad.Drescher@comlab.ox.ac.uk; mit@cse.unsw.edu.au
CR [Anonymous], 2007, Proceedings of the AAAI National Conference on Artificial Intelligence
   Bordini R., 2007, PROGRAMMING MULTIAGE
   DRESCHER C, 2009, P 7 INT S FRONT COMB
   Genesereth M, 2005, AI MAG, V26, P62
   Herzig A, 2007, ARTIF INTELL, V171, P951, DOI 10.1016/j.artint.2007.04.013
   Levesque HJ, 1997, J LOGIC PROGRAM, V31, P59, DOI 10.1016/S0743-1066(96)00121-5
   Levesque HJ, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P1139
   LIU H, 2006, P 10 INT C PRINC KNO
   Lloyd J. W., 1987, Foundations of logic programming
   LOVE N, 2008, LG200601 STANF U
   McCarthy J., 1969, Machine Intelligence, VVol. 4, P463
   Reiter R., 2001, ACM T COMPUT LOG, V2, P433
   Reiter R., 2001, Knowledge in Action: Logical Foundations for Specifying and Implementing Dynamical Systems
   Russell S., 2016, Artificial intelligence a modern approach
   Sardina S., 2005, PROC NRAC 05, P90
   Thielscher M, 2005, THEOR PRACT LOG PROG, V5, P533, DOI 10.1017/S1471068405002358
   Thielscher M, 1999, ARTIF INTELL, V111, P277, DOI 10.1016/S0004-3702(99)00033-8
   THIELSCHER M, 2005, P WORKSH NONM REAS A, P104
   THIELSCHER M, 2010, P INT C PRINC KNOWL, P79
   Thielscher M, 2010, AAAI CONF ARTIF INTE, P994
   Thielscher M, 2011, ARTIF INTELL, V175, P120, DOI 10.1016/j.artint.2010.04.010
NR 21
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 451
EP 468
DI 10.1017/S1471068411000111
PN 4-5
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hallerstede, S
   Leuschel, M
AF Hallerstede, Stefan
   Leuschel, Michael
TI Constraint-based deadlock checking of high-level specifications
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Logic Programming
CT 27th International Conference on Logic Programming
CY 2010
CY JUL 06-10, 2011
CL Lexington, KY
CL Lexington, KY
DE constraints; formal methods; deadlocks; Prolog; applications
ID MODEL CHECKING
AB Establishing the absence of deadlocks is important in many applications of formal methods. The use of model checking for finding deadlocks in formal models is often limited. In this paper, we propose a constraint-based approach to finding deadlocks employing the ProB constraint solver. We present the general technique, as well as various improvements that had to be performed on ProB's Prolog kernel, such as reification of membership and arithmetic constraints. This work was guided by an industrial case study, where a team from Bosch was modelling a cruise control system. Within this case study, ProB was able to quickly find counterexamples to very large deadlock-freedom constraints. In the paper, we also present other successful applications of this new technique. Experiments using SAT and SMT solvers on these constraints were thus far unsuccessful.
C1 [Hallerstede, Stefan; Leuschel, Michael] Univ Dusseldorf, Inst Informat, D-40225 Dusseldorf, Germany.
C3 Heinrich Heine University Dusseldorf
RP Hallerstede, S (corresponding author), Univ Dusseldorf, Inst Informat, Univ Str 1, D-40225 Dusseldorf, Germany.
EM halstefa@cs.uni-duesseldorf.de; leuschel@cs.uni-duesseldorf.de
CR Abrial Jean-Raymond, 2010, International Journal on Software Tools for Technology Transfer, V12, P447, DOI 10.1007/s10009-010-0145-y
   Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Abrial J R, 2010, Modeling in Event-B: system and softeng
   AITSADOUNE I, 2009, P INT C ENG COMPL CO, P1
   [Anonymous], 1994, Lecture Notes in Computer Science
   [Anonymous], LNCS
   Bendisposto J, 2009, LECT NOTES COMPUT SC, V5885, P504, DOI 10.1007/978-3-642-10373-5_26
   Carlsson M., 1997, Programming Languages: Implementations, Logics, and Programs. 9th International Symposium, PLILP'97, Including a Special Track on Declarative Programming Languages in Education. Proceedings, P191, DOI 10.1007/BFb0033845
   Déharbe D, 2010, LECT NOTES COMPUT SC, V5977, P217, DOI 10.1007/978-3-642-11811-1_17
   DILLON LK, 2006, P 1 ALL WORKSH
   Dovier A, 2000, ACM T PROGR LANG SYS, V22, P861, DOI 10.1145/365151.365169
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Frisch AM, 2009, LECT NOTES COMPUT SC, V5732, P367, DOI 10.1007/978-3-642-04244-7_30
   Howe JM, 2010, LECT NOTES COMPUT SC, V6009, P165, DOI 10.1007/978-3-642-12251-4_13
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Leuschel Michael, 2008, International Journal on Software Tools for Technology Transfer, V10, P185, DOI 10.1007/s10009-007-0063-9
   Leuschel M, 2009, LECT NOTES COMPUT SC, V5850, P708, DOI 10.1007/978-3-642-05089-3_45
   LOESCH F, 2010, DEPLOY DELIVERABLE D
   ROSCOE AW, 1999, THEORY PRACTICE CONC
   Tortak E, 2007, LECT NOTES COMPUT SC, V4424, P632
   Yu Y, 1999, LECT NOTES COMPUT SC, V1703, P54
NR 21
TC 7
Z9 7
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 767
EP 782
DI 10.1017/S1471068411000299
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100021
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Drescher, C
   Walsh, T
AF Drescher, Christian
   Walsh, Toby
TI A translational approach to constraint answer set solving
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE answer set programming; constraint processing; decomposition
AB We present a new approach to enhancing Answer Set Programming (ASP) with Constraint Processing techniques which allows for solving interesting Constraint Satisfaction Problems in ASP. We show how constraints on finite domains can be decomposed into logic programs such that unit-propagation achieves arc, bound or range consistency. Experiments with our encodings demonstrate their computational impact.
C1 [Drescher, Christian] Vienna Univ Technol, Vienna, Austria.
   [Walsh, Toby] Univ New S Wales, Sydney, NSW 2052, Australia.
   [Drescher, Christian] Univ Nova Lisboa, Lisbon, Portugal.
C3 Technische Universitat Wien; University of New South Wales Sydney;
   Universidade Nova de Lisboa
RP Drescher, C (corresponding author), Vienna Univ Technol, Vienna, Austria.
RI Walsh, Toby/Q-9043-2016
CR [Anonymous], P AAAI 97
   Balduccini M, 2009, LECT NOTES COMPUT SC, V5753, P402, DOI 10.1007/978-3-642-04238-6_34
   Baral C., 2003, KNOWLEDGE REPRESENTA
   BARATON MI, 2004, REV ADV MATER SCI, V4, P15
   BASELICE S, 2005, P ICLP 05, P52
   BESSIERE C, 2009, P IJCAI 09
   Biere A., 2009, Handbook of Satisfiability
   CRAWFORD JM, 1994, PROCEEDINGS OF THE TWELFTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P1092
   DALPALU A, 2009, P ICLP 09, P115
   Dechter R., 2003, Constraint Processing
   DOVIER A, 2005, P ICLP 05, P67
   FUJITA M, 1993, P 13 INT JOINT C ART, P52
   GEBSER M, 2009, P WLP 09
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P260, DOI 10.1007/978-3-540-72200-7_23
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P235, DOI 10.1007/978-3-642-02846-5_22
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Gent IP, 2002, FRONT ARTIF INTEL AP, V77, P121
   Gent IP, 1999, LECT NOTES COMPUT SC, V1713, P480
   Heljanko K, 2003, THEOR PRACT LOG PROG, V3, P519, DOI 10.1017/S1471068403001790
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   Järvisalo M, 2009, LECT NOTES COMPUT SC, V5753, P155, DOI 10.1007/978-3-642-04238-6_15
   LECONTE M, 1996, CP 96 2 INT WORKSH C
   Lee JF, 2005, LCN 2005: 30th Conference on Local Computer Networks, Proceedings, P503
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Mellarkod VS, 2008, LECT NOTES COMPUT SC, V4989, P15
   Mellarkod VS, 2008, ANN MATH ARTIF INTEL, V53, P251, DOI 10.1007/s10472-009-9116-y
   MITCHELL D, 2005, B EUROPEAN ASS THEOR, V85, P112
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Nogueira M., 2001, Practical Aspects of Declarative Languages. Third International Symposium, PADL 2001. Proceedings (Lecture Notes in Computer Science Vol.1990), P169
   Petrie KE, 2003, LECT NOTES COMPUT SC, V2833, P930
   Rossi F, 2006, FOUND ARTIF INTELL, P1
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Tamura N, 2006, LECT NOTES COMPUT SC, V4204, P590
   Walsh T., 2000, Principles and Practice of Constraint Programming - CP 2000. 6th International Conference, CP 2000. Proceedings (Lecture Notes in Computer Science Vol.1894), P441
   YOU J, 2004, P ICLP 04, P314
NR 37
TC 17
Z9 18
U1 0
U2 7
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 465
EP 480
DI 10.1017/S1471068410000220
PN 4-6
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dovier, A
   Formisano, A
   Pontelli, E
AF Dovier, Agostino
   Formisano, Andrea
   Pontelli, Enrico
TI Multivalued action languages with constraints in CLP(FD)
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE action description languages; knowledge representation; planning;
   constraint logic programming
ID LOGIC; PLANNER; SETS
AB Action description languages, such as A and B (Gelfond and Lifschitz, Electronic Transactions on Artificial Intelligence, 1998, vol. 2, pp. 193-210), are expressive instruments introduced for formalizing planning domains and planning problem instances. The paper starts by proposing a methodology to encode an action language (with conditional effects and static causal laws), a slight variation of 0, using Constraint Logic Programming over Finite Domains. The approach is then generalized to raise the use of constraints to the level of the action language itself. A prototype implementation has been developed, and the preliminary results are presented and discussed.
C1 [Dovier, Agostino] Univ Udine, Dipartimento Matemat & Informat, I-33100 Udine, Italy.
   [Formisano, Andrea] Univ Perugia, Dipartimento Matemat & Informat, I-06123 Perugia, Italy.
   [Pontelli, Enrico] New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88003 USA.
C3 University of Udine; University of Perugia; New Mexico State University
RP Dovier, A (corresponding author), Univ Udine, Dipartimento Matemat & Informat, Via Sci 206, I-33100 Udine, Italy.
EM dovier@dimi.uniud.it; formis@dmi.unipg.it; epontell@cs.nmsu.edu
OI Formisano, Andrea/0000-0002-6755-9314; Dovier,
   Agostino/0000-0003-2052-8593; Pontelli, Enrico/0000-0002-7753-1737
FU Direct For Computer & Info Scie & Enginr; Div Of Information &
   Intelligent Systems [0812267] Funding Source: National Science
   Foundation
CR [Anonymous], 2003, Principles of Constraint Programming
   Baral C., 2002, P 8 INT C PRINC KNOW, P291
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Caseau Y, 2002, THEOR PRACT LOG PROG, V2, P769, DOI 10.1017/S1471068401001363
   Dovier A, 2005, LECT NOTES COMPUT SC, V3668, P67, DOI 10.1007/11562931_8
   DOVIER A, 2007, P AAAI07, P1622
   Dovier A, 2009, LECT NOTES COMPUT SC, V5753, P423, DOI 10.1007/978-3-642-04238-6_37
   Dovier A, 2009, J EXP THEOR ARTIF IN, V21, P79, DOI 10.1080/09528130701538174
   Eiter T., 2004, ACM Transactions on Computational Logic, V5, P206, DOI 10.1145/976706.976708
   Gabaldon A, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P519
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P260, DOI 10.1007/978-3-540-72200-7_23
   Gelfond M., 1998, Electron. Trans. Artif. Intell., V2, P193
   Giunchiglia E, 2004, ARTIF INTELL, V153, P49, DOI [10.1016/j.artint.2002.12.001, 10.1016/j.artint.2003.12.001]
   GIUNCHIGLIA E, 2004, AM ASS ARTIFICIAL IN, P61
   Hoffman J, 2004, J ARTIF INTELL RES, V22, P215, DOI 10.1613/jair.1492
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   LEE J, 2003, IJCAI 03, P1079
   Levesque H.J., 1998, Electron. Trans. Artif. Intell., V2, P159
   Levesque HJ, 1997, J LOGIC PROGRAM, V31, P59, DOI 10.1016/S0743-1066(96)00121-5
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Lopez A., 2003, IJCAI, P954
   Marriott K., 1998, PROGRAMMING CONSTRAI
   MCCARTHY J, 1998, ELEPHANT 2000 PROGRA
   Reiter R., 2001, Knowledge in Action: Logical Foundations for Specifying and Implementing Dynamical Systems
   SIMONS P, 2000, THESIS HELSINKI U TE
   SON T, 2001, LNCS, V2173, P226
   Thielscher M, 2002, LECT NOTES COMPUT SC, V2401, P70, DOI 10.1007/3-540-45619-8_6
   Thielscher M, 1999, ARTIF INTELL, V111, P277, DOI 10.1016/S0004-3702(99)00033-8
   THIELSCHER M, 2002, AAAI WORKSH COGN ROB
   Tu PH, 2007, THEOR PRACT LOG PROG, V7, P377, DOI 10.1017/S1471068406002948
   Tu PH, 2007, LECT NOTES COMPUT SC, V4483, P290, DOI 10.1007/978-3-540-72200-7_28
   Vidal V, 2006, ARTIF INTELL, V170, P298, DOI 10.1016/j.artint.2005.08.004
NR 33
TC 11
Z9 12
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2010
VL 10
BP 167
EP 235
DI 10.1017/S1471068410000013
PN 2
PG 69
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 574LM
UT WOS:000275990700002
DA 2024-07-18
ER

PT J
AU Mancarella, P
   Terreni, G
   Sadri, F
   Toni, F
   Endriss, U
AF Mancarella, Paolo
   Terreni, Giacomo
   Sadri, Fariba
   Toni, Francesca
   Endriss, Ulle
TI The CIFF proof procedure for abductive logic programming with
   constraints: Theory, implementation and experiments
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE abduction; constraints; proof procedures
ID WELL-FOUNDED SEMANTICS; ANSWER SET; SYSTEM
AB We present the CIFF proof procedure for abductive logic programming with constraints, and we prove its correctness. CIFF is an extension of the IFF proof procedure for abductive logic programming, relaxing the original restrictions over variable quantification (allowedness conditions) and incorporating a constraint solver to deal with numerical constraints as in constraint logic programming. Finally, we describe the CIFF system, comparing it with state-of-the-art abductive systems and answer set solvers and showing how to use it to program some applications.
C1 [Mancarella, Paolo; Terreni, Giacomo] Univ Pisa, Dipartimento Informat, Pisa, Tuscany, Italy.
   [Sadri, Fariba; Toni, Francesca] Univ London Imperial Coll Sci Technol & Med, Dept Comp, London, England.
   [Endriss, Ulle] Univ Amsterdam, ILLC, Amsterdam, Netherlands.
C3 University of Pisa; Imperial College London; University of Amsterdam
RP Mancarella, P (corresponding author), Univ Pisa, Dipartimento Informat, Pisa, Tuscany, Italy.
EM paolo.mancarella@unipi.it; terreni@di.unipi.it; fs@doc.ic.ac.uk;
   ft@doc.ic.ac.uk; ulle.endriss@uva.nl
RI Toni, Francesca/JGD-7893-2023
OI Toni, Francesca/0000-0001-8194-1459; Endriss, Ulle/0000-0003-3709-4701
CR Alberti M, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1380572.1380578
   Alferes JJ, 2004, THEOR PRACT LOG PROG, V4, P383, DOI 10.1017/S1471068403001960
   ALISEDALLERA A, 1997, THESIS U AMSTERDAM A
   [Anonymous], 2013, Handbook of Tableau Methods
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], 2003, OVERVIEW SWI PROLOG
   [Anonymous], P 17 INT JOINT C ART, DOI DOI 10.1007/3-540-45402-0_29
   BARAL C, 1994, J LOGIC PROGRAM, V20, P73, DOI 10.1016/0743-1066(94)90025-6
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Baselice S, 2005, LECT NOTES COMPUT SC, V3668, P52, DOI 10.1007/11562931_7
   BONATTI PA, 2002, P 9 INT WORKSH NONM, P184
   Bressan S, 1997, LOGIC PROGRAMM, P213
   Christiansen H, 2005, LECT NOTES COMPUT SC, V3668, P159, DOI 10.1007/11562931_14
   Ciampolini A, 2003, ANN MATH ARTIF INTEL, V37, P65, DOI 10.1023/A:1020259411066
   CLARK KL, 1978, LOGIC DATA BASES, P77
   Console L., 1991, Journal of Logic and Computation, V1, P661, DOI 10.1093/logcom/1.5.661
   Denecker M, 2002, LECT NOTES ARTIF INT, V2407, P402
   Denecker M, 1998, J LOGIC PROGRAM, V34, P111, DOI 10.1016/S0743-1066(97)00074-5
   Denecker Marc., 1992, Proceedings of the Joint International Conference and Symposium on Logic Programming, P686
   EITER T., 1997, LPNMR, P364
   Endriss U, 2004, LECT NOTES COMPUT SC, V3229, P680, DOI 10.1007/978-3-540-30227-8_56
   Endriss U, 2004, LECT NOTES COMPUT SC, V3229, P31, DOI 10.1007/978-3-540-30227-8_6
   ENDRISS U, 2005, P 12 WORKSH AUT REAS
   ESHGHI K, 1989, P 6 INT C LOG PROGR, P234
   Fernandez A. J., 2000, Constraints, V5, P275, DOI 10.1023/A:1009816801567
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Fung TH, 1997, J LOGIC PROGRAM, V33, P151, DOI 10.1016/S0743-1066(97)00026-5
   FUNG TH, 1996, THESIS U LONDON LOND
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   HOLZBAUR C, 1992, LECT NOTES COMPUT SC, V631, P260, DOI 10.1007/3-540-55844-6_141
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   Jaffar J, 1998, J LOGIC PROGRAM, V37, P1, DOI 10.1016/S0743-1066(98)10002-X
   Kakas A, 2004, FRONT ARTIF INTEL AP, V110, P33
   Kakas A, 2000, J LOGIC PROGRAM, V44, P129, DOI 10.1016/S0743-1066(99)00075-8
   Kakas A. C., 1992, Journal of Logic and Computation, V2, P719, DOI 10.1093/logcom/2.6.719
   Kakas A. C., 1990, ECAI 90. Proceedings of the 9th European Conference on Artificial Intelligence, P385
   Kakas AC., 1998, HDB LOGIC ARTIFICIAL, P235, DOI DOI 10.1093/OSO/9780198537922.003.0007
   KAKAS AC, 1990, P WORKSH LOG PROGR N, P49
   Kakas A, 2008, J ARTIF INTELL RES, V33, P285, DOI 10.1613/jair.2596
   KLARMAN S, 2008, THESIS U AMSTERDAM A
   KOWALSKI R, 1986, NEW GENERAT COMPUT, V4, P67, DOI 10.1007/BF03037383
   Kowalski R. A., 1998, Fundamenta Informaticae, V34, P203
   KUNEN K, 1987, J LOGIC PROGRAM, V4, P289, DOI 10.1016/0743-1066(87)90007-0
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lin FZ, 2002, ARTIF INTELL, V140, P175, DOI 10.1016/S0004-3702(02)00227-8
   Lloyd J. W., 2012, Foundations of Logic Programming
   Mancarella P, 2007, LECT NOTES COMPUT SC, V4670, P434, DOI 10.1007/978-3-540-74610-2_33
   Mancarella P, 2007, LECT NOTES COMPUT SC, V4483, P284, DOI 10.1007/978-3-540-72200-7_27
   Mancarella P, 2004, LECT NOTES ARTIF INT, V3487, P230
   Mancarella P, 2009, ELECTRON NOTES THEOR, V235, P137, DOI 10.1016/j.entcs.2009.03.009
   MARTELLI A, 1982, ACM T PROGR LANG SYS, V4, P258, DOI 10.1145/357162.357169
   Mayer M.C., 1993, Bulletin of the IPGL, V1, P99, DOI DOI 10.1093/JIGPAL/1.1.99
   Mellarkod VS, 2008, LECT NOTES COMPUT SC, V4989, P15
   Miller R, 2002, LECT NOTES ARTIF INT, V2408, P452
   NIEMELA I, 1997, LNCS, V1265, P421
   PEREIRA LM, 1991, LOGIC PROGRAMM, P475
   Sadri F, 2002, LECT NOTES ARTIF INT, V2424, P419, DOI 10.1007/3-540-45757-7_35
   Sadri F, 2000, LECT NOTES ARTIF INT, V1792, P49
   SHANAHAN M, 1989, P IJCAI 89, P1055
   Simons P., 2000, EXTENDING IMPLEMENTI
   *SOCS CONS, 2000, SOC COMP SOCS COMP L
   TERRENI G, 2008, THESIS U PISA PISA
   TERRENI G, 2008, CIFF SYSTEM
   Toni F., 2001, Telematics and Informatics, V18, P89, DOI 10.1016/S0736-5853(00)00020-4
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   VANNUFFELEN B, 2004, THESIS K U LEUVEN LE
   WETZEL G, 1996, P 13 JOINT INT C S L, P535
NR 68
TC 13
Z9 13
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2009
VL 9
BP 691
EP 750
DI 10.1017/S1471068409990093
PN 6
PG 60
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 522GH
UT WOS:000271985400001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Shen, YD
   You, JH
   Yuan, LY
AF Shen, Yi-Dong
   You, Jia-Huai
   Yuan, Li-Yan
TI Characterizations of stable model semantics for logic programs with
   arbitrary constraint atoms
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programing; abstract constraint atoms; stable model
   semantics; Gelfond-Lifschitz transformation
ID ANSWER SETS
AB This paper studies the stable model semantics of logic programs with (abstract) constraint,items and their properties. We introduce a succinet abstract representation of these constraint atoms in which a constraint atom is represented compactly. We show two applications. First, under this representation of constraint atoms, we generalize the Gelfond-Litschitz transformation and apply it to define stable models (also called answer sets) for logic programs with arbitrary constraint atoms. The resulting semantics turns Out to coincide with the one defined by Son et al. (2007), which is based oil a fixpoint approach. One advantage of our approach is that it can be applied, in a natural way, to define stable models for disjunctive logic programs with constraint atoms, which may appear in the disjunctive head as well as in the body of a rule. As a result, Our approach to the stable model semantics for logic programs with constraint atoms generalizes a number of previous approaches. Second, we show that our abstract representation of constraint atoms provides a means to characterize dependencies of atoms in it program with constraint atoms, so that some standard characterizations and properties relying on these dependencies in the past for logic programs with ordinary atoms can be extended to logic programs with constraint atoms.
C1 [Shen, Yi-Dong] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing 100190, Peoples R China.
   [You, Jia-Huai; Yuan, Li-Yan] Univ Alberta, Dept Comp Sci, Edmonton, AB T6G 2H1, Canada.
C3 Chinese Academy of Sciences; Institute of Software, CAS; University of
   Alberta
RP Shen, YD (corresponding author), Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing 100190, Peoples R China.
EM ydshen@ios.ac.cn; you@cs.ualberta.ca; yuan@cs.ualberta.ca
RI Shen, Yi/GRS-3602-2022; Liu, Kai/IST-6808-2023
CR Baptiste P, 1996, INT J COMP INTEG M, V9, P306, DOI 10.1080/095119296131616
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Calimeri F, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P406
   Cohen D, 2000, J ACM, V47, P826, DOI 10.1145/355483.355485
   Dell'Armi T., 2003, Proceedings of the 18th International Joint Conference on Artificial Intelligence, P847
   DELLARMI T, 2003, LECT NOTES COMPUTER, V1048, P847
   DENECKER M, 2001, LNCS, V2237, P212
   EITER T, 1993, MIT PS LOG, P266
   Elkabani I, 2005, LECT NOTES ARTIF INT, V3662, P427, DOI 10.1007/11546207_40
   Elkabani I, 2004, LECT NOTES COMPUT SC, V3132, P73, DOI 10.1007/978-3-540-27775-0_6
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   FAGES F, 1994, J METHODS LOGIC COMP, V1, P51
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Gelfond M, 2002, ARTIF INTELL, V138, P1, DOI 10.1016/S0004-3702(02)00206-0
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   He CL, 2005, Proceedings of 2005 International Conference on Advanced Fibers and Polymer Materials (ICAFPM 2005), Vol 1 and 2, P708
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   LIU L, 2006, J ARTIFICIAL INTELLI, V7, P299
   Liu LN, 2007, LECT NOTES COMPUT SC, V4670, P286, DOI 10.1007/978-3-540-74610-2_20
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Marek VW, 2008, THEOR PRACT LOG PROG, V8, P167, DOI 10.1017/S147106840700302X
   Marek VW, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P86
   Marek VW, 2004, LECT NOTES ARTIF INT, V2923, P167
   Marriott K., 2001, Principles and Practice of Constraint Programming - CP 2002. 7th International Conference, CP 2001. Proceedings (Lecture Notes in Computer Science Vol.2239), P361
   MITTAL S, 1990, PROCEEDINGS : EIGHTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P25
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Pelov N., 2004, THESIS KATHOLIEKE U
   Pelov N, 2007, THEOR PRACT LOG PROG, V7, P301, DOI 10.1017/S1471068406002973
   PELOV W, 2004, P NMR 04 WHISTL CAN, P327
   PELOV W, 2003, CEUR WORKSH P CEUR W, P29
   Przymusinski T. C., 1991, New Generation Computing, V9, P401, DOI 10.1007/BF03037171
   SATO T, 1990, J LOGIC PROGRAM, V9, P33, DOI 10.1016/0743-1066(90)90032-Z
   SHEN YD, 2007, P AAAI 07 VANC CAN, P483
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Son TC, 2007, THEOR PRACT LOG PROG, V7, P355, DOI 10.1017/S1471068406002936
   Son TC, 2007, J ARTIF INTELL RES, V29, P353, DOI 10.1613/jair.2171
   YOU JH, 1994, J COMPUT SYST SCI, V49, P334, DOI 10.1016/S0022-0000(05)80053-4
   You JH, 2007, LECT NOTES COMPUT SC, V4483, P228, DOI 10.1007/978-3-540-72200-7_20
NR 39
TC 7
Z9 9
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2009
VL 9
BP 529
EP 564
DI 10.1017/S1471068409990056
PN 4
PG 36
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 484ND
UT WOS:000269051300002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Järvisalo, M
   Oikarinen, E
AF Jarvisalo, Matti
   Oikarinen, Emilia
TI Extended ASP Tableaux and rule redundancy in normal logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Answer set programming; tableau method; extension rule; proof
   complexity; problem structure
ID STABLE MODEL SEMANTICS; ANSWER SET; KNOWLEDGE REPRESENTATION; RESOLUTION
AB We introduce an extended tableau calculus for answer set programming (ASP). The proof system is based on the ASP tableaux defined in the work by Gebser and Schaub (Tableau calculi for answer set programming. In Proceedings of the 22nd International Conference on Logic Programming (ICLP 2006), S. Etalle and M. Truszczynski, Eds. Lecture Notes in Computer Science, vol. 4079. Springer, 11-25) with an added extension rule. We investigate the power of Extended ASP Tableaux both theoretically and empirically. We study the relationship of Extended ASP Tableaux with the Extended Resolution proof system defined by Tseitin for sets of clauses, and separate Extended ASP Tableaux from ASP Tableaux by giving a polynomial-length proof for a family of normal logic programs {Pi(n)} for which ASP Tableaux has exponential-length minimal proofs with respect to n. Additionally, Extended ASP Tableaux imply interesting insight into the effect of program simplification on the lengths of proofs in ASP. Closely related to Extended ASP Tableaux, we empirically investigate the effect of redundant rules on the efficiency of ASP solving.
C1 [Jarvisalo, Matti; Oikarinen, Emilia] Aalto Univ, Dept Informat & Comp Sci, FI-02015 Helsinki, Finland.
C3 Aalto University
RP Järvisalo, M (corresponding author), Aalto Univ, Dept Informat & Comp Sci, POB 5400, FI-02015 Helsinki, Finland.
EM matti.jarvisalo@tkk.fi; emilia.oikarinen@tkk.fi
OI Jarvisalo, Matti/0000-0003-2572-063X; Oikarinen,
   Emilia/0000-0002-9623-6282
FU Helsinki Graduate School in Computer Science and Engineering; Academy of
   Finland [211025, 122399]; Emil Aaltonen Foundation; Nokia Foundation;
   Finnish Foundation for Technology Promotion TES; Jenny and Antti Wihuri
   Foundation (MJ); Finnish Cultural Foundation (EO); Academy of Finland
   (AKA) [211025, 122399] Funding Source: Academy of Finland (AKA)
FX The authors thank Ilkka Niemela for comments on a manuscript of this
   article. Financial support from Helsinki Graduate School in Computer
   Science and Engineering, Academy of Finland (grants #211025 and
   #122399), Emil Aaltonen Foundation, Nokia Foundation, Finnish Foundation
   for Technology Promotion TES, Jenny and Antti Wihuri Foundation (MJ),
   and Finnish Cultural Foundation (EO) are gratefully acknowledged.
CR Anger C, 2005, LECT NOTES ARTIF INT, V3835, P95, DOI 10.1007/11591191_8
   ANGER C, 2006, P 17 EUR C ART INT E, P769
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Beame P, 2004, J ARTIF INTELL RES, V22, P319, DOI 10.1613/jair.1410
   Beame Paul, 1998, Bull. EATCS, V65, P66
   Ben-Eliyahu R., 1994, Annals of Mathematics and Artificial Intelligence, V12, P53, DOI 10.1007/BF01530761
   Ben-Sasson E, 2004, COMBINATORICA, V24, P585, DOI 10.1007/s00493-004-0036-5
   Brass S, 1995, LECT NOTES ARTIF INT, V928, P85
   Brooks DR, 2007, J AUTOM REASONING, V39, P471, DOI 10.1007/s10817-007-9082-1
   Clark K. L., 1978, Logic and data bases, P293
   Cook S. A., 1976, SIGACT News, V8, P28, DOI 10.1145/1008335.1008338
   COOK SA, 1979, J SYMBOLIC LOGIC, V44, P36, DOI 10.2307/2273702
   DAVIS M, 1960, J ACM, V7, P201, DOI 10.1145/321033.321034
   DAVIS M, 1962, COMMUN ACM, V5, P394, DOI 10.1145/368273.368557
   Eiter T, 2004, LECT NOTES ARTIF INT, V2923, P87
   Erdem E, 2006, THEOR PRACT LOG PROG, V6, P539, DOI 10.1017/S1471068406002729
   FAGES F, 1994, J METHODS LOGIC COMP, V1, P51
   GEBSER M, 2006, ICLP WORKSH SEARCH L, P41
   GEBSER M, 2007, P 20 INT JOINT C ART, P286
   Gebser M, 2007, LECT NOTES COMPUT SC, V4670, P119, DOI 10.1007/978-3-540-74610-2_9
   Gebser M, 2006, LECT NOTES COMPUT SC, V4079, P11, DOI 10.1007/11799573_4
   Gelfond M, 2002, ARTIF INTELL, V138, P3, DOI 10.1016/S0004-3702(02)00207-2
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Giunchiglia E, 2005, LECT NOTES COMPUT SC, V3668, P37, DOI 10.1007/11562931_6
   Giunchiglia E, 2006, J AUTOM REASONING, V36, P345, DOI 10.1007/s10817-006-9033-2
   HAI L, 2003, J AUTOM REASONING, V31, P11
   HAKEN A, 1985, THEOR COMPUT SCI, V39, P297, DOI 10.1016/0304-3975(85)90144-6
   Janhunen T., 2006, J APPL NONCLASSICAL, V1-2, P35, DOI DOI 10.3166/JANCL.16.35-86
   JARVISALO M, CONSTRAINTS IN PRESS
   Järvisalo M, 2007, LECT NOTES COMPUT SC, V4670, P134, DOI 10.1007/978-3-540-74610-2_10
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Lifschitz V, 2006, ACM T COMPUT LOG, V7, P261, DOI 10.1145/1131313.1131316
   Lifschitz Vladimir, 1994, LOGIC PROGRAMMING, P23
   Lin F., 2003, IJCAI 03, P853
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Moskewicz MW, 2001, DES AUT CON, P530, DOI 10.1109/DAC.2001.935565
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Nogueira M., 2001, Practical Aspects of Declarative Languages. Third International Symposium, PADL 2001. Proceedings (Lecture Notes in Computer Science Vol.1990), P169
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   SOININEN T, 2001, P 1 INT WORKSH ANSW
   Tseitin G., 1983, AUTOMATION REASONING, P466, DOI [DOI 10.1007/978-3-642-81955-1_28, 10.1007/978-3-642-81955-128, DOI 10.1007/978-3-642-81955-128, 10.1007/978-3-642-81955-1_28]
NR 43
TC 6
Z9 6
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP-NOV
PY 2008
VL 8
BP 691
EP 716
DI 10.1017/S1471068408003578
PN 5-6
PG 26
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 385UH
UT WOS:000261838600005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Vandeginste, R
   Demoen, B
AF Vandeginste, Ruben
   Demoen, Bart
TI Incremental copying garbage collection for WAM-based prolog systems
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE memory management of logic programming languages; incremental copying
   garbage collection; WAM based Prolog implementation
AB The design and implementation of an incremental copying heap garbage collector for WAM-based Prolog systems is presented. Its heap layout consists of a number of equal-sized blocks. Other changes to the standard WAM allow these blocks to be garbage collected independently. The independent collection of heap blocks forms the basis of an incremental collecting algorithm which employs copying without marking (contrary to the more frequently used mark&copy or mark&slide algorithms in the context of Prolog). Compared to standard semi-space copying collectors, this approach to heap garbage collection lowers in many cases the memory usage and reduces pause times. The algorithm also allows for a wide variety of garbage collection policies including generational ones. The algorithm is implemented and evaluated in the context of hProlog.
C1 Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
C3 KU Leuven
RP Vandeginste, R (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
EM ruben@cs.kuleuven.ac.be; bmd@cs.kuleuven.ac.be
CR AITKACI H, 1990, 5 DEC
   [Anonymous], THESIS U CAMBRIDGE C
   [Anonymous], P INT WORKSH MEM MAN
   APPLEBY K, 1988, COMMUN ACM, V31, P719, DOI 10.1145/62959.62968
   BEKKERS Y, 1992, LECT NOTES COMPUT SC, V637, P82
   Bevemyr J., 1994, Programming Language Implementation and Logic Programming. 6th International Symposium, PLILP '94. Proceedings, P88
   BLACKBURN SM, 2002, P SIGPLAN 2002 C PRO, V37
   BLACKBURN SM, 2002, P 2002 ACM SIGPLAN C, P175
   BRUYNOOGHE M, 1984, IMPLEMENTATIONS PROL, P259
   CASTRO LF, 2001, LECT NOTES COMPUTER, V2237, P11
   Demoen B, 2002, LECT NOTES COMPUT SC, V2401, P194, DOI 10.1007/3-540-45619-8_14
   Demoen B, 1999, LECT NOTES COMPUT SC, V1713, P174
   Demoen B, 2000, LECT NOTES ARTIF INT, V1861, P1240
   Demoen B., 1996, Proceedings of the 1996 ACM symposium on Applied Computing, P380
   HUDSON RL, 1992, LECT NOTES COMPUT SC, V637, P388
   Jones R.E., 1996, Garbage Collection: Algorithms for Automatic Dynamic Memory Management
   LI X, 2000, P 2 ACM SIGPLAN C PR, P245
   MEHL M, 1999, THESIS TECHNISCHE FA
   NETHERCOTE N, 2003, P 3 WORKSH RUNT VER
   PITTOMVILS E, P 1985 LOG PROGR S I, P185
   *QUINT, 1989, COMMUNICATION
   Scheidhauer R., 1998, THESIS U SAARLANDES
   TOUATI H, 1988, P INT C 5 GEN COMP S, P922
   Warren D.H.D., 1983, 309 SRI
NR 24
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2007
VL 7
BP 505
EP 536
DI 10.1017/S147106840600278X
PN 5
PG 32
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 219CP
UT WOS:000250062600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Schrijvers, T
   Demoen, B
   De la Banda, MG
   Stuckey, PJ
AF Schrijvers, Tom
   Demoen, Bart
   De la Banda, Maria Garcia
   Stuckey, Peter J.
TI Improving PARMA trailing
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE constraint logic programming; program analysis; trailing
ID ABSTRACT INTERPRETATION; LOGIC; FRAMEWORK
AB Taylor introduced a variable binding scheme for logic variables in his PARMA system, that uses cycles of bindings rather than the linear chains of bindings used in the standard WAM representation. Both the HAL and dProlog languages make use of the PARMA representation in their Herbrand constraint solvers. Unfortunately, PARMA's trailing scheme is considerably more expensive in both time and space consumption. The aim of this paper is to present several techniques that lower the cost. First, we introduce a trailing analysis for HAL using the classic PARMA trailing scheme that detects and eliminates unnecessary trailings. The analysis, whose accuracy comes from HAL's determinism and mode declarations, has been integrated in the HAL compiler and is shown to produce space improvements as well as speed improvements. Second, we explain how to modify the classic PARMA trailing scheme to halve its trailing cost. This technique is illustrated and evaluated both in the context of dProlog and HAL. Finally, we explain the modifications needed by the trailing analysis in order to be combined with our modified PARMA trailing scheme. Empirical evidence shows that the combination is more effective than any of the techniques when used in isolation.
C1 Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
   Monash Univ, Sch Comp Sci & Software Engn, Clayton, Vic 3168, Australia.
   Univ Melbourne, Dept Comp Sci & Software Engn, NICTA Victoria Lab, Parkville, Vic 3052, Australia.
C3 KU Leuven; Monash University; University of Melbourne
RP Schrijvers, T (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
EM toms@cs.kuleuven.ac.be; bmd@cs.kuleuven.ac.be;
   mbanda@csse.monash.edu.au; pjs@cs.mu.oz.au
RI Schrijvers, Tom/A-6696-2016; Schrijvers, Tom/A-6269-2009
OI Schrijvers, Tom/0000-0001-8771-5559; Stuckey, Peter/0000-0003-2186-0459;
   Garcia de la Banda, Maria/0000-0002-6666-514X
CR AGGOUN A, 1990, SPLT 90 8 SEM PROGR, P487
   Ait-Kaci H., 1991, WARRENS ABSTRACT MAC
   BRUYNOOGHE M, 1991, J LOGIC PROGRAM, V10, P91, DOI 10.1016/0743-1066(91)80001-T
   Bueno R, 2001, LECT NOTES COMPUT SC, V2042, P86
   DEBRAY SK, 1992, J LOGIC PROGRAM, V13, P57, DOI 10.1016/0743-1066(92)90021-T
   DELABANDA MG, 2002, LNCS, V2441, P47
   Demoen B, 1999, LECT NOTES COMPUT SC, V1713, P174
   Demoen B, 2000, LECT NOTES ARTIF INT, V1861, P1240
   García-Ochoa F, 1998, BIOCHEM ENG J, V1, P1, DOI 10.1016/S1369-703X(97)00002-8
   JANSSENS G, 1992, J LOGIC PROGRAM, V13, P205, DOI 10.1016/0743-1066(92)90032-X
   Lagoon V, 2003, LECT NOTES COMPUT SC, V2916, P254, DOI 10.1007/978-3-540-24599-5_18
   Lagoon V, 2001, LECT NOTES COMPUT SC, V2024, P296
   LINDGREN T, 1995, TAYLORS SCHEME UNBOU
   Ferreira MAM, 2003, PROCEEDINGS OF THE 21ST INTERNATIONAL CONFERENCE MATHEMATICAL METHODS IN ECONOMICS 2003, P75
   MAZUR N, 2001, THESIS KU LEUVEN LEU
   MULKERS A, 1994, ACM T PROGR LANG SYS, V16, P205, DOI 10.1145/174662.174664
   Nethercote N., 2003, ELECTRON NOTES THEOR, V89, P1
   NETHERCOTE N, 2001, THESIS U MELBOURNE
   NOYE J, 1994, THESIS U RENNES 1
   Schulte C, 1999, LOGIC PROGRAMM, P275
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   SONDERGAARD H, 1986, LECT NOTES COMPUT SC, V213, P327
   Taylor A, 1996, J LOGIC PROGRAM, V29, P5, DOI 10.1016/S0743-1066(96)00065-9
   TAYLOR A, 1989, P 6 INT C LOG PROGR, P48
   TAYLOR A, 1991, THESIS BASSER DEP CO
   VANHENTENRYCK P, 1995, J LOGIC PROGRAM, V22, P179, DOI 10.1016/0743-1066(94)00021-W
   VANHENTENRYCK P, 1995, ACM T PROGR LANG SYS, V17, P635, DOI 10.1145/210184.210192
   VANROY P, 1992, COMPUTER, V25, P54, DOI 10.1109/2.108055
NR 28
TC 0
Z9 0
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2006
VL 6
BP 609
EP 644
DI 10.1017/S1471068405002620
PN 6
PG 36
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 106XJ
UT WOS:000242135000001
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Nadathur, G
AF Nadathur, G
TI A treatment of higher-order features in logic programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE lambda calculus; intensional higher-order programming; higher-order
   unification; abstract machine; compilation
ID ABSTRACT MACHINE; UNIFICATION
AB The logic programming paradigm provides the basis for a new intensional view of higher-order notions. This view is realized primarily by employing the terms of a typed lambda calculus as representational devices and by using a richer form of unification for probing their structures. These additions have important meta-programming applications but they also pose non-trivial implementation problems. One issue concerns the machine representation of lambda terms suitable to their intended use: an adequate encoding must facilitate comparison operations over terms in addition to supporting the usual reduction computation. Another aspect relates to the treatment of a unification operation that has a branching character and that sometimes calls for the delaying of the solution of unification problems. A final issue concerns the execution of goals whose structures become apparent only in the course of computation. These various problems are exposed in this paper and solutions to them are described. A satisfactory representation for lambda terms is developed by exploiting the nameless notation of de Bruijn as well as explicit encodings of substitutions. Special mechanisms are molded into the structure of traditional Prolog implementations to support branching in unification and carrying of unification problems over other computation steps; a premium is placed in this context on exploiting determinism and on emulating usual first-order behaviour. An extended compilation model is presented that treats higher-order unification and also handles dynamically emergent goals. The ideas described here have been employed in the Teyjus implementation of the lambda Prolog language, a fact that is used to obtain a preliminary assessment of their efficacy.
C1 Univ Minnesota, Digital Technol Ctr, Minneapolis, MN 55455 USA.
   Univ Minnesota, Dept Comp Sci & Engn, Minneapolis, MN 55455 USA.
C3 University of Minnesota System; University of Minnesota Twin Cities;
   University of Minnesota System; University of Minnesota Twin Cities
RP Univ Minnesota, Digital Technol Ctr, 4-192 EE-CS Bldg,200 Union St SE, Minneapolis, MN 55455 USA.
EM gopalan@cs.umn.edu
CR Abadi M., 1991, Journal of Functional Programming, V1, P375, DOI 10.1017/S0956796800000186
   AIELLO L, 1981, J COMPUT SYST SCI, V23, P383, DOI 10.1016/0022-0000(81)90073-8
   Ait-Kaci H., 1991, WARRENS ABSTRACT MAC
   ANDREWS PB, 1971, J SYMBOLIC LOGIC, V36, P414, DOI 10.2307/2269949
   [Anonymous], 1999, AUTOMATED DEDUCTION
   [Anonymous], 1972, INDAGATIONES MATHEMA, DOI DOI 10.1016/1385-7258(72)90034-0
   Appel AW, 1999, LOGIC PROGRAMM, P411
   APT KR, 1982, J ACM, V29, P841, DOI 10.1145/322326.322339
   Benaissa Z.-El.-A., 1996, Journal of Functional Programming, V6, P699, DOI 10.1017/S0956796800001945
   BRISSET P, 1992, COMPILATION LAMBDAPR
   Church A., 1940, J. Symbolic Logic, V5, P56, DOI [10.2307/2266170, DOI 10.2307/2266170]
   COUSINEAU G, 1987, SCI COMPUT PROGRAM, V8, P173, DOI 10.1016/0167-6423(87)90020-7
   Dowek G, 2000, INFORM COMPUT, V157, P183, DOI 10.1006/inco.1999.2837
   DOWEK G, 1998, 3591 INRIA
   ELLIOTT C, 1991, TOPICS ADV LANGUAGE, P289
   ELLIOTT C, 1989, ELP COMMON LISP IMPL
   FAIRBAIRN J, 1987, LECT NOTES COMPUT SC, V274, P34
   FELTKAMP TEW, 1993, MANUAL BIOL MARKER A, V11, P1
   FIELD J, 1990, 17 ANN ACM S PRINC P, P1
   Hannan J., 1992, MATH STRUCT COMPUT S, V2, P415, DOI [DOI 10.1017/S0960129500001559, 10.1017/S0960129500001559]
   HANNAN J, 1992, 7 ANN IEEE S LOG COM, P407
   HENDERSON P, 1976, 3RD ACM S PRINC PROG, P95
   Huet G. P., 1975, Theoretical Computer Science, V1, P27, DOI 10.1016/0304-3975(75)90011-0
   Kamareddine F., 1997, Journal of Functional Programming, V7, P395, DOI 10.1017/S0956796897002785
   KWON K, 1994, COMPUT LANG, V20, P25, DOI 10.1016/0096-0551(94)90012-4
   Liang C, 2002, LECT NOTES COMPUT SC, V2378, P192
   LIANG C, 2003, 20032 U MINN DIG TEC
   MARTELLI A, 1982, ACM T PROGR LANG SYS, V4, P258, DOI 10.1145/357162.357169
   MICHAYLOV S, 1992, WORKSH LAMBDPR PROGR
   Miller D., 1991, Journal of Logic and Computation, V1, P497, DOI 10.1093/logcom/1.4.497
   MILLER D, 1991, ANN PURE APPL LOGIC, V51, P125, DOI 10.1016/0168-0072(91)90068-W
   Miller D., 1987, IEEE S LOG PROGR SAN, P379
   Miller D., 1988, lambdaProlog Version 2.7
   Nadasdy T, 1998, PEDIATR DEVEL PATHOL, V1, P49, DOI 10.1007/s100249900006
   NADATHUR G, 1995, J LOGIC PROGRAM, V25, P119, DOI 10.1016/0743-1066(95)00037-K
   NADATHUR G, 1990, J ACM, V37, P777, DOI 10.1145/96559.96570
   NADATHUR G, 1989, P N AM C LOG PROGR, P1180
   NADATHUR G, 1998, HDB LOGIC ARTIFICIAL, V5, P499
   NADATHUR G, 1998, TR9801 U CHIC DEP CO
   NADATHUR G, 1999, J FUNCTIONAL LOGIC P, V2, P1
   NADATHUR G, 2003, P 5 ACM SIGPLAN INT, P195
   Nadathur Gopalan., 1988, Fifth International Logic Programming Conference, P810
   Nadathur Gopalan., 1992, TYPES IN LOGIC PROGRAMMING, P245
   PFENNING F, 1908, P ACM LISP FUNCT PRO, P153
   Pfenning F., 1988, PLDI'88: Proceedings of the ACM SIGPLAN 1988 conference on Programming Language design and Implementation', P199
   Pfenning Frank, 1999, LNCS, V1632, P202, DOI DOI 10.1007/3-540-48660-7_14
   Shao Zhong., 1998, ICFP 98, DOI DOI 10.1145/289423.289460
   WARREN DHD, 1977, 39 DAI U ED
   WARREN DHD, 1983, 309 SRI ING
   WARREN DHD, 1977, 40 DAI U ED
   WICKLINE P, 1997, TERZO 1 1B IMPLENTAT
NR 51
TC 3
Z9 4
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2005
VL 5
BP 305
EP 354
DI 10.1017/S1471068404002297
PN 3
PG 50
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 938SI
UT WOS:000230022800002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lazic, RS
   Newcomb, TC
   Roscoe, AW
AF Lazic, RS
   Newcomb, TC
   Roscoe, AW
TI On model checking data-independent systems with arrays without reset
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 2nd International Workshop on Verification and Computational Logic (VCL
   2001)
CY SEP 04, 2001
CL Florence, ITALY
DE model checking; data independence; arrays; mu-calculus
ID VERIFICATION
AB A system is data-independent with respect to a data type X iff the operations it can perform on values of type X are restricted to just equality testing. The system may also store, input and output values of type X. We study model checking of systems which are data-independent with respect to two distinct type variables X and Y, and may in addition use arrays with indices from X and values from Y. Our main interest is the following parameterised model-checking problem: whether a given program satisfies a given temporal-logic formula for all non-empty finite instances of X and Y. Initially, we consider instead the abstraction where X and Y are infinite and where partial functions with finite domains are used to model arrays. Using a translation to data-independent systems without arrays, we show that the mu-calculus model-checking problem is decidable for these systems. From this result, we can deduce properties of all systems with finite instances of X and Y. We show that there is a procedure for the above parameterised model-checking problem of the universal fragment of the mu-calculus, such that it always terminates but may give false negatives. We also deduce that the parameterised model-checking problem of the universal disjunction-free fragment of the mu-calculus is decidable. Practical motivations for model checking data-independent systems with arrays include verification of memory and cache systems, where X is the type of memory addresses, and Y the type of storable values. As an example we verify a fault-tolerant memory interface over a set of unreliable memories.
C1 Univ Warwick, Dept Comp Sci, Coventry CV4 7AL, W Midlands, England.
   Univ Oxford, Comp Lab, Oxford OX1 3QD, England.
C3 University of Warwick; University of Oxford
RP Univ Warwick, Dept Comp Sci, Coventry CV4 7AL, W Midlands, England.
EM ranko.lazic@dcs.warwick.ac.uk; tom.newcomb@comlab.ox.ac.uk;
   bill.roscoe@comlab.ox.ac.uk
CR Adve SV, 1996, COMPUTER, V29, P66, DOI 10.1109/2.546611
   ALUR R, 1998, COMPUTER AIDED VERIF
   [Anonymous], 1992, HDB LOGIC COMPUTER S
   BROWNE MC, 1988, THEOR COMPUT SCI, V59, P115, DOI 10.1016/0304-3975(88)90098-9
   BURCH JR, 1992, INFORM COMPUT, V98, P142, DOI 10.1016/0890-5401(92)90017-A
   Chandy K.M., 1988, PARALLEL PROGRAM DES
   CREESE S, 2000, INT C PAR DISTR PROC
   DILL DL, 1992, P IEEE INT C COMP DE, P522
   Finkel A, 2001, THEOR COMPUT SCI, V256, P63, DOI 10.1016/S0304-3975(00)00102-X
   GRUMBERG O, 1994, ACM T PROGR LANG SYS, V16, P843, DOI 10.1145/177492.177725
   Henzinger TA, 2000, LECT NOTES COMPUT SC, V1770, P13
   HENZINGER TA, 1999, LECT NOTES COMPUTER, V1633, P301
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   HOJATI R, 1997, P IEEE INT HIGH LEV
   HOJATI R, 1997, P 13 IFIP INT C COMP
   Ip CN, 1996, FORM METHOD SYST DES, V9, P41, DOI 10.1007/BF00625968
   Lazic R., 2000, LNCS, V1877, P581
   McMillan KL, 1999, LECT NOTES COMPUT SC, V1703, P219
   Namjoshi K. S., 2000, Computer Aided Verification, P435
   Patterson D.A., 1997, COMPUTER ORG DESIGN, VSecond
   QADEER S, 2001, 176 COMP
   Roscoe A. W., 2001, P 2 INT WORKSH VER C, P5
   Wolper Pierre., 1986, POPL, V86, P184
NR 23
TC 6
Z9 6
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP-NOV
PY 2004
VL 4
BP 659
EP 693
DI 10.1017/S1471068404002054
PN 5-6
PG 35
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 861VZ
UT WOS:000224448000005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Erdem, E
   Lifschitz, V
AF Erdem, E
   Lifschitz, V
TI Tight logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer sets; completion; supportedness; tightness; Fages' theorem
AB This note is about the relationship between two theories of negation as failure - one based on program completion, the other based on stable models, or answer sets. Francois Fages showed that if a logic program satisfies a certain syntactic condition, which is now called 'tightness,' then its stable models can be characterized as the models of its completion. We extend the definition of tightness and Fages' theorem to programs with nested expressions in the bodies of rules, and study tight logic programs containing the definition of the transitive closure of a predicate.
C1 Univ Toronto, Dept Comp Sci, Toronto, ON M5S 3H5, Canada.
   Univ Texas, Dept Comp Sci, Austin, TX 78712 USA.
C3 University of Toronto; University of Texas System; University of Texas
   Austin
RP Univ Toronto, Dept Comp Sci, 6 Kings Coll Rd, Toronto, ON M5S 3H5, Canada.
EM esra@cs.toronto.edu; vl@cs.utexas.edu
RI Erdem, Esra/I-4587-2012
OI Erdem, Esra/0000-0001-8384-7810
CR Apt K.R., 1988, THEORY DECLARATIVE K, P89
   BABOVICH Y, 2000, P NMR 2000
   BARAL C, 1994, J LOGIC PROGRAM, V20, P73, DOI 10.1016/0743-1066(94)90025-6
   Clark K. L., 1978, Logic and data bases, P293
   Erdem E, 1999, LECT NOTES ARTIF INT, V1730, P107, DOI 10.1007/3-540-46767-X_8
   ERDEM E, 2001, AAAI SPRING S ANSW S
   ERDEM E, 2001, P 17 INT C LOG PROGR, P242
   FAGES F, 1994, J METHODS LOGIC COMP, V1, P51
   FERRARIS P, 2003, UNPUB WEIGHT CONSTRA
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Inoue K, 1998, J LOGIC PROGRAM, V35, P39, DOI 10.1016/S0743-1066(97)10001-2
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   LIFSCHITZ V, 1996, 3 S LOG FORM COMM RE
   LLOYD JW, 1984, J LOGIC PROGRAM, V3, P225
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
NR 18
TC 79
Z9 81
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL-SEP
PY 2003
VL 3
BP 499
EP 518
DI 10.1017/S1471068403001765
PN 4-5
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 708LE
UT WOS:000184567800005
DA 2024-07-18
ER

PT J
AU De Jongh, DHJ
   Hendriks, L
AF De Jongh, DHJ
   Hendriks, L
TI Characterization of strongly equivalent logic programs in intermediate
   logics
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set semantics; strongly equivalent programs; propositional
   intermediate logics
AB The non-classical, nonmonotonic inference relation associated with the answer set semantics for logic programs gives rise to a relationship of strong equivalence between logical programs that can be verified in 3-valued Godel logic, G3, the strongest non-classical intermediate propositional logic (Lifschitz et al., 2001). In this paper we will show that KC (the logic obtained by adding axiom -A boolean OR -A to intuitionistic logic), is the weakest intermediate logic for which strongly equivalent logic programs, in a language allowing negations, are logically equivalent.
C1 Univ Amsterdam, Inst Log Language & Computat, NL-1018 TV Amsterdam, Netherlands.
C3 University of Amsterdam
RP De Jongh, DHJ (corresponding author), Univ Amsterdam, Inst Log Language & Computat, Plantage Muidergracht 24, NL-1018 TV Amsterdam, Netherlands.
CR Avellone A., 1999, LOG J IGPL, V7, P447, DOI [10.1093/jigpal/7.4.447, DOI 10.1093/JIGPAL/7.4.447]
   Chagrov A., 1997, Modal Logic
   DOETS K, 1994, FROM LOGIC LOGIC PRO
   Gelfond M., 1988, P 5 INT C S LOG PROG, V2, P1070
   Godel K, 1932, Anzeiger Akademie der Wissenschaften Wien, Mathematisch-Naturwissenschaftliche Klasse, V69, P65
   Hendriks A., 1996, THESIS U AMSTERDAM
   HOSOI T, 1966, J FAC SCI U TOKYO 1, V13, P183
   Jankov Vadim Anatolyevich, 1968, Mathematics of the USSR-Izvestiya, V2, P997, DOI DOI 10.1070/IM1968V002N05ABEH000690
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lukasiewicz J., 1938, ENTRETIENS ZURICH FO, V12, P82
   Pearce D, 1997, LECT NOTES ARTIF INT, V1216, P57, DOI 10.1007/BFb0023801
   [No title captured]
NR 13
TC 24
Z9 24
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 40 WEST 20TH ST, NEW YORK, NY 10011-4221 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2003
VL 3
BP 259
EP 270
DI 10.1017/S147106840200159X
PN 3
PG 12
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 689AQ
UT WOS:000183469800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tarzariol, A
   Schekotihin, K
   Gebser, M
   Law, M
AF Tarzariol, Alice
   Schekotihin, Konstantin
   Gebser, Martin
   Law, Mark
TI Efficient Lifting of Symmetry Breaking Constraints for Complex
   Combinatorial Problems
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; inductive logic programming; symmetry breaking
   constraints
AB Many industrial applications require finding solutions to challenging combinatorial problems. Efficient elimination of symmetric solution candidates is one of the key enablers for high-performance solving. However, existing model-based approaches for symmetry breaking are limited to problems for which a set of representative and easily solvable instances is available, which is often not the case in practical applications. This work extends the learning framework and implementation of a model-based approach for Answer Set Programming to overcome these limitations and address challenging problems, such as the Partner Units Problem. In particular, we incorporate a new conflict analysis algorithm in the Inductive Logic Programming system ILASP, redefine the learning task, and suggest a new example generation method to scale up the approach. The experiments conducted for different kinds of Partner Units Problem instances demonstrate the applicability of our approach and the computational benefits due to the first-order constraints learned.
C1 [Tarzariol, Alice; Schekotihin, Konstantin; Gebser, Martin] Univ Klagenfurt, Klagenfurt, Austria.
   [Gebser, Martin] Graz Univ Technol, Graz, Austria.
   [Law, Mark] Imperial Coll London, London, England.
C3 University of Klagenfurt; Graz University of Technology; Imperial
   College London
RP Tarzariol, A (corresponding author), Univ Klagenfurt, Klagenfurt, Austria.
EM alice.tarzariol@aau.at; konstantin.schekotihin@aau.at;
   martin.gebser@aau.at; mark@ilasp.com
RI Gebser, Martin/B-7169-2018; Tarzariol, Alice/JMA-8749-2023; Schekotihin,
   Konstantin/IZN-7815-2023
OI Tarzariol, Alice/0000-0001-6586-3649; Schekotihin,
   Konstantin/0000-0002-0286-0958
FU KWF [28472]; cms electronics GmbH; FunderMax GmbH; Hirsch Armbander
   GmbH; incubed IT GmbH; Infineon Technologies Austria AG; Isovolta AG;
   Kostwein Holding GmbH; Privatstiftung Karntner Sparkasse
FX This work was partially funded by KWF project 28472, cms electronics
   GmbH, FunderMax GmbH, Hirsch Armbander GmbH, incubed IT GmbH, Infineon
   Technologies Austria AG, Isovolta AG, Kostwein Holding GmbH, and
   Privatstiftung Karntner Sparkasse. We thank the anonymous reviewers for
   their valuable suggestions and comments.
CR [Anonymous], 2012, SYMMETRY BREAKING CO, DOI [DOI 10.1609/AAAI.V26I1.8437, 10.1609/aaai.v26i1.8437]
   Aschinger M, 2011, LECT NOTES COMPUT SC, V6697, P4, DOI 10.1007/978-3-642-21311-3_4
   Cohen D, 2006, CONSTRAINTS, V11, P115, DOI 10.1007/s10601-006-8059-8
   CRAWFORD JM, 1994, PROCEEDINGS OF THE TWELFTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P1092
   Cropper A., 2020, INDUCTIVE LOGIC PROG
   Cropper A, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4833
   Cropper A, 2021, MACH LEARN, V110, P801, DOI 10.1007/s10994-020-05934-z
   Darga P., 2004, SAUCY
   Devriendt J, 2016, THEOR PRACT LOG PROG, V16, P636, DOI 10.1017/S1471068416000508
   Dodaro C, 2016, THEOR PRACT LOG PROG, V16, P653, DOI 10.1017/S1471068416000284
   Drescher C, 2011, AI COMMUN, V24, P177, DOI 10.3233/AIC-2011-0495
   Erdem E, 2016, AI MAG, V37, P53, DOI 10.1609/aimag.v37i3.2678
   Falkner A, 2018, KUNSTL INTELL, V32, P165, DOI 10.1007/s13218-018-0548-6
   Friedrich G., IJCAI 2011 WORKSH CO, P17
   Gebser M., 2012, SYNTHESIS LECT ARTIF, DOI [10.2200/S00457ED1V01Y201211AIM019, DOI 10.2200/S00457ED1V01Y201211AIM019, 10.1007/978-3-031-01561-8]
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Hoos H, 2014, THEOR PRACT LOG PROG, V14, P569, DOI 10.1017/S1471068414000210
   Katebi H, 2010, LECT NOTES COMPUT SC, V6175, P113, DOI 10.1007/978-3-642-14186-7_11
   Law M., 2021, ILASP
   Law M., 2018, Advances in Cognitive Systems, V7, P57
   Law M., THEORY PRACTICE LOGI
   Law M., 2020, ILASP SYSTEM INDUCTI
   Law M, 2014, LECT NOTES ARTIF INT, V8761, P311, DOI 10.1007/978-3-319-11558-0_22
   Lifschitz V., 2019, Answer Set Programming, DOI DOI 10.1007/978-3-030-24658-7
   Margot F, 2007, DISCRETE OPTIM, V4, P40, DOI 10.1016/j.disopt.2006.10.008
   Mears C, 2008, LECT NOTES COMPUT SC, V5015, P158, DOI 10.1007/978-3-540-68155-7_14
   Puget JF, 2005, LECT NOTES COMPUT SC, V3709, P475, DOI 10.1007/11564751_36
   Sakallah KA, 2009, FRONT ARTIF INTEL AP, V185, P289, DOI 10.3233/978-1-58603-929-5-289
   Tarzariol A., 2021, 30 INT JOINT C ART I, P2062
   Tarzariol A., 2022, ILP SYMMETRY BREAKIN
   Tarzariol A, 2022, MACH LEARN, V111, P1303, DOI 10.1007/s10994-022-06146-3
   Teppan EC, 2016, J COMPUT SYST SCI, V82, P739, DOI 10.1016/j.jcss.2015.12.004
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
NR 33
TC 2
Z9 2
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2022
VL 22
IS 4
SI SI
BP 606
EP 622
AR PII S1471068422000151
DI 10.1017/S1471068422000151
EA JUN 2022
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 3T5UX
UT WOS:000819220700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU LIFSCHITZ, V
AF Lifschitz, Vladimir
TI Strong Equivalence of Logic Programs with Counting
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE aggregates; answer set programming; strong equivalence
AB In answer set programming, two groups of rules are considered strongly equivalent if they have the same meaning in any context. In some cases, strong equivalence of programs in the input language of the grounder gringo can be established by deriving rules of each program from rules of the other. The possibility of such proofs has been demonstrated for a subset of that language that includes comparisons, arithmetic operations, and simple choice rules, but not aggregates. This method is extended here to a class of programs in which some uses of the #count aggregate are allowed.
C1 [Lifschitz, Vladimir] Univ Texas Austin, Austin, TX 78712 USA.
C3 University of Texas System; University of Texas Austin
RP LIFSCHITZ, V (corresponding author), Univ Texas Austin, Austin, TX 78712 USA.
EM lifschitzv@gmail.com
OI Lifschitz, Vladimir/0000-0001-6051-7907
CR [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Fandinno J., 2022, P AAAI C ARTIFICIAL
   Gebser M., 2019, POTASSCO USER GUIDE
   Gebser M, 2015, THEOR PRACT LOG PROG, V15, P449, DOI 10.1017/S1471068415000150
   Gelfond M, 2014, KNOWLEDGE REPRESENTATION, REASONING, AND THE DESIGN OF INTELLIGENT AGENTS: THE ANSWER-SET PROGRAMMING APPROACH, P1, DOI 10.1017/CBO9781139342124
   Gelfond M, 2019, ARTIF INTELL, V275, P28, DOI 10.1016/j.artint.2019.04.004
   Harrison A, 2017, ARTIF INTELL, V246, P22, DOI 10.1016/j.artint.2017.02.002
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lifschitz V., 2021, THEOR PRACT LOG PROG
   Lifschitz V., 2019, Answer Set Programming, DOI DOI 10.1007/978-3-030-24658-7
   Lifschitz V, 2019, LECT NOTES ARTIF INT, V11481, P270, DOI 10.1007/978-3-030-20528-7_20
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Truszczynski M., 2012, Lecture Notes in Computer Science, V7265, P543
NR 14
TC 3
Z9 3
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2022
VL 22
IS 4
SI SI
BP 573
EP 588
AR PII S1471068422000278
DI 10.1017/S1471068422000278
EA JUN 2022
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 3T5UX
UT WOS:000815545700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Faber, W
   Morak, M
   Chrpa, L
AF Faber, Wolfgang
   Morak, Michael
   Chrpa, Lukas
TI Determining Action Reversibility in STRIPS Using Answer Set and
   Epistemic Logic Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE action reversibility; Answer Set Programming; Epistemic Logic
   Programming; reasoning about action and change
AB In the context of planning and reasoning about actions and change, we call an action reversible when its effects can be reverted by applying other actions, returning to the original state. Renewed interest in this area has led to several results in the context of the PDDL language, widely used for describing planning tasks. In this paper, we propose several solutions to the computational problem of deciding the reversibility of an action. In particular, we leverage an existing translation from PDDL to Answer Set Programming (ASP), and then use several different encodings to tackle the problem of action reversibility for the STRIPS fragment of PDDL. For these, we use ASP, as well as Epistemic Logic Programming (ELP), an extension of ASP with epistemic operators, and compare and contrast their strengths and weaknesses.
C1 [Faber, Wolfgang; Morak, Michael] Univ Klagenfurt, Klagenfurt, Austria.
   [Chrpa, Lukas] Czech Tech Univ, Prague, Czech Republic.
C3 University of Klagenfurt; Czech Technical University Prague
RP Faber, W (corresponding author), Univ Klagenfurt, Klagenfurt, Austria.
EM wolfgang.faber@aau.at; michael.morak@aau.at; chrpaluk@fel.cvut.cz
RI Chrpa, Lukáš/AAM-2462-2020; Morak, Michael/AAI-1392-2020; Faber,
   Wolfgang/H-2316-2012
OI Chrpa, Lukáš/0000-0001-9713-7748; Morak, Michael/0000-0002-2077-7672; 
FU S&T Cooperation "Identifying Undoable Actions and Events in Automated
   Planning by Means of Answer Set Programming" [CZ 05/2019]; Czech
   Ministry of Education, Youth and Sports [8J19AT025]; OP VVV
   [CZ.02.1.01/0.0/0.0/16 019/0000765]; Czech Science Foundation
   [18-07252S]
FX Supported by the S&T Cooperation CZ 05/2019 "Identifying Undoable
   Actions and Events in Automated Planning by Means of Answer Set
   Programming", by the Czech Ministry of Education, Youth and Sports under
   the Czech-Austrian Mobility programme (project no. 8J19AT025), by the OP
   VVV funded project CZ.02.1.01/0.0/0.0/16 019/0000765 "Research Center
   for Informatics" and by the Czech Science Foundation (project no.
   18-07252S).
CR BYLANDER T, 1994, ARTIF INTELL, V69, P165, DOI 10.1016/0004-3702(94)90081-7
   Camacho A, 2016, P I C AUTOMAT PLAN S, P65
   Chrpa L., 2021, IN PRESS
   Chrpa L., 2020, INT C LOG PROGR 2020, V2678
   Chrpa L., 2012, P ICAPS
   Chrpa L, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P971
   Cserna B, 2018, AAAI CONF ARTIF INTE, P1306
   Daum J, 2016, P I C AUTOMAT PLAN S, P106
   De Giacomo G, 2016, ARTIF INTELL, V231, P64, DOI 10.1016/j.artint.2015.10.001
   Dimopoulos Y, 2019, THEOR PRACT LOG PROG, V19, P477, DOI 10.1017/S1471068418000583
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Eiter T., 2008, J. Applied Logic, V6, P380
   Faber W., 2020, INT C LOGIC PROGR 20, V2678
   FIKES RE, 1971, ARTIF INTELL, V2, P189, DOI 10.1016/0004-3702(71)90010-5
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   GELFOND M, 1991, PROCEEDINGS : NINTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P386
   Ghallab M., 2004, AUTOMATED PLANNING T
   Ghallab M., 2016, Automated planning and acting
   Lipovetzky N, 2016, P I C AUTOMAT PLAN S, P211
   Morak M, 2020, KR2020: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P652
   Truszczyriski Miroslaw, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P315, DOI 10.1007/978-3-642-20832-4_20
NR 21
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2021
VL 21
IS 5
SI SI
BP 646
EP 662
AR PII S1471068421000429
DI 10.1017/S1471068421000429
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA XB4RH
UT WOS:000721317500009
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Julián-Iranzo, P
   Sáenz-Pérez, F
AF Julian-Iranzo, Pascual
   Saenz-Perez, Fernando
TI Planning for an Efficient Implementation of Hypothetical Bousi∼Prolog
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Fuzzy logic programming; fuzzy Prolog; Bousi similar to Prolog;
   hypothetical reasoning; system implementation
AB This paper explores the integration of hypothetical reasoning into an efficient implementation of the fuzzy logic language Bousi similar to Prolog. To this end, we first analyse what would be expected from a logic inference system, equipped with what is called embedded implication, to model solving goals with respect to assumptions. We start with a propositional system and incrementally build more complex systems and implementations to satisfy the requirements imposed by a system like Bousi similar to Prolog. Finally, we propose an inference system, operational semantics and the translation function to generate efficient Prolog programmes from Bousi similar to Prolog programmes.
C1 [Julian-Iranzo, Pascual] Univ Castilla La Mancha, Dept Informat Technol & Syst, Ciudad Real, Spain.
   [Saenz-Perez, Fernando] Univ Complutense Madrid, Dept Software Engn & Artificial Intelligence, Madrid, Spain.
C3 Universidad de Castilla-La Mancha; Complutense University of Madrid
RP Julián-Iranzo, P (corresponding author), Univ Castilla La Mancha, Dept Informat Technol & Syst, Ciudad Real, Spain.
EM Pascual.Julian@uclm.es; fernan@sip.ucm.es
RI ; Saenz-Perez, Fernando/L-2301-2017
OI Julian-Iranzo, Pascual/0000-0002-6482-3220; Saenz-Perez,
   Fernando/0000-0001-6075-4398
FU State Research Agency (AEI) of the Spanish Ministry of Science and
   Innovation [PID2019-104735RB-C42]; Spanish Ministry of Economy and
   Competitiveness [TIN2016-76843-C4-2-R, TIN2017-86217-R]; Comunidad de
   Madrid [S2018/TCS-4339]; EIE Funds of the European Union
FX This work was supported by the State Research Agency (AEI) of the
   Spanish Ministry of Science and Innovation under grant
   PID2019-104735RB-C42 (SAFER), by the Spanish Ministry of Economy and
   Competitiveness, under the grants TIN2016-76843-C4-2-R (MERINET),
   TIN2017-86217-R (CAVIART-2) and by the Comunidad de Madrid, under the
   grant S2018/TCS-4339 (BLOQUES-CM), cofunded by EIE Funds of the European
   Union.
CR Bench-Capon T, 2010, ARTIF INTELL LAW, V18, P153, DOI 10.1007/s10506-010-9094-8
   Bonner A. J., 1994, STUDIES LOGIC COMPUT, P187
   Bosse T, 2009, LECT NOTES ARTIF INT, V5579, P24, DOI 10.1007/978-3-642-02568-6_3
   Calantone R, 2017, J BUS LOGIST, V38, P151, DOI 10.1111/jbl.12166
   Cuijpers P., 2013, DCM 2013, P25
   Fontana F.A., 1999, P ACM SAC, P260
   Fontana FA, 2002, INT J INTELL SYST, V17, P853, DOI 10.1002/int.10067
   Galindo J., 2005, WSEAS Transactions on Information Science and Applications, V2, P161
   Julian-Iranzo P., 2017, INT C FUZZY SYSTEMS, P1
   Julian- Iranzo P., IEEE T FUZZY SYST, V29, P1238
   Julian- Iranzo P., 2020, INT C FUZZY SYSTEMS, P1
   Julián-Iranzo P, 2018, IEEE T FUZZY SYST, V26, P2634, DOI 10.1109/TFUZZ.2018.2806923
   Julián-Iranzo P, 2017, FUZZY SET SYST, V317, P1, DOI 10.1016/j.fss.2016.12.016
   Kunhimangalam R, 2013, BIOMED RES INT, V2013, DOI 10.1155/2013/846780
   Lopez P., 1999, PROC JOINT C DECLARA, P485
   MARTELLI A, 1982, ACM T PROGR LANG SYS, V4, P258, DOI 10.1145/357162.357169
   Minutolo A., 2016, INT C WIR MOB COMM H, P278
   Moreno G., 2014, J SOFTWARE ENG APPL, V7, P273
   Rizzi S., 2009, WHAT IF ANAL, P3525
   Rubio-Manzano C, 2014, J INTELL FUZZY SYST, V26, P1503, DOI 10.3233/IFS-130834
   Sessa MI, 2002, THEOR COMPUT SCI, V275, P389, DOI 10.1016/S0304-3975(01)00188-8
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
   Wilson, 2008, SCHEDULE BASED MODEL
NR 23
TC 0
Z9 0
U1 1
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2021
VL 21
IS 5
SI SI
BP 680
EP 697
DI 10.1017/S1471068421000405
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA XB4RH
UT WOS:000721317500011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Katzouris, N
   Paliouras, G
   Artikis, A
AF Katzouris, Nikos
   Paliouras, Georgios
   Artikis, Alexander
TI Online Learning Probabilistic Event Calculus Theories in Answer Set
   Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE inductive logic programming and multi-relational data mining; knowledge
   representation and nonmonotonic reasoning
AB Complex Event Recognition (CER) systems detect event occurrences in streaming time-stamped input using predefined event patterns. Logic-based approaches are of special interest in CER, since, via Statistical Relational AI, they combine uncertainty-resilient reasoning with time and change, with machine learning, thus alleviating the cost of manual event pattern authoring. We present a system based on Answer Set Programming (ASP), capable of probabilistic reasoning with complex event patterns in the form of weighted rules in the Event Calculus, whose structure and weights are learnt online. We compare our ASP-based implementation with a Markov Logic-based one and with a number of state-of-the-art batch learning algorithms on CER data sets for activity recognition, maritime surveillance and fleet management. Our results demonstrate the superiority of our novel approach, both in terms of efficiency and predictive performance. This paper is under consideration for publication in Theory and Practice of Logic Programming (TPLP).
C1 [Katzouris, Nikos; Paliouras, Georgios; Artikis, Alexander] Natl Ctr Sci Res NCSR Demokritos, Inst Informat & Telecommun, Athens, Greece.
   [Artikis, Alexander] Univ Piraeus, Dept Maritime Studies, Piraeus, Greece.
C3 National Centre of Scientific Research "Demokritos"; University of
   Piraeus
RP Katzouris, N (corresponding author), Natl Ctr Sci Res NCSR Demokritos, Inst Informat & Telecommun, Athens, Greece.
EM nkatz@iit.demokritos.gr; paliourg@iit.demokritos.gr;
   a.artikis@iit.demokritos.gr
RI Artikis, Alexander/AAC-2692-2020
OI Artikis, Alexander/0000-0001-6899-4599
FU EUs Horizon 2020 research and innovation programme [825070]; project
   SYNTELESIS "Innovative Technologies and Applications based on the
   Internet of Things and Cloud Computing" [MIS 5002521]; Operational
   Programme "Competitiveness, Entrepreneurship and Innovation" (NSRF
   2014-2020); project entitled "INFORE: Interactive Extreme-Scale
   Analytics and Forecasting"; EU; H2020 - Industrial Leadership [825070]
   Funding Source: H2020 - Industrial Leadership
FX This work is supported by the project entitled "INFORE: Interactive
   Extreme-Scale Analytics and Forecasting", funded by the EUs Horizon 2020
   research and innovation programme under grant agreement No 825070 and by
   the project SYNTELESIS "Innovative Technologies and Applications based
   on the Internet of Things and Cloud Computing" (MIS 5002521), which is
   funded by the Operational Programme "Competitiveness, Entrepreneurship
   and Innovation" (NSRF 2014-2020) and co-financed by Greece and the EU.
   We would like to thank Mark Law for his assistance in running ILASP.
CR Alevizos E, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3117809
   [Anonymous], 2014, Commonsense reasoning: an event calculus based approach
   [Anonymous], 2018, ECML PKDD 2018
   Artikis A, 2015, IEEE T KNOWL DATA EN, V27, P895, DOI 10.1109/TKDE.2014.2356476
   Artikis A, 2012, KNOWL ENG REV, V27, P469, DOI 10.1017/S0269888912000264
   Athakravi D, 2014, LECT NOTES ARTIF INT, V8812, P31, DOI 10.1007/978-3-662-44923-3_3
   Bifet A., 2018, MACHINE LEARNING DAT
   Broda K., 2015, The ILASP System for Learning Answer Set Programs
   Cugola G, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187677
   De Raedt L, 2008, COGN TECHNOL, P1
   Domingos P., 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P71, DOI 10.1145/347090.347107
   Duchi J, 2011, J MACH LEARN RES, V12, P2121
   Guimaraes V, 2019, MACH LEARN, V108, P1165, DOI 10.1007/s10994-019-05798-y
   Huynh T.N., 2011, Proceedings of the 11th SIAM International Conference on Data Mining (SDM11), P642
   Huynh TN, 2009, LECT NOTES ARTIF INT, V5781, P564, DOI 10.1007/978-3-642-04180-8_54
   Katzouris N., 2017, THESIS U ATHENS
   Katzouris N, 2020, KR2020: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P790
   Katzouris N, 2019, FUTURE GENER COMP SY, V94, P468, DOI 10.1016/j.future.2018.11.033
   Katzouris N, 2016, THEOR PRACT LOG PROG, V16, P817, DOI 10.1017/S1471068416000260
   Katzouris N, 2015, MACH LEARN, V100, P555, DOI 10.1007/s10994-015-5512-1
   Law M., 2018, Advances in Cognitive Systems
   Lee J., 2016, 15 INT C PRINC
   Lee J, 2017, THEOR PRACT LOG PROG, V17, P942, DOI 10.1017/S1471068417000400
   Lifschitz V., 2019, Answer Set Programming, DOI DOI 10.1007/978-3-030-24658-7
   Michelioudakis E., 2016, ECML, P232, DOI DOI 10.1007/978-3-319-46128-1_15
   Patroumpas K, 2017, GEOINFORMATICA, V21, P389, DOI 10.1007/s10707-016-0266-x
   Raedt LD., 2016, Synthesis lectures on artificial intelligence and machine learning, V10, P1, DOI [DOI 10.2200/S00692ED1V01Y201601AIM032, DOI 10.1007/978-3-031-01574-8, 10.1007/978-3-031-01574-8]
   Ray O, 2009, J APPL LOGIC, V7, P329, DOI 10.1016/j.jal.2008.10.007
   Skarlatidis A., 2014, LOGICAL MARKOV RANDO
   Skarlatidis A, 2015, ACM T COMPUT LOG, V16, DOI 10.1145/2699916
   Tsilionis E, 2019, THEOR PRACT LOG PROG, V19, P841, DOI 10.1017/S147106841900022X
NR 31
TC 5
Z9 5
U1 1
U2 3
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2023
VL 23
IS 2
BP 362
EP 386
AR PII S1471068421000107
DI 10.1017/S1471068421000107
EA AUG 2021
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA KB0F2
UT WOS:000792256500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hanna, BN
   Trieu, LLT
   Son, TC
   Dinh, NT
AF HANNA, B. O. T. R. O. S. N.
   TRIEU, L. Y. L. Y. T.
   SON, T. R. A. N. C.
   DINH, N. A. M. T.
TI An Application of ASP in Nuclear Engineering: Explaining the Three Mile
   Island Nuclear Accident Scenario
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE Three Mile Island Accident; Answer Set Programming (ASP); Explainable AI
ID LOGIC PROGRAMS; SYSTEM
AB The paper describes an ongoing effort in developing a declarative system for supporting operators in the Nuclear Power Plant (NPP) control room. The focus is on two modules: diagnosis and explanation of events that happened in NPPs. We describe an Answer Set Programming (ASP) representation of an NPP, which consists of declarations of state variables, components, their connections, and rules encoding the plant behavior. We then show how the ASP program can be used to explain the series of events that occurred in the Three Mile Island, Unit 2 (TMI-2) NPP accident, the most severe accident in the USA nuclear power plant operating history. We also describe an explanation module aimed at addressing answers to questions such as "why an event occurs?" or "what should be done?" given the collected data.
C1 [HANNA, B. O. T. R. O. S. N.; TRIEU, L. Y. L. Y. T.; SON, T. R. A. N. C.] New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88003 USA.
   [DINH, N. A. M. T.] North Carolina State Univ, Dept Nucl Engn, Raleigh, NC USA.
C3 New Mexico State University; North Carolina State University
RP Hanna, BN (corresponding author), New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88003 USA.
EM bn@nmsu.edu; lytrieu@nmsu.edu; stran@nmsu.edu; ntdinh@ncsu.edu
OI Dinh, Nam/0000-0003-0879-9710; Tran, Son/0000-0003-3689-8433
FU US DoE's Advanced Research Project Agency-Energy (ARPAE) MEITNER Program
   [DE-AR0000976]; NSF [1812628, 1914635, 1757207]
FX This research is supported by the US DoE's Advanced Research Project
   Agency-Energy (ARPAE) MEITNER Program through award DE-AR0000976. The
   authors would like to thank Dr. Robert W. Youngblood III (Idaho National
   Laboratory) for his constructive comments on earlier versions of this
   paper and his continuous support throughout the development of an
   ASPbased system for NPP operators. The third author is also partially
   supported by the NSF-grant #1812628, #1914635, and #1757207.
CR [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], 2009, HUM PERF IMPR HDB
   Balduccini M, 2003, THEOR PRACT LOG PROG, V3, P425, DOI 10.1017/S1471068403001807
   Boroushaki M, 2003, ANN NUCL ENERGY, V30, P63, DOI 10.1016/S0306-4549(02)00047-6
   CHANG SH, 1995, NUCL TECHNOL, V112, P266, DOI 10.13182/NT95-A35179
   Clocksin WilliamF., 2012, PROGRAMMING PROLOG U
   Darling MC, 2018, INT J ARTIF INTELL T, V27, DOI 10.1142/S0218213018500033
   DERIVAN MICHAEL, 2014, D BESSE NUCL POWER P
   GELFOND M, 1990, LOGIC PROGRAMM, P579
   Hanna B., 2019, 18 INT TOPICAL M NUC, P394
   Lee HY, 2017, PROCEEDINGS 2017 INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND ASSURANCE (ICSSA), P111, DOI 10.1109/ICSSA.2017.31
   Lew Roger, 2018, Proceedings of the Human Factors and Ergonomics Society Annual Meeting, V62, P1605, DOI 10.1177/1541931218621363
   Liang Senlin., 2009, PROC 18 INT C WORLD, P601, DOI [10.1145/1526709.1526790, DOI 10.1145/1526709.1526790]
   Lind M, 2014, NUCL ENG TECHNOL, V46, P753, DOI 10.5516/NET.04.2014.721
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   NRC, 1979, NUREG0600
   NSAC, 1980, TECH REP
   Peng MJ, 2018, NUCL ENG TECHNOL, V50, P396, DOI 10.1016/j.net.2017.11.014
   Pontelli E, 2009, THEOR PRACT LOG PROG, V9, P1, DOI 10.1017/S1471068408003633
   Reifman J, 1999, NUCL SCI ENG, V131, P329, DOI 10.13182/NSE99-A2038
   Rempe JL, 2014, IEEE T NUCL SCI, V61, P1963, DOI 10.1109/TNS.2013.2293350
   U. S. NRC, 2018, BACKGR 3 MIL ISL ACC
NR 22
TC 3
Z9 3
U1 3
U2 26
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2020
VL 20
IS 6
SI SI
BP 926
EP 941
AR PII S1471068420000241
DI 10.1017/S1471068420000241
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR3IT
UT WOS:000571456800009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Frühwirth, T
AF Fruehwirth, Thom
TI Parallelism, concurrency and distribution in constraint handling rules:
   A survey
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE parallelism; concurrency; distribution; constraint handling rules;
   declarative programming; concurrent constraint programming; semantics;
   rewriting; concurrency models
ID CHR; PROGRAMS; MODEL
AB Constraint Handling Rules (CHR) is both an effective concurrent declarative programming language and a versatile computational logic formalism. In CHR, guarded reactive rules rewrite a multi-set of constraints. Concurrency is inherent, since rules can be applied to the constraints in parallel. In this comprehensive survey, we give an overview of the concurrent, parallel as well as distributed CHR semantics, standard and more exotic, that have been proposed over the years at various levels of refinement. These semantics range from the abstract to the concrete. They are related by formal soundness results. Their correctness is proven as a correspondence between parallel and sequential computations. On the more practical side, we present common concise example CHR programs that have been widely used in experiments and benchmarks. We review parallel and distributed CHR implementations in software as well as hardware. The experimental results obtained show a parallel speed-up for unmodified sequential CHR programs. The software implementations are available online for free download and we give the web links. Due to its high level of abstraction, the CHR formalism can also be used to implement and analyse models for concurrency. To this end, the Software Transaction Model, the Actor Model, Colored Petri Nets and the Join-Calculus have been faithfully encoded in CHR. Finally, we identify and discuss commonalities of the approaches surveyed and indicate what problems are left open for future research.
C1 [Fruehwirth, Thom] Ulm Univ, Inst Software Engn & Programming Languages, D-89069 Ulm, Germany.
C3 Ulm University
RP Frühwirth, T (corresponding author), Ulm Univ, Inst Software Engn & Programming Languages, D-89069 Ulm, Germany.
EM thom.fruehwirth@uni-ulm.de
CR Abdennadher S., 1999, Constraints, V4, P133, DOI 10.1023/A:1009842826135
   Abdennadher S, 1998, LECT NOTES COMPUT SC, V1520, P25
   Abdennadher S, 1999, LECT NOTES COMPUT SC, V1713, P43
   Abdennadher S., 2004, LNCS, V3018, P198
   Agha G., 1986, Actors: a model of concurrent computation in distributed systems
   Betz H., 2007, P 4 WORKSH CONSTR HA, P33
   Betz H., 2014, UNIFIED ANAL FDN CON
   Betz H, 2010, THEOR PRACT LOG PROG, V10, P597, DOI 10.1017/S147106841000030X
   CERVESATO I., 2016, CHOREOGRAPHIC COMPIL, P113
   Duck GJ, 2004, LECT NOTES COMPUT SC, V3132, P90, DOI 10.1007/978-3-540-27775-0_7
   FOURNET C, 2002, JOIN CALCULUS LANGUA, P268
   Frühwirth T, 2015, LECT NOTES COMPUT SC, V9202, P13, DOI 10.1007/978-3-319-21542-6_2
   Frühwirth T, 2005, LECT NOTES COMPUT SC, V3668, P113, DOI 10.1007/11562931_11
   Frühwirth T, 2005, LECT NOTES COMPUT SC, V3573, P133, DOI 10.1007/11506676_9
   FRUHWIRTH T., 2016, THE CHR WEB SITE
   FRUHWIRTH T., 2006, CHR 06, V452, P49
   Fruhwirth T., 2003, JOINT C DECL PROGR A, P386
   Fruhwirth T.W., 2011, Constraint Handling Rules: Compilation, Execution, and Analysis
   Fruhwirth T.W., 2009, Constraint Handling Rules
   Gabbrielli M., 2013, THEOR PRACT LOG PROG, P1
   GOLDBERG AV, 1988, J ACM, V35, P921, DOI 10.1145/48014.61051
   Guerraoui R, 2008, PPOPP'08: PROCEEDINGS OF THE 2008 ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF PARALLEL PROGRAMMING, P175, DOI 10.1145/1345206.1345233
   Holzbaur C, 2005, THEOR PRACT LOG PROG, V5, P503, DOI 10.1017/S1471068405002413
   Jensen K., COLOURED PETRI NETS, DOI DOI 10.1007/BFB0046842
   Lam E.S., 2009, TPLP, V11, P841
   LAM E. S., 2018, CONSTRAINT HANDLING, P121
   LAM E. S, 2007, P ACM SIGPLAN WORKSH
   LAM E. S. L., 2011, THESIS
   Lam ESL, 2015, LECT NOTES COMPUT SC, V9037, P51, DOI 10.1007/978-3-319-19282-6_4
   Lam EdmundS. L., 2013, Proceedings of the 15th Symposium on Principles and Practice of Declarative Programming, PPDP'13, P205
   MEISTER M, 2007, P ANN ERCIM WORKSH C, V123
   MEISTER M., 2007, P 12 INT WORKSH CONS, P160
   RAISER F, 2010, WLP 10
   Raiser F, 2009, 6 INT WORKSH CONSTR, P33
   SARNA-STAROSTA B., 2008, CONSTRAINT BASED ANA
   Sarna-Starosta B, 2007, LECT NOTES COMPUT SC, V4354, P170
   Sarna-Starosta B, 2007, INT J SOFTW ENG KNOW, V17, P207, DOI 10.1142/S0218194007003197
   Schrijvers T, 2008, LECT NOTES COMPUT SC, V5366, P516, DOI 10.1007/978-3-540-89982-2_44
   Shavit N, 1997, DISTRIB COMPUT, V10, P99, DOI 10.1007/s004460050028
   SNEYERS J., 2009, ACM T PROGR LANG SYS, V31, P3
   Sneyers J, 2010, THEOR PRACT LOG PROG, V10, P1, DOI 10.1017/S1471068409990123
   Sneyers J, 2008, LECT NOTES COMPUT SC, V5366, P759, DOI 10.1007/978-3-540-89982-2_72
   SULZMANN M, 2008, P 10 INT ACM SIGPLAN, P20
   SULZMANN M, 2007, P 4 WORKSH CONSTR HA, P139
   SULZMANN M, 2008, LOPSTR 08 PREPR
   Sulzmann M, 2008, LECT NOTES COMPUT SC, V5052, P315, DOI 10.1007/978-3-540-68265-3_20
   TARJAN RE, 1984, J ACM, V31, P245, DOI 10.1145/62.2160
   TRIOSSI A., 2011, THESIS
   TRIOSSI A., 2012, P 14 S PRINC PRACT D, P173
   Van Weert P, 2010, IEEE T KNOWL DATA EN, V22, P1521, DOI 10.1109/TKDE.2009.208
   ZAKI A., 2012, CHR 2012, P82
NR 51
TC 1
Z9 1
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2018
VL 18
IS 5-6
BP 759
EP 805
DI 10.1017/S1471068418000078
PG 47
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA GS5FG
UT WOS:000443682000003
OA Bronze
DA 2024-07-18
ER

PT J
AU De Angelis, E
   Fioravanti, F
   Pettorossi, A
   Proietti, M
AF De Angelis, Emanuele
   Fioravanti, Fabio
   Pettorossi, Alberto
   Proietti, Maurizio
TI Predicate Pairing for program verification
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE program verification; constrained Horn clauses; constraint logic
   programming; program transformation; relational properties of programs
ID ABSTRACT INTERPRETATION; IMPERATIVE PROGRAMS; PARTIAL DEDUCTION; LOGIC
   PROGRAMS; SPECIALIZATION; TRANSFORMATION; EQUIVALENCE; FOUNDATIONS;
   CHECKING
AB It is well-known that the verification of partial correctness properties of imperative programs can be reduced to the satisfiability problem for constrained Horn clauses (CHCs). However, state-of-the-art solvers for constrained Horn clauses (or CHC solvers) based on predicate abstraction are sometimes unable to verify satisfiability because they look for models that are definable in a given class A of constraints, called A-definable models. We introduce a transformation technique, called Predicate Pairing, which is able, in many interesting cases, to transform a set of clauses into an equisatisfiable set whose satisfiability can be proved by finding an A-definable model, and hence can be effectively verified by a state-of-the-art CHC solver. In particular, we prove that, under very general conditions on A, the unfold/fold transformation rules preserve the existence of an A-definable model, that is, if the original clauses have an A-definable model, then the transformed clauses have an A-definable model. The converse does not hold in general, and we provide suitable conditions under which the transformed clauses have an A-definable model if and only if the original ones have an A-definable model. Then, we present a strategy, called Predicate Pairing, which guides the application of the transformation rules with the objective of deriving a set of clauses whose satisfiability problem can be solved by looking for A-definable models. The Predicate Pairing (PP) strategy introduces a new predicate defined by the conjunction of two predicates occurring in the original set of clauses, together with a conjunction of constraints. We will show through some examples that an A-definable model may exist for the new predicate even if it does not exist for its defining atomic conjuncts. We will also present some case studies showing that Predicate Pairing plays a crucial role in the verification of relational properties of programs, that is, properties relating two programs (such as program equivalence) or two executions of the same program (such as non-interference). Finally, we perform an experimental evaluation of the proposed techniques to assess the effectiveness of Predicate Pairing in increasing the power of CHC solving.
C1 [De Angelis, Emanuele; Fioravanti, Fabio] G dAnnunzio Univ Chieti Pescara, DEC, Pescara, Italy.
   [Pettorossi, Alberto] Univ Roma Tor Vergata, DICII, Rome, Italy.
   [Proietti, Maurizio] CNR, IASI, Rome, Italy.
C3 G d'Annunzio University of Chieti-Pescara; University of Rome Tor
   Vergata; Consiglio Nazionale delle Ricerche (CNR)
RP De Angelis, E (corresponding author), G dAnnunzio Univ Chieti Pescara, DEC, Pescara, Italy.
EM emanuele.deangelis@unich.it; fabio.fioravanti@unich.it;
   pettorossi@info.uniroma2.it; maurizio.proietti@iasi.cnr.it
RI Proietti, Maurizio/AAW-7487-2020; Pettorossi, Alberto/D-8503-2016
FU National Group of Computing Science (GNCS-INDAM)
FX We warmly thank the anonymous referees for their very helpful comments
   and criticism. This work has been partially supported by the National
   Group of Computing Science (GNCS-INDAM). E. De Angelis, F. Fioravanti,
   and A. Pettorossi are research associates at CNR-IASI, Roma, Italy.
CR Albert E, 2007, LECT NOTES COMPUT SC, V4354, P124
   Barthe Gilles, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P200, DOI 10.1007/978-3-642-21437-0_17
   Benoy F, 1997, LECT NOTES COMPUT SC, V1207, P204
   Benton N, 2004, ACM SIGPLAN NOTICES, V39, P14, DOI 10.1145/982962.964003
   Bjorner N, 2015, LECT NOTES COMPUT SC, V9300, P24, DOI 10.1007/978-3-319-23534-9_2
   Bradley AR, 2006, LECT NOTES COMPUT SC, V3855, P427
   Chaki S, 2012, LECT NOTES COMPUT SC, V7148, P119, DOI 10.1007/978-3-642-27940-9_9
   Ciobâca S, 2014, LECT NOTES COMPUT SC, V8829, P75, DOI 10.1007/978-3-319-11737-9_6
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   De Angelis E, 2017, SCI COMPUT PROGRAM, V147, P78, DOI 10.1016/j.scico.2016.11.002
   De Angelis E, 2014, SCI COMPUT PROGRAM, V95, P149, DOI 10.1016/j.scico.2014.05.017
   De Angelis E., 2014, Lecture Notes in Computer Science, V8413, P568, DOI [DOI 10.1007/978-3-642-54862-8_47, 10.1007/978-3-642-54862-8_47]
   De Angelis E, 2016, LECT NOTES COMPUT SC, V9837, P147, DOI 10.1007/978-3-662-53413-7_8
   De Angelis E, 2015, THEOR PRACT LOG PROG, V15, P635, DOI 10.1017/S1471068415000289
   De Angelis E, 2015, FUND INFORM, V140, P329, DOI 10.3233/FI-2015-1257
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   De Schreye D, 1999, J LOGIC PROGRAM, V41, P231, DOI 10.1016/S0743-1066(99)00030-8
   DEBRAY S, 1994, J LOGIC PROGRAM, V18, P149, DOI 10.1016/0743-1066(94)90050-7
   Etalle S, 1996, THEOR COMPUT SCI, V166, P101, DOI 10.1016/0304-3975(95)00148-4
   Fedyukovich G., 2016, LECT NOTES COMPUTER, V7792
   Felsing D, 2014, P 29 ACM IEEE INT C, P349, DOI [10.1145/2642937.2642987, DOI 10.1145/2642937.2642987]
   Ganty P, 2013, LECT NOTES COMPUT SC, V7795, P245, DOI 10.1007/978-3-642-36742-7_18
   Godlin B, 2008, ACTA INFORM, V45, P403, DOI 10.1007/s00236-008-0075-2
   Grebenshchikov S, 2012, ACM SIGPLAN NOTICES, V47, P405, DOI 10.1145/2345156.2254112
   Gurfinkel A, 2015, LECT NOTES COMPUT SC, V9206, P343, DOI 10.1007/978-3-319-21690-4_20
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Hoder Krystof, 2011, INT C COMP AID VER, P457
   Hojjat Hossein, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P247, DOI 10.1007/978-3-642-32759-9_21
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   Jaffar J, 2009, LECT NOTES COMPUT SC, V5732, P454, DOI 10.1007/978-3-642-04244-7_37
   Kafle B, 2017, SCI COMPUT PROGRAM, V137, P125, DOI 10.1016/j.scico.2017.01.002
   Kafle B, 2017, COMPUT LANG SYST STR, V47, P2, DOI 10.1016/j.cl.2015.11.001
   Kafle B, 2016, LECT NOTES COMPUT SC, V9779, P261, DOI 10.1007/978-3-319-41528-4_14
   Lahiri ShuvenduK., 2013, ACM SIGSOFT S FDN SO, P345, DOI DOI 10.1145/2491411.2491452
   Leroy X, 2009, COMMUN ACM, V52, P107, DOI 10.1145/1538788.1538814
   Leuschel M, 2002, THEOR PRACT LOG PROG, V2, P461, DOI 10.1017/S147106840200145X
   Lloyd J. W., 2012, Foundations of Logic Programming
   Lopes NP, 2016, INT J SOFTW TOOLS TE, V18, P359, DOI 10.1007/s10009-015-0366-1
   McMillan, 2013, 20136 MSR
   Mendelson E., 2015, Introduction to Mathematical Logic, V6, DOI [10.1201/b18519, DOI 10.1201/B18519]
   Méndez-Lojo M, 2008, LECT NOTES COMPUT SC, V4915, P154, DOI 10.1007/978-3-540-78769-3_11
   Mine A., 2006, Higher-Order and Symbolic Computation, V19, P31, DOI 10.1007/s10990-006-8609-1
   Peralta JC, 1998, LECT NOTES COMPUT SC, V1503, P246
   PETTOROSSI A, 1994, J LOGIC PROGRAM, V20, P261, DOI 10.1016/0743-1066(94)90028-0
   Podelski A, 2007, LECT NOTES COMPUT SC, V4354, P245
   Rummer Philipp, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P347, DOI 10.1007/978-3-642-39799-8_24
   Strichman O, 2016, LECT NOTES COMPUT SC, V9995, P645, DOI 10.1007/978-3-319-48989-6_39
   Tamaki H., 1984, P 2 INT LOG PROGR C, P127
   Verdoolaege S, 2012, ACM T PROGR LANG SYS, V34, DOI 10.1145/2362389.2362390
   Zaks A, 2008, LECT NOTES COMPUT SC, V5014, P35, DOI 10.1007/978-3-540-68237-0_5
NR 50
TC 8
Z9 8
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2018
VL 18
IS 2
SI SI
BP 126
EP 166
DI 10.1017/S1471068417000497
PG 41
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA GF5VA
UT WOS:000432034700002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rondogiannis, P
   Symeonidou, I
AF Rondogiannis, Panos
   Symeonidou, Ioanna
TI The intricacies of three-valued extensional semantics for higher-order
   logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming colocated with the
   23rd International Conference on Principles and Practice of Constraint
   Programming / 20th International Conference on Theory and Applications
   of Satisfiability Testing
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google
DE Extensional higher-order logic programming; Negation in logic
   programming
ID NEGATION
AB M. Bezem defined an extensional semantics for positive higher-order logic programs. Recently, it was demonstrated by Rondogiannis and Symeonidou that Bezem's technique can be extended to higher-order logic programs with negation, retaining its extensional properties, provided that it is interpreted under a logic with an infinite number of truth values. Rondogiannis and Symeonidou also demonstrated that Bezem's technique, when extended under the stable model semantics, does not in general lead to extensional stable models. In this paper, we consider the problem of extending Bezem's technique under the well-founded semantics. We demonstrate that the well-founded extension fails to retain extensionality in the general case. On the positive side, we demonstrate that for stratified higher-order logic programs, extensionality is indeed achieved. We analyze the reasons of the failure of extensionality in the general case, arguing that a three-valued setting cannot distinguish between certain predicates that appear to have a different behaviour inside a program context, but which happen to be identical as three-valued relations.
C1 [Rondogiannis, Panos; Symeonidou, Ioanna] Univ Athens, Athens, Greece.
C3 National & Kapodistrian University of Athens
RP Rondogiannis, P (corresponding author), Univ Athens, Athens, Greece.
EM prondo@di.uoa.gr; i.symeonidou@di.uoa.gr
CR Apt K.R., 1988, THEORY DECLARATIVE K, P89
   Bezem M., 2001, Computer Science Logic. 15th International Workshop, CSL 2001 10th Annual Conference of the EACSL. Proceedings (Lecture Notes in Computer Science Vol.2142), P203
   Bezem M, 1999, LOGIC PROGRAMM, P395
   Carayol A, 2016, FIFTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P533
   Charalambidis A., 2014, THEOR PRACT LOG PROG, V14, P4
   Charalambidis A, 2017, THEOR COMPUT SCI, V668, P27, DOI 10.1016/j.tcs.2017.01.005
   Charalambidis A, 2014, THEOR PRACT LOG PROG, V14, P725, DOI 10.1017/S1471068414000313
   Charalambidis A, 2013, ACM T COMPUT LOG, V14, DOI 10.1145/2499937.2499942
   CHEN WD, 1993, J LOGIC PROGRAM, V15, P187, DOI 10.1016/0743-1066(93)90039-J
   Chomicki J, 2003, ACM T DATABASE SYST, V28, P427, DOI 10.1145/958942.958946
   Denecker Marc, 2012, Correct Reasoning, P178
   Ésik Z, 2015, LECT NOTES COMPUT SC, V9160, P174, DOI 10.1007/978-3-662-47709-0_13
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Kountouriotis V, 2005, P 12 INT C LOG PROGR, P1
   Lloyd J. W., 2012, Foundations of Logic Programming
   Miller D., 2012, PROGRAMMING HIGHER O
   Przymusinska H., 1990, Formal Techniques in Artificial Intelligence, a Sourcebook, P321
   Przymusinski T. C., 1988, F DEDUCTIVE DATABASE, P193
   Rondogiannis P., 2005, ACM Transactions on Computational Logic, V6, P441, DOI 10.1145/1055686.1055694
   Rondogiannis P., 2017, ABS170108622 CORR
   Rondogiannis P, 2016, LECT NOTES COMPUT SC, V10021, P447, DOI 10.1007/978-3-319-48758-8_29
   sik Z., 1993, ITERATION THEORIES E
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   VANGELDER A, 1989, J LOGIC PROGRAM, V6, P109, DOI 10.1016/0743-1066(89)90032-0
   WADGE WW, 1991, LOGIC PROGRAMM, P289
NR 25
TC 3
Z9 3
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 974
EP 991
DI 10.1017/S1471068417000357
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800018
DA 2024-07-18
ER

PT J
AU Yalciner, IF
   Nouman, A
   Patoglu, V
   Erdem, E
AF Yalciner, Ibrahim Faruk
   Nouman, Ahmed
   Patoglu, Volkan
   Erdem, Esra
TI Hybrid conditional planning using answer set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming / 23rd International
   Conference on Principles and Practice of Constraint Programming (CP) /
   20th International Conference on Theory and Applications of
   Satisfiability Testing (SAT)
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google, IJCAI, Artificial Intelligence Journal Div, Cosling, CompSustNet, European Assoc Artificial Intelligence, IBM, Springer
DE Conditional planning; hybrid planning; answer set programming; cognitive
   robotics
ID SENSING ACTIONS; INFORMATION; TASK
AB We introduce a parallel offline algorithm for computing hybrid conditional plans, called HCP-ASP, oriented towards robotics applications. HCP-ASP relies on modeling actuation actions and sensing actions in an expressive nonmonotonic language of answer set programming (ASP), and computation of the branches of a conditional plan in parallel using an ASP solver. In particular, thanks to external atoms, continuous feasibility checks (like collision checks) are embedded into formal representations of actuation actions and sensing actions in ASP; and thus each branch of a hybrid conditional plan describes a feasible execution of actions to reach their goals. Utilizing nonmonotonic constructs and nondeterministic choices, partial knowledge about states and nondeterministic effects of sensing actions can be explicitly formalized in ASP; and thus each branch of a conditional plan can be computed by an ASP solver without necessitating a conformant planner and an ordering of sensing actions in advance. We apply our method in a service robotics domain and report experimental evaluations. Furthermore, we present performance comparisons with other compilation based conditional planners on standardized benchmark domains.
C1 [Yalciner, Ibrahim Faruk; Nouman, Ahmed; Patoglu, Volkan; Erdem, Esra] Sabanci Univ, Fac Engn & Nat Sci, Istanbul, Turkey.
C3 Sabanci University
RP Yalciner, IF (corresponding author), Sabanci Univ, Fac Engn & Nat Sci, Istanbul, Turkey.
EM fyalciner@sabanciuniv.edu; ahmednouman@sabanciuniv.edu;
   vpatoglu@sabanciuniv.edu; esraerdem@sabanciuniv.edu
RI Nouman, Ahmed/HZJ-4933-2023; Patoglu, Volkan/AAC-5081-2019; Erdem,
   Esra/I-4587-2012
OI Nouman, Ahmed/0000-0002-8853-6541; Patoglu, Volkan/0000-0001-6644-3937;
   Erdem, Esra/0000-0001-8384-7810
FU Science Academy (BAGEP)
FX This work is partially supported by the Science Academy (BAGEP). We
   thank T. C. Son and H. Geffner for useful discussions about HCP-ASP, and
   A. Albore, T. C. Son, and C. Muise for their helps with CLG, DNFct, and
   PO-PRP, respectively.
CR Albore A, 2007, LECT NOTES COMPUT SC, V4788, P1
   Albore A, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P1623
   Baral C, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P948
   Bonet B, 2011, P INT JOINT C ART IN, P1936, DOI DOI 10.5591/978-1-57735-516-8/IJCAI11-324
   Brafman RI, 2012, J ARTIF INTELL RES, V45, P565, DOI 10.1613/jair.3711
   Brewka G, 2016, AI MAG, V37, P5, DOI 10.1609/aimag.v37i3.2669
   Bryce D, 2006, J ARTIF INTELL RES, V26, P35, DOI 10.1613/jair.1869
   Caldiran O, 2009, LECT NOTES COMPUT SC, V5753, P342, DOI 10.1007/978-3-642-04238-6_29
   Dantam N. T., 2016, PROC OF RSS
   Eiter T, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P90
   Erdem E, 2011, IEEE INT CONF ROBOT, DOI 10.1109/ICRA.2011.5980160
   Erdem E, 2016, AI MAG, V37, P53, DOI 10.1609/aimag.v37i3.2678
   Erdem E, 2016, AI COMMUN, V29, P319, DOI 10.3233/AIC-150697
   EROL K, 1995, ARTIF INTELL, V76, P75, DOI 10.1016/0004-3702(94)00080-K
   Gaschler A., 2013, PROC OF IROS
   Gebser M., 2014, TECHNICAL COMMUNICAT, V14
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Giunchiglia E, 2004, ARTIF INTELL, V153, P49, DOI [10.1016/j.artint.2002.12.001, 10.1016/j.artint.2003.12.001]
   Goldman R. P., 1996, Proceedings. Third International Conference on Artificial Intelligence Planning Systems, P110
   Gravot F, 2005, SPR TRA ADV ROBOT, V15, P100
   Hauser K., 2009, BTAMP AT ICAPS
   Hertle A, 2012, FRONT ARTIF INTEL AP, V242, P402, DOI 10.3233/978-1-61499-098-7-402
   Hoffmann J., 2005, P 15 INT C AUT PLANN, P71, DOI DOI 10.5555/3037062.3037072
   Kaelbling LP, 2013, INT J ROBOT RES, V32, P1194, DOI 10.1177/0278364913484072
   Komarnitsky R, 2016, AAAI CONF ARTIF INTE, P3159
   Kuffner J. J.  Jr., 2000, Proceedings 2000 ICRA. Millennium Conference. IEEE International Conference on Robotics and Automation. Symposia Proceedings (Cat. No.00CH37065), P995, DOI 10.1109/ROBOT.2000.844730
   Lagriffoul F, 2014, INT J ROBOT RES, V33, P1726, DOI 10.1177/0278364914545811
   Maliah S., 2014, P ICAPS
   Muise C, 2014, AAAI CONF ARTIF INTE, P2322
   Nouman A, 2016, P ISER
   Peot M. A, 1992, P 1 INT C AI PLANN S, P189
   Petrick RP, 2002, AIPS, V2, P212
   Plaku Erion, 2012, Advances in Autonomous Robotics. Joint Proceedings of the 13th Annual TAROS Conference and the 15th Annual FIRA RoboWorld Congress, P331, DOI 10.1007/978-3-642-32527-4_30
   Pryer L, 1996, J ARTIF INTELL RES, V4, P287
   Son TC, 2001, ARTIF INTELL, V125, P19, DOI 10.1016/S0004-3702(00)00080-1
   Srivastava S., 2014, P ICRA
   To S. T., 2011, P ICAPS
   Tu PH, 2007, THEOR PRACT LOG PROG, V7, P377, DOI 10.1017/S1471068406002948
   WARREN DHD, 1976, P SUMM C ART INT SIM, P344
   Weld DS, 1998, FIFTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-98) AND TENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICAL INTELLIGENCE (IAAI-98) - PROCEEDINGS, P897
   Weyhrauch R. W., 1978, TECHNICAL REPORT
NR 41
TC 12
Z9 13
U1 1
U2 6
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 1027
EP 1047
DI 10.1017/S1471068417000321
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800021
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Dodaro, C
   Gasteiger, P
   Leone, N
   Musitsch, B
   Ricca, F
   Shchekotykhin, K
AF Dodaro, Carmine
   Gasteiger, Philip
   Leone, Nicola
   Musitsch, Benjamin
   Ricca, Francesco
   Shchekotykhin, Kostyantyn
TI Combining Answer Set Programming and domain heuristics for solving hard
   industrial problems (Application Paper)
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
DE Answer Set Programming; Domain Heuristics; Industrial Applications
ID ASP
AB Answer Set Programming (ASP) is a popular logic programming paradigm that has been applied for solving a variety of complex problems. Among the most challenging real-world applications of ASP are two industrial problems defined by Siemens: the Partner Units Problem (PUP) and the Combined Configuration Problem (CCP). The hardest instances of PUP and CCP are out of reach for state-of-the-art ASP solvers. Experiments show that the performance of ASP solvers could be significantly improved by embedding domain-specific heuristics, but a proper effective integration of such criteria in off-the-shelf ASP implementations is not obvious. In this paper the combination of ASP and domain-specific heuristics is studied with the goal of effectively solving real-world problem instances of PUP and CCP. As a byproduct of this activity, the ASP solver WASP was extended with an interface that eases embedding new external heuristics in the solver. The evaluation shows that our domain-heuristic-driven ASP solver finds solutions for all the real-world instances of PUP and CCP ever provided by Siemens.
C1 [Dodaro, Carmine; Leone, Nicola; Ricca, Francesco] Univ Calabria, Dept Math & Comp Sci, I-87030 Commenda Di Rende, Italy.
   [Gasteiger, Philip; Musitsch, Benjamin; Shchekotykhin, Kostyantyn] Alpen Adria Univ Klagenfurt, Klagenfurt, Austria.
C3 University of Calabria; University of Klagenfurt
RP Dodaro, C (corresponding author), Univ Calabria, Dept Math & Comp Sci, I-87030 Commenda Di Rende, Italy.
EM dodaro@mat.unical.it; philip.gasteiger@gmail.com; leone@mat.unical.it;
   benjamin.musitsch@gmail.com; ricca@mat.unical.it;
   kostyantyn.shchekotykhin@gmail.com
RI Schekotihin, Konstantin/IZN-7815-2023; Leone, Nicola/B-1890-2012;
   Dodaro, Carmine/AAE-5732-2020
OI Schekotihin, Konstantin/0000-0002-0286-0958; Dodaro,
   Carmine/0000-0002-5617-5286; Leone, Nicola/0000-0002-9742-1252
CR Albrech A., 1979, PROC JOINT SHAREGUID, P83
   Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   Aschinger M., 2011, IJCAI, P497
   Aschinger M, 2011, LECT NOTES COMPUT SC, V6697, P4, DOI 10.1007/978-3-642-21311-3_4
   Balduccini M, 2011, AI COMMUN, V24, P147, DOI 10.3233/AIC-2011-0493
   Balduccini Marcello., 2001, LPNMR, P439
   Baral C., 2001, LOGIC PROGRAMMING NO, P186
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   Campeotto F, 2015, J EXP THEOR ARTIF IN, V27, P503, DOI 10.1080/0952813X.2014.993503
   Caniupán M, 2010, DATA KNOWL ENG, V69, P545, DOI 10.1016/j.datak.2010.01.005
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Dodaro C, 2015, LECT NOTES COMPUT SC, V9209, P77, DOI 10.1007/978-3-319-22002-4_7
   Drescher C, 2012, PROC INT C TOOLS ART, P170, DOI 10.1109/ICTAI.2012.31
   Eén N, 2004, LECT NOTES COMPUT SC, V2919, P502, DOI 10.1007/978-3-540-24605-3_37
   Erdem E, 2015, THEOR PRACT LOG PROG, V15, P35, DOI 10.1017/S1471068413000598
   Erdem E, 2013, THEOR PRACT LOG PROG, V13, P831, DOI 10.1017/S1471068413000525
   Falkner Andreas, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P332, DOI 10.1007/978-3-319-23264-5_28
   Falkner A, 2011, AI EDAM, V25, P115, DOI 10.1017/S0890060410000570
   Fionda V, 2013, ARTIF INTELL, V196, P1, DOI 10.1016/j.artint.2012.12.002
   FRIEDRICH G, 2015, COMMUNICATION
   Gaggl SA, 2015, THEOR PRACT LOG PROG, V15, P434, DOI 10.1017/S1471068415000149
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P368, DOI 10.1007/978-3-319-23264-5_31
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P384, DOI 10.1007/978-3-319-23264-5_32
   Gebser M., 2013, P 27 AAAI C ART INT
   GEBSER M., 2015, 6 ANSWER SET PROGRAM
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Grasso Giovanni, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P432, DOI 10.1007/978-3-642-20832-4_27
   Hoos H, 2014, THEOR PRACT LOG PROG, V14, P569, DOI 10.1017/S1471068414000210
   Koponen L, 2015, THEOR PRACT LOG PROG, V15, P604, DOI 10.1017/S1471068415000265
   Manna M, 2015, THEOR PRACT LOG PROG, V15, P696, DOI 10.1017/S1471068415000320
   Maratea M, 2014, THEOR PRACT LOG PROG, V14, P841, DOI 10.1017/S1471068413000094
   RYABOKON A., 2015, THESIS
   Teppan E. C., 2012, P 24 C INN APPL ART
NR 37
TC 30
Z9 31
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 653
EP 669
DI 10.1017/S1471068416000284
PN 5-6
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lopez-Garcia, P
   Klemen, M
   Liqat, U
   Hermenegildo, MV
AF Lopez-Garcia, P.
   Klemen, M.
   Liqat, U.
   Hermenegildo, M. V.
TI A general framework for static profiling of parametric resource usage
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
DE Static Profiling; Static Analysis; Resource Usage Analysis; Complexity
   Analysis
ID CIAO
AB For some applications, standard resource analyses do not provide the information required. Such analyses estimate the total resource usage of a program (without executing it) as functions on input data sizes. However, some applications require knowing how such total resource usage is distributed over selected parts of a program. We propose a novel, general, and flexible framework for setting up cost equations/relations which can be instantiated for performing a wide range of resource usage analyses, including both static profiling and the inference of the standard notion of cost. We extend and generalize standard resource analysis techniques, so that the relations generated include additional Boolean control variables for switching on or off different terms in the relations, as required by the desired resource usage profile. We also instantiate our framework to perform static profiling of accumulated cost (also parameterized by input data sizes). Such information is much more useful to the software developer than the standard notion of cost: it identifies the parts of the program that have the greatest impact on the total program cost, and which therefore should be optimized first. We also report on an implementation of our framework within the CiaoPP system, and its instantiation for accumulated cost, and provide some experimental results. In addition to generality, our new method brings important advantages over our previous approach based on a program transformation, including support for non-deterministic programs, better and easier integration in the compiler, and higher efficiency.
C1 [Lopez-Garcia, P.; Klemen, M.; Liqat, U.; Hermenegildo, M. V.] IMDEA Software Inst, Madrid, Spain.
   [Lopez-Garcia, P.] CSIC, Spanish Council Sci Res, Madrid, Spain.
   [Hermenegildo, M. V.] Tech Univ Madrid, Madrid, Spain.
C3 IMDEA Software Institute; Consejo Superior de Investigaciones
   Cientificas (CSIC); Universidad Politecnica de Madrid
RP Lopez-Garcia, P (corresponding author), IMDEA Software Inst, Madrid, Spain.; Lopez-Garcia, P (corresponding author), CSIC, Spanish Council Sci Res, Madrid, Spain.
EM pedro.lopez@imdea.org; maximiliano.klemen@imdea.org;
   umer.liqat@imdea.org; manuel.hermenegildo@imdea.org
RI Lopez-Garcia, Pedro/AAH-4048-2021; Lopez-Garcia, Pedro/KIA-1704-2024
OI Lopez-Garcia, Pedro/0000-0002-1092-2071; Liqat, Umer/0000-0001-9104-8410
CR Albert E, 2011, LECT NOTES COMPUT SC, V6538, P38, DOI 10.1007/978-3-642-18275-4_5
   Albert E, 2011, J AUTOM REASONING, V46, P161, DOI 10.1007/s10817-010-9174-1
   Debray S, 1997, LOGIC PROGRAMM, P291
   DEBRAY SK, 1990, SIGPLAN NOTICES, V25, P174, DOI 10.1145/93548.93564
   DEBRAY SK, 1993, ACM T PROGR LANG SYS, V15, P826, DOI 10.1145/161468.161472
   Giesl J., 2012, PPDP 2012, P1, DOI [DOI 10.1145/2370776.2370778, 10.1145/2370776.2370778]
   Grobauer B, 2001, ACM SIGPLAN NOTICES, V36, P253, DOI 10.1145/507669.507666
   Gulwani S, 2009, ACM SIGPLAN NOTICES, V44, P127, DOI 10.1145/1594834.1480898
   Haemmerle R., 2016, Functional and Logic Programming. 13th International Symposium, FLOPS 2016. Proceedings: LNCS 9613, P163, DOI 10.1007/978-3-319-29604-3_11
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Hermenegildo MV, 2005, SCI COMPUT PROGRAM, V58, P115, DOI 10.1016/j.scico.2005.02.006
   Hoffmann J, 2012, ACM T PROGR LANG SYS, V34, DOI 10.1145/2362389.2362393
   Igarashi A, 2002, ACM SIGPLAN NOTICES, V37, P331, DOI 10.1145/565816.503303
   Liqat U., 2016, LNCS IN PRESS
   Liqat U, 2014, LECT NOTES COMPUT SC, V8901, P72, DOI 10.1007/978-3-319-14125-1_5
   Méndez-Lojo M, 2008, LECT NOTES COMPUT SC, V4915, P154, DOI 10.1007/978-3-540-78769-3_11
   Mera E, 2011, LECT NOTES COMPUT SC, V6539, P38, DOI 10.1007/978-3-642-18378-2_6
   Morgan R. G., 1998, Journal of Functional Programming, V8, P201, DOI 10.1017/S0956796898003013
   MUTHUKUMAR K, 1992, J LOGIC PROGRAM, V13, P315, DOI 10.1016/0743-1066(92)90035-2
   Navas J., 2008, 6 NASA LANGLEY FORMA, P29
   Navas J, 2007, LECT NOTES COMPUT SC, V4670, P348, DOI 10.1007/978-3-540-74610-2_24
   Nielson F, 2002, LECT NOTES COMPUT SC, V2305, P243
   Puebla, 1996, LNCS, V1145, P270
   Rosendahl M., 1989, FPCA 89, P144, DOI DOI 10.1145/99370.99381
   Sansom P. M., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P355, DOI 10.1145/199448.199531
   Serrano A, 2014, THEOR PRACT LOG PROG, V14, P739, DOI 10.1017/S147106841400057X
   Vasconcelos PB, 2004, LECT NOTES COMPUT SC, V3145, P86
   WEGBREIT B, 1975, COMMUN ACM, V18, P528, DOI 10.1145/361002.361016
NR 28
TC 6
Z9 6
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 849
EP 865
DI 10.1017/S1471068416000442
PN 5-6
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800022
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Schimpf, J
   Shen, K
AF Schimpf, Joachim
   Shen, Kish
TI ECL<SUP>i</SUP>PS<SUP>e</SUP> - From LP to CLP
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Prolog; logic programming system; constraint; solver; modelling
AB (ECLPSe)-P-i is a Prolog-based programming system, aimed at the development and deployment of constraint programming applications. It is also used for teaching most aspects of combinatorial problem solving, for example, problem modelling, constraint programming, mathematical programming and search techniques. It uses an extended Prolog as its high-level modelling and control language, complemented by several constraint solver libraries, interfaces to third-party solvers, an integrated development environment and interfaces for embedding into host environments. This paper discusses language extensions, implementation aspects, components, and tools that we consider relevant on the way from Logic Programming to Constraint Logic Programming.
C1 [Schimpf, Joachim] Monash Univ, Melbourne, Vic, Australia.
   [Schimpf, Joachim] Coninfer Ltd, London, England.
C3 Monash University
RP Schimpf, J (corresponding author), Monash Univ, Melbourne, Vic, Australia.
EM jschimpf@coninfer.com; kisshen@cisco.com
CR AGGOUN A, 1990, SPLT 90 8 SEM PROGR, P487
   [Anonymous], 1998, PROGRAMMING CONSTRAI
   [Anonymous], 031 IC PARC
   APPLEBY K., 1986, R86009B SWED I COMP
   Apt K.R., 2007, CONSTRAINT LOGIC PRO
   BARKLUND J, 1993, LECT NOTES ARTIF INT, V698, P28
   BELDICEANU N., 2005, T200506 SWED I COMP
   BOCCA J., 1991, P 2 INT S DAT SYST A, V2
   Byrd Lawrence., 1980, P 1980 LOGIC PROGRAM, P127
   Cabeza D, 2000, LECT NOTES ARTIF INT, V1861, P131
   COLMERAUER A., 1982, 363 ERA CNRS FS LUM
   Dawson S, 1996, ACM T PROGR LANG SYS, V18, P528, DOI 10.1145/232706.232722
   DINCBAS M., 1988, INT C 5 GEN COMP SYS
   DOROCHEVSKY M, 1992, LECT NOTES ARTIF INT, V624, P469
   El Sakkout H., 2000, Constraints, V5, P359, DOI 10.1023/A:1009856210543
   Free Software Foundation, 2009, GNU MULT PREC AR LIB
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Gervet C., 2001, Constraint Programming and Large Scale Discrete Optimization. DIMACS Workshop, P151
   Gervet C., 1997, Constraints, V1, P191, DOI 10.1007/BF00137870
   Haemmerlé R, 2006, LECT NOTES COMPUT SC, V4079, P41, DOI 10.1007/11799573_6
   Henderson F., 1996, Australian Computer Science Communications, V18, P337
   Hermenegildo M, 2000, LECT NOTES ARTIF INT, V1861, P1345
   HOLZBAUR, 1995, TR9509 AUSTR RES I A
   HOLZBAUR C, 1992, LECT NOTES COMPUT SC, V631, P260, DOI 10.1007/3-540-55844-6_141
   ISO/IEC, 2000, 132112 ISO IEC
   LEPROVOST T, 1993, J LOGIC PROGRAM, V16, P319, DOI 10.1016/0743-1066(93)90047-K
   LEPROVOST T, 1992, FIFTH GENERATION COMPUTER SYSTEMS 1992, VOLS 1 AND 2, P1004
   Lloyd J. W., 2000, LNCS
   Lougee-Heimer R, 2003, IBM J RES DEV, V47, P57, DOI 10.1147/rd.471.0057
   MACKWORTH AK, 1977, ARTIF INTELL, V8, P99, DOI 10.1016/0004-3702(77)90007-8
   MEIER M., 1990, P N AM C LOG PROGR 1
   MEIER M., 1989, P WORLD COMP C, P1127
   NAISH L, 1986, LECT NOTES COMPUTER, V238
   Nethercote N, 2007, LECT NOTES COMPUT SC, V4741, P529
   NOYE J., 1994, ILPS WORKSH IMPL TEC
   Schimpf J, 2002, LECT NOTES COMPUT SC, V2401, P224, DOI 10.1007/3-540-45619-8_16
   SCHIMPF J, 1990, P 1990 NACLP IMPL WO, P16
   SCHULTE C, 2009, MODELING GECODE
   Shen K, 2005, LECT NOTES COMPUT SC, V3709, P622, DOI 10.1007/11564751_46
   Shen K., 2002, Practical Aspects of Declarative Languages. 4th International Symposium, PADL 2002. Proceedings (Lecture Notes in Computer Science Vol.2257), P262
   SIMONIS H., 2010, ECLIPSE ELEARNING CO
   SIMONIS H., 2003, 032 IC PARC
   Somogyi Z., 1995, Australian Computer Science Communications, V17, P499
   Van Hentenryck P., 2005, CONSTRAINT BASED LOC
   Wallace M., 1997, ICL Systems Journal, V12, P159
   Warren D.H.D., 1983, 309 SRI
NR 46
TC 44
Z9 45
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2012
VL 12
BP 127
EP 156
DI 10.1017/S1471068411000469
PN 1-2
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 886XS
UT WOS:000299888500006
DA 2024-07-18
ER

PT J
AU Gebser, M
   Lee, J
   Lierler, Y
AF Gebser, Martin
   Lee, Joohyung
   Lierler, Yuliya
TI On elementary loops of logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE stable model semantics; loop formulas; unfounded sets
ID STABLE MODELS; SETS
AB Using the notion of an elementary loop, Gebser and Schaub (2005. Proceedings of the Eighth International Conference on Logic Programming and Nonmonotonic Reasoning (LPNMR'05), 53-65) refined the theorem on loop formulas attributable to Lin and Zhao (2004) by considering loop formulas of elementary loops only. In this paper, we reformulate the definition of an elementary loop, extend it to disjunctive programs, and study several properties of elementary loops, including how maximal elementary loops are related to minimal unfounded sets. The results provide useful insights into the stable model semantics in terms of elementary loops. For a nondisjunctive program, using a graph-theoretic characterization of an elementary loop, we show that the problem of recognizing an elementary loop is tractable. On the other hand, we also show that the corresponding problem is coNP-complete for a disjunctive program. Based on the notion of an elementary loop, we present the class of Head-Elementary-loop-Free (HEF) programs, which strictly generalizes the class of Head-Cycle-Free (HCF) programs attributable to Ben-Eliyahu and Dechter (1994. Annals of Mathematics and Artificial Intelligence 12, 53-87). Like an Ha: program, an HEF program can be turned into an equivalent nondisjunctive program in polynomial time by shifting head atoms into the body.
C1 [Gebser, Martin] Univ Potsdam, Inst Informat, Potsdam, Germany.
   [Lee, Joohyung] Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ USA.
   [Lierler, Yuliya] Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
C3 University of Potsdam; Arizona State University; Arizona State
   University-Tempe; University of Kentucky
RP Gebser, M (corresponding author), Univ Potsdam, Inst Informat, Potsdam, Germany.
EM gebser@cs.uni-potsdam.de; joolee@asu.edu; yuliya@cs.uky.edu
RI Gebser, Martin/B-7169-2018
FU German Research Foundation [SCHA 550/8-1]; National Science Foundation
   [IIS-0916116, IIS-0712113]; Office of the Director of National
   Intelligence (ODNI); Intelligence Advanced Research Projects Activity
   (IARPA), through US army; Computing Innovation Fellowship
FX We are grateful to Selim Erdogan, Tomi Janhunen, Dan Lessin, Vladimir
   Lifschitz, Torsten Schaub, Jicheng Zhao, and the anonymous referees of
   Gebser et al. (2006, 2007) and this paper for their useful comments.
   Martin Gebser was partially supported by the German Research Foundation
   under Grant SCHA 550/8-1. Joohyung Lee was partially supported by the
   National Science Foundation under Grant IIS-0916116 and by the Office of
   the Director of National Intelligence (ODNI), Intelligence Advanced
   Research Projects Activity (IARPA), through US army. Yuliya Lierler was
   partially supported by the National Science Foundation under Grant
   IIS-0712113 and by a 2010 Computing Innovation Fellowship.
CR [Anonymous], 2008, KR
   Apt K.R., 1988, THEORY DECLARATIVE K, P89
   BARAL C, 1994, J LOGIC PROGRAM, V20, P73, DOI 10.1016/0743-1066(94)90025-6
   Ben-Eliyahu R., 1994, Annals of Mathematics and Artificial Intelligence, V12, P53, DOI 10.1007/BF01530761
   Chen Y., 2006, P 10 INT C PRINC KNO, P298
   Clark K. L., 1978, Logic and data bases, P293
   Eiter T, 2003, LECT NOTES COMPUT SC, V2916, P224, DOI 10.1007/978-3-540-24599-5_16
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Erdem E, 2003, THEOR PRACT LOG PROG, V3, P499, DOI 10.1017/S1471068403001765
   Fages F., 1994, Methods of Logic in Computer Science, V1, P51
   Fassetti F, 2010, THEOR PRACT LOG PROG, V10, P113, DOI 10.1017/S1471068409990196
   Ferraris P, 2011, ARTIF INTELL, V175, P236, DOI 10.1016/j.artint.2010.04.011
   Ferraris P, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P372
   Gebser M, 2005, LECT NOTES ARTIF INT, V3662, P53, DOI 10.1007/11546207_5
   GEBSER M., 2008, P 5 INT S FDN INF KN, P24
   Gebser M., 2006, P 21 NAT C ART INT A
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P149, DOI 10.1007/978-3-540-72200-7_14
   GELFOND M, 1991, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P230
   Giunchiglia E, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P61
   Inoue K, 1998, J LOGIC PROGRAM, V35, P39, DOI 10.1016/S0743-1066(97)10001-2
   Janhunen T., 2006, J APPL NONCLASSICAL, V1-2, P35, DOI DOI 10.3166/JANCL.16.35-86
   Janhunen T, 2006, ACM T COMPUT LOG, V7, P1, DOI 10.1145/1119439.1119440
   Janhunen T, 2009, J ARTIF INTELL RES, V35, P813, DOI 10.1613/jair.2810
   Koch C, 2003, ARTIF INTELL, V151, P177, DOI 10.1016/S0004-3702(03)00078-X
   Lee J, 2006, ARTIF INTELL, V170, P160, DOI 10.1016/j.artint.2005.09.003
   Lee J, 2003, LECT NOTES COMPUT SC, V2916, P451, DOI 10.1007/978-3-540-24599-5_31
   Lee J, 2004, LECT NOTES ARTIF INT, V2923, P141
   Lee J., 2008, Proceedings of the International Conference on Knowledge Representation and Reasoning (KR), P444
   Lee J, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P503
   Lee J, 2009, LECT NOTES COMPUT SC, V5753, P182, DOI 10.1007/978-3-642-04238-6_17
   Leone N, 1997, INFORM COMPUT, V135, P69, DOI 10.1006/inco.1997.2630
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lierler Y, 2005, LECT NOTES ARTIF INT, V3662, P447, DOI 10.1007/11546207_44
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V, 2006, ACM T COMPUT LOG, V7, P261, DOI 10.1145/1131313.1131316
   Lin F., 2003, IJCAI 03, P853
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Liu LG, 2006, J ARTIF INTELL RES, V27, P299, DOI 10.1613/jair.2009
   SACCA D, 1990, PROCEEDINGS OF THE NINTH ACM SIGACT-SIGMOD-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P205, DOI 10.1145/298514.298572
   You J.-H., 2003, P 18 INT JOINT C ART, P859
   You J.-H., 2008, Proceedings of the AAAI Conference on Artificial Intelligence (AAAI), P584
NR 41
TC 6
Z9 6
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2011
VL 11
BP 953
EP 988
DI 10.1017/S1471068411000019
PN 6
PG 36
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 853RB
UT WOS:000297442300004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kriener, J
   King, A
AF Kriener, Jael
   King, Andy
TI RedAlert: Determinacy inference for Prolog
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE abstract interpretation; backwards analysis; Boolean formulae;
   constraints; cut; determinacy inference; Prolog
ID LOGIC PROGRAMS; CUT
AB This paper revisits the problem of determinacy inference addressing the problem of how to uniformly handle cut. To this end a new semantics is introduced for cut, which is abstracted to systematically derive a backward analysis that derives conditions sufficient for a goal to succeed at most once. The method is conceptionally simpler and easier to implement than the existing techniques, while improving the latter's handling of cut. Formal arguments substantiate correctness and experimental work, and a tool called 'RedAlert' demonstrates the method's generality and applicability.
C1 [Kriener, Jael; King, Andy] Univ Kent, Sch Comp, Canterbury CT2 7NF, Kent, England.
C3 University of Kent
RP Kriener, J (corresponding author), Univ Kent, Sch Comp, Canterbury CT2 7NF, Kent, England.
EM Jael.E.Kriener@kent.ac.uk; A.M.King@kent.ac.uk
CR Apt K.R., 1988, THEORY DECLARATIVE K, P89
   Armstrong T, 1998, SCI COMPUT PROGRAM, V31, P3, DOI 10.1016/S0167-6423(96)00039-1
   Baker N., 1993, Australian Computer Science Communications, V15, P321
   BILLAUD M, 1990, THEOR COMPUT SCI, V71, P193, DOI 10.1016/0304-3975(90)90197-P
   BRAUER J, LECT NOTES IN PRESS
   Codish M, 2002, LECT NOTES COMPUT SC, V2566, P109
   Codish M, 2008, THEOR PRACT LOG PROG, V8, P121, DOI 10.1017/S1471068407003146
   DAWSON S, 1993, LOGIC PROGRAMM, P424
   DEBRAY SK, 1988, J LOGIC PROGRAM, V5, P81
   DEVINK EP, 1989, SCI COMPUT PROGRAM, V13, P237
   Genaim S, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1352582.1352585
   GIACOBAZZI R, 1993, THESIS U PISA PISA
   HOWE JM, 2001, LNCS, V2237, P120
   King A, 2006, LECT NOTES COMPUT SC, V4079, P132, DOI 10.1007/11799573_12
   KRIENER J, 2011, 111 U KENT SCH COMP, P1
   LECHARLIER B, 1994, S LOG PROGR, P157
   Lu LJ, 2005, LECT NOTES COMPUT SC, V3444, P108
   MOGENSEN T, 1996, LNCS, V1181, P374
   O'Keefe R.A., 1990, The Craft of Prolog
   SAHLIN D, 1991, S PART EV SEM BAS PR, P23
   Schneider-Kamp P, 2010, THEOR PRACT LOG PROG, V10, P365, DOI 10.1017/S1471068410000165
   [No title captured]
NR 22
TC 3
Z9 3
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 537
EP 553
DI 10.1017/S1471068411000160
PN 4-5
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100008
OA Green Submitted, Green Accepted, Green Published
DA 2024-07-18
ER

PT J
AU Fink, M
AF Fink, Michael
TI A general framework for equivalences in Answer-Set Programming by
   countermodels in the logic of Here-and-There
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 24th International Conference on Logic Programming (ICLP)
CY DEC 09-13, 2008
CL Udine, ITALY
SP Assoc Log Programming
DE Answer-Set Programming; Uniform equivalence; Relativized equivalence;
   Knowledge representation
ID QUANTIFIED EQUILIBRIUM LOGIC; STABLE MODEL SEMANTICS; UNIFORM
   EQUIVALENCE; STRONGLY EQUIVALENT; HYPEREQUIVALENCE; DISJUNCTION;
   NEGATION; SOLVER
AB Different notions of equivalence, such as the prominent notions of strong and uniform equivalence, have been studied in Answer-Set Programming, mainly for the purpose of identifying programs that can serve as substitutes without altering the semantics, for instance in program optimization. Such semantic comparisons are usually characterized by various selections of models in the logic of Here-and- There (HT). For uniform equivalence however, correct characterizations in terms of HT-models can only be obtained for finite theories, respectively programs. In this paper, we show that a selection of countermodels in HT captures uniform equivalence also for infinite theories. This result is turned into coherent characterizations of the different notions of equivalence by countermodels, as well as by a mixture of HT-models and countermodels (so-called equivalence interpretations). Moreover, we generalize the so-called notion of relativized hyperequivalence for programs to propositional theories, and apply the same methodology in order to obtain a semantic characterization which is amenable to infinite settings. This allows for a lifting of the results to first-order theories under a very general semantics given in terms of a quantified version of HT. We thus obtain a general framework for the study of various notions of equivalence for theories under answer-set semantics. Moreover, we prove an expedient property that allows for a simplified treatment of extended signatures, and provide further results for non-ground logic programs. In particular, uniform equivalence coincides under open and ordinary answer-set semantics, and for finite non-ground programs under these semantics, also the usual characterization of uniform equivalence in terms of maximal and total HT-models of the grounding is correct, even for infinite domains, when corresponding ground programs are infinite.
C1 Vienna Univ Technol, Inst Informat Syst, A-1040 Vienna, Austria.
C3 Technische Universitat Wien
RP Fink, M (corresponding author), Vienna Univ Technol, Inst Informat Syst, Favoritenstr 9-11, A-1040 Vienna, Austria.
EM fink@kr.tuwien.ac.at
CR Baral C., 2003, KNOWLEDGE REPRESENTA
   Cabalar P, 2007, THEOR PRACT LOG PROG, V7, P745, DOI 10.1017/S1471068407003110
   Cabalar P, 2007, LECT NOTES COMPUT SC, V4670, P104, DOI 10.1007/978-3-540-74610-2_8
   Dao-Tran M, 2009, LECT NOTES COMPUT SC, V5649, P145, DOI 10.1007/978-3-642-02846-5_16
   de Bruijn J, 2007, LECT NOTES COMPUT SC, V4524, P58
   EITER, 2005, P AAAI 2005, P695
   EITER, 2006, P INT C PRINC KNOWL
   Eiter T, 2003, LECT NOTES COMPUT SC, V2916, P224, DOI 10.1007/978-3-540-24599-5_16
   EITER T, 2005, IJCAI, P97
   EITER T, 2007, IJCAI, P330
   Eiter T, 2007, ACM T COMPUT LOG, V8, DOI 10.1145/1243996.1244000
   FABER W, 2006, ANN MATH ARTIFICIAL, V47, P1
   FABER W, 2008, KR, P433
   FERRARIS P, 2007, IJCAI, P372
   Fink M., 2009, CAEPIA, P327
   FINK M, 2009, RR18430905 INFSYS TU
   Fink M, 2008, LECT NOTES COMPUT SC, V5366, P99, DOI 10.1007/978-3-540-89982-2_17
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P260, DOI 10.1007/978-3-540-72200-7_23
   GELFOND, 1991, NEW GENERAT COMPUT, V9, P365
   Heymans S, 2008, THEOR PRACT LOG PROG, V8, P411, DOI 10.1017/S1471068407003201
   Heymans Stijn., 2007, Journal of Applied Logic, V5, P144
   Inoue K, 2004, LECT NOTES COMPUT SC, V3229, P174, DOI 10.1007/978-3-540-30227-8_17
   Janhunen T, 2004, LECT NOTES ARTIF INT, V2923, P331
   Janhunen T, 2008, FRONT ARTIF INTEL AP, V178, P75, DOI 10.3233/978-1-58603-891-5-75
   Janhunen T, 2009, J ARTIF INTELL RES, V35, P813, DOI 10.1613/jair.2810
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lifschitz V, 2007, LECT NOTES COMPUT SC, V4483, P188, DOI 10.1007/978-3-540-72200-7_17
   Lin FZ, 2007, J ARTIF INTELL RES, V28, P431, DOI 10.1613/jair.2131
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   OETSCH J, 2007, AAAI, P458
   Oetsch J, 2006, LECT NOTES ARTIF INT, V4160, P502, DOI 10.1007/11853886_47
   Oikarinen E, 2006, FRONT ARTIF INTEL AP, V141, P412
   Pearce D, 2004, LECT NOTES ARTIF INT, V2923, P194
   PEARCE D, 2006, MA0602 U REY JUAN CA
   PEARCE D, 2007, CEUR WORKSH P, V265, P37
   Pearce D, 2008, LECT NOTES COMPUT SC, V5366, P546, DOI 10.1007/978-3-540-89982-2_46
   Pührer J, 2009, LECT NOTES COMPUT SC, V5753, P264, DOI 10.1007/978-3-642-04238-6_23
   Pührer J, 2008, LECT NOTES COMPUT SC, V5366, P561, DOI 10.1007/978-3-540-89982-2_47
   Sakama C, 2009, J APPL LOGIC, V7, P318, DOI 10.1016/j.jal.2008.10.006
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Truszczynski M, 2008, ANN MATH ARTIF INTEL, V53, P331, DOI 10.1007/s10472-009-9119-8
   Truszczynski M, 2008, LECT NOTES COMPUT SC, V5366, P576, DOI 10.1007/978-3-540-89982-2_48
   Woltran S, 2008, THEOR PRACT LOG PROG, V8, P217, DOI 10.1017/S1471068407003250
NR 43
TC 8
Z9 8
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2011
VL 11
BP 171
EP 202
DI 10.1017/S1471068410000542
PN 2-3
PG 32
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 729UV
UT WOS:000287977500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kimmig, A
   Demoen, B
   De Raedt, L
   Costa, VS
   Rocha, R
AF Kimmig, Angelika
   Demoen, Bart
   De Raedt, Luc
   Costa, Vitor Santos
   Rocha, Ricardo
TI On the implementation of the probabilistic logic programming language
   ProbLog
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 24th International Conference on Logic Programming (ICLP)
CY DEC 09-13, 2008
CL Udine, ITALY
SP Assoc Log Programming
DE Probabilistic logic programming; Exact and approximative inference;
   Implementation
ID ABDUCTION
AB The past few years have seen a surge of interest in the field of probabilistic logic learning and statistical relational learning. In this endeavor, many probabilistic logics have been developed. ProbLog is a recent probabilistic extension of Prolog motivated by the mining of large biological networks. In ProbLog, facts can be labeled with probabilities. These facts are treated as mutually independent random variables that indicate whether these facts belong to a randomly sampled program. Different kinds of queries can be posed to ProbLog programs. We introduce algorithms that allow the efficient execution of these queries, discuss their implementation on top of the YAP-Prolog system, and evaluate their performance in the context of large networks of biological entities.
C1 [Kimmig, Angelika; Demoen, Bart; De Raedt, Luc] Katholieke Univ Leuven, Dept Comp Wetenschappen, B-3001 Heverlee, Belgium.
   [Costa, Vitor Santos; Rocha, Ricardo] Univ Porto, Fac Sci, CRACS, P-4169007 Oporto, Portugal.
   [Costa, Vitor Santos; Rocha, Ricardo] Univ Porto, Fac Sci, INESC Porto LA, P-4169007 Oporto, Portugal.
C3 KU Leuven; Universidade do Porto; INESC TEC; Universidade do Porto
RP Kimmig, A (corresponding author), Katholieke Univ Leuven, Dept Comp Wetenschappen, Celestijnenlaan 200A,Bus 2402, B-3001 Heverlee, Belgium.
EM Angelika.Kimmig@cs.kuleuven.be; Bart.Demoen@cs.kuleuven.be;
   Luc.DeRaedt@cs.kuleuven.be; vsc@dcc.fc.up.pt; ricroc@dcc.fc.up.pt
RI INESC-TEC, CRACS/F-7527-2012; De Raedt, Luc/AAX-1544-2021; Kimmig,
   Angelika/Q-1794-2016; Rocha, Ricardo/B-2862-2012; Santos Costa,
   Vitor/B-2859-2012
OI De Raedt, Luc/0000-0002-6860-6303; Rocha, Ricardo/0000-0003-4502-8835;
   Santos Costa, Vitor/0000-0002-3344-8237
CR [Anonymous], 2007, IJCAI
   [Anonymous], INT WORKSH STAT REL
   BACHMAIR L, 1993, LECT NOTES COMPUTER, V668, P61
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Costa V.S., 2003, Proceedings of the 19th Annual Conference on Uncertainty in Artificial Intelligence (UAI-03), P517
   Costa VS, 2007, LECT NOTES COMPUT SC, V4354, P185
   COSTA VS, 2007, INT C LOG PROGR, V4670, P305
   CUSSENS J, 2000, UNCERTAINTY ARTIFICI, P115
   Dalvi Nilesh., 2004, P VLDB
   Dantsin E., 1991, LNCS, P152
   De Raedt L, 2008, MACH LEARN, V70, P151, DOI 10.1007/s10994-007-5030-x
   De Raedt L., 2008, LNCS, V4911
   De Raedt Luc, 2009, 552 CW KATH U LEUV D
   DERAEDT L, 2008, NIPS WORKSH PROB PRO
   FREDKIN E, 1960, COMMUN ACM, V3, P490, DOI 10.1145/367390.367400
   Fuhr N, 2000, J AM SOC INFORM SCI, V51, P95, DOI 10.1002/(SICI)1097-4571(2000)51:2<95::AID-ASI2>3.0.CO;2-H
   Getoor L, 2007, Statistical Relational Learning
   Gutmann B, 2008, LECT NOTES ARTIF INT, V5211, P473, DOI 10.1007/978-3-540-87479-9_49
   ISHIHATA M, 2008, P 18 INT C IND LOG P, P44
   KERSTING K, 2008, PROBABILISTIC INDUCT, V4911, P189
   KIMMIG A, 2009, INT JOINT C ART INT, P1095
   Kimmig A, 2007, LECT NOTES ARTIF INT, V4701, P176
   Kimmig A, 2008, LECT NOTES COMPUT SC, V5366, P175, DOI 10.1007/978-3-540-89982-2_22
   Lakshmanan LVS, 1997, ACM T DATABASE SYST, V22, P419, DOI 10.1145/261124.261131
   MANTADELIS T, 2009, INT C IMPL CONSTR LO, P36
   MUGGLETON S, 1995, ADV ILP, P254
   POOLE D, 1993, NEW GENERAT COMPUT, V11, P377, DOI 10.1007/BF03037184
   POOLE D, 1993, ARTIF INTELL, V64, P81, DOI 10.1016/0004-3702(93)90061-F
   Poole D, 2000, J LOGIC PROGRAM, V44, P5, DOI 10.1016/S0743-1066(99)00071-0
   Ramakrishnan IV, 1999, J LOGIC PROGRAM, V38, P31, DOI 10.1016/S0743-1066(98)10013-4
   Riguzzi F, 2007, LECT NOTES COMPUT SC, V4733, P109
   Sato T, 2001, J ARTIF INTELL RES, V15, P391
   Sato T., 1995, P INT C LOG PROGR, P715
   Sevon P, 2006, LECT NOTES COMPUT SC, V4075, P35
   VALIANT LG, 1979, SIAM J COMPUT, V8, P410, DOI 10.1137/0208032
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P431, DOI 10.1007/978-3-540-27775-0_30
   Widom J., 2005, P CIDR
   [No title captured]
NR 38
TC 78
Z9 81
U1 0
U2 16
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2011
VL 11
BP 235
EP 262
DI 10.1017/S1471068410000566
PN 2-3
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 729UV
UT WOS:000287977500005
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Betz, H
   Raiser, F
   Frühwirth, T
AF Betz, Hariolf
   Raiser, Frank
   Fruehwirth, Thom
TI A complete and terminating execution model for Constraint Handling Rules
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE Constraint Handling Rules; operational semantics; execution model;
   persistent constraints
ID OPERATIONAL SEMANTICS; CHR; CONFLUENCE
AB We observe that the various formulations of the operational semantics of Constraint Handling Rules proposed over the years fall into a spectrum ranging from the analytical to the pragmatic. While existing analytical formulations facilitate program analysis and formal proofs of program properties, they cannot be implemented as is. We propose a novel operational semantics omega(!), which has a strong analytical foundation, while featuring a terminating execution model. We prove its soundness and completeness with respect to existing analytical formulations and we provide an implementation in the form of a source-to-source transformation to CHR with rule priorities.
C1 [Betz, Hariolf; Raiser, Frank; Fruehwirth, Thom] Univ Ulm, Fac Engn & Comp Sci, D-89069 Ulm, Germany.
C3 Ulm University
RP Betz, H (corresponding author), Univ Ulm, Fac Engn & Comp Sci, D-89069 Ulm, Germany.
EM hariolf.betz@uni-ulm.de; frank.raiser@uni-ulm.de;
   thom.fruehwirth@uni-ulm.de
CR Abdennadher S, 1997, LECT NOTES COMPUT SC, V1330, P252, DOI 10.1007/BFb0017444
   Abdennadher S., 1999, Constraints, V4, P133, DOI 10.1023/A:1009842826135
   Abdennadher S, 1999, LECT NOTES COMPUT SC, V1713, P43
   Betz H, 2005, LECT NOTES COMPUT SC, V3709, P137, DOI 10.1007/11564751_13
   BETZ H, 2009, P 23 WORKSH IN PRESS
   BETZ H, 2010, 01 ULM U
   De Koninck Leslie, 2007, Proceedings of the 9th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP'07), P25, DOI 10.1145/1273920.1273924
   De Koninck L, 2008, LECT NOTES COMPUT SC, V4989, P32
   De Koninck L, 2009, THEOR PRACT LOG PROG, V9, P165, DOI 10.1017/S1471068409003664
   Duck GJ, 2004, LECT NOTES COMPUT SC, V3132, P90, DOI 10.1007/978-3-540-27775-0_7
   Frühwirth T, 2005, LECT NOTES COMPUT SC, V3668, P113, DOI 10.1007/11562931_11
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   FRUHWIRTH T, 1993, PRINCIPLES PRACTICE, P80
   Fruhwirth T.W., 2009, Constraint Handling Rules
   Fruhwirth Thom., 2003, COG TECH, DOI 10.1007/978-3-662-05138-2
   Gabbrielli M, 2009, PPDP'09: PROCEEDINGS OF THE 11TH INTERNATIONAL ACM SIGPLAN SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING, P267, DOI 10.1145/1599410.1599443
   Ganzinger H, 2002, LECT NOTES COMPUT SC, V2401, P209, DOI 10.1007/3-540-45619-8_15
   Pilozzi P, 2009, LECT NOTES COMPUT SC, V5649, P499, DOI 10.1007/978-3-642-02846-5_42
   Raiser F., 2009, CHR 2009, P34
   Sarna-Starosta B, 2007, LECT NOTES COMPUT SC, V4354, P170
   Simmons RJ, 2008, LECT NOTES COMPUT SC, V5126, P336, DOI 10.1007/978-3-540-70583-3_28
   Sneyers J, 2010, THEOR PRACT LOG PROG, V10, P1, DOI 10.1017/S1471068409990123
   SULZMANN M, 2007, P POPL 2007 WORKSH D, P19
   SULZMANN M, 2008, P 10 INT ACM SIGPLAN, P20
NR 24
TC 12
Z9 13
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 597
EP 610
DI 10.1017/S147106841000030X
PN 4-6
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200016
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sneyers, J
   Van Weert, P
   Schrijvers, T
   De Koninck, L
AF Sneyers, Jon
   Van Weert, Peter
   Schrijvers, Tom
   De Koninck, Leslie
TI As time goes by: Constraint Handling Rules A survey of CHR research from
   1998 to 2007
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Review
DE Constraint Handling Rules (CHR); survey
ID BASE STATIONS; SEMANTICS; PROLOG
AB Constraint Handling Rules (CHR) is a high-level programming language based on multi-headed multiset rewrite rules. Originally designed for writing user-defined constraint solvers, it is now recognized as an elegant general purpose language. Constraint Handling Rules related research has surged during the decade following the previous survey by Fruhwirth (J. Logic Programming, Special Issue on Constraint Logic Programming, 1998, vol. 37, nos. 1-3, pp. 95-138). Covering more than 180 publications, this new Survey provides an overview of recent results in a wide range of research areas, from semantics and analysis to systems, extensions, and applications.
C1 [Sneyers, Jon; Van Weert, Peter; Schrijvers, Tom; De Koninck, Leslie] Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
C3 KU Leuven
RP Sneyers, J (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
EM jon.sneyers@cs.kuleuven.be; peter.vanweert@cs.kuleuven.be;
   tom.schrijvers@cs.kuleuven.be; leslie.dekoninck@cs.kuleuven.be
RI Schrijvers, Tom/A-6696-2016
OI Schrijvers, Tom/0000-0001-8771-5559
FU Institute for the Promotion of Innovation through Science and Technology
   in Flanders (IWT-Vlaanderen); Research Foundation-Flanders (Belgium)
   (F.W.O.-Vlaanderen); Scientific Research-Flanders
FX Jon Sneyers and Leslie De Koninck are funded by Ph.D. grants of the
   Institute for the Promotion of Innovation through Science and Technology
   in Flanders (IWT-Vlaanderen). Peter Van Weert is a Research Assistant of
   the Research Foundation-Flanders (Belgium) (F.W.O.-Vlaanderen). Tom
   Schrijvers is a Post-Doctoral Researcher of the fund for Scientific
   Research-Flanders.
CR Abdennadher S., 2004, ACM Transactions on Computational Logic, V5, P177, DOI 10.1145/976706.976707
   Abdennadher S, 2003, LECT NOTES COMPUT SC, V3018, P198
   Abdennadher S., 1999, Constraints, V4, P133, DOI 10.1023/A:1009842826135
   Abdennadher S, 1998, LECT NOTES COMPUT SC, V1520, P25
   Abdennadher S, 1999, LECT NOTES COMPUT SC, V1713, P43
   ABDENNADHER S, 2008, LNCS, V4915
   ABDENNADHER S, 2000, FQAS 00, P141
   ABDENNADHER S, 2001, WLPE 01
   ABDENNADHER S, 2000, HOLZBAUR FRUHWIRTH, P311
   ABDENNADHER S, 2001, RULE BASED CONSTRAIN
   ABDENNADHER S, 2002, WFLP 01, V64, P1
   ABDENNADHER S, 2000, RCORP 00
   ABDENNADHER S, 1998, LECT NOTES ARTIF INT, V1495, P1
   ABDENNADHER S, 2006, LNCS, V4407
   Abdennadher S., 2005, THEORY PRACTICE LOGI, V5
   ABDENNADHER S, 2000, PACLP 00
   Aguilar-Solis D, 2004, LECT NOTES ARTIF INT, V3315, P315
   Alberti M, 2006, APPL ARTIF INTELL, V20, P133, DOI 10.1080/08839510500479546
   ALBERTI M, 2004, SAC 2004, P72
   ALBERTI M, 2004, LCMAS 03, V85, P94
   ALVES S, 2002, WFLP 01, V64, P56
   Apt KR, 2001, THEOR PRACT LOG PROG, V1, P713, DOI 10.1017/S1471068401000072
   Badea L, 2004, LECT NOTES COMPUT SC, V3208, P61
   BARRANCOMENDOZA A, 2005, THESIS S FRASER U CA
   Bavarian M, 2006, J UNIVERS COMPUT SCI, V12, P1500
   BES GG, 2003, P LORR SAARL WORKSH
   Betz H, 2005, LECT NOTES COMPUT SC, V3709, P137, DOI 10.1007/11564751_13
   Bistarelli S, 2004, COMPUT INTELL-US, V20, P287, DOI 10.1111/j.0824-7935.2004.00239.x
   BOESPFLUG M, 2007, MONAD READER, V9, P17
   BOUISSOU O, 2004, THESIS TECHNICAL U B
   BRAND S, 2002, LNCS, V2627, P279
   BRAND S, 2003, RULE 03, V86, P45
   BRESSAN S, 1998, LECT NOTES COMPUTER, V1495, P68
   CABEDO LM, 2003, J UNIVERS COMPUT SCI, V9, P1096
   Chin W.-N., 2003, TYPE SAFE EMBEDDING
   Chin WN, 2006, ACM SIGPLAN NOTICES, V41, P273, DOI 10.1145/1167515.1167498
   Christiansen H, 2005, LECT NOTES ARTIF INT, V3554, P97
   Christiansen H., 2003, International Journal on Artificial Intelligence Tools (Architectures, Languages, Algorithms), V12, P227, DOI 10.1142/S0218213003001216
   Christiansen H., 2007, RANLP, P128
   CHRISTIANSEN H, 2006, LECT NOTES COMPUTER, V4371, P226
   COQUERY E, 2003, WLPE 03, V371, P17
   DAHL V, 2005, P 2 INT WORKSH CONST
   DAHL V, 2007, CSLP 07
   DAHL V, 2004, LECT NOTES COMPUTER, V3438, P17
   Dahl V., 2007, LNCS, V4670
   DAHL V, 2004, NLUCS 04
   De Koninck Leslie, 2007, Proceedings of the 9th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP'07), P25, DOI 10.1145/1273920.1273924
   De Koninck L, 2008, LECT NOTES COMPUT SC, V4989, P32
   Delzanno G., 2005, PPDP 05, P209
   Demoen B., 2004, LNCS, V3132
   DJELLOUL K, 2007, SAC 07, P58
   DJELLOUL K, 2007, CHR 07 P 4 WORKSH CO
   Ducassé M, 1999, J LOGIC PROGRAM, V39, P177, DOI 10.1016/S0743-1066(98)10036-5
   Duck G. J., 2003, P 5 ACM SIGPLAN INT, P79
   DUCK GJ, 2005, THESIS U MELBOURNE V
   Escrig MT, 1998, J VISUAL LANG COMPUT, V9, P81, DOI 10.1006/jvlc.1997.0067
   ESCRIG MT, 1998, QUALITATIVE SPATIAL
   ETALLE S, 2006, LNCS, V4079
   FINK M, 2006, WLP 06 P 20 WORKSH L
   Frühwirth T, 2005, LECT NOTES COMPUT SC, V3573, P133, DOI 10.1007/11506676_9
   Frühwirth T, 2001, THEOR PRACT LOG PROG, V1, P303, DOI 10.1017/S1471068401001181
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Frühwirth T, 2000, IEEE INTELL SYST APP, V15, P49, DOI 10.1109/5254.820329
   Fruhwirth T., 2000, New Trends in Constraints. Joint ERCIM/Compulog Net Workshop. Selected Papers (Lecture Notes in Artificial Intelligence Vol. 1865), P298
   Frühwirth T, 1998, LECT NOTES COMPUT SC, V1520, P476
   FRUHWIRTH T, 2000, P 1 WORKSH RUL BAS C
   FRUHWIRTH T, 2006, LNAI, V3978
   FRUHWIRTH T, 2001, ENTCS, V48, P147
   FRUHWIRTH T, 1992, ECRC9218 EUR COMP IN
   FRUHWIRTH T, 2004, CIIR 04
   FRUHWIRTH T, 2002, ENTCS, V76
   FRUHWIRTH T, 1995, ECRC9520 EUR COMP IN
   FRUHWIRTH T, 2003, APPIA GULP PRODE, P386
   Fruhwirth T., 2002, ENTCS, V59
   Fruhwirth T.W., 2009, Constraint Handling Rules
   Fruhwirth T. W., 2002, KR 02, P547
   Fruhwirth Thom., 2003, COG TECH, DOI 10.1007/978-3-662-05138-2
   Fruhwirth TW, 1994, LECT NOTES COMPUTER, V910, P90
   GABBRIELLI M, 2009, ACM T COMPUTATIONAL
   GABBRIELLI M, 2005, LNCS, V3668
   Garat D, 2002, XXII INTERNATIONAL CONFERENCE OF THE CHILEAN COMPUTER SCIENCE SOCIETY, PROCEEDINGS, P234, DOI 10.1109/SCCC.2002.1173200
   GAVANELLI M, 2003, APPIA GULP PRODE JOI, P25
   GEURTS J, 2001, MULTIMEDIA MODELING, P247
   Gouraud SD, 2006, LECT NOTES COMPUT SC, V3819, P1
   HAEMMERLE R, 2007, LNCS, V4533
   HECKSHER T, 2002, CHRG MODEL ANC UNPUB
   Holzbaur C, 2000, APPL ARTIF INTELL, V14, P369, DOI 10.1080/088395100117043
   Holzbaur C, 1999, LECT NOTES COMPUT SC, V1702, P117
   HOLZBAUR C, 1998, TR9801 OST FORSCH AR
   Holzbaur C., 2000, J APPL ARTIFICIAL IN, V14
   KOSMATOV N, 2006, P 2006 ACM S APPL CO, P404
   Kosmatov N, 2006, LECT NOTES ARTIF INT, V4369, P25
   KRAMER E, 2001, THESIS LMU MUNICH
   LAM ES, 2007, DAMP 07
   LOTZBEYER H, 2000, LPSE 00
   MEISTER M, 2006, LNCS, V4651, P139
   Meister M, 2007, LECT NOTES COMPUT SC, V4483, P201, DOI 10.1007/978-3-540-72200-7_18
   MORAWIETZ F, 2002, PARSING NATURA UNPUB
   MORAWIETZ F, 2000, COLING 00
   PILOZZI P, 2007, WST 07
   PRETSCHNER A, 2004, J SOFTWARE TOOLS TEC, V5, P140, DOI DOI 10.1007/S10009-003-0128-3
   RINGWELSKI G, 2000, WLP 00, P137
   RINGWELSKI G, 2000, RCORP 00
   Robin J, 2007, J UNIVERS COMPUT SCI, V13, P701
   RRAT A, 2003, THESIS MIT SLOAN SCH
   Sarna-Starosta B, 2007, LECT NOTES COMPUT SC, V4354, P170
   SARNASTAROSTA B, 2007, 500 CW DEP COMP SC
   SCHIFFEL S, 2007, AAAI, P1191
   SCHMAUSS M, 1999, IMPLEMENTATION CHR J
   Schrijvers T, 2006, THEOR PRACT LOG PROG, V6, P213, DOI 10.1017/S1471068405002541
   Schrijvers T., 2006, PPDP 2006. Proceedings of the Eighth ACM SIGPLAN Symposium on Principles and Practice of Declarative Programming, P85, DOI 10.1145/1140335.1140347
   SCHRIJVERS T, 2005, THESIS KU LEUV
   SCHRIJVERS T, 2004, 385 CW KU LEUV DEP C
   SCHRIJVERS T, 2006, CHR 06 P 3 WORKSH CO
   SCHRIJVERS T, 2003, CICLOPS 2003, P7
   Schrijvers T., 2005, PPDP 2005, P218
   SCHRIJVERS T, 2005, CHR 05 P 2 WORKSH CO
   Schrijvers T, 2006, ELECTRON NOTES THEOR, V147, P93, DOI 10.1016/j.entcs.2005.06.039
   SCHUMANN ET, 2002, WFLP 02
   *SCI SOFTW SYST LT, 2008, COMP PROF SOLV PROBL
   SEITZ C, 2002, IC AI 02, V1, P295
   Shigeta Y, 2006, J ADV COMPUT INTELL, V10, P339, DOI 10.20965/jaciii.2006.p0339
   SIMOES H, 2004, WFLP 04, P48
   Sneyers J, 2009, ACM T PROGR LANG SYS, V31, DOI 10.1145/1462166.1462169
   Stuckey PJ, 2005, ACM T PROGR LANG SYS, V27, P1216, DOI 10.1145/1108970.1108974
   STUCKEY PJ, 2002, LNCS, V2401
   SULZMANN M, 2007, IFL 07, P195
   Sulzmann M, 2007, J FUNCT PROGRAM, V17, P83, DOI 10.1017/S0956796806006137
   Sulzmann M, 2006, LECT NOTES COMPUT SC, V4279, P26
   Tacchella Paolo, 2007, Proceedings of the 9th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP'07), P179, DOI 10.1145/1273920.1273945
   VANWEERT P, 2008, LNCS, V4915
   VANWEERT P, 2008, 521 CW KU LEUV DEP C
   VANWEERT P, 2008, LNAI, V5388
   VOLL KD, 2006, THESIS S FRASER U CA
   WAZNY J, 2006, THESIS U MELBOURNE A
   Wolf A., 2001, Principles and Practice of Constraint Programming - CP 2002. 7th International Conference, CP 2001. Proceedings (Lecture Notes in Computer Science Vol.2239), P256
   WOLF A, 2000, LNCS, V1865, P318
   WOLF A, 1999, THESIS TECHNICAL U B
   WOLF A, 2005, WCLP 05 P 19 WORKSH
   WOLF A, 2001, P 14 INT C APPL PROL, P211
NR 140
TC 22
Z9 22
U1 1
U2 8
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2010
VL 10
BP 1
EP 47
DI 10.1017/S1471068409990123
PN 1
PG 47
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 547AW
UT WOS:000273858200001
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Wielemaker, J
   Huang, ZS
   Van der Meij, L
AF Wielemaker, Jan
   Huang, Zhisheng
   Van der Meij, Lourens
TI SWI-Prolog and the Web
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Prolog; HTTP; HTML; XML; RDF; DOM; Semantic Web
ID RDF
AB Prolog is an excellent tool for representing and manipulating data written in formal languages as well as natural language. Its safe semantics and automatic memory management make it a prime candidate for programming robust Web services. Although Prolog is commonly seen as a component in a Web application that is either embedded or communicates using a proprietary protocol, we propose an architecture where Prolog communicates to other components in a Web application using the standard HTTP protocol. By avoiding embedding in external Web servers, development and deployment become much easier. To support this architecture, in addition to the transfer protocol, we must also support parsing, representing and generating the key Web document types such as HTML, XML and RDF. This article motivates the design decisions in the libraries and extensions to Prolog for handling Web documents and protocols. The design has been guided by the requirement to handle large documents efficiently. The described libraries support a wide range of Web applications ranging from HTML and XML documents to Semantic Web RDF processing. The benefits of using Prolog for Web-related tasks are illustrated using three case studies.
C1 [Wielemaker, Jan] Univ Amsterdam, Human Comp Studies Lab, NL-1098 VA Amsterdam, Netherlands.
   [Huang, Zhisheng; Van der Meij, Lourens] Vrije Univ Amsterdam, Dept Comp Sci, NL-1081 HV Amsterdam, Netherlands.
C3 University of Amsterdam; Vrije Universiteit Amsterdam
RP Wielemaker, J (corresponding author), Univ Amsterdam, Human Comp Studies Lab, Matrix 1,Kruislaan 419, NL-1098 VA Amsterdam, Netherlands.
EM wielemak@science.uva.nl; huang@cs.vu.nl; lourens@cs.vu.nl
OI Wielemaker, Jan/0000-0001-5574-5673
CR BECHHOFER S, 2003, INT WORKSH DESCR LOG, V81
   Broekstra J, 2002, LECT NOTES COMPUT SC, V2342, P54
   CABEZA D, 2003, CSDC0312031 CORR
   DEMOEN B, 2002, 350 DEP COMP SCI CW
   Deransart P., 1996, PROLOG STANDARD
   GRAS D, 2001, TPLP, V1, P251
   Haarslev V., 2001, P INT WORKSH DESCR L, P132
   Hearst M, 2002, COMMUN ACM, V45, P42, DOI 10.1145/567498.567525
   Horrocks I., 1999, In Proceedings of the International Workshop on Description Logics DL99, P133
   Huang C, 2004, CELL CYCLE, V3, P4, DOI 10.4161/cc.3.1.601
   Huang ZS, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P454
   Huang ZS, 2005, LECT NOTES COMPUT SC, V3729, P398, DOI 10.1007/11574620_30
   LETH L, 1996, P 1 WORKSH LOG PROGR
   Mäkelä E, 2004, LECT NOTES COMPUT SC, V3298, P797
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Philips L., 2000, C/C++ Users Journal, V18, P38
   SCHLOBACH S, 2005, INCONSISTENT ONTOLOG
   SZEREDI P, 1996, P 1 WORKSH LOG PROGR
   van Gendt M, 2006, LECT NOTES COMPUT SC, V4172, P426
   Wielemaker J, 2005, LECT NOTES COMPUT SC, V3668, P128, DOI 10.1007/11562931_12
   Wielemaker J, 2003, LECT NOTES COMPUT SC, V2916, P331, DOI 10.1007/978-3-540-24599-5_23
   Wielemaker J, 2003, LECT NOTES COMPUT SC, V2870, P644
   [No title captured]
NR 23
TC 31
Z9 31
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2008
VL 8
BP 363
EP 392
DI 10.1017/S1471068407003237
PN 3
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 304KX
UT WOS:000256109500006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mesnard, F
   Serebrenik, A
AF Mesnard, Fred
   Serebrenik, Alexander
TI Recurrence with affine level mappings is P-time decidable for CLP(R)
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE constraint logic programming; termination; decidability
ID TERMINATION; COMPLEXITY
AB In this paper we introduce a class of constraint logic programs such that their termination can be proved by using affine level mappings. We show that membership to this class is decidable in polynomial time.
C1 [Mesnard, Fred] Univ Reunion, IREMIA, St Denis, Reunion, France.
   [Serebrenik, Alexander] Tech Univ Eindhoven, Lab Qual Software, NL-5600 MB Eindhoven, Netherlands.
C3 University of La Reunion; Eindhoven University of Technology
RP Mesnard, F (corresponding author), Univ Reunion, IREMIA, St Denis, Reunion, France.
EM Frederic.Mesnard@univ-reunion.fr; A.Serebrenik@tue.nl
RI Serebrenik, Alexander/E-1132-2012
OI Serebrenik, Alexander/0000-0002-1418-0095
CR Afrati F., 2005, ACM Transactions on Computational Logic, V6, P481, DOI 10.1145/1071596.1071597
   [Anonymous], 1951, DECISION METHOD ELEM
   [Anonymous], 1975, Lecture Notes In Computer Science, DOI [10.1007/3-540-07407-4_17, 10.1007/3-, DOI 10.1007/3, DOI 10.1007/3-540-07407-4_17]
   Basu S, 1996, J ACM, V43, P1002, DOI 10.1145/235809.235813
   BEZEM M, 1993, J LOGIC PROGRAM, V15, P79, DOI 10.1016/0743-1066(93)90014-8
   Cousot P, 2005, LECT NOTES COMPUT SC, V3385, P1
   Dantzig GB., 1951, ACTIVITY ANAL PRODUC, V13, P339
   DEVIENNE P, 1993, LECT NOTES COMPUTER, V665, P48
   HOLZBAUR C, 1995, TR9509 OFAI CLP Q R
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   Jaffar J, 1998, J LOGIC PROGRAM, V37, P1, DOI 10.1016/S0743-1066(98)10002-X
   Khachiyan L. G., 1980, USSR COMP MATH MATH, V20, P53, DOI DOI 10.1016/0041-5553(80)90061-0
   Marcinkowski J, 1996, IEEE S LOG, P13, DOI 10.1109/LICS.1996.561299
   Marriott K., 1998, PROGRAMMING CONSTRAI
   Pheidas T., 2000, CONT MATH, V270, P237
   Podelski A, 2004, LECT NOTES COMPUT SC, V2937, P239
   RENEGAR J, 1992, J SYMB COMPUT, V13, P301, DOI 10.1016/S0747-7171(10)80005-7
   Schrijver A., 1998, THEORY LINEAR INTEGE
   Serebrenik A, 2005, LECT NOTES COMPUT SC, V3573, P231, DOI 10.1007/11506676_15
   *SICS, 2005, SICSTUS US MAN VERS
   Sohn K., 1991, Proceedings of the Tenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P216, DOI 10.1145/113413.113433
   Tarski Alfred, 1931, Fund. Math., P210
   Tiwari A, 2004, LECT NOTES COMPUT SC, V3114, P70
NR 23
TC 13
Z9 13
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2008
VL 8
BP 111
EP 119
DI 10.1017/S1471068407003122
PN 1
PG 9
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 264ZO
UT WOS:000253329100004
DA 2024-07-18
ER

PT J
AU Son, TC
   Pontelli, E
AF Son, Tran Cao
   Pontelli, Enrico
TI Planning with preferences using logic programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE planning with preferences; preference language; preference
   representation; answer set planning
ID MODEL; SEMANTICS
AB We present a declarative language, PP, for the high-level specification of preferences between possible solutions (or trajectories) of a planning problem. This novel language allows users to elegantly express non-trivial, multi-dimensional preferences and priorities over such preferences. The semantics of PP allows the identification of most preferred trajectories for a given goal. We also provide an answer set programming implementation of planning problems with PP preferences.
C1 New Mexico State Univ, Dept Comp Sci, Knowledge Representat Log & Adv Programming Lab, Las Cruces, NM 88003 USA.
C3 New Mexico State University
RP Son, TC (corresponding author), New Mexico State Univ, Dept Comp Sci, Knowledge Representat Log & Adv Programming Lab, Las Cruces, NM 88003 USA.
EM tson@cs.nmsu.edu; epontell@cs.nmsu.edu
RI Pontelli, Enrico/AAJ-5161-2021
OI Pontelli, Enrico/0000-0002-7753-1737
CR [Anonymous], 1994, Markov Decision Processes: Discrete Stochastic Dynamic Programming
   Apt K.R., 1988, THEORY DECLARATIVE K, P89
   Bacchus F, 2000, ARTIF INTELL, V116, P123, DOI 10.1016/S0004-3702(99)00071-5
   Bistarelli S, 1997, J ACM, V44, P201, DOI 10.1145/256303.256306
   Bistarelli S, 2000, LECT NOTES COMPUT SC, V1753, P230
   Blum AL, 1997, ARTIF INTELL, V90, P281, DOI 10.1016/S0004-3702(96)00047-1
   Borning A., 1989, P 6 INT C LOG PROGR, P149
   Boutilier C, 2004, COMPUT INTELL-US, V20, P137, DOI 10.1111/j.0824-7935.2004.00234.x
   Boutilier C, 1999, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P71
   Brewka G, 2004, FR ART INT, V110, P303
   Brewka G, 2002, LECT NOTES ARTIF INT, V2424, P444, DOI 10.1007/3-540-45757-7_37
   Brewka G, 1999, ARTIF INTELL, V109, P297, DOI 10.1016/S0004-3702(99)00015-6
   BREWKA G, 2003, IJCAI, P867
   Brewka Gerhard., 2004, P 9 INT C PRINC KNOW, P213
   Buccafurri F, 2000, IEEE T KNOWL DATA EN, V12, P845, DOI 10.1109/69.877512
   Cimatti A, 2000, J ARTIF INTELL RES, V13, P305, DOI 10.1613/jair.774
   Cui BQ, 2002, ARTIF INTELL, V138, P117, DOI 10.1016/S0004-3702(02)00185-6
   Delgrande J. P, 2004, PRINCIPLES KNOWLEDGE, P673
   Delgrande JP, 2003, THEOR PRACT LOG PROG, V3, P129, DOI 10.1017/S1471068402001539
   Dimopoulos Y., 1997, P EUR C PLANN, P169
   Domshlak Carmel., 2002, Proceedings of the Eighth International Conference on Principles of Knowledge Representation and Reasoning, P121
   Eiter T, 2003, J ARTIF INTELL RES, V19, P25, DOI 10.1613/jair.1148
   FARGIER H, 1993, EUR C SYMB QUAL APPR, P97
   GELFOND M, 1990, INT J INTELL SYST, V5, P549, DOI 10.1002/int.4550050507
   Gelfond M., 1998, Electron. Trans. Artif. Intell., V2, P193
   HADDAWY P, 1993, UTILITY MODEL GOAL D
   JUNKER U, 2001, P IJCAI WORKSH CONF
   Kautz H, 1999, SIXTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-99)/ELEVENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE (IAAI-99), P526
   Lago UD, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P447
   Larrosa J, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P48
   Larrosa J., 2003, PROC 18 TH IJCAI, P239
   LE H, 2003, JAVA BASED SOLVER AN
   LEONE N, 2005, IN PRESS ACM T COMPU
   Lierler Y, 2004, LECT NOTES ARTIF INT, V2923, P346
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   LIN F, 1998, P 6 INT C PRINC KNOW, P224
   Lin FZ, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P112
   LONG D, 2002, INT PLANNING COMPETI
   Moulin H., 1988, AXIOMS COOPERATIVE D
   Myers KL, 1996, MOR KAUF R, P112
   Myers KL, 1999, SIXTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-99)/ELEVENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE (IAAI-99), P570
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Przymusinski T. C., 1988, F DEDUCTIVE DATABASE, P193
   Reiter R., 2001, Knowledge in Action: Logical Foundations for Specifying and Implementing Dynamical Systems
   Schaub Torsten., 2001, IJCAI, P597
   Schiex T, 1995, INT JOINT CONF ARTIF, P631
   SCHIEX T, 2002, P AAAI WORKSH REF AI
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   SON T, 2005, IN PRESS ACM T COMPU
   Son TC, 2004, LECT NOTES ARTIF INT, V2923, P247
   Son TC, 2004, COMPUT INTELL-US, V20, P358, DOI 10.1111/j.0824-7935.2004.00242.x
   [No title captured]
NR 53
TC 30
Z9 40
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2006
VL 6
BP 559
EP 607
DI 10.1017/S1471068406002717
PN 5
PG 49
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 077SV
UT WOS:000240051400004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Costantini, S
AF Costantini, S
TI On the existence of stable models of non-stratified logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set semantics; logic programs class; canonical programs
ID SEMANTICS
AB In this paper we analyze the relationship between cyclic definitions and consistency in Gelfond-Lifschitz's answer sets semantics (originally defined as 'stable model semantics'). This paper introduces a fundamental result, which is relevant for Answer Set programming, and planning. For the first time since the definition of the stable model semantics, the class of logic programs for which a stable model exists is given a syntactic characterization. This condition may have a practical importance both for defining new algorithms for checking consistency and computing answer sets, and for improving the existing systems. The approach of this paper is to introduce a new canonical form (to which any logic program can be reduced to), to focus the attention on cyclic dependencies. The technical result is then given in terms of programs in canonical form (canonical programs), without loss of generality: the stable models of any general logic program coincide (up to the language) to those of the corresponding canonical program. The result is based on identifying the cycles contained in the program, showing that stable models of the overall program are composed of stable models of suitable sub-programs, corresponding to the cycles, and on defining the Cycle Graph. Each vertex of this graph corresponds to one cycle, and each edge corresponds to one handle, which is a literal containing an atom that, occurring in both cycles, actually determines a connection between them. In fact, the truth value of the handle in the cycle where it appears as the head of a rule, influences the truth value of the atoms of the cycle(s) where it occurs in the body. We can therefore introduce the concept of a handle path, connecting different cycles. Cycles can be even, if they consist of an even number of rules, or vice versa they call be odd. Problems for consistency, as it is well-known, originate in the odd cycles. If for every odd cycle we can find a handle path with certain properties, then the existence of stable model is guaranteed. We will show that based on this results new classes of consistent programs can be defined, and that cycles and cycle graphs can be generalized to components and component graphs.
C1 Univ Aquila, Dipartimento Informat, I-67010 Coppito, Italy.
C3 University of L'Aquila
RP Univ Aquila, Dipartimento Informat, Via Vetoio Loc Coppito, I-67010 Coppito, Italy.
EM stefcost@di.univaq.it
OI COSTANTINI, Stefania/0000-0002-5686-6124
CR [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   Apt K. R., 1991, New Generation Computing, V9, P335, DOI 10.1007/BF03037168
   Balduccini M, 2003, THEOR PRACT LOG PROG, V3, P425, DOI 10.1017/S1471068403001807
   BALDUCCINI M, 2000, P 2000 MEX INT C ART
   BRIGNOLI G, 1999, P CIT99 C INF TECHN
   COSTANTINI S, 1995, THEOR COMPUT SCI, V149, P231, DOI 10.1016/0304-3975(94)00259-L
   Costantini S, 2002, INFORM PROCESS LETT, V84, P241, DOI 10.1016/S0020-0190(02)00290-9
   COSTANTINI S, 2004, IN PRESS THEORY PRAC
   Costantini S., 1996, LOG PROGR P 1996 JOI, P438
   COSTANTINI S, 2004, P IJCAI 2003 WORKSH
   COSTANTINI S, 2003, P IJCAI 2003 WORKSH, P66
   COSTANTINI S, 2001, P AAAI SPRING S ANSW, P21
   Dimopoulos Y, 1996, THEOR COMPUT SCI, V170, P209, DOI 10.1016/S0304-3975(96)80707-9
   Dimopoulos Y., 1997, P EUR C PLANN, P169
   Dix J., 1995, Fundamenta Informaticae, V22, P227
   Dix J., 1995, Fundamenta Informaticae, V22, P257
   Erdem E, 2003, THEOR PRACT LOG PROG, V3, P499, DOI 10.1017/S1471068403001765
   Erdogan ST, 2004, LECT NOTES ARTIF INT, V2923, P114
   FABER W, 1999, LECT NOTES ARTIF INT, V1730, P117
   FAGES F, 1994, METHODS LOGIC COMPUT, V2, P51
   Fitting M., 1985, Journal of Logic Programming, V2, P295, DOI 10.1016/S0743-1066(85)80005-4
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   KONCZAK K, 2003, CEUR WORKSH P SERIES, V78, P137
   KONCZAK K, 2003, CEUR WORKSH P SERIES, V78, P43
   LIBERATORE P, 1999, 0999 U ROM SAP
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   LINKE T, 2003, CEUR WORKSHOP P SERI, V78, P181
   LINKE T, 2001, P INT JOINT C ART IN, P641
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Przymusinska H., 1990, Formal Techniques in Artificial Intelligence, a Sourcebook, P321
   TURNER H, 1994, MIT PS LOG, P61
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
NR 34
TC 15
Z9 16
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2006
VL 6
BP 169
EP 212
DI 10.1017/S1471068405002589
PN 1-2
PG 44
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 011WO
UT WOS:000235299500005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Serebrenik, A
   De Schreye, D
AF Serebrenik, A
   De Schreye, D
TI Inference of termination conditions for numerical loops in Prolog
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 2nd International Workshop on Verification and Computational Logic (VCL
   2001)
CY SEP 04, 2001
CL Florence, ITALY
DE termination analysis; numerical computation
ID LOGIC PROGRAMS
AB We present a new approach to termination analysis of numerical computations in logic programs. Traditional approaches fail to analyse them due to non well-foundedness of the integers. We present a technique that allows overcoming these difficulties. Our approach is based on transforming a program in a way that allows integrating and extending techniques originally developed for analysis of numerical computations in the framework of query-mapping pairs with the well-known framework of acceptability. Such an integration not only contributes to the understanding of termination behaviour of numerical computations, but also allows us to perform a correct analysis of such computations automatically, by extending previous work on a constraint-based approach to termination. Finally, we discuss possible extensions of the technique, including incorporating general term orderings.
C1 Katholieke Univ Leuven, Dept Comp Sci, B-3001 Heverlee, Belgium.
C3 KU Leuven
RP Katholieke Univ Leuven, Dept Comp Sci, Celestijnenlaan 200A, B-3001 Heverlee, Belgium.
EM Alexander.Serebrenik@cs.kuleuven.ac.be;
   Danny.DeSchreye@cs.kuleuven.ac.be
RI De Schreye, Daniel/B-1755-2014; Serebrenik, Alexander/E-1132-2012
OI De Schreye, Danny/0000-0002-8423-8598; Serebrenik,
   Alexander/0000-0002-1418-0095
CR APT KR, 1994, APPL ALGEBR ENG COMM, V5, P159, DOI 10.1007/BF01190828
   APT KR, 1997, SERIES COMPUTER SCI
   Bjorner N, 1997, THEOR COMPUT SCI, V173, P49, DOI 10.1016/S0304-3975(96)00191-0
   BOL RN, 1991, THESIS U AMSTERDAM
   Bossi A, 2002, THEOR PRACT LOG PROG, V2, P263, DOI 10.1017/S1471068402001382
   BOSSI A, 1994, THEOR COMPUT SCI, V124, P297, DOI 10.1016/0304-3975(92)00019-N
   BOSSI A, 1994, LECT NOTES COMPUTER, V850, P269
   BOSSI A, 1991, LECT NOTES COMPUT SC, V494, P153
   Bratko I., 2012, Prolog programming for Artificial Intelligence
   Bruynooghe M, 2002, LECT NOTES COMPUT SC, V2477, P477
   BUENO F, 1994, MIT PS LOG, P320
   CLOCKSIN WF, 1981, PROGRAMMING PROLOG
   Codish M, 1999, J LOGIC PROGRAM, V41, P103, DOI 10.1016/S0743-1066(99)00006-0
   COELHO H, 1988, PROLOG EXAMPLE
   COLON M, 2001, LNCS, V2031, P67, DOI DOI 10.1007/3-540-45319-96
   COLON M, 2002, LNCS, V2404, P442
   COLUSSI L, 1995, LECT NOTES COMPUTER, V976, P431
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cousot Patrick, 1976, P 2 INT S PROGRAMMIN
   Decorte S, 1999, ACM T PROGR LANG SYS, V21, P1137, DOI 10.1145/330643.330645
   DECORTE S, 1998, P 1998 JOINT INT C S, P235
   Dershowitz N, 2001, APPL ALGEBR ENG COMM, V12, P117, DOI 10.1007/s002000100065
   DESCHREYE D, 1990, LOGIC PROGRAMM, P649
   DESCHREYE D, 1992, P INT C 5 GEN COMP S, V1, P481
   Floyd R.W., 1967, P S APPL MATH, V19, P19
   GENAIM S, 2001, LECT NOTES COMPUTER, V2250, P685
   GENAIM S, 2002, LNCS, V2294, P126
   HETT W, 2001, P 99 99 PROLOG PROBL
   HOLZBAUR, 1995, TR9509 AUSTR RES I A
   *ILOG, 2001, ILOG SOLV 5 1 US MAN
   *IT MAST, 2000, MAST PROGR ENV
   JANSEN MJM, 1994, GAME ECON BEHAV, V6, P400, DOI 10.1006/game.1994.1023
   JANSSENS G, 1992, J LOGIC PROGRAM, V13, P205, DOI 10.1016/0743-1066(92)90032-X
   Katz S., 1975, Acta Informatica, V5, P333, DOI 10.1007/BF00264565
   Lindenstrauss N, 1997, LECT NOTES COMPUT SC, V1254, P444
   LINDENSTRAUSS N, 1997, P 14 INT C LOG PROGR, P63
   LINDENSTRAUSS N, 1998, LNCS, V1463, P206
   MCDONALD C, 1990, ARTIFICIAL INTELLIGE
   Mesnard F, 2002, LECT NOTES COMPUT SC, V2477, P509
   Mesnard F., 2003, ACM Transactions on Computational Logic, V4, P207, DOI 10.1145/635499.635503
   Mesnard F, 2001, LECT NOTES COMPUT SC, V2126, P93
   MESNARD F, 1996, P 1996 JOINT INT C S, P7
   O'Keefe R.A., 1990, The Craft of Prolog
   Ohlebusch E, 2001, APPL ALGEBR ENG COMM, V12, P73, DOI 10.1007/s002000100064
   PLUMER L, 1990, P ICLP 90, P634
   PLUMER L, 1991, INT LOG PROGR S
   Pollard Carl J., 1994, Head-driven phrase structure grammar
   Ruggieri S, 1997, LECT NOTES COMPUT SC, V1256, P838
   Serebrenik A, 2002, LECT NOTES COMPUT SC, V2477, P151
   Serebrenik A, 2001, LECT NOTES COMPUT SC, V2042, P69, DOI 10.1007/3-540-45142-0_5
   Shen YD, 1997, NEW GENERAT COMPUT, V15, P187, DOI 10.1007/BF03037237
   Shen YD, 2001, THEOR COMPUT SCI, V266, P441, DOI 10.1016/S0304-3975(00)00197-3
   *SICS, 2002, SICSTUS US MAN VERS
   Skordev D., 1997, Fundamenta Informaticae, V31, P195
   Sohn K., 1991, Proceedings of the Tenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P216, DOI 10.1145/113413.113433
   STERLING L, 1994, ART PROLOG
   ULLMAN JD, 1988, J ACM, V35, P345, DOI 10.1145/42282.42285
   Verbaeten S., 2001, ACM T COMPUT LOG, V2, P57
   VERSCHAETSE K, 1991, LOGIC PROGRAMM, P301
   WINSBOROUGH W, 1992, J LOGIC PROGRAM, V13, P259, DOI 10.1016/0743-1066(92)90033-Y
NR 60
TC 6
Z9 6
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP-NOV
PY 2004
VL 4
BP 719
EP 751
DI 10.1017/S1471068404002042
PN 5-6
PG 33
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 861VZ
UT WOS:000224448000007
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Balduccini, M
   Gelfond, M
AF Balduccini, M
   Gelfond, M
TI Diagnostic reasoning with A-Prolog
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; diagnostic reasoning; intelligent agents
ID LOGIC
AB In this paper, we suggest an architecture for a software agent which operates a physical device and is capable of making observations and of testing and repairing the device's components. We present simplified definitions of the notions of symptom, candidate diagnosis, and diagnosis which are based on the theory of action language A L. The definitions allow one to give a simple account of the agent's behavior in which many of the agent's tasks are reduced to computing stable models of logic programs.
C1 Texas Tech Univ, Dept Comp Sci, Lubbock, TX 79409 USA.
C3 Texas Tech University System; Texas Tech University
RP Texas Tech Univ, Dept Comp Sci, Lubbock, TX 79409 USA.
EM balduccini@cs.ttu.edu; mgelfond@cs.ttu.edu
OI Gelfond, Michael/0000-0003-0574-3092
CR [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], 1997, Proceedings of the 14th National Conference on Artificial Intelligence (AAAI), DOI DOI 10.1093/ACPROF:OSO/9780198235880.003.0005
   [Anonymous], 1997, Solving the frame problem-a mathematical investigation of the common sense law of inertia
   [Anonymous], 1978, LOGIC DATA BASES
   Baral C, 2000, SPRINGER INT SER ENG, V597, P257
   BARAL C, 2000, P 7 INT C PRINC KNOW, P311
   BARAL C, 1994, J LOGIC PROGRAM, V31, P201
   BRASS S, 1994, P 10 WORKSH LOG PROG
   Buccafurri F, 1997, LECT NOTES ARTIF INT, V1265, P2
   Cholewinski P, 1996, MOR KAUF R, P518
   Citrigno Simona., 1997, P 12 WORKSHOP LOGIC, P128
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M, 1998, LECT NOTES ARTIF INT, V1471, P164, DOI 10.1007/BFb0054795
   Gelfond M., 1998, ELECT T AI, V3
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Kowalski R, 1999, ANN MATH ARTIF INTEL, V25, P391, DOI 10.1023/A:1018934223383
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V, 1997, ARTIF INTELL, V96, P451, DOI 10.1016/S0004-3702(97)00057-X
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   MCCAIN T, 1995, ARTIF INTELL, V32, P57
   McCarthy J., 1969, Machine Intelligence, VVol. 4, P463
   McIlraith SA, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P483
   MCILRAITH T, 1998, P KR C, P167
   MCILRAITH T, 1997, P AAAI97, P43
   Niemela I, 1997, LECT NOTES ARTIF INT, V1265, P420
   NIEMELA I, ANN MATH ARTIFICIAL, V25, P241
   OTERO R, 2000, P 11 INT WORKSH PRIN, P171
   OTERO R, 1999, WORK NOT 3 WORKSH NO, P111
   REITER R, 1987, ARTIF INTELL, V32, P57, DOI 10.1016/0004-3702(87)90062-2
   SIMONS P, 1999, 5 INT C LPNMR99, P305
   Thielscher M, 1997, ARTIF INTELL, V89, P317, DOI 10.1016/S0004-3702(96)00033-1
   THIELSCHER M, 1998, LINKOPING ELECT ARTI, V3
   Thielscher M., 1997, Linkoping Electronic Articles in Computer and Information Science, V2
   Turner H, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P645
   Turner H, 1997, J LOGIC PROGRAM, V31, P245, DOI 10.1016/S0743-1066(96)00125-2
NR 35
TC 62
Z9 68
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL-SEP
PY 2003
VL 3
BP 425
EP 461
DI 10.1017/S1471068403001807
PN 4-5
PG 37
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 708LE
UT WOS:000184567800003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Varanasi, SC
   Mittal, N
   Gupta, G
AF Varanasi, Sarat Chandra
   Mittal, Neeraj
   Gupta, Gopal
TI Locksynth: Deriving Synchronization Code for Concurrent Data Structures
   with ASP
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; concurrent data structure synthesis
AB We present Locksynth, a tool that automatically derives synchronization needed for destructive updates to concurrent data structures that involve a constant number of shared heap memory write operations. Locksynth serves as the implementation of our prior work on deriving abstract synchronization code. Designing concurrent data structures involves inferring correct synchronization code starting with a prior understanding of the sequential data structure's operations. Further, an understanding of shared memory model and the synchronization primitives is also required. The reasoning involved transforming a sequential data structure into its concurrent version can be performed using Answer Set Programming, and we mechanized our approach in previous work. The reasoning involves deduction and abduction that can be succinctly modeled in ASP. We assume that the abstract sequential code of the data structure's operations is provided, alongside axioms that describe concurrent behavior. This information is used to automatically derive concurrent code for that data structure, such as dictionary operations for linked lists and binary search trees that involve a constant number of destructive update operations. We also are able to infer the correct set of locks (but not code synthesis) for external height-balanced binary search trees that involve left/right tree rotations. Locksynth performs the analyses required to infer correct sets of locks and as a final step, also derives the C++ synchronization code for the synthesized data structures. We also provide a performance analysis of the C++ code synthesized by Locksynth with the hand-crafted versions available from the Synchrobench microbenchmark suite. To the best of our knowledge, our tool is the first to employ ASP as a backend reasoner to perform concurrent data structure synthesis.
C1 [Varanasi, Sarat Chandra] Gen Elect Res, Schenectady, NY 12308 USA.
   [Mittal, Neeraj; Gupta, Gopal] Univ Texas Dallas, Richardson, TX 75080 USA.
C3 General Electric; University of Texas System; University of Texas Dallas
RP Varanasi, SC (corresponding author), Gen Elect Res, Schenectady, NY 12308 USA.
EM saratchandra.varanasi@ge.com; neerajm@utdallas.edu; gupta@utdallas.edu
CR Arbel M, 2014, PROCEEDINGS OF THE 2014 ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING (PODC'14), P196, DOI 10.1145/2611462.2611471
   Arias Joaquin, 2022, Practical Aspects of Declarative Languages: 24th International Symposium, PADL 2022, Proceedings. Lecture Notes in Computer Science, Programming and Software Engineering (13165), P117, DOI 10.1007/978-3-030-94479-7_8
   Arias J., 2019, THESIS TU MADRID SPA
   Arias J, 2022, THEOR PRACT LOG PROG, V22, P51, DOI 10.1017/S1471068421000156
   Arias J, 2018, THEOR PRACT LOG PROG, V18, P337, DOI 10.1017/S1471068418000285
   Boehm HJ, 2008, ACM SIGPLAN NOTICES, V43, P68, DOI 10.1145/1379022.1375591
   Clarke. E. M., 1982, LOGICS OF PROGRAMS, P52, DOI [10 . 1007 / BFb0025774, DOI 10.1007/BFB0025774]
   Distefano D, 2006, LECT NOTES COMPUT SC, V3920, P287
   Emerson EA, 2000, LECT NOTES ARTIF INT, V1831, P236
   Gebser M, 2018, KUNSTL INTELL, V32, P181, DOI 10.1007/s13218-018-0528-x
   Gelfond M, 2014, KNOWLEDGE REPRESENTATION, REASONING, AND THE DESIGN OF INTELLIGENT AGENTS: THE ANSWER-SET PROGRAMMING APPROACH, P1, DOI 10.1017/CBO9781139342124
   GRAMOLI V, 2015, PPOPP, P1
   HEIDELBERGER P, 1990, IEEE T COMPUT, V39, P133, DOI 10.1109/12.46289
   Herlihy M., 2020, The art of Multiprocessor Programming
   Krebbers R, 2017, ACM SIGPLAN NOTICES, V52, P205, DOI 10.1145/3093333.3009855
   Kroening Daniel, 2014, TOOLS ALGORITHMS CON, P389, DOI [10.1007/978-3-642-54862-8_26, DOI 10.1007/978-3-642-54862-8_26]
   Manson J, 2005, ACM SIGPLAN NOTICES, V40, P378, DOI 10.1145/1047659.1040336
   McKenney PaulE., 2013, Technical report
   Mulder I, 2022, PROCEEDINGS OF THE 43RD ACM SIGPLAN INTERNATIONAL CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '22), P809, DOI 10.1145/3519939.3523432
   Natarajan A, 2014, ACM SIGPLAN NOTICES, V49, P317, DOI [10.1145/2692916.2555256, 10.1145/2555243.2555256]
   OHearn Peter W., 2016, ACM SIGLOG NEWS, V3, P47, DOI DOI 10.1145/2984450.2984457
   Owicki S. S., 1975, PROVING PROPERTIES P
   Rustan K, 2010, LECT NOTES ARTIF INT, V6355, P348, DOI 10.1007/978-3-642-17511-4_20
   Shanny T, 2022, PROCEEDINGS OF THE 16TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, OSDI 2022, P321
   Vafeiadis V., 2006, Proceedings of the 2006 ACM SIGPLAN Symposium on Principles and Practice of Parallel Programming PPoPP'06, P129, DOI 10.1145/1122971.1122992
   Vafeiadis V., 2008, Ph. D. Dissertation
   Vafeiadis V, 2007, LECT NOTES COMPUT SC, V4703, P256
   Valois J. D., 1995, Proceedings of the Fourteenth Annual ACM Symposium on Principles of Distributed Computing, P214, DOI 10.1145/224964.224988
   Varanasi Sarat Chandra, 2022, Practical Aspects of Declarative Languages: 24th International Symposium, PADL 2022, Proceedings. Lecture Notes in Computer Science, Programming and Software Engineering (13165), P181, DOI 10.1007/978-3-030-94479-7_12
   Varanasi S. C., 2021, P 37 ICLP TECH COMM, V345, P219
   Vechev Martin, 2008, SIGPLAN Notices, V43, P125, DOI 10.1145/1379022.1375598
   Vechev M, 2010, POPL'10: PROCEEDINGS OF THE 37TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P327, DOI 10.1145/1706299.1706338
NR 32
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2023
VL 23
IS 4
SI SI
BP 812
EP 831
DI 10.1017/S1471068423000303
EA SEP 2023
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7Z0
UT WOS:001119136500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Barbara, V
   Leone, N
   Ricca, F
   Guarascio, M
   Manco, G
   Quarta, A
   Ritacco, E
AF Barbara, Vito
   Leone, Nicola
   Ricca, Francesco
   Guarascio, Massimo
   Manco, Giuseppe
   Quarta, Alessandro
   Ritacco, Ettore
TI Neuro-Symbolic AI for Compliance Checking of Electrical Control Panels
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE automated quality control systems; answer set programming; computer
   vision; data scarcity
AB Artificial Intelligence plays a main role in supporting and improving smart manufacturing and Industry 4.0, by enabling the automation of different types of tasks manually performed by domain experts. In particular, assessing the compliance of a product with the relative schematic is a time-consuming and prone-to-error process. In this paper, we address this problem in a specific industrial scenario. In particular, we define a Neuro-Symbolic approach for automating the compliance verification of the electrical control panels. Our approach is based on the combination of Deep Learning techniques with Answer Set Programming (ASP), and allows for identifying possible anomalies and errors in the final product even when a very limited amount of training data is available. The experiments conducted on a real test case provided by an Italian Company operating in electrical control panel production demonstrate the effectiveness of the proposed approach.
C1 [Barbara, Vito; Leone, Nicola; Ricca, Francesco] Univ Calabria, Arcavacata Di Rende, Italy.
   [Guarascio, Massimo; Manco, Giuseppe] ICAR CNR, Arcavacata Di Rende, Italy.
   [Quarta, Alessandro] Sapienza Univ Rome, Rome, Italy.
   [Ritacco, Ettore] Univ Udine, Udine, Italy.
C3 University of Calabria; Consiglio Nazionale delle Ricerche (CNR);
   Istituto di Calcolo e Reti ad Alte Prestazioni (ICAR-CNR); Sapienza
   University Rome; University of Udine
RP Barbara, V (corresponding author), Univ Calabria, Arcavacata Di Rende, Italy.
EM barbara.vito@unical.it; nicola.leone@unical.it;
   francesco.ricca@unical.it; massimo.guarascio@icar.cnr.it;
   giuseppe.manco@icar.cnr.it; alessandro.quarta@uniroma1.it;
   ettore.ritacco@uniud.it
RI Guarascio, Massimo/HTN-6431-2023; Manco, Giuseppe/O-2428-2015; Manco,
   Giuseppe/KDN-6515-2024
OI Guarascio, Massimo/0000-0001-7711-9833; Manco,
   Giuseppe/0000-0001-9672-3833; Manco, Giuseppe/0000-0001-9672-3833;
   QUARTA, ALESSANDRO/0000-0001-6319-2466
FU MIMIT [F/190138/01-03/X44]; MUR under PNRR project [PE0000013-FAIR]
FX The authors express sincere gratitude to the anonymous referees for
   their valuable suggestions, which contributed to the improvement of our
   work. We would also like to acknowledge the exceptional support of
   Dimitri Buelli, Stefano Ierace, Salvatore Iiritano, Giovanni Laboccetta,
   and Valerio Pesenti elapsed during the development of the system
   presented in this paper. Their expertise and dedication have been
   instrumental in shaping the success of our research. Research partially
   supported by MISE (today MIMIT) under projects "MAP4ID - Multipurpose
   Analytics Platform 4 Industrial Data" Proj. N. F/190138/01-03/X44 and
   MUR under PNRR project PE0000013-FAIR, Spoke 9 - Green-aware AI - WP9.1.
   This work has been carried out while Alessandro Quarta was enrolled in
   the Italian National Doctorate on Artificial Intelligence run by
   Sapienza University of Rome with University of Calabria. A preliminary
   version appeared in CEUR Workshop Proceedings vol. 3204 pp. 247-253.
CR Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   Banús N, 2021, SCI REP-UK, V11, DOI 10.1038/s41598-021-01254-x
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Bonatti P, 2010, LECT NOTES COMPUT SC, V6125, P159, DOI 10.1007/978-3-642-14309-0_8
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   Cohen William W, 2018, Journal of Artificial Intelligence Research, V1, P1
   dAvila Garcez, 2015, P 2015 AAAI SPRING S
   Derler Y, 2016, AI MAG, V37, P45
   Dodaro C, 2016, THEOR PRACT LOG PROG, V16, P653, DOI 10.1017/S1471068416000284
   Donadello I, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1596
   Dosovitskiy A., 2020, INT C LEARNING REPRE
   Ebrahimi M, 2021, APPL INTELL, V51, P6326, DOI 10.1007/s10489-020-02165-6
   Erdem E, 2016, AI MAG, V37, P53, DOI 10.1609/aimag.v37i3.2678
   Gebser M, 2020, THEOR PRACT LOG PROG, V20, P176, DOI 10.1017/S1471068419000061
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Grasso Giovanni, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P432, DOI 10.1007/978-3-642-20832-4_27
   Grasso G, 2009, LECT NOTES COMPUT SC, V5753, P591, DOI 10.1007/978-3-642-04238-6_63
   He K., 2016, PROC CVPR IEEE, P770, DOI [10.1109/CVPR.2016.90, DOI 10.1109/CVPR.2016.90]
   He KM, 2020, IEEE T PATTERN ANAL, V42, P386, DOI [10.1109/TPAMI.2018.2844175, 10.1109/ICCV.2017.322]
   Javaid M, 2022, J IND INTEGR MANAG, V07, P83, DOI 10.1142/S2424862221300040
   Kautz HA, 2022, AI MAG, V43, P105, DOI 10.1002/aaai.12036
   Kaya M, 2019, SYMMETRY-BASEL, V11, DOI 10.3390/sym11091066
   Lin BY, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P2829
   Liu W, 2016, LECT NOTES COMPUT SC, V9905, P21, DOI 10.1007/978-3-319-46448-0_2
   Redmon J., 2016, PROC CVPR IEEE, DOI [10.1109/CVPR.2016.91, DOI 10.1109/CVPR.2016.91]
   Ren SQ, 2017, IEEE T PATTERN ANAL, V39, P1137, DOI 10.1109/TPAMI.2016.2577031
   Rocktaschel T, 2017, ADV NEURAL INFORM PR, P3788
   Schmitt J, 2020, ADV ENG INFORM, V45, DOI 10.1016/j.aei.2020.101101
   Subakti H, 2018, P INT COMP SOFTW APP, P63, DOI 10.1109/COMPSAC.2018.10204
   Tanuska P, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21072376
   Villalba-Diez J, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19183987
   Yang Z, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1755
NR 34
TC 0
Z9 0
U1 6
U2 9
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2023
VL 23
IS 4
SI SI
BP 748
EP 764
AR PII S1471068423000170
DI 10.1017/S1471068423000170
EA JUL 2023
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7Z0
UT WOS:001025500500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lierler, Y
AF Lierler, Yuliya
TI Strong Equivalence and Program Structure in Arguing Essential
   Equivalence between Logic Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE program analysis; strong; essential equivalence
ID ANSWER; UNIFORM; NOTIONS
AB Answer set programming is a prominent declarative programming paradigm used in formulating combinatorial search problems and implementing different knowledge representation formalisms. Frequently, several related and yet substantially different answer set programs exist for a given problem. Sometimes these encodings may display significantly different performance. Uncovering precise formal links between these programs is often important and yet far from trivial. This paper presents formal results carefully relating a number of interesting program rewritings. It also provides the proof of correctness of system projector concerned with automatic program rewritings for the sake of efficiency.
C1 [Lierler, Yuliya] Univ Nebraska, 6001 Dodge St, Omaha, NE 68182 USA.
C3 University of Nebraska System
RP Lierler, Y (corresponding author), Univ Nebraska, 6001 Dodge St, Omaha, NE 68182 USA.
EM ylierler@unomaha.edu
OI Lierler, Yuliya/0000-0002-6146-623X
FU NSF [1707371]; Div Of Information & Intelligent Systems; Direct For
   Computer & Info Scie & Enginr [1707371] Funding Source: National Science
   Foundation
FX We are grateful to Pedro Cabalar, Jorge Fandinno, Nicholas Hippen,
   Vladimir Lifschitz, Miroslaw Truszczynski for valuable discussions on
   the subject of this paper. We are also thankful to the anonymous
   reviewers for their help to improve the presentation of the material in
   the paper. Yuliya Lierler was partially supported by the NSF 1707371
   grant.
CR [Anonymous], 2000, A Short Introduction to Intuitionistic Logic
   Babb J, 2013, LECT NOTES COMPUT SC, V8148, P122, DOI 10.1007/978-3-642-40564-8_13
   Ben-Eliyahu R., 1994, Annals of Mathematics and Artificial Intelligence, V12, P53, DOI 10.1007/BF01530761
   Bichler M., 2016, P INT S LOG BAS PROG
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Buddenhagen M., 2015, P INT C LOG PROGR NO
   Eiter T, 2003, LECT NOTES COMPUT SC, V2916, P224, DOI 10.1007/978-3-540-24599-5_16
   Eiter T., 2006, P INT C PRINC KNOWL
   Eiter T., 2006, P EUR C LOG ART INT
   Eiter T, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P97
   Erdogan ST, 2004, LECT NOTES ARTIF INT, V2923, P114
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Ferraris P, 2005, THEOR PRACT LOG PROG, V5, P45, DOI 10.1017/S1471068403001923
   Ferraris P, 2011, ARTIF INTELL, V175, P236, DOI 10.1016/j.artint.2010.04.011
   Ferraris P, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P797
   Gebser M, 2015, THEOR PRACT LOG PROG, V15, P449, DOI 10.1017/S1471068415000150
   GELFOND M, 1991, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P230
   Gelfond M, 2014, KNOWLEDGE REPRESENTATION, REASONING, AND THE DESIGN OF INTELLIGENT AGENTS: THE ANSWER-SET PROGRAMMING APPROACH, P1, DOI 10.1017/CBO9781139342124
   Gelfond M., 1998, Electron. Trans. Artif. Intell., V3, P195
   Giunchiglia E, 2004, ARTIF INTELL, V153, P49, DOI [10.1016/j.artint.2002.12.001, 10.1016/j.artint.2003.12.001]
   Harrison A., 2016, THEORY PRACTICE LOGI
   Hippen N., 2019, P 21 INT S PRACT ASP
   Janhunen T, 2007, LECT NOTES COMPUT SC, V4483, P175, DOI 10.1007/978-3-540-72200-7_16
   Lee J., 2013, INPROCEEDINGS 23 INT, P983
   Lee J., 2008, P 23 NAT C ART INT A, P472
   Leite J, 2017, LECT NOTES ARTIF INT, V10377, P10, DOI 10.1007/978-3-319-61660-5_2
   Lierler, 2019, P 21 INT S PRACT ASP
   Lifschitz, 2016, INTRO MATH LOGIC HAN
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V, 1999, LECT NOTES ARTIF INT, V1730, P92, DOI 10.1007/3-540-46767-X_7
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lifschitz V, 2007, LECT NOTES COMPUT SC, V4483, P188, DOI 10.1007/978-3-540-72200-7_17
   Lifschitz V, 2008, FOUND ARTIF INTELL, P3, DOI 10.1016/S1574-6526(07)03001-5
   Linke T, 2004, LECT NOTES COMPUT SC, V3132, P225, DOI 10.1007/978-3-540-27775-0_16
   Lukasiewicz J, 1941, ENTRETIENS ZURICH SU, V12, P82
   Mints G, 2010, ANN PURE APPL LOGIC, V162, P237, DOI 10.1016/j.apal.2010.09.009
   Oetsch J, 2008, LECT NOTES COMPUT SC, V5366, P591, DOI 10.1007/978-3-540-89982-2_49
   Pearce D, 2012, J COMPUT SYST SCI, V78, P86, DOI 10.1016/j.jcss.2011.02.013
   Woltran S, 2004, LECT NOTES COMPUT SC, V3229, P161, DOI 10.1007/978-3-540-30227-8_16
   Woltran S, 2008, THEOR PRACT LOG PROG, V8, P217, DOI 10.1017/S1471068407003250
NR 41
TC 0
Z9 0
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2022
VL 22
IS 3
BP 335
EP 366
AR PII S1471068421000545
DI 10.1017/S1471068421000545
EA MAR 2022
PG 32
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 6N1DF
UT WOS:000770487700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU De Angelis, E
   Fioravanti, F
   Gallagher, JP
   Hermenegildo, MV
   Pettorossi, A
   Proietti, M
AF De Angelis, Emanuele
   Fioravanti, Fabio
   Gallagher, John P.
   Hermenegildo, Manuel, V
   Pettorossi, Alberto
   Proietti, Maurizio
TI Analysis and Transformation of Constrained Horn Clauses for Program
   Verification
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Program verification; program analysis; program transformation;
   constrained Horn clauses; constraint logic programming
ID CONJUNCTIVE PARTIAL DEDUCTION; EFFICIENT SMT SOLVER; ABSTRACT
   INTERPRETATION; LOGIC PROGRAMS; BOUNDS ANALYSIS; MODEL CHECKING;
   FLOW-ANALYSIS; COST-ANALYSIS; SPECIALIZATION; GENERATION
AB This paper surveys recent work on applying analysis and transformation techniques that originate in the field of constraint logic programming (CLP) to the problem of verifying software systems. We present specialization-based techniques for translating verification problems for different programming languages, and in general software systems, into satisfiability problems for constrained Horn clauses (CHCs), a term that has become popular in the verification field to refer to CLP programs. Then, we describe static analysis techniques for CHCs that may be used for inferring relevant program properties, such as loop invariants. We also give an overview of some transformation techniques based on specialization and fold/unfold rules, which are useful for improving the effectiveness of CHC satisfiability tools. Finally, we discuss future developments in applying these techniques.
C1 [De Angelis, Emanuele; Proietti, Maurizio] IASI, CNR, Rome, Italy.
   [Fioravanti, Fabio] Univ G DAnnunzio, DEC, Chieti, Italy.
   [Gallagher, John P.] Roskilde Univ, Roskilde, Denmark.
   [Gallagher, John P.; Hermenegildo, Manuel, V] IMDEA Software Inst, Madrid, Spain.
   [Hermenegildo, Manuel, V] Univ Politecn Madrid UPM, Madrid, Spain.
   [Pettorossi, Alberto] Univ RomeTor Vergata, DICII, Rome, Italy.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Analisi dei
   Sistemi ed Informatica "Antonio Ruberti" (IASI-CNR); G d'Annunzio
   University of Chieti-Pescara; Roskilde University; IMDEA Software
   Institute; Universidad Politecnica de Madrid
RP De Angelis, E (corresponding author), IASI, CNR, Rome, Italy.
EM emanuele.deangelis@iasi.cnr.it; fioravanti@unich.it; jpg@ruc.dk;
   manuel.hermenegildo@imdea.org; pettorossi@info.uniroma2.it;
   maurizio.proietti@iasi.cnr.it
RI ; Hermenegildo, Manuel/I-4418-2015
OI FIORAVANTI, Fabio/0000-0002-1268-7829; Proietti,
   Maurizio/0000-0003-3835-4931; Gallagher, John P./0000-0001-6984-7419;
   Hermenegildo, Manuel/0000-0002-7583-323X; De Angelis,
   Emanuele/0000-0002-7319-8439
FU Spanish MICINN [2019-108528RB-C21, Madrid M141047003, P2018/TCS-4339
   BLOQUES-CM]; Tezos Foundation
FX Research partially funded by Spanish MICINN 2019-108528RB-C21 ProCode
   project, the Madrid M141047003 N-GREENS and P2018/TCS-4339 BLOQUES-CM
   programs, and the Tezos Foundation.
CR Albarghouthi A, 2017, LECT NOTES COMPUT SC, V10422, P1, DOI 10.1007/978-3-319-66706-5_1
   Albert E, 2007, LECT NOTES COMPUT SC, V4421, P157
   Albert E, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P368
   Albert E, 2018, SOFTW TEST VERIF REL, V28, DOI 10.1002/stvr.1661
   Albert E, 2011, J AUTOM REASONING, V46, P161, DOI 10.1007/s10817-010-9174-1
   Albert E, 2010, PEPM '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN WORKSHOP ON PARTIAL EVALUATION AND PROGRAM MANIPULATION, P25, DOI 10.1145/1706356.1706363
   Alberti F, 2015, J AUTOM REASONING, V54, P327, DOI 10.1007/s10817-015-9323-7
   Amaral C, 2014, LECT NOTES COMPUT SC, V8475, P1, DOI 10.1007/978-3-319-07151-0_1
   [Anonymous], 1990, HDB THEOR COMPUT SCI
   [Anonymous], 2000, ICFP 00 MONTR CAN SE
   [Anonymous], 1970, Dokl
   [Anonymous], 2013, Proceedings (Lecture Notes in Computer Science, DOI DOI 10.1007/978-3-642-39799
   [Anonymous], 1982, Logic Programming
   [Anonymous], 2001, TECHNICAL REPORT DSS
   [Anonymous], 2005, I KPAI
   [Anonymous], 1992, Semantics with applications: a formal introduction
   [Anonymous], 1993, Partial Evaluation and Automatic Program Generation
   APT KR, 1994, J LOGIC PROGRAM, V20, P9, DOI 10.1016/0743-1066(94)90024-8
   Bagnara R, 2008, SCI COMPUT PROGRAM, V72, P3, DOI 10.1016/j.scico.2007.08.001
   Bancilhon F., 1986, PODS 86, P1
   Banda G, 2009, LECT NOTES COMPUT SC, V5438, P55, DOI 10.1007/978-3-642-00515-2_5
   BARBUTI R, 1992, SCI COMPUT PROGRAM, V19, P281, DOI 10.1016/0167-6423(92)90038-D
   Barnett M, 2006, LECT NOTES COMPUT SC, V4111, P364
   Barrett Clark, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P171, DOI 10.1007/978-3-642-22110-1_14
   Barrett C., 2016, The Satisfiability Modulo Theories Library (SMT-LIB)
   Barrett C.W., 2018, Handbook of Model Checking, P305, DOI DOI 10.1007/978-3-319-10575-8_11
   Barthe Gilles, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P200, DOI 10.1007/978-3-642-21437-0_17
   Basold H, 2019, LECT NOTES COMPUT SC, V11423, P783, DOI 10.1007/978-3-030-17184-1_28
   Benoy F, 1997, LECT NOTES COMPUT SC, V1207, P204
   BENTON N, 2004, POPL, P14
   Bjorner N, 2015, LECT NOTES COMPUT SC, V9300, P24, DOI 10.1007/978-3-319-23534-9_2
   Blanchet B, 2016, Foundations and Trends in Privacy and Security, V1, P1, DOI DOI 10.1561/3300000004
   Blazy S, 2009, J AUTOM REASONING, V43, P263, DOI 10.1007/s10817-009-9148-3
   Borralleras C, 2012, J AUTOM REASONING, V48, P107, DOI 10.1007/s10817-010-9196-8
   Bradley A. R., 2007, The Calculus of Computation
   Bradley AR, 2011, LECT NOTES COMPUT SC, V6538, P70, DOI 10.1007/978-3-642-18275-4_7
   Brain M, 2014, FORM METHOD SYST DES, V45, P213, DOI 10.1007/s10703-013-0203-7
   Brough D. R., 1991, New Generation Computing, V9, P115, DOI 10.1007/BF03037639
   Brummayer R, 2009, LECT NOTES COMPUT SC, V5505, P174, DOI 10.1007/978-3-642-00768-2_16
   Bueno F., 1997, PROC 3 INT WS AUTOMA, P155
   BULYONKOV MA, 1984, ACTA INFORM, V21, P473, DOI 10.1007/BF00271642
   Bundy A., 2001, HDB AUTOMATED REASON, P845, DOI DOI 10.1016/B978-044450813-3/50015-1
   Burn TC, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3158099
   BURSTALL RM, 1977, J ACM, V24, P44, DOI 10.1145/321992.321996
   Casso, 2019, LNCS, V12042, P159
   Champion A, 2020, J AUTOM REASONING, V64, P1393, DOI 10.1007/s10817-020-09571-y
   Churchill B, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P1027, DOI 10.1145/3314221.3314596
   Çiçek E, 2017, ACM SIGPLAN NOTICES, V52, P316, DOI 10.1145/3093333.3009858
   Cimatti A, 2013, LECT NOTES COMPUT SC, V7795, P93
   Clark K. L., 1978, Logic and data bases, P293
   Clarke E, 2003, J ACM, V50, P752, DOI 10.1145/876638.876643
   Clarke EM, 1999, MODEL CHECKING, P1
   Codish M, 1995, J LOGIC PROGRAM, V25, P249, DOI 10.1016/0743-1066(95)00064-X
   CODISH M, 1994, THEOR COMPUT SCI, V124, P93, DOI 10.1016/0304-3975(94)90055-8
   Codish M, 1997, J LOGIC PROGRAM, V32, P247, DOI 10.1016/S0743-1066(96)00143-4
   Coppit D, 2005, IEEE T SOFTWARE ENG, V31, P328, DOI 10.1109/TSE.2005.52
   Corsini, 1994, LECT NOTES COMPUTER, V714, P75
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   Cousot Patrick, 1978, P 5 ACM SIGACT SIGPL, p84S96, DOI DOI 10.1145/512760.512770
   Craig SJ, 2003, LECT NOTES COMPUT SC, V2890, P148
   Craig W., 1957, J.Symb. Log, V22, P269, DOI DOI 10.2307/2963594
   Cui BQ, 2000, LECT NOTES ARTIF INT, V1861, P478
   De Angelis E, 2017, SCI COMPUT PROGRAM, V147, P78, DOI 10.1016/j.scico.2016.11.002
   De Angelis E, 2015, PROCEEDINGS OF THE 17TH INTERNATIONAL SYMPOSIUM ON PRINCIPLES AND PRACTICE OF DECLARATIVE PROGRAMMING (PPDP 2015), P91, DOI 10.1145/2790449.2790529
   De Angelis E, 2014, SCI COMPUT PROGRAM, V95, P149, DOI 10.1016/j.scico.2014.05.017
   De Angelis E., 2014, Lecture Notes in Computer Science, V8413, P568, DOI [DOI 10.1007/978-3-642-54862-8_47, 10.1007/978-3-642-54862-8_47]
   De Angelis E., 2017, LNCS, V10855, P289
   De Angelis E, 2020, LECT NOTES COMPUT SC, V12166, P83, DOI 10.1007/978-3-030-51074-9_6
   De Angelis E, 2019, LECT NOTES COMPUT SC, V11823, P186, DOI 10.1007/978-3-030-31157-5_12
   De Angelis E, 2019, FUND INFORM, V165, P205, DOI 10.3233/FI-2019-1783
   De Angelis E, 2018, THEOR PRACT LOG PROG, V18, P452, DOI 10.1017/S1471068418000157
   De Angelis E, 2018, THEOR PRACT LOG PROG, V18, P126, DOI 10.1017/S1471068417000497
   De Angelis E, 2016, LECT NOTES COMPUT SC, V9837, P147, DOI 10.1007/978-3-662-53413-7_8
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   De Schreye D, 1999, J LOGIC PROGRAM, V41, P231, DOI 10.1016/S0743-1066(99)00030-8
   DEBRAY S, 1994, J LOGIC PROGRAM, V18, P149, DOI 10.1016/0743-1066(94)90050-7
   Debray S, 1997, LOGIC PROGRAMM, P291
   DEBRAY SK, 1990, SIGPLAN NOTICES, V25, P174, DOI 10.1145/93548.93564
   DEBRAY SK, 1993, ACM T PROGR LANG SYS, V15, P826, DOI 10.1145/161468.161472
   DeLaBanda MG, 1996, ACM T PROGR LANG SYS, V18, P564, DOI 10.1145/232706.232734
   DELABANDA MG, 1993, MIT PS LOG, P437
   Delzanno G., 2001, International Journal on Software Tools for Technology Transfer, V3, P250, DOI 10.1007/s100090100049
   Delzanno G, 1999, LECT NOTES COMPUT SC, V1579, P223
   Demyanova Y, 2017, LECT NOTES COMPUT SC, V10227, P265, DOI 10.1007/978-3-319-57288-8_18
   Doménech JJ, 2019, THEOR PRACT LOG PROG, V19, P990, DOI 10.1017/S1471068419000310
   Donzeau-Gouge, 1984, INTERACTIVE PROGRAMM, P128
   Dutertre B, 2014, LECT NOTES COMPUT SC, V8559, P737, DOI 10.1007/978-3-319-08867-9_49
   Een N., 2011, 2011 Formal Methods in Computer-Aided Design (FMCAD), P125
   Enderton H. B., 2001, A mathematical introduction to logic
   Esparza J, 2010, J ACM, V57, DOI 10.1145/1857914.1857917
   Etalle S, 1996, THEOR COMPUT SCI, V166, P101, DOI 10.1016/0304-3975(95)00148-4
   Fedyukovich G, 2018, LECT NOTES COMPUT SC, V10981, P124, DOI 10.1007/978-3-319-96145-3_7
   Felsing D, 2014, P 29 ACM IEEE INT C, P349, DOI [10.1145/2642937.2642987, DOI 10.1145/2642937.2642987]
   Filliâtre JC, 2013, LECT NOTES COMPUT SC, V7792, P125, DOI 10.1007/978-3-642-37036-6_8
   Fioravanti F, 2004, LECT NOTES COMPUT SC, V3049, P291
   Fioravanti F, 2001, LECT NOTES COMPUT SC, V2042, P125, DOI 10.1007/3-540-45142-0_8
   Fioravanti F, 2015, J LOGIC COMPUT, V25, P1263, DOI 10.1093/logcom/ext071
   Fioravanti F, 2013, FUND INFORM, V127, P115, DOI 10.3233/FI-2013-899
   Fioravanti F, 2013, FUND INFORM, V124, P483, DOI 10.3233/FI-2013-845
   Fioravanti F, 2013, THEOR PRACT LOG PROG, V13, P175, DOI 10.1017/S1471068411000627
   Fioravanti F, 2012, FUND INFORM, V119, P281, DOI 10.3233/FI-2012-738
   Fribourg L., 1997, Constraints, V2, P305, DOI 10.1023/A:1009747629591
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Futamura Y., 1971, Systems, Computers, Controls, V54-C, P721
   Gallagher, 1995, ILPS 95, P351
   Gallagher J. P., 1993, Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation. PEPM'93, P88, DOI 10.1145/154630.154640
   GALLAGHER JP, 1994, MIT PS LOG, P599
   Gange G, 2015, THEOR PRACT LOG PROG, V15, P526, DOI 10.1017/S1471068415000204
   Gange G, 2013, THEOR PRACT LOG PROG, V13, P593, DOI 10.1017/S1471068413000379
   Garcia-Contreras Isabel, 2020, Logic-Based Program Synthesis and Transformation. 29th International Symposium, LOPSTR 2019. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12042), P36, DOI 10.1007/978-3-030-45260-5_3
   Garcia-Contreras I., 2020, THEOR PRACT LOG PROG
   Gauch S, 2007, LECT NOTES COMPUT SC, P54, DOI 10.1007/978-3-540-72079-9_2
   Godefroid Patrice, 2005, ACM SIGPLAN NOTICES, P213, DOI DOI 10.1145/1064978.1065036
   Godlin B, 2008, ACTA INFORM, V45, P403, DOI 10.1007/s00236-008-0075-2
   Goguen J. A., 1982, Proceedings of the 1982 Symposium on Security and Privacy, P11
   Gómez-Zamalloa M, 2010, THEOR PRACT LOG PROG, V10, P659, DOI 10.1017/S1471068410000347
   Gómez-Zamalloa M, 2009, INFORM SOFTWARE TECH, V51, P1409, DOI 10.1016/j.infsof.2009.04.010
   Gotlieb A., 1998, Software Engineering Notes, V23, P53, DOI 10.1145/271775.271790
   Graf S, 1997, LECT NOTES COMPUT SC, V1254, P72
   Grebenshchikov S, 2012, ACM SIGPLAN NOTICES, V47, P405, DOI 10.1145/2345156.2254112
   Grishchenko I, 2018, LECT NOTES COMPUT SC, V10981, P51, DOI 10.1007/978-3-319-96145-3_4
   Gulwani S, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P375, DOI 10.1145/1542476.1542518
   Gupta G, 2007, LECT NOTES COMPUT SC, V4670, P27, DOI 10.1007/978-3-540-74610-2_4
   Gurfinkel A, 2015, LECT NOTES COMPUT SC, V9206, P343, DOI 10.1007/978-3-319-21690-4_20
   Hamza J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360592
   Heizmann M, 2009, LECT NOTES COMPUT SC, V5673, P69, DOI 10.1007/978-3-642-03237-0_7
   Henriksen KS, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P184
   Hermenegildo M, 2000, ACM T PROGR LANG SYS, V22, P187, DOI 10.1145/349214.349216
   Hermenegildo MV, 2005, SCI COMPUT PROGRAM, V58, P115, DOI 10.1016/j.scico.2005.02.006
   HERMENEGILDO MV, 1992, J LOGIC PROGRAM, V13, P349, DOI 10.1016/0743-1066(92)90053-6
   Hermenegildo MV, 1999, LOGIC PROGRAMM, P54
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Hoder Krystof, 2012, LNCS, P157, DOI [10.1007/978-3-642-31612-8_13, DOI 10.1007/978-3-642-31612-8_13, DOI 10.1007/978-3-642-31612-813]
   Hojjat H., 2018, 2018 FORMAL METHODS, P1, DOI DOI 10.23919/FMCAD.2018.8603013
   Jacobs, 1990, INT C LOG PROGR, P718
   Jaffar J., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P111, DOI 10.1145/41625.41635
   Jaffar J, 2004, REAL TIM SYST SYMP P, P175, DOI 10.1109/REAL.2004.5
   Jaffar Joxan, 2012, Computer Aided Verification. Proceedings 24th International Conference, CAV 2012, P758, DOI 10.1007/978-3-642-31424-7_61
   JAFFAR J, 1992, ACM T PROGR LANG SYS, V14, P339, DOI 10.1145/129393.129398
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   Jaffar J, 1998, J LOGIC PROGRAM, V37, P1, DOI 10.1016/S0743-1066(98)10002-X
   JAFFAR J, 1984, NEW GENERAT COMPUT, V2, P207, DOI 10.1007/BF03037057
   Jaffar J, 2009, LECT NOTES COMPUT SC, V5732, P454, DOI 10.1007/978-3-642-04244-7_37
   Jeannet B, 2009, LECT NOTES COMPUT SC, V5643, P661, DOI 10.1007/978-3-642-02658-4_52
   Jhala R, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592438
   Jovanovic Dejan, 2012, Automated Reasoning. Proceedings 6th International Joint Conference, IJCAR 2012, P339, DOI 10.1007/978-3-642-31365-3_27
   Kafle B, 2018, THEOR PRACT LOG PROG, V18, P553, DOI 10.1017/S1471068418000091
   Kafle B, 2018, THEOR PRACT LOG PROG, V18, P224, DOI 10.1017/S1471068418000030
   Kafle B, 2017, SCI COMPUT PROGRAM, V137, P125, DOI 10.1016/j.scico.2017.01.002
   Kafle B, 2017, COMPUT LANG SYST STR, V47, P2, DOI 10.1016/j.cl.2015.11.001
   Kafle B, 2016, LECT NOTES COMPUT SC, V9779, P261, DOI 10.1007/978-3-319-41528-4_14
   Kahsai T, 2016, LECT NOTES COMPUT SC, V9779, P352, DOI 10.1007/978-3-319-41528-4_19
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   KANAMORI T, 1993, J LOGIC PROGRAM, V15, P31, DOI 10.1016/0743-1066(93)90012-6
   Kelly AD, 1998, SOFTWARE PRACT EXPER, V28, P199, DOI 10.1002/(SICI)1097-024X(199802)28:2<199::AID-SPE150>3.0.CO;2-4
   Khedker UP, 2008, LECT NOTES COMPUT SC, V4959, P213
   Kimmig A, 2011, THEOR PRACT LOG PROG, V11, P235, DOI 10.1017/S1471068410000566
   Kirkeby M. H., 2019, ELECTRON P THEOR COM, V312, P43
   Klemen M., 2018, PPDP18 P 20 INT S, P1
   Komuravelli Anvesh, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P846, DOI 10.1007/978-3-642-39799-8_59
   Komuravelli A, 2016, FORM METHOD SYST DES, V48, P175, DOI 10.1007/s10703-016-0249-4
   KOWALSKI R, 1971, ARTIF INTELL, V2, P227, DOI 10.1016/0004-3702(71)90012-9
   Lahiri ShuvenduK., 2013, ACM SIGSOFT S FDN SO, P345, DOI DOI 10.1145/2491411.2491452
   Leavens Gary T, 2006, SIGSOFT Softw. Eng. Notes, V31, P1, DOI [10.1145/1127878.1127884, DOI 10.1145/1127878.1127884]
   LECHARLIER B, 1994, ACM T PROGR LANG SYS, V16, P35, DOI 10.1145/174625.174627
   Leino KRM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1488, DOI 10.1109/ICSE.2013.6606754
   Leroy X., 2017, OCAML SYSTEM RELEASE
   Leuschel, 2000, LECT NOTES ARTIFICIA
   Leuschel M, 2005, LECT NOTES COMPUT SC, V3444, P61
   Leuschel M, 2002, THEOR PRACT LOG PROG, V2, P461, DOI 10.1017/S147106840200145X
   Leuschel M, 2000, LECT NOTES COMPUT SC, V1817, P62, DOI 10.1007/10720327_5
   Leuschel M, 1998, ACM T PROGR LANG SYS, V20, P208, DOI 10.1145/271510.271525
   Leuschel M, 1998, NEW GENERAT COMPUT, V16, P283, DOI 10.1007/BF03037483
   LEUSCHEL M, 1996, LNCS, V1207, P83
   LEUSCHEL M, 2006, P PEPM 2006, P88
   Liang TY, 2016, FORM METHOD SYST DES, V48, P206, DOI 10.1007/s10703-016-0247-6
   Liqat U., 2016, Foundational and Practical Aspects of Resource Analysis. 4th International Workshop, FOPARA 2015. Revised Selected Papers: LNCS 9964, P81, DOI 10.1007/978-3-319-46559-3_5
   Liqat U, 2014, LECT NOTES COMPUT SC, V8901, P72, DOI 10.1007/978-3-319-14125-1_5
   Lloyd J. W., 1987, Foundations of logic programming
   LLOYD JW, 1991, J LOGIC PROGRAM, V11, P217, DOI 10.1016/0743-1066(91)90027-M
   Lopes NP, 2016, INT J SOFTW TOOLS TE, V18, P359, DOI 10.1007/s10009-015-0366-1
   Lopez-Garc ia P, 2015, ARXIV151209369
   Lopez-Garcia P, 2018, THEOR PRACT LOG PROG, V18, P167, DOI 10.1017/S1471068418000042
   Lopez-Garcia P, 2016, THEOR PRACT LOG PROG, V16, P849, DOI 10.1017/S1471068416000442
   Lopez-Garcia Pedro, 2012, Foundational and Practical Aspects of Resource Analysis. Second International Workshop, FOPARA 2011. Revised Selected Papers, P54, DOI 10.1007/978-3-642-32495-6_4
   Madhusudan P, 2011, POPL 11: PROCEEDINGS OF THE 38TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P611, DOI 10.1145/1926385.1926455
   Marriott K., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P733
   MARTENS B, 1995, P ICLP 95, P597
   McMillan, 2013, 20136 MSR
   McMillan K. L, 2013, VMCAI 2013
   Mendelson E., 2015, Introduction to Mathematical Logic, V6, DOI [10.1201/b18519, DOI 10.1201/B18519]
   Mendez-Lojo M., 2007, LNCS, V4915, P154, DOI DOI 10.1007/978-3-540-78769-3_11
   Mesnard F, 2020, THEOR PRACT LOG PROG, V20, P671, DOI 10.1017/S1471068420000216
   Meudec C, 2001, SOFTW TEST VERIF REL, V11, P81, DOI 10.1002/stvr.225
   Meyer B., 1988, Object-Oriented Software Construction
   Monniaux D, 2000, LECT NOTES COMPUT SC, V1824, P322
   Mordvinov D., 2017, LPAR-21, 21st International Conference on Logic for Programming, Artificial Intelligence and Reasoning, Maun, Botswana, May 7-12, 2017, volume 46 of EPiC Series in Computing, V46, P338
   Mordvinov D, 2019, 2019 FORMAL METHODS IN COMPUTER AIDED DESIGN (FMCAD), P152, DOI [10.23919/fmcad.2019.8894274, 10.23919/FMCAD.2019.8894274]
   Munoz, 1997, RT0203
   MUTHUKUMAR K, 1992, J LOGIC PROGRAM, V13, P315, DOI 10.1016/0743-1066(92)90035-2
   Muthukumar K., 1990, Technical Report ACT-DC-153-90
   Navas J., 2008, 6 NASA LANGLEY FORMA, P29
   Navas J, 2007, LECT NOTES COMPUT SC, V4670, P348, DOI 10.1007/978-3-540-74610-2_24
   Navas J, 2009, ELECTRON NOTES THEOR, V253, P65, DOI 10.1016/j.entcs.2009.11.015
   Nelson G., 1979, ACM Transactions on Programming Languages and Systems, V1, P245, DOI 10.1145/357073.357079
   NILSSON U, 1995, THEOR COMPUT SCI, V142, P125, DOI 10.1016/0304-3975(94)00223-6
   Nipkow T., 2002, ISABELLE HOL PROOF A, DOI DOI 10.1007/3-540-45949-9
   Ochoa C, 2006, LECT NOTES COMPUT SC, V3901, P80, DOI 10.1007/11680093_6
   P erez-Carrasco V., 2020, LNCS
   Peralta JC, 2003, LECT NOTES COMPUT SC, V2664, P90, DOI 10.1007/3-540-45013-0_8
   Peralta JC, 1998, LECT NOTES COMPUT SC, V1503, P246
   PETTOROSSI A, 1994, J LOGIC PROGRAM, V20, P261, DOI 10.1016/0743-1066(94)90028-0
   PLOTKIN G, 1981, DAIMIFN19 AARH U COM
   PROIETTI M, 1993, J LOGIC PROGRAM, V16, P123, DOI 10.1016/0743-1066(93)90025-C
   PROIETTI M, 1995, THEOR COMPUT SCI, V142, P89, DOI 10.1016/0304-3975(94)00227-A
   Puebla, 1996, LNCS, V1145, P270
   Puebla G, 1999, J LOGIC PROGRAM, V41, P279, DOI 10.1016/S0743-1066(99)00031-X
   Puebla G, 2000, LECT NOTES COMPUT SC, V1817, P273, DOI 10.1007/10720327_16
   Puebla G., 1999, Proceedings of the 1999 ACM SIGPLAN. Workshop on Partial Evaluation and Semantics-Based Program Manipulation (PEPM'99), P75
   Puebla G, 2006, LECT NOTES COMPUT SC, V4134, P107
   Reps T., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P49, DOI 10.1145/199448.199462
   Reynolds A, 2015, LECT NOTES COMPUT SC, V8931, P80
   ROHMER J, 1986, NEW GENERAT COMPUT, V4, P273, DOI 10.1007/BF03037407
   Rosu G, 2010, J LOGIC ALGEBR PROGR, V79, P397, DOI 10.1016/j.jlap.2010.03.012
   Roychoudhury A., 2002, International Journal of Foundations of Computer Science, V13, P387, DOI 10.1142/S0129054102001175
   Roychoudhury A, 2000, LECT NOTES COMPUT SC, V1785, P172
   SAHLIN D, 1993, NEW GENERAT COMPUT, V12, P7, DOI 10.1007/BF03038271
   Sato T, 1997, INT JOINT CONF ARTIF, P1330
   Schneidewind C, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P621, DOI 10.1145/3372297.3417250
   Schrijver A., 1998, THEORY LINEAR INTEGE
   Seki Hirohisa, 2012, Logic-Based Program Synthesis and Transformation. 21st International Symposium, LOPSTR 2011. Revised Selected Papers, P205, DOI 10.1007/978-3-642-32211-2_14
   SEKI H, 1991, THEOR COMPUT SCI, V86, P107, DOI 10.1016/0304-3975(91)90007-O
   Senni Valerio, 2012, Tests and Proofs. Proceedings 6th International Conference, TAP 2012, P115, DOI 10.1007/978-3-642-30473-6_10
   Serrano A, 2014, THEOR PRACT LOG PROG, V14, P739, DOI 10.1017/S147106841400057X
   Sharir M., 1981, Program flow analysis. Theory and applications, P189
   Shemer R, 2019, LECT NOTES COMPUT SC, V11561, P161, DOI 10.1007/978-3-030-25540-4_9
   Shoenfield J.R., 1967, MATH LOGIC
   Spoto F, 2010, ACM T PROGR LANG SYS, V32, DOI 10.1145/1709093.1709095
   Suter P, 2011, LECT NOTES COMPUT SC, V6887, P298, DOI 10.1007/978-3-642-23702-7_23
   Tamaki H., 1984, P 2 INT LOG PROGR C, P127
   Tarnlund S.-A., 1977, BIT (Nordisk Tidskrift for Informationsbehandling), V17, P215, DOI 10.1007/BF01932293
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   Thakur M, 2020, PROCEEDINGS OF THE 29TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC '20), P27, DOI 10.1145/3377555.3377902
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   ummer, 2020, COMPETITION REPORT C
   Unno H, 2017, LECT NOTES COMPUT SC, V10427, P571, DOI 10.1007/978-3-319-63390-9_30
   VERSCHAETSE K, 1992, LECT NOTES COMPUT SC, V631, P296
   WADLER P, 1990, THEOR COMPUT SCI, V73, P231, DOI 10.1016/0304-3975(90)90147-A
   Wang WF, 2016, COMPUT J, V59, P1236, DOI 10.1093/comjnl/bxw017
   WARREN DS, 1992, COMMUN ACM, V35, P93, DOI 10.1145/131295.131299
   Warren R., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P684
   Wybraniec-Skardowska U, 2019, AXIOMS, V8, DOI 10.3390/axioms8030103
   Zaks A, 2008, LECT NOTES COMPUT SC, V5014, P35, DOI 10.1007/978-3-540-68237-0_5
   Zhou Q, 2019, ELECTRON P THEOR COM, P28, DOI 10.4204/EPTCS.296.6
NR 254
TC 11
Z9 11
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2022
VL 22
IS 6
BP 974
EP 1042
AR PII S1471068421000211
DI 10.1017/S1471068421000211
EA NOV 2021
PG 69
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 6M4IE
UT WOS:000792237100001
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Fandinno, J
   Laferriere, F
   Romero, J
   Schaub, T
   Son, TC
AF Fandinno, Jorge
   Laferriere, Francois
   Romero, Javier
   Schaub, Torsten
   Son, Tran Cao
TI Planning with Incomplete Information in Quantified Answer Set
   Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; planning; quantified logics
AB We present a general approach to planning with incomplete information in Answer Set Programming (ASP). More precisely, we consider the problems of conformant and conditional planning with sensing actions and assumptions. We represent planning problems using a simple formalism where logic programs describe the transition function between states, the initial states and the goal states. For solving planning problems, we use Quantified Answer Set Programming (QASP), an extension of ASP with existential and universal quantifiers over atoms that is analogous to Quantified Boolean Formulas (QBFs). We define the language of quantified logic programs and use it to represent the solutions different variants of conformant and conditional planning. On the practical side, we present a translation-based QASP solver that converts quantified logic programs into QBFs and then executes a QBF solver, and we evaluate experimentally the approach on conformant and conditional planning benchmarks.
C1 [Fandinno, Jorge] Omaha State Univ, Omaha, NE 68182 USA.
   [Fandinno, Jorge; Laferriere, Francois; Romero, Javier; Schaub, Torsten] Univ Potsdam, Potsdam, Germany.
   [Son, Tran Cao] New Mexico State Univ, Las Cruces, NM 88003 USA.
C3 University of Potsdam; New Mexico State University
RP Fandinno, J (corresponding author), Omaha State Univ, Omaha, NE 68182 USA.; Fandinno, J (corresponding author), Univ Potsdam, Potsdam, Germany.
EM jfandinno@unomaha.edu; francois@cs.uni-potsdam.de;
   javier@cs.uni-potsdam.de; torsten@cs.uni-potsdam.de; tson@cs.nmsu.edu
RI Fandinno, Jorge/JJC-6227-2023; Fandiño, Jorge/F-8705-2016; Schaub,
   Torsten/O-5873-2019; Romero, Javier/HLV-8880-2023
OI Fandiño, Jorge/0000-0002-3917-8717; Schaub, Torsten/0000-0002-7456-041X;
   Romero, Javier/0000-0001-5546-9939; Tran, Son/0000-0003-3689-8433
CR Amendola G, 2019, THEOR PRACT LOG PROG, V19, P705, DOI 10.1017/S1471068419000140
   Biere A, 2011, LECT NOTES ARTIF INT, V6803, P101, DOI 10.1007/978-3-642-22438-6_10
   Cabalar P, 2018, THEOR PRACT LOG PROG, V18, P406, DOI 10.1017/S1471068418000297
   Castellini C, 2003, ARTIF INTELL, V147, P85, DOI 10.1016/S0004-3702(02)00375-2
   Davis-Mendelow S., 2013, P 27 AAAI C ART INT, P209
   Eiter T, 2003, ARTIF INTELL, V144, P157, DOI 10.1016/S0004-3702(02)00367-3
   Fandinno J., 2020, P ASPOCP 2020
   Gelfond M., 1998, Electron. Trans. Artif. Intell., V2, P193
   Giunchiglia E, 2009, FRONT ARTIF INTEL AP, V185, P761, DOI 10.3233/978-1-58603-929-5-761
   Janhunen T, 2004, FRONT ARTIF INTEL AP, V110, P358
   Janota M, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P325
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Lonsing F, 2019, LECT NOTES COMPUT SC, V11628, P203, DOI 10.1007/978-3-030-24258-9_14
   Lonsing F, 2017, LECT NOTES ARTIF INT, V10395, P371, DOI 10.1007/978-3-319-63046-5_23
   Mayer-Eichberger V, 2020, LECT NOTES COMPUT SC, V12178, P447, DOI 10.1007/978-3-030-51825-7_31
   Niemelä I, 2008, LECT NOTES COMPUT SC, V5366, P88, DOI 10.1007/978-3-540-89982-2_15
   Palacios H., 2005, LNCS, V4177, P311
   Palacios H, 2009, J ARTIF INTELL RES, V35, P623, DOI 10.1613/jair.2708
   Peitl T, 2019, J ARTIF INTELL RES, V65, P181, DOI 10.1613/jair.1.11529
   Phan HT, 2011, ARTIF INTELL, V175, P79, DOI 10.1016/j.artint.2010.04.007
   Rabe MN, 2015, PROCEEDINGS OF THE 15TH CONFERENCE ON FORMAL METHODS IN COMPUTER-AIDED DESIGN (FMCAD 2015), P136, DOI 10.1109/FMCAD.2015.7542263
   Rintanen J, 1999, J ARTIF INTELL RES, V10, P332
   Son TC, 2005, LECT NOTES ARTIF INT, V3662, P172, DOI 10.1007/11546207_14
   Tu PH, 2007, THEOR PRACT LOG PROG, V7, P377, DOI 10.1017/S1471068406002948
   Turner H, 2002, LECT NOTES ARTIF INT, V2424, P111, DOI 10.1007/3-540-45757-7_10
   Wimmer R, 2017, LECT NOTES COMPUT SC, V10205, P373, DOI 10.1007/978-3-662-54577-5_21
   Yalciner IF, 2017, THEOR PRACT LOG PROG, V17, P1027, DOI 10.1017/S1471068417000321
NR 28
TC 5
Z9 5
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2021
VL 21
IS 5
SI SI
BP 663
EP 679
AR PII S1471068421000259
DI 10.1017/S1471068421000259
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA XB4RH
UT WOS:000721317500010
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Lorini, E
AF Lorini, Emiliano
TI A Qualitative Theory of Cognitive Attitudes and their Change
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 16th European Conference on Logics in Artificial Intelligence (JELIA)
CY MAY 07-11, 2019
CL Rende, ITALY
SP Univ Calabria, Dept Math & Comp Sci, Artificial Intelligence Grp, Univ Alta Formazione, Assessorato Istruzione & Attivita Culturali,, Regione Calabria, EurAI, Springer, Altilia S r l, Integris S p a, Intellimech, Magazzini Rossella, NTT Data
DE knowledge representation; nonmonotonic reasoning; modal logic; cognitive
   agents
ID MODAL LOGIC; CHOICE
AB We present a general logical framework for reasoning about agents' cognitive attitudes of both epistemic type and motivational type. We show that it allows us to express a variety of relevant concepts for qualitative decision theory including the concepts of knowledge, belief, strong belief, conditional belief, desire, conditional desire, strong desire, and preference. We also present two extensions of the logic, one by the notion of choice and the other by dynamic operators for belief change and desire change, and we apply the former to the analysis of single-stage games under incomplete information. We provide sound and complete axiomatizations for the basic logic and for its two extensions.
C1 [Lorini, Emiliano] Toulouse Univ, IRIT, CNRS, Toulouse, France.
C3 Universite Federale Toulouse Midi-Pyrenees (ComUE); Universite de
   Toulouse; Institut National Polytechnique de Toulouse; Universite
   Toulouse III - Paul Sabatier; Centre National de la Recherche
   Scientifique (CNRS)
RP Lorini, E (corresponding author), Toulouse Univ, IRIT, CNRS, Toulouse, France.
EM Emiliano.Lorini@irit.fr
FU ANR; ANR-3IA Artificial and Natural Intelligence Toulouse Institute
FX This work was supported by the ANR project CoPains ("Cognitive Planning
   in Persuasive Multimodal Communication"). Support from the ANR-3IA
   Artificial and Natural Intelligence Toulouse Institute is also
   gratefully acknowledged.
CR ALCHOURRON CE, 1985, J SYMBOLIC LOGIC, V50, P510, DOI 10.2307/2274239
   Anglberger AJJ, 2015, REV SYMB LOGIC, V8, P807, DOI 10.1017/S1755020315000209
   [Anonymous], 2008, NEW PERSPECTIVES GAM
   [Anonymous], 2000, Reasoning About Rational Agents
   [Anonymous], 2010, P 12 INT C PRINC KNO
   Aucher G, 2005, LECT NOTES ARTIF INT, V3371, P1
   AUMANN R, 1995, ECONOMETRICA, V63, P1161, DOI 10.2307/2171725
   Aumann RJ, 1999, INT J GAME THEORY, V28, P263, DOI 10.1007/s001820050111
   Balbiani P, 2008, J PHILOS LOGIC, V37, P387, DOI 10.1007/s10992-007-9078-7
   Baltag A, 2004, SYNTHESE, V139, P165, DOI 10.1023/B:SYNT.0000024912.56773.5e
   Baltag A., 2008, Texts in Logic and Games, V3, P9
   Baltag A., 2009, P 2 MULT LOG LANG OR, V494
   Baltag Alexandru, 1998, P TARK 98, VVII, P43
   Belnap N. D., 2001, FACING FUTURE AGENTS
   Ben Amor N., 2019, P 28 INT JOINT C ART, P1544
   Benferhat S., 2002, Studia Logica, V70, P105, DOI 10.1023/A:1014658309853
   Boolos G., 1993, LOGIC PROVABILITY
   BOUTILIER C, 1994, MOR KAUF R, P75
   BOUTILIER C, 1993, IJCAI-93, VOLS 1 AND 2, P519
   Brafman RI, 2000, J ACM, V47, P452, DOI 10.1145/337244.337251
   Brafman RI, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P1291
   COHEN PR, 1990, ARTIF INTELL, V42, P213, DOI 10.1016/0004-3702(90)90055-5
   Darwiche A, 1997, ARTIF INTELL, V89, P1, DOI 10.1016/S0004-3702(96)00038-0
   De Giacomo G., 1995, THESIS U ROMA SAPIEN
   Doyle J., 1999, AI Magazine, V20, P55
   Dubois D, 2017, MIND MACH, V27, P199, DOI 10.1007/s11023-017-9426-5
   Fagin R, 1995, Reasoning about knowledge
   GARGOV G, 1993, J PHILOS LOGIC, V22, P607, DOI 10.1007/BF01054038
   HAREL D, 2000, FOUNDAT COMPUT, P3
   Hemaspaandra E., 1996, Notre Dame Journal of Formal Logic, V37, P174, DOI 10.1305/ndjfl/1040046086
   Hintikka J., 1962, Knowledge and Belief: An Introduction to the Logic of the Two Notions
   HUMBERSTONE IL, 1992, MIND, V101, P59, DOI 10.1093/mind/101.401.59
   Lewis D., 1979, Essays in Honour of Jaakko Hintikka, P163
   Liu FR, 2011, SYNTH LIBR, V354, P3, DOI 10.1007/978-94-007-1344-4
   Lorini Emiliano, 2013, Journal of Applied Non-Classical Logics, V23, P372, DOI 10.1080/11663081.2013.841359
   Lorini E, 2017, J APPL LOG-IFCOLOG, V4, P3075
   Lutz C., 2002, ADV MODAL LOGIC, P329, DOI [10.1142/9789812776471, DOI 10.1142/9789812776471]
   Marsh KL, 2005, HANDBOOK OF ATTITUDES, P369
   Meyer JJC, 1999, ARTIF INTELL, V113, P1, DOI 10.1016/S0004-3702(99)00061-2
   PASSY S, 1991, INFORM COMPUT, V93, P263, DOI 10.1016/0890-5401(91)90026-X
   Paternotte C., 2011, SAGE HDB PHILOS SOCI, P307
   Platts M., 1979, WAYS OF MEANING
   Rott H, 2009, TR LOG STUD LOG LIB, V28, P269, DOI 10.1007/978-1-4020-9084-4_14
   Searle John., 1985, EXPRESSION MEANING
   Shoham Y, 2009, J PHILOS LOGIC, V38, P633, DOI 10.1007/s10992-009-9116-8
   Spohn W., 1988, Causation in Decision, Belief Change, and Statistics, VII, P105
   Spohn W., 1982, Philosophy of Economics, P239, DOI [10.1007/978-3-642-68820-1_14, DOI 10.1007/978-3-642-68820-1_14]
   v Wright G.H., 1963, LOGIC PREFERENCE
   van Benthem J., 2007, J APPL NONCLASSICAL, V17, P157, DOI DOI 10.3166/jancl.17.157-182
   van Benthem J., 2007, J APPL NONCLASSICAL, V17, P129, DOI DOI 10.3166/JANCL.17.129-155
   van Benthem J, 2009, J PHILOS LOGIC, V38, P83, DOI 10.1007/s10992-008-9085-3
   Van Ditmarsch HP, 2005, SYNTHESE, V147, P229, DOI 10.1007/s11229-005-1349-7
   VanDitmarsch H, 2007, SYNTH LIBR, V337, P1, DOI 10.1007/978-1-4020-5839-4
   WELLMAN MP, 1991, PROCEEDINGS : NINTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P698
   WRIGHT GHV, 1972, THEOR DECIS, V3, P140, DOI 10.1007/BF00141053
NR 55
TC 2
Z9 2
U1 1
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2021
VL 21
IS 4
SI SI
BP 428
EP 458
DI 10.1017/S1471068421000053
PG 31
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA ZB6GG
UT WOS:000756937700003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gebser, M
   Maratea, M
   Ricca, F
AF Gebser, Martin
   Maratea, Marco
   Ricca, Francesco
TI The Seventh Answer Set Programming Competition: Design and Results
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Answer Set Programming; competition
ID KNOWLEDGE REPRESENTATION; DLV; SEMANTICS
AB Answer Set Programming (ASP) is a prominent knowledge representation language with roots in logic programming and non-monotonic reasoning. Biennial ASP competitions are organized in order to furnish challenging benchmark collections and assess the advancement of the state of the art in ASP solving. In this paper, we report on the design and results of the Seventh ASP Competition, jointly organized by the University of Calabria (Italy), the University of Genova (Italy), and the University of Potsdam (Germany), in affiliation with the 14th International Conference on Logic Programming and Non-Monotonic Reasoning (LPNMR 2017).
C1 [Gebser, Martin] Univ Potsdam, Inst Comp Sci, Potsdam, Germany.
   [Maratea, Marco] Univ Genoa, DIBRIS, Genoa, Italy.
   [Ricca, Francesco] Univ Calabria, Dipartimento Matemat & Informat, Arcavacata Di Rende, Italy.
C3 University of Potsdam; University of Genoa; University of Calabria
RP Gebser, M (corresponding author), Univ Potsdam, Inst Comp Sci, Potsdam, Germany.
EM gebser@cs.uni-potsdam.de; marco@dibris.unige.it; ricca@mat.unical.it
RI Gebser, Martin/B-7169-2018; Maratea, Marco/AAR-5779-2020
OI Gebser, Martin/0000-0002-8010-4752
CR Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   Amendola G, 2018, AAAI CONF ARTIF INTE, P1720
   Amendola G, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P532
   Amendola G, 2017, AAAI CONF ARTIF INTE, P1034
   Amendola G, 2016, ARTIF INTELL, V234, P219, DOI 10.1016/j.artint.2016.01.011
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], 2012, PRINCIPLES KNOWLEDGE
   Applegate David L., 2007, TRAVELING SALESMAN P
   Balduccini M, 2017, THEOR PRACT LOG PROG, V17, P591, DOI 10.1017/S1471068417000187
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Ben-Eliyahu R., 1994, Annals of Mathematics and Artificial Intelligence, V12, P53, DOI 10.1007/BF01530761
   Bogaerts B, 2016, THEOR PRACT LOG PROG, V16, P570, DOI 10.1017/S1471068416000387
   Bomanson J., 2016, 32 INT C LOG PROGR I, V52
   Bomanson J, 2016, FUND INFORM, V147, P63, DOI 10.3233/FI-2016-1398
   Bomanson J, 2014, LECT NOTES ARTIF INT, V8761, P166, DOI 10.1007/978-3-319-11558-0_12
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Bruynooghe M, 2015, THEOR PRACT LOG PROG, V15, P783, DOI 10.1017/S147106841400009X
   Calimeri F., 2019, THEORY PRAC IN PRESS
   Calimeri F, 2018, LECT NOTES COMPUT SC, V10702, P135, DOI 10.1007/978-3-319-73305-0_9
   Calimeri F, 2017, INTELL ARTIF, V11, P5, DOI 10.3233/IA-170104
   Calimeri F, 2016, LECT NOTES COMPUT SC, V10037, P192, DOI 10.1007/978-3-319-49130-1_15
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   Calimeri F, 2014, THEOR PRACT LOG PROG, V14, P117, DOI 10.1017/S1471068412000105
   Cussens J, 2011, UNCERTAINTY ARTIFICI, P153
   Derler Y, 2016, AI MAG, V37, P45
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Eiter T, 2009, LECT NOTES COMPUT SC, V5689, P40, DOI 10.1007/978-3-642-03754-2_2
   Fages F., 1994, Methods of Logic in Computer Science, V1, P51
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P368, DOI 10.1007/978-3-319-23264-5_31
   Gebser M, 2008, LECT NOTES COMPUT SC, V5366, P190, DOI 10.1007/978-3-540-89982-2_23
   Gebser M, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5450
   Gebser M, 2017, J ARTIF INTELL RES, V60, P41, DOI 10.1613/jair.5373
   Gebser M, 2017, LECT NOTES ARTIF INT, V10377, P3, DOI 10.1007/978-3-319-61660-5_1
   Gebser M, 2016, AAAI CONF ARTIF INTE, P4327
   Gebser M, 2014, FRONT ARTIF INTEL AP, V263, P351, DOI 10.3233/978-1-61499-419-0-351
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P352
   Gelfond M, 2002, ARTIF INTELL, V138, P1, DOI 10.1016/S0004-3702(02)00206-0
   Guerinik N., 1995, Principles and Practice of Constraint Programming - CP '95. First International Conference, CP'95. Proceedings, P481
   Havur G., 2016, BPM, V260, P3, DOI 10.1007/978-3-319-45468-91
   Inoue K, 1996, J LOGIC PROGRAM, V27, P107, DOI 10.1016/0743-1066(95)00119-0
   Janhunen Tomi, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P111, DOI 10.1007/978-3-642-20832-4_8
   Janhunen T, 2017, STAT COMPUT, V27, P115, DOI 10.1007/s11222-015-9611-4
   Koponen L, 2015, THEOR PRACT LOG PROG, V15, P604, DOI 10.1017/S1471068415000265
   Lefévre C, 2017, THEOR PRACT LOG PROG, V17, P266, DOI 10.1017/S1471068416000569
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Lifschitz V, 2008, LECT NOTES COMPUT SC, V5366, P37, DOI 10.1007/978-3-540-89982-2_8
   Maratea Marco, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P439, DOI 10.1007/978-3-319-23264-5_36
   Maratea Marco, 2013, AI*IA 2013: Advances in Artificial Intelligence. XIIIth International Conference of the Italian Association for Artificial Intelligence. Proceedings: LNCS 8249, P73, DOI 10.1007/978-3-319-03524-6_7
   Maratea Marco, 2012, Logics in Artificial Intelligence. Proceedings of the 13th European Conference (JELIA 2012), P484, DOI 10.1007/978-3-642-33353-8_39
   Maratea M, 2008, J ALGORITHMS, V63, P70, DOI 10.1016/j.jalgor.2008.02.006
   Maratea M, 2014, THEOR PRACT LOG PROG, V14, P841, DOI 10.1017/S1471068413000094
   Marple K, 2014, THEOR PRACT LOG PROG, V14, P415, DOI 10.1017/S1471068414000118
   MELLARKOD V. S., 2008, ANN MATH ARTIFICIAL, V53, p[1, 251]
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   PERRI S, 2017, P 24 RCRA INT WORKSH, V2011, P26
NR 57
TC 25
Z9 25
U1 1
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2020
VL 20
IS 2
BP 176
EP 204
AR PII S1471068419000061
DI 10.1017/S1471068419000061
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA OC6NY
UT WOS:000579274100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fandinno, J
AF Fandinno, Jorge
TI Founded (Auto) Epistemic Equilibrium Logic Satisfies Epistemic Splitting
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Answer Set Programming; Epistemic Specifications; Epistemic Logic
   Programs
ID SEMANTICS
AB In a recent line of research, two familiar concepts from logic programming semantics (unfounded sets and splitting) were extrapolated to the case of epistemic logic programs. The property of epistemic splitting provides a natural and modular way to understand programs without epistemic cycles but, surprisingly, was only fulfilled by Gelfond's original semantics (G91), among the many proposals in the literature. On the other hand, G91 may suffer from a kind of self-supported, unfounded derivations when epistemic cycles come into play. Recently, the absence of these derivations was also formalised as a property of epistemic semantics called foundedness. Moreover, a first semantics proved to satisfy foundedness was also proposed, the so-called Founded Autoepistemic Equilibrium Logic (FAEEL). In this paper, we prove that FAEEL also satisfies the epistemic splitting property something that, together with foundedness, was not fulfilled by any other approach up to date. To prove this result, we provide an alternative characterisation of FAEEL as a combination of G91 with a simpler logic we called Founded Epistemic Equilibrium Logic (FEEL), which is somehow an extrapolation of the stable model semantics to the modal logic S5.
C1 [Fandinno, Jorge] Univ Toulouse, IRIT, CNRS, Toulouse, France.
C3 Universite Federale Toulouse Midi-Pyrenees (ComUE); Universite de
   Toulouse; Institut National Polytechnique de Toulouse; Universite
   Toulouse III - Paul Sabatier; Centre National de la Recherche
   Scientifique (CNRS)
RP Fandinno, J (corresponding author), Univ Toulouse, IRIT, CNRS, Toulouse, France.
EM jorge.fandinno@irit.fr
RI Fandiño, Jorge/F-8705-2016; Fandinno, Jorge/JJC-6227-2023
OI Fandiño, Jorge/0000-0002-3917-8717; 
FU Centre International de Mathematiques et d'Informatique de Toulouse
   (CIMI) [ANR-11-LABEX-0040-CIMI, ANR-11-IDEX-0002-02]; Alexander von
   Humboldt Foundation
FX This work has been partially supported by the Centre International de
   Mathematiques et d'Informatique de Toulouse (CIMI) through contract
   ANR-11-LABEX-0040-CIMI within the programme ANR-11-IDEX-0002-02 and the
   Alexander von Humboldt Foundation.
CR CABALAR P, 2019, LECT NOTES COMPUTER
   CABALAR P, 2018, ARXIV181208763
   del Cerro LF, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2964
   Gelfond M., 1992, Fundamenta Informaticae, V16, P59
   Gelfond M., 1991, AAAI-91. Proceedings Ninth National Conference on Artificial Intelligence, P386
   Gelfond M., 1987, P AAAI 87, P207
   Gelfond M, 2011, LECT NOTES ARTIF INT, V6645, P260
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Kahl P., 2015, J LOGIC COMPUTATION
   Kahl Patrick Thor, 2018, PROC ICLP TECHNICAL, p1:1, DOI [10.4230/OASIcs.ICLP.2018.1, DOI 10.4230/OASICS.ICLP.2018.1]
   Lecrerc A., 2018, TECHNICAL COMMUNICAT
   Leone N, 1997, INFORM COMPUT, V135, P69, DOI 10.1006/inco.1997.2630
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   MOORE RC, 1985, ARTIF INTELL, V25, P75, DOI 10.1016/0004-3702(85)90042-6
   Shen YD, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5060
   Truszczyriski Miroslaw, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P315, DOI 10.1007/978-3-642-20832-4_20
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Wang KW, 2005, LECT NOTES ARTIF INT, V3662, P279, DOI 10.1007/11546207_22
   Watson R., 2000, CORR P 8 INT WORKSH
NR 19
TC 6
Z9 6
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 671
EP 687
DI 10.1017/S1471068419000127
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500004
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Sáenz-Pérez, F
AF Saenz-Perez, Fernando
TI Applying Constraint Logic Programming to SQL Semantic Analysis
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Constraint Logic Programming; SQL; Semantic Checking; Datalog
   Educational System
ID QUERIES
AB This paper proposes the use of Constraint Logic Programming (CLP) to model SQL queries in a data-independent abstract layer by focusing on some semantic properties for signalling possible errors in such queries. First, we define a translation from SQL to Datalog, and from Datalog to CLP, so that solving this CLP program will give information about inconsistency, tautology, and possible simplifications. We use different constraint domains which are mapped to SQL types, and propose them to cooperate for improving accuracy. Our approach leverages a deductive system that includes SQL and Datalog, and we present an implementation in this system which is currently being tested in classroom, showing its advantages and differences with respect to other approaches, as well as some performance data.
C1 [Saenz-Perez, Fernando] Univ Complutense Madrid, E-28040 Madrid, Spain.
C3 Complutense University of Madrid
RP Sáenz-Pérez, F (corresponding author), Univ Complutense Madrid, E-28040 Madrid, Spain.
EM fernan@sip.ucm.es
RI Saenz-Perez, Fernando/L-2301-2017
OI Saenz-Perez, Fernando/0000-0001-6075-4398
FU Spanish Ministry of Economy and Competitiveness [TIN2017-86217-R,
   CAVI-ART-2]; Madrid Regional Government [S2018/TCS-4339]; EIE Funds of
   the European Union
FX Work partially funded by the Spanish Ministry of Economy and
   Competitiveness, under the grant TIN2017-86217-R (CAVI-ART-2), and by
   the Madrid Regional Government, under the grant S2018/TCS-4339
   (BLOQUES-CM), co-funded by EIE Funds of the European Union. Special
   thanks are due to the anonymous referees.
CR ALLEN G. N., 2000, P AM C INF SYST AMCI
   Brass S, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P197
   Brass S, 2006, J SYST SOFTWARE, V79, P630, DOI 10.1016/j.jss.2005.06.028
   BURSTALL RM, 1977, J ACM, V24, P44, DOI 10.1145/321992.321996
   CABALLERO R, 2015, 15 JORN PROGR LENG P
   Correas J, 2018, EXPERT SYST APPL, V92, P485, DOI 10.1016/j.eswa.2017.09.056
   Dollinger R., 2010, P ED MEDIA 2010, P3323
   Estévez-Martín S, 2009, THEOR PRACT LOG PROG, V9, P415, DOI 10.1017/S1471068409003780
   Gatterbauer W, 2011, PROC VLDB ENDOW, V4, P1498
   Guagliardo P, 2017, PROC VLDB ENDOW, V11, P27, DOI 10.14778/3151113.3151116
   Guo S, 1996, ACM T DATABASE SYST, V21, P270, DOI 10.1145/232616.232692
   HOFSTEDT P, 2000, LNCS, V1894
   ISO/IEC, 2016, ISO/IEC 9075-1: 2016
   Jaffar J., 1987, Conference Record of the Fourteenth Annual ACM Symposium on Principles of Programming Languages, P111, DOI 10.1145/41625.41635
   Javid M.A., 2012, Proceedings of the 2012 Joint EDBT/ICDT Workshops, (EDBTICDT '12), P239
   Krzysztof Apt, 2003, PRINCIPLES CONSTRAIN
   Mitrovic A, 2012, USER MODEL USER-ADAP, V22, P39, DOI 10.1007/s11257-011-9105-9
   Monfroy E, 2004, LECT NOTES COMPUT SC, V3261, P192
   PRIOR J. R, 2014, P 2014 C INN TECHN C, P327
   Sadiq S., 2004, SIGCSE Bulletin, V36, P223, DOI 10.1145/1026487.1008055
   SAENZ-PEREZ F., 2019, 19 C PROGR LANG PROL
   Sáenz-Pérez F, 2017, LECT NOTES COMPUT SC, V10184, P293, DOI 10.1007/978-3-319-63139-4_17
   Sáenz-Pérez F, 2011, ELECTRON NOTES THEOR, V271, P63, DOI 10.1016/j.entcs.2011.02.011
   Scott JD, 2013, PROC INT C TOOLS ART, P1036, DOI 10.1109/ICTAI.2013.155
   Sterling L., 1994, THE ART OF PROLOG
   Tamaki H., 1984, P 2 INT C LOG PROGR, P127
   Ullman J., 1988, PRINCIPLES DATABASE, V1
NR 27
TC 1
Z9 2
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 808
EP 825
DI 10.1017/S1471068419000206
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wang, Y
   Zhang, SQ
   Lee, J
AF Wang, Yi
   Zhang, Shiqi
   Lee, Joohyung
TI Bridging Commonsense Reasoning and Probabilistic Planning via a
   Probabilistic Action Language
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Action Language; POMDP; Probabilistic Logic Programming; Commonsense
   Reasoning; Probabilistic Planning
AB To be responsive to dynamically changing real-world environments, an intelligent agent needs to perform complex sequential decision-making tasks that are often guided by commonsense knowledge. The previous work on this line of research led to the framework called interleaved commonsense reasoning and probabilistic planning (iCORPP), which used P-log for representing commmonsense knowledge and Markov Decision Processes (MDPs) or Partially Observable MDPs (POMDPs) for planning under uncertainty. A main limitation of icorpp is that its implementation requires non-trivial engineering efforts to bridge the commonsense reasoning and probabilistic planning formalisms. In this paper, we present a unified framework to integrate iCORPP's reasoning and planning components. In particular, we extend probabilistic action language pBC+ to express utility, belief states, and observation as in POMDP models. Inheriting the advantages of action languages, the new action language provides an elaboration tolerant representation of POMDP that reflects commonsense knowledge. The idea led to the design of the system PBCPLUS2POMDP, which compiles a pBC+ action description into a POMDP model that can be directly processed by off-the-shelf POMDP solvers to compute an optimal policy of the pBC+ action description. Our experiments show that it retains the advantages of icorpp while avoiding the manual efforts in bridging the commonsense reasoner and the probabilistic planner.
C1 [Wang, Yi; Lee, Joohyung] Arizona State Univ, Tempe, AZ 85287 USA.
   [Zhang, Shiqi] SUNY Binghamton, Binghamton, NY 13902 USA.
C3 Arizona State University; Arizona State University-Tempe; State
   University of New York (SUNY) System; State University of New York
   (SUNY) Binghamton
RP Lee, J (corresponding author), Arizona State Univ, Tempe, AZ 85287 USA.
EM joolee@asu.edu
OI Lee, Joohyung/0000-0002-9569-5575
FU National Science Foundation [IIS-1815337]
FX We are grateful to the anonymous referees for their useful comments. The
   first and the third author's work was partially supported by the
   National Science Foundation under Grant IIS-1815337.
CR Amiri S., 2018, P 27 INT JOINT C ART
   Babb J, 2020, J LOGIC COMPUT, V30, P899, DOI 10.1093/logcom/exv062
   Baral C, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P507
   Baral C, 2009, THEOR PRACT LOG PROG, V9, P57, DOI 10.1017/S1471068408003645
   Chitnis R, 2018, IEEE INT C INT ROBOT, P3551, DOI 10.1109/IROS.2018.8594468
   Giunchiglia E, 2004, ARTIF INTELL, V153, P49, DOI [10.1016/j.artint.2002.12.001, 10.1016/j.artint.2003.12.001]
   Hanheide M, 2017, ARTIF INTELL, V247, P119, DOI 10.1016/j.artint.2015.08.008
   JIANG Y, 2018, ABS181108955 CORR
   Kaelbling LP, 1998, ARTIF INTELL, V101, P99, DOI 10.1016/S0004-3702(98)00023-X
   Kim B, 2019, AAAI CONF ARTIF INTE, P8017
   Lee J., 2013, INPROCEEDINGS 23 INT, P983
   LEE J, 2017, THEORY PRACTICE LOGI
   Lee J, 2018, THEOR PRACT LOG PROG, V18, P607, DOI 10.1017/S1471068418000303
   Lee JC, 2016, PROCEEDINGS OF KNOWLEDGE MANAGEMENT INTERNATIONAL CONFERENCE (KMICE) 2016, P145
   Leonetti M, 2016, ARTIF INTELL, V241, P103, DOI 10.1016/j.artint.2016.07.004
   LU K, 2018, ABS180911074 CORR
   Lyu DM, 2019, AAAI CONF ARTIF INTE, P2970
   Puterman ML., 2014, MARKOV DECISION PROC, DOI DOI 10.1002/9780470316887
   Sridharan M, 2019, J ARTIF INTELL RES, V65, P87, DOI 10.1613/jair.1.11524
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   TRAN N., 2004, P NAT C ART INT
   VEIGA T. S, 2019, P INT C AUT PLANN SC
   WANG Y., 2019, LPNMR
   Yang FK, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4860
   ZHANG S, 2017, P 31 AAAI C ART INT
   Zhang SP, 2015, AAAI CONF ARTIF INTE, P3165
   Zhang SQ, 2015, IEEE T ROBOT, V31, P699, DOI 10.1109/TRO.2015.2422531
NR 27
TC 6
Z9 6
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 1090
EP 1106
DI 10.1017/S1471068419000371
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500029
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Calvanese, D
   Montali, M
   Dumas, M
   Maggi, FM
AF Calvanese, Diego
   Montali, Marco
   Dumas, Marlon
   Maggi, Fabrizio M.
TI Semantic DMN: Formalizing and Reasoning About Decisions in the Presence
   of Background Knowledge
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE decision model and notation; decision tables; description logics;
   datatypes
ID VERIFICATION; VALIDATION; DATATYPES
AB The Decision Model and Notation (DMN) is a recent Object Management Group standard for the elicitation and representation of decision models and for managing their interconnection with business processes. DMN builds on the notion of decision tables and their combination into more complex decision requirements graphs (DRGs), which bridge between business process models and decision logic models. DRGs may rely on additional, external business knowledge models, whose functioning is not part of the standard. In this work, we consider one of the most important types of business knowledge, namely, background knowledge that conceptually accounts for the structural aspects of the domain of interest, and propose decision knowledge bases (DKBs), which semantically combine DRGs modeled in DMN, and domain knowledge captured by means of first-order logic with datatypes. We provide a logic-based semantics for such an integration, and formalize different DMN reasoning tasks for DKBs. We then consider background knowledge formulated as a description logic (DL) ontology with datatypes, and show how the main verification tasks for DMN in this enriched setting can be formalized as standard DL reasoning services and actually carried out in EXPTIME. We discuss the effectiveness of our framework on a case study in maritime security.
C1 [Calvanese, Diego; Montali, Marco] Free Univ Bozen Bolzano, Bolzano, Italy.
   [Dumas, Marlon; Maggi, Fabrizio M.] Univ Tartu, Tartu, Estonia.
C3 Free University of Bozen-Bolzano; University of Tartu
RP Calvanese, D (corresponding author), Free Univ Bozen Bolzano, Bolzano, Italy.
EM calvanese@inf.unibz.it; montali@inf.unibz.it; m.dumas@ut.ee;
   f.m.maggi@ut.ee
RI Dumas, Marlon/H-2757-2015; Calvanese, Diego/L-4126-2015
OI Dumas, Marlon/0000-0002-9247-7476; Montali, Marco/0000-0002-8021-3430;
   Calvanese, Diego/0000-0001-5174-9693
FU Estonian Research Council [IUT20-55]; project "Reasoning and Enactment
   for Knowledge-Aware Processes" (REKAP); Euregio Interregional Project
   Network [IPN12]; "European Region Tyrol-South Tyrol-Trentino" (EGTC);
   Free University of Bozen-Bolzano; Research Committee of the Free
   University of Bozen-Bolzano
FX This research is partly supported by the Estonian Research Council Grant
   IUT20-55, by the project "Reasoning and Enactment for Knowledge-Aware
   Processes" (REKAP), which is funded through the 2017 call issued by the
   Research Committee of the Free University of Bozen-Bolzano, and by the
   Euregio Interregional Project Network IPN12 "Knowledge-Aware Operational
   Support" (KAOS), which is funded by the "European Region Tyrol-South
   Tyrol-Trentino" (EGTC) under the first call for basic research projects
   and by the Free University of Bozen-Bolzano. This is an extended version
   of a paper presented at the RuleML+ RR 2017 conference, which has been
   invited for submission to TPLP. The authors acknowledge the assistance
   of the RuleML+RR 2017 Program Chairs Stefania Costantini, Enrico
   Franconi, Fariba Sadri, and William van Woensel.
CR [Anonymous], 2006, EVEN MORE IRRESISTIB
   [Anonymous], 2007, DESCRIPTION LOGIC HD, DOI DOI 10.1017/CBO9780511711787
   [Anonymous], 2001, MATH INTRO LOGIC
   Artale A, 2012, FRONT ARTIF INTEL AP, V242, P61, DOI 10.3233/978-1-61499-098-7-61
   Baader F, 2000, LECT NOTES ARTIF INT, V1847, P1
   BATOULIS K, 2015, P 27 INT C ADV INF S
   Calvanese D, 2017, LECT NOTES COMPUT SC, V10364, P70, DOI 10.1007/978-3-319-61252-2_6
   Calvanese D, 2016, LECT NOTES COMPUT SC, V9850, P217, DOI 10.1007/978-3-319-45348-4_13
   CODASYL Decision Table Task Group, 1982, MOD APPR DEC TABL CO
   Drabent W, 2009, LECT NOTES COMPUT SC, V5500, P1, DOI 10.1007/978-3-642-04581-3_1
   Eiter T, 2017, LECT NOTES COMPUT SC, V10370, P204, DOI 10.1007/978-3-319-61033-7_7
   Eiter T, 2009, LECT NOTES ARTIF INT, V5514, P26, DOI 10.1007/978-3-642-02261-6_3
   Haarslev V., 2001, Automated Reasoning. First International Joint Conference, IJCAR 2001. Proceedings (Lecture Notes in Artificial Intelligence Vol.2083), P29
   HOOVER DN, 1995, COMPASS '95 - PROCEEDINGS OF THE TENTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P97, DOI 10.1109/CMPASS.1995.521890
   Horrocks I., 2001, Proceedings of IJCAI, V1, P199
   Krisnadhi A, 2011, LECT NOTES COMPUT SC, V6848, P382, DOI 10.1007/978-3-642-23032-5_7
   Lutz C., 2002, ADV MODAL LOGIC 4 PA, V4, P265
   Lutz C., 2002, THESIS RWTH AACHEN U
   Motik B, 2010, J ACM, V57, DOI 10.1145/1754399.1754403
   Motik B, 2008, LECT NOTES COMPUT SC, V5318, P307, DOI 10.1007/978-3-540-88564-1_20
   Nemeti I., 1986, THESIS
   OMG, 2016, DEC MOD NOT DMN 1 1
   Ortiz M., 2010, THESIS
   Ortiz M., 2008, P 23 AAAI C ART INT, P504
   Pan JZ, 2003, LECT NOTES COMPUT SC, V2870, P47
   Pawlak Z., 1987, Bulletin of the European Association for Theoretical Computer Science, P85
   Pooch U. W., 1974, Computing Surveys, V6, P125, DOI 10.1145/356628.356630
   Savkovic O, 2012, FRONT ARTIF INTEL AP, V242, P720, DOI 10.3233/978-1-61499-098-7-720
   Shearer R., 2008, CEUR WORKSHOP P, V432
   SIRIN E, 2006, CEUR WORKSHOP P, V189
   Tsarkov D, 2006, LECT NOTES ARTIF INT, V4130, P292
   Vanthienen J, 1998, DATA KNOWL ENG, V27, P337, DOI 10.1016/S0169-023X(98)80003-7
   Vanthienen J., 1994, International Journal on Artificial Intelligence Tools (Architectures, Languages, Algorithms), V3, P267, DOI 10.1142/S0218213094000133
   VANTHIENEN J, 1993, FIFTH INTERNATIONAL CONFERENCE ON TOOLS WITH ARTIFICIAL INTELLIGENCE, TAI '93, PROCEEDINGS, P198, DOI 10.1109/TAI.1993.633957
   W3C, 2012, OWL 2 WEB ONTOLOGY L
   W3C OWL Working Group, 2012, OWL 2 Web Ontology Language Document Overview
   Zaidi AK, 1997, AUTOMATICA, V33, P155, DOI 10.1016/S0005-1098(96)00165-3
NR 37
TC 5
Z9 5
U1 0
U2 8
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2019
VL 19
IS 4
BP 536
EP 573
DI 10.1017/S1471068418000479
PG 38
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID3WQ
UT WOS:000471608200002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cabalar, P
   Fandinno, J
AF Cabalar, Pedro
   Fandinno, Jorge
TI Enablers and inhibitors in causal justifications of logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE causal justifications; well-founded semantics; stable models; answer set
   programming
ID SEMANTICS
AB In this paper, we propose an extension of logic programming where each default literal derived from the well-founded model is associated to a justification represented as an algebraic expression. This expression contains both causal explanations (in the form of proof graphs built with rule labels) and terms under the scope of negation that stand for conditions that enable or disable the application of causal rules. Using some examples, we discuss how these new conditions, we respectively call enablers and inhibitors, are intimately related to default negation and have an essentially different nature from regular cause-effect relations. The most important result is a formal comparison to the recent algebraic approaches for justifications in logic programming: Why-not Provenance and Causal Graphs. We show that the current approach extends both Why-not Provenance and Causal Graphs justifications under the well-founded semantics and, as a byproduct, we also establish a formal relation between these two approaches.
C1 [Cabalar, Pedro; Fandinno, Jorge] Univ A Coruna, Dept Comp Sci, A Corunna, Spain.
C3 Universidade da Coruna
RP Cabalar, P (corresponding author), Univ A Coruna, Dept Comp Sci, A Corunna, Spain.
EM cabalar@udc.es; jorge.fandino@udc.es
RI Cabalar, Pedro/AAE-5198-2020; Fandinno, Jorge/JJC-6227-2023; Fandiño,
   Jorge/IVV-0515-2023; Fandiño, Jorge/F-8705-2016
OI Fandiño, Jorge/0000-0002-3917-8717
FU  [TIN2013-42149-P]
FX We are thankful to Carlos Damasio for his suggestions and comments on
   earlier versions of this work. We also thank the anonymous reviewers for
   their help to improve the paper. This research was partially supported
   by Spanish Project TIN2013-42149-P.
CR [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], 1997, Proceedings of the 14th National Conference on Artificial Intelligence (AAAI), DOI DOI 10.1093/ACPROF:OSO/9780198235880.003.0005
   Cabalar P, 2014, THEOR PRACT LOG PROG, V14, P603, DOI 10.1017/S1471068414000234
   Cabalar P, 2014, LECT NOTES ARTIF INT, V8761, P297, DOI 10.1007/978-3-319-11558-0_21
   Damásio CV, 2013, LECT NOTES COMPUT SC, V8148, P530, DOI 10.1007/978-3-642-40564-8_53
   Denecker M, 1993, LPNMR, P365
   Fandinno J., 2015, THESIS
   Fandinno J., 2015, P 8 INT WORKSH ANSW
   Ferraris P, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P372
   Gebser M, 2008, P 23 NAT C ART INT, V1
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Hall N, 2000, J PHILOS, V97, P198, DOI 10.2307/2678390
   Hall N, 2007, PHILOS STUD, V132, P109, DOI 10.1007/s11098-006-9057-9
   Hall N., 2004, CAUSATION COUNTERFAC, P225
   HALPERN J. Y., 2014, PRINCIPLES KNOWLEDGE
   Halpern J. Y., 2011, CORR
   Halpern JY, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P3022
   Halpern JosephY., 2008, P 11 C PRINCIPLES KN, P198
   Halpern JY, 2005, BRIT J PHILOS SCI, V56, P843, DOI 10.1093/bjps/axi147
   HANKS S, 1987, ARTIF INTELL, V33, P379, DOI 10.1016/0004-3702(87)90043-9
   Hitchcock C, 2009, J PHILOS, V106, P587, DOI 10.5840/jphil20091061128
   Hume D., 1958, ENQUIRY HUMAN UNDERS
   Lewis D, 2000, J PHILOS, V97, P182, DOI 10.2307/2678389
   Lin F., 1995, Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, 1985-1991
   Maudlin T., 2004, CAUSATION COUNTERFAC, P419
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Oetsch J., 2010, P CORR
   Pearce D, 1997, LECT NOTES ARTIF INT, V1216, P57, DOI 10.1007/BFb0023801
   Pearl Judea, 2000, MODELS REASONING INF, V19, DOI DOI 10.1017/CBO9780511803161
   Pemmasani G, 2004, LECT NOTES COMPUT SC, V2998, P24
   Pontelli E, 2009, THEOR PRACT LOG PROG, V9, P1, DOI 10.1017/S1471068408003633
   Schulz C, 2016, THEOR PRACT LOG PROG, V16, P59, DOI 10.1017/S1471068414000702
   Specht G., 1993, P 5 WORKSH LOG PROGR, P8
   Thielscher M, 1997, ARTIF INTELL, V89, P317, DOI 10.1016/S0004-3702(96)00033-1
   Van Gelder A., 1989, Proceedings of the Eighth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P1, DOI 10.1145/73721.73722
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
NR 36
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2017
VL 17
IS 1
BP 49
EP 74
DI 10.1017/S1471068416000107
PG 26
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Arts &amp; Humanities Citation Index (A&amp;HCI)
SC Computer Science; Science & Technology - Other Topics
GA EH7JT
UT WOS:000391949800002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gao, TT
   Fodor, P
   Kifer, M
AF Gao, Tiantian
   Fodor, Paul
   Kifer, Michael
TI Paraconsistency and word puzzles
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
DE Paraconsistency; Word Puzzles; Annotated Predicate Calculus; Controlled
   Natural Language
AB Word puzzles and the problem of their representations in logic languages have received considerable attention in the last decade (Ponnuru et al. 2004; Shapiro 2011; Baral and Dzifcak 2012; Schwitter 2013). Of special interest is the problem of generating such representations directly from natural language (NL) or controlled natural language (CNL). An interesting variation of this problem, and to the best of our knowledge, scarcely explored variation in this context, is when the input information is inconsistent. In such situations, the existing encodings of word puzzles produce inconsistent representations and break down. In this paper, we bring the well-known type of paraconsistent logics, called Annotated Predicate Calculus (APC) (Kifer and Lozinskii 1992), to bear on the problem. We introduce a new kind of non-monotonic semantics for APC, called consistency preferred stable models and argue that it makes APC into a suitable platform for dealing with inconsistency in word puzzles and, more generally, in NL sentences. We also devise a number of general principles to help the user choose among the different representations of NL sentences, which might seem equivalent but, in fact, behave differently when inconsistent information is taken into account. These principles can be incorporated into existing CNL translators, such as Attempto Controlled English (ACE) (Fuchs et al. 2008) and PENG Light (White and Schwitter 2009). Finally, we show that APC with the consistency preferred stable model semantics can be equivalently embedded in ASP with preferences over stable models, and we use this embedding to implement this version of APC in Clingo (Gebser et al. 2011) and its Asprin add-on (Brewka et al. 2015).
C1 [Gao, Tiantian; Fodor, Paul; Kifer, Michael] SUNY Stony Brook, Stony Brook, NY USA.
C3 State University of New York (SUNY) System; State University of New York
   (SUNY) Stony Brook
RP Gao, TT (corresponding author), SUNY Stony Brook, Stony Brook, NY USA.
EM tiagao@cs.stonybrook.edu; pfodor@cs.stonybrook.edu;
   kifer@cs.stonybrook.edu
OI Fodor, Paul/0000-0002-2978-676X
CR [Anonymous], 1984, AUTOMATED REASONING
   [Anonymous], 1977, MODERN USES MULTIPLE
   [Anonymous], 2009, P AUSTRALASIAN LANGU
   Baral C., 2012, PRINCIPLES KNOWLEDGE
   Beziau J.-Y., 2007, Handbook of paraconsistency
   BLAIR HA, 1989, THEOR COMPUT SCI, V68, P135, DOI 10.1016/0304-3975(89)90126-6
   Brewka G, 2015, AAAI CONF ARTIF INTE, P1467
   da Costa N. C. A., 1974, Notre Dame Journal of Formal Logic, V15, P497, DOI 10.1305/ndjfl/1093891487
   Finkel R, 2004, SOFTWARE PRACT EXPER, V34, P1481, DOI 10.1002/spe.623
   Fuchs NE, 2008, LECT NOTES COMPUT SC, V5224, P104
   Gao T., 2016, PARACONSISTENCY WORD, P1
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gueret C., 2000, Programmation lineaire
   KIFER M, 1992, J LOGIC PROGRAM, V12, P335, DOI 10.1016/0743-1066(92)90007-P
   Kifer M., 1992, Journal of Automated Reasoning, V9, P179, DOI 10.1007/BF00245460
   Ponnuru H, 2004, IC-AI '04 & MLMTA'04 , VOL 1 AND 2, PROCEEDINGS, P437
   Priest G., 2015, The Stanford Encyclopedia of Philosophy, VSpring 2015
   Schwitter R, 2013, THEOR PRACT LOG PROG, V13, P487, DOI 10.1017/S1471068413000306
   Shapiro S. C, 2011, LOGICAL FORMALIZATIO
   Shapiro SC, 2000, LECT NOTES ARTIF INT, V1867, P510
   Soininen T., 2001, ANSWER SET PROGRAMMI
   Syrjanen Tommi., 2001, LP-NMR'01: Proceedings of the 6th International Conference on Logic Programming and Nonmonotonic Reasoning, P434, DOI DOI 10.1007/3-540-45402-038
NR 22
TC 1
Z9 1
U1 0
U2 12
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 703
EP 720
DI 10.1017/S1471068416000326
PN 5-6
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800013
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pereira, LM
   Dietz, EA
   Hölldobler, S
AF Pereira, Luis Moniz
   Dietz, Emmanuelle-Anna
   Hoelldobler, Steffen
TI Contextual Abductive Reasoning with Side-Effects
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
DE Abductive Reasoning; Contextual Reasoning; Side-effects; Human
   Reasoning; Belief-Bias; Inspection Points; Three-valued Lukasiewicz
   Logic; Weak Completion Semantics; Logic Programming
ID LOGIC
AB The belief bias effect is a phenomenon which occurs when we think that we judge an argument based on our reasoning, but are actually influenced by our beliefs and prior knowledge. Evans, Barston and Pollard carried out a psychological syllogistic reasoning task to prove this effect. Participants were asked whether they would accept or reject a given syllogism. We discuss one specific case which is commonly assumed to be believable but which is actually not logically valid. By introducing abnormalities, abduction and background knowledge, we adequately model this case under the weak completion semantics. Our formalization reveals new questions about possible extensions in abductive reasoning. For instance, observations and their explanations might include some relevant prior abductive contextual information concerning some side-effect or leading to a contestable or refutable side-effect. A weaker notion indicates the support of some relevant consequences by a prior abductive context. Yet another definition describes jointly supported relevant consequences, which captures the idea of two observations containing mutually supportive side-effects. Though motivated with and exemplified by the running psychology application, the various new general abductive context definitions are introduced here and given a declarative semantics for the first time, and have a much wider scope of application. Inspection points, a concept introduced by Pereira and Pinto, allows us to express these definitions syntactically and intertwine them into an operational semantics.
C1 [Pereira, Luis Moniz; Dietz, Emmanuelle-Anna] Univ Nova Lisboa, Fac Ciencias & Tecnol, Dept Informat, Ctr Inteligencia Artificial CENTRIA, P-2829516 Caparica, Portugal.
   [Dietz, Emmanuelle-Anna; Hoelldobler, Steffen] Tech Univ Dresden, Int Ctr Computat Logi, D-01062 Dresden, Germany.
C3 Universidade Nova de Lisboa; Technische Universitat Dresden
RP Pereira, LM (corresponding author), Univ Nova Lisboa, Fac Ciencias & Tecnol, Dept Informat, Ctr Inteligencia Artificial CENTRIA, P-2829516 Caparica, Portugal.
EM lmp@fct.unl.pt; dietz@iccl.tu-dresden.de; sh@iccl.tu-dresden.de
RI Pereira, Luis M/C-6241-2009
OI Pereira, Luis M/0000-0001-7880-4322
CR [Anonymous], 1920, Selected Works by Jan Lukasiewicz
   [Anonymous], 2012, P 34 ANN C COGN SCI
   APT KR, 1982, J ACM, V29, P841, DOI 10.1145/322326.322339
   BYRNE RMJ, 1989, COGNITION, V31, P61, DOI 10.1016/0010-0277(89)90018-8
   Clark K. L., 1978, Logic and data bases, P293
   Console L., 1991, Journal of Logic and Computation, V1, P661, DOI 10.1093/logcom/1.5.661
   Dietz E.-A., 2013, J APPL NONCLASSICAL
   Dietz E.A., 2013, P 11 INT S LOG FORM
   Evans J., 2012, Cognitive Illusions: A Handbook on Fallacies and Biases in Thinking, Judgement and Memory
   Evans J.St. B.T., 2010, Thinking twice: Two minds in one brain
   EVANS JST, 1983, MEM COGNITION, V11, P295, DOI 10.3758/BF03196976
   Hempel Carl G., 1966, Philosophy of Natural Science
   Hölldobler S, 2009, LECT NOTES COMPUT SC, V5769, P85, DOI 10.1007/978-3-642-04277-5_9
   Hölldobler S, 2009, LECT NOTES COMPUT SC, V5649, P464, DOI 10.1007/978-3-642-02846-5_37
   Holldobler S., 2011, AAAI SPRING S SERIES, P135
   Kakas A. C., 1992, Journal of Logic and Computation, V2, P719, DOI 10.1093/logcom/2.6.719
   Kowalski K, 2011, COMPUTATIONAL METHODS FOR LARGE SYSTEMS: ELECTRONIC STRUCTURE APPROACHES FOR BIOTECHNOLOGY AND NANOTECHNOLOGY, P167
   Moniz Pereira Luis, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P148, DOI 10.1007/978-3-642-20832-4_10
   PEREIRA LM, 1991, FR ART INT, P289
   Saptawijaya A., 2013, THEORY PRACTICE LOGI, V13
   Stenning K, 2005, COGNITIVE SCI, V29, P919, DOI 10.1207/s15516709cog0000_36
   Stenning K, 2008, HUMAN REASONING AND COGNITIVE SCIENCE, P1
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   WASON PC, 1968, Q J EXP PSYCHOL, V20, P273, DOI 10.1080/14640746808400161
NR 24
TC 7
Z9 8
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 633
EP 648
DI 10.1017/S1471068414000258
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200016
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Aziz, RA
   Chu, G
   Stuckey, PJ
AF Aziz, Rehan Abdul
   Chu, Geoffrey
   Stuckey, Peter J.
TI Stable model semantics for founded bounds
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
DE answer set programming; stable model semantics; finite domain solving
ID ANSWER SET
AB Answer Set Programming (ASP) is a powerful form of declarative programming used in areas such as planning or reasoning. ASP solvers enforce stable model semantics, which rule out solutions representing certain kinds of circular reasoning. Unfortunately, current ASP solvers are incapable of solving problems involving cyclic dependencies between multiple integer or continuous quantities effectively. In this paper, we generalize the notion of stable models to bound founded variables with arbitrary domains, where bounds on such variables need to be justified by some rule in the program in order for the model to be stable. We show how to handle significantly more general rule forms where bound founded variables can act as head or body variables, and where head and body variables can be related via complex constraints subject to certain monotonicity requirements. We describe a new unfounded set detection algorithm which allows us to enforce this generalization of the stable model semantics. We also show how these unfounded sets can be explained in order to allow effective conflict-directed clause learning. The new solver merges the best features of CP, SAT and ASP solvers and allows new types of problems to be solved very efficiently.
C1 [Aziz, Rehan Abdul; Chu, Geoffrey; Stuckey, Peter J.] Univ Melbourne, Dept Comp & Informat Syst, Victoria Lab, Natl ICT Australia, Melbourne, Vic 3010, Australia.
C3 NICTA; University of Melbourne
RP Aziz, RA (corresponding author), Univ Melbourne, Dept Comp & Informat Syst, Victoria Lab, Natl ICT Australia, Melbourne, Vic 3010, Australia.
EM raziz@student.unimelb.edu.au; gchu@csse.unimelb.edu.au;
   pjs@csse.unimelb.edu.au
OI Stuckey, Peter/0000-0003-2186-0459
FU Australian Government; Australian Research Council through the ICT
   Centre of Excellence program
FX NICTA is funded by the Australian Government as represented by the
   Department of Broadband, Communications and the Digital Economy and the
   Australian Research Council through the ICT Centre of Excellence
   program.
CR Anger C., 2006, P INT WORKSH NONM RE, P58
   [Anonymous], 2012, PRINCIPLES KNOWLEDGE
   Aziz R. A., 2013, P 36 AUSTR COMP SCI, V135, P41
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Baselice S, 2005, LECT NOTES COMPUT SC, V3668, P52, DOI 10.1007/11562931_7
   Blondeel M, 2013, STUD FUZZ SOFT COMP, V291, P209, DOI 10.1007/978-3-642-34922-5_15
   Calimeri F., 2013, ASP CORE 2 INPUT LAN
   Drescher C., 2012, TECHN COMM 28 INT C, P188
   Drescher C, 2010, THEOR PRACT LOG PROG, V10, P465, DOI 10.1017/S1471068410000220
   Gebser M., 2012, Answer Set Solving in Practice
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gebser M, 2009, LECT NOTES COMPUT SC, V5649, P235, DOI 10.1007/978-3-642-02846-5_22
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Janssen J, 2008, LECT NOTES COMPUT SC, V5366, P362, DOI 10.1007/978-3-540-89982-2_34
   Marques-Silva JP, 1999, IEEE T COMPUT, V48, P506, DOI 10.1109/12.769433
   Mellarkod VS, 2008, ANN MATH ARTIF INTEL, V53, P251, DOI 10.1007/s10472-009-9116-y
   Moskewicz MW, 2001, DES AUT CON, P530, DOI 10.1109/DAC.2001.935565
   Nethercote N, 2007, LECT NOTES COMPUT SC, V4741, P529
   Nieuwenborgh D. V., 2006, P LOG ART INT 10 EUR, P359
   Osorio M., 1996, P NONM EXT LOG PROGR, P71
   Rossi F, 2006, FOUND ARTIF INTELL, P1
   Schulte C, 2008, ACM T PROGR LANG SYS, V31, DOI 10.1145/1452044.1452046
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Van Gelder A., 1988, Proceedings of the Seventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P221, DOI 10.1145/308386.308444
NR 25
TC 8
Z9 8
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 517
EP 532
DI 10.1017/S147106841300032X
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400005
DA 2024-07-18
ER

PT J
AU Lam, ESL
   Sulzmann, M
AF Lam, Edmund S. L.
   Sulzmann, Martin
TI Concurrent goal-based execution of Constraint Handling Rules
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE multiset rewriting; constraints; concurrency
ID OPERATIONAL SEMANTICS; CHR; CONFLUENCE; PATTERN; RETE
AB We introduce a systematic, concurrent execution scheme for Constraint Handling Rules (CHR) based on a previously proposed sequential goal-based CHR semantics. We establish strong correspondence results to the abstract CHR semantics, thus guaranteeing that any answer in the concurrent, goal-based CHR semantics is reproducible in the abstract CHR semantics. Our work provides the foundation to obtain efficient, parallel CHR execution schemes.
C1 [Lam, Edmund S. L.] Natl Univ Singapore, Sch Comp, Singapore 117543, Singapore.
   [Sulzmann, Martin] Informat Consulting Syst AG, D-70184 Stuttgart, Germany.
C3 National University of Singapore
RP Lam, ESL (corresponding author), Natl Univ Singapore, Sch Comp, S16 Level 5,3 Sci Dr 2, Singapore 117543, Singapore.
EM lamsoonl@comp.nus.edu.sg; martin.sulzmann@gmail.com
CR Abdennadher S, 1997, LECT NOTES COMPUT SC, V1330, P252, DOI 10.1007/BFb0017444
   Abdennadher S., 1999, Constraints, V4, P133, DOI 10.1023/A:1009842826135
   BETZ H, 2009, WLP 09 IN PRESS
   De Koninck L, 2008, LECT NOTES COMPUT SC, V4989, P32
   Duck GJ, 2004, LECT NOTES COMPUT SC, V3132, P90, DOI 10.1007/978-3-540-27775-0_7
   DUCK GJ, 2005, THESIS U MELBOURNE
   FORGY C, 1977, IJCAI, P933
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Frühwirth T, 2005, LECT NOTES COMPUT SC, V3668, P113, DOI 10.1007/11562931_11
   Fruhwirth T., 2006, PPDP 2006. Proceedings of the Eighth ACM SIGPLAN Symposium on Principles and Practice of Declarative Programming, P13, DOI 10.1145/1140335.1140337
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   GAMBLE RF, 1990, IEA AIE 90, P854
   GUPTA A, 1988, ICPP, P71
   Ishida T., 1991, IEEE Transactions on Knowledge and Data Engineering, V3, P11, DOI 10.1109/69.75883
   Lam E. S. L., 2007, P DAMP 2007, P19, DOI [10.1145/1248648.1248653, DOI 10.1145/1248648.1248653]
   MAHAJAN M, 1990, COMPUT SYST SCI ENG, V5, P187
   Miranker Daniel P., 1990, TREAT: A New and Efficient Match Algorithm for IA Production Systems
   MIRANKER DP, 1990, PROCEEDINGS : EIGHTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P685
   MIRANKER DP, 1989, CSTR8930 U TEX
   NEIMAN DE, 1991, PROCEEDINGS : NINTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P310
   Sarna-Starosta B, 2007, LECT NOTES COMPUT SC, V4354, P170
   Schrijvers T, 2005, LECT NOTES COMPUT SC, V3668, P435, DOI 10.1007/11562931_44
   Schrijvers T, 2008, LECT NOTES COMPUT SC, V5366, P516, DOI 10.1007/978-3-540-89982-2_44
   Sneyers J, 2005, LECT NOTES COMPUT SC, V3668, P83, DOI 10.1007/11562931_9
   Sneyers J, 2010, THEOR PRACT LOG PROG, V10, P1, DOI 10.1017/S1471068409990123
   SULZMANN M, 2008, P 10 INT ACM SIGPLAN, P20
NR 26
TC 0
Z9 0
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2011
VL 11
BP 841
EP 879
DI 10.1017/S147106841000044X
PN 6
PG 39
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 853RB
UT WOS:000297442300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Durzinsky, M
   Marwan, W
   Ostrowski, M
   Schaub, T
   Wagler, A
AF Durzinsky, Markus
   Marwan, Wolfgang
   Ostrowski, Max
   Schaub, Torsten
   Wagler, Annegret
TI Automatic network reconstruction using ASP
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Logic Programming
CT 27th International Conference on Logic Programming
CY 2010
CY JUL 06-10, 2011
CL Lexington, KY
CL Lexington, KY
ID BIOLOGICAL NETWORKS; ANSWER
AB Building biological models by inferring functional dependencies from experimental data is an important issue in Molecular Biology. To relieve the biologist from this traditionally manual process, various approaches have been proposed to increase the degree of automation. However, available approaches often yield a single model only, rely on specific assumptions, and/or use dedicated, heuristic algorithms that are intolerant to changing circumstances or requirements in the view of the rapid progress made in Biotechnology. Our aim is to provide a declarative solution to the problem by appeal to Answer Set Programming (ASP) overcoming these difficulties. We build upon an existing approach to Automatic Network Reconstruction proposed by part of the authors. This approach has firm mathematical foundations and is well suited for ASP due to its combinatorial flavor providing a characterization of all models explaining a set of experiments. The usage of ASP has several benefits over the existing heuristic algorithms. First, it is declarative and thus transparent for biological experts. Second, it is elaboration tolerant and thus allows for an easy exploration and incorporation of biological constraints. Third, it allows for exploring the entire space of possible models. Finally, our approach offers an excellent performance, matching existing, special-purpose systems.
C1 [Durzinsky, Markus; Marwan, Wolfgang] Univ Magdeburg, Magdeburg Ctr Syst Biol, D-39106 Magdeburg, Germany.
   [Ostrowski, Max; Schaub, Torsten] Univ Potsdam, Potsdam, Germany.
   [Wagler, Annegret] Univ Blaise Pascal, Clermont Ferrand, France.
   [Schaub, Torsten] Simon Fraser Univ, Burnaby, BC V5A 1S6, Canada.
   [Schaub, Torsten] Griffith Univ, Nathan, Qld 4111, Australia.
C3 Otto von Guericke University; University of Potsdam; Centre National de
   la Recherche Scientifique (CNRS); Universite Clermont Auvergne (UCA);
   Simon Fraser University; Griffith University
RP Durzinsky, M (corresponding author), Univ Magdeburg, Magdeburg Ctr Syst Biol, D-39106 Magdeburg, Germany.
RI Schaub, Torsten/O-5873-2019
OI Schaub, Torsten/0000-0002-7456-041X
CR Akutsu T, 1999, Pac Symp Biocomput, P17
   [Anonymous], LPARSE 1 0 USERS MAN
   BARAL C, 2004, P 12 INT C INT SYST, P15
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Dal Palù A, 2009, LECT NOTES COMPUT SC, V5753, P560, DOI 10.1007/978-3-642-04238-6_58
   DURZINSKY M, 2010, THEORETICAL IN PRESS
   DURZINSKY M, 2010, J MATH BIOL, P10
   Durzinsky M, 2008, BIOSYSTEMS, V93, P181, DOI 10.1016/j.biosystems.2008.04.001
   Durzinsky M, 2008, LECT N BIOINFORMAT, V5307, P328, DOI 10.1007/978-3-540-88562-7_23
   Dworschak S, 2008, CONSTRAINTS, V13, P21, DOI 10.1007/s10601-007-9031-y
   Erdem E., 2008, National Conference on Artificial Intelligence (AAAI), P436
   Erdem E, 2009, LECT NOTES COMPUT SC, V5753, P567, DOI 10.1007/978-3-642-04238-6_59
   Gebser M., USERS GUIDE GRINGO C
   Gebser M., 2010, P 12 INT C PRINC KNO, P497
   Gebser M, 2009, LECT NOTES COMPUT SC, V5547, P71, DOI 10.1007/978-3-642-01929-6_7
   Gebser M, 2008, LECT NOTES COMPUT SC, V5366, P130, DOI 10.1007/978-3-540-89982-2_19
   Gelfond M, 2008, FOUND ARTIF INTELL, P285, DOI 10.1016/S1574-6526(07)03007-6
   GIFFORD D, 2001, P PAC S BIOC, V6, P422
   Laubenbacher R, 2004, J THEOR BIOL, V229, P523, DOI 10.1016/j.jtbi.2004.04.037
   Liang S, 1998, Pac Symp Biocomput, P18
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Marwan W, 2008, MATH METHOD OPER RES, V67, P117, DOI 10.1007/s00186-007-0178-5
   OSTROWSKI M, 2011, ASP ENCODING AUTOMAT
   Pe'er D, 2001, Bioinformatics, V17 Suppl 1, pS215
   Repsilber D, 2002, BIOSYSTEMS, V66, P31, DOI 10.1016/S0303-2647(02)00019-9
   Schaub T, 2009, LECT NOTES COMPUT SC, V5649, P312, DOI 10.1007/978-3-642-02846-5_27
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   WAGLER A, 2011, MODELING SYSTEMS BIO, V16, P307
   Yeung MKS, 2002, P NATL ACAD SCI USA, V99, P6163, DOI 10.1073/pnas.092576199
NR 29
TC 6
Z9 6
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 749
EP 766
DI 10.1017/S1471068411000287
PN 4-5
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100020
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gutmann, B
   Thon, I
   Kimmig, A
   Bruynooghe, M
   De Raedt, L
AF Gutmann, Bernd
   Thon, Ingo
   Kimmig, Angelika
   Bruynooghe, Maurice
   De Raedt, Luc
TI The magic of logical inference in probabilistic programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Logic Programming
CT 27th International Conference on Logic Programming
CY 2010
CY JUL 06-10, 2011
CL Lexington, KY
CL Lexington, KY
DE probabilistic logic; forward reasoning; sampling; continuous
   distributions
AB Today, there exist many different probabilistic programming languages as well as more inference mechanisms for these languages. Still, most logic programming-based languages use backward reasoning based on Selective Linear Definite resolution for inference. While these methods are typically computationally efficient, they often can neither handle infinite and/or continuous distributions nor evidence. To overcome these limitations, we introduce distributional clauses, a variation and extension of Sato's distribution semantics. We also contribute a novel approximate inference method that integrates forward reasoning with importance sampling, a well-known technique for probabilistic inference. In order to achieve efficiency, we integrate two logic programming techniques to direct forward sampling. Magic sets are used to focus on relevant parts of the program, while the integration of backward reasoning allows one to identify and avoid regions of the sample space that are inconsistent with the evidence.
C1 [Gutmann, Bernd; Thon, Ingo; Kimmig, Angelika; Bruynooghe, Maurice; De Raedt, Luc] Katholieke Univ Leuven, Dept Comp Sci, B-3001 Heverlee, Belgium.
C3 KU Leuven
RP Gutmann, B (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Celestijnenlaan 200A Bus 2402, B-3001 Heverlee, Belgium.
EM bernd.gutmann@cs.kuleuven.be; ingo.thon@cs.kuleuven.be;
   angelika.kimmig@cs.kuleuven.be; maurice.bruynooghe@cs.kuleuven.be;
   luc.deraedt@cs.kuleuven.be
RI Kimmig, Angelika/Q-1794-2016; Bruynooghe, Maurice/A-6196-2014; De Raedt,
   Luc/AAX-1544-2021
OI Bruynooghe, Maurice/0000-0002-6881-1462; De Raedt,
   Luc/0000-0002-6860-6303
CR Angelopoulos N, 2003, LECT NOTES ARTIF INT, V2543, P186
   [Anonymous], 2007, Introduction to Statistical Relational Learning (Adaptive Computation and Machine Learning)
   [Anonymous], 1985, P 5 ACM SIGACT SIGMO, DOI DOI 10.1145/6012.15399
   [Anonymous], SPRINGER TEXTS STAT
   Baral C, 2009, THEOR PRACT LOG PROG, V9, P57, DOI 10.1017/S1471068408003645
   Costa Vitor Santos, 2008, Probabilistic Inductive Logic Programming. Theory and Applications, P156, DOI 10.1007/978-3-540-78652-8_6
   De Raedt L., 2008, P 1 WORKSH PROB PROG
   De Raedt L., 2008, LNCS, V4911
   De Raedt L, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2468
   Eisner J., 2005, P HUM LANG TECHN C C
   Fuhr N, 2000, J AM SOC INFORM SCI, V51, P95, DOI 10.1002/(SICI)1097-4571(2000)51:2<95::AID-ASI2>3.0.CO;2-H
   Gogate V, 2011, ARTIF INTELL, V175, P694, DOI 10.1016/j.artint.2010.10.009
   Goodman ND., 2008, UAI, P220
   Gutmann B., 2010, P 20 INT C IND LOG P
   Kersting Kristian, 2008, Probabilistic Inductive Logic Programming. Theory and Applications, P189, DOI 10.1007/978-3-540-78652-8_7
   Kimmig A, 2011, THEOR PRACT LOG PROG, V11, P235, DOI 10.1017/S1471068410000566
   Koller D., 2009, Probabilistic graphical models: principles and techniques
   Mantadelis T, 2010, LEIBNIZ INT PR INFOR, V7, P124, DOI 10.4230/LIPIcs.ICLP.2010.124
   Milch B, 2005, INT WORKSH ART INT S, P238
   Milch B, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P1352
   Nilsson U, 1996, LOGIC PROGRAMMING PR
   PFEFFER A, 2001, 17 INT JOINT C ART I, P733
   Poole David, 2008, Probabilistic Inductive Logic Programming. Theory and Applications, P222, DOI 10.1007/978-3-540-78652-8_8
   RICHARDSON M., 2002, MACH LEARN
   Sato T, 2001, J ARTIF INTELL RES, V15, P391
   Sato T., 1995, P INT C LOG PROGR, P715
   Vennekens J, 2009, THEOR PRACT LOG PROG, V9, P245, DOI 10.1017/S1471068409003767
NR 27
TC 39
Z9 41
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 663
EP 680
DI 10.1017/S1471068411000238
PN 4-5
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100015
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Cohen, SB
   Simmons, RJ
   Smith, NA
AF Cohen, Shay B.
   Simmons, Robert J.
   Smith, Noah A.
TI Products of weighted logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 24th International Conference on Logic Programming (ICLP)
CY DEC 09-13, 2008
CL Udine, ITALY
SP Assoc Log Programming
DE weighted logic programming; program transformations; natural language
   processing
ID EFFICIENT COMPUTATION; RECOGNITION; ENTROPY
AB Weighted logic programming, a generalization of bottom-up logic programming, is a well-suited framework for specifying dynamic programming algorithms. In this setting, proofs correspond to the algorithm's output space, such as a path through a graph or a grammatical derivation, and are given a real-valued score (often interpreted as a probability) that depends on the real weights of the base axioms used in the proof. The desired output is a function over all possible proofs, such as a sum of scores or an optimal score. We describe the PRODUCT transformation, which can merge two weighted logic programs into a new one. The resulting program optimizes a product of proof scores from the original programs, constituting a scoring function known in machine learning as a "product of experts." Through the addition of intuitive constraining side conditions, we show that several important dynamic programming algorithms can be derived by applying PRODUCT to weighted logic programs corresponding to simpler weighted logic programs. In addition, we show how the computation of Kullback-Leibler divergence, an information-theoretic measure, can be interpreted using PRODUCT.
C1 [Cohen, Shay B.; Simmons, Robert J.; Smith, Noah A.] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
C3 Carnegie Mellon University
RP Cohen, SB (corresponding author), Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
EM scohen@cs.cmu.edu; rjsimmon@cs.cmu.edu; nasmith@cs.cmu.edu
OI Simmons, Robert/0000-0003-2420-3067
CR [Anonymous], AFCRL65758
   [Anonymous], 2003, Advances in Neural Information Processing Systems
   [Anonymous], 1997, PARSING SCHEMATA
   [Anonymous], 1998, Biological Sequence Analysis: Probabilistic Models of Proteins and Nucleic Acids
   [Anonymous], 1970, Programming languages and their compilers: Preliminary notes (technical report)
   Charniak Eugene., 2003, P MT SUMMIT 9
   Chiang D, 2007, COMPUT LINGUIST, V33, P201, DOI 10.1162/coli.2007.33.2.201
   Cohen ShayB., 2007, EMNLP-CoNLL, P208
   Cortes C, 2006, LECT NOTES COMPUT SC, V3887, P323, DOI 10.1007/11682462_32
   DEMPSTER AP, 1977, J ROY STAT SOC B MET, V39, P1, DOI 10.1111/j.2517-6161.1977.tb01600.x
   Eisner J., 2000, ADV PROBABILISTIC OT, P29
   Eisner Jason, 1999, P 37 ANN M ASS COMPU, P457
   Eisner Jason, 2007, P FG 2006 11 C FORM, P45
   Felzenszwalb PF, 2007, J ARTIF INTELL RES, V29, P153, DOI 10.1613/jair.2187
   GAIFMAN H, 1965, INFORM CONTROL, V8, P304, DOI 10.1016/S0019-9958(65)90232-9
   Goodman J, 1999, COMPUT LINGUIST, V25, P573
   Hernando D, 2005, IEEE T INFORM THEORY, V51, P2681, DOI 10.1109/TIT.2005.850223
   Hinton GE, 2002, NEURAL COMPUT, V14, P1771, DOI 10.1162/089976602760128018
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   Huang Liang, 2005, P 9 INT WORKSHOP PAR, P53
   Hwa R, 2004, COMPUT LINGUIST, V30, P253, DOI 10.1162/0891201041850894
   Klein D, 2004, TEXT SPEECH LANG TEC, P351
   Koehn Philipp, 2003, HLT NAACL 2003 HUMAN, P48
   Koller D., 2009, Probabilistic graphical models: principles and techniques
   KULLBACK S, 1951, ANN MATH STAT, V22, P79, DOI 10.1214/aoms/1177729694
   Liang P.S., 2008, Advances in Neural Information Processing Systems, P913
   Lopez Adam., 2009, EACL, P532
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Mcallester D, 2002, J ACM, V49, P512, DOI 10.1145/581771.581774
   Mohri M, 1997, COMPUT LINGUIST, V23, P269
   O'Sullivan J.A., 1998, CODES CURVES SIGNALS, P173
   PEREIRA F, 1992, ACL, V30, P128
   Pereira FCN, 1997, LANG SPEECH & COMMUN, P431
   Pettorossi A, 1999, J LOGIC PROGRAM, V41, P197, DOI 10.1016/S0743-1066(99)00029-1
   PETTOROSSI A, 1994, J LOGIC PROGRAM, V20, P261, DOI 10.1016/0743-1066(94)90028-0
   SHANNON CE, 1948, BELL SYST TECH J, V27, P379, DOI 10.1002/j.1538-7305.1948.tb01338.x
   SHIEBER SM, 1995, J LOGIC PROGRAM, V24, P3, DOI 10.1016/0743-1066(95)00035-I
   Smith, 2005, P HUM LANG TECHN C C, P281, DOI [10.3115/1220575.1220611, DOI 10.3115/1220575.1220611]
   Smith A., 2005, ACL, P18
   Smith D. A., 2004, P EMNLP, P49
   Sutton Charles., 2005, PROC C UNCERTAINTY A, P568
   TARJAN RE, 1981, J ACM, V28, P577, DOI 10.1145/322261.322272
   Wu D, 1997, COMPUT LINGUIST, V23, P377
   YOUNGER DH, 1967, INFORM CONTROL, V10, P189, DOI 10.1016/S0019-9958(67)80007-X
NR 44
TC 3
Z9 3
U1 1
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2011
VL 11
BP 263
EP 296
DI 10.1017/S1471068410000529
PN 2-3
PG 34
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 729UV
UT WOS:000287977500006
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Baral, C
   Gelfond, G
   Pontelli, E
   Son, T
AF Baral, C.
   Gelfond, G.
   Pontelli, E.
   Son, T.
TI Logic programming for finding models in the logics of knowledge and its
   applications: A case study
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming
CY JUL 16-19, 2010
CL Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Logic Programming Comm
DE planning; multi-agents; modal logics
AB The logics of knowledge are modal logics that have been shown to be effective in representing and reasoning about knowledge in multi-agent domains. Relatively few computational frameworks for dealing with computation of models and useful transformations in logics of knowledge (e.g., to support multi-agent planning with knowledge actions and degrees of visibility) have been proposed. This paper explores the use of logic programming (LP) to encode interesting forms of logics of knowledge and compute Kripke models. The LP modeling is expanded with useful operators on Kripke structures, to support multi-agent planning in the presence of both world-altering and knowledge actions. This results in the first ever implementation of a planner for this type of complex multi-agent domains.
C1 [Baral, C.; Gelfond, G.] Arizona State Univ, Dept Comp Sci, Tempe, AZ 85287 USA.
   [Pontelli, E.; Son, T.] New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88003 USA.
C3 Arizona State University; Arizona State University-Tempe; New Mexico
   State University
RP Baral, C (corresponding author), Arizona State Univ, Dept Comp Sci, Tempe, AZ 85287 USA.
RI Pontelli, Enrico/AAJ-5161-2021
OI Pontelli, Enrico/0000-0002-7753-1737; Baral, Chitta/0000-0002-7549-723X
FU Direct For Computer & Info Scie & Enginr; Div Of Information &
   Intelligent Systems [0812267] Funding Source: National Science
   Foundation
CR Baltag A, 2004, SYNTHESE, V139, P165, DOI 10.1023/B:SYNT.0000024912.56773.5e
   BARAL C, 2010, PLANNING KNOWL UNPUB
   BARAL C, 2010, INT C AUT AG MULT SY
   DELCERRO LF, 2001, INT JOINT C AUT REAS, P453
   Fagin R, 1995, Reasoning about knowledge
   Halpern J.Y., 1995, Handbook of logic in artifficial intelligence and logic programming, V4, P1
   Halpern JY, 1997, J ARTIF INTELL RES, V7, P1
   Heljanko K, 2003, THEOR PRACT LOG PROG, V3, P519, DOI 10.1017/S1471068403001790
   HORROCKS I, 1998, INT C TABL 98 SPRING, P307
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Son TC, 2006, ACM T COMPUT LOG, V7, P613, DOI 10.1145/1183278.1183279
   van Benthem J, 2006, INFORM COMPUT, V204, P1620, DOI 10.1016/j.ic.2006.04.006
   VanDitmarsch H, 2007, SYNTH LIBR, V337, P1, DOI 10.1007/978-1-4020-5839-4
NR 14
TC 3
Z9 8
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 675
EP 690
DI 10.1017/S1471068410000359
PN 4-6
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200021
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Hou, P
   De Cat, B
   Denecker, M
AF Hou, Ping
   De Cat, Broes
   Denecker, Marc
TI FO(FD): Extending classical logic with rule-based fixpoint definitions
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming (ICLP)
CY JUL 16-19, 2010
CL Univ Edinburgh, Sch Informat, Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Log Programming Comm, EPSRC, NSF, Microsoft Res, Assoc Symbol Log, Google, HP, Intel
HO Univ Edinburgh, Sch Informat
DE fixpoint constructs; fixpoint definitions; classical logic extensions
ID STABLE MODELS; DIFFERENCE; PROPAGATION
AB We introduce fixpoint definitions, a rule-based reformulation of fixpoint constructs. The logic FO(FD), an extension of classical logic with fixpoint definitions, is defined. We illustrate the relation between FO(FD) and FO(ID), which is developed as an integration of two knowledge representation paradigms. The satisfiability problem for FO(FD) is investigated by first reducing FO(FD) to difference logic and then using solvers for difference logic. These reductions are evaluated in the computation of models for FO(FD) theories representing fairness conditions and we provide potential applications of FO(FD).
C1 [Hou, Ping; De Cat, Broes; Denecker, Marc] Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
C3 KU Leuven
RP Hou, P (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, Louvain, Belgium.
EM ping.hou@cs.kuleuven.be; broes.decat@cs.kuleuven.be;
   marc.denecker@cs.kuleuven.be
RI Denecker, Marc/O-1056-2013
OI Denecker, Marc/0000-0002-0422-7339
CR Abiteboul S, 1995, FDN DATABASES
   [Anonymous], 1969, Machine intelligence
   Baader F., 2003, DESCRIPTION LOGIC HD
   Baelde D, 2007, LECT NOTES ARTIF INT, V4790, P92, DOI 10.1007/978-3-540-75560-9_9
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Barwise J., 1996, VICIOUS CIRCLES MATH
   Bradfield J. C., 1996, CONCUR '96: Concurrency Theory. 7th International Conference. Proceedings, P233
   Clark K. L., 1978, Logic and data bases, P293
   Cotton S, 2006, LECT NOTES COMPUT SC, V4121, P170
   Denecker M, 2000, LECT NOTES ARTIF INT, V1861, P703
   Denecker M, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1342991.1342998
   Friedmann O, 2009, LECT NOTES COMPUT SC, V5799, P182, DOI 10.1007/978-3-642-04761-9_15
   Gupta G, 2007, LECT NOTES COMPUT SC, V4670, P27, DOI 10.1007/978-3-540-74610-2_4
   Janhunen T, 2009, LECT NOTES COMPUT SC, V5753, P142, DOI 10.1007/978-3-642-04238-6_14
   Kakas A. C., 1992, Journal of Logic and Computation, V2, P719, DOI 10.1093/logcom/2.6.719
   Keinänen M, 2005, LECT NOTES COMPUT SC, V3392, P134, DOI 10.1007/11415763_9
   Liu XX, 1998, LECT NOTES COMPUT SC, V1384, P5
   MCCARTHY J, 1986, ARTIF INTELL, V28, P89, DOI 10.1016/0004-3702(86)90032-9
   Niemelä I, 2008, ANN MATH ARTIF INTEL, V53, P313, DOI 10.1007/s10472-009-9118-9
   Nieuwenhuis R, 2005, LECT NOTES COMPUT SC, V3576, P321
   SCHLIPF JS, 1995, J COMPUT SYST SCI, V51, P64, DOI 10.1006/jcss.1995.1053
   Syrjanen Tommi., 2001, LP-NMR'01: Proceedings of the 6th International Conference on Logic Programming and Nonmonotonic Reasoning, P434, DOI DOI 10.1007/3-540-45402-038
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Tseitin G.S., 1983, STUDIES CONSTRUCTI 2, P466, DOI DOI 10.1007/978-3-642-81955-128
   Vennekens J, 2009, LECT NOTES COMPUT SC, V5554, P384, DOI 10.1007/978-3-642-02121-3_30
   WITTOCX J, 2008, AAAI C ART INT, P572
NR 26
TC 12
Z9 12
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 581
EP 596
DI 10.1017/S1471068410000293
PN 4-6
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200015
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Le, VH
   Liu, F
   Tran, DK
AF Le, Van Hung
   Liu, Fei
   Tran, Dinh Khang
TI Fuzzy linguistic logic programming and its applications
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE fuzzy logic programming; hedge algebra; linguistic value; linguistic
   hedge; computing with words; databases; querying; threshold computation;
   fuzzy control
AB The paper introduces FUZZY linguistic logic programming, which is a combination of fuzzy logic programming, introduced by P. Vojtas, and hedge algebras in order to facilitate the representation and reasoning on human knowledge expressed in natural languages. In fuzzy linguistic logic programming, truth values are linguistic ones, e.g., Very True, Very Probably True and Little False, taken from a hedge algebra of a linguistic truth variable, and linguistic hedges (modifiers) can be used as unary connectives in formulae. This is motivated by the fact that humans reason mostly in terms of linguistic terms rather than in terms of numbers, and linguistic hedges are often used in natural languages to express different levels of emphasis. The paper presents: (a) the language Of fuzzy linguistic logic programming; (b) a declarative semantics in terms of Herbrand interpretations and models; (c) a procedural semantics which directly manipulates linguistic terms to Compute a lower bound to the truth Value of a query, and proves its soundness; (d) a fixpoint semantics of logic programs, and based on it, proves the completeness of the procedural semantics; (e) several applications of fuzzy linguistic logic programming; and (f) an idea of implementing a system to execute fuzzy linguistic logic programs.
C1 [Le, Van Hung; Liu, Fei] La Trobe Univ, Dept Comp Sci & Comp Engn, Bundoora, Vic 3086, Australia.
   [Tran, Dinh Khang] Hanoi Univ Technol, Fac Informat Technol, Hanoi, Vietnam.
C3 La Trobe University; Hanoi University of Science & Technology (HUST)
RP Le, VH (corresponding author), La Trobe Univ, Dept Comp Sci & Comp Engn, Bundoora, Vic 3086, Australia.
EM vh21e@students.latrobe.edu.au; f.liu@latrobe.edu.au;
   khangtd@it-hut.edu.vn
RI Liu, Fei/AAF-1133-2020
OI Le, Van Hung/0000-0002-8232-2892; Liu, Fei/0000-0002-0245-0799
CR [Anonymous], FUZZY SETS SYST
   [Anonymous], FUZZY SETS SYSTEMS
   Dinh-Khac Dzung, 2006, P 11 INT C INF PROC, P2096
   Gerla G., 2005, Studia Logica, V79, P231, DOI 10.1007/s11225-005-2977-0
   Gerla G, 2001, FUZZY SET SYST, V121, P409, DOI 10.1016/S0165-0114(00)00124-X
   Hajek P., 1998, Metamathematics of Fuzzy Logic
   Krajci S, 2004, FUZZY SET SYST, V144, P173, DOI 10.1016/j.fss.2003.10.019
   Lloyd J. W., 2012, Foundations of Logic Programming
   Medina J, 2004, FUZZY SET SYST, V146, P43, DOI 10.1016/j.fss.2003.11.005
   MORCILLO PJ, 2008, P 12 INT C INF PROC, P481
   NAITO E, 1995, FUZZINESS DATABASE M, P345
   NGUYEN CH, 1999, INT J UNCERTAIN FUZZ, V7, P347
   NGUYEN CH, 1992, FUZZY SETS SYST, V52, P259
   POKORNY J, 2001, LECT NOTES COMPUTER, V2151, P280
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   Ullman J., 1988, PRINCIPLES DATABASE, V1
   Vojtás P, 2001, FUZZY SET SYST, V124, P361, DOI 10.1016/S0165-0114(01)00106-3
   Zadeh L., 1979, MACHINE INTELLIGENCE, P149
   Zadeh L., 1975, Synthese, V30, P407, DOI [DOI 10.1007/BF00485052, 10.1007/BF00485052]
   Zadeh LA, 1997, FUZZY SET SYST, V90, P111, DOI 10.1016/S0165-0114(97)00077-8
   ZADEH LA, 1972, J SIBERIAN, V2, P3
   ZADEH LA, 1975, INFORMATION SCI, V8, P9
   Zedeh L. A., 1989, IEEE Transactions on Knowledge and Data Engineering, V1, P89, DOI 10.1109/69.43406
NR 23
TC 20
Z9 21
U1 0
U2 7
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2009
VL 9
BP 309
EP 341
DI 10.1017/S1471068409003779
PN 3
PG 33
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 477HA
UT WOS:000268508600002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Almendros-Jiménez, JM
   Becerra-Terón, A
   Enciso-Baños, FJ
AF Almendros-Jimenez, J. M.
   Becerra-Teron, A.
   Enciso-Banos, F. J.
TI Querying XML documents in logic programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic programming; XML; XPath
ID SEMANTIC WEB
AB Extensible Markup Language (XML) is a simple, very flexible text format derived from SGML. Originally designed to meet the challenges of large-scale electronic publishing, XML is also playing an increasingly important role in the exchange of a wide variety of data on the Web and elsewhere. XPath language is the result of an effort to provide address parts of an XML document. In support of this primary purpose, it becomes in a query language against an XML document. In this paper we present a proposal for the implementation of the XPath language in logic programming. With this aim we will describe the representation of XML documents by means of a logic program. Rules and facts can be used for representing the document schema and the XML document itself. In particular, we will present how to index XML documents in logic programs: rules are supposed to be stored in main memory, however facts are stored in secondary memory by using two kind of indexes: one for each XML tag, and other for each group of terminal items. In addition, we will study how to query by means of the XPath language against a logic program representing an XML document. It evolves the specialization of the logic program with regard to the XPath expression. Finally, we will also explain how to combine the indexing and the top-down evaluation of the logic program.
C1 [Almendros-Jimenez, J. M.; Becerra-Teron, A.; Enciso-Banos, F. J.] Univ Almeria, Dpto Lenguajes & Computac, Almeria, Spain.
C3 Universidad de Almeria
RP Almendros-Jiménez, JM (corresponding author), Univ Almeria, Dpto Lenguajes & Computac, Almeria, Spain.
EM jalmen@ual.es; abecerra@ual.es; fjenciso@ual.es
RI Jiménez, Jesús Manuel Almendros/F-4584-2018; Becerra-Teron,
   Antonio/AAA-2797-2019
OI Jiménez, Jesús Manuel Almendros/0000-0002-7925-2678; Becerra-Teron,
   Antonio/0000-0001-7583-6353
CR Abiteboul S., 1999, DATA WEB RELATIONS S
   Almendros-Jiménez JM, 2006, J UNIVERS COMPUT SCI, V12, P1651
   ALMENDROSJIMENE.JM, 2007, P WORKSH LOG PROGR U
   [Anonymous], 2002, P ACM SIGMOD INT C M
   Apt K.R., 1990, HDB THEORETICAL COMP, VB, P493
   Atanassow F, 2004, LECT NOTES COMPUT SC, V3057, P71
   Bailey J, 2005, LECT NOTES COMPUT SC, V3564, P35
   Baumgartner R., 2001, em Proceedings of the Artificial Intelligence on Logic for Programming, P548, DOI DOI 10.1007/3-540-45653-8_
   BENZAKEN V, 2005, P ACM SIGPLAN INT C, P51
   Berners-Lee T., 2001, Scientific American May
   BOLEY H, 2000, P WORKSH LOG PROGR W, P19
   BOLEY H, 2000, LNCS, V2112, P201
   Boncz Peter., 2005, P 31 INT C VERY LARG, P1322
   Borgida A, 1996, ARTIF INTELL, V82, P353, DOI 10.1016/0004-3702(96)00004-5
   Bry F, 2002, LECT NOTES COMPUT SC, V2401, P255, DOI 10.1007/3-540-45619-8_18
   BRY F, 2002, LNCS, V2593, P295
   Cabeza D, 2001, THEOR PRACT LOG PROG, V1, P251, DOI 10.1017/S147106840100117X
   Chamberlin D, 2002, IBM SYST J, V41, P597, DOI 10.1147/sj.414.0597
   Chamberlin D., 2004, XQUERY EXPERTS
   Coelho J, 2004, LECT NOTES COMPUT SC, V3291, P1098
   Coelho J, 2003, LECT NOTES COMPUT SC, V2562, P273
   Decker S, 2000, IEEE INTERNET COMPUT, V4, P63, DOI 10.1109/4236.877487
   Fernández M, 2003, LECT NOTES COMPUT SC, V2743, P405
   Fernandez M, 2000, LECT NOTES COMPUT SC, V1974, P11
   Grosof BenjaminN., 2003, P 12 INT WORLD WIDE, P48, DOI DOI 10.1145/775152.775160
   Horrocks I., 2004, Proceedings of the 13th Conference on World Wide Web, May 2004, P723, DOI DOI 10.1145/988672.988771
   Hosoya Haruo, 2003, ACM T INTERNET TECHN, V3, DOI DOI 10.1145/767193.767195
   Marian Amelie., 2003, P 29 INT C VERY LARG, V29, P213
   May W, 2004, THEOR PRACT LOG PROG, V4, P239, DOI 10.1017/S147106840300187X
   O'Neil P., 2004, SIGMOD, P903
   REMY D, 2002, LNCS, V2395, P115
   Schaffert S., 2002, P INT WORKSH RUL MAR
   SEIPEL D, 2002, P WORKSH LOG PROGR 2
   Simeon Jerome., 2003, Proceedings of the 30th ACM SIGPLAN-SIGACT symposium on Principles of programming languages, P1, DOI [10.1145/604131.604132, DOI 10.1145/604131.604132]
   Thiemann P, 2002, J FUNCT PROGRAM, V12, P435, DOI 10.1017/S0956796802004392
   *W3C, 2007, XQUERY 1 0 XML QUER
   W3C, 2004, RES DESCR FRAM
   *W3C, 2007, EXT MARK LANG
   *W3C, 2004, OWL ONT WEB LANG
   *W3C, 2007, XML PATH LANG 2 0
   *W3C, 2001, XML SCHEM 1 0
   WADLER P, 2002, LNCS, V2638, P188
   Wallace M, 1999, ACM SIGPLAN NOTICES, V34, P148, DOI 10.1145/317765.317794
   WIELEMAKER J, 2005, SWI PROLOG SGML XML
   WOLZ R, 2004, THESIS U FRIDERICIAN
NR 45
TC 14
Z9 14
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2008
VL 8
BP 323
EP 361
DI 10.1017/S1471068407003183
PN 3
PG 39
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 304KX
UT WOS:000256109500005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cabalar, P
   Ferraris, P
AF Cabalar, Pedro
   Ferraris, Paolo
TI Propositional theories are strongly equivalent to logic programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer sets; equilibrium logic; logic of here-and-there; strong
   equivalence
AB This paper presents a property of propositional theories under the answer sets semantics (called Equilibrium Logic for this general syntax): any theory can always be reexpressed as a strongly equivalent disjunctive logic program, possibly with negation in the head. We provide two different proofs for this result: one involving a syntactic transformation, and one that constructs a program starting from the countermodels of the theory in the intermediate logic of here-and-there.
C1 [Cabalar, Pedro] Univ A Coruna, Dept Comp Sci, Corunna, Spain.
   [Ferraris, Paolo] Univ Texas Austin, Dept Comp Sci, Austin, TX USA.
C3 Universidade da Coruna; University of Texas System; University of Texas
   Austin
RP Cabalar, P (corresponding author), Univ A Coruna, Dept Comp Sci, Corunna, Spain.
EM cabalar@udc.es; otto@cs.utexas.edu
RI Cabalar, Pedro/AAE-5198-2020
CR Cabalar P, 2005, LECT NOTES ARTIF INT, V3808, P4, DOI 10.1007/11595014_2
   CABALAR P, 2006, UNPUB MINIMAL LOGIC
   De Jongh DHJ, 2003, THEOR PRACT LOG PROG, V3, P259, DOI 10.1017/S147106840200159X
   Ferraris P, 2005, LECT NOTES ARTIF INT, V3662, P119, DOI 10.1007/11546207_10
   Ferraris P, 2005, THEOR PRACT LOG PROG, V5, P45, DOI 10.1017/S1471068403001923
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Heyting A, 1930, SITZBER PREUSS AKAD, P42
   Inoue K, 1998, J LOGIC PROGRAM, V35, P39, DOI 10.1016/S0743-1066(97)10001-2
   LIFSCHITZ V, 1992, PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE (KR 92), P603
   Lifschitz V, 1999, ANN MATH ARTIF INTEL, V25, P369, DOI 10.1023/A:1018978005636
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   LUKASIEWICZ J, 1941, ENTRIES ZURICH FONDA, V16, P82
   MCCLUSKEY EJ, 1956, BELL SYST TECH J, V35, P1417, DOI 10.1002/j.1538-7305.1956.tb03835.x
   PEARCE D, 1997, LNAI, V1216
   Quine Willard V, 1952, AM MATH MON, V59, P521, DOI [DOI 10.2307/2308219, 10.1080/00029890.1952.11988183, DOI 10.1080/00029890.1952.11988183]
   [No title captured]
NR 17
TC 44
Z9 45
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2007
VL 7
BP 745
EP 759
DI 10.1017/S1471068407003110
PN 6
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 239ZR
UT WOS:000251557300003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fernández, AJ
AF Fernandez, Antonio J.
TI Constraint functional logic programming over finite domains
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE constraint logic programming; functional logic programming; finite
   domains
AB In this paper, we present our proposal to Constraint Functional Logic Programming over Finite Domains (CFLP(FD)) with a lazy functional logic programming language which seamlessly embodies finite domain (FD) constraints. This proposal increases the expressiveness and power of constraint logic programming over finite domains (CLP(FD)) by combining functional and relational notation, curried expressions, higher-order functions, patterns, partial applications, non-determinism, lazy evaluation, logical variables, types, domain variables, constraint composition, and finite domain constraints. We describe the syntax of the language, its type discipline, and its declarative and operational semantics. We also describe TOY(FD), an implementation for CFLP(FD), and a comparison of our approach with respect to CLP(FD) from a programming point of view, showing the new features we introduce. And, finally, we show a performance analysis which demonstrates that our implementation is competitive with respect to existing CLP(FD) systems and that clearly outperforms the closer approach to CFLP(FD).
C1 Univ Malaga, Dpto Lenguajes & Ciencias Computac, E-29071 Malaga, Spain.
   Univ Complutense Madrid, Dpto Sistemas Informat & Programac, E-28040 Madrid, Spain.
C3 Universidad de Malaga; Complutense University of Madrid
RP Fernández, AJ (corresponding author), Univ Malaga, Dpto Lenguajes & Ciencias Computac, E-29071 Malaga, Spain.
EM afdez@lcc.uma.es
RI Fernández-Leiva, Antonio J./M-1265-2014; Saenz-Perez,
   Fernando/L-2301-2017
OI Fernández-Leiva, Antonio J./0000-0002-5330-5217; Saenz-Perez,
   Fernando/0000-0001-6075-4398
CR AITKACI H, 1993, J LOGIC PROGRAM, V16, P195, DOI 10.1016/0743-1066(93)90043-G
   [Anonymous], LNCS
   [Anonymous], 2004, Concepts, techniques, and models of computer programming
   [Anonymous], 1989, Constraint Satisfaction in Logic Programming
   [Anonymous], 2003, Principles of Constraint Programming
   [Anonymous], 2003, OVERVIEW SWI PROLOG
   [Anonymous], 1993, Foundations of Constraint Satisfaction
   [Anonymous], 1993, AMPL, a modeling language for mathematical programming
   [Anonymous], 1999, OPL OPTIMIZATION PRO
   Antoy S, 2000, LECT NOTES ARTIF INT, V1794, P171
   ANTOY S, 1992, LECT NOTES COMPUT SC, V632, P143, DOI 10.1007/BFb0013825
   Antoy S, 2000, J ACM, V47, P776, DOI 10.1145/347476.347484
   ARENAS P, 1996, JOINT C DECL PROGR A
   BARNIER N, 2001, ALP NEWSLETTER   MAY, V14
   CABALLERO R, 1997, SIP5797 U COMPL MADR
   Carlsson M., 1997, Programming Languages: Implementations, Logics, and Programs. 9th International Symposium, PLILP'97, Including a Special Track on Declarative Programming Languages in Education. Proceedings, P191, DOI 10.1007/BFb0033845
   Codognet P, 1996, J LOGIC PROGRAM, V27, P185, DOI 10.1016/0743-1066(95)00121-2
   Damas L., 1982, C REC 9 ANN ACM S PR, P207, DOI DOI 10.1145/582153.582176
   DARLINGTON J, 1992, FIFTH GENERATION COMPUTER SYSTEMS 1992, VOLS 1 AND 2, P682
   Dechter R., 2003, Constraint Processing
   DELVADOVIRSEDA R, 2003, ACM SIGPLAN C PRINC, P213
   DIAZ D, 2001, J FUNCTIONAL LOGIC P, V6
   Dincbas M., 1988, ECAI 88. Proceedings of the 8th European Conference on Artificial Intelligence, P290
   ESTEVEZMARTIN S, 2005, 2005 ACM SIGPLAN WOR, P23
   Fernández AJ, 2003, LECT NOTES COMPUT SC, V2562, P320
   FERNANDEZ AJ, 2002, RES DEV INTELLIGENT, P337
   FERNANDEZ AJ, 2004, TOY FD SYSTEM SOURCE
   Fernandez M., 1992, Applicable Algebra in Engineering, Communication and Computing, V3, P1, DOI 10.1007/BF01189020
   Fruhwirth Thom., 2003, COG TECH, DOI 10.1007/978-3-662-05138-2
   González-Moreno JC, 1999, J LOGIC PROGRAM, V40, P47, DOI 10.1016/S0743-1066(98)10029-8
   GONZALEZMORENO J, 1999, LNCS, V1722
   Gunter C.A., 1990, HDB THEORETICAL COMP, P633
   HANUS M, 1994, J LOGIC PROGRAM, V20, P583, DOI 10.1016/0743-1066(94)90034-5
   Hanus M., 1999, CURRY TRULY INTEGRAT
   HANUS M, 2005, PAKCS 1 7 1 USER MAN
   HARALICK RM, 1980, ARTIF INTELL, V14, P263, DOI 10.1016/0004-3702(80)90051-X
   HENZ M, 2000, 5 C ASS AS PAC OP RE
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   López-Fraguas FJ, 2005, ELECTRON NOTES THEOR, V117, P5, DOI 10.1016/j.entcs.2004.06.030
   LOOGEN R, 1993, LECT NOTES COMPUT SC, V714, P184
   LOPEZFRAGUAS F, 1999, LNCS, V1631, P244
   LOPEZFRAGUAS F, 2004, 6 ACM SIGPLAN INT C, P43
   Lux W, 2001, LECT NOTES COMPUT SC, V2024, P185
   MALUSZYNSKI J, 1991, LECT NOTES COMPUTER, V528
   Marin M, 2000, INTERNATIONAL SYMPOSIUM ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P214, DOI 10.1109/ISPSE.2000.913241
   MARIN M, 1999, 3 INT MATH S IMS 99, P23
   MARIN M, 2000, THESIS JOHANNES KEPL
   Marriot K., 1998, Programming with constraints: An introduction
   Middeldorp A, 1998, J SYMB COMPUT, V25, P733, DOI 10.1006/jsco.1997.0197
   MIDDELDORP A, 2002, J FUNCTIONAL LOGIC P, V3
   Peyton-Jones Simon, 1987, IMPLEMENTATION FUNCT
   SHEARER JB, 1990, IEEE T INFORM THEORY, V36, P183, DOI 10.1109/18.50388
   Van Roy P, 2003, THEOR PRACT LOG PROG, V3, P717, DOI 10.1017/S1471068403001741
   Virseda RD, 2005, LECT NOTES COMPUT SC, V3717, P184
NR 54
TC 9
Z9 9
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2007
VL 7
BP 537
EP 582
DI 10.1017/S1471068406002924
PN 5
PG 46
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 219CP
UT WOS:000250062600002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lonc, Z
   Truszczynski, M
AF Lonc, Zbigniew
   Truszczynski, Miroslaw
TI Computing minimal models, stable models and answer sets
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE stable models; answer sets; minimal models; disjunctive logic programs
ID CIRCUMSCRIPTION; SEMANTICS
AB We propose and Study algorithms to compute minimal models. stable models and answer sets of t-CNF theories, and normal and disjunctive t-programs. We are especially interested in algorithms with non-trivial worst-case performance bounds. The bulk of the paper is concerned with the classes of 2- and 3-CNF theories, and normal and disjunctive 2- and 3-programs, for which we obtain significantly stronger results than those implied by our general considerations. We show that one can find all minimal models of 2-CNF theories and all answer sets of disjunctive 2-programs in time O(ml.4422.."). Our main results concern computing stable models of normal 3-programs, minimal models of 3-CNF theories and answer sets of disjunctive 3-programs. We design algorithms that run in time O(ml.6701.."), in the case of the first problem, and in time O(mn(2)2.2782..(n)), in the case of the latter two. All these bounds improve by exponential factors the best algorithms known previously. We also obtain closely related upper bounds on the number of minimal models, stable models and answer sets a t-CNF theory, a normal t-program or a disjunctive t-program may have.
C1 Warsaw Univ Technol, Fac Math & Informat Sci, PL-00661 Warsaw, Poland.
   Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
C3 Warsaw University of Technology; University of Kentucky
RP Lonc, Z (corresponding author), Warsaw Univ Technol, Fac Math & Informat Sci, PL-00661 Warsaw, Poland.
EM zblonc@mini.pw.edu.pl; mirek@cs.uky.edu
OI Lonc, Zbigniew/0000-0001-6650-6774
CR Aho AV., 1974, DESIGN ANAL COMPUTER
   [Anonymous], 1997, Nonmonotonic Reasoning: An Overview
   BENELIYAHU R, 1994, MOR KAUF R, P39
   CADOLI M, 1994, J COMPUT SYST SCI, V48, P255, DOI 10.1016/S0022-0000(05)80004-2
   Dantsin E, 2002, THEOR COMPUT SCI, V289, P69, DOI 10.1016/S0304-3975(01)00174-8
   EAST D, 2006, IN PRESS ACM T COMPU
   Eiter T, 2000, SPRINGER INT SER ENG, V597, P79
   Eiter T, 1995, ANN MATH ARTIF INTEL, V15, P289, DOI 10.1007/BF01536399
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Kullmann O, 1999, THEOR COMPUT SCI, V223, P1, DOI 10.1016/S0304-3975(98)00017-6
   LIFSHITZ V, 1988, J PHILOS LOGIC, V17, P391, DOI 10.1007/BF00297512
   Lonc Z, 2004, THEOR PRACT LOG PROG, V4, P193, DOI 10.1017/S147106840300173X
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Marek W., 1993, NONMONOTONIC LOGIC C
   MCCARTHY J, 1980, ARTIF INTELL, V13, P27, DOI 10.1016/0004-3702(80)90011-9
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   NIEMELA I, 1996, LECT NOTES COMPUTER, P278
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
NR 19
TC 6
Z9 6
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2006
VL 6
BP 395
EP 449
DI 10.1017/S1471068405002607
PN 4
PG 55
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 063OZ
UT WOS:000239030600002
DA 2024-07-18
ER

PT J
AU Konczak, K
   Linke, T
   Schaub, T
AF Konczak, K
   Linke, T
   Schaub, T
TI Graphs and colorings for answer set programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; operational semantics; answer set computation;
   graph-based characterization
ID LOGIC PROGRAMS; DEFAULT; SEMANTICS; FIXPOINT
AB We investigate the usage of rule dependency graphs and their colorings for characterizing and computing answer sets of logic programs. This approach provides us with insights into the interplay between rules when inducing answer sets. We start with different characterizations of answer sets in terms of totally colored dependency graphs that differ ill graph-theoretical aspects. We then develop a series of operational characterizations of answer sets in terms of operators on partial colorings. In analogy to the notion of a derivation in proof theory, our operational characterizations are expressed as (non-deterministically formed) sequences of colorings, turning an uncolored graph into a totally colored one. In this way, we obtain an operational framework in which different combinations of operators result in different formal properties. Among others, we identify the basic strategy employed by the noMoRe system and justify its algorithmic approach. Furthermore, we distinguish operations corresponding to Fitting's operator as well as to well-founded semantics.
C1 Univ Potsdam, Inst Informat, D-14439 Potsdam, Germany.
   Simon Fraser Univ, Sch Comp Sci, Burnaby, BC V5A 1S6, Canada.
C3 University of Potsdam; Simon Fraser University
RP Univ Potsdam, Inst Informat, Postfach 90 03 27, D-14439 Potsdam, Germany.
EM konczak@cs.uni-potsdam.de; linke@cs.uni-potsdam.de;
   torsten@cs.uni-potsdam.de
RI Schaub, Torsten/O-5873-2019
OI Schaub, Torsten/0000-0002-7456-041X
CR Anger C, 2002, LECT NOTES ARTIF INT, V2424, P521, DOI 10.1007/3-540-45757-7_46
   [Anonymous], 1988, International Symposium on Logic Programming
   [Anonymous], 1996, Principles of Knowledge Representation
   Apt K., 1987, F DEDUCTIVE DATABASE, P89
   BARAL C, 1994, J LOGIC PROGRAM, V12, P1
   Bonatti PA, 1996, LECT NOTES ARTIF INT, V1071, P127
   Bonatti PA, 2001, J AUTOM REASONING, V27, P391, DOI 10.1023/A:1011960831261
   Bonatti PA, 1997, LECT NOTES ARTIF INT, V1227, P107, DOI 10.1007/BFb0027408
   Bösel A, 2004, LECT NOTES COMPUT SC, V3229, P702, DOI 10.1007/978-3-540-30227-8_61
   Brass S, 2001, THEOR PRACT LOG PROG, V1, P497, DOI 10.1017/S147106840100103X
   BRIGNOLI G, 1999, P C INF TECHN BHUB I, P197
   CALIMERI F, 2001, INFSYS RR18430107 TU
   Clark Keith L., 1978, LOGIC DATA BASES, P293, DOI [10.1007/978-1-4684-3384-5_11, DOI 10.1007/978-1-4684-3384-5_11]
   Costantini S, 2002, INFORM PROCESS LETT, V84, P241, DOI 10.1016/S0020-0190(02)00290-9
   COSTANTINI S, 2005, IN PRESS THEORY PRAC
   COSTANTINI S, 2001, P AAAI SPRING 2001 S
   Denecker M, 2000, SPRINGER INT SER ENG, V597, P127
   Dimopoulos Y, 1996, THEOR COMPUT SCI, V170, P209, DOI 10.1016/S0304-3975(96)80707-9
   Eiter T, 1999, AI COMMUN, V12, P99
   FABER W, 2002, THESIS TU WIEN
   FAGES F, 1994, J METHODS LOGIC COMP, V1, P51
   Fitting M, 2002, THEOR COMPUT SCI, V278, P25, DOI 10.1016/S0304-3975(00)00330-3
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Janhunen T, 2000, LECT NOTES ARTIF INT, V1861, P852
   Konczak K, 2004, LECT NOTES ARTIF INT, V2923, P127
   Konczak K, 2003, FUND INFORM, V57, P393
   KONCZAK K, 2003, P 2 INT WORKSH ANSW, V78, P137
   KONCZAK K, GRAPHS COLORING ANSW
   LEONE, 2005, IN PRESS ACM T COMPU
   Lin F., 2003, IJCAI 03, P853
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Linke T, 2002, LECT NOTES ARTIF INT, V2424, P468, DOI 10.1007/3-540-45757-7_39
   Linke T, 2000, ARTIF INTELL, V124, P31, DOI 10.1016/S0004-3702(00)00060-6
   Linke T, 1998, LECT NOTES ARTIF INT, V1489, P233, DOI 10.1007/3-540-49545-2_16
   LINKE T, 2003, P 2 INT WORKSH ANSW, V78, P81
   LINKE T, 2001, P INT JOINT C ART IN, P641
   Lloyd J. W., 2012, Foundations of Logic Programming
   Lonc Z, 2001, THEOR PRACT LOG PROG, V1, P591, DOI 10.1017/S1471068401001053
   NIEMELA L, 1996, P INT JOINT C LOGIC, P289
   PAPADIMITRIOU CH, 1994, ARTIF INTELL, V69, P347, DOI 10.1016/0004-3702(94)90087-6
   Przymusinski T., 1990, Fundamenta Informaticae, V13, P445
   Przymusinski T. C., 1988, F DEDUCTIVE DATABASE, P193
   REITER R, 1980, ARTIF INTELL, V13, P81, DOI 10.1016/0004-3702(80)90014-4
   ROSS KA, 1992, J LOGIC PROGRAM, V13, P1, DOI 10.1016/0743-1066(92)90019-Y
   SACCA D, 1990, PROCEEDINGS OF THE NINTH ACM SIGACT-SIGMOD-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P205, DOI 10.1145/298514.298572
   SAGONAS K, 1996, P JOINT INT C S LOG, P274
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   SUBRAHMANIAN VS, 1995, IEEE T KNOWL DATA EN, V7, P362, DOI 10.1109/69.390244
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   VANGELDER A, 1993, J COMPUT SYST SCI, V47, P185, DOI 10.1016/0022-0000(93)90024-Q
   Ward J, 2004, LECT NOTES ARTIF INT, V2923, P302
NR 51
TC 9
Z9 9
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2006
VL 6
BP 61
EP 106
DI 10.1017/S1471068405002528
PN 1-2
PG 46
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 011WO
UT WOS:000235299500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rankooh, MF
   Janhunen, T
AF Rankooh, Masood Feyzbakhsh
   Janhunen, Tomi
TI Capturing (Optimal) Relaxed Plans with Stable and Supported Models of
   Logic Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE planning heuristics; answer set programming; optimal delete-free
   planning; supported models; acyclicity constraint; dependency graph;
   vertex elimination
AB We establish a novel relation between delete-free planning, an important task for the AI planning community also known as relaxed planning, and logic programming. We show that given a planning problem, all subsets of actions that could be ordered to produce relaxed plans for the problem can be bijectively captured with stable models of a logic program describing the corresponding relaxed planning problem. We also consider the supported model semantics of logic programs, and introduce one causal and one diagnostic encoding of the relaxed planning problem as logic programs, both capturing relaxed plans with their supported models. Our experimental results show that these new encodings can provide major performance gain when computing optimal relaxed plans, with our diagnostic encoding outperforming state-of-the-art approaches to relaxed planning regardless of the given time limit when measured on a wide collection of STRIPS planning benchmarks.
C1 [Rankooh, Masood Feyzbakhsh; Janhunen, Tomi] Tampere Univ, Tampere, Finland.
C3 Tampere University
RP Rankooh, MF (corresponding author), Tampere Univ, Tampere, Finland.
EM masood.feyzbakhshrankooh@tuni.fi; tomi.janhunen@tuni.fi
OI Feyzbakhsh Rankooh, Masood/0000-0001-5660-3052; Janhunen,
   Tomi/0000-0002-2029-7708
FU Academy of Finland [345633]
FX Acknowledgements Financial support from the Academy of Finland (Project
   XAILOG, #345633) is gratefully acknowledged.
CR Betz C, 2009, LECT NOTES ARTIF INT, V5803, P9, DOI 10.1007/978-3-642-04617-9_2
   Bomanson J, 2016, FUND INFORM, V147, P63, DOI 10.3233/FI-2016-1398
   Bonet B, 2001, ARTIF INTELL, V129, P5, DOI 10.1016/S0004-3702(01)00108-4
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   BYLANDER T, 1994, ARTIF INTELL, V69, P165, DOI 10.1016/0004-3702(94)90081-7
   Correa AB., 2021, Proceedings of the International Conference on Automated Planning and Scheduling, Volume, V31, P94
   Corrêa AB, 2022, AAAI CONF ARTIF INTE, P9716
   Faber Wolfgang, 2022, Practical Aspects of Declarative Languages: 24th International Symposium, PADL 2022, Proceedings. Lecture Notes in Computer Science, Programming and Software Engineering (13165), P42, DOI 10.1007/978-3-030-94479-7_4
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P368, DOI 10.1007/978-3-319-23264-5_31
   Gefen A., 2011, P 21 INT C AUT PLANN
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Ghallab M., 2004, AUTOMATED PLANNING T
   Haslum P., 2012, P 22 INT C AUT PLANN
   Haslum P., 2015, HSP CODE DOCUMENTATI
   Haslum P., 2012, P INT C AUTOMATED PL, P353
   Helmert M., 2009, INT C AUT PLANN SCHE, P162
   Hoffmann J, 2001, J ARTIF INTELL RES, V14, P253, DOI 10.1613/jair.855
   Imai T, 2015, J ARTIF INTELL RES, V54, P631, DOI 10.1613/jair.4936
   Keyder E, 2008, FRONT ARTIF INTEL AP, V178, P588, DOI 10.3233/978-1-58603-891-5-588
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   MAREK W, 1992, THEOR COMPUT SCI, V103, P365, DOI 10.1016/0304-3975(92)90019-C
   Mirkis V., 2007, P ICAPS 2007, P240
   Rankooh M. F., 2022, P 32 INT C AUT PLANN, P71
   Rankooh MF, 2022, AAAI CONF ARTIF INTE, P9910
   Rankooh MF, 2022, AAAI CONF ARTIF INTE, P5861
   Rankooh MF, 2022, LECT NOTES ARTIF INT, V13416, P203, DOI 10.1007/978-3-031-15707-3_16
   Robinson N, 2014, AAAI CONF ARTIF INTE, P2344
   Rose D. J., 1975, P 7 ANN ACM S THEOR, P245
   Russell S., 2020, ARTIF INTELL
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Son TC, 2006, ACM T COMPUT LOG, V7, P613, DOI 10.1145/1183278.1183279
   Son TC, 2018, KUNSTL INTELL, V32, P133, DOI 10.1007/s13218-018-0546-8
NR 32
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2023
VL 23
IS 4
SI SI
BP 782
EP 796
AR PII S1471068423000273
DI 10.1017/S1471068423000273
EA JUL 2023
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7Z0
UT WOS:001030342400001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Pendharkar, D
   Basu, K
   Shakerin, F
   Gupta, G
AF Pendharkar, Dhruva
   Basu, Kinjal
   Shakerin, Farhad
   Gupta, Gopal
TI An ASP-based Approach to Answering Natural Language Questions for Texts
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE ASP; commonsense reasoning; NLP; KR; natural language question answering
AB An approach based on answer set programming (ASP) is proposed in this paper for representing knowledge generated from natural language texts. Knowledge in a text is modeled using a Neo Davidsonian-like formalism, which is then represented as an answer set program. Relevant commonsense knowledge is additionally imported from resources such as WordNet and represented in ASP. The resulting knowledge-base can then be used to perform reasoning with the help of an ASP system. This approach can facilitate many natural language tasks such as automated question answering, text summarization, and automated question generation. ASP-based representation of techniques such as default reasoning, hierarchical knowledge organization, preferences over defaults, etc., are used to model commonsense reasoning methods required to accomplish these tasks. In this paper, we describe the CASPR system that we have developed to automate the task of answering natural language questions given English text. CASPR can be regarded as a system that answers questions by "understanding" the text and has been tested on the SQuAD data set, with promising results.
C1 [Pendharkar, Dhruva; Basu, Kinjal; Shakerin, Farhad; Gupta, Gopal] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75080 USA.
C3 University of Texas System; University of Texas Dallas
RP Pendharkar, D (corresponding author), Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75080 USA.
EM Dhruva.Pendharkar@utdallas.edu; Kinjal.Basu@utdallas.edu;
   Farhad.Shakerin@utdallas.edu; gupta@utdallas.edu
OI Basu, Kinjal/0000-0001-8693-9307
FU NSF [IIS 1910131, IIS 1718945]
FX Thanks to Sarat Varanasi, Elmer Salazar, Joaquin Arias, Zhuo Chen, and
   Serdar Erbatur for discussions and help. Authors gratefully acknowledge
   support from NSF grants IIS 1910131 and IIS 1718945.
CR Alviano M., 2011, DATALOG RELOADED, V282, P301
   Arias J., 2018, ARXIV PREPRINT ARXIV
   Auer S, 2007, LECT NOTES COMPUT SC, V4825, P722, DOI 10.1007/978-3-540-76298-0_52
   Baral C., 2013, P 1 WORKSH NAT LANG, V1044
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Basu K., 2021, ARXIV PREPRINT ARXIV
   Basu K., 2020, ARXIV PREPRINT ARXIV
   Basu K, 2020, LECT NOTES COMPUT SC, V12007, P57, DOI 10.1007/978-3-030-39197-3_4
   Chen Z, 2016, THEOR PRACT LOG PROG, V16, P604, DOI 10.1017/S1471068416000429
   Clark P., 2018, ARXIV PREPRINT ARXIV
   Costantini S., 2010, CILC"
   Davidson Donald., 1984, INQUIRIES TRUTH INTE
   De Marneffe M.-C., 2008, Stanford Typed Dependencies Manual
   De Marneffe M.-C., 2014, LREC, V14, p4585 4592
   Finkel Jenny Rose, 2005, ACL, P363
   Gebser M., 2010, GRINGO CLASP CLIN IC
   Gelfond M, 2014, KNOWLEDGE REPRESENTATION, REASONING, AND THE DESIGN OF INTELLIGENT AGENTS: THE ANSWER-SET PROGRAMMING APPROACH, P1, DOI 10.1017/CBO9781139342124
   Gelfond M., 1988, ICLP SLP, V88, p1070 1080
   Jonson-Laird P., 2009, WE REASON
   Jurafsky D., 2000, Speech and language processing: An introduction to natural language processing, computational linguistics, and speech recognition
   Kipper K., 2006, Proceedings of the International Conference on Language Resources and Evaluation, P1027
   Mahdisoltani F., 2015, CIDR, P1
   Manning C. D., 2014, ACL SYSTEM DEMONSTRA, V55, P60
   Marple K., 2017, ARXIV PREPRINT ARXIV
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Mitchell T, 2015, AAAI CONF ARTIF INTE, P2302
   Olson C, 2019, ELECTRON P THEOR COM, P87, DOI 10.4204/EPTCS.306.16
   Pendharkar D., 2018, CASPR
   Pendharkar D., 2018, THESIS U TEXAS DALLA
   Rajpurkar P., 2016, P 2016 C EMP METH NA, V2016, P2383
   Schuster S., 2016, LRED16, p2371 2378
   Vo NH, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P899
   Vrandecic D, 2014, COMMUN ACM, V57, P78, DOI 10.1145/2629489
   Wikipedia contributors, 2018, CYC WIK FREE ENC
   Zhang QL, 2020, THEOR PRACT LOG PROG, V20, P273, DOI 10.1017/S1471068419000048
NR 35
TC 2
Z9 2
U1 1
U2 6
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2022
VL 22
IS 3
BP 419
EP 443
AR PII S1471068421000594
DI 10.1017/S1471068421000594
EA FEB 2022
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 6N1DF
UT WOS:000792182400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pasi, G
   Peñaloza, R
AF Pasi, Gabriella
   Penaloza, Rafael
TI Answering Fuzzy Queries over Fuzzy DL-Lite Ontologies
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE fuzzy description logics; query answering; DL-Lite; mathematical fuzzy
   logic
ID DESCRIPTION LOGICS
AB A prominent problem in knowledge representation is how to answer queries taking into account also the implicit consequences of an ontology representing domain knowledge. While this problem has been widely studied within the realm of description logic ontologies, it has been surprisingly neglected within the context of vague or imprecise knowledge, particularly from the point of view of mathematical fuzzy logic. In this paper, we study the problem of answering conjunctive queries and threshold queries w.r.t. ontologies in fuzzy DL-Lite. Specifically, we show through a rewriting approach that threshold query answering w.r.t. consistent ontologies remains in AC(0) in data complexity, but that conjunctive query answering is highly dependent on the selected triangular norm, which has an impact on the underlying semantics. For the idempotent Godel t-norm, we provide an effective method based on a reduction to the classical case.
C1 [Pasi, Gabriella; Penaloza, Rafael] Univ Milano Bicocca, Milan, Italy.
C3 University of Milano-Bicocca
RP Pasi, G (corresponding author), Univ Milano Bicocca, Milan, Italy.
EM gabriella.pasi@unimib.it; rafael.penaloza@unimib.it
RI Pasi, Gabriella/JNT-5582-2023
OI Penaloza, Rafael/0000-0002-2693-5790
CR Abiteboul Serge, 1994, Foundations of Databases
   Artale A, 2009, J ARTIF INTELL RES, V36, P1, DOI 10.1613/jair.2820
   BAADER F, 2007, DESCRIPTION LOGIC HD
   Borgwardt, 2014, THESIS TECHNISCHE UN
   Borgwardt S, 2017, INT J APPROX REASON, V91, P179, DOI 10.1016/j.ijar.2017.09.005
   Borgwardt S, 2017, LECT NOTES ARTIF INT, V10564, P31, DOI 10.1007/978-3-319-67582-4_3
   Borgwardt S, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2812
   Borgwardt S, 2015, ARTIF INTELL, V218, P23, DOI 10.1016/j.artint.2014.09.001
   Calvanese D, 2007, J AUTOM REASONING, V39, P385, DOI 10.1007/s10817-007-9078-x
   Calvanese Diego., 2015, 23 ITALIAN S ADV DAT, P296
   Cerami M., 2012, THESIS U BARCELONA
   Cerami M., 2015, Studies in Logic, V58
   Cook S. A., 1971, Proceedings of the 3rd annual ACM symposium on theory of computing, P151
   FURST M, 1984, MATH SYST THEORY, V17, P13, DOI 10.1007/BF01744431
   Gottlob G, 2011, PROC INT CONF DATA, P2, DOI 10.1109/ICDE.2011.5767965
   Hajek P., 1998, Metamathematics of Fuzzy Logic
   Jimenez-Ruiz, 2012, CEUR WORKSHOP PROC, V858
   Klement E.P., 2000, Trends in Logic, V8
   Konev, 2015, CEUR WORKSHOP PROC, V1350
   Lukasiewicz T, 2008, J WEB SEMANT, V6, P291, DOI 10.1016/j.websem.2008.04.001
   Mailis T, 2015, LECT NOTES COMPUT SC, V8943, P63, DOI 10.1007/978-3-319-15615-6_5
   MOSTERT PS, 1957, ANN MATH, V65, P117, DOI 10.2307/1969668
   Ortiz Magdalena, 2012, Reasoning Web. Semantic Technologies for Advanced Query Answering. Proceedings of the 8th International Summer School 2012, P1, DOI 10.1007/978-3-642-33158-9_1
   Papadimitriou C. H., 1994, Computational Complexity
   Pasi G, 2020, LECT NOTES COMPUT SC, V12173, P39, DOI 10.1007/978-3-030-57977-7_3
   Pérez-Urbina H, 2010, J APPL LOGIC, V8, P186, DOI 10.1016/j.jal.2009.09.004
   Schwentick G., 2012, P 13 INT C PRINC KNO
   Straccia U, 2006, LECT NOTES ARTIF INT, V4160, P439, DOI 10.1007/11853886_36
   Straccia U, 2012, INFORM SCIENCES, V198, P1, DOI 10.1016/j.ins.2012.02.026
   Tarski A., 1955, PAC J MATH, V5, P285, DOI DOI 10.2140/PJM.1955.5.285
   Thomas E, 2007, P 2007 INT WORKSH DE, V250
   Turhan A., 2014, CEUR WORKSHOP P, V1205, P52
   van Leeuwen J., 1990, HDB THEORETICAL COMP, VA, P757, DOI DOI 10.1016/B978-0-444-88071-0.50019-9]2
NR 33
TC 0
Z9 0
U1 1
U2 1
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2023
VL 23
IS 3
SI SI
BP 594
EP 623
AR PII S1471068421000569
DI 10.1017/S1471068421000569
EA JAN 2022
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA IF3Y0
UT WOS:000740077300001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Bertossi, L
AF Bertossi, Leopoldo
TI Declarative Approaches to Counterfactual Explanations for Classification
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE classification; explanations; counterfactuals; causality; answer-set
   programming; constraints
ID QUERY ANSWERS; RESPONSIBILITY; COMPLEXITY; ABDUCTION; SYSTEM
AB We propose answer-set programs that specify and compute counterfactual interventions on entities that are input on a classification model. In relation to the outcome of the model, the resulting counterfactual entities serve as a basis for the definition and computation of causality-based explanation scores for the feature values in the entity under classification, namely responsibility scores. The approach and the programs can be applied with black-box models, and also with models that can be specified as logic programs, such as rule-based classifiers. The main focus of this study is on the specification and computation of best counterfactual entities, that is, those that lead to maximum responsibility scores. From them one can read off the explanations as maximum responsibility feature values in the original entity. We also extend the programs to bring into the picture semantic or domain knowledge. We show how the approach could be extended by means of probabilistic methods, and how the underlying probability distributions could be modified through the use of constraints. Several examples of programs written in the syntax of the DLV ASP-solver, and run with it, are shown.
C1 [Bertossi, Leopoldo] Univ Adolfo Ibanez, Fac Engn & Sci, Santiago, Chile.
   [Bertossi, Leopoldo] Millennium Inst Fdn Res Data IMFD, Santiago, Chile.
C3 Universidad Adolfo Ibanez
RP Bertossi, L (corresponding author), Univ Adolfo Ibanez, Fac Engn & Sci, Santiago, Chile.; Bertossi, L (corresponding author), Millennium Inst Fdn Res Data IMFD, Santiago, Chile.
EM leopoldo.bertossi@uai.cl
FU ANID -Millennium ScienceInitiative Program [ICN17002]
FX The author has been a member of RelationalAI's Academic Network, which
   has been a source of inspiration for this work, and much more. Part of
   this work was funded by ANID -Millennium ScienceInitiative Program -
   Code ICN17002. Help from Jessica Zangari and Mario Alviano with
   information about DLV2, and from Gabriela Reyes with the DLV program
   runs is much appreciated.
CR Alviano M, 2019, LECT NOTES ARTIF INT, V11481, P241, DOI 10.1007/978-3-030-20528-7_18
   Alviano M, 2017, LECT NOTES ARTIF INT, V10377, P215, DOI 10.1007/978-3-319-61660-5_19
   [Anonymous], 2011, Synthesis Lectures on Data Management
   Baral C, 2009, THEOR PRACT LOG PROG, V9, P57, DOI 10.1017/S1471068408003645
   Ben-Eliyahu R., 1994, Annals of Mathematics and Artificial Intelligence, V12, P53, DOI 10.1007/BF01530761
   Bertossi L, 2021, KNOWL INF SYST, V63, P199, DOI 10.1007/s10115-020-01516-6
   Bertossi L, 2020, LECT NOTES COMPUT SC, V12173, P70, DOI 10.1007/978-3-030-57977-7_5
   Bertossi L, 2020, ACM J DATA INF QUAL, V12, DOI 10.1145/3386687
   Bertossi L, 2019, PROCEEDINGS OF THE 38TH ACM SIGMOD-SIGACT-SIGAI SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS (PODS '19), P48, DOI 10.1145/3294052.3322190
   Bertossi L, 2017, INT J APPROX REASON, V90, P226, DOI 10.1016/j.ijar.2017.07.010
   Bertossi L, 2017, THEOR COMPUT SYST, V61, P191, DOI 10.1007/s00224-016-9718-9
   Brewka G, 2015, AAAI CONF ARTIF INTE, P1467
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Calimeri F, 2009, LECT NOTES COMPUT SC, V5753, P483, DOI 10.1007/978-3-642-04238-6_46
   Caniupán M, 2010, DATA KNOWL ENG, V69, P545, DOI 10.1016/j.datak.2010.01.005
   Chockler H, 2004, J ARTIF INTELL RES, V22, P93, DOI 10.1613/jair.1391
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Darwiche, 2007, ARXIV200701493, P2020
   Darwiche A, 2020, FRONT ARTIF INTEL AP, V325, P712, DOI 10.3233/FAIA200158
   Datta A, 2016, P IEEE S SECUR PRIV, P598, DOI 10.1109/SP.2016.42
   Eiter T, 1997, THEOR COMPUT SCI, V189, P129, DOI 10.1016/S0304-3975(96)00179-X
   Eiter T, 2018, KUNSTL INTELL, V32, P187, DOI 10.1007/s13218-018-0535-y
   Flach P, 2012, MACH LEARN
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P821, DOI 10.1017/S1471068411000329
   Gelfond M, 2014, KNOWLEDGE REPRESENTATION, REASONING, AND THE DESIGN OF INTELLIGENT AGENTS: THE ANSWER-SET PROGRAMMING APPROACH, P1, DOI 10.1017/CBO9781139342124
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Giannotti F, 1997, ANN MATH ARTIF INTEL, V19, P97, DOI 10.1023/A:1018999404360
   Halpern JY, 2005, BRIT J PHILOS SCI, V56, P843, DOI 10.1093/bjps/axi147
   Ignatiev A, 2019, AAAI CONF ARTIF INTE, P1511
   Ignatiev A, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5154
   Izza Y., 2021, IJCAI, P2584
   Karimi AH, 2020, PR MACH LEARN RES, V108, P895
   Kratochvil V., 2018, P INT C PROB GRAPH M, V72, P157
   Law M, 2019, LECT NOTES COMPUT SC, V11810, P196, DOI 10.1007/978-3-030-31423-1_6
   Lee J, 2017, AAAI CONF ARTIF INTE, P1170
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lin I., ADV NEURAL INFORM PR
   Lundberg SM, 2020, NAT MACH INTELL, V2, P56, DOI 10.1038/s42256-019-0138-9
   Martens D, 2014, MIS QUART, V38, P73, DOI 10.25300/MISQ/2014/38.1.04
   Meliou A, 2010, PROC VLDB ENDOW, V4, P34, DOI 10.14778/1880172.1880176
   Mitchell T. M., 1997, MACH LEARN
   Molnar C, 2020, COMM COM INF SC, V1323, P417, DOI 10.1007/978-3-030-65965-3_28
   Monet M, 2012, P 35 AAAI C ART INT, P6670
   Narodytska N, 2019, LECT NOTES COMPUT SC, V11628, P267, DOI 10.1007/978-3-030-24258-9_19
   Neuberg LG, 2003, ECONOMET THEOR, V19, P675, DOI 10.1017/S026646603004109
   Reyes G., LNCS
   Ribeiro MT, 2018, AAAI CONF ARTIF INTE, P1527
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   Rudin C, 2019, NAT MACH INTELL, V1, P206, DOI 10.1038/s42256-019-0048-x
   Russell C, 2019, FAT*'19: PROCEEDINGS OF THE 2019 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P20, DOI 10.1145/3287560.3287569
   Schleich M, 2021, PROC VLDB ENDOW, V14, P1681, DOI 10.14778/3461535.3461555
   Shi WJ, 2020, KR2020: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P882
   Staab S., LNCS, V10370, P204
   Stoyanovich, 2020, P 4 WORKSH DAT MAN E
   Ustun B, 2019, FAT*'19: PROCEEDINGS OF THE 2019 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P10, DOI 10.1145/3287560.3287566
   Van den Broeck G, 2021, AAAI CONF ARTIF INTE, V35, P6505
   Wachter S., 2018, Harv. JL & Tech., V31, P841, DOI DOI 10.2139/SSRN.3063289
   Wang E., 2021, IJCAI, P3082
NR 59
TC 2
Z9 2
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2023
VL 23
IS 3
SI SI
BP 559
EP 593
AR PII S1471068421000582
DI 10.1017/S1471068421000582
EA DEC 2021
PG 35
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA IF3Y0
UT WOS:000734688600001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Van Dessel, K
   Devriendt, J
   Vennekens, J
AF Van Dessel, Kylian
   Devriendt, Jo
   Vennekens, Joost
TI FOLASP: <i>FO</i>(.) <i>as Input Language for Answer Set Solvers</i>
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE declarative programming; first order logic; answer set programming
AB Technological progress in Answer Set Programming (ASP) has been stimulated by the use of common standards, such as the ASP-Core-2 language. While ASP has its roots in nonmonotonic reasoning, efforts have also been made to reconcile ASP with classical first-order (FO) logic. This has resulted in the development of FO(.), an expressive extension of FO, which allows ASP-like problem solving in a purely classical setting. This language may be more accessible to domain experts already familiar with FO and may be easier to combine with other formalisms that are based on classical logic. It is supported by the IDP inference system, which has successfully competed in a number of ASP competitions. Here, however, technological progress has been hampered by the limited number of systems that are available for FO(.). In this paper, we aim to address this gap by means of a translation tool that transforms an FO(.) specification into ASP-Core-2, thereby allowing ASP-Core-2 solvers to be used as solvers for FO(.) as well. We present experimental results to show that the resulting combination of our translation with an off-the-shelf ASP solver is competitive with the IDP system as a way of solving problems formulated in FO(.).
C1 [Van Dessel, Kylian] Katholieke Univ Leuven, Dept Comp Sci, De Nayer Campus, St Katelijne Waver, Belgium.
   Katholieke Univ Leuven, Inst AI, Leuven AI, Leuven, Belgium.
C3 KU Leuven; KU Leuven
RP Van Dessel, K (corresponding author), Katholieke Univ Leuven, Dept Comp Sci, De Nayer Campus, St Katelijne Waver, Belgium.
EM kylian.vandessel@kuleuven.be; jo.devriendt@kuleuven.be;
   joost.vennekens@kuleuven.be
RI Vennekens, Joost/ABE-6600-2020
OI Vennekens, Joost/0000-0002-0791-0176
CR Aavani A., 2014, THESIS S FRASER U VA
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P42, DOI 10.1007/978-3-642-40564-8_5
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], 2001, MATH INTRO LOGIC
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   De Cat B, 2018, Arxiv, DOI arXiv:1401.6312
   De Cat B, 2015, J ARTIF INTELL RES, V52, P235, DOI 10.1613/jair.4591
   De Cat B, 2013, PROC INT C TOOLS ART, P1068, DOI 10.1109/ICTAI.2013.159
   Denecker M., 2012, TECHNICAL COMMUNICAT, V17, P227
   Denecker M, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1342991.1342998
   Gebser M., 2016, OASICS, V52
   Gebser M, 2020, THEOR PRACT LOG PROG, V20, P176, DOI 10.1017/S1471068419000061
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Mariën M, 2004, LECT NOTES COMPUT SC, V3229, P108, DOI 10.1007/978-3-540-30227-8_12
   Van Gelder A., 1988, Proceedings of the Seventh ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems, P221, DOI 10.1145/308386.308444
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
NR 18
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2021
VL 21
IS 6
SI SI
BP 785
EP 801
DI 10.1017/S1471068421000351
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 4P3LH
UT WOS:000855297800006
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Ianni, G
   Pacenza, F
   Zangari, J
AF Ianni, Giovambattista
   Pacenza, Francesco
   Zangari, Jessica
TI Incremental maintenance of overgrounded logic programs with tailored
   simplifications
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 36th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2020
CL ELECTR NETWORK
DE Knowledge Representation and Reasoning; Answer Set Programming; Stream
   Reasoning; Grounding; Instantiation of Logic Programs; Overgrounding
ID ANSWER; SEMANTICS; SYSTEM; LARS
AB The repeated execution of reasoning tasks is desirable in many applicative scenarios, such as stream reasoning and event processing. When using answer set programming in such contexts, one can avoid the iterative generation of ground programs thus achieving a significant payoff in terms of computing time. However, this may require some additional amount of memory and/or the manual addition of operational directives in the declarative knowledge base at hand. We introduce a new strategy for generating series of monotonically growing propositional programs. The proposedovergrounded programs with tailoring(OPTs) can be updated and reused in combination with consecutive inputs. With respect to earlier approaches, ourtailored simplificationtechnique reduces the size of instantiated programs. A maintained OPT slowly grows in size from an iteration to another while the update cost decreases, especially in later iterations. In this paper we formally introduce tailored embeddings, a family of equivalence-preserving ground programs which are at the theoretical basis of OPTs and we describe their properties. We then illustrate an OPT update algorithm and report about our implementation and its performance.
C1 [Ianni, Giovambattista; Pacenza, Francesco; Zangari, Jessica] Univ Calabria, Dept Math & Comp Sci, Arcavacata Di Rende, Italy.
C3 University of Calabria
RP Ianni, G (corresponding author), Univ Calabria, Dept Math & Comp Sci, Arcavacata Di Rende, Italy.
EM ianni@mat.unical.it; pacenza@mat.unical.it; zangari@mat.unical.it
RI Ianni, Giovambattista/I-7826-2012; Ianni, Giovambattista/IQS-4399-2023;
   Pacenza, Francesco/HLH-1328-2023; Zangari, Jessica/AAA-6522-2021
OI Ianni, Giovambattista/0000-0003-0534-6425; Pacenza,
   Francesco/0000-0001-6632-3492; Zangari, Jessica/0000-0002-6418-7711
FU MIUR under project "Declarative Reason-ing over Streams" [(CUP
   H24I17000080001)]; MISE [F/050389/01-03/X32]; Regione Calabria under
   project "DLV Large Scale" [CUP J28C17000220006]
FX We thank the reviewers of this paper, whose constructive comments helped
   to improve our work. This work has been partially supported by MIUR
   under project "Declarative Reason-ing over Streams" (CUP
   H24I17000080001) - PRIN 2017, by MISE under project "S2BDW"
   (F/050389/01-03/X32) - "Horizon2020" PON I&C2014-20, by Regione Calabria
   under project "DLV Large Scale" (CUP J28C17000220006) - POR Calabria
   2014-20.
CR Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   Beck H, 2018, ARTIF INTELL, V261, P16, DOI 10.1016/j.artint.2018.04.003
   Beck H, 2017, THEOR PRACT LOG PROG, V17, P744, DOI 10.1017/S1471068417000370
   Becker HD, 2017, INTRODUCTION TO BRONCHOSCOPY, 2ND EDITION, P1
   Bomanson J, 2019, AAAI CONF ARTIF INTE, P2694
   Calimeri F, 2019, THEOR PRACT LOG PROG, V19, P957, DOI 10.1017/S1471068419000292
   Calimeri F, 2019, THEOR PRACT LOG PROG, V19, P603, DOI 10.1017/S1471068419000036
   Calimeri F, 2018, LECT NOTES COMPUT SC, V11092, P310, DOI 10.1007/978-3-319-99906-7_23
   Calimeri F, 2017, INTELL ARTIF, V11, P5, DOI 10.3233/IA-170104
   Calimeri F, 2016, LECT NOTES COMPUT SC, V10037, P192, DOI 10.1007/978-3-319-49130-1_15
   Calimeri F, 2008, LECT NOTES COMPUT SC, V5366, P407, DOI 10.1007/978-3-540-89982-2_37
   Dal Palù A, 2009, FUND INFORM, V96, P297, DOI 10.3233/FI-2009-180
   DellAglio D, 2017, Data Sci, V1, P59, DOI [10.3233/DS-170006, DOI 10.3233/DS-170006]
   Eiter T, 2019, THEOR PRACT LOG PROG, V19, P974, DOI 10.1017/S1471068419000309
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   Faber W., 2012, Correct Reasoning, P247, DOI DOI 10.1007/978-3-642-30743-0
   GEBSER M., ARTIFICIAL INTELLIGE, V187, P52
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   Gebser M, 2008, FRONT ARTIF INTEL AP, V178, P15, DOI 10.3233/978-1-58603-891-5-15
   Kaufmann B, 2016, AI MAG, V37, P25, DOI 10.1609/aimag.v37i3.2672
   Lefévre C, 2017, THEOR PRACT LOG PROG, V17, P266, DOI 10.1017/S1471068416000569
   Leone N, 1997, INFORM COMPUT, V135, P69, DOI 10.1006/inco.1997.2630
   Motik B, 2019, ARTIF INTELL, V269, P76, DOI 10.1016/j.artint.2018.12.004
   Perez-Liebana D, 2016, AAAI CONF ARTIF INTE, P4335
   Saribatur ZG, 2019, AUTON ROBOT, V43, P213, DOI 10.1007/s10514-018-9721-x
   Suchan J, 2018, AAAI CONF ARTIF INTE, P1965
   Truszczynski M, 2009, THEOR PRACT LOG PROG, V9, P781, DOI 10.1017/S1471068409990159
NR 27
TC 7
Z9 7
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2020
VL 20
IS 5
SI SI
BP 719
EP 734
AR PII S147106842000040X
DI 10.1017/S147106842000040X
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA NR5RA
UT WOS:000571619500010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Balduccini, M
   Leblanc, EC
AF Balduccini, Marcello
   Leblanc, Emily C.
TI Action-Centered Information Retrieval
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE reasoning about actions and change; answer set programming; information
   retrieval
AB Information retrieval (IR) aims at retrieving documents that are most relevant to a query provided by a user. Traditional techniques rely mostly on syntactic methods. In some cases, however, links at a deeper semantic level must be considered. In this paper, we explore a type of IR task in which documents describe sequences of events, and queries are about the state of the world after such events. In this context, successfully matching documents and query requires considering the events' possibly implicit uncertain effects and side effects. We begin by analyzing the problem, then propose an action language-based formalization, and finally automate the corresponding IR task using answer set programming.
C1 [Balduccini, Marcello] St Josephs Univ, Philadelphia, PA 19131 USA.
   [Leblanc, Emily C.] Drexel Univ, Philadelphia, PA 19104 USA.
C3 Saint Joseph's University; Drexel University
RP Balduccini, M (corresponding author), St Josephs Univ, Philadelphia, PA 19131 USA.
EM marcello.balduccini@gmail.com; ecl38@drexel.edu
CR [Anonymous], 2015, ARXIV150205698
   [Anonymous], 2007, P SIGIR 2007 WORKSH
   [Anonymous], 2008, INTRO INFORM RETRIEV, DOI DOI 10.1017/CBO9780511809071
   [Anonymous], 2006, P FORMALIZING COMPIH
   Balduccini M, 2003, THEOR PRACT LOG PROG, V3, P425, DOI 10.1017/S1471068403001807
   Balduccini M, 2006, ANN MATH ARTIF INTEL, V47, P183, DOI 10.1007/s10472-006-9026-1
   Baral C, 2000, SPRINGER INT SER ENG, V597, P257
   Blanco R, 2012, INFORM RETRIEVAL, V15, P54, DOI 10.1007/s10791-011-9172-x
   Campos R, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2619088
   Carpineto C, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2071389.2071390
   Dong XL, 2014, PROC VLDB ENDOW, V7, P881, DOI 10.14778/2732951.2732962
   Glavas G, 2014, EXPERT SYST APPL, V41, P6904, DOI 10.1016/j.eswa.2014.04.004
   Inclezan D., 2016, 32 INT C LOG PROGR I
   Korfhage R.R., 1997, INFORM STORAGE RETRI
   LeBlanc E., 2016, LOGIC PROGRAMMING CO
   Lierler Y., 2017, 12 INT C COMP SEM IW
   Lukasiewicz T, 2007, LECT NOTES ARTIF INT, V4772, P16
   Mitra A, 2016, AAAI CONF ARTIF INTE, P2779
   Morales AR, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1991
   Page L., 1999, PAGERANK CITATION RA
   Suchanek FM, 2008, J WEB SEMANT, V6, P203, DOI 10.1016/j.websem.2008.06.001
   Vo NH, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P899
NR 22
TC 0
Z9 0
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2020
VL 20
IS 2
BP 249
EP 272
AR PII S1471068419000097
DI 10.1017/S1471068419000097
PG 24
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA OC6NY
UT WOS:000579274100004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lee, J
   Yang, Z
AF Lee, Joohyung
   Yang, Zhun
TI Translating LPOD and CR-Prolog<sub>2</sub> into standard answer set
   programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
AB Logic Programs with Ordered Disjunction (LPOD) is an extension of standard answer set programs to handle preference using the construct of ordered disjunction, and CR-Prolog(2) is an extension of standard answer set programs with consistency restoring rules and LPOD-like ordered disjunction. We present reductions of each of these languages into the standard ASP language, which gives us an alternative way to understand the extensions in terms of the standard ASP language.
C1 [Lee, Joohyung; Yang, Zhun] Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ 85281 USA.
C3 Arizona State University; Arizona State University-Tempe
RP Lee, J (corresponding author), Arizona State Univ, Sch Comp Informat & Decis Syst Engn, Tempe, AZ 85281 USA.
EM joolee@asu.edu; zyang90@asu.edu
FU National Science Foundation [IIS-1526301]
FX We are grateful to Yi Wang and the anonymous referees for their useful
   comments. This work was partially supported by the National Science
   Foundation under Grant IIS-1526301.
CR Asuncion V, 2014, FOURTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P2
   Balduccini M, 2004, PROCEEDINGS OF INTERNATIONAL CONFERENCE ON INTELLIGENT SENSING AND INFORMATION PROCESSING, P1
   Balduccini M., 2003, ANSWER SET PROGRAMMI, V78
   Balduccini M., 2003, P INT S LOG FORM COM, V102, P9
   Balduccini M, 2007, LECT NOTES COMPUT SC, V4483, P18, DOI 10.1007/978-3-540-72200-7_4
   Brewka G, 2002, LECT NOTES ARTIF INT, V2424, P444, DOI 10.1007/3-540-45757-7_37
   Brewka G, 2002, EIGHTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-02)/FOURTEENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-02), PROCEEDINGS, P100
   Brewka G, 2015, AAAI CONF ARTIF INTE, P1467
   Brewka Gerhard., 2005, Current Topics in Artificial Intelligence, CAEPIA 2005, P1
   Calimeri F., 2012, ASP-CORE-2 Input Language Format
   Delgrande JP, 2003, THEOR PRACT LOG PROG, V3, P129, DOI 10.1017/S1471068402001539
   Ferraris P, 2011, ACM T COMPUT LOG, V12, DOI 10.1145/1970398.1970401
   Ferraris P, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P797
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   LEE J., 2018, ONLINE APPENDIX PAPE
NR 15
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 589
EP 606
DI 10.1017/S1471068418000315
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400019
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Nampally, A
   Zhang, T
   Ramakrishnan, CR
AF Nampally, Arun
   Zhang, Timothy
   Ramakrishnan, C. R.
TI Constraint-Based Inference in Probabilistic Logic Programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
AB Probabilistic Logic Programs (PLPs) generalize traditional logic programs and allow the encoding of models combining logical structure and uncertainty. In PLP, inference is performed by summarizing the possible worlds which entail the query in a suitable data structure, and using this data structure to compute the answer probability. Systems such as ProbLog, PITA, etc., use propositional data structures like explanation graphs, BDDs, SDDs, etc., to represent the possible worlds. While this approach saves inference time due to substructure sharing, there are a number of problems where a more compact data structure is possible. We propose a data structure called Ordered Symbolic Derivation Diagram (OSDD) which captures the possible worlds by means of constraint formulas. We describe a program transformation technique to construct OSDDs via query evaluation, and give procedures to perform exact and approximate inference over OSDDs. Our approach has two key properties. Firstly, the exact inference procedure is a generalization of traditional inference, and results in speedup over the latter in certain settings. Secondly, the approximate technique is a generalization of likelihood weighting in Bayesian Networks, and allows us to perform sampling-based inference with lower rejection rate and variance. We evaluate the effectiveness of the proposed techniques through experiments on several problems.
C1 [Nampally, Arun; Zhang, Timothy; Ramakrishnan, C. R.] SUNY Stony Brook, Dept Comp Sci, Stony Brook, NY 11794 USA.
C3 State University of New York (SUNY) System; State University of New York
   (SUNY) Stony Brook
RP Nampally, A (corresponding author), SUNY Stony Brook, Dept Comp Sci, Stony Brook, NY 11794 USA.
EM anampally@cs.stonybrook.edu; thzhang@cs.stonybrook.edu;
   cram@cs.stonybrook.edu
FU NSF [IIS-1447549]
FX This work was support in part by NSF grant IIS-1447549. We are grateful
   for the reviewers for their detailed and insightful comments.
CR [Anonymous], 1990, Proceedings of the Fifth Annual Conference on Uncertainty in Artificial Intelligence
   [Anonymous], 2016, MACH LEARN, DOI DOI 10.1007/s10994-016-5558-8
   Bellodi E, 2014, THEOR PRACT LOG PROG, V14, P681, DOI 10.1017/S1471068414000283
   Braz RD, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P1319
   BRYANT RE, 1992, COMPUT SURV, V24, P293, DOI 10.1145/136035.136043
   Costa V. S., 2002, 19 ANN C UNC, P517
   Cussens J., 2000, P 16 ANN C UNC ART I, P115
   FIERENS D., 2012, NIPS PROB PROGR WORK, P1
   Fung R., 1990, Proceedings of the Fifth Conference on Uncertainty in Artificial Intelligence, P209, DOI [10.1016/B978-0-444-88738-2.50023-3, DOI 10.1016/B978-0-444-88738-2.50023-3]
   GEMAN S, 1984, IEEE T PATTERN ANAL, V6, P721, DOI 10.1109/TPAMI.1984.4767596
   HASTINGS WK, 1970, BIOMETRIKA, V57, P97, DOI 10.1093/biomet/57.1.97
   Holzbaur C, 1992, 4 INT S PROGR LANG I, V631, P260
   Kam Timothy., 1998, MULTIPLE VALUED LOGI, V4, P9
   Kazemi S. M., 2016, P 30 INT C NEURAL IN, P3125
   KERSTING K., 2006, J ARTIFICIAL INTELLI, V25
   Mansinghka VikashK., 2009, P 12 INT C ARTIFICIA, P400
   Milch B., 2008, AAAI08 P 23 NAT C AR, V2, P1062
   Moldovan Bogdan, 2013, Symbolic and Quantitative Approaches to Reasoning with Uncertainty. 12th European Conference, ECSQARU 2013. Proceedings. LNCS 7958, P436, DOI 10.1007/978-3-642-39091-3_37
   NAMPALLY A, 2016, 32 INT C LOG PROGR
   Nampally Arun., 2015, 2 INT WORKSHOP PROBA, P46
   Poole D., 2003, IJCAI03 P 18 INT JOI, P985
   Raedt L. D., 2007, P 20 INT JOINT C ART, P2462
   RIGUZZI F, 2011, THEOR PRACT LOG PROG, V11, P4
   Riguzzi Fabrizio., 2011, 26 ITALIAN C COMPUTA, P25
   Sarna-Starosta B, 2007, LECT NOTES COMPUT SC, V4354, P170
   Sato T, 2001, J ARTIF INTELL RES, V15, P391
   Sato T, 1997, INT JOINT CONF ARTIF, P1330
   Ste enMichels., 2013, 23 INT JOINT C ARTIF, P2540
   Swift T, 2010, LECT NOTES ARTIF INT, V6341, P300, DOI 10.1007/978-3-642-15675-5_26
   TAMAKI H, 1986, LECT NOTES COMPUT SC, V225, P84
   Van den Broeck G., 2011, IJCAI11 P 22 INT JOI, P2178
NR 31
TC 1
Z9 1
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 638
EP 655
DI 10.1017/S1471068418000273
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400022
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Nguyen, TH
   Pontelli, E
   Son, TC
AF Thanh Hai Nguyen
   Pontelli, Enrico
   Tran Cao Son
TI Phylotastic: An Experiment in Creating, Manipulating, and Evolving
   Phylogenetic Biology Workflows Using Logic Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
DE Bioinformatics; workflows; web services; planning; composition;
   re-composition; similarity; quality of service
AB Evolutionary Biologists have long struggled with the challenge of developing analysis workflows in a flexible manner, thus facilitating the reuse of phylogenetic knowledge. An evolutionary biology workflow can be viewed as a plan which composes web services that can retrieve, manipulate, and produce phylogenetic trees. The Phylotastic project was launched two years ago as a collaboration between evolutionary biologists and computer scientists, with the goal of developing an open architecture to facilitate the creation of such analysis workflows. While composition of web services is a problem that has been extensively explored in the literature, including within the logic programming domain, the incarnation of the problem in Phylotastic provides a number of additional challenges. Along with the need to integrate preferences and formal ontologies in the description of the desired workflow, evolutionary biologists tend to construct workflows in an incremental manner, by successively refining the workflow, by indicating desired changes (e.g., exclusion of certain services, modifications of the desired output). This leads to the need of successive iterations of incremental replanning, to develop a new workflow that integrates the requested changes while minimizing the changes to the original workflow. This paper illustrates how Phylotastic has addressed the challenges of creating and refining phylogenetic analysis workflows using logic programming technology and how such solutions have been used within the general framework of the Phylotastic project.
C1 [Thanh Hai Nguyen; Pontelli, Enrico; Tran Cao Son] New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88003 USA.
C3 New Mexico State University
RP Nguyen, TH (corresponding author), New Mexico State Univ, Dept Comp Sci, Las Cruces, NM 88003 USA.
EM thanhnh@nmsu.edu; epontell@nmsu.edu; tson@cs.nmsu.edu
RI Pontelli, Enrico/AAJ-5161-2021
OI Pontelli, Enrico/0000-0002-7753-1737; Hai Nguyen,
   Thanh/0000-0001-9996-4720
CR Antunes Goncalo., 2015, ENTERPRISE MODELLING, P127
   Becker M, 2012, COMPUT IND, V63, P148, DOI 10.1016/j.compind.2011.11.003
   BININDA-EMONDS O., 2007, NATURE, V446, P7135
   Carman M., 2004, P ICAPS 2003 WORKSH
   CRACRAFT J., 2002, TECH REP
   Jetz W, 2012, NATURE, V491, P444, DOI 10.1038/nature11631
   Kaminski R, 2017, LECT NOTES COMPUT SC, V10370, P167, DOI 10.1007/978-3-319-61033-7_6
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   McIlraith SA, 2001, IEEE INTELL SYST APP, V16, P46, DOI 10.1109/5254.920599
   Mora C, 2011, PLOS BIOL, V9, DOI 10.1371/journal.pbio.1000606
   Nguyen TH, 2018, LECT NOTES COMPUT SC, V10702, P186, DOI 10.1007/978-3-319-73305-0_13
   PEER J., 2005, TECH REP
   Penny David., 2004, SYST BIOL, V53, P669, DOI [DOI 10.1080/10635150490468530, 10.1080/10635150490468530]
   Prosdocimi F, 2009, EVOL BIOINFORM, V5, P47
   Rajendran T., 2009, J COMPUTING, V1, P119
   Smith SA, 2011, AM J BOT, V98, P404, DOI 10.3732/ajb.1000481
   Stoltzfus A, 2013, BMC BIOINFORMATICS, V14, DOI 10.1186/1471-2105-14-158
   Stoltzfus Arlin, 2012, BMC Res Notes, V5, P574, DOI 10.1186/1756-0500-5-574
   ZHANG KZ, 1989, SIAM J COMPUT, V18, P1245, DOI 10.1137/0218082
NR 19
TC 4
Z9 5
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 656
EP 672
DI 10.1017/S1471068418000236
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400023
OA Bronze
DA 2024-07-18
ER

PT J
AU Osorio, M
   Nieves, JC
AF Osorio, Mauricio
   Nieves, Juan Carlos
TI Range-based argumentation semantics as two-valued models
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Logic programming semantics; argumentation semantics; non-monotonic
   reasoning
AB Characterizations of semi-stable and stage extensions in terms of two-valued logical models are presented. To this end, the so-called GL-supported and GL-stage models are defined. These two classes of logical models are logic programming counterparts of the notion of range which is an established concept in argumentation semantics.
C1 [Osorio, Mauricio] Univ Americas Puebla, Dept Actuaria Fis & Matemat, Cholula 72820, Mexico.
   [Nieves, Juan Carlos] Umea Univ, Dept Comp Sci, SE-90187 Umea, Sweden.
C3 Universidad Americas Puebla (UDLAP); Umea University
RP Osorio, M (corresponding author), Univ Americas Puebla, Dept Actuaria Fis & Matemat, Cholula 72820, Mexico.
EM osoriomauri@gmail.com; jcnieves@cs.umu.se
RI Nieves, Juan Carlos/G-1762-2012
CR Baral C., 2003, KNOWLEDGE REPRESENTA
   Baroni P, 2011, KNOWL ENG REV, V26, P365, DOI 10.1017/S0269888911000166
   Caminada M., 2013, ABDNCS1301 U AB
   Caminada M, 2006, FR ART INT, V144, P121
   Caminada MWA, 2012, J LOGIC COMPUT, V22, P1207, DOI 10.1093/logcom/exr033
   Carballido J.L., 2009, REV IBEROMERICANA IN, V13, P38, DOI DOI 10.4114/IA.V13I41.1029)
   Nieves JC, 2011, FUND INFORM, V106, P295, DOI 10.3233/FI-2011-388
   Charwat G, 2015, ARTIF INTELL, V220, P28, DOI 10.1016/j.artint.2014.11.008
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Dvorák W, 2010, INFORM PROCESS LETT, V110, P425, DOI 10.1016/j.ipl.2010.04.005
   Egly U, 2010, ARGUM COMPUT, V1, P147, DOI 10.1080/19462166.2010.486479
   Gabbay D., 2009, Studia Logica, V93, P199
   Galindo MO, 2006, J LOGIC COMPUT, V16, P867, DOI [10.1093/logcom/exl013, 10.1093/logcom/cx1013]
   Gelfond M, 2008, FOUND ARTIF INTELL, P285, DOI 10.1016/S1574-6526(07)03007-6
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Nieves J. C., 2011, FUNDAMENTA INFORM, V106, P2
   Nieves JC, 2008, THEOR PRACT LOG PROG, V8, P527, DOI 10.1017/S1471068408003359
   Nieves JC, 2016, J LOGIC COMPUT, V26, P1361, DOI 10.1093/logcom/exu014
   Osorio M, 2005, SIXTH MEXICAN INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE, PROCEEDINGS, P198, DOI 10.1109/ENC.2005.26
   Osorio M, 2013, PROC MEX INT CONF CO, P81, DOI 10.1109/ENC.2013.18
   Prakken H., 2002, Handbook of Philosophical Logic, V4, P219
   Strass H, 2013, ARTIF INTELL, V205, P39, DOI 10.1016/j.artint.2013.09.004
   Toni Francesca, 2011, Logic Programming, Knowledge Representation, and Nonmonotonic Reasoning. Essays Dedicated to Michael Gelfond on the Occasion of his 65th Birthday, P164, DOI 10.1007/978-3-642-20832-4_11
   Verheij B., 1996, P 8 DUTCH C ART INT, P357
   Wu Y., 2009, STUDIA LOGICA, V93, P383, DOI DOI 10.1007/S11225-009-9210-5
   Wu Y., 2009, STUDIA LOGICA, V93, P2
NR 26
TC 7
Z9 7
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2017
VL 17
IS 1
BP 75
EP 90
DI 10.1017/S1471068416000090
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA EH7JT
UT WOS:000391949800003
DA 2024-07-18
ER

PT J
AU Alviano, M
   Dodaro, C
AF Alviano, Mario
   Dodaro, Carmine
TI Anytime answer set optimization via unsatisfiable core shrinking
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
DE answer set programming; weak constraints; unsatisfiable cores
ID LOGIC PROGRAMS; COMPLEXITY; SEMANTICS; MAXSAT
AB Unsatisfiable core analysis can boost the computation of optimum stable models for logic programs with weak constraints. However, current solvers employing unsatisfiable core analysis either run to completion, or provide no suboptimal stable models but the one resulting from the preliminary disjoint cores analysis. This drawback is circumvented here by introducing a progression based shrinking of the analyzed unsatisfiable cores. In fact, suboptimal stable models are possibly found while shrinking unsatisfiable cores, hence resulting into an anytime algorithm. Moreover, as confirmed empirically, unsatisfiable core analysis also benefits from the shrinking process in terms of solved instances.
C1 [Alviano, Mario; Dodaro, Carmine] Univ Calabria, Dept Math & Comp Sci, I-87030 Commenda Di Rende, Italy.
C3 University of Calabria
RP Alviano, M (corresponding author), Univ Calabria, Dept Math & Comp Sci, I-87030 Commenda Di Rende, Italy.
EM alviano@mat.unical.it; dodaro@mat.unical.it
RI Dodaro, Carmine/AAE-5732-2020; Alviano, Mario/H-1355-2012
OI Dodaro, Carmine/0000-0002-5617-5286; 
CR Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   Alviano M., 2015, J LOGIC COMPUTATION
   Alviano M, 2016, AAAI CONF ARTIF INTE, P879
   Alviano M, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2677
   Alviano M, 2015, THEOR PRACT LOG PROG, V15, P559, DOI 10.1017/S1471068415000228
   Alviano M, 2015, THEOR PRACT LOG PROG, V15, P574, DOI 10.1017/S147106841500023X
   Alviano M, 2014, THEOR PRACT LOG PROG, V14, P755, DOI 10.1017/S1471068414000325
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P67, DOI 10.1007/978-3-642-40564-8_7
   Alviano M, 2013, LECT NOTES COMPUT SC, V8148, P54, DOI 10.1007/978-3-642-40564-8_6
   Alviano M, 2011, LECT NOTES COMPUT SC, V6702, P282
   Andres B., 2012, TECHNICAL COMMUNICAT, V17, P211
   Ansótegui C, 2009, LECT NOTES COMPUT SC, V5584, P427, DOI 10.1007/978-3-642-02777-2_39
   Argelich J, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P393
   Bartholomew M., 2011, 2011 AAAI SPRING S S
   Bliem Bernhard, 2016, P 25 INT JOINT C ART
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Buccafurri F, 2000, IEEE T KNOWL DATA EN, V12, P845, DOI 10.1109/69.877512
   Cha B., 1997, AAAI 97IAAI 97, P263
   Dodaro C., 2011, CILC, P99
   Eiter T, 2009, LECT NOTES COMPUT SC, V5689, P40, DOI 10.1007/978-3-642-03754-2_2
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Ferraris P, 2011, ACM T COMPUT LOG, V12, DOI 10.1145/1970398.1970401
   Fu ZH, 2006, LECT NOTES COMPUT SC, V4121, P252
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P531, DOI 10.1007/978-3-319-23264-5_44
   Gebser Martin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P368, DOI 10.1007/978-3-319-23264-5_31
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P821, DOI 10.1017/S1471068411000329
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P323, DOI 10.1017/S1471068410000554
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M, 2014, THEOR PRACT LOG PROG, V14, P587, DOI 10.1017/S1471068414000222
   Giunchiglia E, 2006, J AUTOM REASONING, V36, P345, DOI 10.1007/s10817-006-9033-2
   Lierler Y, 2004, LECT NOTES ARTIF INT, V2923, P346
   Lifschitz V., 2008, AAAI, V3, P1594
   Liu G., 2012, PRINCIPLES KNOWLEDGE
   Liu LN, 2010, ARTIF INTELL, V174, P295, DOI 10.1016/j.artint.2009.11.016
   Manquinho V, 2009, LECT NOTES COMPUT SC, V5584, P495, DOI 10.1007/978-3-642-02777-2_45
   Marek VW, 2008, THEOR PRACT LOG PROG, V8, P167, DOI 10.1017/S147106840700302X
   Marques-Silva J, 2008, DES AUT TEST EUROPE, P365
   Marques-Silva J, 2008, LECT NOTES COMPUT SC, V4996, P225, DOI 10.1007/978-3-540-79719-7_21
   Morgado A, 2014, LECT NOTES COMPUT SC, V8656, P564, DOI 10.1007/978-3-319-10428-7_41
   Nadel Alexander, 2010, 2010 Formal Methods in Computer-Aided Design (FMCAD 2010), P221
   Nadel A., 2014, J. Satisf. Boolean Model. Comput, V9, P27
   Narodytska N, 2014, AAAI CONF ARTIF INTE, P2717
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
NR 44
TC 34
Z9 34
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 533
EP 551
DI 10.1017/S147106841600020X
PN 5-6
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Inclezan, D
AF Inclezan, Daniela
TI COREALMLIB : <i>An ALM library translated from the</i> COMPONENT LIBRARY
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
DE action language; commonsense library; knowledge reuse; dynamic domains
ID LANGUAGE
AB This paper presents COREALMLIB, an ALM library of commonsense knowledge about dynamic domains. The library was obtained by translating part of the COMPONENT LIBRARY (CLIB) into the modular action language ALM. CLIB consists of general reusable and composable commonsense concepts, selected based on a thorough study of ontological and lexical resources. Our translation targets CLIB states (i.e., fluents) and actions. The resulting ALM library contains the descriptions of 123 action classes grouped into 43 reusable modules that are organized into a hierarchy. It is made available online and of interest to researchers in the action language, answer-set programming, and natural language understanding communities. We believe that our translation has two main advantages over its CLIB counterpart: (i) it specifies axioms about actions in a more elaboration tolerant and readable way, and (ii) it can be seamlessly integrated with ASP reasoning algorithms (e.g., for planning and postdiction). In contrast, axioms are described in CLIB using STRIPS-like operators, and CLIB's inference engine cannot handle planning nor postdiction.
C1 [Inclezan, Daniela] Miami Univ, Oxford, OH 45056 USA.
C3 University System of Ohio; Miami University
RP Inclezan, D (corresponding author), Miami Univ, Oxford, OH 45056 USA.
EM inclezd@miamioh.edu
CR [Anonymous], 2006, P AAAI C ARTIFICIAL
   Baker C.F., 1998, P 36 ANN M ASS COMP, P86, DOI [DOI 10.3115/980845.980860, DOI 10.3115/980451.980860]
   Balduccini M, 2003, THEOR PRACT LOG PROG, V3, P425, DOI 10.1017/S1471068403001807
   Balduccini M, 2013, THEOR PRACT LOG PROG, V13, P547, DOI 10.1017/S1471068413000343
   Barker K., 2001, Proceedings of the First International Conference on Knowledge Capture, P14, DOI 10.1145/500737.500744
   Chaudhri V., 2014, ADV COGNITIVE SYSTEM, V3, P183
   Chaudhri V. K., 2009, TECH REP
   Chaudhri VK, 2007, K-CAP'07: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON KNOWLEDGE CAPTURE, P159
   Clark P., 2004, KM: The knowledge machine 2.0: Users manual"
   Clark P., 2007, P 4 INT C KNOWL CAPT
   Erdogan S. T., 2008, THESIS
   Erdogan SelimT., 2006, P INT C PRINCIPLES K, P377
   Gelfond M, 2014, KNOWLEDGE REPRESENTATION, REASONING, AND THE DESIGN OF INTELLIGENT AGENTS: THE ANSWER-SET PROGRAMMING APPROACH, P1, DOI 10.1017/CBO9781139342124
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M., 1998, Electron. Trans. Artif. Intell., V2, P193
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Gelfond M, 2014, THEOR PRACT LOG PROG, V14, P587, DOI 10.1017/S1471068414000222
   Gunning D, 2010, AI MAG, V31, P33, DOI 10.1609/aimag.v31i3.2302
   Inclezan D., 2015, P AAAI 2015 SPRING S, P82
   Inclezan D., 2011, P 2011 AAAI SPRING S, P49
   Inclezan D, 2016, THEOR PRACT LOG PROG, V16, P189, DOI 10.1017/S1471068415000095
   Miller G.A., 1990, Int. J. Lexicogr, V3, P235, DOI [DOI 10.1093/IJL/3.4.235, 10.1093/ijl/3.4.235]
   Schuler Karin Kipper, 2005, DISSERTATIONS
NR 23
TC 5
Z9 7
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 800
EP 816
DI 10.1017/S1471068416000363
PN 5-6
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800019
DA 2024-07-18
ER

PT J
AU Law, M
   Russo, A
   Broda, K
AF Law, Mark
   Russo, Alessandra
   Broda, Krysia
TI Iterative Learning of Answer Set Programs from Context Dependent
   Examples
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
DE Non-monotonic Inductive Logic Programming; Answer Set Programming;
   Iterative Learning
AB In recent years, several frameworks and systems have been proposed that extend Inductive Logic Programming (ILP) to the Answer Set Programming (ASP) paradigm. In ILP, examples must all be explained by a hypothesis together with a given background knowledge. In existing systems, the background knowledge is the same for all examples; however, examples may be context-dependent. This means that some examples should be explained in the context of some information, whereas others should be explained in different contexts. In this paper, we capture this notion and present a context-dependent extension of the Learning from Ordered Answer Sets framework. In this extension, contexts can be used to further structure the background knowledge. We then propose a new iterative algorithm, ILASP2i, which exploits this feature to scale up the existing ILASP2 system to learning tasks with large numbers of examples. We demonstrate the gain in scalability by applying both algorithms to various learning tasks. Our results show that, compared to ILASP2, the newly proposed ILASP2i system can be two orders of magnitude faster and use two orders of magnitude less memory, whilst preserving the same average accuracy.
C1 [Law, Mark; Russo, Alessandra; Broda, Krysia] Imperial Coll, Dept Comp, London SW7 2AZ, England.
C3 Imperial College London
RP Law, M (corresponding author), Imperial Coll, Dept Comp, London SW7 2AZ, England.
EM mark.law09@imperial.ac.uk; a.russo@imperial.ac.uk;
   k.broda@imperial.ac.uk
OI Russo, Alessandra/0000-0002-3318-8711; Law, Mark/0000-0003-4554-3415
FU EPSRC [EP/K033425/1] Funding Source: UKRI
CR Athakravi D, 2014, LECT NOTES ARTIF INT, V8812, P31, DOI 10.1007/978-3-662-44923-3_3
   Corapi Domenico, 2012, Inductive Logic Programming. 21st International Conference, ILP 2011. Revised Selected Papers, P91, DOI 10.1007/978-3-642-31951-8_12
   Inoue K, 2014, MACH LEARN, V94, P51, DOI 10.1007/s10994-013-5353-8
   Katzouris N, 2015, MACH LEARN, V100, P555, DOI 10.1007/s10994-015-5512-1
   Law M., 2014, LNAI, V8761
   Law M, 2015, THEOR PRACT LOG PROG, V15, P511, DOI 10.1017/S1471068415000198
   MUGGLETON S, 1995, NEW GENERAT COMPUT, V13, P245, DOI 10.1007/BF03037227
   MUGGLETON S, 1990, NEW GENERAT COMPUT, V8, P295
   Muggleton SH, 2014, MACH LEARN, V94, P25, DOI 10.1007/s10994-013-5358-3
   Poxrucker A, 2014, INT CONF SELF SELF, P44, DOI 10.1109/SASOW.2014.18
   Ray O, 2003, LECT NOTES ARTIF INT, V2835, P311
   Ray O, 2009, J APPL LOGIC, V7, P329, DOI 10.1016/j.jal.2008.10.007
   Sakama C., 2005, ACM Transactions on Computational Logic, V6, P203, DOI 10.1145/1055686.1055687
   Sakama C, 2009, MACH LEARN, V76, P3, DOI 10.1007/s10994-009-5113-y
   Srinivasan Ashwin., 2001, Machine Learning at the Computing Laboratory, Oxford University
NR 15
TC 24
Z9 25
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 834
EP 848
DI 10.1017/S1471068416000351
PN 5-6
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800021
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Patkos, T
   Plexousakis, D
   Chibani, A
   Amirat, Y
AF Patkos, Theodore
   Plexousakis, Dimitris
   Chibani, Abdelghani
   Amirat, Yacine
TI An event calculus production rule system for reasoning in dynamic and
   uncertain domains
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 8th International Web Rule Symposium (RuleML) in conjunction with 21st
   European Conference on Artificial Intelligence (ECAI)
CY AUG 18-22, 2014
CL Prague, CZECH REPUBLIC
DE Event calculus; Rule-based reasoning; Smart environments
AB Action languages have emerged as an important field of knowledge representation for reasoning about change and causality in dynamic domains. This paper presents Cerbere, a production system designed to perform online causal, temporal and epistemic reasoning based on the Event Calculus. The framework implements the declarative semantics of the underlying logic theories in a forward-chaining rule-based reasoning system, coupling the high expressiveness of its formalisms with the efficiency of rule-based systems. To illustrate its applicability, we present both the modeling of benchmark problems in the field, as well as its utilization in the challenging domain of smart spaces. A hybrid framework that combines logic-based with probabilistic reasoning has been developed, that aims to accommodate activity recognition and monitoring tasks in smart spaces.
C1 [Patkos, Theodore; Plexousakis, Dimitris] FORTH, Inst Comp Sci, Informat Syst Lab, Iraklion, Crete, Greece.
   [Chibani, Abdelghani; Amirat, Yacine] UPEC, Lissi Lab, Vitry Sur Seine, France.
C3 Foundation for Research & Technology - Hellas (FORTH); Universite
   Paris-Est-Creteil-Val-de-Marne (UPEC)
RP Patkos, T (corresponding author), FORTH, Inst Comp Sci, Informat Syst Lab, Iraklion, Crete, Greece.
EM patkos@ics.forth.gr; dp@ics.forth.gr; chibani@u-pec.fr; amirat@u-pec.fr
RI Patkos, Theodore/AAE-8529-2020
CR Aggarwal JK, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1922649.1922653
   Anicic D, 2010, LECT NOTES COMPUT SC, V6333, P42, DOI 10.1007/978-3-642-15918-3_5
   [Anonymous], 2006, Commonsense Reasoning
   [Anonymous], LECT NOTES COMPUTER
   Artikis A., 2010, Proceedings of the 2Nd ACM International Workshop on Events in Multimedia, EiMM '10, P3, DOI DOI 10.1145/1877937.1877941
   Artikis A., 2012, Proceedings of the Sixth ACM International Conference on Distributed Event-Based Systems (DEBS), P69
   Bikakis A, 2010, IEEE T KNOWL DATA EN, V22, P1492, DOI 10.1109/TKDE.2010.37
   Brachman R.J., 2004, Knowledge Representation and Reasoning, V1st
   Bragaglia Stefano, 2012, Rules on the Web: Research and Applications. Proceedings of the 6th International Symposium, RuleML 2012, P151, DOI 10.1007/978-3-642-32689-9_12
   Chen LM, 2011, ATL AMB PERVAS INTEL, V4, P1, DOI 10.1097/COC.0b013e3181fe41ed
   Chesani F, 2010, FUND INFORM, V105, P135, DOI 10.3233/FI-2010-361
   Ferraris P, 2011, ARTIF INTELL, V175, P236, DOI 10.1016/j.artint.2010.04.011
   Forgy C.L., 1990, EXPERT SYST, P324
   Helaoui R., 2012, ACTIVITY CONTEXT REP, P26
   Kowalski Robert, 2012, Rules on the Web: Research and Applications. Proceedings of the 6th International Symposium, RuleML 2012, P1, DOI 10.1007/978-3-642-32689-9_1
   KOWALSKI R, 1986, NEW GENERAT COMPUT, V4, P67, DOI 10.1007/BF03037383
   Kowalski R, 2015, NEW GENERAT COMPUT, V33, P33, DOI 10.1007/s00354-015-0103-z
   Kowalski R, 2010, LECT NOTES ARTIF INT, V6245, P200, DOI 10.1007/978-3-642-14977-1_16
   Lee JH, 2012, J DRUG DELIV, V2012, DOI 10.1155/2012/915375
   Levesque H, 2008, FOUND ARTIF INTELL, P869, DOI 10.1016/S1574-6526(07)03023-4
   Lifschitz V., 1994, HDB LOGIC ARTIFICIAL, V3, P297
   Lu CH, 2009, IEEE T AUTOM SCI ENG, V6, P598, DOI 10.1109/TASE.2009.2021981
   Ma J., 2013, LPAR 2013, V26, P75
   Miller R, 2002, LECT NOTES ARTIF INT, V2408, P452
   Miller R., 2013, P 11 INT S LOG FORM
   Mueller ET, 2004, J LOGIC COMPUT, V14, P703, DOI 10.1093/logcom/14.5.703
   Munoz A., 2010, Computational Intelligence in Complex Decision Systems, P325
   Patkos Theodore, 2012, Rules on the Web: Research and Applications. Proceedings of the 6th International Symposium, RuleML 2012, P120, DOI 10.1007/978-3-642-32689-9_10
   Patkos T, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P885
   Pecora F, 2012, J AMB INTEL SMART EN, V4, P347, DOI 10.3233/AIS-2012-0157
   Petrick R. P. A., 2002, P KR 02, P303
   Riboni D, 2011, PERS UBIQUIT COMPUT, V15, P271, DOI 10.1007/s00779-010-0331-7
   Roy PC, 2011, ATL AMB PERVAS INTEL, V4, P33
   Sadri F, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978815
   Shanahan M, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P140
   Singla G, 2010, J AMB INTEL HUM COMP, V1, P57, DOI 10.1007/s12652-009-0007-1
   Skarlatidis Anastasios, 2011, Rule-Based Modeling and Computing on the Semantic Web. Proceedings 5th International Symposium, RuleML 2011 - America, P155, DOI 10.1007/978-3-642-24908-2_19
   Skarlatidis A, 2015, THEOR PRACT LOG PROG, V15, P213, DOI 10.1017/S1471068413000690
   Thielscher M., 2000, LNAI, V1775
   van Kasteren T, 2008, PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON UBIQUITOUS COMPUTING (UBICOMP 2008), P1, DOI 10.1145/1409635.1409637
   Yang QA, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P20
   Ye J, 2012, PERVASIVE MOB COMPUT, V8, P36, DOI 10.1016/j.pmcj.2011.01.004
NR 42
TC 6
Z9 6
U1 1
U2 7
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2016
VL 16
SI SI
BP 325
EP 352
DI 10.1017/S1471068416000065
PN 3
PG 28
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4MP
UT WOS:000386587100005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tachmazidis, I
   Antoniou, G
   Faber, W
AF Tachmazidis, Ilias
   Antoniou, Grigoris
   Faber, Wolfgang
TI Efficient Computation of the Well-Founded Semantics over Big Data
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
DE Well-Founded Semantics; Big Data; MapReduce Framework
AB Data originating from the Web, sensor readings and social media result in increasingly huge datasets. The so called Big Data comes with new scientific and technological challenges while creating new opportunities, hence the increasing interest in academia and industry. Traditionally, logic programming has focused on complex knowledge structures/programs, so the question arises whether and how it can work in the face of Big Data. In this paper, we examine how the well-founded semantics can process huge amounts of data through mass parallelization. More specifically, we propose and evaluate a parallel approach using the MapReduce framework. Our experimental results indicate that our approach is scalable and that well-founded semantics can be applied to billions of facts. To the best of our knowledge, this is the first work that addresses large scale nonmonotonic reasoning without the restriction of stratification for predicates of arbitrary arity.
C1 [Tachmazidis, Ilias; Antoniou, Grigoris; Faber, Wolfgang] Univ Huddersfield, Huddersfield HD1 3DH, W Yorkshire, England.
C3 University of Huddersfield
RP Tachmazidis, I (corresponding author), Univ Huddersfield, Huddersfield HD1 3DH, W Yorkshire, England.
EM ilias.tachmazidis@hud.ac.uk; g.antoniou@hud.ac.uk; w.faber@hud.ac.uk
RI Faber, Wolfgang/H-2316-2012
OI Faber, Wolfgang/0000-0002-0330-5868; Antoniou,
   Grigoris/0000-0003-3673-6602; TACHMAZIDIS, ILIAS/0000-0002-9052-7329
CR Abiteboul S, 1995, FDN DATABASES
   Afrati F. N., 2010, EDBT, P99, DOI [DOI 10.1145/1739041.1739056, 10.1145/1739041.1739056]
   Brass S, 2001, THEOR PRACT LOG PROG, V1, P497, DOI 10.1017/S147106840100103X
   CLUET S, 1994, CLASSIFICATION OPTIM
   Dean Jeffrey, 2004, OSDI 04, P10
   Fensel Dieter, 2008, 2008 Second IEEE International Conference on Semantic Computing (ICSC), P524, DOI 10.1109/ICSC.2008.41
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P364
   Gelfond M, 2008, FOUND ARTIF INTELL, P285, DOI 10.1016/S1574-6526(07)03007-6
   Goodman EL, 2011, LECT NOTES COMPUT SC, V6644, P31, DOI 10.1007/978-3-642-21064-8_3
   Konstantinidis G, 2008, FRONT ARTIF INTEL AP, V178, P70, DOI 10.3233/978-1-58603-891-5-70
   Kotoulas Spyros, 2010, P 19 INT C WORLD WID, P531
   Liang Senlin., 2009, PROC 18 INT C WORLD, P601, DOI [10.1145/1526709.1526790, DOI 10.1145/1526709.1526790]
   Liu C, 2011, LECT NOTES COMPUT SC, V7031, P405, DOI 10.1007/978-3-642-25073-6_26
   Liu C, 2012, IEEE COMPUT INTELL M, V7, P54, DOI 10.1109/MCI.2012.2188589
   Mutharaju R., 2010, DESCRIPTION LOGICS
   NICOLAS JM, 1982, ACTA INFORM, V18, P227, DOI 10.1007/BF00263192
   Oren E, 2009, J WEB SEMANT, V7, P305, DOI 10.1016/j.websem.2009.09.002
   Perri S, 2013, THEOR PRACT LOG PROG, V13, P253, DOI 10.1017/S1471068411000652
   Roussakis Y., 2011, HDMS
   Soma Ramakrishna, 2008, 2008 37th International Conference on Parallel Processing (ICPP), P75, DOI 10.1109/ICPP.2008.64
   Tachmazidis Ilias, 2013, Theory, Practice, and Applications of Rules on the Web. 7th International Symposium, RuleML 2013. Proceedings. LNCS 8035, P188, DOI 10.1007/978-3-642-39617-5_18
   Tachmazidis I., 2012, KR
   Tachmazidis I, 2012, FRONT ARTIF INTEL AP, V242, P738, DOI 10.3233/978-1-61499-098-7-738
   Urbani J., 2012, WEB SEMANTICS SCI SE, V10
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
NR 25
TC 9
Z9 9
U1 0
U2 9
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 445
EP 459
DI 10.1017/S1471068414000131
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200004
OA Bronze, Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Erdem, E
   Patoglu, V
   Saribatur, ZG
   Schüller, P
   Uras, T
AF Erdem, Esra
   Patoglu, Volkan
   Saribatur, Zeynep G.
   Schuller, Peter
   Uras, Tansel
TI Finding optimal plans for multiple teams of robots through a mediator: A
   logic-based approach
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
DE answer set programming; decoupled planning; cognitive robotics
ID ANSWER; COMPLEXITY
AB We study the problem of finding optimal plans for multiple teams of robots through a mediator, where each team is given a task to complete in its workspace on its own and where teams are allowed to transfer robots between each other, subject to the following constraints: 1) teams (and the mediator) do not know about each other's workspace or tasks (e.g., for privacy purposes); 2) every team can lend or borrow robots, but not both (e.g., transportation/calibration of robots between/for different workspaces is usually costly). We present a mathematical definition of this problem and analyze its computational complexity. We introduce a novel, logic-based method to solve this problem, utilizing action languages and answer set programming for representation, and the state-of-the-art ASP solvers for reasoning. We show the applicability and usefulness of our approach by experiments on various scenarios of responsive and energy-efficient cognitive factories.
C1 [Erdem, Esra; Patoglu, Volkan; Saribatur, Zeynep G.; Schuller, Peter] Sabanci Univ, Fac Engn & Nat Sci, Istanbul, Turkey.
   [Uras, Tansel] Univ So Calif, Dept Comp Sci, Los Angeles, CA 90089 USA.
C3 Sabanci University; University of Southern California
RP Erdem, E (corresponding author), Sabanci Univ, Fac Engn & Nat Sci, Istanbul, Turkey.
RI Patoglu, Volkan/AAC-5081-2019; Schüller, Peter/C-3531-2016; Erdem,
   Esra/I-4587-2012; Uras, Tansel/JYQ-3006-2024
OI Patoglu, Volkan/0000-0001-6644-3937; Schüller,
   Peter/0000-0002-1837-126X; Erdem, Esra/0000-0001-8384-7810; 
FU TUBITAK [111E116, 2216]
FX This work is partially supported by TUBITAK Grant 111E116. Peter
   Schueller is supported by TUBITAK 2216 Fellowship. Tansel Uras' work is
   carried out while studying at Sabanci University.
CR Aker E., 2012, Robot Control, V10, P77, DOI 10.3182/20120905-3-HR-2030.00169
   Alami R, 1998, ECAI 1998: 13TH EUROPEAN CONFERENCE ON ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P617
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], 1997, Proceedings of the 14th National Conference on Artificial Intelligence (AAAI), DOI DOI 10.1093/ACPROF:OSO/9780198235880.003.0005
   Beetz M, 2007, LECT NOTES ARTIF INT, V4667, P19
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Casolary M., 2011, Technical Communications of the 27th International Conference on Logic Programming (ICLP), P51
   Chevaleyre Y, 2006, INFORM-J COMPUT INFO, V30, P3
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   de Weerdt M, 2009, MULTIAGENT GRID SYST, V5, P345, DOI 10.3233/MGS-2009-0133
   Decker K., 1994, P 13 INT WORKSH DIST, P65
   Dovier A, 2013, THEOR PRACT LOG PROG, V13, P149, DOI 10.1017/S1471068411000615
   Durfee E. H., 1987, P DARPA KNOWL BAS PL, P181
   Ehtamo H, 1999, MANAGE SCI, V45, P1697, DOI 10.1287/mnsc.45.12.1697
   Ephrati E., 1993, Proceedings of the 12th International Workshop on Distributed Artificial Intelligence, P115
   Erdem E., 2012, LECT NOTES COMP SCI, P229
   Erdem E, 2011, IEEE INT CONF ROBOT, DOI 10.1109/ICRA.2011.5980160
   Erdem E, 2012, IEEE INT C EMERG, DOI 10.1109/ETFA.2012.6489636
   Erdem E, 2012, INTEL SERV ROBOT, V5, P275, DOI 10.1007/s11370-012-0119-x
   EROL K, 1995, ARTIF INTELL, V76, P75, DOI 10.1016/0004-3702(94)00080-K
   FOULSER DE, 1992, ARTIF INTELL, V57, P143, DOI 10.1016/0004-3702(92)90016-Q
   Gaston ME, 2008, COMPUT INTELL-US, V24, P122, DOI 10.1111/j.1467-8640.2008.00325.x
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P260, DOI 10.1007/978-3-540-72200-7_23
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gelfond M., 1998, Electron. Trans. Artif. Intell., V2, P193
   Georgeff M. P., 1988, READINGS DISTRIBUTED, P200
   Giunchiglia E, 2004, ARTIF INTELL, V153, P49, DOI [10.1016/j.artint.2002.12.001, 10.1016/j.artint.2003.12.001]
   Hamadi Y, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P499
   Havur G, 2013, IEEE INT CONF ROBOT, P4552, DOI 10.1109/ICRA.2013.6631224
   Hunsberger L, 2000, FOURTH INTERNATIONAL CONFERENCE ON MULTIAGENT SYSTEMS, PROCEEDINGS, P151, DOI 10.1109/ICMAS.2000.858447
   Kowalski R. A., 2013, CORRABS13016905
   Lifschitz V, 2002, ARTIF INTELL, V138, P39, DOI 10.1016/S0004-3702(02)00186-8
   Lifschitz V., 2008, P AAAI C ART INT, P1594
   Lin SH, 2011, IN C IND ENG ENG MAN, P1000, DOI 10.1109/IEEM.2011.6118066
   Nair R., 2002, P ROBOCUP, P150
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   SHOHAM Y, 1995, ARTIF INTELL, V73, P231, DOI 10.1016/0004-3702(94)00007-N
   Stuart C., 1985, 9TH P INT JOINT C AR, P1031
   SYCARA KP, 1991, IEEE EXPERT, V6, P29, DOI 10.1109/64.73815
   ter Mors A, 2004, IC-AI '04 & MLMTA'04 , VOL 1 AND 2, PROCEEDINGS, P795
   Trejo R, 2001, INT J UNCERTAIN FUZZ, V9, P827
   Turner H, 2002, LECT NOTES ARTIF INT, V2424, P111, DOI 10.1007/3-540-45757-7_10
   van der Krogt R., 2005, P AAMAS, P1337
   Yang Q., 1992, COMPUTATIONAL INTELL, V8, P648, DOI DOI 10.1111/j.1467-8640.1992.tb00383.x
   Zaeh M., 2012, ENABLING MANUFACTURI, P10, DOI DOI 10.1007/978-3-642-23860-4_2
   Zäh MF, 2009, SPRINGER SER ADV MAN, P355
NR 46
TC 18
Z9 18
U1 0
U2 9
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 831
EP 846
DI 10.1017/S1471068413000525
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400025
DA 2024-07-18
ER

PT J
AU Perri, S
   Ricca, F
   Sirianni, M
AF Perri, Simona
   Ricca, Francesco
   Sirianni, Marco
TI Parallel instantiation of ASP programs: techniques and experiments
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Answer-Set Programming; Instantiation; Parallelism; Heuristics
ID STABLE MODEL SEMANTICS; ANSWER SET SOLVER; KNOWLEDGE REPRESENTATION;
   SYSTEM; COMPETITION; COMPLEXITY; DATALOG
AB Answer-Set Programming (ASP) is a powerful logic-based programming language, which is enjoying increasing interest within the scientific community and (very recently) in industry. The evaluation of Answer-Set Programs is traditionally carried out in two steps. At the first step, an input program P undergoes the so-called instantiation (or grounding) process, which produces a program P' semantically equivalent to P, but not containing any variable; in turn, P' is evaluated by using a backtracking search algorithm in the second step. It is well-known that instantiation is important for the efficiency of the whole evaluation, might become a bottleneck in common situations, is crucial in several real-world applications, and is particularly relevant when huge input data have to be dealt with. At the time of this writing, the available instantiator modules are not able to exploit satisfactorily the latest hardware, featuring multi-core/multi-processor Symmetric MultiProcessing technologies. This paper presents some parallel instantiation techniques, including load-balancing and granularity control heuristics, which allow for the effective exploitation of the processing power offered by modern Symmetric MultiProcessing machines. This is confirmed by an extensive experimental analysis reported herein.
C1 [Perri, Simona; Ricca, Francesco; Sirianni, Marco] Univ Calabria, Dipartimento Matemat, I-87030 Arcavacata Di Rende, Italy.
C3 University of Calabria
RP Perri, S (corresponding author), Univ Calabria, Dipartimento Matemat, I-87030 Arcavacata Di Rende, Italy.
EM perri@mat.unical.it; ricca@mat.unical.it; sirianni@mat.unical.it
RI Perri, Simona/IQV-7425-2023
OI Perri, Simona/0000-0002-8036-5709
FU Regione Calabria; EU under POR Calabria FESR within the PIA project of
   DLVSYSTEM s.r.l.
FX This work has been partially supported by Regione Calabria and EU under
   POR Calabria FESR 2007-2013 within the PIA project of DLVSYSTEM s.r.l.
CR Aiello L.C., 2001, ACM Transactions on Computational Logic, V2, P542, DOI [10.1145/383779.383785, DOI 10.1145/383779.383785]
   Anger C., 2001, P 6 INT C LOG PROGR, V2173, P406
   [Anonymous], 1989, Principles of Database and Knowledge-Base Systems
   Balduccini M, 2005, PARALLEL COMPUT, V31, P608, DOI 10.1016/j.parco.2005.03.004
   Baral C., 2001, P 6 INT C LOG PROGR, V2173, P186
   Baral C., 2003, KNOWLEDGE REPRESENTA
   BELL C, 1994, J ACM, V41, P1178, DOI 10.1145/195613.195637
   Calimeri F, 2008, J ALGORITHMS, V63, P34, DOI 10.1016/j.jalgor.2008.02.003
   Carey M. J., 1986, P 1986 INT C MAN DAT, V15, P108
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Denecker M, 2009, LECT NOTES COMPUT SC, V5753, P637, DOI 10.1007/978-3-642-04238-6_75
   Dewan H. M., 1994, P 1994 INT C MAN DAT, V23, P277
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Ellguth E, 2009, LECT NOTES COMPUT SC, V5753, P490, DOI 10.1007/978-3-642-04238-6_47
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   Faber W., 1999, Using database optimization techniques for nonmonotonic reasoning, P135
   GANGULY S, 1990, SIGMOD REC, V19, P143, DOI 10.1145/93605.98724
   Gebser M, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P386
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P266, DOI 10.1007/978-3-540-72200-7_24
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P3, DOI 10.1007/978-3-540-72200-7_3
   Gelfond M, 2002, ARTIF INTELL, V138, P3, DOI 10.1016/S0004-3702(02)00207-2
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Grasso G., 2011, LOGIC PROGRAMMING KN, V6565, P1
   Grasso G, 2010, LECT NOTES COMPUT SC, V5937, P40, DOI 10.1007/978-3-642-11503-5_5
   Gressmann J, 2005, LECT NOTES ARTIF INT, V3662, P227, DOI 10.1007/11546207_18
   Ielpa SM, 2009, LECT NOTES COMPUT SC, V5753, P368, DOI 10.1007/978-3-642-04238-6_31
   Janhunen T, 2006, ACM T COMPUT LOG, V7, P1, DOI 10.1145/1119439.1119440
   Knuth D. E., 1994, STANFORD GRAPHBASE P, VI-VII
   Lembo D., 2002, P 10 IT S ADV DAT SY, P299
   LEONE N, 2004, P 10 INT WORKSH NONM, P258
   Leone N., 2001, P 6 INT C LOG PROGR, V2173, P280
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lierler Y, 2004, LECT NOTES ARTIF INT, V2923, P346
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Niemela I., 1997, P 4 INT C LOG PROGR, V1265, P421
   Perri S., 2008, P 1 WORKSH ANSW SET, P16
   Perri S, 2010, DAMP'10: PROCEEDINGS OF THE 2010 ACM SIGPLAN WORKSHOP ON DECLARATIVE ASPECTS OF MULTICORE PROGRAMMING, P73
   Pontelli E., 2001, P 1 INT ASP 01 WORKS, P174
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   SIMONS P, 2000, THESIS HELSINKI U TE
   Stallings W., 1998, Operating systems
   SUBRAHMANIAN VS, 1995, IEEE T KNOWL DATA EN, V7, P362, DOI 10.1109/69.390244
   WOLFSON O, 1990, SIGMOD REC, V19, P133, DOI 10.1145/93605.98723
   Wolfson O., 1988, P 1988 INT C MAN DAT, V17, P329
   ZHANG WN, 1995, IEEE T KNOWL DATA EN, V7, P163, DOI 10.1109/69.368511
   [No title captured]
NR 48
TC 10
Z9 11
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2013
VL 13
SI SI
BP 253
EP 278
DI 10.1017/S1471068411000652
PN 2
PG 26
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 102TP
UT WOS:000315867300006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Oetsch, J
   Pührer, J
   Schwengerer, M
   Tompits, H
AF Oetsch, Johannes
   Puehrer, Joerg
   Schwengerer, Martin
   Tompits, Hans
TI The system Kato: Detecting cases of plagiarism for answer-set programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 26th International Conference on Logic Programming
CY JUL 16-19, 2010
CL Edinburgh, SCOTLAND
SP Assoc Log Programming, Execut Comm, Logic Programming Comm
DE answer-set programming; program analysis; plagiarism detection
AB Plagiarism detection is a growing need among educational institutions and solutions for different purposes exist. An important field in this direction is detecting cases of source-code plagiarism. In this paper, we present the tool Kato for supporting the detection of this kind of plagiarism in the area of answer-set programming (ASP). Currently, the tool is implemented for DLV programs but it is designed to handle other logic-programming dialects as well. We review the basic features of Kato, introduce its theoretical underpinnings, and discuss an application of Kato for plagiarism detection in the context of courses on logic programming at the Vienna University of Technology.
C1 [Oetsch, Johannes; Puehrer, Joerg; Schwengerer, Martin; Tompits, Hans] Vienna Univ Technol, Inst Informat Syst 184 3, A-1040 Vienna, Austria.
C3 Technische Universitat Wien
RP Oetsch, J (corresponding author), Vienna Univ Technol, Inst Informat Syst 184 3, Favoritenstr 9-11, A-1040 Vienna, Austria.
EM oetsch@kr.tuwien.ac.at; puehrer@kr.tuwien.ac.at;
   schwengerer@kr.tuwien.ac.at; tompits@kr.tuwien.ac.at
OI Oetsch, Johannes/0000-0002-9902-7662
CR [Anonymous], J COMPUTING SCI COLL
   ARWIN C, 2006, C RES PRACTICE INFOR, V48, P277
   Austin M. J., 1999, Internet and Higher Education, V2, P21, DOI 10.1016/S1096-7516(99)00004-4
   Bergroth L, 2000, SPIRE 2000: SEVENTH INTERNATIONAL SYMPOSIUM ON STRING PROCESSING AND INFORMATION RETRIEVAL - PROCEEDINGS, P39, DOI 10.1109/SPIRE.2000.878178
   Clough Paul., 2000, Plagiarism in natural and programming languages: an overview of current tools and technologies
   Denecker M, 2009, LECT NOTES COMPUT SC, V5753, P637, DOI 10.1007/978-3-642-04238-6_75
   Eiter T, 2003, ARTIF INTELL, V144, P157, DOI 10.1016/S0004-3702(02)00367-3
   Farringdon J., 1996, Analysis for Authorship: A Guide to the Cusum Technique
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gitchell D, 1999, PROCEEDINGS OF THE THIRTIETH SIGCSE TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P266, DOI 10.1145/299649.299783
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   LANCASTER T, 2005, ITALICS, V4
   LOOSE F, 2008, RETRIEVAL TECHNOLOGI
   Lukácsy G, 2009, ACTA CYBERN, V19, P191, DOI 10.14232/actacyb.19.1.2009.13
   Lukacsy Gergely., 2005, Proceedings of the 4st Japanese-Hungarian Symposium on Discrete Mathematics and Its Applications, P189
   Maurer H, 2006, J UNIVERS COMPUT SCI, V12, P1050
   Mozgovoy Maxim., 2008, Enhancing Computer-Aided Plagiarism Detection
   Ottenstein K. J., 1976, ACM SIGCSE Bulletin, V8, P30, DOI [DOI 10.1145/382222.382462, 10.1145/382222.382462]
   PRECHELT L, 2000, 20001 U KARLSR FAK I
   SEREBRENIK A, 2007, ABSCS0701081 CORR
   Verco KL, 1996, COMPUT J, V39, P741, DOI 10.1093/comjnl/39.9.741
   VERCO KL, 1996, P 1 AUSTR C COMP SCI, P130
   WHALE G, 1990, COMPUT J, V33, P140, DOI 10.1093/comjnl/33.2.140
   WISE MJ, 1993, RUNNING KARPRABIN MA
NR 24
TC 3
Z9 3
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2010
VL 10
SI SI
BP 759
EP 775
DI 10.1017/S1471068410000402
PN 4-6
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 633MX
UT WOS:000280508200026
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lisi, FA
AF Lisi, Francesca A.
TI Inductive Logic Programming in Databases: From DATALOG to
   DL+LoG(sic)<SUP>V</SUP>
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Inductive Logic Programming; relational databases; ontologies;
   description logics; hybrid Knowledge Representation and reasoning
   systems
ID ONTOLOGIES; RULES; DL
AB In this paper we address an issue that has been brought to the attention of the database community with the advent of the Semantic Web, i.e., the issue of how ontologies (and semantics conveyed by them) can help solving typical database problems, through a better understanding of Knowledge Representation (KR) aspects related to databases. In particular, we investigate this issue from the 1LP perspective by considering two database problems, (i) the definition of views and (ii) the definition of constraints, for a database whose schema is represented also by means of an ontology. Both can be reformulated as I LP problems and can benefit from the expressive and deductive power of the KR framework DL+LOG(V). We illustrate the application scenarios by means of examples.
C1 Univ Bari Aldo Moro, Dipartimento Informat, Bari, Italy.
C3 Universita degli Studi di Bari Aldo Moro
RP Lisi, FA (corresponding author), Univ Bari Aldo Moro, Dipartimento Informat, Bari, Italy.
EM lisi@di.uniba.it
OI Lisi, Francesca Alessandra/0000-0001-5414-5844
CR [Anonymous], 2007, DESCRIPTION LOGIC HD, DOI DOI 10.1017/CBO9780511711787
   [Anonymous], 2001, RELATIONAL DATA MINI
   [Anonymous], 1983, Machine Learning: An Artificial Intelligence Approach
   [Anonymous], P 1 C ALG LEARN THEO
   Berners-Lee T., 2001, Scientific American May
   Blockeel H, 1999, DATA MIN KNOWL DISC, V3, P59, DOI 10.1023/A:1009867806624
   Borgida A, 1996, ARTIF INTELL, V82, P353, DOI 10.1016/0004-3702(96)00004-5
   BUNTINE W, 1988, ARTIF INTELL, V36, P149, DOI 10.1016/0004-3702(88)90001-X
   Calvanese D, 2007, J AUTOM REASONING, V39, P385, DOI 10.1007/s10817-007-9078-x
   Calvanese D, 2008, ACM T COMPUT LOG, V9, DOI 10.1145/1352582.1352590
   Ceri S., 1989, IEEE Transactions on Knowledge and Data Engineering, V1, P146, DOI 10.1109/69.43410
   Ceri S., 1990, Logic Programming and Databases, DOI [10.1007/978-3-642-83952-8, DOI 10.1007/978-3-642-83952-8_6]
   DERAEDT L, 1994, ARTIF INTELL, V70, P375, DOI 10.1016/0004-3702(94)90112-0
   DeRaedt L, 1997, MACH LEARN, V26, P99, DOI 10.1023/A:1007361123060
   DERAEDT L, 1993, IJCAI-93, VOLS 1 AND 2, P1058
   Donini FM, 1998, J INTELL INF SYST, V10, P227, DOI 10.1023/A:1008687430626
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   FLACH P, 1998, LECT NOTES COMPUTER, V1472, P356
   FLACH PA, 1993, LECT NOTES ARTIF INT, V667, P83
   FRAZIER M, 1993, P 10 INT C MACH LEAR, P120
   FRISCH AM, 1991, AI MAG, V11, P84
   Glimm B., 2008, P 11 INT C PRINC KNO, P252
   Glimm B, 2008, J ARTIF INTELL RES, V31, P157, DOI 10.1613/jair.2372
   Gomez-Perez A., 2004, ONTOLOGICAL ENG
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Horrocks Ian., 2000, LOG J IGPL, V8, P239, DOI DOI 10.1093/JIGPAL/8.3.239
   Horrocks Ian., 2003, Journal of Web Semantics, V1, P7, DOI [DOI 10.1016/J.WEBSEM.2003.07.001, https://doi.org/10.1016/j.websem.2003.07.001]
   Kietz JU, 2003, LECT NOTES ARTIF INT, V2583, P117
   Levy AY, 1998, ARTIF INTELL, V104, P165, DOI 10.1016/S0004-3702(98)00048-4
   Lisi FA, 2004, MACH LEARN, V55, P175, DOI 10.1023/B:MACH.0000023151.65011.a3
   Lisi FA, 2008, LECT NOTES ARTIF INT, V5194, P158, DOI 10.1007/978-3-540-85928-4_15
   LIST FA, 2008, THEOR PRACT LOG PROG, V8, P271
   MITCHELL TM, 1982, ARTIF INTELL, V18, P203, DOI 10.1016/0004-3702(82)90040-6
   Motik B, 2005, J WEB SEMANT, V3, P41, DOI 10.1016/j.websem.2005.05.001
   NIENHUYSCHENG SH, 1997, LECT NOTES ARTIFICIA, V1228
   Plotkin G. D., 1971, Machine Intelligence Volume 6, P101
   Plotkin G. D., 1970, Machine Intelligence, V5, P153
   QUINLAN JR, 1990, MACH LEARN, V5, P239, DOI 10.1007/BF00117105
   REITER R, 1980, J ACM, V27, P235, DOI 10.1145/322186.322189
   Rosati R, 2005, LECT NOTES COMPUT SC, V3703, P50
   Rosati R, 2005, J WEB SEMANT, V3, P61, DOI 10.1016/j.websem.2005.05.002
   Rosati Riccardo., 2006, P 10 INT C PRINCIPLE, P68
   ROUVEIROL C, 2000, LECT NOTES ARTIF INT, V1866, P191
   Sakama C., 2001, INT C INDUCTIVE LOGI, P62
   Savnik I., 2000, Intelligent Data Analysis, V4, P195
   SCHMIDTSCHAUSS M, 1991, ARTIF INTELL, V48, P1, DOI 10.1016/0004-3702(91)90078-X
   VANDERLAAG P, 1995, THESIS ERASMUS U
NR 47
TC 9
Z9 10
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2010
VL 10
SI SI
BP 331
EP 359
DI 10.1017/S1471068410000116
PN 3
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 614FF
UT WOS:000279040100004
DA 2024-07-18
ER

PT J
AU Fassetti, F
   Palopoli, L
AF Fassetti, Fabio
   Palopoli, Luigi
TI On the complexity of identifying head-elementary-set-free programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE computational complexity; elementary set; disjunctive logic program;
   head-elementary-set-free program
AB Head-elementary-set-free (HEF) programs were proposed in (Gebser et al. 2007) and shown to generalize over head-cycle-free programs while retaining their nice properties. It was left as an open problem in (Gebser et al. 2007) to establish the complexity of identifying HEF programs. This note solves the open problem by showing that the problem is complete for coNP.
C1 [Fassetti, Fabio] ICAR CNR, I-87036 Arcavacata Di Rende, CS, Italy.
   [Fassetti, Fabio; Palopoli, Luigi] Univ Calabria, DEIS, I-87036 Arcavacata Di Rende, CS, Italy.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Calcolo e Reti ad
   Alte Prestazioni (ICAR-CNR); University of Calabria
RP Fassetti, F (corresponding author), ICAR CNR, Via P Bucci 41C, I-87036 Arcavacata Di Rende, CS, Italy.
EM f.fassetti@deis.unical.it; palopoli@deis.unical.it
RI Fassetti, Fabio/C-4990-2016; Fassetti, Fabio/AAI-5314-2021
OI Fassetti, Fabio/0000-0002-8416-906X; Fassetti,
   Fabio/0000-0002-8416-906X; Palopoli, Luigi/0000-0003-4915-5137
CR Ben-Eliyahu R., 1994, Annals of Mathematics and Artificial Intelligence, V12, P53, DOI 10.1007/BF01530761
   Ben-Eliyahu-Zohary R, 1997, ARTIF INTELL, V96, P421, DOI 10.1016/S0004-3702(97)00060-X
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Garey M.R., 1979, COMPUTERS INTRACTABI
   GEBSER M, 2006, P 21 NAT C ART INT A, P244
   Gebser M, 2007, LECT NOTES COMPUT SC, V4483, P149, DOI 10.1007/978-3-540-72200-7_14
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
NR 8
TC 4
Z9 4
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2010
VL 10
BP 113
EP 123
DI 10.1017/S1471068409990196
PN 1
PG 11
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 547AW
UT WOS:000273858200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Estévez-Martín, S
   Hortalá-González, T
   Rodríguez-Artalejo, M
   Del Vado-Vírseda, R
   Sánez-Pérez, F
   Fernández, AJ
AF Estevez-Martin, S.
   Hortala-Gonzalez, T.
   Rodriguez-Artalejo, M.
   Del Vado-Virseda, R.
   Sanez-Perez, F.
   Fernandez, A. J.
TI On the cooperation of the constraint domains H, R, and FD in CFLP
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Review
DE cooperating constraint domains; constraint functional logic programming;
   constrained lazy narrowing; implementation
ID COMPONENT LANGUAGE; UNIFICATION; STRATEGIES; FRAMEWORK; SOLVERS; SEARCH;
   SCHEME; SYSTEM
AB This paper presents a computational model for the cooperation of constraint domains and an implementation for a particular case of practical importance. The computational model supports declarative programming with lazy and possibly higher-order functions, predicates, and the cooperation of different constraint domains equipped with their respective solvers, relying on a so-called constraint functional logic programming (CFLP) scheme. The implementation has been developed on top of the CFLP system FOY, supporting the cooperation of the three domains H, R, and FD, which supply equality and disequality constraints over symbolic terms, arithmetic constraints over the real numbers, and finite domain constraints over the integers, respectively. The computational model has been proved sound and complete w.r.t. the declarative semantics provided by the CFLP scheme, while the implemented system has been tested with a set of benchmarks and shown to behave quite efficiently in comparison to the closest related approach we are aware of.
C1 [Estevez-Martin, S.; Hortala-Gonzalez, T.; Rodriguez-Artalejo, M.; Del Vado-Virseda, R.] Univ Complutense Madrid, Dpto Sistemas Informat & Computac, E-28040 Madrid, Spain.
   [Sanez-Perez, F.] Univ Complutense Madrid, Dpto Ingn Software & Inteligencia Artificial, E-28040 Madrid, Spain.
   [Fernandez, A. J.] Univ Malaga, Dpto Lenguajes & Ciencias Computac, E-29071 Malaga, Spain.
C3 Complutense University of Madrid; Complutense University of Madrid;
   Universidad de Malaga
RP Estévez-Martín, S (corresponding author), Univ Complutense Madrid, Dpto Sistemas Informat & Computac, E-28040 Madrid, Spain.
EM s.estevez@sip.ucm.es; teresa@sip.ucm.es; mario@sip.ucm.es;
   rdelvado@sip.ucm.es; fernan@sip.ucm.es; afdez@lcc.uma.es
RI Fernández-Leiva, Antonio J./M-1265-2014; Saenz-Perez,
   Fernando/L-2301-2017
OI Fernández-Leiva, Antonio J./0000-0002-5330-5217; Saenz-Perez,
   Fernando/0000-0001-6075-4398; Estevez-Martin, Sonia/0000-0002-9510-0914
FU MERIT-FORMS [TIN2005-09207-C03-03]; PROMESAS-CAM [S-0505/TIC0407]; STAMP
   [TIN2008-06622-C03-01]; Spanish Ministry of Innovation and Science
   [TIN2008-05941]; Andalusia Regional Govermnent [P06-TIC2250]
FX The work of these authors has been partially supported by projects
   MERIT-FORMS (TIN2005-09207-C03-03), PROMESAS-CAM (S-0505/TIC0407), and
   STAMP (TIN2008-06622-C03-01).; The work of this author has been
   partially supported by projects TIN2008-05941 (from Spanish Ministry of
   Innovation and Science) and P06-TIC2250 (from Andalusia Regional
   Govermnent).
CR [Anonymous], LNCS
   [Anonymous], 1998, Term rewriting and all thatM
   [Anonymous], P 14 ANN ACM S PRINC
   [Anonymous], HASKELL 98 LANGUAGE
   Antoy S, 2000, LECT NOTES ARTIF INT, V1794, P171
   Antoy S, 2000, J ACM, V47, P776, DOI 10.1145/347476.347484
   ANTOY S, 1994, P 21 ACM S PRINC PRO, P268
   ARBAB F, 1998, SAC, P139
   ARENAS P, 2007, MULTIPARADIGM DECLAR
   ARENAS P, 1994, LNCS, V844, P385
   Baader F, 1998, THEOR COMPUT SCI, V192, P107, DOI 10.1016/S0304-3975(97)00147-3
   Baader F, 1996, J SYMB COMPUT, V21, P211, DOI 10.1006/jsco.1996.0009
   BAADER F, 1995, LECT NOTES COMPUTER, V976, P380
   Benhamou F, 1997, J LOGIC PROGRAM, V32, P1, DOI 10.1016/S0743-1066(96)00142-2
   Benhamou F, 1999, LOGIC PROGRAMM, P230
   BENHAMOU F, 1997, 2 INT WORKSH INT CON, P1
   BFRINGER H, 1995, LOGIC PROGRAMMING FO, P245
   BOCKMAYR A, 2000, INFORMS J COMPUT, V10, P287
   BUNTINE WL, 1994, J ACM, V41, P591, DOI 10.1145/179812.179813
   Castro C, 2004, LECT NOTES ARTIF INT, V3171, P93
   Castro C, 2004, LECT NOTES COMPUT SC, V3192, P447
   CHIU CK, 2002, RELIAB COMPUT, V8, P139
   COLMERAUER A, 1990, COMMUN ACM, V33, P69, DOI 10.1145/79204.79210
   COLMERAUER A, 1984, P INT C 5 GEN COMP S, P85
   COMON H, 1989, J SYMB COMPUT, V7, P371, DOI 10.1016/S0747-7171(89)80017-3
   Comon Hubert., 1991, COMPUTATIONAL LOGIC, P322
   Damas L., 1982, C REC 9 ANN ACM S PR, P207, DOI DOI 10.1145/582153.582176
   de la Banda M. G., 2001, Logic Programming. 17th International Conference, ICLP 2001. Proceedings (Lecture Notes in Computer Science Vol.2237), P90
   DELVADOVIRSEDA R, 2007, LNCS, V4711, P165
   DELVADOVIRSEDA R, 2003, P ACM SIGPLAN C PRIN, P213
   Durfee E., 1989, HDB ARTIFICIAL INTEL, V4, P83
   ESTEVEZ S, 2007, ENTCS, V177, P235
   Estévez-Martín S, 2007, ELECTRON NOTES THEOR, V188, P37, DOI 10.1016/j.entcs.2007.05.037
   Estévez-Martín S, 2008, LECT NOTES COMPUT SC, V4960, P112
   ESTEVEZMARTIN S, 2007, P CICLOPS 07, P57
   ESTEVEZMARTIN S, 2006, 068 LCC ITI
   ESTEVEZMARTIN S, 2008, PPDP 08, P258
   Fernandez AJ, 2006, J UNIVERS COMPUT SCI, V12, P1466
   Fernández FJ, 2004, ACM T PROGR LANG SYS, V26, P1, DOI 10.1145/963778.963779
   Fernandez M., 1992, Applicable Algebra in Engineering, Communication and Computing, V3, P1, DOI 10.1007/BF01189020
   Frank S, 2003, LECT NOTES ARTIF INT, V2821, P520
   FRANK S, 2005, P WCLP 2005, P159
   FRANK S, 2003, P FLAIRS, P177
   FRANK S, 2002, STRATEGIES COOPERATI
   Frank S, 2007, LECT NOTES COMPUT SC, V4378, P209
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Gervet C., 1997, Constraints, V1, P191, DOI 10.1007/BF00137870
   González-Moreno JC, 1999, J LOGIC PROGRAM, V40, P47, DOI 10.1016/S0743-1066(98)10029-8
   GONZALEZMORENO JC, 1996, LNCS, V1058, P156
   GONZALEZMORENO JC, 2001, J FUNCTIONAL LOGIC P, V1, P1
   GOUALARD F, 1999, J FUNCT LOGIC PROGRA, V1, P1
   GOUALARD F, 2001, ERCIM WORKSH CONSTR
   Granvilliers L., 2001, Reliable Computing, V7, P467, DOI 10.1023/A:1014750702474
   GRANVILLIERS L, 2001, ALP NEWSLETTER, V14, P2
   HANUS M, 2006, CURR INTEGRATED FUNC
   Harjunkoski I, 2000, COMPUT CHEM ENG, V24, P337, DOI 10.1016/S0098-1354(00)00470-1
   HINDLEY R, 1969, T AM MATH SOC, V146, P29, DOI 10.2307/1995158
   Hofstedt P, 2000, LECT NOTES ARTIF INT, V1861, P342
   HOFSTEDT P, 2000, LNCS, V1894, P520
   HOFSTEDT P, 2001, THESIS TU DRESDEN
   Hofstedt P, 2007, THEOR PRACT LOG PROG, V7, P93, DOI 10.1017/S1471068406002833
   HONG H, 1994, 9408 J KEPL U
   HOOKER J, 2000, DISCRETE MATH OPTIMI
   JAFFAR J, 1992, ACM T PROGR LANG SYS, V14, P339, DOI 10.1145/129393.129398
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   Jaffar J, 1998, J LOGIC PROGRAM, V37, P1, DOI 10.1016/S0743-1066(98)10002-X
   KEPSER S, 1999, FROCOS 98, P193
   Khedro T., 1994, ECAI 94. 11th European Conference on Artificial Intelligence. Proceedings, P249
   KIRCHGESSNER M, 1994, P SOC NUTR PHYSL, V2, P113
   KIRCHNER H, 1992, P JOINT INT C S LOG, P225
   Kobayashi N, 2003, IEICE T INF SYST, VE86D, P63
   KOBAYASHI N, 2001, 2 AS WORKSH PROGR LA, P49
   KOBAYASHI N, 2003, THESIS U TSUKUBA JAP
   KOBAYASHI N, 2002, 11 INT WORKSH FUNCT, P229
   KRZIKALLA O, 1997, CONSTRAINT SOLVER LI
   LASSEZ JL, 1988, LECT NOTES COMPUT SC, V306, P67
   LOOGEN R, 1993, LECT NOTES COMPUT SC, V714, P184
   LOPEZ F, 2007, HIGHER ORDER SYMBOLI, V20, P73
   LOPEZFRAGUAS FJ, 2004, P ACM SIGPLAN INT C, P43
   Maher M. J., 1988, Proceedings of the Third Annual Symposium on Logic in Computer Science (Cat. No.88CH2608-8), P348, DOI 10.1109/LICS.1988.5132
   MARIN M, 2001, IMS 99, V8, P287
   MARIN M, 2000, THESIS J KEPLER U LI
   Marti P., 1995, International Journal on Artificial Intelligence Tools (Architectures, Languages, Algorithms), V4, P93, DOI 10.1142/S0218213095000061
   MILNER R, 1978, J COMPUT SYST SCI, V17, P348, DOI 10.1016/0022-0000(78)90014-4
   Monfroy E, 2004, LECT NOTES COMPUT SC, V3261, P192
   Monfroy E., 1999, Fundamenta Informaticae, V39, P167
   MONFROY E, 1998, P JCSLP 98, P349
   MONFROY E, 1995, 2747 CRI
   MONFROY E, 1996, THESIS CTR RECHERCHE
   NDONG S, 1997, JFPLC 97, P235
   Nelson G., 1979, ACM Transactions on Programming Languages and Systems, V1, P245, DOI 10.1145/357073.357079
   Pajot B, 2003, LECT NOTES COMPUT SC, V2890, P401
   Rodosek R, 1999, ANN OPER RES, V86, P63, DOI 10.1023/A:1018904229454
   Rodríguez-Artalejo M, 2001, LECT NOTES COMPUT SC, V2002, P202
   Rueher M., 1997, Reliable Computing, V3, P325, DOI 10.1023/A:1009939327927
   SAENZPEREZ F, 2007, PRACTEX J, V3, P1
   SARASWAT V, 1992, PROCEEDINGS OF THE SEVENTH ANNUAL IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE, P341, DOI 10.1109/LICS.1992.185546
   Thorsteinsson E. S., 2001, Principles and Practice of Constraint Programming - CP 2002. 7th International Conference, CP 2001. Proceedings (Lecture Notes in Computer Science Vol.2239), P16
   Van Hentenryck P, 1998, J LOGIC PROGRAM, V37, P139, DOI 10.1016/S0743-1066(98)10006-7
   VANDENWEGHE H, 1998, P 49 ANN M EUR ASS A, P1
   VANHENTENRYCK P, 1994, ARTIF INTELL, V58, P113
   VANHOEVE W, 2000, THESIS U TWENTE NETH
   Virseda RD, 2005, LECT NOTES COMPUT SC, V3717, P184
   Zhou JY, 2000, J LOGIC PROGRAM, V45, P71, DOI 10.1016/S0743-1066(99)00063-1
   ZOETEWEIJ P, 2003, ACM S APPL COMP SAC, P360
NR 105
TC 8
Z9 8
U1 0
U2 6
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2009
VL 9
BP 415
EP 527
DI 10.1017/S1471068409003780
PN 4
PG 113
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 484ND
UT WOS:000269051300001
DA 2024-07-18
ER

PT J
AU Lisi, FA
AF Lisi, Francesca A.
TI Building rules on top of ontologies for the Semantic Web with inductive
   logic programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE inductive logic programming; hybrid knowledge representation and
   reasoning systems; ontologies; semantic web
ID ASSOCIATION RULES; DISCOVERY; KNOWLEDGE
AB Building rules on top of ontologies is the ultimate goal of the logical layer of the Semantic Web. To this aim, an ad-hoc markup language for this layer is currently under discussion. It is intended to follow the tradition of hybrid knowledge representation and reasoning systems, such as,AL-log that integrates the description logic ALC and the function-free Horn clausal language DATALOG. In this paper, we consider the problem of automating the acquisition of these rules for the Semantic Web. We propose a general framework for rule induction that adopts the methodological apparatus of Inductive Logic Programming and relies on the expressive and deductive power of AL-log. The framework is valid whatever the scope of induction (description versus prediction) is. Yet, for illustrative purposes, we also discuss an instantiation of the framework which aims at description and turns out to be useful in Ontology Refinement.
C1 Univ Bari, Dipartimento Informat, I-70125 Bari, Italy.
C3 Universita degli Studi di Bari Aldo Moro
RP Lisi, FA (corresponding author), Univ Bari, Dipartimento Informat, Via Orabona 4, I-70125 Bari, Italy.
EM lisi@di.uniba.it
OI Lisi, Francesca Alessandra/0000-0001-5414-5844
CR [Anonymous], 1983, Machine Learning: An Artificial Intelligence Approach
   [Anonymous], 1996, ADV INDUCTIVE LOGIC
   [Anonymous], ECAI WORKSH ONT LEAR
   Baader F., 2003, DESCRIPTION LOGIC HD
   Berners-Lee T., 2001, Scientific American May
   Blockeel H, 1999, DATA MIN KNOWL DISC, V3, P59, DOI 10.1023/A:1009867806624
   Borgida A, 1996, ARTIF INTELL, V82, P353, DOI 10.1016/0004-3702(96)00004-5
   BUNTINE W, 1988, ARTIF INTELL, V36, P149, DOI 10.1016/0004-3702(88)90001-X
   Ceri S., 1990, Logic Programming and Databases, DOI [10.1007/978-3-642-83952-8, DOI 10.1007/978-3-642-83952-8_6]
   Dellschaft K, 2006, LECT NOTES COMPUT SC, V4273, P228
   DERAEDT L, 1994, ARTIF INTELL, V70, P375, DOI 10.1016/0004-3702(94)90112-0
   DeRaedt L, 1997, ARTIF INTELL, V95, P187, DOI 10.1016/S0004-3702(97)00041-6
   DeRaedt L, 1997, MACH LEARN, V26, P99, DOI 10.1023/A:1007361123060
   Donini FM, 1998, J INTELL INF SYST, V10, P227, DOI 10.1023/A:1008687430626
   Fisher D. H., 1987, Machine Learning, V2, P139, DOI 10.1007/BF00114265
   Flach P, 2002, LECT NOTES ARTIF INT, V2407, P437
   FRAZIER M, 1993, PROCEEDINGS OF THE ELEVENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, P93
   FRISCH AM, 1991, AI MAG, V11, P84
   FRISCH AM, 1991, ARTIF INTELL, V49, P161, DOI 10.1016/0004-3702(91)90009-9
   Frisch AM, 1999, LECT NOTES ARTIF INT, V1634, P104
   GENNARI JH, 1989, ARTIF INTELL, V40, P11, DOI 10.1016/0004-3702(89)90046-5
   GOMEZPEREZ A, 2004, ONTOLOGICAL ENG SPRI
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Halkidi M, 2001, J INTELL INF SYST, V17, P107, DOI 10.1023/A:1012801612483
   Han JW, 1999, IEEE T KNOWL DATA EN, V11, P798, DOI 10.1109/69.806937
   HARTIGAN J, 2001, INT ENCY SOCIAL BEHA
   Horrocks Ian., 2000, LOG J IGPL, V8, P239, DOI DOI 10.1093/JIGPAL/8.3.239
   Horrocks Ian., 2003, Journal of Web Semantics, V1, P7, DOI [DOI 10.1016/J.WEBSEM.2003.07.001, https://doi.org/10.1016/j.websem.2003.07.001]
   Kietz JU, 2003, LECT NOTES ARTIF INT, V2583, P117
   Langley P., 1987, Machine Learning, V2, P99, DOI 10.1023/A:1022896407371
   Levy AY, 1998, ARTIF INTELL, V104, P165, DOI 10.1016/S0004-3702(98)00048-4
   Lisi FA, 2004, LECT NOTES ARTIF INT, V3194, P216
   Lisi FA, 2004, MACH LEARN, V55, P175, DOI 10.1023/B:MACH.0000023151.65011.a3
   LISI FA, 2003, LECT NOTES ARTIF INT, V2829, P49
   Lisi FA, 2007, LECT NOTES ARTIF INT, V4455, P305
   Lisi FA, 2006, LECT NOTES COMPUT SC, V4187, P242
   Lisi FA, 2006, FRONT ARTIF INTEL AP, V141, P765
   LIST F, 1936, LECT NOTES ARTIF INT, V2835, P215
   Maedche A, 2000, FRONT ARTIF INTEL AP, V54, P321
   Maedche A., 2004, Handbook on ontologies
   MAEDCHE A, 2002, LECT NOTES COMPUTER, V2431, P348, DOI DOI 10.1007/3-540-45681-3_
   Mannila H, 1997, DATA MIN KNOWL DISC, V1, P241, DOI 10.1023/A:1009796218281
   MITCHELL TM, 1982, ARTIF INTELL, V18, P203, DOI 10.1016/0004-3702(82)90040-6
   Motik B, 2004, LECT NOTES COMPUT SC, V3298, P549
   NIENHUYSCHENG SH, 1997, LECT NOTES ARTIFICIA, V1228
   REITER R, 1980, J ACM, V27, P235, DOI 10.1145/322186.322189
   Rosati R, 2005, J WEB SEMANT, V3, P61, DOI 10.1016/j.websem.2005.05.002
   ROUVEIROL C, 2000, LECT NOTES ARTIF INT, V1866, P191
   SCHMIDTSCHAUSS M, 1991, ARTIF INTELL, V48, P1, DOI 10.1016/0004-3702(91)90078-X
   SEMERARO G, 1998, LECT NOTES COMPUTER, V1463, P300
   Staab S., 2010, Handbook on Ontologies. International Handbooks on Information Systems
   Stumme G, 2004, LECT NOTES COMPUT SC, V3127, P109
   UTGOFF P.E., 1982, Proceedings of the Second National Conference on Artificial Intelligence, P414
   VRAIN C, 1996, LECT NOTES COMPUTER, V1079, P643
   XIONG H, 2005, 05015 DEP COMP SCI E
   Zimmermann A, 2004, LECT NOTES COMPUT SC, V3201, P575
NR 56
TC 22
Z9 23
U1 1
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2008
VL 8
BP 271
EP 300
DI 10.1017/S1471068407003195
PN 3
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 304KX
UT WOS:000256109500003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Son, TC
   Pontelli, E
AF Son, Tran Cao
   Pontelli, Enrico
TI A Constructive semantic characterization of aggregates in answer set
   programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE aggregates; answer set programming; semantics
AB This technical note describes a monotone and continuous fixpoint operator to compute the answer sets of programs with aggregates. The fixpoint operator relies on the notion of aggregate solution. Under certain conditions, this operator behaves identically to the three-valued immediate consequence operator Phi(aggr)(P) for aggregate programs, independently proposed in Pelov (2004) and Pelov et al. (2004). This operator allows us to closely tie the computational complexity of the answer set checking and answer sets existence problems to the cost of checking a solution of the aggregates in the program. Finally, we relate the semantics described by the operator to other proposals for logic programming with aggregates.
C1 New Mexico State Univ, Dept Comp Sci, Albuquerque, NM 87131 USA.
C3 New Mexico State University
RP Son, TC (corresponding author), New Mexico State Univ, Dept Comp Sci, Albuquerque, NM 87131 USA.
EM tson@cs.nmsu.edu; epontell@cs.nmsu.edu
RI Pontelli, Enrico/AAJ-5161-2021
OI Pontelli, Enrico/0000-0002-7753-1737
CR Cormen Thomas H., 2001, INTRO ALGORITHMS
   Dovier A, 2001, NEW GENERAT COMPUT, V19, P209, DOI 10.1007/BF03037598
   DOVIER A, 2003, INT C LOG PROGR, P284
   ELKABANI I, 2004, INT C LOG PROGR, P73
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   Gelfond M, 2002, LECT NOTES ARTIF INT, V2408, P413
   Gelfond M., 1988, P 5 INT C LOG PROGR, P1070, DOI DOI 10.2307/2275201
   KEMP DB, 1991, LOGIC PROGRAMM, P387
   Lloyd J. W., 1987, Foundations of logic programming
   MUMICK IS, 1990, VERY LARGE DATA BASES, P264
   PELOV, 2003, ASP ADV THEORY IMPLE, P29
   Pelov N, 2004, LECT NOTES ARTIF INT, V2923, P207
   Pelov N., 2004, THESIS KATHOLIEKE U
   Ross KA, 1997, J COMPUT SYST SCI, V54, P79, DOI 10.1006/jcss.1997.1453
   SON TC, 2005, CS2005006 NEW MEX ST
   Zaniolo C., 1993, Deductive and Object-Oriented Databases. Third International Conference, DOOD '93. Proceedings, P204
NR 16
TC 59
Z9 66
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2007
VL 7
BP 355
EP 375
DI 10.1017/S1471068406002936
PN 3
PG 21
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 158HV
UT WOS:000245783300003
DA 2024-07-18
ER

PT J
AU Leuschel, M
   Jorgensen, J
   Vanhoof, W
   Bruynooghe, M
AF Leuschel, M
   Jorgensen, J
   Vanhoof, W
   Bruynooghe, M
TI Offline specialisation in Prolog using a hand-written compiler generator
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE partial evaluation; partial deduction; program specialisation; compiler
   generation; abstract interpretation
ID BINDING-TIME ANALYSIS; PARTIAL DEDUCTION; PARTIAL EVALUATOR; TERMINATION
   ANALYSIS
AB The so called "cogen approach" to program specialisation, writing a compiler generator instead of a specialiser, has been used with considerable success in partial evaluation of both functional and imperative languages. This paper demonstrates that the cogen approach is also applicable to the specialisation of logic programs (called partial deduction) and leads to effective specialisers. Moreover, using good binding-time annotations, the speed-ups of the specialised programs are comparable to the speed-ups obtained with online specialisers. The paper first develops a generic approach to offline partial deduction and then a specific offline partial deduction method, leading to the offline system LIX for pure logic programs. While this is a usable specialiser by itself, it is used to develop the cogen System LOGEN. Given a program, a specification of what inputs will be static, and an annotation specifying which calls should be unfolded, LOGEN generates a specialised specialiser for the program at hand. Running this specialiser with particular values for the static inputs results in the specialised program. While this requires two steps instead of one, the efficiency of the specialisation process is improved in situations where the same program is specialised multiple times. The paper also presents and evaluates an automatic binding-time analysis that is able to derive the annotations. While the derived annotations are still suboptimal compared to hand-crafted ones, they enable nonexpert users to use the LOGEN system in a fully automated way. Finally, LOGEN is extended so as to directly support a large part of Prolog's declarative and non-declarative features and so as to be able to perform so called mixline specialisations.
C1 Univ Southampton, Dept Comp Sci, DSSE, Highfield SO17 1BJ, England.
   Royal Vet & Agr Univ, Dept Math & Phys, DK-1871 Frederiksberg C, Denmark.
   Katholieke Univ Leuven, Dept Comp Sci, B-3001 Heverlee, Belgium.
C3 University of Southampton; University of Copenhagen; KU Leuven
RP Univ Southampton, Dept Comp Sci, DSSE, Highfield SO17 1BJ, England.
RI Bruynooghe, Maurice/A-6196-2014
OI Bruynooghe, Maurice/0000-0002-6881-1462; Vanhoof,
   Wim/0000-0003-3769-6294
CR Andersen L. O., 1994, Ph.D. dissertation
   [Anonymous], 1994, The Godel Programming Language
   [Anonymous], 1993, Partial Evaluation and Automatic Program Generation
   Apt K. R., 1994, Formal Aspects of Computing, V6, P743, DOI 10.1007/BF01213601
   BECKMAN L, 1976, ARTIF INTELL, V7, P319, DOI 10.1016/0004-3702(76)90011-4
   Benkerimi K., 1993, Journal of Logic and Computation, V3, P469, DOI 10.1093/logcom/3.5.469
   Birkedal L., 1994, Programming Language Implementation and Logic Programming. 6th International Symposium, PLILP '94. Proceedings, P198
   BOL R, 1993, J LOGIC PROGRAM, V16, P25, DOI 10.1016/0743-1066(93)90022-9
   Bondorf A., 1993, Journal of Functional Programming, V3, P315, DOI 10.1017/S0956796800000769
   BONDORF A, 1990, 335 U DORTMUND
   Bruynooghe M, 1998, LECT NOTES COMPUT SC, V1381, P27, DOI 10.1007/BFb0053561
   BRUYNOOGHE M, 1992, NEW GENERAT COMPUT, V11, P47, DOI 10.1007/BF03037527
   CHEN WD, 1989, LOGIC PROGRAMM, P1090
   Codish M, 1995, J LOGIC PROGRAM, V25, P249, DOI 10.1016/0743-1066(95)00064-X
   Codish M, 1999, J LOGIC PROGRAM, V41, P103, DOI 10.1016/S0743-1066(99)00006-0
   Consel C., 1993, Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation. PEPM'93, P66, DOI 10.1145/154630.154638
   CONSEL C, 1993, P 20 ANN ACM S PRINC, P493
   COSMADOPOULOS Y, 1991, LECT NOTES ARTIF INT, V567, P301, DOI 10.1007/BFb0013539
   De Schreye D, 1999, J LOGIC PROGRAM, V41, P231, DOI 10.1016/S0743-1066(99)00030-8
   FUJITA H, 1988, NEW GENERAT COMPUT, V6, P91, DOI 10.1007/BF03037133
   Futamura Y., 1971, Systems, Compurters, Controls, V25, P45
   GALLAGHER J, 1991, TR9132 U BRISTOL
   GALLAGHER J, 1990, P META90 WORKSH MET, P229
   GALLAGHER J, 1991, NEW GENERAT COMPUT, V9, P305
   Gallagher J. P., 1993, Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation. PEPM'93, P88, DOI 10.1145/154630.154640
   Gallai V, 2000, CEREBROVASC DIS, V10, P1, DOI 10.1159/000047581
   GENAIM S, 2002, LNCS, V2294, P126
   Gluck R, 1995, LECT NOTES COMPUT SC, V982, P259, DOI 10.1007/BFb0026825
   GLUCK R, 1994, LECT NOTES COMPUTER, V844, P165
   GLUCK R, 1996, LECT NOTES COMPUTER, V1140, P152
   GURR CA, 1994, THESIS U BRISTOL
   Helsen S, 2000, LECT NOTES COMPUT SC, V1924, P51
   HERMENEGILDO MV, 1992, J LOGIC PROGRAM, V13, P349, DOI 10.1016/0743-1066(92)90053-6
   Hill P. M., 1998, HDB LOGIC ARTIFICIAL, P421
   HOLST CK, 1989, SYNTACTIC CURRYING Y
   HOLST CK, 1991, 4 ANN GLASG WORKSH F, P210
   JARGENSEN J, 1996, LNCS, V1110, P238
   Jones N. D., 1989, LISP SYMBOLIC COMPUT, V2, P9, DOI 10.1007/BF01806312
   KOMOROWSKI J, 1992, LECT NOTES COMPUT SC, V649, P49
   Launchbury J., 1991, PROJECTION FACTORISA
   Leuschel M, 2002, THEOR PRACT LOG PROG, V2, P461, DOI 10.1017/S147106840200145X
   Leuschel M., 2000, Proceedings of the 2nd International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP '00), P268, DOI 10.1145/351268.351298
   Leuschel M, 1998, ACM T PROGR LANG SYS, V20, P208, DOI 10.1145/271510.271525
   Leuschel M, 1998, NEW GENERAT COMPUT, V16, P283, DOI 10.1007/BF03037483
   LEUSCHEL M, 1996, ECCE PARTIAL DEDUCTI
   LEUSCHEL M, 1996, LNCS, V1207, P83
   LEUSCHEL M, 1996, P JOINT INT C S LOG, P319
   LLOYD, 1987, FDN LOGIC PROGRAMMIN
   Lloyd J.W., 1995, P ILPS 95, P465
   LLOYD JW, 1991, J LOGIC PROGRAM, V11, P217, DOI 10.1016/0743-1066(91)90027-M
   Martens B, 1996, J LOGIC PROGRAM, V28, P89, DOI 10.1016/0743-1066(95)00149-2
   MARTENS B, 1995, P ICLP 95, P597
   MARTENS B, 1995, METALOGICS LOGIC PRO, P57
   Martin J, 2000, LECT NOTES COMPUT SC, V1755, P101
   MOGENSEN T, 1992, LOGIC PROGRAM SYNTHE, P214
   NEUMANN G, 1990, P 2 WORKSH MET PROGR, P205
   NEUMANN G, 1991, LNCS, V592, P349
   PETTOROSSI A, 1994, J LOGIC PROGRAM, V20, P261, DOI 10.1016/0743-1066(94)90028-0
   PRESTWICH S, 1992, ECRC926
   Romanenko SA, 1988, PARTIAL EVALUATION M, P445
   SAHLIN D, 1993, NEW GENERAT COMPUT, V12, P7, DOI 10.1007/BF03038271
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   Sorensen MHB, 1999, LECT NOTES COMPUT SC, V1706, P246
   Sterling L., 1986, ART PROLOG
   TARAU P, 1994, P LOPSTR 93 WORKSH C, P196
   THIEMANN P, 1996, INT C FUNCT PROGR, P180
   TURCHIN VF, 1986, ACM T PROGR LANG SYS, V8, P292, DOI 10.1145/5956.5957
   Vanhoof W, 2002, LECT NOTES COMPUT SC, V2372, P129, DOI 10.1007/3-540-45607-4_8
   Vanhoof W, 2000, LECT NOTES ARTIF INT, V1955, P399, DOI 10.1007/3-540-44404-1_25
   Vanhoof W., 2001, LECT NOTES ARTIF INT, V2250, P707
   VANHOOF W, 1997, LNCS, V1463, P322
   VENKEN R, 1988, NEW GENERAT COMPUT, V6, P279, DOI 10.1007/BF03037142
   Yardeni Eyal, 1992, TYPES LOGIC PROGRAMM, P63
NR 73
TC 18
Z9 18
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2004
VL 4
BP 139
EP 191
DI 10.1017/S1471068403001662
PN 1-2
PG 53
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 776LU
UT WOS:000189118100005
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Andrews, JH
AF Andrews, JH
TI The witness properties and the semantics of the Prolog cut
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE operational semantics; abstract semantics; depth-first search; negation
   as failure; cut
ID LOGIC PROGRAMS; DENOTATIONAL SEMANTICS; TERMINATION; LANGUAGE; SYSTEM
AB The semantics of the Prolog 'cut' construct is explored in the context of some desirable properties of logic programming systems, referred to as the witness properties. The witness properties concern the operational consistency of responses to queries. A generalization of Prolog with negation as failure and cut is described, and shown not to have the witness properties. A restriction of the system is then described, which preserves the choice and first-solution behaviour of cut but allows the system to have the witness properties. The notion of cut in the restricted system is more restricted than the Prolog hard cut, but retains the useful first-solution behaviour of hard cut, not retained by other proposed cuts such as the 'soft cut'. It is argued that the restricted system achieves a good compromise between the power and utility of the Prolog cut and the need for internal consistency in logic programming systems. The restricted system is given an abstract semantics, which depends on the witness properties; this semantics suggests that the restricted system has a deeper connection to logic than simply permitting some computations which are logical. Parts of this paper appeared previously in a different form in the Proceedings of the 1995 International Logic Programming Symposium (Andrews, 1995).
C1 Univ Western Ontario, Dept Comp Sci, London, ON N6A 5B7, Canada.
C3 Western University (University of Western Ontario)
RP Univ Western Ontario, Dept Comp Sci, London, ON N6A 5B7, Canada.
CR Andrews J, 1997, THEOR COMPUT SCI, V184, P105, DOI 10.1016/S0304-3975(96)00138-7
   ANDREWS J, 1995, P INT LOG PROGR S, P591
   ANDREWS JH, 1991, LOGIC PROGRAMMING OP
   ANDREWS JH, 1998, P WORKSH US INT THEO, P34
   ANDREWS JH, 1999, 542 U W ONT DEP COMP
   [Anonymous], 1996, A Theory of Objects
   [Anonymous], 1981, Technical Report DAIMI FN-19
   Apt K. R., 1994, Formal Aspects of Computing, V6, P743, DOI 10.1007/BF01213601
   APT KR, 1993, INFORM COMPUT, V106, P109, DOI 10.1006/inco.1993.1051
   ARBAB B, 1987, J LOGIC PROGRAM, V4, P309, DOI 10.1016/0743-1066(87)90008-2
   BARBUTI R, 1990, INT J F COMPUT SCI, V1, P151
   BAUDINET M, 1992, J LOGIC PROGRAM, V14, P1, DOI 10.1016/0743-1066(92)90045-5
   Belnap N., 1977, MODERN USES MULTIPLE, P8, DOI [10.1007/978-94-010-1161-7_2, DOI 10.1007/978-94-010-1161-7_2]
   BEZEM M, 1993, J LOGIC PROGRAM, V15, P79, DOI 10.1016/0743-1066(93)90014-8
   BILLAUD M, 1990, THEOR COMPUT SCI, V71, P193, DOI 10.1016/0304-3975(90)90197-P
   BORGER E, 1990, 111 IWBS IBM WISS ZE
   BURSTALL RM, 1977, J ACM, V24, P44, DOI 10.1145/321992.321996
   Clark K. L., 1978, Logic and data bases, P293
   DAHL V, 1980, 2 INT WORKSH LOG PRO, P61
   DEBRAY SK, 1988, J LOGIC PROGRAM, V5, P61, DOI 10.1016/0743-1066(88)90007-6
   DEBRUIN A, 1989, LECT NOTES COMPUT SC, V351, P178
   DERANSART P, 1987, RR763 INRIA
   Elbl B, 1999, J LOGIC PROGRAM, V41, P27, DOI 10.1016/S0743-1066(98)10040-7
   Etalle S, 1999, J LOGIC PROGRAM, V39, P225, DOI 10.1016/S0743-1066(98)10037-7
   Etalle S, 1998, THEOR COMPUT SCI, V206, P51, DOI 10.1016/S0304-3975(97)00191-6
   Fitting M., 1985, Journal of Logic Programming, V2, P295, DOI 10.1016/S0743-1066(85)80005-4
   GABBRIELLI M, 1992, THEOR COMPUT SCI, V105, P85, DOI 10.1016/0304-3975(92)90288-Q
   JONES ND, 1984, P 2 INT C LOG PROGR, P281
   KRIPKE S, 1975, J PHILOS, V72, P690, DOI 10.2307/2024634
   Lindenstrauss N, 1997, LECT NOTES COMPUT SC, V1254, P444
   LINDENSTRAUSS N, 1997, P 14 INT C LOG PROGR
   Loveland D. W., 1991, COMPUTATIONAL LOGIC, P542
   NAISH L, 1986, LECT NOTES COMPUTER, V238
   NICHOLSON T, 1989, ACM T PROGR LANG SYS, V11, P650, DOI 10.1145/69558.69564
   PEREIRA F, C PROLOG USERS MANUA
   PIERRO A, 1995, INFOR COMPUTATION, V120, P263
   PLUMER L, 1990, LECT NOTES ARTIFICIA, V446
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   Stark RF, 1998, J LOGIC PROGRAM, V36, P241, DOI 10.1016/S0743-1066(97)10013-9
   TAMAKI H, 1984, P 2 INT LOG PROGR C
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
NR 41
TC 10
Z9 10
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2003
VL 3
BP 1
EP 59
DI 10.1017/S1471068402001540
PN 1
PG 59
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 674LJ
UT WOS:000182638000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Drabent, W
AF Drabent, Wlodzimierz
TI Implementing Backjumping by Means of Exception Handling
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Prolog; intelligent backtracking; backjumping; exception handling
ID PEARL
AB We discuss how to implement backjumping (or intelligent backtracking) in Prolog by using the built-ins throw/1 and catch/3. We show that it is impossible in a general case, contrary to a claim that "backjumping is exception handling." We provide two solutions. One works for binary programs; in a general case it imposes a restriction on where backjumping may originate. The other restricts the class of backjump targets. We also discuss implementing backjumping by using backtracking and the Prolog database. Additionally, we explain the semantics of Prolog exception handling in the presence of coroutining.
C1 [Drabent, Wlodzimierz] Polish Acad Sci, Inst Comp Sci, Warsaw, Poland.
C3 Polish Academy of Sciences; Institute of Computer Science of the Polish
   Academy of Sciences
RP Drabent, W (corresponding author), Polish Acad Sci, Inst Comp Sci, Warsaw, Poland.
EM drabent@ipipan.waw.pl
CR [Anonymous], 1996, Prolog-the Standard: Reference Manual
   Apt K. R., 1997, From Logic Programming to Prolog
   Bruynooghe M, 2004, THEOR PRACT LOG PROG, V4, P371, DOI 10.1017/S1471068403001893
   Bruynooghe M., 1984, IMPLEMENTATIONS PROL, P194
   Byrd L., 1980, LOG PROGR WORKSH
   DRABENT W, 1988, THEOR COMPUT SCI, V59, P133, DOI 10.1016/0304-3975(88)90099-0
   Drabent W, 2018, THEOR PRACT LOG PROG, V18, P1, DOI 10.1017/S1471068417000047
   Howe JM, 2012, THEOR COMPUT SCI, V435, P43, DOI 10.1016/j.tcs.2012.02.024
   Maher M.J., 1988, FDN DEDUCTIVE DATABA, P627
   Robbins E, 2021, THEOR PRACT LOG PROG, V21, P125, DOI 10.1017/S1471068420000435
   TARAU P, 1990, LECT NOTES COMPUT SC, V456, P159
NR 11
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2023
VL 23
IS 4
SI SI
BP 918
EP 932
DI 10.1017/S1471068423000285
EA AUG 2023
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7Z0
UT WOS:001080375200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kiesel, R
   Rückschloss, K
   Weitkämper, F
AF Kiesel, Rafael
   Rueckschloss, Kilian
   Weitkaemper, Felix
TI "What if?" in Probabilistic Logic Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE counterfactual reasoning; probabilistic logic programming; ProbLog;
   LPAD; causality; FCM-semantics; CP-logic
ID EVENTS
AB A ProbLog program is a logic program with facts that only hold with a specified probability. In this contribution, we extend this ProbLog language by the ability to answer "What if" queries. Intuitively, a ProbLog program defines a distribution by solving a system of equations in terms of mutually independent predefined Boolean random variables. In the theory of causality, Judea Pearl proposes a counterfactual reasoning for such systems of equations. Based on Pearl's calculus, we provide a procedure for processing these counterfactual queries on ProbLog programs, together with a proof of correctness and a full implementation. Using the latter, we provide insights into the influence of different parameters on the scalability of inference. Finally, we also show that our approach is consistent with CP-logic, that is with the causal semantics for logic programs with annotated with disjunctions.
C1 [Kiesel, Rafael] TU Wien, Vienna, Austria.
   [Rueckschloss, Kilian; Weitkaemper, Felix] Ludwig Maximilians Univ Munchen, Munich, Germany.
C3 Technische Universitat Wien; University of Munich
RP Kiesel, R (corresponding author), TU Wien, Vienna, Austria.
EM rafael.kiesel@tuwien.ac.at
RI Weitkämper, Felix/KLD-3159-2024
OI Weitkämper, Felix/0000-0002-3895-8279; Kiesel,
   Rafael/0000-0002-8866-3452; Ruckschloss, Kilian/0000-0002-7891-6030
FU LMU excellent - Federal Ministry of Education and Research (BMBF); Free
   State of Bavaria under the Excellence Strategy of the Federal
   Government; Lander; FWF [W1255-N23]
FX This publication was supported by LMU excellent, funded by the Federal
   Ministry of Education and Research (BMBF) and the Free State of Bavaria
   under the Excellence Strategy of the Federal Government and the Lander.
   Additionally, it was supported by FWF project W1255-N23
CR BALKE A, 1994, PROCEEDINGS OF THE TWELFTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P230
   Choi A., 2013, P 27 AAAI C ART INT
   Darwiche, 2011, IJCAI, VTwo, P819, DOI DOI 10.5591/978-1-57735-516-8/IJCAI11-143
   Darwiche A, 2002, J ARTIF INTELL RES, V17, P229, DOI 10.1613/jair.989
   Eiter T., 2021, P 18 INT C PRINCIPLE, P269
   Fierens D, 2015, THEOR PRACT LOG PROG, V15, P358, DOI 10.1017/S1471068414000076
   Korhonen T., 2021, LIPIcs, V210, P8
   Pearl Judea, 2000, MODELS REASONING INF, V19, DOI DOI 10.1017/CBO9780511803161
   POOLE D, 1993, ARTIF INTELL, V64, P81, DOI 10.1016/0004-3702(93)90061-F
   Raedt L. D., 2007, P 20 INT JOINT C ART, P2462
   Riguzzi F., 2020, FDN PROBABILISTIC LO
   Riguzzi F, 2011, THEOR PRACT LOG PROG, V11, P433, DOI 10.1017/S147106841100010X
   Ruckschloss K., 2022, CEUR WORKSHOP P, V3193
   Sato T., 1995, ICLP
   Van Hoeck N, 2015, FRONT HUM NEUROSCI, V9, DOI 10.3389/fnhum.2015.00420
   Vennekens J, 2004, LECT NOTES COMPUT SC, V3132, P431, DOI 10.1007/978-3-540-27775-0_30
   Vennekens J, 2010, LECT NOTES ARTIF INT, V6341, P313, DOI 10.1007/978-3-642-15675-5_27
   Vennekens J, 2009, THEOR PRACT LOG PROG, V9, P245, DOI 10.1017/S1471068409003767
NR 18
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2023
VL 23
IS 4
SI SI
BP 884
EP 899
AR PII S1471068423000133
DI 10.1017/S1471068423000133
EA JUL 2023
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7Z0
UT WOS:001030191600001
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Gelessus, D
   Leuschel, M
AF Gelessus, David
   Leuschel, Michael
TI Making ProB Compatible with SWI-Prolog
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Prolog; porting; compatibility; emulation; ProB
AB Even though the core of the Prolog programming language has been standardized by ISO since 1995, it remains difficult to write complex Prolog programs that can run unmodified on multiple Prolog implementations. Indeed, implementations sometimes deviate from the ISO standard and the standard itself fails to cover many features that are essential in practice. Most Prolog applications thus have to rely on nonstandard features, often making them dependent on one particular Prolog implementation and incompatible with others. We examine one such Prolog application: ProB, which has been developed for over 20 years in SICStus Prolog. The article describes how we managed to refactor the codebase of ProB to also support SWI-Prolog, with the goal of verifying ProB's results using two independent toolchains. This required a multitude of adjustments, ranging from extending the SICStus emulation in SWI-Prolog on to better modularizing the monolithic ProB codebase. We also describe notable compatibility issues and other differences that we encountered in the process, and how we were able to deal with them with few major code changes.
C1 [Gelessus, David; Leuschel, Michael] Univ Dusseldorf, Inst Informat, Univ Str 1, D-40225 Dusseldorf, Germany.
C3 Heinrich Heine University Dusseldorf
RP Gelessus, D (corresponding author), Univ Dusseldorf, Inst Informat, Univ Str 1, D-40225 Dusseldorf, Germany.
EM dagel101@hhu.de; michael.leuschel@hhu.de
OI Gelessus, David/0000-0002-6722-6296
CR [Anonymous], 1995, 132111 ISOIEC
   [Anonymous], 2011, EN50128-railway applications: Communication, signalling and processing systems-software for railway control and protection systems
   [Anonymous], 1321132021 ISOIEC WD
   Bendisposto J., 2014, P F IDE EPTCS, V149
   Butler M, 2020, LECT NOTES COMPUT SC, V12327, P189, DOI 10.1007/978-3-030-58298-2_8
   Carlsson M, 2012, THEOR PRACT LOG PROG, V12, P35, DOI 10.1017/S1471068411000482
   Costa VS, 2012, THEOR PRACT LOG PROG, V12, P5, DOI 10.1017/S1471068411000512
   Haemmerlé R, 2006, LECT NOTES COMPUT SC, V4079, P41, DOI 10.1007/11799573_6
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Korner P., 2022, ARXIV
   LEUSCHEL M, 2006, P PEPM 2006, P88
   Moura Paulo, 2013, Practical Aspects of Declarative Languages. 15th International Symposium, PADL 2013. Proceedings: LNCS 7752, P77, DOI 10.1007/978-3-642-45284-0_6
   VanNoord G., 2006, In TALN 2006, P20
   Wielemaker J, 2012, THEOR PRACT LOG PROG, V12, P67, DOI 10.1017/S1471068411000494
   Wielemaker J, 2011, LECT NOTES COMPUT SC, V6539, P69, DOI 10.1007/978-3-642-18378-2_8
NR 15
TC 0
Z9 0
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2022
VL 22
IS 5
SI SI
BP 755
EP 769
AR PII S1471068422000230
DI 10.1017/S1471068422000230
EA JUN 2022
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 3T5UT
UT WOS:000816947700001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Calimeri, F
   Manna, M
   Mastria, E
   Morelli, MC
   Perri, S
   Zangari, J
AF Calimeri, Francesco
   Manna, Marco
   Mastria, Elena
   Morelli, Maria Concetta
   Perri, Simona
   Zangari, Jessica
TI I-DLV-sr: A Stream Reasoning System based on I-DLV
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE stream reasoning; stream processing; overgrounding; knowledge
   representation and reasoning; answer set programming
ID LANGUAGE; LARS
AB We introduce a novel logic-based system for reasoning over data streams, which relies on a framework enabling a tight, fine-tuned interaction between Apache Flink and the I-2 -DLV system. The architecture allows to take advantage from both the powerful distributed stream processing capabilities of Flink and the incremental reasoning capabilities of I-2-DLV , based on overgrounding techniques. Besides the system architecture, we illustrate the supported input language and its modeling capabilities, and discuss the results of an experimental activity aimed at assessing the viability of the approach.
C1 [Calimeri, Francesco; Manna, Marco; Mastria, Elena; Morelli, Maria Concetta; Perri, Simona; Zangari, Jessica] Univ Calabria, Dept Math & Comp Sci, Arcavacata Di Rende, Italy.
C3 University of Calabria
RP Calimeri, F (corresponding author), Univ Calabria, Dept Math & Comp Sci, Arcavacata Di Rende, Italy.
EM francesco.calimeri@unical.it; marco.manna@unical.it;
   elena.mastria@unical.it; maria.morelli@unical.it;
   simona.perri@unical.it; jessica.zangari@unical.it
RI Calimeri, Francesco/J-1935-2012; Mastria, Elena/JJE-8636-2023; Perri,
   Simona/IQV-7425-2023; Zangari, Jessica/AAA-6522-2021; Manna,
   Marco/G-8966-2012
OI Calimeri, Francesco/0000-0002-0866-0834; Mastria,
   Elena/0000-0003-0681-776X; Zangari, Jessica/0000-0002-6418-7711; Manna,
   Marco/0000-0003-3323-9328; Perri, Simona/0000-0002-8036-5709
FU project "MAP4ID - Multipurpose Analytics Platform 4 Industrial Data"
   [F/190138/01-03/X44]; Italian MIUR Ministry; the Presidency of the
   Council of Ministers under the project "Declarative Reasoning over
   Streams" under the "PRIN" 2017 call [CUP H24I17000080001, 2017M9C25L
   001]
FX This work has been partially supported by the project "MAP4ID -
   Multipurpose Analytics Platform 4 Industrial Data", N.
   F/190138/01-03/X44 and by the Italian MIUR Ministry and the Presidency
   of the Council of Ministers under the project "Declarative Reasoning
   over Streams" under the "PRIN" 2017 call (CUP H24I17000080001, project
   2017M9C25L 001).
CR Barbieri DF, 2010, INT J SEMANT COMPUT, V4, P3, DOI 10.1142/S1793351X10000936
   Bazoobandi HR, 2017, LECT NOTES COMPUT SC, V10587, P87, DOI 10.1007/978-3-319-68288-4_6
   Beck H, 2018, KUNSTL INTELL, V32, P193, DOI 10.1007/s13218-018-0537-9
   Beck H, 2018, ARTIF INTELL, V261, P16, DOI 10.1016/j.artint.2018.04.003
   Beck H, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2741
   Becker HD, 2017, INTRODUCTION TO BRONCHOSCOPY, 2ND EDITION, P1
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Calimeri F, 2020, THEOR PRACT LOG PROG, V20, P294, DOI 10.1017/S1471068419000450
   Calimeri F, 2019, THEOR PRACT LOG PROG, V19, P957, DOI 10.1017/S1471068419000292
   Calimeri F, 2017, INTELL ARTIF, V11, P5, DOI 10.3233/IA-170104
   Carbone P., 2015, IEEE DATA ENG B, V36, P28, DOI DOI 10.1109/IC2EW.2016.56
   Le-Phuoc D, 2011, LECT NOTES COMPUT SC, V7031, P370, DOI 10.1007/978-3-642-25073-6_24
   DellAglio D, 2017, Data Sci, V1, P59, DOI [10.3233/DS-170006, DOI 10.3233/DS-170006]
   Do TM, 2011, LECT NOTES ARTIF INT, V6657, P104, DOI 10.1007/978-3-642-21043-3_13
   Eiter T, 2019, THEOR PRACT LOG PROG, V19, P974, DOI 10.1017/S1471068419000309
   Gebser M, 2019, THEOR PRACT LOG PROG, V19, P27, DOI 10.1017/S1471068418000054
   Gebser M, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5450
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P54
   Hoeksema J., 2011, Ordring Workshop at ISWC
   Hueske F., 2019, STREAM PROCESSING AP
   Ianni G, 2020, THEOR PRACT LOG PROG, V20, P719, DOI 10.1017/S147106842000040X
   Karimov J, 2018, PROC INT CONF DATA, P1507, DOI 10.1109/ICDE.2018.00169
   Mileo Alessandra, 2013, Web Reasoning and Rule Systems. 7th International Conference, RR 2013. Proceedings. LNCS 7994, P247, DOI 10.1007/978-3-642-39666-3_23
   Pham TL, 2019, LECT NOTES ARTIF INT, V11481, P45, DOI 10.1007/978-3-030-20528-7_4
   Ren XN, 2018, IEEE INT CONF BIG DA, P811, DOI 10.1109/BigData.2018.8621947
   Toshniwa A, 2014, SIGMOD'14: PROCEEDINGS OF THE 2014 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P147, DOI 10.1145/2588555.2595641
NR 26
TC 6
Z9 6
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2021
VL 21
IS 5
SI SI
BP 610
EP 628
DI 10.1017/S147106842100034X
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA XB4RH
UT WOS:000721317500007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Bry, F
AF Bry, Francois
TI In Praise of Impredicativity: A Contribution to the Formalization of
   Meta-Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic programming; meta-programming; model theory; Barber Paradox;
   Russell's Paradox; reflection
ID SELF-REFERENCE; LOGIC; SEMANTICS; LANGUAGES; PROLOG; FOUNDATIONS;
   KNOWLEDGE; MODULES; BELIEF
AB Processing programs as data is one of the successes of functional and logic programming. Higher-order functions, as program-processing programs are called in functional programming, and meta-programs, as they are called in logic programming, are widespread declarative programming techniques. In logic programming, there is a gap between the meta-programming practice and its theory: The formalizations of meta-programming do not explicitly address its impredicativity and are not fully adequate. This article aims at overcoming this unsatisfactory situation by discussing the relevance of impredicativity to meta-programming, by revisiting former formalizations of meta-programming, and by defining Reflective Predicate Logic, a conservative extension of first-order logic, which provides a simple formalization of meta-programming.
C1 [Bry, Francois] Ludwig Maximilian Univ Munich, Inst Informat, Munich, Germany.
C3 University of Munich
RP Bry, F (corresponding author), Ludwig Maximilian Univ Munich, Inst Informat, Munich, Germany.
EM bry@lmu.de
RI Bry, François/AAF-7602-2020
OI Bry, François/0000-0002-0532-6005
CR AIELLO L, 1986, P IEEE, V74, P1304, DOI 10.1109/PROC.1986.13633
   [Anonymous], 1910, PRINCIPIA MATH
   [Anonymous], 1935, LOGIC SEMANTICS META
   [Anonymous], 1903, Grundgesetze der Arithmetik. Begriffsschriftlich abgeleitet von Dr. G. Frege
   [Anonymous], 1985, P 9 INT JOINT C ARTI
   [Anonymous], 2001, Handbook of automated reasoning
   [Anonymous], 1944, The Philosophy of Bertrand Russell
   [Anonymous], 1994, The Godel Programming Language
   [Anonymous], 1879, Begriffsschrift
   [Anonymous], 1977, Studies in Logic and the Foundations of Mathematics, DOI [DOI 10.1016/S0049-237X, DOI 10.1016/S0049-237X(08)71120-0, 10.1016/S0049-237X(08)71120-0]
   [Anonymous], 1992, Handbook of Logic in Computer Science
   [Anonymous], 1976, THESIS
   [Anonymous], 2005, The Oxford Handbook of Philosophy of Mathematics and Logic, DOI DOI 10.1093/0195148770.003.0019
   [Anonymous], 1931, MONATSH F MATH PHYSI, DOI DOI 10.1007/BF01700692
   Apt K. R., 1996, Fundamenta Informaticae, V28, P23
   APT KR, 1982, J ACM, V29, P841, DOI 10.1145/322326.322339
   Backus J., 1959, IFIP Congress, P125
   BARKLUND J, 1989, LOGIC PROGRAMM, P383
   BARKLUND J, 1994, MIT PS LOG, P554
   Barklund J, 2000, J LOGIC COMPUT, V10, P743, DOI 10.1093/logcom/10.6.743
   BARKLUND J, 1995, LOGIC PROGRAMM, P830
   Barklund J., 1995, P 1995 INT S LOGIC P, P288
   BARKLUND J, 1995, ENCY COMP S, V33, P205
   BENJAMIN P., 1990, MACHINE LEARNING MET, P3
   Bezem M., 2001, Computer Science Logic. 15th International Workshop, CSL 2001 10th Annual Conference of the EACSL. Proceedings (Lecture Notes in Computer Science Vol.2142), P203
   Bezem M, 1999, LOGIC PROGRAMM, P395
   BOHM C, 1966, COMMUN ACM, V9, P366, DOI 10.1145/355592.365646
   Boole G, 1854, A Treatsie on the Calculus of Finite Differences
   BOWEN K. A., 1985, P IEEE S LOG PROGR, P669
   Bowen K.A., 1982, Logic Programming, P153
   BOWEN KA, 1985, NEW GENERAT COMPUT, V3, P359, DOI 10.1007/BF03037077
   Burgess J. P., 2005, FIXING FREGE
   CARDELLI L, 1985, COMPUT SURV, V17, P471, DOI 10.1145/6041.6042
   Cardelli Luca, 2004, COMPUT SCI ENG HDB, P2208, DOI 10.1145/234313.234418
   CERVESATO I., 1992, LOGIC METAPROGRAMMIN
   Chang Chin-Liang., 1997, SYMBOLIC LOGIC MECH
   Charalambidis A, 2013, ACM T COMPUT LOG, V14, DOI 10.1145/2499937.2499942
   CHEN WD, 1993, J LOGIC PROGRAM, V15, P187, DOI 10.1016/0743-1066(93)90039-J
   Church A, 1932, ANN MATH, V33, P346, DOI 10.2307/1968337
   Church A., 1940, J. Symbolic Logic, V5, P56, DOI [10.2307/2266170, DOI 10.2307/2266170]
   CHWISTEK L., 1967, POLISH LOGIC, P338
   Chwistek Leon., 1921, Przeglad Filozoficzny, V24, P164
   CLOCKSIN WF, 1981, PROGRAMMING PROLOG
   Costantini S, 2002, LECT NOTES ARTIF INT, V2408, P253
   COSTANTINI S, 1994, J EXP THEOR ARTIF IN, V6, P239, DOI 10.1080/09528139408953789
   Costantini S., 1989, LOG PROGR P 6 INT C, P218
   Damas L., 1982, C REC 9 ANN ACM S PR, P207, DOI DOI 10.1145/582153.582176
   DAMAS L., 1985, CST3385 U ED
   DESCHREYE D, 1992, LECT NOTES COMPUT SC, V649, P192
   DIJKSTRA EW, 1968, COMMUN ACM, V11, P147, DOI 10.1145/362929.362947
   ESHGHI K., 1986, THESIS
   Frege G., 1893, GRUNDGESETZE ARITHME, V1
   Frege G., 2002, From Frege to Godel: A source book in mathematical logic (1879-1931), P1
   Frege G., 1964, BASIC LAWS ARITHMETI
   Frege G., 1967, FREGE G UDEL SOURCE, P1
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   GENTZEN G, 1964, AM PHILOS QUART, V1, P288
   Gentzen G., 1969, The collected papers of Gerhard Gentzen
   GIORDANO L, 1994, SOFTWARE-CONC TOOL, V15, P125
   GIORDANO L., 1994, J LOGIC PROGRAM, V19, P1
   GODEL K., 2002, FREGE GODEL SOURCE B, P582
   Godel K., 1986, FORMALLY UNDECIDABLE, V1, P145
   Godel K., 1930, Doctoral Thesis
   Godel Kurt., 1967, From Frege to Godel: A Source Book in Mathematical Logic, 1879-1931, P582
   GRAF P, 1996, LNCS, V1053
   Haemmerlé R, 2006, LECT NOTES COMPUT SC, V4079, P41, DOI 10.1007/11799573_6
   HARPER R, 1993, J ACM, V40, P143, DOI 10.1145/138027.138060
   Higgins CP, 1996, J LOGIC COMPUT, V6, P363, DOI 10.1093/logcom/6.3.363
   Hill P.M., 1988, METAPROGRAMMING LOGI, P23
   HINDLEY R, 1969, T AM MATH SOC, V146, P29, DOI 10.2307/1995158
   Hintikka J., 1964, KNOWLEDGE BELIEF INT
   JIANG YJ, 1994, MIT PS LOG, P387
   KALSBEEK M. B., 1993, 9301 CT U AMST I LOG
   Kalsbeek Marianne B., 1995, COMPUTATION COMPLEXI, P27
   KOWALSKI R., 1973, 70 ED U DEP ART INT
   KOWALSKI RA, 1991, AI MATH THEORY COMPU, P231
   Kowalski Robert, 1979, Logic for Problem Solving
   Kutschera Franz von, 1989, G FREGE EINFUHRUNG S
   LEVI G, 1993, LOGIC PROGRAMM, P354
   Levy J, 2000, INFORM COMPUT, V159, P125, DOI 10.1006/inco.2000.2877
   Link Godehard., 2004, One Hundred Years of Russell's Paradox: Mathematics, Logic, Philosophy
   Liskov B., 1974, SIGPLAN Notices, V9, P50, DOI 10.1145/942572.807045
   LISMONT L, 1994, THEOR DECIS, V37, P75, DOI 10.1007/BF01079206
   Lloyd J. W., 2012, Foundations of Logic Programming
   MARTELLI A, 1988, LECT NOTES COMPUT SC, V300, P317
   MCCARTHY J, 1978, TECH REP
   MCCARTHY J., 1965, TECH REP
   MILLER D, 1989, J LOGIC PROGRAM, V6, P79, DOI 10.1016/0743-1066(89)90031-9
   Miller D., 2012, PROGRAMMING HIGHER O
   MILNER R, 1978, J COMPUT SYST SCI, V17, P348, DOI 10.1016/0022-0000(78)90014-4
   MOSCHOVAKIS J., 2015, INTUITIONISTIC LOGIC
   MOSCHOVAKIS J., 1999, INTUITIONISTIC LOGIC
   Nadathur G., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P810
   O'Keefe R.A., 1990, The Craft of Prolog
   PERLIS AJ, 1958, COMMUN ACM, V1, P8, DOI 10.1145/377924.594925
   PERLIS D, 1988, ARTIF INTELL, V34, P179, DOI 10.1016/0004-3702(88)90038-0
   PERLIS D, 1985, ARTIF INTELL, V25, P301, DOI 10.1016/0004-3702(85)90075-X
   Perlis Donald., 1988, META LEVEL ARCHITECT, P37
   Pfenning F., 1999, Automated Deduction - CADE-16. 16th International Conference on Automated Deduction. Proceedings (Lecture Notes in Artificial Intelligence Vol.1632), P202
   Pfenning Frank., 1991, Logic programming in the LF logical framework
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Ramsey FP, 1926, P LOND MATH SOC, V25, P338
   Robinson G., 1983, MACH INTELL, V4, P135
   ROBINSON G., 1969, J SYMBOLIC LOGIC, V34, P102
   ROSSI G, 1993, COMPUT J, V36, P217, DOI 10.1093/comjnl/36.3.217
   ROSSI G., 1989, P 5 INT C ART INT IN
   Russell B, 1908, AM J MATH, V30, P222, DOI 10.2307/2369948
   Russell B, 1907, P LOND MATH SOC, V4, P29, DOI 10.1112/plms/s2-4.1.29
   RUSSELL B., 1986, LOGICAL PHILOS PAPER, V6
   SIEKMANN J. H., 1983, SYMBOLIC COMPUTATION, V1
   SIKLOSSY L, 1976, LETS TALK LISP
   Sterling L., 1994, THE ART OF PROLOG
   SUGANO H., 1989, TECH REP
   SUGANO H., 1990, P 2 WORKSH MET LOG P, P19
   Tarski A., 1935, Studia Philosophica,Commentarii Societatis Philosophicae Polonorum, V1, P261
   TRUMP D., 2017, WHY WOULD KIM JU INS
   van Ditmarsch H., 2015, Handbook of Epistemic Logic
   VAN HARMELEN F., 1989, LOGIC BASED KNOWLEDG, P1
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   VANHARMELEN F, 1992, LECT NOTES COMPUT SC, V649, P89
   WADGE WW, 1991, LOGIC PROGRAMM, P289
   WEYHRAUCH RW, 1980, ARTIF INTELL, V13, P133, DOI 10.1016/0004-3702(80)90015-6
   Whitehead A.N., 1912, Principia mathematica, V1-3
   Whitehead A.N., 1913, Principia mathematica, V1-3
NR 124
TC 2
Z9 2
U1 3
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2020
VL 20
IS 1
BP 99
EP 146
DI 10.1017/S1471068419000024
PG 48
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA JZ2EH
UT WOS:000504915200003
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Amendola, G
   Dodaro, C
   Maratea, M
AF Amendola, Giovanni
   Dodaro, Carmine
   Maratea, Marco
TI Abstract Solvers for Computing Cautious Consequences of ASP programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 35th International Conference on Logic Programming (ICLP)
CY SEP 20-25, 2019
CL Las Cruces, NM
DE Answer Set Programming; Abstract solvers; Cautious reasoning
ID ANSWER; SYSTEMS; SAT
AB A Abstract solvers are a method to formally analyze algorithms that have been profitably used for describing, comparing and composing solving techniques in various fields such as Propositional Satisfiability (SAT), Quantified SAT, Satisfiability Modulo Theories, Answer Set Programming (ASP), and Constraint ASP.
   In this paper, we design, implement and test novel abstract solutions for cautious reasoning tasks in ASP. We show how to improve the current abstract solvers for cautious reasoning in ASP with new techniques borrowed from backbone computation in SAT, in order to design new solving algorithms. By doing so, we also formally show that the algorithms for solving cautious reasoning tasks in ASP are strongly related to those for computing backbones of Boolean formulas. We implement some of the new solutions in the ASP solver wasp and show that their performance are comparable to state-of-the-art solutions on the benchmark problems from the past ASP Competitions.
C1 [Amendola, Giovanni; Dodaro, Carmine] Univ Calabria, Commenda Di Rende, Italy.
   [Maratea, Marco] Univ Genoa, Genoa, Italy.
C3 University of Calabria; University of Genoa
RP Amendola, G (corresponding author), Univ Calabria, Commenda Di Rende, Italy.
EM amendola@mat.unical.it; dodaro@mat.unical.it; marco@dibris.unige.it
RI Maratea, Marco/AAR-5779-2020; Dodaro, Carmine/AAE-5732-2020; Amendola,
   Giovanni/Q-1859-2018
OI Dodaro, Carmine/0000-0002-5617-5286; Amendola,
   Giovanni/0000-0002-2111-9671
CR Alviano Mario, 2019, Logic Programming and Nonmonotonic Reasoning. 15th International Conference, LPNMR 2019. Proceedings: Lecture Notes in Artificial Intelligence (LNAI 11481), P241, DOI 10.1007/978-3-030-20528-7_18
   Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   ALVIANO M., 2016, THEOR PRACT LOG PROG, V16, P5
   Alviano M, 2018, THEOR PRACT LOG PROG, V18, P319, DOI 10.1017/S1471068418000145
   Alviano M, 2014, THEOR PRACT LOG PROG, V14, P755, DOI 10.1017/S1471068414000325
   Arenas M., 2003, THEOR PRACT LOG PROG, V3, P4
   Baral C., 2003, KNOWLEDGE REPRESENTA
   Brewka Gerhard., 2007, Proceedings of the 22nd national conference on Artificial intelligence - Volume 1, V1, P385
   Brochenin R, 2018, ARGUM COMPUT, V9, P41, DOI 10.3233/AAC-170031
   Brochenin R, 2015, LECT NOTES ARTIF INT, V9336, P205, DOI 10.1007/978-3-319-24309-2_16
   Brochenin R, 2014, FRONT ARTIF INTEL AP, V263, P165, DOI 10.3233/978-1-61499-419-0-165
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   Calimeri F, 2014, THEOR PRACT LOG PROG, V14, P117, DOI 10.1017/S1471068412000105
   Di Rosa E, 2010, CONSTRAINTS, V15, P485, DOI 10.1007/s10601-010-9095-y
   Eiter T, 2005, LECT NOTES ARTIF INT, V3662, P13, DOI 10.1007/11546207_2
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Eiter T, 2008, ARTIF INTELL, V172, P1495, DOI 10.1016/j.artint.2008.04.002
   emi R, 2015, CEUR WORKSHOP P
   Gebser M, 2017, J ARTIF INTELL RES, V60, P41, DOI 10.1613/jair.5373
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Giunchiglia E, 2003, LECT NOTES COMPUT SC, V2833, P842
   Giunchiglia E, 2002, LECT NOTES ARTIF INT, V2424, P296, DOI 10.1007/3-540-45757-7_25
   GIUNCHIGLIA E., 2008, ANN MATH ARTIFICIAL, V53, P1
   Janota M, 2015, AI COMMUN, V28, P161, DOI 10.3233/AIC-140640
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Lierler Yuliya, 2014, Practical Aspects of Declarative Languages. 16th International Symposium, PADL 2014. Proceedings: LNCS 8324, P49, DOI 10.1007/978-3-319-04132-2_4
   Lierler Y, 2013, AAAI WORKSHOPS
   Lierler Y, 2015, AAAI CONF ARTIF INTE, P1532
   Lierler Y, 2016, ARTIF INTELL, V236, P65, DOI 10.1016/j.artint.2016.03.004
   Lierler Y, 2014, ARTIF INTELL, V207, P1, DOI 10.1016/j.artint.2013.10.004
   Lierler Y, 2011, THEOR PRACT LOG PROG, V11, P629, DOI 10.1017/S1471068411000214
   Lierler Y, 2011, THEOR PRACT LOG PROG, V11, P135, DOI 10.1017/S1471068410000578
   Lierler Y, 2008, LECT NOTES COMPUT SC, V5366, P377, DOI 10.1007/978-3-540-89982-2_35
   LYNCE I, 2004, P 7 INT C THEOR APPL
   Manna M, 2013, THEOR PRACT LOG PROG, V13, P227, DOI 10.1017/S1471068411000640
   Marek V.W., 1998, CSLO9809032 CORR
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Sebastiani R., 2007, J SAT, V3, P141, DOI [DOI 10.3233/978-1-58603-929-5-825, 10.3233/SAT190034, 10.3233/sat190034, DOI 10.3233/SAT190034]
NR 41
TC 2
Z9 2
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2019
VL 19
IS 5-6
SI SI
BP 740
EP 756
DI 10.1017/S1471068419000164
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA IZ4ZA
UT WOS:000487090500008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Riesco, A
   Rodríguez-Hortalá, J
AF Riesco, A.
   Rodriguez-Hortala, J.
TI Property-Based Testing for Spark Streaming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE property-based testing; linear temporal logic; first-order modal logic;
   Spark Streaming; Scala
AB Stream processing has reached the mainstream in the last years, as a new generation of open-source distributed stream processing systems, designed for scaling horizontally on commodity hardware, has brought the capability for processing high-volume and high-velocity data streams to companies of all sizes. In this work, we propose a combination of temporal logic and property-based testing (PBT) for dealing with the challenges of testing programs that employ this programming model. We formalize our approach in a discrete time temporal logic for finite words, with some additions to improve the expressiveness of properties, which includes timeouts for temporal operators and a binding operator for letters. In particular, we focus on testing Spark Streaming programs written with the Spark API for the functional language Scala, using the PBT library ScalaCheck. For that we add temporal logic operators to a set of new ScalaCheck generators and properties, as part of our testing library sscheck.
C1 [Riesco, A.] Univ Complutense Madrid, E-28040 Madrid, Spain.
C3 Complutense University of Madrid
RP Riesco, A (corresponding author), Univ Complutense Madrid, E-28040 Madrid, Spain.
EM ariesco@fdi.ucm.es; juan.rodriguez.hortala@gmail.com
RI Riesco, Adrian/I-5959-2016
OI Riesco, Adrian/0000-0002-9716-4612
CR Akidau T, 2015, PROC VLDB ENDOW, V8, P1792
   Akidau T, 2013, PROC VLDB ENDOW, V6, P1033, DOI 10.14778/2536222.2536229
   ALUR R, 1994, J ACM, V41, P181, DOI 10.1145/174644.174651
   [Anonymous], 2015, The Bulletin of the Technical Committee on Data Engineering
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   [Anonymous], 2016, LECT NOTES COMPUTER
   Barringer Howard, 2011, FM 2011: Formal Methods. Proceedings 17th International Symposium on Formal Methods, P57, DOI 10.1007/978-3-642-21437-0_7
   Bauer A, 2006, LECT NOTES COMPUT SC, V4337, P260
   Blackburn P, 2006, Handbook of modal logic
   CARBONE P, 2015, ARXIV PREPRINT ARXIV
   Claessen K, 2011, ACM SIGPLAN NOTICES, V46, P53, DOI 10.1145/1988042.1988046
   D'Angelo B, 2005, 12TH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P166, DOI 10.1109/TIME.2005.26
   Fitting M., 1998, First-order modal logic, V277
   Fowler Martin., 2006, Thought-Works, V122, P14
   GOOGLETRENDS, 2018, GOOGLE TRENDS SPARK
   Gorawski M, 2014, INFORMATION SCIENCES AND SYSTEMS 2014, P295, DOI 10.1007/978-3-319-09465-6_31
   HALBWACHS N, 1992, SPRINGER INT SERIES, V215
   KARAU H, 2015, STRATA HADOOP WORLD
   Karau H., 2015, SPARK TESTING BASE
   Karau Holden., 2017, HIGH PERFORMANCE SPA, V1st
   KUHN R, 2014, REACTIVE DESIGN PATT
   Leucker M, 2009, J LOGIC ALGEBR PROGR, V78, P293, DOI 10.1016/j.jlap.2008.08.004
   Marz N., 2015, Big Data: Principles and Best Practices of Scalable Realtime Data Systems
   Neumeyer L., 2010, Proceedings 2010 10th IEEE International Conference on Data Mining Workshops (ICDMW 2010), P170, DOI 10.1109/ICDMW.2010.172
   Nilsson R., 2014, ScalaCheck: The Definitive Guide
   Papadakis M, 2011, ERLANG 11: PROCEEDINGS OF THE 2011 ACM SIGPLAN ERLANG WORKSHOP, P39
   PNUELI A, 1986, APPL TEMPORAL LOGIC
   RAMASAMY K, 2015, OFFICIAL TWITTER BLO
   Raymond P, 2008, EURASIP J EMBED SYST, DOI 10.1155/2008/753821
   Riesco A., 2015, SSCHECK SCALACHECK S
   RIESCO A, 2016, LECT NOTES COMPUTER, V9681
   RIESCO A, 2018, 022018 U COMPL MADR
   Smullyan R., 1995, First-order logic
   TORREBORRE E, 2014, SPECS2 USER GUIDE
   TYPESAFE INC, 2012, MAGN PATT
   VENNERS B, 2015, RE PROP EXISTS SCALA
   White T., 2012, HADOOP DEFINITIVE GU
   WOLPER P, 1983, INFORM CONTROL, V56, P72, DOI 10.1016/S0019-9958(83)80051-5
   Zaharia M, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P423, DOI 10.1145/2517349.2522737
   Zaharia Matei., 2012, NSDI 12
NR 40
TC 3
Z9 3
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2019
VL 19
IS 4
BP 574
EP 602
DI 10.1017/S1471068419000012
PG 29
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID3WQ
UT WOS:000471608200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lam, HP
   Hashmi, M
AF Lam, Ho-Pun
   Hashmi, Mustafa
TI Enabling Reasoning with LegalRuleML
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Deontic logic; modal defeasible logic; legal reasoning; LegalRuleML;
   business contracts
ID DEFEASIBLE LOGIC; ARGUMENTATION; SYSTEM; FRAMEWORK; ONTOLOGIES; RULES;
   NORMS
AB In order to automate verification process, regulatory rules written in natural language need to be translated into a format that machines can understand. However, none of the existing formalisms can fully represent the elements that appear in legal norms. For instance, most of these formalisms do not provide features to capture the behavior of deontic effects, which is an important aspect in automated compliance checking. This paper presents an approach for transforming legal norms represented using legalruleml to a variant of modal defeasible logic (and vice versa) such that a legal statement represented using LegalRuleML can be transformed into a machine-readable format that can be understood and reasoned about depending upon the client's preferences.
C1 [Lam, Ho-Pun] CSIRO, Data61, Sydney, NSW, Australia.
   [Hashmi, Mustafa] CSIRO, Data61, Brisbane, Qld, Australia.
C3 Commonwealth Scientific & Industrial Research Organisation (CSIRO);
   Commonwealth Scientific & Industrial Research Organisation (CSIRO)
RP Lam, HP (corresponding author), CSIRO, Data61, Sydney, NSW, Australia.
EM brian.lam@data61.csiro.au; mustafa.hashmi@data61.csiro.au
RI HASHMI, MUSTAFA/J-7178-2016; Hashmi, Mustafa/Q-5604-2019; Lam,
   Ho-Pun/R-9044-2018
OI Lam, Ho-Pun/0000-0002-1137-8549
CR [Anonymous], 2008, LEG KNOWL INT FORM L
   [Anonymous], 2004, OWL S SEMANTIC MARKU
   [Anonymous], 2008, SEMANTICS TEXT PROCE
   Antoniou G, 2004, LECT NOTES COMPUT SC, V3025, P311
   Antoniou G, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P405
   Antoniou G., 2001, ACM T COMPUT LOG, V2, P255, DOI [DOI 10.1145/371316.371517, 10.1145/371316.371517]
   Antoniou G, 2007, IEEE T KNOWL DATA EN, V19, P233, DOI 10.1109/TKDE.2007.29
   Antoniou G, 2009, EXPERT SYST APPL, V36, P4125, DOI 10.1016/j.eswa.2008.03.009
   Athan T., 2013, 14 INT C ART INT LAW, V13, P3
   Athan T, 2015, LECT NOTES COMPUT SC, V9203, P151, DOI 10.1007/978-3-319-21768-0_6
   BAGET J, 2015, P RULEML 2015 CHALL
   Bassiliades N, 2004, LECT NOTES COMPUT SC, V3208, P134
   Calì A, 2012, J WEB SEMANT, V14, P57, DOI 10.1016/j.websem.2012.03.001
   Carmo J., 2002, HDB PHILOS LOGIC, P265, DOI [DOI 10.1007/978-94-010-0387-2_4, 10.1007/978-94-010-0387-2_4]
   DEAGUSTINI C.A, 2015, P JOINT ONT WORKSH C
   Dean M., 2004, SWRL: a semantic web Rule Language combining OWL and RuleML
   EuroBarometer, 2013, NON TRADITIONAL REF
   Farrell ADH, 2004, FIRST IEEE INTERNATIONAL WORKSHOP ON ELECTRONIC CONTRACTING, PROCEEDINGS, P17
   Goedertier S, 2006, LECT NOTES COMPUT SC, V4103, P5
   Gordon TF, 2009, LECT NOTES COMPUT SC, V5858, P282, DOI 10.1007/978-3-642-04985-9_26
   Governatori G, 2005, Ninth IEEE International EDOC Enterprise Computing Conference, Proceedings, P46, DOI 10.1109/EDOC.2005.13
   Governatori G, 2005, INT J COOP INF SYST, V14, P181, DOI 10.1142/S0218843005001092
   Governatori G, 2004, J LOGIC COMPUT, V14, P675, DOI 10.1093/logcom/14.5.675
   Governatori G, 2004, LECT NOTES ARTIF INT, V3065, P114
   Governatori Guido, 2011, Rule-Based Modeling and Computing on the Semantic Web. Proceedings 5th International Symposium, RuleML 2011 - America, P282, DOI 10.1007/978-3-642-24908-2_29
   GOVERNATORI G, 2016, P 20 INT C KNOWL ENG
   Governatori G, 2008, AUTON AGENT MULTI-AG, V17, P36, DOI 10.1007/s10458-008-9030-4
   Governatori G, 2006, AUSTRALAS J LOG, V4, P193
   Governatori G, 2008, ARTIF INTELL LAW, V16, P25, DOI 10.1007/s10506-007-9056-y
   Grosof B., 2012, 12 INT WORLD WID WEB, P340
   Grosof BenjaminN., 2004, ELECTRON COMMER R A, V3, P2, DOI DOI 10.1016/J.ELERAP.2003.09.005
   Hashmi M, 2018, ARTIF INTELL LAW, V26, P251, DOI 10.1007/s10506-017-9215-8
   Hashmi M, 2016, INFORM SYST FRONT, V18, P429, DOI 10.1007/s10796-015-9558-1
   Hecham A, 2017, AAMAS'17: PROCEEDINGS OF THE 16TH INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS AND MULTIAGENT SYSTEMS, P1568
   Henning Herrestad, 1991, P 3 INT C ART INT LA, P175, DOI DOI 10.1145/112646.112667
   Kamada A, 2010, LECT NOTES COMPUT SC, V6403, P153, DOI 10.1007/978-3-642-16289-3_14
   Kontopoulos E, 2011, INT J SEMANT WEB INF, V7, P18, DOI 10.4018/jswis.2011010102
   LAM H.-P., 2014, SPINDLE USER GUIDE
   Lam HP, 2016, LECT NOTES COMPUT SC, V9718, P241, DOI 10.1007/978-3-319-42019-6_16
   Lam HP, 2016, FRONT ARTIF INTEL AP, V287, P359, DOI 10.3233/978-1-61499-686-6-359
   Lam HP, 2013, J LOGIC COMPUT, V23, P373, DOI 10.1093/logcom/exr028
   Lam HP, 2011, LECT NOTES ARTIF INT, V6645, P187
   Lam HP, 2009, LECT NOTES COMPUT SC, V5858, P315
   Maher M. J., 2001, International Journal on Artificial Intelligence Tools (Architectures, Languages, Algorithms), V10, P483, DOI 10.1142/S0218213001000623
   Maher MJ, 2001, THEOR PRACT LOG PROG, V1, P691, DOI 10.1017/S1471068401001168
   Martinez MV, 2014, LECT NOTES ARTIF INT, V8864, P15, DOI 10.1007/978-3-319-12027-0_2
   Modgil S, 2014, ARGUM COMPUT, V5, P31, DOI 10.1080/19462166.2013.869766
   Modgil S, 2013, ARTIF INTELL, V195, P361, DOI 10.1016/j.artint.2012.10.008
   NUTE D., 2001, P 14 INT C APPL PROL, P151
   OMG, 2008, SEM BUS VOC RUL SBVR
   OMG, 2000, UN MOD LANG UML
   *OMG, 2008, BUS PROC MOD NOT BPM
   PALMIRANI M, 2015, LEGALRULEML CORE SPE
   Paschke A, 2005, LECT NOTES COMPUT SC, V3791, P209, DOI 10.1007/11580072_19
   Pesic M, 2006, LECT NOTES COMPUT SC, V4103, P169
   Prakken H, 2010, ARGUM COMPUT, V1, P93, DOI 10.1080/19462160903564592
   Roman D, 2005, APPL ONTOL, V1, P77
   RULEML INC, 2000, RULEML RUL MARK IN
   Searle John., 1997, CONSTRUCTION SOCIAL
   Selway M, 2015, INFORM SYST, V54, P191, DOI 10.1016/j.is.2015.04.003
   SONG I, 2008, THESIS
   Steen B, 2010, IEEE INT ENTERP, P117, DOI 10.1109/EDOCW.2010.40
   Vojir S., 2013, JOINT P 7 INT RUL CH
   W3C RIF Working Group, 2005, RIF RUL INT FORM
   Wood G., 2014, Ethereum project yellow paper, V151, P1
   Wyner Adam Z., 2013, JOINT P 7 INT RUL CH
NR 66
TC 7
Z9 8
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2019
VL 19
IS 1
BP 1
EP 26
DI 10.1017/S1471068418000339
PG 26
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA HF7OS
UT WOS:000454429700001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Mitra, A
   Baral, C
AF Mitra, Arindam
   Baral, Chitta
TI Incremental and Iterative Learning of Answer Set Programs from Mutually
   Distinct Examples
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 34th International Conference on Logic Programming (ICLP)
CY JUL 14-17, 2018
CL Oxford, ENGLAND
DE Inductive Logic Programming; Answer Set Programming; Question Answering;
   Handwritten Digit Recognition; Context Dependent Learning
AB Over the years the Artificial Intelligence (AI) community has produced several datasets which have given the machine learning algorithms the opportunity to learn various skills across various domains. However, a subclass of these machine learning algorithms that aimed at learning logic programs, namely the Inductive Logic Programming algorithms, have often failed at the task due to the vastness of these datasets. This has impacted the usability of knowledge representation and reasoning techniques in the development of AI systems. In this research, we try to address this scalability issue for the algorithms that learn answer set programs. We present a sound and complete algorithm which takes the input in a slightly different manner and performs an efficient and more user controlled search for a solution. We show via experiments that our algorithm can learn from two popular datasets from machine learning community, namely bAbl (a question answering dataset) and MNIST (a dataset for handwritten digit recognition), whicYh to the best of our knowledge was not previously possible. The system is publicly available at https://goo.gl/KdWAcV.
C1 [Mitra, Arindam; Baral, Chitta] Arizona State Univ, Tempe, AZ 85287 USA.
C3 Arizona State University; Arizona State University-Tempe
RP Mitra, A (corresponding author), Arizona State Univ, Tempe, AZ 85287 USA.
EM amitra7@asu.edu; chitta@asu.edu
OI Baral, Chitta/0000-0002-7549-723X
FU NSF [1750082]
FX We are grateful to Stefano Bragaglia for making the code of XHAIL
   publicly available which is reused in the development of our system. We
   would also like to thank the reviewers for their insightful comments.
   This work has been supported by the NSF grant 1750082.
CR [Anonymous], 2015, ARXIV150205698
   [Anonymous], ABS170502175 CORR
   [Anonymous], 2015, ILP (Late Breaking Papers), DOI DOI 10.1109/IAS.2015.7356936
   [Anonymous], ARXIV170702729
   [Anonymous], EXPERT SYSTEMS APPL
   [Anonymous], 2013, LECT NOTES COMPUTER
   Athakravi D, 2015, LECT NOTES ARTIF INT, V9046, P16, DOI 10.1007/978-3-319-23708-4_2
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Gulwani S, 2015, COMMUN ACM, V58, P90, DOI 10.1145/2736282
   Katzouris N, 2015, MACH LEARN, V100, P555, DOI 10.1007/s10994-015-5512-1
   Law M, 2016, THEOR PRACT LOG PROG, V16, P834, DOI 10.1017/S1471068416000351
   Law M, 2015, THEOR PRACT LOG PROG, V15, P511, DOI 10.1017/S1471068415000198
   Law M, 2014, LECT NOTES ARTIF INT, V8761, P311, DOI 10.1007/978-3-319-11558-0_22
   LeCun Y., 2010, MNIST HANDWRITTEN DI
   Mitra A, 2016, AAAI CONF ARTIF INTE, P2779
   MUGGLETON S, 1995, NEW GENERAT COMPUT, V13, P245, DOI 10.1007/BF03037227
   MUGGLETON S, 1990, NEW GENERAT COMPUT, V8, P295
   Otero R. P., 2001, Inductive Logic Programming. 11th International Conference, ILP 2001. Proceedings (Lecture Notes in Artificial Intelligence Vol.2157), P193
   Ray O, 2009, J APPL LOGIC, V7, P329, DOI 10.1016/j.jal.2008.10.007
   Sakama C., 2005, ACM Transactions on Computational Logic, V6, P203, DOI 10.1145/1055686.1055687
   Sakama C, 2009, MACH LEARN, V76, P3, DOI 10.1007/s10994-009-5113-y
   Wan L, 2013, P 30 INT C MACH LEAR, P1058, DOI DOI 10.5555/3042817.3043055
NR 22
TC 4
Z9 6
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2018
VL 18
IS 3-4
SI SI
BP 623
EP 637
DI 10.1017/S1471068418000248
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA GQ0FY
UT WOS:000441294400021
OA Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Amendola, G
   Leone, N
   Manna, M
AF Amendola, Giovanni
   Leone, Nicola
   Manna, Marco
TI Finite model reasoning over existential rules
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming colocated with the
   23rd International Conference on Principles and Practice of Constraint
   Programming / 20th International Conference on Theory and Applications
   of Satisfiability Testing
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google
DE existential rules; Datalog; finite controllability; finite model
   reasoning; query answering
ID CHASE; TOOL
AB Ontology-based query answering asks whether a Boolean conjunctive query is satisfied by all models of a logical theory consisting of a relational database paired with an ontology. The introduction of existential rules (i.e., Datalog rules extended with existential quantifiers in rule heads) as a means to specify the ontology gave birth to Datalog+/-, a framework that has received increasing attention in the last decade, with focus also on decidability and finite controllability to support effective reasoning. Five basic decidable fragments have been singled out: linear, weakly acyclic, guarded, sticky, and shy. Moreover, for all these fragments, except shy, the important property of finite controllability has been proved, ensuring that a query is satisfied by all models of the theory iff it is satisfied by all its finite models. In this paper, we complete the picture by demonstrating that finite controllability of ontology-based query answering holds also for shy ontologies, and it therefore applies to all basic decidable Datalog+/- classes. To make the demonstration, we devise a general technique to facilitate the process of (dis)proving finite controllability of an arbitrary ontological fragment.
C1 [Amendola, Giovanni; Leone, Nicola; Manna, Marco] Univ Calabria, Dept Math & Comp Sci, Via Pietro Bucci, I-87036 Cosenza, Italy.
C3 University of Calabria
RP Amendola, G (corresponding author), Univ Calabria, Dept Math & Comp Sci, Via Pietro Bucci, I-87036 Cosenza, Italy.
EM amendola@mat.unical.it; leone@mat.unical.it; manna@mat.unical.it
RI Leone, Nicola/B-1890-2012; Manna, Marco/G-8966-2012; Amendola,
   Giovanni/Q-1859-2018
OI Leone, Nicola/0000-0002-9742-1252; Amendola,
   Giovanni/0000-0002-2111-9671
FU Italian Ministry for Economic Development (MISE) [F/020016/01-02/X27,
   F/050389/01-03/X32]
FX The paper has been partially supported by the Italian Ministry for
   Economic Development (MISE) under project "PIUCultura - Paradigmi
   Innovativi per l'Utilizzo della Cultura" (n. F/020016/01-02/X27), and
   under project "Smarter Solutions in the Big Data World (S2BDW)"(n.
   F/050389/01-03/X32) funded within the call "HORIZON2020" PON I&C
   2014-2020.
CR Baader F., 2003, DESCRIPTION LOGIC HD
   Baget J., 2010, P KR 10
   Baget JF, 2011, ARTIF INTELL, V175, P1620, DOI 10.1016/j.artint.2011.03.002
   Baget JF, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P677
   Barany Vince, 2014, LOG METH COMPUT SCI, V10, P1
   Bienvenu M, 2014, ACM T DATABASE SYST, V39, DOI 10.1145/2661643
   Bourhis P, 2016, ACM T DATABASE SYST, V41, DOI 10.1145/2976736
   CALI A, 2009, P DL 09
   Calì A, 2013, J ARTIF INTELL RES, V48, P115, DOI 10.1613/jair.3873
   Calì A, 2012, J WEB SEMANT, V14, P57, DOI 10.1016/j.websem.2012.03.001
   Calì A, 2012, ARTIF INTELL, V193, P87, DOI 10.1016/j.artint.2012.08.002
   Calì A, 2010, PROC VLDB ENDOW, V3, P554, DOI 10.14778/1920841.1920912
   Cali Andrea, 2009, DAT THEOR ICDT 2009, V361, P14, DOI [10.1145/1514894.1514897, DOI 10.1145/1514894.1514897]
   Civili Cristina, 2012, Datalog in Academia and Industry. Proceedings of the Second International Workshop, Datalog 2.0, P68, DOI 10.1007/978-3-642-32925-8_8
   Deutsch A., 2008, PODS, P149
   Ebbinghaus H.-D., 1995, SATISFIABILITY FINIT, P95
   Fages F., 1991, New Generation Computing, V9, P425, DOI 10.1007/BF03037172
   Fagin R, 2005, THEOR COMPUT SCI, V336, P89, DOI 10.1016/j.tcs.2004.10.033
   Gogacz T, 2017, J COMPUT SYST SCI, V83, P180, DOI 10.1016/j.jcss.2016.08.001
   Gogacz T, 2013, IEEE S LOG, P540, DOI 10.1109/LICS.2013.61
   Gottlob G, 2014, ACM T DATABASE SYST, V39, DOI 10.1145/2638546
   Gottlob G, 2014, ARTIF INTELL, V213, P42, DOI 10.1016/j.artint.2014.04.004
   Gottlob G, 2013, THEOR PRACT LOG PROG, V13, P877, DOI 10.1017/S1471068413000550
   Gottlob G, 2013, LECT NOTES COMPUT SC, V7966, P287, DOI 10.1007/978-3-642-39212-2_27
   JOHNSON DS, 1984, J COMPUT SYST SCI, V28, P167, DOI 10.1016/0022-0000(84)90081-3
   Kr?tzsch M., 2011, P 22 INT JOINT C ART, P963, DOI DOI 10.5591/978-1-57735-516-8/IJCAI11-166
   Leone N., 2012, P KR 12
   Rosati R., 2006, P PODS 06
   Rosati R, 2006, LECT NOTES COMPUT SC, V4353, P164
NR 29
TC 7
Z9 7
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 726
EP 743
DI 10.1017/S1471068417000369
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cuteri, B
   Dodaro, C
   Ricca, F
   Schüller, P
AF Cuteri, Bernardo
   Dodaro, Carmine
   Ricca, Francesco
   Schueller, Peter
TI Constraints, lazy constraints, or propagators in ASP solving: An
   empirical analysis
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming colocated with the
   23rd International Conference on Principles and Practice of Constraint
   Programming / 20th International Conference on Theory and Applications
   of Satisfiability Testing
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google
DE Answer set programming; lazy grounding; propagators
ID ANSWER; INTEGRATION; SYSTEM
AB Answer set programming (ASP) is a well-established declarative paradigm. One of the successes of ASP is the availability of efficient systems. State-of-the-art systems are based on the ground+solve approach. In some applications, this approach is infeasible because the grounding of one or a few constraints is expensive. In this paper, we systematically compare alternative strategies to avoid the instantiation of problematic constraints, which are based on custom extensions of the solver. Results on real and synthetic benchmarks highlight some strengths and weaknesses of the different strategies.
C1 [Cuteri, Bernardo; Ricca, Francesco] Univ Calabria, DeMaCS, Arcavacata Di Rende, Italy.
   [Dodaro, Carmine] Univ Genoa, Genoa, Italy.
   [Schueller, Peter] Marmara Univ, Fac Engn, Istanbul, Turkey.
   [Schueller, Peter] TU Wien, Knowledge Based Syst Grp, Inst Informat Syst, Vienna, Austria.
C3 University of Calabria; University of Genoa; Marmara University;
   Technische Universitat Wien
RP Cuteri, B (corresponding author), Univ Calabria, DeMaCS, Arcavacata Di Rende, Italy.
EM cuteri@mat.unical.it; dodaro@dibris.unige.it; ricca@mat.unical.it;
   schueller.p@gmail.com
RI Schüller, Peter/C-3531-2016; Dodaro, Carmine/AAE-5732-2020
OI Schüller, Peter/0000-0002-1837-126X; Dodaro,
   Carmine/0000-0002-5617-5286; Cuteri, Bernardo/0000-0001-5164-9123
FU Italian Ministry for Economic Development (MISE) under project
   "PIUCultura - Paradigmi Innovativi per l'Utilizzo della Cultura" - "
   HORIZON" PON I C [F/020016/0102/ X27, F/050389/0103/ X32]; Scientific
   and Technological Research Council of Turkey (TUBITAK) [114E777]
FX The paper has been partially supported by the Italian Ministry for
   Economic Development (MISE) under project "PIUCultura - Paradigmi
   Innovativi per l'Utilizzo della Cultura" (no. F/020016/0102/ X27), under
   project "Smarter Solutions in the Big Data World (S2BDW)" (no.
   F/050389/0103/ X32) funded within the call " HORIZON2020" PON I& C
   2014-2020, and by the Scientific and Technological Research Council of
   Turkey (TUBITAK) Grant 114E777.
CR Achlioptas D, 2009, FRONT ARTIF INTEL AP, V185, P245, DOI 10.3233/978-1-58603-929-5-245
   Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   Alviano M., 2016, P 25 INT JOINT C ART, P886
   Aschinger M, 2011, LECT NOTES COMPUT SC, V6697, P4, DOI 10.1007/978-3-642-21311-3_4
   Aziz RA, 2013, THEOR PRACT LOG PROG, V13, P517, DOI 10.1017/S147106841300032X
   Balduccini M., 2013, THEOR PRACT LOG PROG, V13, P4
   Balduccini M, 2017, THEOR PRACT LOG PROG, V17, P462, DOI 10.1017/S1471068417000102
   Baselice S., 2005, P CEUR WORKSH ANSW S, V142
   Bichler M, 2016, THEOR PRACT LOG PROG, V16, P552, DOI 10.1017/S1471068416000338
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Calimeri F, 2016, ARTIF INTELL, V231, P151, DOI 10.1016/j.artint.2015.09.008
   Dal Palù A, 2009, FUND INFORM, V96, P297, DOI 10.3233/FI-2009-180
   De Cat B, 2015, J ARTIF INTELL RES, V52, P235, DOI 10.1613/jair.4591
   Dodaro C., 2016, CEUR WORKSHOP P, V1745, P1
   Dodaro C, 2016, THEOR PRACT LOG PROG, V16, P653, DOI 10.1017/S1471068416000284
   Eiter T., 2016, COMPUTATIONAL MODELS, P150
   Eiter T, 2016, THEOR PRACT LOG PROG, V16, P418, DOI 10.1017/S1471068415000113
   Erdem E, 2016, AI COMMUN, V29, P319, DOI 10.3233/AIC-150697
   Erdem E, 2015, THEOR PRACT LOG PROG, V15, P35, DOI 10.1017/S1471068413000598
   Feydy T, 2009, LECT NOTES COMPUT SC, V5732, P352, DOI 10.1007/978-3-642-04244-7_29
   Gebser M., 2013, P C ART INT AAAI
   Gebser M., 2016, OPEN ACCESS SERIES I, V52
   Gelfond M., 1991, NEW GENERAT COMPUT, V9, P365, DOI DOI 10.1007/BF03037169
   Kaufmann B, 2016, AI MAG, V37, P25, DOI 10.1609/aimag.v37i3.2672
   Kojo T, 2003, LECT NOTES COMPUT SC, V2649, P86
   Koponen L, 2015, THEOR PRACT LOG PROG, V15, P604, DOI 10.1017/S1471068415000265
   Lefevre C, 2009, LECT NOTES COMPUT SC, V5753, P522, DOI 10.1007/978-3-642-04238-6_52
   Liu LN, 2010, ARTIF INTELL, V174, P295, DOI 10.1016/j.artint.2009.11.016
   Manna M, 2015, THEOR PRACT LOG PROG, V15, P696, DOI 10.1017/S1471068415000320
   Marques-Silva JP, 1999, IEEE T COMPUT, V48, P506, DOI 10.1109/12.769433
   Minh Dao-Tran, 2012, Logics in Artificial Intelligence. Proceedings of the 13th European Conference (JELIA 2012), P480, DOI 10.1007/978-3-642-33353-8_38
   Ostrowski M, 2012, THEOR PRACT LOG PROG, V12, P485, DOI 10.1017/S1471068412000142
   Quinlan J.R., 1993, C4 5 PROGRAMS EMPIRI
   Redl C, 2016, THEOR PRACT LOG PROG, V16, P866, DOI 10.1017/S1471068416000211
   Schüller P, 2016, FUND INFORM, V149, P159, DOI 10.3233/FI-2016-1446
   Susman B., 2016, OASICS, V52
   Weinzierl A, 2017, LECT NOTES ARTIF INT, V10377, P191, DOI 10.1007/978-3-319-61660-5_17
NR 37
TC 13
Z9 13
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 780
EP 799
DI 10.1017/S1471068417000254
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Governatori, G
   Maher, MJ
AF Governatori, Guido
   Maher, Michael J.
TI Annotated defeasible logic
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming colocated with the
   23rd International Conference on Principles and Practice of Constraint
   Programming / 20th International Conference on Theory and Applications
   of Satisfiability Testing
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google
DE defeasible logic; non-monotonic reasoning; annotated logics; legal
   reasoning
ID WELL-FOUNDED SEMANTICS; ARGUMENTATION SEMANTICS; RELATIVE
   EXPRESSIVENESS; DEDUCTIVE DATABASES; PROGRAMS; NEGATION; DEFAULTS
AB Defeasible logics provide several linguistic features to support the expression of defeasible knowledge. There is also a wide variety of such logics, expressing different intuitions about defeasible reasoning. However, the logics can only combine in trivial ways. This limits their usefulness in contexts where different intuitions are at play in different aspects of a problem. In particular, in some legal settings, different actors have different burdens of proof, which might be expressed as reasoning in different defeasible logics. In this paper, we introduce annotated defeasible logic as a flexible formalism permitting multiple forms of defeasibility, and establish some properties of the formalism.
C1 [Governatori, Guido] CSIRO, Data61, Brisbane, Qld, Australia.
   [Maher, Michael J.] Reasoning Res Inst, Canberra, ACT, Australia.
C3 Commonwealth Scientific & Industrial Research Organisation (CSIRO)
RP Governatori, G (corresponding author), CSIRO, Data61, Brisbane, Qld, Australia.
EM guido.governatori@data61.csiro.au; michael.maher@reasoning.org.au
RI Governatori, Guido/I-5293-2015
OI Governatori, Guido/0000-0002-9878-2762
CR Antoniou G, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P405
   Antoniou G, 2000, J LOGIC PROGRAM, V42, P47, DOI 10.1016/S0743-1066(99)00060-6
   ARAVINDAN C, 1995, J LOGIC PROGRAM, V24, P201, DOI 10.1016/0743-1066(94)00104-E
   Billington D, 2010, ACM T COMPUT LOG, V12, DOI 10.1145/1838552.1838558
   Caminada M, 2015, INT J APPROX REASON, V58, P87, DOI 10.1016/j.ijar.2014.12.004
   Eiter T, 1997, ANN MATH ARTIF INTEL, V19, P59, DOI 10.1023/A:1018947420290
   Fitting M., 1985, Journal of Logic Programming, V2, P295, DOI 10.1016/S0743-1066(85)80005-4
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Gordon TF, 2009, ARGUMENTATION IN ARTIFICIAL INTELLIGENCE, P239, DOI 10.1007/978-0-387-98197-0_12
   Governatori G, 2004, J LOGIC COMPUT, V14, P675, DOI 10.1093/logcom/14.5.675
   Governatori G, 2016, THEOR PRACT LOG PROG, V16, P296, DOI 10.1017/S1471068416000053
   Governatori G, 2010, FRONT ARTIF INTEL AP, V223, P57, DOI 10.3233/978-1-60750-682-9-57
   Governatori Guido, 2011, 14 INT C ARTIFICIAL, P31, DOI DOI 10.1145/2018358.2018362
   Grosof BN, 1997, LOGIC PROGRAMM, P197
   KIFER M, 1992, J LOGIC PROGRAM, V12, P335, DOI 10.1016/0743-1066(92)90007-P
   KUNEN K, 1987, J LOGIC PROGRAM, V4, P289, DOI 10.1016/0743-1066(87)90007-0
   Maher M. J., 2002, Datalogiske Skrifter, P67
   Maher M. J., 2017, FUNDAMENTA INFORM, V153, P1
   Maher M. J., 2011, WELL FOUNDED DEFEASI
   Maher MJ, 2013, THEOR PRACT LOG PROG, V13, P579, DOI 10.1017/S1471068413000367
   Maher MJ, 2012, THEOR PRACT LOG PROG, V12, P793, DOI 10.1017/S1471068412000294
   Maher MJ, 2001, THEOR PRACT LOG PROG, V1, P691, DOI 10.1017/S1471068401001168
   Maher MJ, 1999, SIXTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-99)/ELEVENTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE (IAAI-99), P299
   Maher MJ, 2000, LECT NOTES ARTIF INT, V1861, P209
   Maier F, 2013, THEOR PRACT LOG PROG, V13, P107, DOI 10.1017/S147106841100041X
   Maier F, 2010, SYNTHESE, V176, P243, DOI 10.1007/s11229-009-9492-1
   Prakken H, 2007, P 11 INT C ART INT L, P97
   Prakken H, 2010, ARGUM COMPUT, V1, P93, DOI 10.1080/19462160903564592
   Przymusinski T., 1990, Fundamenta Informaticae, V13, P445
   SACCA D, 1990, PROCEEDINGS OF THE NINTH ACM SIGACT-SIGMOD-SIGART SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P205, DOI 10.1145/298514.298572
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Verheij B, 2003, J LOGIC COMPUT, V13, P319, DOI 10.1093/logcom/13.3.319
   Wan H, 2015, SEMANT WEB, V6, P81, DOI 10.3233/SW-140140
   Wan H, 2009, LECT NOTES COMPUT SC, V5649, P432, DOI 10.1007/978-3-642-02846-5_35
   YOU JH, 1994, J COMPUT SYST SCI, V49, P334, DOI 10.1016/S0022-0000(05)80053-4
NR 35
TC 5
Z9 5
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 819
EP 836
DI 10.1017/S1471068417000266
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Serrano, A
   Hage, J
AF Serrano, Alejandro
   Hage, Jurriaan
TI Constraint handling rules with binders, patterns and generic
   quantification
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 33rd International Conference on Logic Programming colocated with the
   23rd International Conference on Principles and Practice of Constraint
   Programming / 20th International Conference on Theory and Applications
   of Satisfiability Testing
CY AUG 28-SEP 01, 2017
CL Melbourne, AUSTRALIA
SP Assoc Log Programming, Assoc Constraint Programming, Monash Univ, Univ Melbourne, CSIRO Data61, COSYTEC, Satalia, Google
DE Constraint Handling Rules; pattern unification; generic quantification
AB Constraint handling rules provide descriptions for constraint solvers. However, they fall short when those constraints specify some binding structure, like higher-rank types in a constraint-based type inference algorithm. In this paper, the term syntax of constraints is replaced by lambda-tree syntax, in which binding is explicit, and a new del generic quantifier is introduced, which is used to create new fresh constants.
C1 [Serrano, Alejandro; Hage, Jurriaan] Univ Utrecht, Dept Informat & Comp Sci, Utrecht, Netherlands.
C3 Utrecht University
RP Serrano, A (corresponding author), Univ Utrecht, Dept Informat & Comp Sci, Utrecht, Netherlands.
EM A.SerranoMena@uu.nl; J.Hage@uu.nl
FU Netherlands Organisation for Scientific Research (NWO) [612.001.213]
FX This work was supported by the Netherlands Organisation for Scientific
   Research (NWO) project on "DOMain Specific Type Error Diagnosis
   (DOMSTED)" (612.001.213).
CR Abdennadher S., 1998, P 3 INT C FLEXIBLE Q, P1, DOI [10.1007/BFb0055987, DOI 10.1007/BFB0055987]
   Abdennadher S., 1997, P CP97 LINZ AUSTR OC
   [Anonymous], THESIS
   [Anonymous], 2005, Advanced Topics in Types and Programming Languages
   [Anonymous], 1972, INDAGATIONES MATHEMA, DOI DOI 10.1016/1385-7258(72)90034-0
   Baelde D, 2014, J FORMALIZ REASON, V7, P1
   Charguéraud A, 2012, J AUTOM REASONING, V49, P363, DOI 10.1007/s10817-011-9225-2
   Cheney J, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1387673.1387675
   Csorba J., 2012, PROS CONS USIN UNPUB
   De Koninck Leslie, 2007, Proceedings of the 9th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP'07), P25, DOI 10.1145/1273920.1273924
   Dijkstra A., 2007, TECHNICAL REPORT
   Duck GJ, 2004, LECT NOTES COMPUT SC, V3132, P90, DOI 10.1007/978-3-540-27775-0_7
   Duck GJ, 2007, LECT NOTES COMPUT SC, V4670, P224, DOI 10.1007/978-3-540-74610-2_16
   Dunfield J, 2013, ACM SIGPLAN NOTICES, V48, P429, DOI 10.1145/2544174.2500582
   Eisenberg RA, 2016, LECT NOTES COMPUT SC, V9632, P229, DOI 10.1007/978-3-662-49498-1_10
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Fruhwirth T., 2000, PROVING TERMINATION, P298
   Fruhwirth T.W., 2009, Constraint Handling Rules
   Hage J, 2009, ELECTRON NOTES THEOR, V236, P163, DOI 10.1016/j.entcs.2009.03.021
   Huet G. P., 1975, Theoretical Computer Science, V1, P27, DOI 10.1016/0304-3975(75)90011-0
   Jones SP, 2007, J FUNCT PROGRAM, V17, P1, DOI 10.1017/S0956796806006034
   Miller D., 2005, ACM Transactions on Computational Logic, V6, P749, DOI 10.1145/1094622.1094628
   Miller D., 1991, Extensions of Logic Programming. International Workshop Proceedings, P253, DOI 10.1007/BFb0038698
   Miller D, 2000, LECT NOTES ARTIF INT, V1861, P239
   Miller D., 2012, PROGRAMMING HIGHER O
   Miller D., 1990, TECHNICAL REPORT
   PFENNING F, 1988, SIGPLAN NOTICES, V23, P199, DOI 10.1145/960116.54010
   Pilozzi P, 2008, LECT NOTES COMPUT SC, V5366, P501, DOI 10.1007/978-3-540-89982-2_43
   Qian Z., 1993, LINEAR UNIFICATION H, P391
   Serrano A, 2016, LECT NOTES COMPUT SC, V9632, P672, DOI 10.1007/978-3-662-49498-1_26
   Shinwell MR, 2003, ACM SIGPLAN NOTICES, V38, P263, DOI 10.1145/944746.944729
   Sneyers J, 2010, THEOR PRACT LOG PROG, V10, P1, DOI 10.1017/S1471068409990123
   Sneyers J, 2009, ACM T PROGR LANG SYS, V31, DOI 10.1145/1462166.1462169
   Stuckey PJ, 2006, LECT NOTES COMPUT SC, V4279, P1
   Sulzmann M, 2007, J FUNCT PROGRAM, V17, P83, DOI 10.1017/S0956796806006137
   Sulzmann M, 2006, LECT NOTES COMPUT SC, V3945, P47
   Swift Team, 2016, TYP CHECK DES IMPL
   Tiu A, 2007, ELECTRON NOTES THEOR, V174, P3, DOI 10.1016/j.entcs.2007.01.016
   Voets D., 2008, PREPR LOPSTR 2008, P28
   Vytiniotis D, 2011, J FUNCT PROGRAM, V21, P333, DOI 10.1017/S0956796811000098
NR 40
TC 0
Z9 0
U1 0
U2 4
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2017
VL 17
IS 5-6
SI SI
BP 992
EP 1009
DI 10.1017/S1471068417000230
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA FJ2OB
UT WOS:000412567800019
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Eiter, T
   Fink, M
   Ianni, G
   Krennwallner, T
   Redl, C
   Schüller, P
AF Eiter, Thomas
   Fink, Michael
   Ianni, Giovambattista
   Krennwallner, Thomas
   Redl, Christoph
   Schuller, Peter
TI A model building framework for answer set programming with external
   computations
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; model building; external computation; Hex
   programs
ID SEMANTICS; KNOWLEDGE
AB As software systems are getting increasingly connected, there is a need for equipping nonmonotonic logic programs with access to external sources that are possibly remote and may contain information in heterogeneous formats. To cater for this need, hex programs were designed as a generalization of answer set programs with an API style interface that allows to access arbitrary external sources, providing great flexibility. Efficient evaluation of such programs however is challenging, and it requires to interleave external computation and model building; to decide when to switch between these tasks is difficult, and existing approaches have limited scalability in many real-world application scenarios. We present a new approach for the evaluation of logic programs with external source access, which is based on a configurable framework for dividing the non-ground program into possibly overlapping smaller parts called evaluation units. The latter will be processed by interleaving external evaluation and model building using an evaluation graph and a model graph, respectively, and by combining intermediate results. Experiments with our prototype implementation show a significant improvement compared to previous approaches. While designed for hex-programs, the new evaluation approach may be deployed to related rule-based formalisms as well.
C1 [Eiter, Thomas; Fink, Michael; Krennwallner, Thomas; Redl, Christoph] Vienna Univ Technol, Inst Informat Syst, Favoritenstr 9-11, A-1040 Vienna, Austria.
   [Ianni, Giovambattista] Univ Calabria, Dipartimento Matemat, Cubo 30B, I-87036 Arcavacata Di Rende, CS, Italy.
   [Schuller, Peter] Marmara Univ, Fac Engn, Dept Comp Engn, Goztepe Kampusu, TR-34722 Istanbul, Turkey.
C3 Technische Universitat Wien; University of Calabria; Marmara University
RP Eiter, T (corresponding author), Vienna Univ Technol, Inst Informat Syst, Favoritenstr 9-11, A-1040 Vienna, Austria.
EM eiter@kr.tuwien.ac.at; fink@kr.tuwien.ac.at; ianni@mat.unical.it;
   tkren@kr.tuwien.ac.at; redl@kr.tuwien.ac.at;
   peter.schuller@marmara.edu.tr
RI Ianni, Giovambattista/I-7826-2012; Schüller, Peter/C-3531-2016; Eiter,
   Thomas/ABE-9263-2021; Ianni, Giovambattista/IQS-4399-2023
OI Schüller, Peter/0000-0002-1837-126X; Ianni,
   Giovambattista/0000-0003-0534-6425
FU Austrian Science Fund (FWF) [P24090, P27730]; Scientific and
   Technological Research Council of Turkey (TUBITAK) [114E430]; Austrian
   Science Fund (FWF) [P27730, P24090] Funding Source: Austrian Science
   Fund (FWF)
FX This work has been supported by the Austrian Science Fund (FWF) Grants
   P24090 and P27730, and the Scientific and Technological Research Council
   of Turkey (TUBITAK) Grant 114E430.
CR Amir E, 2005, ARTIF INTELL, V162, P49, DOI 10.1016/j.artint.2004.11.004
   Bairakdar SE, 2010, LECT NOTES ARTIF INT, V6341, P352, DOI 10.1007/978-3-642-15675-5_30
   Balduccini M., 2013, ANSWER SET PROGRAMMI, P17
   Balduccini M., 2009, WORKSH ANSW SET PROG
   Basol S, 2010, LEIBNIZ INT PR INFOR, V7, P24, DOI 10.4230/LIPIcs.ICLP.2010.24
   Bögl M, 2010, LECT NOTES ARTIF INT, V6341, P356, DOI 10.1007/978-3-642-15675-5_31
   Brewka G, 2011, COMMUN ACM, V54, P92, DOI 10.1145/2043174.2043195
   Brewka Gerhard., 2007, Proceedings of the 22nd national conference on Artificial intelligence - Volume 1, V1, P385
   Calimeri F., 2013, NAT WORKSH PRIZ POP, P29
   Calimeri F, 2007, ANN MATH ARTIF INTEL, V50, P333, DOI 10.1007/s10472-007-9076-z
   Calimeri F, 2008, LECT NOTES COMPUT SC, V5366, P407, DOI 10.1007/978-3-540-89982-2_37
   Clarke E, 2003, J ACM, V50, P752, DOI 10.1145/876638.876643
   Dal Palù A, 2009, FUND INFORM, V96, P297, DOI 10.3233/FI-2009-180
   Dao-Tran M, 2009, LECT NOTES COMPUT SC, V5590, P602, DOI 10.1007/978-3-642-02906-6_52
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Eiter T., 2014, RR18431402 INFSYS TU
   Eiter T., 2013, 27 AAAI C AAAI 2013
   Eiter T, 2008, ARTIF INTELL, V172, P1495, DOI 10.1016/j.artint.2008.04.002
   Eiter T, 2006, LECT NOTES COMPUT SC, V4011, P273
   Eiter T, 2014, J ARTIF INTELL RES, V49, P269, DOI 10.1613/jair.4175
   Eiter T, 2011, LECT NOTES ARTIF INT, V6645, P93
   Eiter T, 2012, THEOR PRACT LOG PROG, V12, P659, DOI 10.1017/S1471068412000233
   Eiter T, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P90
   Eiter T, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P752
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   Gebser M., 2014, CLINGO ASP CONTROL P
   GEBSER M, 2009, INT C LOG PROGR ICLP, P235
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gebser M, 2009, LECT NOTES COMPUT SC, V5547, P71, DOI 10.1007/978-3-642-01929-6_7
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Havur G, 2014, IEEE INT CONF ROBOT, P445, DOI 10.1109/ICRA.2014.6906894
   Hoehndorf R, 2007, BMC BIOINFORMATICS, V8, DOI 10.1186/1471-2105-8-377
   Janhunen T, 2009, J ARTIF INTELL RES, V35, P813, DOI 10.1613/jair.2810
   Jarvisalo M., 2009, LOGIC PROGRAMMING NO, P155
   Lassila Ora, 1998, W3C Recommendation
   Lierler Y, 2013, LATE BREAKING DEV FI, VWS-13-17
   Lierler Y, 2014, ARTIF INTELL, V207, P1, DOI 10.1016/j.artint.2013.10.004
   LIFSCHITZ V, 1994, MIT PS LOG, P23
   Linke T, 2005, LECT NOTES COMPUT SC, V3452, P154
   Linke T, 2001, INT JOINT C ART INT, P641
   Mellarkod VS, 2008, ANN MATH ARTIF INTEL, V53, P251, DOI 10.1007/s10472-009-9116-y
   Mosca A., 2008, IT WORKSH RICERCA IC
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Oikarinen E, 2008, THEOR PRACT LOG PROG, V8, P717, DOI 10.1017/S147106840800358X
   Ostrowski M, 2012, THEOR PRACT LOG PROG, V12, P485, DOI 10.1017/S1471068412000142
   Perri S, 2010, DAMP'10: PROCEEDINGS OF THE 2010 ACM SIGPLAN WORKSHOP ON DECLARATIVE ASPECTS OF MULTICORE PROGRAMMING, P73
   Polleres A., 2007, PROC INT WORLD WIDE, P787
   Przymusinski T. C., 1991, New Generation Computing, V9, P401, DOI 10.1007/BF03037171
   Przymusinski T. C., 1988, F DEDUCTIVE DATABASE, P193
   Redl C., 2014, THESIS
   ROSS KA, 1994, J ASSOC COMPUT MACH, V41, P1216, DOI 10.1145/195613.195646
   Schindlauer R, 2006, THESIS
   Schuller P., 2013, WORKSH COMB TASK MOT
   Schuller P, 2012, THESIS
   Shen YD, 2014, ARTIF INTELL, V213, P1, DOI 10.1016/j.artint.2014.05.001
   Tasharrofi S, 2011, LECT NOTES ARTIF INT, V6989, P259, DOI 10.1007/978-3-642-24364-6_18
   Wang YS, 2012, THEOR COMPUT SCI, V415, P60, DOI 10.1016/j.tcs.2011.10.026
   Zakraoui J, 2012, LECT NOTES COMPUT SC, V7382, P329, DOI 10.1007/978-3-642-31522-0_50
   Zirtiloglu H, 2008, INT WORKSH ONT SUPP
NR 61
TC 32
Z9 32
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2016
VL 16
BP 418
EP 464
DI 10.1017/S1471068415000113
PN 4
PG 47
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA EA4ND
UT WOS:000386588500002
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Morales, JF
   Carro, M
   Hermenegildo, M
AF Morales, Jose F.
   Carro, Manuel
   Hermenegildo, Manuel
TI Description and Optimization of Abstract Machines in a Dialect of Prolog
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE Abstract machines; compilation; optimization; program transformation;
   prolog; logic languages
ID LOGIC; MERCURY
AB In order to achieve competitive performance, abstract machines for Prolog and related languages end up being large and intricate, and incorporate sophisticated optimizations, both at the design and at the implementation levels. At the same time, efficiency considerations make it necessary to use low-level languages in their implementation. This makes them laborious to code, optimize, and, especially, maintain and extend. Writing the abstract machine (and ancillary code) in a higher-level language can help tame this inherent complexity. We show how the semantics of most basic components of an efficient virtual machine for Prolog can be described using (a variant of) Prolog. These descriptions are then compiled to C and assembled to build a complete bytecode emulator. Thanks to the high-level of the language used and its closeness to Prolog, the abstract machine description can be manipulated using standard Prolog compilation and optimization techniques with relative ease. We also show how, by applying program transformations selectively, we obtain abstract machine implementations whose performance can match and even exceed that of state-of-the-art, highly-tuned, hand-crafted emulators.
C1 [Morales, Jose F.; Carro, Manuel; Hermenegildo, Manuel] IMDEA Software Inst, Madrid, Spain.
   [Carro, Manuel; Hermenegildo, Manuel] Tech Univ Madrid UPM, Sch Comp Sci, Madrid, Spain.
C3 IMDEA Software Institute; Universidad Politecnica de Madrid
RP Morales, JF (corresponding author), IMDEA Software Inst, Madrid, Spain.
EM josef.morales@imdea.org; manuel.carro@imdea.org;
   manuel.hermenegildo@imdea.org
RI Morales Caballero, Jose Francisco/JXY-5044-2024; Carro,
   Manuel/AAE-9653-2021
OI Morales Caballero, Jose Francisco/0000-0001-9782-8135; Carro,
   Manuel/0000-0001-5199-3135
FU Information Society Technologies program of European Commission through
   EU project FP7 ENTRA [318337]; Spanish Ministry of Economy and
   Competitiveness StrongSoft [TIN2012-39391]; Spanish Ministry of Economy
   and Competitiveness DOVES [TIN2008-05624]; Madrid Regional Government
   PROMESAS [S-0505/TIC/0407]
FX This work was funded in part by the Information Society Technologies
   program of the European Commission, through EU project FP7 318337 ENTRA,
   by the Spanish Ministry of Economy and Competitiveness through projects
   TIN2012-39391 StrongSoft and TIN2008-05624 DOVES, and by the Madrid
   Regional Government through project S-0505/TIC/0407 PROMESAS.
CR Ait-Kaci H., 1991, WARRENS ABSTRACT MAC
   [Anonymous], 1983, 309 SRI INT ART INT
   [Anonymous], 2004, P INT S COD GEN OPT
   Bueno F., 1997, PROC 3 INT WS AUTOMA, P155
   Carlsson M., 1991, T9115 SICS
   Carro M., 2006, COMPILERS ARCHITECTU, P271
   Casas A., 2006, P INT S FUNCT LOG PR, P142
   CODOGNET P, 1995, P 12 INT C LOG PROGR, P317
   Damas L., 1982, C REC 9 ANN ACM S PR, P207, DOI DOI 10.1145/582153.582176
   Dart Philip W., 1992, TYPES LOGIC PROGRAMM, P157
   Debray S, 1997, LOGIC PROGRAMM, P48
   Demoen B, 2000, LECT NOTES ARTIF INT, V1861, P1240
   Demoen B., 2012, H PROLOG
   Demoen B., 1998, CW REPORTS, VCW271
   Dorward S., 1997, P 42 IEEE INT COMP C
   GALLAGHER JP, 1994, MIT PS LOG, P599
   Giannesini F., 1985, PROLOGUE
   Gosling J., 2005, Java Language Specification, Vthird
   GUDEMAN D, 1992, P JOINT INT C S LOG, P399
   Henderson F, 2002, LECT NOTES COMPUT SC, V2304, P197
   Henderson F., 1995, P BIENN SE BLUEB C T, P1
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Hermenegildo MV, 2005, SCI COMPUT PROGRAM, V58, P115, DOI 10.1016/j.scico.2005.02.006
   Hermenegildo MV, 1999, LOGIC PROGRAMM, P54
   Hind M., 2000, Software Engineering Notes, V25, P113, DOI 10.1145/347636.348916
   Holmer B. K., 1993, THESIS
   Morahan-Martin J, 2008, PSYCHOLOGICAL ASPECTS OF CYBERSPACE: THEORY, RESEARCH, APPLICATIONS, P32, DOI 10.1145/1389449.1389455
   Morales J, 2004, LECT NOTES COMPUT SC, V3057, P86
   Morales JF, 2005, LECT NOTES COMPUT SC, V3668, P21, DOI 10.1007/11562931_5
   Morales JF, 2007, LECT NOTES COMPUT SC, V4407, P77, DOI 10.1007/978-3-540-71410-1_7
   Nassen Henrik., 2001, Proceedings of the 3rd ACM SIGPLAN International Conference on Principles and Practice of Declarative Programming, PPDP'01, P49
   Nori K. V., 1981, PASCAL LANGUAGE ITS, P125
   Paleczny M, 2001, USENIX ASSOCIATION PROCEEDINGS JAVA(TM) VIRTUAL MACHINE RESEARCH AND TECHNOLOGY SYMPOSIUM, P1
   Puebla G, 2000, LECT NOTES COMPUT SC, V1870, P23
   Puebla G, 2000, LECT NOTES COMPUT SC, V1817, P273, DOI 10.1007/10720327_16
   Rigo A., 2006, DYN LANG S
   Rigo Armin., 2004, P 2004 ACM SIGPLAN W, P15, DOI DOI 10.1145/1014007.1014010
   Santos-Costa V., 2007, LECT NOTES COMPUTER, V4670, P395
   Santos-Costa V., 2011, THEORY PRACTICE LOGI
   Schachte P, 1997, LOGIC PROGRAMM, P3
   Schrijvers T, 2006, THEOR PRACT LOG PROG, V6, P213, DOI 10.1017/S1471068405002541
   Somogyi Z, 1996, J LOGIC PROGRAM, V29, P17, DOI 10.1016/S0743-1066(96)00068-4
   TAIVALSAARI A, 1998, TR9864 SMLI
   Tarau P., 2006, BINPROLOG 2006 VERSI
   Taylor A., 1991, COMMUNICATION
   VANROY P, 1992, COMPUTER, V25, P54, DOI 10.1109/2.108055
   VANROY P, 1994, J LOGIC PROGRAM, V20, P385, DOI 10.1016/0743-1066(94)90031-0
   Vaucheret C, 2002, LECT NOTES COMPUT SC, V2477, P102
   Warren D., 1977, THESIS
   Wielemaker J., 2010, SWI PROLOG USERS MAN
   Zhou NF, 2007, LECT NOTES COMPUT SC, V4670, P455, DOI 10.1007/978-3-540-74610-2_43
NR 51
TC 1
Z9 1
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2016
VL 16
BP 1
EP 58
DI 10.1017/S1471068414000672
PN 1
PG 58
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA DA3JS
UT WOS:000367693600001
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Desouter, B
   Van Dooren, M
   Schrijvers, T
AF Desouter, Benoit
   Van Dooren, Marko
   Schrijvers, Tom
TI Tabling as a library with delimited control
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 31st International Conference on Logic Programming (ICLP) Co-located
   with the 21st International Conference on Principles and Practice of
   Constraint Programming (CP)
CY AUG 31-SEP 04, 2015
CL Cork, IRELAND
SP Associat Log Programming, European Coordinating Comm Artificial Intelligence, Insight Ctr Data Analyt, Sci Fdn Ireland, Springer, Univ Coll Cork
DE tabling; tabulation; delimited continuations; Prolog; logic programming
ID PROLOG; IMPLEMENTATION; ARCHITECTURE
AB Tabling is probably the most widely studied extension of Prolog. But despite its importance and practicality, tabling is not implemented by most Prolog systems. Existing approaches require substantial changes to the Prolog engine, which is an investment out of reach of most systems. To enable more widespread adoption, we present a new implementation of tabling in under 600 lines of Prolog code. Our lightweight approach relies on delimited control and provides reasonable performance.
C1 [Desouter, Benoit; Van Dooren, Marko] Univ Ghent, B-9000 Ghent, Belgium.
   [Schrijvers, Tom] Katholieke Univ Leuven, Leuven, Belgium.
C3 Ghent University; KU Leuven
RP Desouter, B (corresponding author), Univ Ghent, B-9000 Ghent, Belgium.
EM benoit.desouter@ugent.be; marko.vandooren@ugent.be;
   tom.schrijvers@cs.kuleuven.be
RI Schrijvers, Tom/A-6696-2016
OI Schrijvers, Tom/0000-0001-8771-5559
FU Flemish Fund for Scientific Research (FWO)
FX We are grateful to Bart Demoen for supporting hProlog and to the
   anonymous reviewers for their helpful feedback. This work was partly
   funded by the Flemish Fund for Scientific Research (FWO).
CR Ceri S., 1989, IEEE Transactions on Knowledge and Data Engineering, V1, P146, DOI 10.1109/69.43410
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   Costa VS, 2012, THEOR PRACT LOG PROG, V12, P5, DOI 10.1017/S1471068411000512
   DANVY O, 1990, PROCEEDINGS OF THE 1990 ACM CONFERENCE ON LISP AND FUNCTIONAL PROGRAMMING, P151, DOI 10.1145/91556.91622
   de Guzmán PC, 2008, LECT NOTES COMPUT SC, V4902, P197
   Demoen B, 1999, LECT NOTES COMPUT SC, V1551, P106
   Demoen B., 1998, Principles of Declarative Programming. 10th International Symposium, PLILP'98. Held Jointly with the 6th International Conference, ALP'98. Proceedings, P21, DOI 10.1007/BFb0056605
   FAN CG, 1992, SOFTWARE PRACT EXPER, V22, P573, DOI 10.1002/spe.4380220706
   Felleisen M., 1988, Conference Record of the Fifteenth Annual ACM Symposium on Principles of Programming Languages, P180, DOI 10.1145/73560.73576
   Guo H.-F., 2004, ABSCS0412041 CORR
   Guo HF, 2008, SOFTWARE PRACT EXPER, V38, P75, DOI 10.1002/spe.824
   Hai-Feng Guo, 2001, Logic Programming. 17th International Conference, ICLP 2001. Proceedings (Lecture Notes in Computer Science Vol.2237), P181
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   Plotkin GD, 2013, LOG METH COMPUT SCI, V9, DOI 10.2168/LMCS-9(4:23)2013
   Raimundo J., 2011, ONL P 11 INT C IMPL
   RAMESH R, 1994, MIT PS LOG, P618
   ROCHA R, 2000, C TAB PARS DED, P77
   Santos Joao, 2013, Practical Aspects of Declarative Languages. 15th International Symposium, PADL 2013. Proceedings: LNCS 7752, P141, DOI 10.1007/978-3-642-45284-0_10
   Schrijvers T., 2013, 631 CW KU LEUV DEP C
   Schrijvers T., 2013, P INT C LOG PROGR IC
   Swift T, 2012, THEOR PRACT LOG PROG, V12, P157, DOI 10.1017/S1471068411000500
   Tarau P., 1994, LOPSTR 94, V883
   Tarau P, 2012, THEOR PRACT LOG PROG, V12, P97, DOI 10.1017/S1471068411000433
   Zhou NF, 2012, THEOR PRACT LOG PROG, V12, P189, DOI 10.1017/S1471068411000445
   Zhou NF, 2000, LECT NOTES COMPUT SC, V1753, P109
NR 25
TC 8
Z9 8
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2015
VL 15
SI SI
BP 419
EP 433
DI 10.1017/S1471068415000137
PN 4-5
PG 15
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA DA3JE
UT WOS:000367692200002
OA Green Accepted, Green Published, Bronze, Green Submitted
DA 2024-07-18
ER

PT J
AU Gabbrielli, M
   Meo, MC
   Tacchella, P
   Wiklicky, H
AF Gabbrielli, Maurizio
   Meo, Maria Chiara
   Tacchella, Paolo
   Wiklicky, Herbert
TI Unfolding for CHR programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE CHR (Constraint Handling Rules); program transformation; unfolding;
   confluence; termination
ID CONSTRAINT; OPTIMIZATION
AB Program transformation is an appealing technique which allows to improve run-time efficiency, space-consumption, and more generally to optimize a given program. Essentially, it consists of a sequence of syntactic program manipulations which preserves some kind of semantic equivalence. Unfolding is one of the basic operations used by most program transformation systems and consists of the replacement of a procedure call by its definition. While there is a large body of literature on the transformation and unfolding of sequential programs, very few papers have addressed this issue for concurrent languages. This paper defines an unfolding system for Constraint Handling Rules programs. We define an unfolding rule, show its correctness and discuss some conditions that can be used to delete an unfolded rule while preserving the program meaning. We also prove that, under some suitable conditions, confluence and termination are preserved by the above transformation.
C1 [Gabbrielli, Maurizio] Univ Bologna, Dept Comp Sci Focus, INRIA, I-40127 Bologna, Italy.
   [Meo, Maria Chiara] Univ G dAnnunzio, Dipartimento Econ, I-65127 Pescara, Italy.
   [Tacchella, Paolo] Univ Bologna, I-40127 Bologna, Italy.
   [Wiklicky, Herbert] Univ London Imperial Coll Sci Technol & Med, London SW7 2BZ, England.
C3 University of Bologna; G d'Annunzio University of Chieti-Pescara;
   University of Bologna; Imperial College London
RP Gabbrielli, M (corresponding author), Univ Bologna, Dept Comp Sci Focus, INRIA, Mura Anteo Zamboni 7, I-40127 Bologna, Italy.
EM gabbri@cs.unibo.it; cmeo@unich.it; Paolo.Tacchella@cs.unibo.it;
   herbert@doc.ic.ac.uk
OI MEO, MARIA CHIARA/0000-0002-3700-3788; GABBRIELLI,
   MAURIZIO/0000-0003-0609-8662
CR Abdennadher S, 2003, LECT NOTES COMPUT SC, V3018, P198
   Abdennadher S, 1997, LECT NOTES COMPUT SC, V1330, P252, DOI 10.1007/BFb0017444
   Duck G. J., 2004, LECT NOTES COMPUTER, V3132, P269
   Etalle S, 2001, ACM T PROGR LANG SYS, V23, P304, DOI 10.1145/503502.503504
   Frühwirth T, 2005, LECT NOTES COMPUT SC, V3573, P133, DOI 10.1007/11506676_9
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Fruhwirth T., 2003, JOINT C DECL PROGR A, P386
   Fruhwirth T., 2002, ENTCS, V76, P115, DOI DOI 10.1016/S1571-0661(04)80789-8
   Fruhwirth T.W., 2009, Constraint Handling Rules
   Fruhwirth Thom., 2003, COG TECH, DOI 10.1007/978-3-662-05138-2
   Lloyd J. W., 1984, Foundations of Logic Programming
   Raiser F., 2009, CHR 2009, P34
   Schrijvers T, 2008, LECT NOTES COMPUT SC, V5366, P516, DOI 10.1007/978-3-540-89982-2_44
   Sneyers J, 2005, LECT NOTES COMPUT SC, V3668, P83, DOI 10.1007/11562931_9
   Sneyers J, 2010, THEOR PRACT LOG PROG, V10, P433, DOI 10.1017/S1471068410000207
   Starosta BS, 2009, LECT NOTES COMPUT SC, V5649, P357, DOI 10.1007/978-3-642-02846-5_30
   Tacchella Paolo, 2007, Proceedings of the 9th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP'07), P179, DOI 10.1145/1273920.1273945
   Tacchella P., 2008, THESIS U BOLOGNA BOL
   Tamaki H., 1984, P 2 INT C LOG PROGR, P127
   UEDA K, 1988, P INT C 5 GEN COMP S, P582
NR 20
TC 0
Z9 0
U1 0
U2 13
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2015
VL 15
BP 264
EP 311
DI 10.1017/S1471068413000288
PN 3
PG 48
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA CE3WZ
UT WOS:000351762100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Skarlatidis, A
   Artikis, A
   Filippou, J
   Paliouras, G
AF Skarlatidis, Anastasios
   Artikis, Alexander
   Filippou, Jason
   Paliouras, Georgios
TI A probabilistic logic programming event calculus
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE event recognition; event pattern matching; Event Calculus; ProbLog
ID MODELS
AB We present a system for recognising human activity given a symbolic representation of video content. The input of our system is a set of time-stamped short-term activities (STA) detected on video frames. The output is a set of recognised long-term activities (LTA), which are pre-defined temporal combinations of STA. The constraints on the STA that, if satisfied, lead to the recognition of an LTA, have been expressed using a dialect of the Event Calculus. In order to handle the uncertainty that naturally occurs in human activity recognition, we adapted this dialect to a state-of-the-art probabilistic logic programming framework. We present a detailed evaluation and comparison of the crisp and probabilistic approaches through experimentation on a benchmark dataset of human surveillance videos.
C1 [Skarlatidis, Anastasios; Artikis, Alexander; Filippou, Jason; Paliouras, Georgios] NCSR Demokritos, Inst Informat & Telecommun, Athens, Greece.
   [Skarlatidis, Anastasios] Univ Piraeus, Dept Digital Syst, Piraeus, Greece.
   [Filippou, Jason] Univ Maryland, College Pk, MD 20742 USA.
C3 National Centre of Scientific Research "Demokritos"; University of
   Piraeus; University System of Maryland; University of Maryland College
   Park
RP Skarlatidis, A (corresponding author), NCSR Demokritos, Inst Informat & Telecommun, Athens, Greece.
EM anskar1@iit.demokritos.gr; a.artikis@iit.demokritos.gr;
   jfilip@iit.demokritos.gr; paliourg@iit.demokritos.gr
RI Artikis, Alexander/AAC-2692-2020
OI Artikis, Alexander/0000-0001-6899-4599
FU EU PRONTO Project [FP7-ICT 231738]
FX This work was supported by the EU PRONTO Project (FP7-ICT 231738). We
   are very grateful to the ProbLog developing team whose feedback
   contributed greatly to our grasp of the language. The authors
   themselves, however, are solely responsible for any misunderstanding
   about its use. We have also benefited from discussions with Marek Sergot
   on the Event Calculus.
CR ALLEN JF, 1983, COMMUN ACM, V26, P832, DOI 10.1145/182.358434
   [Anonymous], ACM COMPUTING SURVEY
   [Anonymous], 2007, P C AUTONOMOUS AGENT
   Artikis A., 2010, Proceedings of the 2Nd ACM International Workshop on Events in Multimedia, EiMM '10, P3, DOI DOI 10.1145/1877937.1877941
   Artikis A., 2012, Proceedings of the Sixth ACM International Conference on Distributed Event-Based Systems (DEBS), P69
   Artikis A, 2012, KNOWL ENG REV, V27, P469, DOI 10.1017/S0269888912000264
   Biswas Rahul, 2007, Human Motion - Understanding, Modeling, Capture and Animation. Proceedings 2nd Workshop, Human Motion 2007. (Lecture Notes in Computer Science vol. 4814), P255
   Brand M, 1997, PROC CVPR IEEE, P994, DOI 10.1109/CVPR.1997.609450
   Brendel W., 2011, 2011 IEEE Conference on Computer Vision and Pattern Recognition (CVPR), P3329, DOI 10.1109/CVPR.2011.5995491
   Bruynooghe M, 2010, FRONT ARTIF INTEL AP, V215, P719, DOI 10.3233/978-1-60750-606-5-719
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Dousson C, 2007, 20TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P324
   Fierens D., 2011, P C UNCERTAINTY ARTI, P211
   Gibson J., 1979, The ecological approach to visual perception
   Ginsberg M. L., 1990, J LOGIC COMPUT, V1, P1
   Gong SG, 2003, NINTH IEEE INTERNATIONAL CONFERENCE ON COMPUTER VISION, VOLS I AND II, PROCEEDINGS, P742, DOI 10.1109/ICCV.2003.1238423
   Hakeem A, 2007, ARTIF INTELL, V171, P586, DOI 10.1016/j.artint.2007.04.002
   Helaoui R, 2011, INT CONF PERVAS COMP, P1, DOI 10.1109/PERCOM.2011.5767586
   Hongeng S, 2003, NINTH IEEE INTERNATIONAL CONFERENCE ON COMPUTER VISION, VOLS I AND II, PROCEEDINGS, P1455, DOI 10.1109/ICCV.2003.1238661
   Kembhavi A, 2010, LECT NOTES COMPUT SC, V6312, P693, DOI 10.1007/978-3-642-15552-9_50
   Kimmig A, 2011, THEOR PRACT LOG PROG, V11, P235, DOI 10.1017/S1471068410000566
   Kosmopoulos D., 2008, P HELL C ART INT, V5138
   KOWALSKI R, 1986, NEW GENERAT COMPUT, V4, P67, DOI 10.1007/BF03037383
   Lafferty John, 2001, INT C MACH LEARN ICM
   Liao L, 2007, SPRINGER TRAC ADV RO, V28, P487
   Luckham D., 2002, The Power of Events: An Introduction to Complex Event Processing in Distributed Enterprise Systems
   Moldovan B, 2012, IEEE INT CONF ROBOT, P4373, DOI 10.1109/ICRA.2012.6225042
   Morariu V. I., 2011, 2011 IEEE Conference on Computer Vision and Pattern Recognition (CVPR), P3289, DOI 10.1109/CVPR.2011.5995386
   Murphy Kevin Patrick, 2002, Dynamic bayesian networks: representation, inference and learning
   Natarajan P., 2007, P INT JOINT C ART IN, P2562
   Richardson M, 2006, MACH LEARN, V62, P107, DOI 10.1007/s10994-006-5833-1
   Sadilek A, 2012, J ARTIF INTELL RES, V43, P87, DOI 10.1613/jair.3421
   Schuster-Bockler Benjamin, 2007, Curr Protoc Bioinformatics, VAppendix 3, p3A, DOI 10.1002/0471250953.bia03as18
   Selman J., 2011, 2011 IEEE International Conference on Computer Vision Workshops (ICCV Workshops), P680, DOI 10.1109/ICCVW.2011.6130308
   Shet V., 2007, PROC CVPR07, P1
   Shet VD, 2005, AVSS 2005: ADVANCED VIDEO AND SIGNAL BASED SURVEILLANCE, PROCEEDINGS, P224
   Siskind JM, 2001, J ARTIF INTELL RES, V15, P31, DOI 10.1613/jair.790
   Skarlatidis Anastasios, 2011, Rule-Based Modeling and Computing on the Semantic Web. Proceedings 5th International Symposium, RuleML 2011 - America, P155, DOI 10.1007/978-3-642-24908-2_19
   Tran SD, 2008, LECT NOTES COMPUT SC, V5303, P610, DOI 10.1007/978-3-540-88688-4_45
   VALIANT LG, 1979, SIAM J COMPUT, V8, P410, DOI 10.1137/0208032
   Wang J., 2008, 23 NATL C ART INT AA, V2, P1106
   WU T, 2007, P AAAI WORKSH PLAN A
NR 42
TC 37
Z9 40
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2015
VL 15
SI SI
BP 213
EP 245
DI 10.1017/S1471068413000690
PN 2
PG 33
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA CB5LO
UT WOS:000349668800004
OA Green Submitted, Bronze
DA 2024-07-18
ER

PT J
AU Amadini, R
   Gabbrielli, M
   Mauro, J
AF Amadini, Roberto
   Gabbrielli, Maurizio
   Mauro, Jacopo
TI SUNNY: a Lazy Portfolio Approach for Constraint Solving
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
DE Algorithms Portfolio; Artificial Intelligence; Constraint Satisfaction;
   Machine Learning
ID MULTI-ENGINE SOLVER
AB Within the context of constraint solving, a portfolio approach allows one to exploit the synergy between different solvers in order to create a globally better solver. In this paper we present SUNNY: a simple and flexible algorithm that takes advantage of a portfolio of constraint solvers in order to compute - without learning an explicit model - a schedule of them for solving a given Constraint Satisfaction Problem (CSP). Motivated by the performance reached by SUNNY vs. different simulations of other state of the art approaches, we developed sunny-csp, an effective portfolio solver that exploits the underlying SUNNY algorithm in order to solve a given CSP. Empirical tests conducted on exhaustive benchmarks of MiniZinc models show that the actual performance of sunny-csp conforms to the predictions. This is encouraging both for improving the power of CSP portfolio solvers and for trying to export them to fields such as Answer Set Programming and Constraint Logic Programming.
C1 [Amadini, Roberto; Gabbrielli, Maurizio; Mauro, Jacopo] Univ Bologna, Dept Comp Sci & Engn, Lab Focus INRIA, I-40126 Bologna, Italy.
C3 University of Bologna
RP Amadini, R (corresponding author), Univ Bologna, Dept Comp Sci & Engn, Lab Focus INRIA, I-40126 Bologna, Italy.
RI AMADINI, ROBERTO/P-1262-2016
OI AMADINI, ROBERTO/0000-0003-1668-7305; GABBRIELLI,
   MAURIZIO/0000-0003-0609-8662; Mauro, Jacopo/0000-0002-5285-2868
CR Amadini R., 2013, CORR
   Amadini R., 2013, LECT NOTES COMPUTER, V7874
   Amadini Roberto, 2014, LION
   Amadini Roberto, 2014, SAC
   [Anonymous], 2012, P SAT CHALL
   [Anonymous], TECHNICAL COMMUNICAT
   Arlot S, 2010, STAT SURV, V4, P40, DOI 10.1214/09-SS054
   Balduccini M, 2011, AI COMMUN, V24, P147, DOI 10.3233/AIC-2011-0493
   Cipriano R, 2008, LECT NOTES COMPUT SC, V5366, P744, DOI 10.1007/978-3-540-89982-2_69
   CSP Competition, 2009, 3 INT CSP SOLV COMP
   De Cat B, 2013, PROC INT C TOOLS ART, P1068, DOI 10.1109/ICTAI.2013.159
   Gebruers C, 2004, LECT NOTES COMPUT SC, V3011, P380
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P352
   Gomes CP, 2001, ARTIF INTELL, V126, P43, DOI 10.1016/S0004-3702(00)00081-3
   Hutter F., 2012, CORR
   Kadioglu S., 2010, ECAI FRONT ART INT A, V215
   Kadioglu S., 2011, LECT NOTES COMPUTER, V6876
   Kotthoff L., 2012, CORR
   MACKWORTH AK, 1977, ARTIF INTELL, V8, P99, DOI 10.1016/0004-3702(77)90007-8
   Malitsky Y., 2013, IJCAI IJCAI AAAI
   Malitsky Y., 2012, LECT NOTES COMPUTER, V7298
   Maratea Marco, 2012, Logics in Artificial Intelligence. Proceedings of the 13th European Conference (JELIA 2012), P484, DOI 10.1007/978-3-642-33353-8_39
   Nikolic M, 2009, LECT NOTES COMPUT SC, V5584, P326, DOI 10.1007/978-3-642-02777-2_31
   OMahony E., 2009, AICS 08
   Pulina L, 2007, LECT NOTES COMPUT SC, V4741, P574
   Pulina L, 2009, CONSTRAINTS, V14, P80, DOI 10.1007/s10601-008-9051-2
   Rice J. R., 1976, Advances in computers, vol.15, P65, DOI 10.1016/S0065-2458(08)60520-3
   Samulowitz Horst, 2013, Theory and Applications of Satisfiability Testing - SAT 2013. 16th International Conference. Proceedings. LNCS 7962, P422
   Smith-Miles KA, 2008, ACM COMPUT SURV, V41, DOI 10.1145/1456650.1456656
   Stern D. H., 2010, AAAI
   WILSON D.C., 2000, P 16 INT ASS MATH CO
   Xu L., 2007, LNCS, V4741
NR 32
TC 29
Z9 29
U1 0
U2 5
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 509
EP 524
DI 10.1017/S1471068414000179
PN 4-5
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lager, T
   Wielemaker, J
AF Lager, Torbjorn
   Wielemaker, Jan
TI Pengines: Web Logic Programming Made Easy
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 30th International Conference on Logic Programming
CY JUL, 2014
CL Vienna, AUSTRIA
DE web programming; query languages; agent programming; distributed
   programming
AB When developing a (web) interface for a deductive database, functionality required by the client is provided by means of HTTP handlers that wrap the logical data access predicates. These handlers are responsible for converting between client and server data representations and typically include options for paginating results. Designing the web accessible API is difficult because it is hard to predict the exact requirements of clients. Pengines changes this picture. The client provides a Prolog program that selects the required data by accessing the logical API of the server. The pengine infrastructure provides general mechanisms for converting Prolog data and handling Prolog non-determinism. The Pengines library is small (2000 lines Prolog, 150 lines JavaScript). It greatly simplifies defining an AJAX based client for a Prolog program and provides non-deterministic RPC between Prolog processes as well as interaction with Prolog engines similar to Paul Tarau's engines. Pengines are available as a standard package for SWI-Prolog 7.(1)
C1 [Lager, Torbjorn] Gothenburg Univ, S-41124 Gothenburg, Sweden.
   [Wielemaker, Jan] Vrije Univ Amsterdam, Amsterdam, Netherlands.
C3 University of Gothenburg; Vrije Universiteit Amsterdam
RP Lager, T (corresponding author), Gothenburg Univ, S-41124 Gothenburg, Sweden.
EM Torbjorn.Lager@ling.gu.se; J.Wielemaker@vu.nl
OI Wielemaker, Jan/0000-0001-5574-5673
CR BRAND D, 1983, J ACM, V30, P323, DOI 10.1145/322374.322380
   Byrd Lawrence., 1980, P 1980 LOGIC PROGRAM, P127
   Calejo M, 2004, LECT NOTES COMPUT SC, V3229, P714, DOI 10.1007/978-3-540-30227-8_64
   Shen K., 2002, Practical Aspects of Declarative Languages. 4th International Symposium, PADL 2002. Proceedings (Lecture Notes in Computer Science Vol.2257), P262
   Tarau P, 2009, LECT NOTES COMPUT SC, V5418, P137, DOI 10.1007/978-3-540-92995-6_10
   Wielemaker J, 2008, THEOR PRACT LOG PROG, V8, P363, DOI 10.1017/S1471068407003237
NR 6
TC 16
Z9 16
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2014
VL 14
SI SI
BP 539
EP 552
DI 10.1017/S1471068414000192
PN 4-5
PG 14
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA AQ9UT
UT WOS:000343203200010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lifschitz, V
   Yang, FK
AF Lifschitz, Vladimir
   Yang, Fangkai
TI Lloyd-Topor completion and general stable models
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 29th International Conference on Logic Programming ICLP
CY APR 10-JUN 23, 2013
CL Ferrara, ITALY
DE Lloyd-Topor program; completion; general stable models
ID LOGIC PROGRAMS
AB We investigate the relationship between the generalization of program completion defined in 1984 by Lloyd and Topor and the generalization of the stable model semantics introduced recently by Ferraris et al. The main theorem can be used to characterize, in some cases, the general stable models of a logic program by a first-order formula. The proof uses Truszczynski's stable model semantics of infinitary propositional formulas.
C1 [Lifschitz, Vladimir; Yang, Fangkai] Univ Texas Austin, Dept Comp Sci, Austin, TX 78712 USA.
C3 University of Texas System; University of Texas Austin
RP Lifschitz, V (corresponding author), Univ Texas Austin, Dept Comp Sci, Austin, TX 78712 USA.
EM vl@cs.utexas.edu; fkyang@cs.utexas.edu
CR [Anonymous], 1996, Principles of Knowledge Representation
   Bartholomew M., 2012, P INT C PRINC KNOWL
   Erdem E, 2003, THEOR PRACT LOG PROG, V3, P499, DOI 10.1017/S1471068403001765
   FAGES F, 1994, J METHODS LOGIC COMP, V1, P51
   Ferraris P, 2011, ARTIF INTELL, V175, P236, DOI 10.1016/j.artint.2010.04.011
   Lee J, 2011, J ARTIF INTELL RES, V42, P125
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Lifschitz V, 2007, LECT NOTES COMPUT SC, V4483, P188, DOI 10.1007/978-3-540-72200-7_17
   Lin F., 2003, IJCAI 03, P853
   Lin FZ, 2004, ARTIF INTELL, V157, P115, DOI 10.1016/j.artint.2004.04.004
   Lloyd J. W., 1984, Journal of Logic Programming, V1, P225, DOI 10.1016/0743-1066(84)90011-6
NR 11
TC 2
Z9 2
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2013
VL 13
SI SI
BP 503
EP 515
DI 10.1017/S1471068413000318
PN 4-5
PG 13
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 224XR
UT WOS:000324926400004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU De Guzmán, PC
   Casas, A
   Carro, M
   Hermenegildo, MV
AF Chico De Guzman, Pablo
   Casas, Amadeo
   Carro, Manuel
   Hermenegildo, Manuel V.
TI Parallel backtracking with answer memoing for independent
   and-parallelism
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 27th International Conference on Logic Programming
CT 27th International Conference on Logic Programming
CY 2010
CY JUL 06-10, 2011
CL Lexington, KY
CL Lexington, KY
DE parallelism; logic programming; memoization; backtracking; performance
ID LOGIC PROGRAMS; LEVEL
AB Goal-level Independent and-parallelism (IAP) is exploited by scheduling for simultaneous execution of two or more goals, which will not interfere with each other at run time. This can be done safely even if such goals can produce multiple answers. The most successful IAP implementations to date have used recomputation of answers and sequentially ordered backtracking. While in principle simplifying the implementation, recomputation can be very inefficient if the granularity of the parallel goals is large enough and they produce several answers, while sequentially ordered backtracking limits parallelism. And, despite the expected simplification, the implementation of the classic schemes has proved to involve complex engineering, with the consequent difficulty for system maintenance and extension, while still frequently running into the well-known trapped goal and garbage slot problems. This work presents an alternative parallel backtracking model for IAP and its implementation. The model features parallel out-of-order (i.e., nonchronological) backtracking and relies on answer memoization to reuse and combine answers. We show that this approach can bring significant performance advantages. Also, it can bring some simplification to the important engineering task involved in implementing the backtracking mechanism of previous approaches.
C1 [Chico De Guzman, Pablo; Carro, Manuel; Hermenegildo, Manuel V.] Univ Politecn Madrid, Sch Comp Sci, E-28040 Madrid, Spain.
C3 Universidad Politecnica de Madrid
RP De Guzmán, PC (corresponding author), Univ Politecn Madrid, Sch Comp Sci, E-28040 Madrid, Spain.
EM pchico@clip.dia.fi.upm.es; amadeo.c@samsung.com; mcarro@fi.upm.es;
   herme@fi.upm.es
RI Hermenegildo, w V/I-4418-2015; Carro, Manuel/AAE-9653-2021
OI Hermenegildo, w V/0000-0002-7583-323X; Carro, Manuel/0000-0001-5199-3135
CR Ait-Kaci H., 1991, WARRENS ABSTRACT MAC
   BUENO F., 2009, CIAO SYSTEM REF MANU
   CABEZA D, 2004, THESIS UPM MADRID
   Casas A, 2008, LECT NOTES COMPUT SC, V4915, P138, DOI 10.1007/978-3-540-78769-3_10
   Casas A, 2008, LECT NOTES COMPUT SC, V5366, P651, DOI 10.1007/978-3-540-89982-2_53
   Chen WD, 1996, J ACM, V43, P20, DOI 10.1145/227595.227597
   Conery J.S., 1987, Parallel Execution of Logic Programs
   Gupta G, 2001, ACM T PROGR LANG SYS, V23, P472, DOI 10.1145/504083.504085
   Hermenegildo M. V., 1991, New Generation Computing, V9, P233, DOI 10.1007/BF03037164
   HERMENEGILDO MV, 1995, J LOGIC PROGRAM, V22, P1, DOI 10.1016/0743-1066(93)00007-F
   Hermenegildo MV, 2005, SCI COMPUT PROGRAM, V58, P115, DOI 10.1016/j.scico.2005.02.006
   HERMENEGILDO MV, 2011, THEORY PRAC IN PRESS
   HERMENEGILDO MV, 1986, THESIS U TEXAS AUSTI
   JANSON S., 1994, THESIS UPPSALA U SWE
   KARP AH, 1988, IEEE SOFTWARE, V5, P52, DOI 10.1109/52.7943
   Lopez P, 1996, J SYMB COMPUT, V21, P715, DOI 10.1006/jsco.1996.0038
   López-García P, 2005, LECT NOTES COMPUT SC, V3573, P19, DOI 10.1007/11506676_2
   LUSK E, 1990, NEW GENERAT COMPUT, V7, P243, DOI 10.1007/BF03037208
   Moura P, 2008, LECT NOTES COMPUT SC, V4902, P265
   Muthukumar K, 1999, J LOGIC PROGRAM, V38, P165, DOI 10.1016/S0743-1066(98)10022-5
   PONTELLI E, 1995, INT PAR PROC S IEEE, P564
   Santos-Costa V., 2011, THEORY PRACTICE LOGI
   SANTOSCOSTA V, 1991, P INT C LOG PROGR IC, P825
   SANTOSCOSTA VM, 1993, THESIS U BRISTOL UK
   Shen K, 1996, J LOGIC PROGRAM, V29, P245, DOI 10.1016/S0743-1066(96)00079-9
   SHEN K, 1996, LNCS, V1124, P635
   TAMAKI H, 1986, LECT NOTES COMPUT SC, V225, P84
   WARREN D, 1983, 309 ART INT CTR
   WARREN DS, 1992, COMMUN ACM, V35, P93, DOI 10.1145/131295.131299
   [No title captured]
   [No title captured]
NR 31
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2011
VL 11
SI SI
BP 555
EP 574
DI 10.1017/S1471068411000172
PN 4-5
PG 20
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA 791XA
UT WOS:000292701100009
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Delzanno, G
AF Delzanno, Giorgio
TI Constraint-based automatic verification of abstract models of
   multithreaded programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE constraints; multithreaded programs; verification
ID SYSTEMS; CHECKING
AB We present a technique for the automated verification of abstract models of multithreaded programs providing fresh name generation, name mobility, and unbounded control. As high level specification language we adopt here an extension of communication finite-state machines with local variables ranging over an infinite name domain, called TDL programs. Communication machines have been proved very effective for representing communication protocols as well as for representing abstractions of multithreaded software. The verification method that we propose is based on the encoding of TDL programs into a low level language based on multiset rewriting and constraints that can be viewed as an extension of Petri Nets. By means of this encoding, the symbolic verification procedure developed for the low level language in our previous work can now be applied to TDL programs. Furthermore, the encoding allows us to isolate a decidable class of verification problems for TDL programs that still provide fresh name generation, name mobility, and unbounded control. Our syntactic restrictions are in fact defined on the internal structure of threads: In order to obtain a complete and terminating method, threads are only allowed to have at most one local variable (ranging over an infinite domain of names).
C1 Univ Genoa, Dipartimento Informat & Sci Informaz, I-16146 Genoa, Italy.
C3 University of Genoa
RP Delzanno, G (corresponding author), Univ Genoa, Dipartimento Informat & Sci Informaz, Via Dodecaneso 35, I-16146 Genoa, Italy.
EM giorgio@disi.unige.it
CR Abdulla PA, 1996, IEEE S LOG, P313, DOI 10.1109/LICS.1996.561359
   Abdulla PA, 2003, THEOR COMPUT SCI, V290, P241, DOI 10.1016/S0304-3975(01)00330-9
   Abdulla PA, 2001, THEOR COMPUT SCI, V256, P145, DOI 10.1016/S0304-3975(00)00105-5
   Abdulla PA, 2000, IEEE S LOG, P132, DOI 10.1109/LICS.2000.855762
   BALL T, 2001, LNCS, V2031, P158
   Bistarelli S, 2005, J COMPUT SECUR, V13, P3, DOI 10.3233/JCS-2005-13102
   BOCHMANN GV, 1978, COMPUTER NETWORKS, V2, P46
   BOUAJJANI A, 2000, LECT NOTES COMPUTER, V1855, P403, DOI DOI 10.1007/10722167_
   BOZZANO M, 2002, 14 INT C COMP AID VE, V2404
   Cerva H, 1999, ELEC SOC S, V99, P55
   Delzanno G, 1999, LECT NOTES COMPUT SC, V1579, P223
   DELZANNO G, 2001, ENTCS, V50
   DELZANNO G, 2005, TR0508 U GEN DIP INF
   Finkel A, 2001, THEOR COMPUT SCI, V256, P63, DOI 10.1016/S0304-3975(00)00102-X
   GERMAN SM, 1992, J ACM, V39, P675, DOI 10.1145/146637.146681
   GORDON AD, 2001, LNCS, V2171, P262
   Kesten Y, 2001, THEOR COMPUT SCI, V256, P93, DOI 10.1016/S0304-3975(00)00103-1
   Schnoebelen P, 2002, INFORM PROCESS LETT, V83, P251, DOI 10.1016/S0020-0190(01)00337-4
NR 18
TC 8
Z9 8
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2007
VL 7
BP 67
EP 91
DI 10.1017/S1471068406002821
PN 1-2
PG 25
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 148DD
UT WOS:000245053800004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Kim, H
   Turletti, T
   Bouali, A
AF Kim, Hahnsang
   Turletti, Thierry
   Bouali, Amar
TI EPspectra: a formal toolkit for developing DSP software applications
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE real-time application; ESTEREL; formal verification
ID REAL-TIME SYSTEMS; VERIFICATION; LANGUAGE
AB The software approach to developing Digital Signal Processing (DSP) applications brings some great features such as flexibility, re-usability of resources and easy upgrading or applications. However, it requires long and tedious tests and verification phases because of the increasing complexity or the software applications. This implies the need of a software programming environment capable of putting together DSP modules and providing facilities to debug. verify and validate the code. The objective of the work is to provide such facilities as simulation and verification for developing DSP software applications. This led us to developing an extension toolkit, EPSPECTRA, built upon PSPECTRA. one of the first toolkits available to design basic software radio applications oil standard PC workstations. In this paper, we first present EPSPECTRA, an ESTEREL-based extension Of PSPECTRA that makes the design and implementation of portable DSP applications easier. It allows the drastic reduction of testing and verification time while requiring relatively little expertise in formal verification methods. Second, we demonstrate the use of EPSPECTRA, taking as all example the radio interface part of a GSM base station. We also present the verification procedures for the three safety properties of the implementation programs which have complex control-paths. These have to obey strict scheduling rules. In addition, EPSPECTRA achieves the verification of the targeted application since the same model is used for the executable code generation and for the formal verification.
C1 Esterel Technol, F-06270 Villeneuve, France.
CR Allan VH, 1995, ACM COMPUT SURV, V27, P367, DOI 10.1145/212094.212131
   ALPERN B, 1985, INFORM PROCESS LETT, V21, P181, DOI 10.1016/0020-0190(85)90056-0
   ALPERN B, 1986, INFORM PROCESS LETT, V23, P177, DOI 10.1016/0020-0190(86)90132-8
   [Anonymous], 3 INT C ALG METH SOF
   [Anonymous], GSM SYSTEM MOBILE CO
   ARDITI L, 1999, 4 INT WORKSH FORM ME
   BENVENISTE A, 1991, SCI COMPUT PROGRAM, V16, P103, DOI 10.1016/0167-6423(91)90001-E
   BENVENISTE A, 1992, LNCS, V582, P20
   Berry G., 1990, Real time programming: special purpose or general purpose languages
   BERRY G, 1996, LNCS, V1101, P225
   BERRY G, 1999, ESTEREL V5 92 SYSTEM
   BORGNE ML, 1996, LNCS, V1101, P271
   BOSE V, 1999, THESIS MIT
   Bouali A, 1998, LECT NOTES COMPUT SC, V1427, P500, DOI 10.1007/BFb0028770
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   BURCH JR, 1990, 4 S LOG COMP SCI MAR, P428
   CLARKE EM, 1986, ACM T PROGR LANG SYS, V8, P244, DOI 10.1145/5397.5399
   Closse E, 2001, LECT NOTES COMPUT SC, V2102, P391
   Halbwachs N., 1999, Advances in Computing Science-ASIAN'99. 5th Asian Computing Science Conference. Proceedings (Lecture Notes in Computer Science Vol. 1742), P1
   Halbwachs N, 1997, FORM METHOD SYST DES, V11, P157, DOI 10.1023/A:1008678014487
   HALBWACHS N, 1992, IEEE T SOFTWARE ENG, V18, P785, DOI 10.1109/32.159839
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Jeannet B, 1999, LECT NOTES COMPUT SC, V1694, P39
   Jensen ED, 1997, COMPUT CONTROL ENG J, V8, P15, DOI 10.1049/cce:19970104
   Johnsson T, 2004, ACM SIGPLAN NOTICES, V39, P125, DOI 10.1145/989393.989409
   LORENZ D, 1998, DIGITAL CELLULAR T 2
   MUROTA K, 1981, IEEE T COMMUN, V29, P1044, DOI 10.1109/TCOM.1981.1095089
   Raymond P, 1998, REAL TIM SYST SYMP P, P200, DOI 10.1109/REAL.1998.739746
   Sentovich EM, 1996, IEEE IC CAD, P428, DOI 10.1109/ICCAD.1996.569833
   SENTOVICH EM, 1992, 2 INT C COMP AID DES, P328
   SIMONE RD, 1994, LNCS, V818, P441
   VASCONCELLOS BW, 2000, THESIS MIT
NR 32
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2006
VL 6
BP 451
EP 481
DI 10.1017/S1471068405002565
PN 4
PG 31
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 063OZ
UT WOS:000239030600003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Christiansen, H
AF Christiansen, H
TI CHR grammars
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE constraint logic programming; constraint handling rules; logic grammars
AB A grammar formalism based upon CHR is proposed analogously to the way Definite Clause Grammars are defined and implemented on top of Prolog. These grammars execute as robust bottom-up parsers with an inherent treatment of ambiguity and a high flexibility to model various linguistic phenomena. The formalism extends previous logic programming based grammars with a form of context-sensitive rules and the possibility to include extra-grammatical hypotheses in both head and body of grammar rules. Among the applications are straightforward implementations of Assumption Grammars and abduction under integrity constraints for language analysis. CHR grammars appear as a powerful tool for specification and implementation of language processors and may be proposed as a new standard for bottom-up grammars in logic programming.
C1 Roskilde Univ, Dept Comp Sci, DK-4000 Roskilde, Denmark.
C3 Roskilde University
RP Roskilde Univ, Dept Comp Sci, POB 260, DK-4000 Roskilde, Denmark.
EM henning@ruc.dk
OI Christiansen, Henning/0000-0003-4731-9927
CR Abdennadher S., 2000, P FQAS2000 FLEX QUER, P141
   ABDENNADHER S, 1998, LECT NOTES ARTIF INT, V1495, P1
   Aho A.V., 1986, COMPILERS PRINCIPLES
   Allen J., 1995, Natural Language Understanding
   Blache P, 2000, LECT NOTES ARTIF INT, V1835, P221
   Bottoni P., 2001, Logical Aspects of Computational Linguistics. 4th International Conference, LACL 2001. Proceedings (Lecture Notes in Computer Science Vol.2099), P79
   Brill E, 1995, COMPUT LINGUIST, V21, P543
   Charniak E., 1985, INTRO ARTIFICIAL INT
   Christ GJ, 2004, ENDOCRINE, V23, P93, DOI 10.1385/ENDO:23:2-3:093
   Christiansen H., 2003, International Journal on Artificial Intelligence Tools (Architectures, Languages, Algorithms), V12, P227, DOI 10.1142/S0218213003001216
   Christiansen H, 2002, LECT NOTES COMPUT SC, V2401, P481, DOI 10.1007/3-540-45619-8_43
   CHRISTIANSEN H, 2002, ICTAI 02 P 14 IEEE I, P307
   CHRISTIANSEN H, 2002, NATURAL LANGUAGE UND, V92, P33
   CHRISTIANSEN H, 2004, IN PRESS 3 INT WORKS
   CHRISTIANSEN H, 2001, CHR GRAMMAR FORMALIS
   CHRISTIANSEN H, 1999, LECT NOTES ARTIF INT, V1688, P455
   Christiansen N, 2003, ELEC SOC S, V2003, P105
   Colmerauer A., 1978, LECT NOTES COMPUTER, V63, P133
   COLMERAUER A, 1975, GRAMMAIRES METAMORPH
   Dahl V, 1997, LOGIC PROGRAMM, P256
   DAHL V, 1994, P GULP PRODE 94
   DAHL V, 1984, P INT C 5 GEN COMP S, P669
   DUCHIER D, 2000, LECT NOTES
   DUCHIER D, 1999, 6 INT WORKSH NAT LAN, P17
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   FRUHWIRTH T, 1998, THESIS LMU MUNICH
   GABBAY D, 1997, NONSTANDARD QUERIES, P155
   Ganzinger H, 2002, LECT NOTES COMPUT SC, V2401, P209, DOI 10.1007/3-540-45619-8_15
   Gazdar G., 1989, NATURAL LANGUAGE PRO
   HECKSHER T, 2002, UNPUB CHRG MODEL ANC
   HOBBS JR, 1993, ARTIF INTELL, V63, P69, DOI 10.1016/0004-3702(93)90015-4
   Holzbaur C, 1999, LECT NOTES COMPUT SC, V1702, P117
   Kakas A, 2000, J LOGIC PROGRAM, V44, P129, DOI 10.1016/S0743-1066(99)00075-8
   Marriott K., 1994, Proceedings. IEEE Symposium on Visual Languages (Cat. No.94TH8010), P118, DOI 10.1109/VL.1994.363633
   MARUYAMA H, 1994, P 28 ANN M ACL PITTS, P31
   MCALLESTER DA, 2000, LNCS, V1894, P13
   Meyer B, 2000, APPL ARTIF INTELL, V14, P327, DOI 10.1080/088395100117025
   MORAWIETZ F, 2000, P COLING 2000
   PENN G, 2000, WORKSH RUL BAS CONST
   PEREIRA FCN, 1980, ARTIF INTELL, V13, P231, DOI 10.1016/0004-3702(80)90003-X
   SCHRODER I, 2000, INT J TRAITEMENT AUT, V41, P113
   SHIEBER SM, 1995, J LOGIC PROGRAM, V24, P3, DOI 10.1016/0743-1066(95)00035-I
   Stalnaker R., 1998, Journal of Logic, Language and Information, V7, P3, DOI 10.1023/A:1008254815298
   *SWED I COMP SCI, 2003, SICSTUS PROL US MAN
   [No title captured]
NR 45
TC 14
Z9 15
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL-SEP
PY 2005
VL 5
BP 467
EP 501
DI 10.1017/S1471068405002395
PN 4-5
PG 35
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 952GZ
UT WOS:000230993300005
DA 2024-07-18
ER

PT J
AU Thielscher, M
AF Thielscher, M
TI FLUX: A logic programming method for reasoning agents
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE agents; cognitive robotics; artificial intelligence
ID FRAME PROBLEM; CALCULUS
AB FLUX is a programming method for the design of agents that reason logically about their actions and sensor information in the presence of incomplete knowledge. The core of FLUX is a system of Constraint Handling Rules, which enables agents to maintain an internal model of their environment by which they control their own behavior. The general action representation formalism of the fluent calculus provides the formal semantics for the constraint solver. FLUX exhibits excellent computational behavior due to both a carefully restricted expressiveness and the inference paradigm of progression.
C1 Tech Univ Dresden, D-01062 Dresden, Germany.
C3 Technische Universitat Dresden
RP Tech Univ Dresden, D-01062 Dresden, Germany.
EM mit@inf.tu-dresden.de
CR [Anonymous], 2 STANF U STANF ART
   [Anonymous], 1997, Solving the frame problem-a mathematical investigation of the common sense law of inertia
   [Anonymous], 1991, Artificial and Mathematical Theory of Computation, DOI DOI 10.1016/B978-0-12-450010-5.50026-8
   [Anonymous], KNOWLEDGE ACTION
   BAKER AB, 1989, S REPR REAS, P11
   BIBEL W, 1986, NEW GENERAT COMPUT, V4, P115, DOI 10.1007/BF03037438
   Fichtner M, 2003, FUND INFORM, V57, P371
   Fruhwirth T, 1998, J LOGIC PROGRAM, V37, P95, DOI 10.1016/S0743-1066(98)10005-5
   Hentenryck Pascal., 1989, CONSTRAINT SATISFACT
   HOLLDOBLER S, 1990, NEW GENERAT COMPUT, V8, P225, DOI 10.1007/BF03037518
   JAFFAR J, 1994, J LOGIC PROGRAM, V20, P503, DOI 10.1016/0743-1066(94)90033-7
   KOWALSKI R, 1986, NEW GENERAT COMPUT, V4, P67, DOI 10.1007/BF03037383
   LESPERANCE Y, 1994, CONTROL PHYSICAL WOR, P109
   Levesque HJ, 1997, J LOGIC PROGRAM, V31, P59, DOI 10.1016/S0743-1066(96)00121-5
   Lin FZ, 1997, ARTIF INTELL, V92, P131, DOI 10.1016/S0004-3702(96)00044-6
   MARTIN Y, 2001, LECT NOTES ARTIF INT, V2174, P290
   MCCARTHY J, 1977, P 5 INT JOINT C ART, P1038
   Moore R.C., 1985, FORMAL THEORIES COMM, P319
   Reiter R., 2001, ACM T COMPUT LOG, V2, P433
   Scherl RB, 2003, ARTIF INTELL, V144, P1, DOI 10.1016/S0004-3702(02)00365-X
   Shanahan M., 2000, LNCS, V1986, P104
   Thielscher M, 2001, ARTIF INTELL, V131, P1, DOI 10.1016/S0004-3702(01)00131-X
   Thielscher M, 1999, ARTIF INTELL, V111, P277, DOI 10.1016/S0004-3702(99)00033-8
   Thielscher M., 2002, P INT C PRINC KNOWL, P435
   Thielscher Michael., 2000, KR2000, P109
NR 25
TC 61
Z9 77
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL-SEP
PY 2005
VL 5
BP 533
EP 565
DI 10.1017/S1471068405002358
PN 4-5
PG 33
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 952GZ
UT WOS:000230993300007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU García, AJ
   Simari, GR
AF García, AJ
   Simari, GR
TI Defeasible logic programming:: an argumentative approach
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE non-monotonic reasoning; knowledge representation; defeasible
   argumentation
ID NEGATION
AB The work reported here introduces Defeasible Logic Programming (DeLP), a formalism that combines results of Logic Programming and Defeasible Argumentation. DeLP provides the possibility of representing information in the form of weak rules in a declarative manner, and a defeasible argumentation inference mechanism for warranting the entailed conclusions. In DeLP an argumentation formalism will be used for deciding between contradictory goals. Queries will be supported by arguments that could be defeated by other arguments. A query q will succeed when there is an argument A for q that is warranted, i.e. the argument A that supports q is found undefeated by a warrant procedure that implements a dialectical analysis. The defeasible argumentation basis of DeLP allows to build applications that deal with incomplete and contradictory information in dynamic domains. Thus, the resulting approach is suitable for representing agent's knowledge and for providing an argumentation based reasoning mechanism to agents.
C1 Univ Nacl Sur, Dept Comp Sci & Engn, RA-8000 Bahia Blanca, Argentina.
C3 National University of the South
EM agarcia@cs.uns.edu.ar; grs@cs.uns.edu.ar
RI Simari, Guillermo Ricardo/P-8739-2019
OI Simari, Guillermo Ricardo/0000-0001-6247-0428
CR Alferes JJ, 1996, LECT NOTES ARTIF INT, V1126, P143
   ALFERES JJ, 1994, LECT NOTES COMPUTER, V798, P11
   [Anonymous], 1997, Journal of Applied Non-Classical Logics, DOI DOI 10.1080/11663081.1997.10510900
   [Anonymous], 1996, Principles of Knowledge Representation
   Antoniou G, 2000, FRONT ARTIF INTEL AP, V54, P459
   Antoniou G, 2000, J LOGIC PROGRAM, V42, P47, DOI 10.1016/S0743-1066(99)00060-6
   Antoniou G., 2001, ACM T COMPUT LOG, V2, P255, DOI [DOI 10.1145/371316.371517, 10.1145/371316.371517]
   ANTONIOU G, 1998, P JOINT INT C S LOG, P160
   Billington D., 1990, Journal of Experimental and Theoretical Artificial Intelligence, V2, P151, DOI 10.1080/09528139008953720
   Bondarenko A, 1997, ARTIF INTELL, V93, P63, DOI 10.1016/S0004-3702(97)00015-5
   BONDARENKO A, 1993, P 2 INT WORKSH LOG P, P171
   Brewka G, 2001, J LOGIC COMPUT, V11, P257, DOI 10.1093/logcom/11.2.257
   Brewka G, 1996, J ARTIF INTELL RES, V4, P19, DOI 10.1613/jair.284
   BREWKA G, 2001, P LNMR
   BREWKA G, 2000, INTELLECTICS COMPUTA, P27
   Chesñevar CI, 2000, ACM COMPUT SURV, V32, P337, DOI 10.1145/371578.371581
   CHESNEVAR CI, 2002, IN PRESS THEORETICAL
   COVINGTON MA, 1997, WILEY ENCY ELECT ELE, V11, P576
   Dahl V, 1997, LOGIC PROGRAMM, P256
   DIMOPOULOS Y, 1995, P INT S LOG PROGR, P369
   DIX J, 1998, J LOGIC PROGRAM, V37, P1
   DIX J, 1994, LOGIC ACTIN INFORMAT, P227
   DUNG PM, 1995, ARTIF INTELL, V77, P321, DOI 10.1016/0004-3702(94)00041-X
   DUNG PM, 1993, P 13 INT JOINT C ART
   DUNG PM, 1993, P 10 INT C LOG PROGR
   DUNG PM, 1991, P 8 INT LOGIC PROGRM
   Eshghi K., 1989, P 6 INT C LOG PROGR
   Garcia A., 1999, Journal o f computer science and technology special issue: Artificial intelligence and evolutive computation, V1, P45
   GARCIA AJ, 1998, WORKSH PRACT REAS RA
   GARCIA AJ, 2000, P ESAW 00 ENG SOC AG
   GARCIA AJ, 1997, THESIS U NACL SUR BA
   GARCIA AJ, 2000, THESIS U NACL SUR CO
   Gelfond M., 1994, Annals of Mathematics and Artificial Intelligence, V12, P89, DOI 10.1007/BF01530762
   Gelfond M, 1998, LECT NOTES ARTIF INT, V1471, P164, DOI 10.1007/BFb0054795
   GELFOND M, 1990, 7 INT C LOG PROGR
   INOUE K, 1991, P 8 INT C LOG PROGR
   Kakas A. C., 1992, Journal of Logic and Computation, V2, P719, DOI 10.1093/logcom/2.6.719
   KAKAS AC, 1994, MIT PS LOG, P504
   Kowalski R. A., 1996, Artificial Intelligence and Law, V4, P275, DOI 10.1007/BF00118494
   Li RW, 1998, LECT NOTES ARTIF INT, V1471, P123, DOI 10.1007/BFb0054793
   Loui RP, 1997, SYNTH LIBR, V263, P345
   LOUI RP, 1997, P 6 INT C ART INT LA
   MAKINSON D, 1991, ARTIF INTELL, V48, P199, DOI 10.1016/0004-3702(91)90061-N
   Nute D., 1988, Aspects of artificial intelligence, P251
   Nute D., 1992, INTENSIONAL LOGICS P
   Nute D.N., 1994, Handbook of Logic in Artificial Intelligence and Logic Programming, volume 3 of Nonmonotonic Reasoning and Uncertain Reasoning, V3, P355
   PEREIRA LM, 1994, LECT NOTES COMPUTER, V798, P268
   Pollock J., 1996, J APPL NONCLASSICAL, V6, P89
   POLLOCK JL, 1987, COGNITIVE SCI, V11, P481, DOI 10.1207/s15516709cog1104_4
   Pollock John, 1995, Cognitive carpentry
   Poole D.L., 1985, Proceedings of IJCAI-85, P144
   PRAKKEN H, 1997, LOGICAL TOOL MODELLI
   Prakken H., 2000, HDB PHILOS LOGIC
   Simari G. R., 1994, 4 IB C ART INT IBERA
   Simari G.R., 1994, 14 INT C CHIL COMP S
   SIMARI GR, 1992, ARTIF INTELL, V53, P125, DOI 10.1016/0004-3702(92)90069-A
   TONI F, 1995, P LPNMR 95, P401
   VERHEJI B, 1996, THESIS MAASTRICHT U
   Vreeswijk GAW, 1997, ARTIF INTELL, V90, P225, DOI 10.1016/S0004-3702(96)00041-0
   Wang XC, 1997, 1997 IEEE INTERNATIONAL CONFERENCE ON INTELLIGENT PROCESSING SYSTEMS, VOLS 1 & 2, P1169, DOI 10.1109/ICIPS.1997.669172
NR 60
TC 449
Z9 478
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN-MAR
PY 2004
VL 4
BP 95
EP 138
DI 10.1017/S1471068403001674
PN 1-2
PG 44
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 776LU
UT WOS:000189118100004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Remshagen, A
   Truemper, K
AF Remshagen, A
   Truemper, K
TI Learning in a compiler for MINSAT algorithms
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE logic minimization problem; propositional logic; learning lemmas;
   compiler for logic
ID SEARCH
AB This paper describes learning in a compiler for algorithms solving classes of the logic minimization problem MINSAT, where the underlying propositional formula is in conjunctive normal form (CNF) and where costs are associated with the True/False values of the variables. Each class consists of all instances that may be derived from a given propositional formula and costs for True/False values by fixing or deleting variables, and by deleting clauses. The learning step begins once the compiler has constructed a solution algorithm for a given class. The step applies that algorithm to comparatively few instances of the class, analyses the performance of the algorithm on these instances, and modifies the underlying propositional formula, with the goal that the algorithm will perform much better on all instances of the class.
C1 State Univ W Georgia, Dept Comp Sci, Carrollton, GA 30118 USA.
   Univ Texas, Dept Comp Sci, Richardson, TX 75083 USA.
C3 University System of Georgia; University of West Georgia; University of
   Texas System; University of Texas Dallas
RP Remshagen, A (corresponding author), State Univ W Georgia, Dept Comp Sci, 1600 Maple St, Carrollton, GA 30118 USA.
CR Bayardo R.J., 1997, P 14 NAT C ART INT 9, P203
   BenEliyahu R, 1996, ANN MATH ARTIF INTEL, V18, P3, DOI 10.1007/BF02136172
   BOHM M, 1996, ANN AMTH ARTIFICIAL, V9, P1
   BOHM M, 1996, VERTEILTE LOSUNG HAR
   Cadoli M, 1997, AI COMMUN, V10, P137
   DECHTER R, 1990, ARTIF INTELL, V41, P273, DOI 10.1016/0004-3702(90)90046-3
   DEVAL A, 1994, P 4 INT C PRINC KNOW, P551
   EITER T, 1995, J ACM, V42, P3, DOI 10.1145/200836.200838
   Kautz H, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P1194
   KAUTZ H, 1994, PROCEEDINGS OF THE TWELFTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P155
   LAGOUDAKIS MG, 2001, ELECT NOTES DISCRETE, V9
   *LEIBN SYST, 2000, VERS 5 0 LEIB
   Li C. M., 1997, P 3 INT C PRINC PRAC, P342
   LIBERATORE P, 2000, 00999 U DI ROM
   Marques-Silva J., 2000, Principles and Practice of Constraint Programming - CP 2000. 6th International Conference, CP 2000. Proceedings (Lecture Notes in Computer Science Vol.1894), P537
   ONUALLAIN B, 2001, ELECT NTOES DISCRETE, V9
   Papadimitriou C. H., 1994, Computational Complexity
   PROSSER P., 1993, COMPUT INTELL, V9, P268, DOI DOI 10.1111/J.1467-8640.1993.TB00310.X
   REMSHAGEN A, 2001, THESIS U TEXAS AT DA
   Richards ET, 2000, J AUTOM REASONING, V24, P483, DOI 10.1023/A:1006362926464
   Silva JPM, 1996, IEEE IC CAD, P220, DOI 10.1109/ICCAD.1996.569607
   Straach J, 1999, ARTIF INTELL, V111, P301, DOI 10.1016/S0004-3702(99)00037-5
   TRICK MA, 1996, DIMACS SERIES DISCRE, V26, P653
   Truemper K., 1998, Effective Logic Computation
   Zhang H., 1997, P INT C AUTOMATED DE, P272
NR 25
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 40 WEST 20TH ST, NEW YORK, NY 10011-4221 USA
SN 1471-0684
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2003
VL 3
BP 271
EP 286
DI 10.1017/S147106840200162X
PN 3
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 689AQ
UT WOS:000183469800002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Inclezan, D
AF Inclezan, Daniela
TI An ASP Framework for the Refinement of Authorization and Obligation
   Policies
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE policy; authorizations and obligations; dynamic domains; ASP
AB This paper introduces a framework for assisting policy authors in refining and improving their policies. In particular, we focus on authorization and obligation policies that can be encoded in Gelfond and Lobo's $\mathscr{AOPL}$ language for policy specification. We propose a framework that detects the statements that make a policy inconsistent, underspecified, or ambiguous with respect to an action being executed in a given state. We also give attention to issues that arise at the intersection of authorization and obligation policies, for instance when the policy requires an unauthorized action to be executed. The framework is encoded in Answer Set Programming.
C1 [Inclezan, Daniela] Miami Univ, Oxford, OH 45056 USA.
C3 University System of Ohio; Miami University
RP Inclezan, D (corresponding author), Miami Univ, Oxford, OH 45056 USA.
EM inclezd@miamioh.edu
OI Inclezan, Daniela/0000-0002-4534-9658
CR Abu Jabal A, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3295749
   Alves S, 2015, ELECTRON NOTES THEOR, V312, P89, DOI 10.1016/j.entcs.2015.04.006
   Balduccini M, 2020, KR2020: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P69
   Blount Justin, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P134, DOI 10.1007/978-3-319-23264-5_12
   Cabalar P, 2020, ELECTRON P THEOR COM, P124, DOI 10.4204/EPTCS.325.19
   Corapi D, 2011, THEOR PRACT LOG PROG, V11, P783, DOI 10.1017/S1471068411000305
   Craven R., 2009, Proceedings of the 4th International Symposium on Information, Computer, and Communications Security, P239
   Davari M, 2022, LECT NOTES COMPUT SC, V13204, P137, DOI 10.1007/978-3-031-02067-4_9
   De Vos M, 2019, LECT NOTES COMPUT SC, V11784, P36, DOI 10.1007/978-3-030-31095-0_3
   Fandinno J, 2019, THEOR PRACT LOG PROG, V19, P114, DOI 10.1017/S1471068418000534
   Ferraiolo D. F., 2001, ACM Transactions on Information and Systems Security, V4, P224, DOI 10.1145/501978.501980
   Gelfond M, 2014, KNOWLEDGE REPRESENTATION, REASONING, AND THE DESIGN OF INTELLIGENT AGENTS: THE ANSWER-SET PROGRAMMING APPROACH, P1, DOI 10.1017/CBO9781139342124
   Gelfond Michael, 2013, Journal of Applied Non-Classical Logic, V23, P105, DOI 10.1080/11663081.2013.798954
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Gelfond M, 1998, LECT NOTES ARTIF INT, V1471, P164, DOI 10.1007/BFb0054795
   Gelfond M, 2008, LECT NOTES COMPUT SC, V5366, P22, DOI 10.1007/978-3-540-89982-2_7
   Havur G., 2021, JOINT P SEM COL EV P
   Inclezan D, 2019, ELECTRON P THEOR COM, P126, DOI 10.4204/EPTCS.306.19
   Inclezan D, 2016, THEOR PRACT LOG PROG, V16, P800, DOI 10.1017/S1471068416000363
   Inclezan D, 2016, THEOR PRACT LOG PROG, V16, P189, DOI 10.1017/S1471068415000095
   Kowalski R., 1989, LOGIC BASED CALCULUS
   LeBlanc E, 2019, LECT NOTES ARTIF INT, V11468, P231, DOI 10.1007/978-3-030-19570-0_15
   Marek V., 1999, LOGIC PROGRAMMING PA, P375, DOI DOI 10.1007/978-3-642-60085-2
   Meyer J, 2021, ELECTRON P THEOR COM, P84, DOI 10.4204/EPTCS.345.23
   Vasileiou SL, 2022, J ARTIF INTELL RES, V73, P1473
   Xu D., 2016, P 21 ACM S ACC CONTR, P137, DOI DOI 10.1145/2914642.2914653
NR 26
TC 1
Z9 3
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI CAMBRIDGE
PA EDINBURGH BLDG, SHAFTESBURY RD, CB2 8RU CAMBRIDGE, ENGLAND
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2023
VL 23
IS 4
SI SI
BP 832
EP 847
AR PII S147106842300011X
DI 10.1017/S147106842300011X
EA JUL 2023
PG 16
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA ID7Z0
UT WOS:001027591700001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Baader, F
   Koopmann, P
   Michel, F
   Turhan, AY
   Zarriess, B
AF Baader, Franz
   Koopmann, Patrick
   Michel, Friedrich
   Turhan, Anni-Yasmin
   Zarriess, Benjamin
TI Efficient TBox Reasoning with Value Restrictions using the FLower
   Reasoner
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE description logics; reasoning; subsumption
ID DESCRIPTION LOGIC; OWL
AB The inexpressive Description Logic (DL) FL0, which has conjunction and value restriction as its only concept constructors, had fallen into disrepute when it turned out that reasoning in FL0 w.r.t. general TBoxes is ExPTIME-complete, that is, as hard as in the considerably more expressive logic ALC. In this paper, we rehabilitate FL0 by presenting a dedicated subsumption algorithm for FL0, which is much simpler than the tableau-based algorithms employed by highly optimized DL reasoners. Our experiments show that the performance of our novel algorithm, as prototypically implemented in our FLower reasoner, compares very well with that of the highly optimized reasoners. FLower can also deal with ontologies written in the extension FL&updatedExpOTTOM; of FL0 with the top and the bottom concept by employing a polynomial-time reduction, shown in this paper, which eliminates top and bottom. We also investigate the complexity of reasoning in DLs related to the Horn-fragments of FL0 and FL&updatedExpOTTOM;.
C1 [Baader, Franz; Koopmann, Patrick; Michel, Friedrich; Turhan, Anni-Yasmin; Zarriess, Benjamin] Tech Univ Dresden, Dresden, Germany.
C3 Technische Universitat Dresden
RP Baader, F (corresponding author), Tech Univ Dresden, Dresden, Germany.
EM franz.baader@tu-dresden.de; patrick.koopmann@tu-dresden.de;
   friedrich.michel@tu-dresden.de; anni-yasmin.turhan@tu-dresden.de;
   benjamin.zarriess@tu-dresden.de
RI ; Baader, Franz/Q-6099-2016
OI Koopmann, Patrick/0000-0001-5999-2583; Turhan,
   Anni-Yasmin/0000-0001-6336-335X; Baader, Franz/0000-0002-4049-221X
FU DFG [389792660]
FX We thank the anonymous reviewers for their helpful comments on an
   earlier draft of themanuscript. This work was partially supported by the
   DFG grant 389792660 as part of TRR 248
   (https://perspicuous-computing.science).
CR [Anonymous], 2017, An Introduction to Description Logic, DOI DOI 10.1017/9781139025355
   [Anonymous], 2003, Journal of Web Semantics
   Baader F, 2003, DESCRIPTION LOGIC HANDBOOK: THEORY, IMPLEMENTATION AND APPLICATIONS, P43
   Baader F., 2001, Studia Logica, V69, P5, DOI 10.1023/A:1013882326814
   BAADER F, 1990, PROCEEDINGS : EIGHTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P621
   BAADER F., 2018, EPIC SERIES COMPUTIN, V57, P76
   BAADER F., 2018, EPIC SERIES COMPUTIN, V55, P1
   Baader F, 2018, COMPANION PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE 2018 (WWW 2018), P1603, DOI 10.1145/3184558.3191618
   Baader F, 2020, KUNSTL INTELL, V34, P291, DOI 10.1007/s13218-020-00651-0
   Baader F, 2016, LECT NOTES COMPUT SC, V10021, P49, DOI 10.1007/978-3-319-48758-8_4
   Baader F, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P364
   Brachman R.J., 1991, Principles of Semantic Networks, P401, DOI DOI 10.1016/B978-1-4832-0771-1.50022-9
   BRACHMAN RJ, 1985, COGNITIVE SCI, V9, P171, DOI 10.1207/s15516709cog0902_1
   Brandt S, 2004, FRONT ARTIF INTEL AP, V110, P298
   Dong J., 2020, LNCS, V12347, P210, DOI 10. 1007/978-3- 030- 58536-5 13
   FORGY CL, 1982, ARTIF INTELL, V19, P17, DOI 10.1016/0004-3702(82)90020-0
   Grau BC, 2008, J WEB SEMANT, V6, P309, DOI 10.1016/j.websem.2008.05.001
   Hoehndorf R, 2015, BRIEF BIOINFORM, V16, P1069, DOI 10.1093/bib/bbv011
   Hofmann M, 2005, IEEE S LOG, P229
   Horridge M, 2011, SEMANT WEB, V2, P11, DOI 10.3233/SW-2011-0025
   KAZAKOV Y., 2003, P 2003 DESCR LOG WOR
   Kazakov Y, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P2040
   Krötzsch M, 2013, ACM T COMPUT LOG, V14, DOI 10.1145/2422085.2422087
   Krotzsch M., 2007, AAAI, P452
   Masuzawa N., 2020, Lecture Notes in Computer Science, P681, DOI 10.1007/978-3-642-35289-8_1
   MAYS E., 1991, SIGART B, V2, P3
   NEBEL B, 1990, ARTIF INTELL, V43, P235, DOI 10.1016/0004-3702(90)90087-G
   Parsia B, 2017, J AUTOM REASONING, V59, P455, DOI 10.1007/s10817-017-9406-8
   Peltason C., 1991, SIGART B, V2, P114
   Romero Ana Armas, 2012, The Semantic Web. 11th International Semantic Web Conference (ISWC 2012). Proceedings, P1, DOI 10.1007/978-3-642-35176-1_1
   Schild K., 1991, P 12 INT JOINT C ART, P466
   Simancik Frantisek., 2011, IJCAI 2011 P 22 INT, P1093
   WOODS WA, 1992, COMPUT MATH APPL, V23, P133, DOI 10.1016/0898-1221(92)90139-9
NR 33
TC 1
Z9 1
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2022
VL 22
IS 2
SI SI
BP 162
EP 192
AR PII S1471068421000466
DI 10.1017/S1471068421000466
PG 31
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 6M9AN
UT WOS:000889154700002
OA hybrid
DA 2024-07-18
ER

PT J
AU Alpuente, M
   Escobar, S
   Sapiña, J
   Ballis, D
AF Alpuente, Maria
   Escobar, Santiago
   Sapina, Julia
   Ballis, Demis
TI <i>Symbolic Specialization of Rewriting Logic Theories with</i> Presto
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE multi-paradigm declarative programming; partial evaluation; rewriting
   logic; narrowing
ID MODEL CHECKING; COMMUTATIVITY; PROGRAMS
AB This paper introduces Presto, a symbolic partial evaluator for Maude's rewriting logic theories that can improve system analysis and verification. In Presto, the automated optimization of a conditional rewrite theory R (whose rules define the concurrent transitions of a system) is achieved by partially evaluating, with respect to the rules of R, an underlying, companion equational logic theory E that specifies the algebraic structure of the system states of R. This can be particularly useful for specializing an overly general equational theory E whose operators may obey complex combinations of associativity, commutativity, and/or identity axioms, when being plugged into a host rewrite theory R as happens, for instance, in protocol analysis, where sophisticated equational theories for cryptography are used. Presto implements different unfolding operators that are based on folding variant narrowing (the symbolic engine of Maude's equational theories). When combined with an appropriate abstraction algorithm, they allow the specialization to be adapted to the theory termination behavior and bring significant improvement while ensuring strong correctness and termination of the specialization. We demonstrate the effectiveness of Presto in several examples of protocol analysis where it achieves a significant speed-up. Actually, the transformation provided by Presto may cut down an infinite folding variant narrowing space to a finite one, and moreover, some of the costly algebraic axioms and rule conditions may be eliminated as well. As far as we know, this is the first partial evaluator for Maude that respects the semantics of functional, logic, concurrent, and object-oriented computations.
C1 [Alpuente, Maria; Escobar, Santiago; Sapina, Julia] Univ Politecn Valencia, VRAIN Valencian Res Inst Artificial Intelligence, Valencia, Spain.
   [Ballis, Demis] Univ Udine, DMIF, Udine, Italy.
C3 Universitat Politecnica de Valencia; University of Udine
RP Alpuente, M (corresponding author), Univ Politecn Valencia, VRAIN Valencian Res Inst Artificial Intelligence, Valencia, Spain.
EM alpuente@upv.es; sescobar@upv.es; jsapina@upv.es; demis.ballis@uniud.it
RI ALPUENTE, MARÍA/E-1899-2012; Sapiña, Julia/P-8581-2019; Escobar,
   Santiago/AAL-3399-2020
OI ALPUENTE, MARÍA/0000-0002-9268-1178; Sapiña, Julia/0000-0003-2994-6986;
   Escobar, Santiago/0000-0002-3550-4781
FU TAILOR - EU Horizon 2020 research and innovation programme [952215];
   MCIN/AEI [RTI2018-094403-B-C32]; ERDF A way of making Europe;
   Generalitat Valenciana [PROMETEO/2019/098, APOSTD/2019/127]
FX This research was partially supported by TAILOR, a project funded by EU
   Horizon 2020 research and innovation programme under GA No 952215, grant
   RTI2018-094403-B-C32 funded by MCIN/AEI/10.13039/501100011033 and by
   "ERDF A way of making Europe", and by Generalitat Valenciana under grant
   PROMETEO/2019/098. Julia Sapi ~na has been supported by the Generalitat
   Valenciana APOSTD/2019/127 grant.
CR Aguirre L, 2014, LECT NOTES COMPUT SC, V8663, P80, DOI 10.1007/978-3-319-12904-4_4
   Albert E., 1999, Logic for Programming and Automated Reasoning. 6th International Conference, LPAR'99. Proceedings (Lecture Notes in Artificial Intelligence Vol.1705), P376
   Albert E., 1998, DSIC21298 U POL VAL
   Albert E., 2002, J FUNCTIONAL LOGIC P, V2002, P1
   Albert E, 2009, INFORM PROCESS LETT, V109, P879, DOI 10.1016/j.ipl.2009.04.016
   Alpuente M, 2020, MATH COMPUT SCI, V14, P591, DOI 10.1007/s11786-020-00455-3
   Alpuente M, 2020, J LOG ALGEBR METHODS, V110, DOI 10.1016/j.jlamp.2019.100501
   Alpuente M, 2019, J SYST SOFTWARE, V153, P64, DOI 10.1016/j.jss.2019.03.061
   Alpuente M, 2005, THEOR PRACT LOG PROG, V5, P273, DOI 10.1017/S1471068404002303
   Alpuente M, 2010, THEOR COMPUT SCI, V411, P3348, DOI 10.1016/j.tcs.2010.05.012
   Alpuente M, 1997, ACM SIGPLAN NOTICES, V32, P151, DOI 10.1145/258994.259015
   Alpuente M, 1998, ACM T PROGR LANG SYS, V20, P768, DOI 10.1145/291891.291896
   Alpuente M., 1998, ACM COMPUT SURV, V30
   Alpuente M., 2021, FESTSCHRIFT VOLUME H
   Alpuente M., 2022, J LOG ALGEB METHOD P, V124
   Alpuente M, 2022, ANN MATH ARTIF INTEL, V90, P499, DOI 10.1007/s10472-021-09771-1
   Alpuente M, 2020, FUND INFORM, V177, P297, DOI 10.3233/FI-2020-1991
   Alpuente M, 2019, THEOR PRACT LOG PROG, V19, P874, DOI 10.1017/S1471068419000243
   Alpuente M, 2019, LECT NOTES ARTIF INT, V11468, P171, DOI 10.1007/978-3-030-19570-0_11
   Alpuente M, 2016, J LOG ALGEBR METHODS, V85, P707, DOI 10.1016/j.jlamp.2016.03.001
   Alpuente M, 2014, INFORM COMPUT, V235, P98, DOI 10.1016/j.ic.2014.01.006
   Alpuente M, 2014, SCI COMPUT PROGRAM, V81, P79, DOI 10.1016/j.scico.2013.07.014
   Alpuente M, 2012, LECT NOTES COMPUT SC, V7180, P62, DOI 10.1007/978-3-642-28717-6_8
   Alpuente M, 2009, ELECTRON NOTES THEOR, V246, P27, DOI 10.1016/j.entcs.2009.07.013
   Alpuente M, 2009, THEOR COMPUT SCI, V410, P4608, DOI 10.1016/j.tcs.2009.07.037
   Alpuente M, 2009, LECT NOTES COMPUT SC, V5438, P24, DOI 10.1007/978-3-642-00515-2_3
   [Anonymous], 1979, 4 WORKSHOP AUTOMATED
   [Anonymous], 1993, Partial Evaluation and Automatic Program Generation
   Bae K., 2013, LIPICS, V21, P81
   Bae K, 2015, SCI COMPUT PROGRAM, V99, P193, DOI 10.1016/j.scico.2014.02.006
   Bouchard C, 2013, LECT NOTES COMPUT SC, V8152, P327, DOI 10.1007/978-3-642-40885-4_23
   BURSTALL RM, 1977, J ACM, V24, P44, DOI 10.1145/321992.321996
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Clavel M, 2007, All About Maude: A High-Performance Logical Framework
   Clavel M., 2020, Maude manual (version 3.0)
   Cook WR, 2011, ELECTRON P THEOR COM, P168, DOI 10.4204/EPTCS.66.8
   Cousot P., 1977, C RECORD 4 ANN ACM S, P238, DOI DOI 10.1145/512950.512973
   De Schreye D, 1999, J LOGIC PROGRAM, V41, P231, DOI 10.1016/S0743-1066(99)00030-8
   de Waal D. A., 1994, Automated Deduction - CADE-12. 12th International Conference on Automated Deduction. Proceedings, P207
   Dur?n F., 2020, J LOG ALGEBR METHODS, P110
   Durán F, 2008, LECT NOTES ARTIF INT, V5195, P313, DOI 10.1007/978-3-540-71070-7_27
   Durán F, 2020, J LOG ALGEBR METHODS, V111, DOI 10.1016/j.jlamp.2019.100513
   Escobar Santiago, 2014, Specification, Algebra, and Software. Essays Dedicated to Kokichi Futatsugi: LNCS 8373, P315, DOI 10.1007/978-3-642-54624-2_16
   Escobar S, 2007, LECT NOTES COMPUT SC, V4533, P153
   Escobar S, 2012, J LOGIC ALGEBR PROGR, V81, P898, DOI 10.1016/j.jlap.2012.01.002
   Escobar S, 2009, LECT NOTES COMPUT SC, V5705, P1, DOI 10.1007/978-3-642-03829-7_1
   GALLAGHER J, 1990, LOGIC PROGRAMM, P732, DOI 10.1007/BF03037167
   Gallagher J. P., 1993, Proceedings of the ACM SIGPLAN Symposium on Partial Evaluation and Semantics-Based Program Manipulation. PEPM'93, P88, DOI 10.1145/154630.154640
   Garavel H, 2018, LECT NOTES COMPUT SC, V11152, P1, DOI 10.1007/978-3-319-99840-4_1
   Hanus M, 1997, ACM SIGPLAN NOTICES, V32, P77, DOI 10.1145/251595.251602
   HANUS M, 1994, J LOGIC PROGRAM, V20, P583, DOI 10.1016/0743-1066(94)90034-5
   Hanus M., 2014, P 28 INT WORKSH CONS, V1335, P155
   Jorgensen J, 1997, LECT NOTES COMPUT SC, V1207, P59
   Leuschel M, 2002, LECT NOTES COMPUT SC, V2372, P91, DOI 10.1007/3-540-45607-4_6
   Leuschel M., 2000, Proceedings of the 2nd International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP '00), P268, DOI 10.1145/351268.351298
   Leuschel M, 1998, LECT NOTES COMPUT SC, V1503, P230
   LEUSCHEL M, 2006, P PEPM 2006, P88
   LLOYD JW, 1991, J LOGIC PROGRAM, V11, P217, DOI 10.1016/0743-1066(91)90027-M
   Lucas S, 2016, J LOG ALGEBR METHODS, V85, P67, DOI 10.1016/j.jlamp.2015.06.001
   MARTENS B, 1995, P ICLP 95, P597
   Martí-Oliet N, 2002, THEOR COMPUT SCI, V285, P121, DOI 10.1016/S0304-3975(01)00357-7
   Meadows C, 1996, J LOGIC PROGRAM, V26, P113, DOI 10.1016/0743-1066(95)00095-X
   Meier Simon, 2013, Computer Aided Verification. 25th International Conference, CAV 2013. Proceedings. LNCS 8044, P696, DOI 10.1007/978-3-642-39799-8_48
   Meseguer, 2020, J LOG ALGEBR METHODS, P110
   Meseguer J., 2007, Higher-Order and Symbolic Computation, V20, P123, DOI 10.1007/s10990-007-9000-6
   Meseguer Jose, 2021, Logic-Based Program Synthesis and Transformation 30th International Symposium, LOPSTR 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12561), P3, DOI 10.1007/978-3-030-68446-4_1
   MESEGUER J, 1992, THEOR COMPUT SCI, V96, P73, DOI 10.1016/0304-3975(92)90182-F
   MESEGUER J, 1992, LECT NOTES COMPUT SC, V632, P158, DOI 10.1007/BFb0013826
   Meseguer J, 2008, THEOR COMPUT SCI, V403, P239, DOI 10.1016/j.tcs.2008.04.040
   Meseguer J, 2016, COMM COM INF SC, V596, P3, DOI 10.1007/978-3-319-29510-7_1
   Ölveczky PC, 2008, LECT NOTES COMPUT SC, V4963, P332, DOI 10.1007/978-3-540-78800-3_23
   Peemaeller, 2017, THESIS U KIEL GERMAN
   Plotkin G. D., 1970, Machine Intelligence, V5, P153
   Rodríguez A, 2019, J OBJECT TECHNOL, V18, DOI 10.5381/jot.2019.18.2.a4
   Rosu G, 2017, NATO SCI PEAC SECUR, V50, P186, DOI 10.3233/978-1-61499-810-5-186
   Serbanuta TF, 2006, LECT NOTES COMPUT SC, V4098, P19
   SLAGLE JR, 1974, J ACM, V21, P622, DOI 10.1145/321850.321859
   Sorensen M. H., 1994, Programming Languages and Systems - ESOP '94. 5th European Symposium on Programming. Proceedings, P485
   Viry P, 2002, THEOR COMPUT SCI, V285, P487, DOI 10.1016/S0304-3975(01)00366-8
NR 79
TC 0
Z9 0
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2022
VL 22
IS 3
BP 444
EP 495
AR PII S1471068421000600
DI 10.1017/S1471068421000600
EA FEB 2022
PG 52
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 6N1DF
UT WOS:000754090800001
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Arias, J
   Carro, M
   Chen, Z
   Gupta, G
AF Arias, Joaquin
   Carro, Manuel
   Chen, Zhuo
   Gupta, Gopal
TI Modeling and Reasoning in Event Calculus using Goal-Directed Constraint
   Answer Set Programming
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE event calculus; constraints; ASP; commonsense reasoning
ID STABLE MODELS
AB Automated commonsense reasoning (CR) is essential for building human-like AI systems featuring, for example, explainable AI. Event calculus (EC) is a family of formalisms that model CR with a sound, logical basis. Previous attempts to mechanize reasoning using EC faced difficulties in the treatment of the continuous change in dense domains (e.g. time and other physical quantities), constraints among variables, default negation, and the uniform application of different inference methods, among others. We propose the use of s(CASP), a query-driven, top-down execution model for Predicate Answer Set Programming with Constraints, to model and reason using EC. We show how EC scenarios can be naturally and directly encoded in s(CASP) and how it enables deductive and abductive reasoning tasks in domains featuring constraints involving both dense time and dense fluents.
C1 [Arias, Joaquin] Univ Rey Juan Carlos, CETINIA, Madrid, Spain.
   [Carro, Manuel] IMDEA Software Inst, Madrid, Spain.
   [Carro, Manuel] Univ Politecn Madrid, Madrid, Spain.
   [Chen, Zhuo; Gupta, Gopal] Univ Texas Dallas, Richardson, TX USA.
C3 Universidad Rey Juan Carlos; IMDEA Software Institute; Universidad
   Politecnica de Madrid; University of Texas System; University of Texas
   Dallas
RP Arias, J (corresponding author), Univ Rey Juan Carlos, CETINIA, Madrid, Spain.
EM joaquin.arias@urjc.es; manuel.carro@imdea.org; zhuo.chen@utdallas.edu;
   gupta@utdallas.edu
RI Carro, Manuel/AAE-9653-2021
OI Carro, Manuel/0000-0001-5199-3135; Arias, Joaquin/0000-0003-4148-311X
FU EIT Digital; MICINN [RTI2018-095390-B-C33, PID2019-108528RB-C21
   ProCode]; Comunidad de Madrid [S2018/TCS-4339 BLOQUES-CM]; EIE Funds of
   the European Union; US NSF [IIS 1718945, IIS 1910131, IIP 1916206]
FX Work partially supported by EIT Digital, MICINN projects
   RTI2018-095390-B-C33 InEDGEMo-bility (MCIU/AEI/FEDER, UE),
   PID2019-108528RB-C21 ProCode, Comunidad de Madrid project S2018/TCS-4339
   BLOQUES-CM co-funded by EIE Funds of the European Union, US NSF Grants
   IIS 1718945, IIS 1910131, IIP 1916206.
CR [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], 2014, Commonsense reasoning: an event calculus based approach
   ARIAS J., 2019, PREPROC 29 INT S LOG
   Arias J, 2019, THEOR PRACT LOG PROG, V19, P412, DOI 10.1017/S1471068418000571
   Arias J, 2018, THEOR PRACT LOG PROG, V18, P337, DOI 10.1017/S1471068418000285
   Bartholomew M, 2014, LECT NOTES ARTIF INT, V8761, P529, DOI 10.1007/978-3-319-11558-0_37
   Chittaro L, 1996, COMPUT INTELL, V12, P359, DOI 10.1111/j.1467-8640.1996.tb00267.x
   Clark K. L., 1978, Logic and data bases, P293
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Dovier A, 2000, INFORM PROCESS LETT, V74, P147, DOI 10.1016/S0020-0190(00)00046-6
   Erdem E, 2003, THEOR PRACT LOG PROG, V3, P499, DOI 10.1017/S1471068403001765
   Ferraris P, 2011, ARTIF INTELL, V175, P236, DOI 10.1016/j.artint.2010.04.011
   Gebser M, 2014, Arxiv, DOI arXiv:1405.3694
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Gupta G, 2007, LECT NOTES COMPUT SC, V4670, P27, DOI 10.1007/978-3-540-74610-2_4
   Hall B., 2021, PROC 8 WORKSHOP HORN
   Hermenegildo MV, 2012, THEOR PRACT LOG PROG, V12, P219, DOI 10.1017/S1471068411000457
   HOLZBAUR, 1995, TR9509 AUSTR RES I A
   KOWALSKI R, 1986, NEW GENERAT COMPUT, V4, P67, DOI 10.1007/BF03037383
   Lee J., 2013, Proceedings of the Twenty-Third international joint conference on Artificial Intelligence, P990
   Lee J, 2012, J ARTIF INTELL RES, V43, P571, DOI 10.1613/jair.3489
   Lifschitz V, 1999, LOGIC PROGRAMM, P23
   Lifschitz V., 1985, P IJCAI 85, P121
   Lifschitz V., 2001, ACM Transactions on Computational Logic, V2, P526, DOI DOI 10.1145/383779.383783
   Marple K., 2012, Proceedings of the 14th symposium on Principles and practice of declarative programming, PPDP '12, P35, DOI DOI 10.1145/2370776.2370782
   Marple K, 2017, Arxiv, DOI arXiv:1709.00501
   Marple K, 2014, THEOR PRACT LOG PROG, V14, P415, DOI 10.1017/S1471068414000118
   Marriott K., 1998, PROGRAMMING CONSTRAI
   Marriott K, 2006, FOUND ARTIF INTELL, P409
   MCCARTHY J, 1980, ARTIF INTELL, V13, P27, DOI 10.1016/0004-3702(80)90011-9
   Mellarkod V. S., 2008, INTEGRATING ANSWER S
   Mellarkod VS, 2008, ANN MATH ARTIF INTEL, V53, P251, DOI 10.1007/s10472-009-9116-y
   Mueller E. T, 2008, DISCRETE EVENT CALCU
   Mueller ET, 2008, HDB KNOWLEDGE REPRES, V3, P671
   Shanahan M, 2000, J LOGIC PROGRAM, V44, P207, DOI 10.1016/S0743-1066(99)00077-1
   Shanahan M., 1999, Artificial intelligence today. Recent trends and developments, P409
   STUCKEY PJ, 1991, SIXTH ANNUAL IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE, P328
   Wissner-Gress AD, 2020, COMPUT CARDIOL CONF, DOI 10.22489/CinC.2020.287
NR 38
TC 3
Z9 3
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2022
VL 22
IS 1
BP 51
EP 80
DI 10.1017/S1471068421000156
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 6M8ZH
UT WOS:000889151500003
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Fichte, JK
   Hecher, M
   Thier, P
   Woltran, S
AF Fichte, Johannes. K. K.
   Hecher, Markus
   Thier, Patrick
   Woltran, Stefan
TI Exploiting Database Management Systems and Treewidth for Counting
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE dynamic programming; parameterized algorithmics; bounded treewidth;
   database systems; SQL; relational algebra; counting
ID TREE; DECOMPOSITIONS; ALGORITHMS; FRAMEWORK; GRAPHS; MODEL; SAT
AB Bounded treewidth is one of the most cited combinatorial invariants in the literature. It was also applied for solving several counting problems efficiently. A canonical counting problem is #Sat, which asks to count the satisfying assignments of a Boolean formula. Recent work shows that benchmarking instances for #Sat often have reasonably small treewidth. This paper deals with counting problems for instances of small treewidth. We introduce a general framework to solve counting questions based on state-of-the-art database management systems (DBMSs). Our framework takes explicitly advantage of small treewidth by solving instances using dynamic programming (DP) on tree decompositions (TD). Therefore, we implement the concept of DP into a DBMS (PostgreSQL), since DP algorithms are already often given in terms of table manipulations in theory. This allows for elegant specifications of DP algorithms and the use of SQL to manipulate records and tables, which gives us a natural approach to bring DP algorithms into practice. To the best of our knowledge, we present the first approach to employ a DBMS for algorithms on TDs. A key advantage of our approach is that DBMSs naturally allow for dealing with huge tables with a limited amount of main memory (RAM).
C1 [Fichte, Johannes. K. K.] Univ Calif Berkeley, Berkeley, CA 94720 USA.
   [Hecher, Markus; Thier, Patrick; Woltran, Stefan] TU Wien, Vienna, Austria.
C3 University of California System; University of California Berkeley;
   Technische Universitat Wien
RP Fichte, JK (corresponding author), Univ Calif Berkeley, Berkeley, CA 94720 USA.
EM johannes.fichte@berkeley.edu; hecher@dbai.tuwien.ac.at;
   thier@dbai.tuwien.ac.at; woltran@dbai.tuwien.ac.at
OI Woltran, Stefan/0000-0003-1594-8972
FU Austrian Science Fund (FWF) [Y698, P32830]; Vienna Science and
   Technology Fund [WWTFICT19-065]; Austrian Science Fund (FWF) [P32830]
   Funding Source: Austrian Science Fund (FWF)
FX Part of this work was done while Johannes K. Fichte was visiting the
   Simons Institutefor the Theory of Computing. Main work was carried out
   while he was a PostDoc at TUDresden. The work has been supported by the
   Austrian Science Fund (FWF), Grants Y698 and P32830, as well as the
   Vienna Science and Technology Fund, Grant WWTFICT19-065. Markus Hecher
   is also affiliated with the University of Potsdam, Germany.
CR Abseher M, 2017, LECT NOTES COMPUT SC, V10335, P376, DOI 10.1007/978-3-319-59776-8_30
   [Anonymous], 2009, Database Systems: The Complete Book
   [Anonymous], 1989, Principles of Database and Knowledge-Base Systems
   Bacchus F, 2003, ANN IEEE SYMP FOUND, P340, DOI 10.1109/SFCS.2003.1238208
   Bannach M, 2019, ALGORITHMS, V12, DOI 10.3390/a12080172
   Bliem B, 2016, FUND INFORM, V147, P27, DOI 10.3233/FI-2016-1397
   Bodlaender HL, 2008, COMPUT J, V51, P255, DOI 10.1093/comjnl/bxm037
   BODLAENDER HL, 1988, LECT NOTES COMPUT SC, V317, P105
   Bomanson J, 2016, FUND INFORM, V147, P63, DOI 10.3233/FI-2016-1398
   Burchard J, 2016, IEEE INT C CL COMP, P326, DOI 10.1109/CLUSTER.2016.20
   Burchard J, 2015, LECT NOTES COMPUT SC, V9340, P46, DOI 10.1007/978-3-319-24318-4_5
   Calkins H, 2017, J ARRYTHM, V33, P369, DOI 10.1016/j.joa.2017.08.001
   Chakraborty S., 2016, P INT JOINT C ART IN
   Chakraborty S, 2014, AAAI CONF ARTIF INTE, P1722
   Charwat G, 2019, FUND INFORM, V167, P59, DOI 10.3233/FI-2019-1810
   Choi A, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2861
   Clark K. L., 1978, Logic and data bases, P293
   CODD EF, 1970, COMMUN ACM, V13, P377, DOI 10.1145/357980.358007
   Cygan Marek, 2015, Parameterized Algorithms
   Darwiche A, 2004, FRONT ARTIF INTEL AP, V110, P328
   Darwiche A., 2011, IJCAI, DOI DOI 10.5591/978-1-57735-516-8/IJCAI11-143
   Dechter R, 1999, ARTIF INTELL, V113, P41, DOI 10.1016/S0004-3702(99)00059-4
   Diestel R., 2017, Grad. Texts in Math., V173, DOI DOI 10.1007/978-3-662-53622-3
   Domshlak C, 2007, J ARTIF INTELL RES, V30, P565, DOI 10.1613/jair.2289
   Doubilet P., 1972, Probability theory, VII, P267
   Dudek Jeffrey M., 2020, Principles and Practice of Constraint Programming. 26th International Conference, CP 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12333), P211, DOI 10.1007/978-3-030-58475-7_13
   Duenas-Osorio L, 2017, AAAI CONF ARTIF INTE, P4488
   Durand A, 2015, THEOR COMPUT SYST, V57, P1202, DOI 10.1007/s00224-014-9543-y
   Elmasri R., 2016, FUNDAMENTALS DATABAS
   Ermon S., 2012, P UAI, P255
   Fichte Johannes K., 2020, Principles and Practice of Constraint Programming. 26th International Conference, CP 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12333), P304, DOI 10.1007/978-3-030-58475-7_18
   Fichte J. K., 2020, LECT NOTES COMPUTER
   Fichte J. K., P 35RD AAAI C ARTIFI
   Fichte J. K., 2018, LEIBNIZ INT P INFORM, V112
   Fichte J. K., 2020, ARXIV
   Fichte JK, 2020, IEEE S LOG, P410, DOI 10.1145/3373718.3394756
   Fichte JK, 2020, LECT NOTES COMPUT SC, V12007, P151, DOI 10.1007/978-3-030-39197-3_10
   Fichte JK, 2019, LECT NOTES COMPUT SC, V11802, P491, DOI 10.1007/978-3-030-30048-7_29
   Fichte JK, 2019, AAAI CONF ARTIF INTE, P2827
   Fichte Johannes K, 2018, Zenodo, DOI 10.5281/zenodo.1299752
   Fichte JK, 2018, LECT NOTES COMPUT SC, V10929, P165, DOI 10.1007/978-3-319-94144-8_11
   Fichte JK, 2018, LECT NOTES COMPUT SC, V10792, P130, DOI 10.1007/978-3-319-77313-1_10
   Gabriel E, 2004, LECT NOTES COMPUT SC, V3241, P97
   Gomes CP, 2009, FRONT ARTIF INTEL AP, V185, P633, DOI 10.3233/978-1-58603-929-5-633
   Gottlob G., 2006, P 21 NATL C ARTIFICI, P250
   Gottlob G, 2008, COMPUT J, V51, P303, DOI 10.1093/comjnl/bxm056
   Gottlob Georg, 2007, AAAI, P1626
   Grohe M, 2007, J ACM, V54, DOI 10.1145/1206035.1206036
   Hecher M, 2020, AAAI CONF ARTIF INTE, V34, P2830
   Hecher M, 2020, LECT NOTES COMPUT SC, V12178, P343, DOI 10.1007/978-3-030-51825-7_25
   Janhunen T., 2006, J APPL NONCLASSICAL, V1-2, P35, DOI DOI 10.3166/JANCL.16.35-86
   Jégou P, 2014, LECT NOTES COMPUT SC, V8656, P407, DOI 10.1007/978-3-319-10428-7_31
   Joshi Chaitanya K., 2021, LEIBNIZ INT P INFORM, V210, DOI 10.4230/LIPIcs.CP.2021.33
   Khamis MA, 2016, PODS'16: PROCEEDINGS OF THE 35TH ACM SIGMOD-SIGACT-SIGAI SYMPOSIUM ON PRINCIPLES OF DATABASE SYSTEMS, P13, DOI 10.1145/2902251.2902280
   Kleine Buning H., 1999, PROPOSITIONAL LOGIC
   Kloks T., 1994, Treewidth. Computations and approximations, DOI 10.1007/BFb0045375
   Koriche F., 2013, PROC INT JOINT C ART
   Lagniez JM, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1331
   Lagniez JM, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P667
   Lagniez JM, 2014, AAAI CONF ARTIF INTE, P2688
   Langer A., 2012, P ALENEX, P55, DOI DOI 10.1137/1.9781611972924.5
   Liu J, 2006, IEEE T NEURAL NETWOR, V17, P533, DOI 10.1109/TNN.2005.860887
   Muise Christian, 2012, Advances in Artificial Intelligence. Proceedings 25th Canadian Conference on Artificial Intelligence, Canadian AI 2012, P356, DOI 10.1007/978-3-642-30353-1_36
   Oztok U, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P3141
   Pan GQ, 2006, IEEE S LOG, P27
   Peng B, 2021, JAMIA OPEN, V4, DOI [10.1093/jamiaopen/ooaa074, 10.1155/2014/139030, 10.1038/s41598-021-90564-1]
   PostgreSQL Global Development Group, 2020, POSTGRESQL DOC 12
   Roth D, 1996, ARTIF INTELL, V82, P273, DOI 10.1016/0004-3702(94)00092-1
   Samer M, 2010, J DISCRET ALGORITHMS, V8, P50, DOI 10.1016/j.jda.2009.06.002
   Sang T., 2005, P 10 NAT C ART INT 1, P475
   Sang T., 2004, P 7 INT C THEORY APP, P1
   Sharma S, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1169
   Strasser B, 2017, Arxiv, DOI arXiv:1709.08949
   Thurley M, 2006, LECT NOTES COMPUT SC, V4121, P424
   TODA S, 1991, SIAM J COMPUT, V20, P865, DOI 10.1137/0220053
   Xue Y., 2012, P 26 AAAI C ART INT, P842
NR 76
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2022
VL 22
IS 1
BP 128
EP 157
AR PII S147106842100003X
DI 10.1017/S147106842100003X
PG 30
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 6M8ZH
UT WOS:000889151500006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lehtonen, T
   Wallner, JP
   Järvisalo, M
AF Lehtonen, Tuomo
   Wallner, Johannes P.
   Jarvisalo, Matti
TI Harnessing Incremental Answer Set Solving for Reasoning in
   Assumption-Based Argumentation
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer set programming; incremental answer set solving; assumption-based
   argumentation; structured argumentation; algorithms; experimental
   evaluation
AB Assumption-based argumentation (ABA) is a central structured argumentation formalism. As shown recently, answer set programming (ASP) enables efficiently solving NP-hard reasoning tasks of ABA in practice, in particular in the commonly studied logic programming fragment of ABA. In this work, we harness recent advances in incremental ASP solving for developing effective algorithms for reasoning tasks in the logic programming fragment of ABA that are presumably hard for the second level of the polynomial hierarchy, including skeptical reasoning under preferred semantics as well as preferential reasoning. In particular, we develop non-trivial counterexample-guided abstraction refinement procedures based on incremental ASP solving for these tasks. We also show empirically that the procedures are significantly more effective than previously proposed algorithms for the tasks.
C1 [Lehtonen, Tuomo; Jarvisalo, Matti] Univ Helsinki, Helsinki, Finland.
   [Wallner, Johannes P.] Graz Univ Technol, Graz, Austria.
C3 University of Helsinki; Graz University of Technology
RP Lehtonen, T (corresponding author), Univ Helsinki, Helsinki, Finland.
EM tuomo.lehtonen@helsinki.fi; wallner@ist.tugraz.at;
   matti.jarvisalo@helsinki.fi
OI Lehtonen, Tuomo/0000-0001-6117-4854
FU Academy of Finland [322869]; University of Helsinki Doctoral Programme
   in Computer Science DoCS; Austrian Science Fund (FWF) [P30168-N31,
   I2854]; Austrian Science Fund (FWF) [I2854] Funding Source: Austrian
   Science Fund (FWF)
FX Work financially supported by Academy of Finland (grant 322869),
   University of Helsinki Doctoral Programme in Computer Science DoCS, and
   the Austrian Science Fund (FWF): P30168-N31 and I2854.
CR Baroni P., 2018, Handbook of Formal Argumentation, V1
   Besnard P., 2018, Handbook of Formal Argumentation, P437
   Bondarenko A, 1997, ARTIF INTELL, V93, P63, DOI 10.1016/S0004-3702(97)00015-5
   Brewka G, 2015, AAAI CONF ARTIF INTE, P1467
   Caminada M, 2017, J ARTIF INTELL RES, V60, P779, DOI 10.1613/jair.5581
   Cerutti Federico, 2018, HDB FORMAL ARGUMENTA, P689
   Clarke E, 2003, J ACM, V50, P752, DOI 10.1145/876638.876643
   Clarke EA, 2004, IEEE T COMPUT AID D, V23, P1113, DOI 10.1109/TCAD.2004.829807
   Craven R, 2016, ARTIF INTELL, V233, P1, DOI 10.1016/j.artint.2015.12.004
   Craven Robert, 2013, LECT NOTES COMPUTER, V8306, P46
   Cyras K., 2018, Handbook of Formal Argumentation, P365
   Cyras K., 2016, PROC NMR, P25
   Cyras K., 2017, THESIS IMPERIAL COLL
   Cyras K, 2019, AAMAS '19: PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS AND MULTIAGENT SYSTEMS, P1731
   Cyras K, 2016, FIFTEENTH INTERNATIONAL CONFERENCE ON THE PRINCIPLES OF KNOWLEDGE REPRESENTATION AND REASONING, P553
   Dimopoulos Y, 2002, ARTIF INTELL, V141, P57, DOI 10.1016/S0004-3702(02)00245-X
   Dung PM, 2006, ARTIF INTELL, V170, P114, DOI 10.1016/j.artint.2005.07.002
   Fan XY, 2016, AAMAS'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS & MULTIAGENT SYSTEMS, P260
   Fan XY, 2014, AAMAS'14: PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON AUTONOMOUS AGENTS & MULTIAGENT SYSTEMS, P533
   Gaertner D, 2007, PROC NMR, P80
   Garcia A.J., 2018, Handbook of Formal Argumentation, P409
   Gebser M., 2016, OASICS SCHLOSS DAGST, V2, P15
   Gebser M, 2011, AI COMMUN, V24, P107, DOI 10.3233/AIC-2011-0491
   Gelfound M., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1070
   Kaminski R., 2020, ABS200806692 CORR
   Lehtonen Tuomo, 2021, Journal of Artificial Intelligence Research, V71, P265
   Lehtonen T., 2021, ABS210804192 CORR
   Lehtonen T, 2017, LECT NOTES ARTIF INT, V10369, P57, DOI 10.1007/978-3-319-61581-3_6
   Modgil S., 2018, Handbook of Formal Argumentation, P287
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Dung PH, 2010, FRONT ARTIF INTEL AP, V216, P183, DOI 10.3233/978-1-60750-619-5-183
   Toni F, 2014, ARGUM COMPUT, V5, P89, DOI 10.1080/19462166.2013.869878
   Toni F, 2013, ARTIF INTELL, V195, P1, DOI 10.1016/j.artint.2012.09.010
NR 33
TC 1
Z9 1
U1 0
U2 0
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD NOV
PY 2021
VL 21
IS 6
SI SI
BP 717
EP 734
DI 10.1017/S1471068421000296
PG 18
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA 4P3LH
UT WOS:000855297800003
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Julián-Iranzo, P
   Sáenz-Pérez, F
AF Julian-Iranzo, Pascual
   Saenz-Perez, Fernando
TI Implementing WordNet Measures of Lexical Semantic Similarity in a Fuzzy
   Logic Programming System
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE fuzzy logic programming; WordNet; proximity equations; system
   implementation
ID DATABASE
AB This paper introduces techniques to integrate WordNet into a Fuzzy Logic Programming system. Since WordNet relates words but does not give graded information on the relation between them, we have implemented standard similarity measures and new directives allowing the proximity equations linking two words to be generated with an approximation degree. Proximity equations are the key syntactic structures which, in addition to a weak unification algorithm, make a flexible query-answering process possible in this kind of programming language. This addition widens the scope of Fuzzy Logic Programming, allowing certain forms of lexical reasoning, and reinforcing Natural Language Processing (NLP) applications.
C1 [Julian-Iranzo, Pascual] Univ Castilla La Mancha, Dept Informat Technol & Syst, Ciudad Real 13071, Spain.
   [Saenz-Perez, Fernando] Univ Complutense Madrid, Fac Comp Sci, Madrid 28040, Spain.
C3 Universidad de Castilla-La Mancha; Complutense University of Madrid
RP Julián-Iranzo, P (corresponding author), Univ Castilla La Mancha, Dept Informat Technol & Syst, Ciudad Real 13071, Spain.
EM Pascual.Julian@uclm.es; fernan@sip.ucm.es
RI Saenz-Perez, Fernando/L-2301-2017
OI Saenz-Perez, Fernando/0000-0001-6075-4398; Julian-Iranzo,
   Pascual/0000-0002-6482-3220
FU State Research Agency (AEI) of the Spanish Ministry of Science and
   Innovation [PID2019-104735RB-C42]; Spanish Ministry of Economy and
   Competitiveness [TIN2016-76843-C4-2-R, TIN2017-86217-R]; Comunidad de
   Madrid [S2018/TCS-4339]; EIE Funds of the European Union
FX Work is partially funded by the State Research Agency (AEI) of the
   Spanish Ministry of Science and Innovation under grant
   PID2019-104735RB-C42 (SAFER), by the Spanish Ministry of Economy and
   Competitiveness, under the grants TIN2016-76843-C4-2-R (MERINET),
   TIN2017-86217-R (CAVIART-2), and by the Comunidad de Madrid, under the
   grant S2018/TCS-4339 (BLOQUES-CM), cofunded by EIE Funds of the European
   Union.
CR al-Sarhan S, 2020, K FAISAL C R ISLAM S, P1
   Allahyari M., 2017, ABS170702919 CORR
   [Anonymous], STANDARD CORPUS PRES
   [Anonymous], 1997, P 10 RES COMPUTATION
   [Anonymous], 1993, Proceedings of the 3rd DARPA Worshop on Human Language Technology
   Baeza-Yates R A, 2011, MODERN INFORM RETRIE
   Budanitsky A, 2006, COMPUT LINGUIST, V32, P13, DOI 10.1162/coli.2006.32.1.13
   Çakir E, 2019, IJCCI: PROCEEDINGS OF THE 11TH INTERNATIONAL JOINT CONFERENCE ON COMPUTATIONAL INTELLIGENCE, P367, DOI 10.5220/0008397503670374
   Çakir E, 2020, 2020 10TH ANNUAL COMPUTING AND COMMUNICATION WORKSHOP AND CONFERENCE (CCWC), P121, DOI [10.1109/CCWC47524.2020.9031187, 10.1109/ccwc47524.2020.9031187]
   Fellbaum C., 2006, Encyclopedia of language linguistics, V14, P665
   Fellbaum C., 1998, WORDNET ELECT LEXICA, DOI DOI 10.7551/MITPRESS/7287.001.0001
   Fellbaum C., 2006, WORDNET FILE FORMATS
   Fontana F.A., 1999, P ACM SAC, P260
   Fontana FA, 2002, INT J INTELL SYST, V17, P853, DOI 10.1002/int.10067
   Julian-Iranzo P., 2019, 11 C EUROPEAN SOC FU, P1
   Julian-Iranzo P., 2017, INT C FUZZY SYSTEMS, P1
   Julian-Iranzo P., 2018, 2018 IEEE INT C FUZZ, P1
   Julián-Iranzo P, 2018, IEEE T FUZZY SYST, V26, P2634, DOI 10.1109/TFUZZ.2018.2806923
   Julián-Iranzo P, 2017, FUZZY SET SYST, V317, P1, DOI 10.1016/j.fss.2016.12.016
   Julián-Iranzo P, 2015, FUZZY SET SYST, V262, P21, DOI 10.1016/j.fss.2014.07.006
   Leacock C, 1998, LANG SPEECH & COMMUN, P265
   LEE RCT, 1972, J ACM, V19, P109, DOI 10.1145/321679.321688
   Lin D, 1998, P 15 INT C MACH LEAR, V98, P296
   Loia V, 2001, 10TH IEEE INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS, VOLS 1-3, P650, DOI 10.1109/FUZZ.2001.1009038
   MARTELLI A, 1982, ACM T PROGR LANG SYS, V4, P258, DOI 10.1145/357162.357169
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Pedersen T, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P1024
   Resnik P, 1995, INT JOINT CONF ARTIF, P448
   Romero FP, 2013, LANG RESOUR EVAL, V47, P151, DOI 10.1007/s10579-012-9203-2
   Rubio-Manzano C, 2016, INT J HUM-COMPUT ST, V95, P27, DOI 10.1016/j.ijhcs.2016.07.002
   Rubio-Manzano C, 2015, J INTELL FUZZY SYST, V29, P1671, DOI 10.3233/IFS-151645
   Rubio-Manzano C, 2014, J INTELL FUZZY SYST, V26, P1503, DOI 10.3233/IFS-130834
   Santus E, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 2, P552
   Serrano-Guerrero J, 2015, INFORM SCIENCES, V311, P18, DOI 10.1016/j.ins.2015.03.040
   Sessa MI, 2002, THEOR COMPUT SCI, V275, P389, DOI 10.1016/S0304-3975(01)00188-8
   VANEMDEN MH, 1976, J ACM, V23, P733, DOI 10.1145/321978.321991
   WU ZB, 1994, 32ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P133
   ZADEH LA, 1965, INFORM CONTROL, V8, P338, DOI 10.1016/S0019-9958(65)90241-X
NR 38
TC 4
Z9 4
U1 3
U2 6
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAR
PY 2021
VL 21
IS 2
BP 264
EP 282
AR PII S1471068421000028
DI 10.1017/S1471068421000028
PG 19
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA TH4CP
UT WOS:000672039800005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Maher, MJ
   Tachmazidis, I
   Antoniou, G
   Wade, S
   Cheng, L
AF Maher, Michael J.
   Tachmazidis, Ilias
   Antoniou, Grigoris
   Wade, Stephen
   Cheng, Long
TI Rethinking Defeasible Reasoning: A Scalable Approach
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE defeasible reasoning; parallel peasoning; scalability
ID WELL-FOUNDED SEMANTICS; RELATIVE EXPRESSIVENESS; LOGIC
AB Recent technological advances have led to unprecedented amounts of generated data that originate from the Web, sensor networks, and social media. Analytics in terms of defeasible reasoning - for example, for decision making - could provide richer knowledge of the underlying domain. Traditionally, defeasible reasoning has focused on complex knowledge structures over small to medium amounts of data, but recent research efforts have attempted to parallelize the reasoning process over theories with large numbers of facts. Such work has shown that traditional defeasible logics come with overheads that limit scalability. In this work, we design a new logic for defeasible reasoning, thus ensuring scalability by design. We establish several properties of the logic, including its relation to existing defeasible logics. Our experimental results indicate that our approach is indeed scalable and defeasible reasoning can be applied to billions of facts.
C1 [Maher, Michael J.] Reasoning Res Inst, Canberra, ACT, Australia.
   [Tachmazidis, Ilias; Antoniou, Grigoris; Wade, Stephen] Univ Huddersfield, Huddersfield, W Yorkshire, England.
   [Cheng, Long] Dublin City Univ, Dublin, Ireland.
C3 University of Huddersfield; Dublin City University
RP Maher, MJ (corresponding author), Reasoning Res Inst, Canberra, ACT, Australia.
EM michael.maher@reasoning.org.au; i.tachmazidis@hud.ac.uk;
   g.antoniou@hud.ac.uk; s.j.wade@hud.ac.uk; long.cheng@dcu.ie
RI Cheng, Long/ADJ-1122-2022
OI Cheng, Long/0000-0003-1638-059X
CR [Anonymous], 2010, Perspectives in Logic
   Antoniou G, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P405
   Antoniou G., 2001, ACM T COMPUT LOG, V2, P255, DOI [DOI 10.1145/371316.371517, 10.1145/371316.371517]
   ANTONIOU G, 1999, P AUSTR C INF SYST, P20
   Antoniou G, 2018, KNOWL ENG REV, V33, DOI 10.1017/S0269888918000255
   Armbrust M, 2015, SIGMOD'15: PROCEEDINGS OF THE 2015 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1383, DOI 10.1145/2723372.2742797
   Billington D, 2010, ACM T COMPUT LOG, V12, DOI 10.1145/1838552.1838558
   Cheng L., 2019, IEEE T SERVICES COMP
   Condie T, 2018, THEOR PRACT LOG PROG, V18, P806, DOI 10.1017/S1471068418000418
   Dantsin E, 2001, ACM COMPUT SURV, V33, P374, DOI 10.1145/502807.502810
   Dowling W. F., 1984, Journal of Logic Programming, V1, P267, DOI 10.1016/0743-1066(84)90014-1
   Goodman EL, 2011, LECT NOTES COMPUT SC, V6644, P31, DOI 10.1007/978-3-642-21064-8_3
   Governatori Guido, 2009, International Journal of Business Process Integration and Management, V4, P187, DOI 10.1504/IJBPIM.2009.030985
   Governatori G, 2008, AUTON AGENT MULTI-AG, V17, P36, DOI 10.1007/s10458-008-9030-4
   Governatori G, 2006, IEEE INT ENTERP DIST, P221
   Governatori G, 2017, THEOR PRACT LOG PROG, V17, P819, DOI 10.1017/S1471068417000266
   Governatori G, 2013, J PHILOS LOGIC, V42, P799, DOI 10.1007/s10992-013-9295-1
   Grosof B. N., 1999, P 1 ACM C EL COMM, P68
   Hashmi M, 2018, KNOWL INF SYST, V57, P79, DOI 10.1007/s10115-017-1142-1
   Heino Norman, 2012, The Semantic Web. 11th International Semantic Web Conference (ISWC 2012). Proceedings, P133, DOI 10.1007/978-3-642-35176-1_9
   Islam MB, 2018, ARTIF INTELL LAW, V26, P315, DOI 10.1007/s10506-018-9218-0
   Kim JM, 2015, INT CONF BIG DATA, P79, DOI 10.1109/35021BIGCOMP.2015.7072815
   Leone N, 2019, LECT NOTES ARTIF INT, V11481, P312, DOI 10.1007/978-3-030-20528-7_23
   Liu C, 2011, LECT NOTES COMPUT SC, V7031, P405, DOI 10.1007/978-3-642-25073-6_26
   Maher MJ, 2013, THEOR PRACT LOG PROG, V13, P579, DOI 10.1017/S1471068413000367
   Maher MJ, 2012, THEOR PRACT LOG PROG, V12, P793, DOI 10.1017/S1471068412000294
   Maher MJ, 2001, THEOR PRACT LOG PROG, V1, P691, DOI 10.1017/S1471068401001168
   Maher MJ, 1998, LECT NOTES ARTIF INT, V1502, P215
   Martinez-Angeles C.A., 2013, DECLARATIVE PROGRAMM, P152
   Mutharaju R, 2015, LECT NOTES COMPUT SC, V9088, P88, DOI 10.1007/978-3-319-18818-8_6
   Oren E, 2009, J WEB SEMANT, V7, P305, DOI 10.1016/j.websem.2009.09.002
   PRAKKEN H, 1997, LOGICAL TOOLS MODELL
   Skylogiannis T, 2007, DATA KNOWL ENG, V63, P362, DOI 10.1016/j.datak.2007.03.004
   Tachmazidis Ilias, 2013, Theory, Practice, and Applications of Rules on the Web. 7th International Symposium, RuleML 2013. Proceedings. LNCS 8035, P188, DOI 10.1007/978-3-642-39617-5_18
   Tachmazidis I., 2015, THESIS
   Tachmazidis I, 2012, PRINCIPLES KNOWLEDGE
   Tachmazidis I, 2012, FRONT ARTIF INTEL AP, V242, P738, DOI 10.3233/978-1-61499-098-7-738
   Tachmazidis I, 2014, THEOR PRACT LOG PROG, V14, P445, DOI 10.1017/S1471068414000131
   Urbani J, 2012, J WEB SEMANT, V10, P59, DOI 10.1016/j.websem.2011.05.004
   VANGELDER A, 1991, J ACM, V38, P620, DOI 10.1145/116825.116838
   Zhou Z, 2013, P WL4AI, P87
NR 41
TC 4
Z9 4
U1 0
U2 3
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JUL
PY 2020
VL 20
IS 4
BP 552
EP 586
AR PII S1471068420000010
DI 10.1017/S1471068420000010
PG 35
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA OA1TI
UT WOS:000577576500004
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Oetsch, J
   Pührer, J
   Tompits, H
AF Oetsch, Johannes
   Puehrer, Joerg
   Tompits, Hans
TI Stepwise debugging of answer-set programs
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE answer-set programming; debugging; stepping; program analysis
ID STABLE MODEL SEMANTICS; LOGIC PROGRAMS; KNOWLEDGE-REPRESENTATION;
   COMPLEXITY; SOLVERS; SUPPORT; SYSTEM
AB We introduce a stepping methodology for answer-set programming (ASP) that allows for debugging answer-set programs and is based on the stepwise application of rules. Similar to debugging in imperative languages, where the behaviour of a program is observed during a step-by-step execution, stepping for ASP allows for observing the effects that rule applications have in the computation of an answer set. While the approach is inspired from debugging in imperative programming, it is conceptually different to stepping in other paradigms due to non-determinism and declarativity that are inherent to ASP. In particular, unlike statements in an imperative program that are executed following a strict control flow, there is no predetermined order in which to consider rules in ASP during a computation. In our approach, the user is free to decide which rule to consider active in the next step following his or her intuition. This way, one can focus on interesting parts of the debugging search space. Bugs are detected during stepping by revealing differences between the actual semantics of the program and the expectations of the user. As a solid formal basis for stepping, we develop a framework of computations for answer-set programs. For fully supporting different solver languages, we build our framework on an abstract ASP language that is sufficiently general to capture different solver languages. To this end, we make use of abstract constraints as an established abstraction for popular language constructs such as aggregates. Stepping has been implemented in SeaLion, an integrated development environment for ASP. We illustrate stepping using an example scenario and discuss the stepping plugin of SeaLion. Moreover, we elaborate on methodological aspects and the embedding of stepping in the ASP development process.
C1 [Oetsch, Johannes; Tompits, Hans] Tech Univ Wien, Inst Informat Syst 184 3, Favoritenstr 9-11, A-1040 Vienna, Austria.
   [Puehrer, Joerg] Univ Leipzig, Inst Informat, Augustuspl 10, D-04109 Leipzig, Germany.
C3 Technische Universitat Wien; Leipzig University
RP Oetsch, J (corresponding author), Tech Univ Wien, Inst Informat Syst 184 3, Favoritenstr 9-11, A-1040 Vienna, Austria.
EM johannes.oetsch@tuwien.ac.at; puehrer@informatik.uni-leipzig.de;
   tompits@kr.tuwien.ac.at
OI Oetsch, Johannes/0000-0002-9902-7662; Puhrer, Jorg/0000-0003-1644-483X
FU Austrian Science Fund (FWF) [P21698]; German Research Foundation (DFG)
   [BR-1817/7-1, BR 1817/7-2]; European Commission [IST-2009-231875];
   Austrian Science Fund (FWF) [P21698] Funding Source: Austrian Science
   Fund (FWF)
FX This work was partially supported by the Austrian Science Fund (FWF)
   under project P21698, the German Research Foundation (DFG) under Grants
   BR-1817/7-1 and BR 1817/7-2 and the European Commission under project
   IST-2009-231875 (OntoRule).
CR Alviano Mario, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P40, DOI 10.1007/978-3-319-23264-5_5
   [Anonymous], 1999, LOGIC PROGRAMMING PA, DOI [10.1007/978-3-642-60085-2_17, DOI 10.1007/978-3-642-60085-2_17]
   [Anonymous], 1982, THESIS
   [Anonymous], ACM T COMPUTATIONAL
   Ben-Eliyahu R., 1994, Annals of Mathematics and Artificial Intelligence, V12, P53, DOI 10.1007/BF01530761
   BRAIN M, 2005, CEUR WORKSHOP P, V142
   Brain M, 2007, LECT NOTES COMPUT SC, V4483, P31, DOI 10.1007/978-3-540-72200-7_5
   Brain Martin, 2007, P WORKSH SOFTW ENG A, P71
   Brochenin R, 2014, FRONT ARTIF INTEL AP, V263, P165, DOI 10.3233/978-1-61499-419-0-165
   Busoniu PA, 2013, THEOR PRACT LOG PROG, V13, P657, DOI 10.1017/S1471068413000410
   Caballero R, 2008, LECT NOTES COMPUT SC, V4925, P143, DOI 10.1007/978-3-540-88594-8_8
   Denecker M, 2000, LECT NOTES ARTIF INT, V1861, P703
   Denecker M, 2009, LECT NOTES COMPUT SC, V5753, P637, DOI 10.1007/978-3-642-04238-6_75
   Dodaro Carmine, 2015, Logic Programming and Nonmonotonic Reasoning. 13th International Conference, LPNMR 2015. Proceedings: LNCS 9345, P279, DOI 10.1007/978-3-319-23264-5_24
   Eiter T, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P90
   Faber W, 2004, LECT NOTES COMPUT SC, V3229, P200, DOI 10.1007/978-3-540-30227-8_19
   Faber W, 2011, ARTIF INTELL, V175, P278, DOI 10.1016/j.artint.2010.04.002
   Ferraris P, 2011, ACM T COMPUT LOG, V12, DOI 10.1145/1970398.1970401
   Frühstück M, 2013, LECT NOTES COMPUT SC, V8148, P323, DOI 10.1007/978-3-642-40564-8_32
   Gebser M, 2008, P 23 NAT C ART INT, V1
   Gebser M, 2011, LECT NOTES ARTIF INT, V6645, P345
   Gebser M, 2012, ARTIF INTELL, V187, P52, DOI 10.1016/j.artint.2012.04.001
   Gebser M, 2011, THEOR PRACT LOG PROG, V11, P953, DOI 10.1017/S1471068411000019
   Gebser M, 2009, LECT NOTES ARTIF INT, V5437, P247, DOI 10.1007/978-3-642-00675-3_17
   Gelfond M., 1991, New Generation Computing, V9, P365, DOI 10.1007/BF03037169
   Kloimullner Christian, 2013, Applications of Declarative Programming and Knowledge Management. 19th International Conference, INAP 2011 and 25th Workshop on Logic Programming, WLP 2011. Revised Selected Papers 7773, P325, DOI 10.1007/978-3-642-41524-1_20
   Lee J, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P503
   Leone N, 2006, ACM T COMPUT LOG, V7, P499, DOI 10.1145/1149114.1149117
   Li T., 2015, CEUR WORKSHOP P, V1433
   Lierler Y, 2016, ARTIF INTELL, V236, P65, DOI 10.1016/j.artint.2016.03.004
   Lierler Y, 2011, THEOR PRACT LOG PROG, V11, P135, DOI 10.1017/S1471068410000578
   Liu LN, 2010, ARTIF INTELL, V174, P295, DOI 10.1016/j.artint.2009.11.016
   Marek VW, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P86
   Marek VW, 2004, LECT NOTES ARTIF INT, V2923, P167
   Mikitiuk Artur, 2007, 2007 International Conference on Artificial Intelligence (ICAI'07), P635
   Niemelä I, 1999, ANN MATH ARTIF INTEL, V25, P241, DOI 10.1023/A:1018930122475
   Nieuwenhuis R, 2006, J ACM, V53, P937, DOI 10.1145/1217856.1217859
   Oetsch Johannes, 2013, Applications of Declarative Programming and Knowledge Management. 19th International Conference, INAP 2011 and 25th Workshop on Logic Programming, WLP 2011. Revised Selected Papers 7773, P305, DOI 10.1007/978-3-642-41524-1_19
   OETSCH J., 2012, LECT NOTES COMPUTER, V7265, P492
   OETSCH J., 2012, LIPICS, V17, P222
   OETSCH J., 2010, P 24 WORKSH CONSTR L, P77
   Oetsch J, 2011, LECT NOTES ARTIF INT, V6645, P134
   Oetsch J, 2010, THEOR PRACT LOG PROG, V10, P513, DOI 10.1017/S1471068410000256
   Polleres A, 2013, LECT NOTES COMPUT SC, V8148, P452, DOI 10.1007/978-3-642-40564-8_45
   Pontelli E, 2009, THEOR PRACT LOG PROG, V9, P1, DOI 10.1017/S1471068408003633
   PUHRER J., 2007, THESIS
   PUHRER J., 2014, THESIS
   Redl C, 2016, THEOR PRACT LOG PROG, V16, P866, DOI 10.1017/S1471068416000211
   Shchekotykhin K, 2015, AAAI CONF ARTIF INTE, P1597
   Simons P, 2002, ARTIF INTELL, V138, P181, DOI 10.1016/S0004-3702(02)00187-X
   Syrjanen T., 2006, P 11 INT WORKSH NONM, V6, P77
   Truszczynski M, 2010, ARTIF INTELL, V174, P1285, DOI 10.1016/j.artint.2010.08.004
   Wittocx J, 2009, LECT NOTES COMPUT SC, V5649, P296, DOI 10.1007/978-3-642-02846-5_26
NR 53
TC 11
Z9 11
U1 0
U2 1
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD JAN
PY 2018
VL 18
IS 1
BP 30
EP 80
DI 10.1017/S1471068417000217
PG 51
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA FU3QC
UT WOS:000423765600002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Cheney, J
   Momigliano, A
AF Cheney, James
   Momigliano, Alberto
TI αCheck: A mechanized metatheory model checker
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article
DE nominal logic; model checking; counterexample search; negation
   elimination
ID SEQUENT CALCULUS; LOGIC; PROGRAMS; NEGATION
AB The problem of mechanically formalizing and proving metatheoretic properties of programming language calculi, type systems, operational semantics, and related formal systems has received considerable attention recently. However, the dual problem of searching for errors in such formalizations has attracted comparatively little attention. In this article, we present alpha Check, a bounded model checker for metatheoretic properties of formal systems specified using nominal logic. In contrast to the current state of the art for metatheory verification, our approach is fully automatic, does not require expertise in theorem proving on the part of the user, and produces counterexamples in the case that a flaw is detected. We present two implementations of this technique, one based on negation-as-failure and one based on negation elimination, along with experimental results showing that these techniques are fast enough to be used interactively to debug systems as they are developed.
C1 [Cheney, James] Univ Edinburgh, Lab Fdn Comp Sci, Edinburgh, Midlothian, Scotland.
   [Momigliano, Alberto] Univ Milan, Dipartimento Informat, Milan, Italy.
C3 University of Edinburgh; University of Milan
RP Cheney, J (corresponding author), Univ Edinburgh, Lab Fdn Comp Sci, Edinburgh, Midlothian, Scotland.
EM jcheney@inf.ed.ac.uk; alberto.momigliano@unimi.it
RI Momigliano, Alberto/M-6152-2017
OI Momigliano, Alberto/0000-0003-0942-4777; Cheney,
   James/0000-0002-1307-9286
FU EPSRC [GR/S63205/01]; Royal Society University Research Fellowship
FX This research was supported by EPSRC grant GR/S63205/01 and a Royal
   Society University Research Fellowship.
CR Amaral C, 2014, LECT NOTES COMPUT SC, V8475, P1, DOI 10.1007/978-3-319-07151-0_1
   [Anonymous], 2013, Nominal Sets: Names and Symmetry in Computer Science
   [Anonymous], 2005, LECT NOTES COMPUT SC
   [Anonymous], J FUNCTIONAL LOGIC P
   APT KR, 1994, J LOGIC PROGRAM, V20, P9, DOI 10.1016/0743-1066(94)90024-8
   Ayala-Rincon M., 2016, P 1 INT C FORM STRUC
   Aydemir BE, 2005, LECT NOTES COMPUT SC, V3603, P50
   Baelde D, 2007, LECT NOTES ARTIF INT, V4603, P391
   BARBUTI R, 1990, J LOGIC PROGRAM, V8, P201, DOI 10.1016/0743-1066(90)90023-X
   Blanchette JC, 2011, LECT NOTES ARTIF INT, V6989, P12, DOI 10.1007/978-3-642-24364-6_2
   Blanchette JC, 2010, LECT NOTES COMPUT SC, V6172, P131, DOI 10.1007/978-3-642-14052-5_11
   Bojanczyk M., 2013, DAGSTUHL REPORTS, V3, P58
   Bruscoli P., 1994, Trees in Algebra and Programming - CAAP '94. 19th International Colloquium. Proceedings, P52, DOI 10.1007/BFb0017473
   Bulwahn L, 2012, LECT NOTES COMPUT SC, V7180, P153, DOI 10.1007/978-3-642-28717-6_14
   Bulwahn Lukas, 2012, Lecture Notes in Computer Science, P92
   Calves C., 2008, THEORETICAL COMPUTER, V403, P2
   Calvès C, 2008, THEOR COMPUT SCI, V403, P285, DOI 10.1016/j.tcs.2008.05.012
   Cheney James, 2007, Proceedings of the 9th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP'07), P75, DOI 10.1145/1273920.1273931
   Cheney J, 2006, J SYMBOLIC LOGIC, V71, P299, DOI 10.2178/jsl/1140641176
   Cheney J, 2005, ACM SIGPLAN NOTICES, V40, P180, DOI 10.1145/1090189.1086389
   Cheney J, 2016, LECT NOTES COMPUT SC, V9762, P37, DOI 10.1007/978-3-319-41135-4_3
   Cheney J, 2016, J LOGIC COMPUT, V26, P699, DOI 10.1093/logcom/exu024
   Cheney J, 2010, J AUTOM REASONING, V45, P267, DOI 10.1007/s10817-009-9164-3
   Cheney J, 2008, ACM T PROGR LANG SYS, V30, DOI 10.1145/1387673.1387675
   Claessen K, 2000, ACM SIGPLAN NOTICES, V35, P268, DOI 10.1145/357766.351266
   Clarke Edmund M., 2001, Model Checking
   Dybjer P, 2004, INFORM SOFTWARE TECH, V46, P1011, DOI 10.1016/j.infsof.2004.07.002
   Felleisen M., 2009, Semantics Engineering with PLT Redex
   Fernandez M., 2005, P 7 INT C PRINC PRAC, P47
   Fetscher B, 2015, LECT NOTES COMPUT SC, V9032, P383, DOI 10.1007/978-3-662-46669-8_16
   Findler R. B., 2015, REDEX PRACTICAL SEMA
   Gabbay M, 2004, IEEE S LOG, P139, DOI 10.1109/LICS.2004.1319608
   Gabbay M., 2007, J APPL LOGIC, V5, P356, DOI DOI 10.1016/J.JAL.2005.10.012
   Gabbay M. J., 2002, Formal Aspects of Computing, V13, P341, DOI 10.1007/s001650200016
   Gabbay MJ, 2011, B SYMB LOG, V17, P161, DOI 10.2178/bsl/1305810911
   Gacek A., 2010, P 2010 S PRINC PRACT, P177
   Gacek A, 2012, J AUTOM REASONING, V49, P241, DOI 10.1007/s10817-011-9218-1
   Gadducci F., 2006, HIGHER ORDER SYMBOLI, V19, P2
   HARLAND J, 1993, J LOGIC PROGRAM, V17, P1, DOI 10.1016/0743-1066(93)90007-4
   Harper R., 2005, ACM Transactions on Computational Logic, V6, P61, DOI 10.1145/1042038.1042041
   Heath Q, 2015, ELECTRON P THEOR COM, P11, DOI 10.4204/EPTCS.186.4
   Klein C., 2012, HIGHER ORDER SYMBOLI, V25, P2
   Klein C, 2012, POPL 12: PROCEEDINGS OF THE 39TH ANNUAL ACM SIGPLAN-SIGACT SYMPOSIUM ON PRINCIPLES OF PROGRAMMING LANGUAGES, P285
   Lakin MR, 2009, LECT NOTES COMPUT SC, V5502, P47, DOI 10.1007/978-3-642-00590-9_4
   Lassez J.-L., 1987, Journal of Automated Reasoning, V3, P301, DOI 10.1007/BF00243794
   Leach J, 2001, THEOR PRACT LOG PROG, V1, P409, DOI 10.1017/S1471068401001041
   Levy J, 2012, ACM T COMPUT LOG, V13, DOI 10.1145/2159531.2159532
   Levy J, 2010, LEIBNIZ INT PR INFOR, V6, P209, DOI 10.4230/LIPIcs.RTA.2010.209
   Liu H., 2009, SIGPLAN NOTICES, V44, P35
   Mancarella P., 1988, Logic Programming: Proceedings of the Fifth International Conference and Symposium, P1006
   MILLER D, 1991, ANN PURE APPL LOGIC, V51, P125, DOI 10.1016/0168-0072(91)90068-W
   Momigliano A., 2000, Computer Science Logic. 14th International Workshop, CSL 2000. Annual Conference of the EACSL. Proceedings (Lecture Notes in Computer Science Vol.1862), P411
   Momigliano A., 2003, ACM Transactions on Computational Logic, V4, P493, DOI 10.1145/937555.937559
   Momigliano A., 2012, P 7 INT WORKSH LOG F, P33
   Montanari U, 2005, LECT NOTES COMPUT SC, V3465, P1
   Moreno-Navarro JJ, 2000, LECT NOTES COMPUT SC, V1753, P124
   Muñoz-Hernández S, 2004, LECT NOTES COMPUT SC, V2998, P39
   Niemelä I, 2006, LECT NOTES ARTIF INT, V4160, P15, DOI 10.1007/11853886_2
   Nipkow Tobias, 2014, Concrete Semantics with Isabelle/HOL
   Owre S., 2006, WORKSH AUT FORM METH
   Paraskevopoulou Z, 2015, LECT NOTES COMPUT SC, V9236, P325, DOI 10.1007/978-3-319-22102-1_22
   Pientka B, 2005, J AUTOM REASONING, V34, P179, DOI 10.1007/s10817-005-6534-3
   Pierce Benjamin C., 2016, Software Foundations
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Pitts A., 2016, ACM SIGLOG News, V3, P57, DOI DOI 10.1145/2893582.2893594
   Pitts AM, 2003, INFORM COMPUT, V186, P165, DOI 10.1016/S0890-5401(03)00138-X
   Ramakrishnan C. R., 2000, CAV 2000, P576
   Roberson M, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P493
   Rosu G, 2010, J LOGIC ALGEBR PROGR, V79, P397, DOI 10.1016/j.jlap.2010.03.012
   Runciman C, 2008, HASKELL'08: PROCEEDINGS OF THE ACM SIGPLAN 2008 HASKELL SYMPOSIUM, P37
   Schöpp U, 2007, ELECTRON NOTES THEOR, V174, P19, DOI 10.1016/j.entcs.2007.01.027
   Schroeder-Heister P., 1993, P 4 INT WORKSH EXT L, V798, P333
   Schürmann C, 2009, LECT NOTES COMPUT SC, V5674, P79, DOI 10.1007/978-3-642-03359-9_7
   Sewell P, 2010, J FUNCT PROGRAM, V20, P71, DOI 10.1017/S0956796809990293
   STUCKEY PJ, 1995, INFORM COMPUT, V118, P12, DOI 10.1006/inco.1995.1048
   Tiu A, 2010, ACM T COMPUT LOG, V11, DOI 10.1145/1656242.1656248
   Urban C, 2004, THEOR COMPUT SCI, V323, P473, DOI 10.1016/j.tcs.2004.06.016
   Urban C., 2011, J COMPUTER SECURITY, V12, P2, DOI DOI 10.3233/JCS-1996-42-304
   Urban C, 2012, LOG METH COMPUT SCI, V8, DOI 10.2168/LMCS-8(2:14)2012
   Urban C, 2011, ACM T COMPUT LOG, V12, DOI 10.1145/1877714.1877721
   Volpano D., 1996, Journal of Computer Security, V4, P167
   Walker D, 2006, ACM SIGPLAN NOTICES, V41, P38, DOI 10.1145/1160074.1159809
   Weirich Stephanie., 2011, Proceedings of the 16th ACM SIGPLAN International Conference on Functional Programming, P333
   Winskel G., 1993, The Formal Semantics of Programming Languages
   [No title captured]
NR 85
TC 5
Z9 5
U1 0
U2 2
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD MAY
PY 2017
VL 17
IS 3
BP 311
EP 352
DI 10.1017/S1471068417000035
PG 42
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science; Science & Technology - Other Topics
GA EV5HR
UT WOS:000401795100003
OA Green Accepted, Green Submitted
DA 2024-07-18
ER

PT J
AU Giordano, L
   Dupré, DT
AF Giordano, Laura
   Dupre, Daniele Theseider
TI ASP for minimal entailment in a rational extension of SROEL
SO THEORY AND PRACTICE OF LOGIC PROGRAMMING
LA English
DT Article; Proceedings Paper
CT 32nd International Conference on Logic Programming (ICLP)
CY OCT 18-21, 2016
CL New York, NY
ID LOGIC; COMPLEXITY; CLOSURE
AB In this paper we exploit Answer Set Programming (ASP) for reasoning in a rational extension SROEL(Pi, x)(R) T of the low complexity description logic SROEL(Pi, x), which underlies the OWL EL ontology language. In the extended language, a typicality operator T is allowed to define concepts T(C) (typical C's) under a rational semantics. It has been proven that instance checking under rational entailment has a polynomial complexity. To strengthen rational entailment, in this paper we consider a minimal model semantics. We show that, for arbitrary SROEL(Pi, x)T-R knowledge bases, instance checking under minimal entailment is Pi(P)(2)-complete. Relying on a Small Model result, where models correspond to answer sets of a suitable ASP encoding, we exploit Answer Set Preferences (and, in particular, the asprin framework) for reasoning under minimal entailment.
C1 [Giordano, Laura; Dupre, Daniele Theseider] DISIT Univ Piemonte Orientale, Alessandria, Italy.
C3 University of Eastern Piedmont Amedeo Avogadro
RP Giordano, L (corresponding author), DISIT Univ Piemonte Orientale, Alessandria, Italy.
EM laura.giordano@uniupo.it; dtd@di.unipmn.it
OI Theseider Dupre, Daniele/0000-0001-6798-4380; GIORDANO,
   Laura/0000-0001-9445-7770
CR BAADER F, 1995, J AUTOM REASONING, V15, P41, DOI 10.1007/BF00881830
   Baader F, 2005, 19TH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-05), P364
   Bonatti PA, 2015, ARTIF INTELL, V222, P1, DOI 10.1016/j.artint.2014.12.010
   Bonatti PA, 2015, LECT NOTES COMPUT SC, V9366, P356, DOI 10.1007/978-3-319-25007-6_21
   Bonatti PA, 2011, J ARTIF INTELL RES, V42, P719
   Bonatti PA, 2009, J ARTIF INTELL RES, V35, P717, DOI 10.1613/jair.2763
   Booth R, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P2805
   BOZZATO L., 2014, CEUR WORKSHOP PROC, V1193, P112
   Brewka G, 2015, AAAI CONF ARTIF INTE, P1467
   Britz K., 2008, PRINCIPLES KNOWLEDGE, P476
   Casini G., 2013, 26 INT WORKSH DESCR, V1014, P600
   Casini G., 2012, P AUSTR ONT WORKSH, V969, P28
   Casini G, 2014, LECT NOTES ARTIF INT, V8761, P92, DOI 10.1007/978-3-319-11558-0_7
   Casini G, 2010, LECT NOTES ARTIF INT, V6341, P77, DOI 10.1007/978-3-642-15675-5_9
   Donini F. M., 2002, ACM Transactions on Computational Logic, V3, P177, DOI 10.1145/505372.505373
   Eiter T, 1997, ACM T DATABASE SYST, V22, P364, DOI 10.1145/261124.261126
   Eiter T, 2008, ARTIF INTELL, V172, P1495, DOI 10.1016/j.artint.2008.04.002
   Gelfond M, 2002, ARTIF INTELL, V138, P3, DOI 10.1016/S0004-3702(02)00207-2
   Giordano L, 2015, ARTIF INTELL, V226, P1, DOI 10.1016/j.artint.2015.05.001
   Giordano L, 2013, ARTIF INTELL, V195, P165, DOI 10.1016/j.artint.2012.10.004
   Giordano L., 2016, CEUR WORKSHOP P, V1577
   GIORDANO L., 2011, 22 INT JOINT C ARTIF, P894
   Giordano L., 2014, CEUR WORKSHOP P, V1193, P1
   Giordano L., 2009, FUNDAMENTA INFORM, V96, P1, DOI DOI 10.3233/FI-2009-185
   Giordano L., 2016, CEUR WORKSHOP P, V1645
   Giordano L, 2007, LECT NOTES ARTIF INT, V4790, P257, DOI 10.1007/978-3-540-75560-9_20
   Giordano L, 2009, LECT NOTES COMPUT SC, V5753, P430, DOI 10.1007/978-3-642-04238-6_38
   Gottlob G, 2014, P KR 2014
   Ke P, 2008, CEUR WORKSHOP P
   Knorr M, 2012, FRONT ARTIF INTEL AP, V242, P474, DOI 10.3233/978-1-61499-098-7-474
   KRAUS S, 1990, ARTIF INTELL, V44, P167, DOI 10.1016/0004-3702(90)90101-5
   Krötzsch M, 2010, LECT NOTES ARTIF INT, V6341, P234, DOI 10.1007/978-3-642-15675-5_21
   Krotzsch M., 2010, 3005 KARLSR I TECHN
   LEHMANN D, 1992, ARTIF INTELL, V55, P1, DOI 10.1016/0004-3702(92)90041-U
   LEHMANN D, 1995, ANN MATH ARTIF INTEL, V15, P61, DOI 10.1007/BF01535841
   Motik B, 2010, J ACM, V57, DOI 10.1145/1754399.1754403
   STRACCIA U, 1993, IJCAI-93, VOLS 1 AND 2, P676
NR 37
TC 9
Z9 9
U1 0
U2 7
PU CAMBRIDGE UNIV PRESS
PI NEW YORK
PA 32 AVENUE OF THE AMERICAS, NEW YORK, NY 10013-2473 USA
SN 1471-0684
EI 1475-3081
J9 THEOR PRACT LOG PROG
JI Theory Pract. Log. Program.
PD SEP
PY 2016
VL 16
BP 738
EP 754
DI 10.1017/S1471068416000399
PN 5-6
PG 17
WC Computer Science, Software Engineering; Computer Science, Theory &
   Methods; Logic
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science; Science & Technology - Other Topics
GA EA4NP
UT WOS:000386589800015
OA Green Submitted
DA 2024-07-18
ER

EF