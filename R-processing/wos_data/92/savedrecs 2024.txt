FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Antoniou, C
   Bassiliades, N
AF Antoniou, Christina
   Bassiliades, Nick
TI Α tool for requirements engineering using ontologies and boilerplates
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Boilerplates; Requirements specification; Ontology
AB The most popular technique for specification requirements is natural language. The disadvantage of natural language is ambiguity. Boilerplates are syntactic patterns which limit the ambiguity problem associated with using natural language to specify system/software requirements. Also, using boilerplates is considered a useful tool for inexperienced engineers to define requirements. Using linguistic boilerplates, constrains the natural language syntactically. Furthermore, a domain-specific ontology is used to constrain requirements semantically, as well. In requirements specification, using ontologies helps to restrict the vocabulary to entities, properties, and property relationships which are semantically related. The above results in avoiding or making fewer mistakes. This work makes use of the combination of boilerplate and ontology. Usually, the attributes of boilerplates are completed with the help of the ontology. The contribution of this paper is that the whole boilerplates is stored in the ontology and attributes and fixed elements are part of the ontology. This combination helps to correct semantically and syntactically requirement construction. This paper proposes a tool based on a domain-specific ontology and a set of predefined generic linguistic boilerplates for requirements engineering. We create a domain-specific ontology and a minimal set of boilerplates for an ATM (Automated Teller Machine). We carried out an experiment in order to obtain evidence for the effectiveness and efficiency of our method. The experiment took the form of a case study for the ATM domain and our proposed method was evaluated by users. The contribution and novelty of our methodology is that we created a tool for defining requirements that integrates boilerplate templates and an ontology. We exploit the boilerplate language syntax, mapping them to Resource Description Framework triples which have also a linguistic nature.
C1 [Antoniou, Christina; Bassiliades, Nick] Aristotle Univ Thessaloniki, Sch Informat, Thessaloniki, Greece.
C3 Aristotle University of Thessaloniki
RP Antoniou, C (corresponding author), Aristotle Univ Thessaloniki, Sch Informat, Thessaloniki, Greece.
EM antoniouc@csd.auth.gr
RI hu, guangchen/KEI-6324-2024
FU HEAL-Link Greece
FX Open access funding provided by HEAL-Link Greece.
CR Ahmad S., 2018, J. Telecommun. Electron. Comput. Eng. (JTEC), V10, P111
   Antoniou G., 2011, A semantic web primer, V3rd
   Anuar U, 2015, 2015 9TH MALAYSIAN SOFTWARE ENGINEERING CONFERENCE (MYSEC2015), P99, DOI 10.1109/MySEC.2015.7475203
   Arora Chetan, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P35, DOI 10.1109/ESEM.2013.13
   Arora C, 2015, IEEE T SOFTWARE ENG, V41, P944, DOI 10.1109/TSE.2015.2428709
   Arora C, 2014, INT WORKSH REQUIRE, P1, DOI 10.1109/RePa.2014.6894837
   Daramola O., 2012, 2012 IEEE Second International Workshop on Requirements Patterns (RePa 2012), P54, DOI 10.1109/RePa.2012.6359973
   Daramola O., 2011, 2011 4th International Workshop on Managing Requirements Knowledge (MARK 2011), P3, DOI 10.1109/MARK.2011.6046555
   Daramola O., 2012, OTM CONF INT C MOV M, P194, DOI [10.1007/978-3-642-33618-828, DOI 10.1007/978-3-642-33618-828]
   Fanmuy G., 2012, Complex Systems Design Management, P145, DOI 10.1007/978-3-642-25203-710
   Farfeleder S, 2011, IEEE INT SYMP DESIGN, P271, DOI 10.1109/DDECS.2011.5783092
   Farfeleder S, 2011, LECT NOTES COMPUT SC, V6644, P212, DOI 10.1007/978-3-642-21064-8_15
   Fritz S., 2021, Int. J. Knowl. Eng, V7, P8, DOI [10.18178/ijke.2021.7.1.134, DOI 10.18178/IJKE.2021.7.1.134]
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Gruber TR, 1995, INT J HUM-COMPUT ST, V43, P907, DOI 10.1006/ijhc.1995.1081
   Guarino N., 2009, What Is an Ontology?, DOI [10.1007/978-3-540-92673-3, DOI 10.1007/978-3-540-92673-30, DOI 10.1007/978-3-540-92673-3, 10.1007/978-3-540-92673-3_0, DOI 10.1007/978-3-540-92673-3_0]
   Haris M. Syauqi, 2020, SIET '20: Proceedings of the 5th International Conference on Sustainable Information Engineering and Technology, P142, DOI 10.1145/3427423.3427450
   Helke S., 2019, SOFTW ENG WORKSH ASE, P45
   Hull E., 2010, REQUIR ENG
   Ibrahim N, 2009, ASIA PAC SOFWR ENG, P347, DOI 10.1109/APSEC.2009.55
   Kravari Kalliopi, 2020, PCI 2020: 24th Pan-Hellenic Conference on Informatics, P72, DOI 10.1145/3437120.3437278
   Kravari K, 2021, ALGORITHMS, V14, DOI 10.3390/a14100298
   Mahmud N, 2016, ACSIS-ANN COMPUT SCI, V8, P1737, DOI 10.15439/2016F404
   Mahmud N, 2015, 2015 10TH IEEE INTERNATIONAL SYMPOSIUM ON INDUSTRIAL EMBEDDED SYSTEMS (SIES), P1
   Mavin A, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P317, DOI 10.1109/RE.2009.9
   Mokos K., 2020, Array, V7, DOI [10.1016/j.array.2020.100030, DOI 10.1016/J.ARRAY.2020.100030]
   Musen Mark A, 2015, AI Matters, V1, P4
   Pasquariello A., 2022, INT JOINT C MECH DES, P491
   Pohl K., 2011, RDF 1.1 Concepts and Abstract Syntax, V1st
   Do QA, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110730
   Do QA, 2019, LECT NOTES COMPUT SC, V11602, P47, DOI 10.1007/978-3-030-22888-0_4
   Runeson P., 2012, Case Study Research in Software Engineering: Guidelines and Examples
   Too CW, 2022, 2022 INTERNATIONAL CONFERENCE ON DECISION AID SCIENCES AND APPLICATIONS (DASA), P1455, DOI 10.1109/DASA54658.2022.9765109
   Warnier M., 2017, EUR C NOV 2017 LOND, DOI [10.26615/978-2-9701095-2-5_013, DOI 10.26615/978-2-9701095-2-5_013]
   Zaki-Ismail A, 2020, Arxiv, DOI [arXiv:2009.14683, 10.48550/arXiv.2009.14683, DOI 10.48550/ARXIV.2009.14683]
NR 35
TC 0
Z9 0
U1 3
U2 6
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 5
DI 10.1007/s10515-023-00403-y
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Y2ZL3
UT WOS:001103998900001
OA hybrid
DA 2024-08-05
ER

PT J
AU Chen, JC
   Hu, J
   Xia, X
   Lo, DV
   Grundy, J
   Gao, ZP
   Chen, T
AF Chen, Jiachi
   Hu, Jiang
   Xia, Xin
   Lo, David
   Grundy, John
   Gao, Zhipeng
   Chen, Ting
TI Angels or demons: investigating and detecting decentralized financial
   traps on ethereum smart contracts
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Smart contract analysis; Ethereum; Decentralized financial; Financial
   traps
AB Decentralized Finance (DeFi) uses blockchain technologies to transform traditional financial activities into decentralized platforms that run without intermediaries and centralized institutions. Smart contracts are programs that run on the blockchain, and by utilizing smart contracts, developers can more easily develop DeFi applications. Some key features of smart contracts-self-executed and immutability-ensure the trustworthiness, transparency and efficiency of DeFi applications and have led to a fast-growing DeFi market. However, misbehaving developers can add traps or backdoor code snippets to a smart contract, which are hard for contract users to discover. We call these code snippets in a DeFi smart contract as "DeFi Contract Traps" (DCTs). In this paper, we identify five DeFi contract traps and introduce their behaviors, describe how attackers use them to make unfair profits and analyze their prevalence in the Ethereum platform. We propose a symbolic execution tool, DeFiDefender, to detect such traps and use a manually labeled small-scale dataset that consists of 700 smart contracts to evaluate it. Our results show that our tool is not only highly effective but also highly efficient.DeFiDefender only needs 0.48 s to analyze one DeFi smart contract and obtains a high average accuracy (98.17%), precision (99.74%)and recall (89.24%). Among the five DeFi contract traps introduced in this paper, four of them can be detected through contract bytecode without the need for source code. We also apply DeFiDefender to a large-scale dataset that consists of 20,679 real DeFi-related Ethereum smart contracts. We found that 52.13% of these DeFi smart contracts contain at least one contract trap. Although a smart contract that contains contract traps is not necessarily malicious, our finding suggests that DeFi-related contracts have many centralized issues in a zero-trust environment and in the absence of a trusted party.
C1 [Chen, Jiachi; Hu, Jiang] Sun Yat Sen Univ, Sch Software Engn, Zhuhai, Peoples R China.
   [Xia, Xin] Software Engn Applicat Technol Lab, Huawei, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
   [Grundy, John] Monash Univ, Fac Informat Technol, Melbourne, Australia.
   [Gao, Zhipeng] Univ Elect Sci & Technol China, Chengdu, Peoples R China.
   [Chen, Ting] Zhejiang Univ, Shanghai Inst Adv Study, Shanghai, Peoples R China.
C3 Sun Yat Sen University; Huawei Technologies; Singapore Management
   University; Monash University; University of Electronic Science &
   Technology of China; Zhejiang University
RP Xia, X (corresponding author), Software Engn Applicat Technol Lab, Huawei, Peoples R China.
EM chenjch86@mail.sysu.edu.cn; hujiang5@mail2.sysu.edu.cn; xin.xia@acm.org;
   davidlo@smu.edu.sg; John.Grundy@monash.edu; zhipeng.gao@zju.edu.cn;
   brokendragon@uestc.edu.cn
FX DAS:No datasets were generated or analysed during the current study.
CR [Anonymous], 2014, ETHEREUMS WHITE PAPE
   Bartoletti M, 2020, FUTURE GENER COMP SY, V102, P259, DOI 10.1016/j.future.2019.08.014
   Chen JC, 2021, Arxiv, DOI arXiv:2005.07908
   Chen JC, 2021, Arxiv, DOI arXiv:2009.02663
   Chen JC, 2022, IEEE T SOFTWARE ENG, V48, P327, DOI 10.1109/TSE.2020.2989002
   Chen JC, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10018-0
   Chen T., 2019, 2019 ACM IEEE INT S, P1
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Chen T, 2019, INT CON DISTR COMP S, P1369, DOI 10.1109/ICDCS.2019.00137
   Chen T, 2020, ACM T INTERNET TECHN, V20, DOI 10.1145/3381036
   Chen T, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P1503, DOI 10.1145/3319535.3345664
   Chen T, 2018, IEEE INFOCOM SER, P1484, DOI 10.1109/INFOCOM.2018.8486401
   Chen WL, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P1409, DOI 10.1145/3178876.3186046
   Chen Yi-jia, 2020, Journal of Sustainable Development, V13, P1, DOI 10.5539/jsd.v13n1p1
   Grech N, 2019, PROC INT CONF SOFTW, P1176, DOI 10.1109/ICSE.2019.00120
   Gudgeon Lewis, 2020, AFT '20: Proceedings of the 2nd ACM Conference on Advances in Financial Technologies, P92, DOI 10.1145/3419614.3423254
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Krupp J, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1317
   Lin LX., 2019, Stand. J. Blockchain Law Policy, V2, P8
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Popescu A-D., 2020, Soc. Sci. Educ. Res. Rev, V7, P321
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Schär F, 2021, FED RESERVE BANK ST, V103, P153, DOI 10.20955/r.103.153-74
   Szabo N., 1997, First Monday, V2
   Torres CF, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P1591
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Wang Q, 2021, Arxiv, DOI [arXiv:2105.07447, DOI 10.48550/ARXIV.2105.07447]
   Werner S.M., 2021, arXiv
NR 28
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 63
DI 10.1007/s10515-024-00459-4
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA A0H1U
UT WOS:001279427900001
DA 2024-08-05
ER

PT J
AU Kalhor, S
   Keyvanpour, MR
   Salajegheh, A
AF Kalhor, Somayeh
   Keyvanpour, Mohammad Reza
   Salajegheh, Afshin
TI A systematic review of refactoring opportunities by software antipattern
   detection
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Antipattern detection; Software bad smell; Defect; Code smell;
   Refactoring opportunities
ID MACHINE LEARNING TECHNIQUES; CODE SMELL DETECTION; GENETIC ALGORITHM;
   DEFECTS DETECTION; BAD SMELLS; FRAMEWORK
AB The violation of the semantic and structural software principles, such as low connection, high coherence, high understanding, and others, are called anti-patterns, which is one of the concerns of the software development process. They are caused due to bad design or programming that must be detected and removed to improve the application's source code. Refactoring operators efficiently eliminate antipatterns, but they must first be identified. Therefore, antipattern detection is a critical issue in software engineering, and to do this, various approaches have been proposed. So far, review articles have been published to classify and compare these approaches. However, a comprehensive study using evaluation parameters has not compared different anti-pattern detection methods at all software abstraction levels. In this article, all the methods presented so far are classified, then their advantages and disadvantages are highlighted. Finally, a complete comparison of each category by evaluation metrics is provided. Our proposed classification considers three aspects, levels of abstraction, degree of dependence on developers' skills, and techniques used. Then, the evaluation metrics reported on this subject are analyzed, and the qualitative values of these metrics for each category are presented. This information can help researchers compare and understand existing methods and improve them.
C1 [Kalhor, Somayeh; Salajegheh, Afshin] Islamic Azad Univ, Dept Comp Sci & Engn, South Tehran Branch, Tehran, Iran.
   [Keyvanpour, Mohammad Reza] Alzahra Univ, Fac Engn, Dept Comp Engn, Tehran, Iran.
C3 Islamic Azad University; Alzahra University
RP Keyvanpour, MR (corresponding author), Alzahra Univ, Fac Engn, Dept Comp Engn, Tehran, Iran.
EM st_s_kalhor@azad.ac.ir; keyvanpour@alzahra.ac.ir;
   a_salajegheh@azad.ac.ir
CR Abebe Mesfin., 2014, INT J SOFTWARE ENG I, V8, P299, DOI [10.14257/ijseia.2014.8.6.24, DOI 10.14257/IJSEIA.2014.8.6.24]
   Alazba A, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10312-z
   Alkhalid A, 2011, IET SOFTW, V5, P274, DOI 10.1049/iet-sen.2010.0070
   Alkharabsheh K, 2019, SOFTWARE QUAL J, V27, P1069, DOI 10.1007/s11219-018-9424-8
   Alon U., 2018, arXiv
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Díaz-Pace JA, 2018, IEEE INT WORK C SO, P62, DOI 10.1109/SCAM.2018.00015
   [Anonymous], 2013, P 25 INT C SOFTW ENG
   Azadi U, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P88, DOI 10.1109/TechDebt.2019.00027
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bigonha MAS, 2019, INFORM SOFTWARE TECH, V115, P79, DOI 10.1016/j.infsof.2019.08.005
   Boutaib S, 2021, EXPERT SYST APPL, V166, DOI 10.1016/j.eswa.2020.114076
   Brdar Ilija, 2022, 2022 IEEE 20th Jubilee International Symposium on Intelligent Systems and Informatics (SISY), P403, DOI 10.1109/SISY56759.2022.10036248
   Brownlee J., 2005, technical report 3-01
   Cai Y., 2013, P 9 INT ACM SIGSOFT
   Cai YF, 2016, 2016 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BRINGING ARCHITECTURAL DESIGN THINKING INTO DEVELOPERS DAILY ACTIVITIES (BRIDGE), P18, DOI [10.1145/2896935.2896940, 10.1109/Bridge.2016.013]
   Catal C, 2007, LECT NOTES COMPUT SC, V4589, P300
   Chávez A, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P74, DOI 10.1145/3131151.3131171
   CHIDAMBER SR, 1991, SIGPLAN NOTICES, V26, P197
   Ciupke O., 1999, Proceedings of Technology of Object-Oriented Languages and Systems - TOOLS 30 (Cat. No.PR00278), P18, DOI 10.1109/TOOLS.1999.787532
   Crnkovic I, 2011, IEEE T SOFTWARE ENG, V37, P593, DOI 10.1109/TSE.2010.83
   Cruz D, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT, TECHDEBT, P31, DOI 10.1145/3387906.3388618
   Sobrinho EVD, 2021, IEEE T SOFTWARE ENG, V47, P17, DOI 10.1109/TSE.2018.2880977
   Dewangan S, 2021, IEEE ACCESS, V9, P162869, DOI 10.1109/ACCESS.2021.3133810
   Dhambri K, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P279
   Le DM, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P176, DOI 10.1109/ICSA.2018.00027
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Easterbrook S., 2008, Guide to Advanced Empirical Software Eng, P285, DOI [10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-5_11]
   Erni K, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P64, DOI 10.1109/METRIC.1996.492444
   Fowler M., 2018, Refactoring: improving the design of existing code
   Gaffney J.E., 1981, P ACM 81 C, P126
   Gamma E., 1995, DESIGN PATTERNS ELEM
   Garcia J, 2009, LECT NOTES COMPUT SC, V5581, P146, DOI 10.1007/978-3-642-02351-4_10
   Giesecke S., 2007, Duplication, Redundancy, and Similarity in Software, P1
   Goldberg DE., 1989, GENETIC ALGORITHMS S, DOI DOI 10.1109/ICETEEEM.2012.6494460
   Goldstein M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P59, DOI 10.1109/ICSE.2015.135
   Griffith I., 2011, Proc. Int. Work. Mach. Learn. Technol. Softw. Eng, P35
   Gupta A, 2017, LECT NOTES COMPUT SC, V10408, P665, DOI 10.1007/978-3-319-62404-4_49
   Hadj-Kacem M., 2018, P 13 INT C SOFTW TEC, P164
   Halstead M.H., 1977, Elements of Software Science (Operating and Programming Systems Series
   Harrison R, 1998, IEEE T SOFTWARE ENG, V24, P491, DOI 10.1109/32.689404
   Hassaine S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P343, DOI 10.1109/QUATIC.2010.61
   Hübener T, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P75, DOI [10.1145/3510457.3513066, 10.1109/ICSE-SEIP55303.2022.9794000]
   Imam AT, 2022, J KING SAUD UNIV-COM, V34, P2621, DOI 10.1016/j.jksuci.2022.03.028
   Japkowicz N., 2011, Evaluating Learning Algorithms: A Classification Perspective, DOI [DOI 10.1017/CBO9780511921803, https://doi.org/10.1017/CBO9780511921803, DOI 10.1017/CBO9780511921803.004]
   Juliet Thessalonica D., 2023, Hindawi Sci. Program, V2023, P2973250, DOI [10.1155/2023/2973250, DOI 10.1155/2023/2973250]
   Kalhor S., 2022, P 12 INT C COMP KNOW
   Kanade A, 2020, PR MACH LEARN RES, V119
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kaur A, 2021, RECENT ADV ELECTR EL, V14, P290, DOI 10.2174/2352096513999200922125839
   Kebir S, 2017, INFORM SOFTWARE TECH, V88, P17, DOI 10.1016/j.infsof.2017.03.009
   Kessentini M., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P113
   Kessentini M, 2013, SOFTWARE QUAL J, V21, P551, DOI 10.1007/s11219-012-9187-6
   Kessentini M, 2011, CONF PROC INT SYMP C, P81, DOI 10.1109/ICPC.2011.22
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kitchenham B., 2004, Ttechnical report tr/se-0401
   Koru A.G., 2005, P WORKSH PRED MOD SO, P1
   Kothari SC, 2004, SOFTWARE QUAL J, V12, P99, DOI 10.1023/B:SQJO.0000024058.90885.6a
   Kovacevic A, 2022, EXPERT SYST APPL, V204, DOI 10.1016/j.eswa.2022.117607
   Lacerda G, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110610
   Lee S, 2011, SOFTWARE PRACT EXPER, V41, P521, DOI 10.1002/spe.1031
   Ma Y., 2006, Advances in machine learning application in software engineering, P237
   Macia I, 2013, EUR CON SFTWR MTNCE, P177, DOI 10.1109/CSMR.2013.27
   Madeyski L, 2023, INFORM SOFTWARE TECH, V155, DOI 10.1016/j.infsof.2022.107112
   Malveau RC., 1998, Anti Patterns: Refactoring Software, Architectures, and Projects in Crisis
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Mayvan BB, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2255
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Menshawy Rana S., 2021, 2021 International Mobile, Intelligent, and Ubiquitous Computing Conference (MIUCC), P78, DOI 10.1109/MIUCC52538.2021.9447669
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Metsker Steven., 2006, DESIGN PATTERNS JAVA
   Mhawish MY, 2020, J COMPUT SCI TECH-CH, V35, P1428, DOI 10.1007/s11390-020-0323-7
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Mo R, 2021, IEEE T SOFTWARE ENG, V47, P1008, DOI 10.1109/TSE.2019.2910856
   Mo R, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P51, DOI 10.1109/WICSA.2015.12
   Moghadam Iman Hemati., 2011, Proceeding of the 4th workshop on Refactoring tools - WRT'11, page, P41
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Mumtaz H, 2021, J SYST SOFTWARE, V173, DOI 10.1016/j.jss.2020.110885
   Munro MJ, 2005, 2005 11th International Symposium on Software Metrics (METRICS), P124
   Newman MEJ, 2004, PHYS REV E, V69, DOI 10.1103/PhysRevE.69.026113
   O Cinn?ide M., 2016, P 1 INT WORKSH SOFTW, P9
   Oizumi W, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P91, DOI 10.1109/SBES.2014.18
   Oizumi WN., 2015, Journal of Software Engineering Research and Development, V3, P11, DOI [10.1186/s40411-015-0025-y, DOI 10.1186/S40411-015-0025-Y]
   Ouni A, 2014, ADV COMPUT, V94, P103, DOI 10.1016/B978-0-12-800161-5.00004-9
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Razani Z, 2019, 2019 IEEE 5TH CONFERENCE ON KNOWLEDGE BASED ENGINEERING AND INNOVATION (KBEI 2019), P181, DOI 10.1109/KBEI.2019.8734937
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Salehie M, 2006, INT C PROGRAM COMPRE, P159, DOI 10.1109/ICPC.2006.6
   Shafiei N, 2020, 2020 6TH INTERNATIONAL CONFERENCE ON WEB RESEARCH (ICWR), P106, DOI [10.1109/ICWR49608.2020.9122271, 10.1109/icwr49608.2020.9122271]
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Shatnawi R., 2011, Internat. J. Software Eng. Applicat., V5, P127
   Shimomura T., 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P213, DOI 10.1109/ICSEA.2010.39
   Sterling L., 1986, ART PROLOG
   Tommasel A, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P254, DOI 10.1109/ICSA-C.2019.00053
   Travassos GH, 1999, ACM SIGPLAN NOTICES, V34, P47, DOI 10.1145/320385.320389
   Vale G, 2014, 2014 EIGHTH BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES AND REUSE (SBCARS), P84, DOI 10.1109/SBCARS.2014.21
   Vale T, 2016, J SYST SOFTWARE, V111, P128, DOI 10.1016/j.jss.2015.09.019
   Van Rysselberghe F, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P336, DOI 10.1109/ASE.2004.1342759
   Vidal S, 2019, SCI COMPUT PROGRAM, V182, P64, DOI 10.1016/j.scico.2019.07.003
   Vidal SA, 2016, AUTOMAT SOFTW ENG, V23, P501, DOI 10.1007/s10515-014-0175-x
   Vimaladevi M, 2017, 2017 INTERNATIONAL CONFERENCE ON TECHNICAL ADVANCEMENTS IN COMPUTERS AND COMMUNICATIONS (ICTACC), P32, DOI 10.1109/ICTACC.2017.18
   von Detten M, 2014, SOFTW SYST MODEL, V13, P1239, DOI 10.1007/s10270-013-0341-9
   Wohlin C., 2014, P 18 INT C EV ASS SO, P1, DOI [DOI 10.1145/2601248.2601268, 10.1145/2601248.2601268]
   Xiao L, 2016, PROC INT CONF SOFTW, P488, DOI 10.1145/2884781.2884822
   Zanetti M.S., 2014, P 13 INT C MOD MODUL, P73
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 109
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 42
DI 10.1007/s10515-024-00443-y
PG 65
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QV4I2
UT WOS:001223627300001
DA 2024-08-05
ER

PT J
AU Alazba, A
   Aljamaan, H
   Alshayeb, M
AF Alazba, Amal
   Aljamaan, Hamoud
   Alshayeb, Mohammad
TI Automated detection of class diagram smells using self-supervised
   learning
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Self-supervised learning; Deep learning; UML class diagram; Bad smell
   detection
ID UML; COMPLEXITY; SECURITY
AB Design smells are symptoms of poorly designed solutions that may result in several maintenance issues. While various approaches, including traditional machine learning methods, have been proposed and shown to be effective in detecting design smells, they require extensive manually labeled data, which is expensive and challenging to scale. To leverage the vast amount of data that is now accessible, unsupervised semantic feature learning, or learning without requiring manual annotation labor, is essential. The goal of this paper is to propose a design smell detection method that is based on self-supervised learning. We propose Model Representation with Transformers (MoRT) to learn the UML class diagram features by training Transformers to recognize masked keywords. We empirically show how effective the defined proxy task is at learning semantic and structural properties. We thoroughly assess MoRT using four model smells: the Blob, Functional Decomposition, Spaghetti Code, and Swiss Army Knife. Furthermore, we compare our findings with supervised learning and feature-based methods. Finally, we ran a cross-project experiment to assess the generalizability of our approach. Results show that MoRT is highly effective in detecting design smells.
C1 [Alazba, Amal; Aljamaan, Hamoud; Alshayeb, Mohammad] King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.
   [Alazba, Amal] King Saud Univ, Dept Informat Syst, Riyadh 11362, Saudi Arabia.
   [Aljamaan, Hamoud] Interdisciplinary Res Ctr Finance & Digital Econ, Dhahran 31261, Saudi Arabia.
   [Alshayeb, Mohammad] Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran 31261, Saudi Arabia.
C3 King Fahd University of Petroleum & Minerals; King Saud University
RP Alshayeb, M (corresponding author), King Fahd Univ Petr & Minerals, Informat & Comp Sci Dept, Dhahran 31261, Saudi Arabia.; Alshayeb, M (corresponding author), Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran 31261, Saudi Arabia.
EM g201901590@kfupm.edu.sa; hjamaan@kfupm.edu.sa; alshayeb@kfupm.edu.sa
OI Alazba, Amal/0000-0002-9353-7872
FU King Fahd University of Petroleum and Minerals
FX The authors acknowledge the support of King Fahd University of Petroleum
   and Minerals in the development of this work.
CR AbuHassan A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2320
   Akiba T, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2623, DOI 10.1145/3292500.3330701
   Al-Shaaby A, 2020, ARAB J SCI ENG, V45, P2341, DOI 10.1007/s13369-019-04311-w
   Alalfi MH, 2018, SOFTW SYST MODEL, V17, P1287, DOI 10.1007/s10270-016-0557-6
   Alazba A., 2024, Empir. Softw. Eng. J.
   Alazba A, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10312-z
   Alazba A, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106648
   Alshayeb M, 2020, IEEE ACCESS, V8, P62738, DOI 10.1109/ACCESS.2020.2981742
   [Anonymous], TensorFlow | Google Open Source Projects
   Barriga A, 2021, J OBJECT TECHNOL, V20, DOI 10.5381/jot.2021.20.3.a1
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Fourati R, 2011, STUD COMPUT INTELL, V364, P17
   Ghannem A, 2016, SOFTWARE QUAL J, V24, P947, DOI 10.1007/s11219-015-9271-9
   Gidaris S, 2018, Arxiv, DOI arXiv:1803.07728
   Hebig R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P173, DOI 10.1145/2976767.2976778
   López JAH, 2022, SOFTW SYST MODEL, V21, P967, DOI 10.1007/s10270-021-00929-3
   Jaiswal A, 2021, TECHNOLOGIES, V9, DOI 10.3390/technologies9010002
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Lim TS, 2000, MACH LEARN, V40, P203, DOI 10.1023/A:1007608224229
   Liu H, 2021, IEEE T SOFTWARE ENG, V47, P1811, DOI 10.1109/TSE.2019.2936376
   Liu X, 2020, arXiv
   Maddeh M, 2021, IEEE ACCESS, V9, P71606, DOI 10.1109/ACCESS.2021.3078724
   Maddeh M, 2015, IFIP ADV INF COMM TE, V456, P574, DOI 10.1007/978-3-319-19578-0_47
   Maneerat N., 2011, Proceedings of the Eighth International Joint Conference on Computer Science and Software Engineering (JCSSE 2011), P331, DOI 10.1109/JCSSE.2011.5930143
   Misbhauddin M, 2019, SOFTW SYST MODEL, V18, P2013, DOI 10.1007/s10270-017-0628-3
   Misbhauddin M, 2015, EMPIR SOFTW ENG, V20, P206, DOI 10.1007/s10664-013-9283-7
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Mumtaz H, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2154
   Myung IJ, 2000, J MATH PSYCHOL, V44, P190, DOI 10.1006/jmps.1999.1283
   Rattan D, 2012, ANNU IEEE IND CONF, P1041
   Rosca D, 2021, PROCEDIA COMPUT SCI, V181, P861, DOI 10.1016/j.procs.2021.01.240
   Roy G. G., 1996, Proceedings. 1996 International Conference Software Engineering: Education and Practice, P256, DOI 10.1109/SEEP.1996.534008
   Sandouka R, 2023, PEERJ COMPUT SCI, V9, DOI 10.7717/peerj-cs.1370
   Sidhu Brahmaleen Kaur, 2022, International Journal of Computers and Applications, V44, P166, DOI 10.1080/1206212X.2020.1711616
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Vaswani A, 2023, Arxiv, DOI arXiv:1706.03762
   Watanabe S, 2022, Arxiv, DOI arXiv:2211.14411
   Yin X, 2021, P INT COMP SOFTW APP, P942, DOI 10.1109/COMPSAC51774.2021.00127
NR 38
TC 0
Z9 0
U1 4
U2 4
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 29
DI 10.1007/s10515-024-00429-w
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LV6S6
UT WOS:001189620900001
DA 2024-08-05
ER

PT J
AU Gerosa, M
   Trinkenreich, B
   Steinmacher, I
   Sarma, A
AF Gerosa, Marco
   Trinkenreich, Bianca
   Steinmacher, Igor
   Sarma, Anita
TI Can AI serve as a substitute for human subjects in software engineering
   research?
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Qualitative research; Software engineering; Foundation models; Large
   language models
AB Research within sociotechnical domains, such as software engineering, fundamentally requires the human perspective. Nevertheless, traditional qualitative data collection methods suffer from difficulties in participant recruitment, scaling, and labor intensity. This vision paper proposes a novel approach to qualitative data collection in software engineering research by harnessing the capabilities of artificial intelligence (AI), especially large language models (LLMs) like ChatGPT and multimodal foundation models. We explore the potential of AI-generated synthetic text as an alternative source of qualitative data, discussing how LLMs can replicate human responses and behaviors in research settings. We discuss AI applications in emulating humans in interviews, focus groups, surveys, observational studies, and user evaluations. We discuss open problems and research opportunities to implement this vision. In the future, an integrated approach where both AI and human-generated data coexist will likely yield the most effective outcomes.
C1 [Gerosa, Marco; Steinmacher, Igor] No Arizona Univ, Flagstaff, AZ 86011 USA.
   [Trinkenreich, Bianca; Sarma, Anita] Oregon State Univ, Corvallis, OR USA.
C3 Northern Arizona University; Oregon State University
RP Gerosa, M (corresponding author), No Arizona Univ, Flagstaff, AZ 86011 USA.
EM Marco.Gerosa@nau.edu; Bianca.Trinkenreich@oregonstate.edu;
   Igor.Steinmacher@nau.edu; Anita.Sarma@oregonstate.edu
RI Gerosa, Marco Aurelio/A-6686-2009; Igor, Steinmacher/B-6414-2012
OI Gerosa, Marco Aurelio/0000-0003-1399-7535; Igor,
   Steinmacher/0000-0002-0612-5790
FU NSF;  [2236198];  [2235601];  [2247929];  [2303043];  [2303042]
FX Partial support of the NSF Grants 2236198, 2235601, 2247929, 2303043,
   and 2303042. ChatGPT v4 was used to copy-edit this article.
CR Aher G. V., 2023, P 40 INT C MACHINE L, P337
   Argyle LP, 2023, POLIT ANAL, V31, P337, DOI 10.1017/pan.2023.2
   Biber D, 2019, REGIST STUD, V1, P42, DOI 10.1075/rs.18007.bib
   Burnett M, 2016, INTERACT COMPUT, V28, P760, DOI 10.1093/iwc/iwv046
   Chaves AP, 2022, ACM T COMPUT-HUM INT, V29, DOI 10.1145/3487193
   Chew R, 2023, Arxiv, DOI [arXiv:2306.14924, DOI 10.48550/ARXIV.2306.14924, 10.48550/arXiv.2306.14924]
   Dai SC, 2023, Arxiv, DOI arXiv:2310.15100
   De Paoli S, 2023, Arxiv, DOI arXiv:2310.06391
   Demszky D, 2023, NAT REV PSYCHOL, V2, P688, DOI 10.1038/s44159-023-00241-5
   Dillion D, 2023, TRENDS COGN SCI, V27, P597, DOI 10.1016/j.tics.2023.04.008
   Eliot L., 2023, The bold promise Of mega-personas as a new shake-up for prompt engineering generative AI techniques
   Gerosa M, 2021, PROC INT CONF SOFTW, P1046, DOI 10.1109/ICSE43902.2021.00098
   Hämäläinen P, 2023, PROCEEDINGS OF THE 2023 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2023, DOI 10.1145/3544548.3580688
   Hutson M, 2023, SCIENCE, V381, P121, DOI 10.1126/science.adj6791
   Jiang H, 2024, Arxiv, DOI [arXiv:2305.02547, 10.48550/arXiv.2305.02547]
   Jung SG, 2018, CHIIR'18: PROCEEDINGS OF THE 2018 CONFERENCE ON HUMAN INFORMATION INTERACTION & RETRIEVAL, P321, DOI 10.1145/3176349.3176893
   Kaddour J, 2023, Arxiv, DOI [arXiv:2307.10169, DOI 10.48550/ARXIV.2307.10169]
   Kim J, 2024, Arxiv, DOI arXiv:2305.09620
   Kokinda E, 2023, New Ideas and Emergi, P55, DOI 10.1109/ICSE-NIER58687.2023.00016
   Lee S, 2024, Arxiv, DOI arXiv:2311.00217
   Sanders NE, 2023, Arxiv, DOI arXiv:2307.04781
   Simmons G, 2023, Arxiv, DOI arXiv:2310.17888
   Smith M., 2022, 1 INT WORKSHOP RECRU
   Storey MA, 2020, EMPIR SOFTW ENG, V25, P4097, DOI 10.1007/s10664-020-09858-z
   SuguriMotoki F.Y., 2023, From data scarcity to data abundance: crafting synthetic survey data in management accounting using ChatGPT
   Treude C, 2023, Arxiv, DOI arXiv:2303.10131
   Trinkenreich B, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3510460
   Wang ZHL, 2024, Arxiv, DOI [arXiv:2307.05300, 10.48550/arXiv.2307.05300]
   Xiao Z., 2023, COMPANION P 28 INT C, P75, DOI [10.1145/3581754.3584136, DOI 10.1145/3581754.3584136]
   Zhou YC, 2023, Arxiv, DOI [arXiv:2211.01910, DOI 10.48550/ARXIV.2211.01910, 10.48550/arXiv.2211.01910]
NR 30
TC 1
Z9 1
U1 13
U2 15
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 13
DI 10.1007/s10515-023-00409-6
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EP2F7
UT WOS:001140056400001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Hashemi, S
   Mäntylä, M
AF Hashemi, Shayan
   Mantyla, Mika
TI OneLog: towards end-to-end software log anomaly detection
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Anomaly detection; Log analysis; Deep learning; Character-based
   classification; End-to-end learning; Software operations
AB With the growth of online services, IoT devices, and DevOps-oriented software development, software log anomaly detection is becoming increasingly important. Prior works mainly follow a traditional four-staged architecture (Preprocessor, Parser, Vectorizer, and Classifier). This paper proposes OneLog, which utilizes a single deep neural network instead of multiple separate components. OneLog harnesses convolutional neural network (CNN) at the character level to take digits, numbers, and punctuations, which were removed in prior works, into account alongside the main natural language text. We evaluate our approach in six message- and sequence-based data sets: HDFS, Hadoop, BGL, Thunderbird, Spirit, and Liberty. We experiment with Onelog with single-, multi-, and cross-project setups. Onelog offers state-of-the-art performance in our datasets. Onelog can utilize multi-project datasets simultaneously during training, which suggests our model can generalize between datasets. Multi-project training also improves Onelog performance making it ideal when limited training data is available for an individual project. We also found that cross-project anomaly detection is possible with a single project pair (Liberty and Spirit). Analysis of model internals shows that one log has multiple modes of detecting anomalies and that the model learns manually validated parsing rules for the log messages. We conclude that character-based CNNs are a promising approach toward end-to-end learning in log anomaly detection. They offer good performance and generalization over multiple datasets. We will make our scripts publicly available upon the acceptance of this paper.
C1 [Hashemi, Shayan] Univ Oulu, ITEE, M3S, Oulu, Finland.
   [Mantyla, Mika] Univ Helsinki, Dept Comp Sci, Helsinki, Finland.
C3 University of Oulu; University of Helsinki
RP Hashemi, S (corresponding author), Univ Oulu, ITEE, M3S, Oulu, Finland.
EM shayan.hashemi@oulu.fi; mika.mantyla@helsinki.fi
OI Mantyla, Mika/0000-0002-2841-5879
FU Academy of Finland [298020, 328058]; Academy of Finland; CSC - IT Center
   for Science, Finland
FX This work has been supported by the Academy of Finland (Grant IDs 298020
   and 328058). Additionally, the authors gratefully acknowledge CSC - IT
   Center for Science, Finland, for their generous computational resources.
CR Bach S, 2015, PLOS ONE, V10, DOI 10.1371/journal.pone.0130140
   Ballard D. H., 1987, P 6 NATL C ARTIFICIA, P279
   Bojarski M, 2016, Arxiv, DOI arXiv:1604.07316
   Bromley J., 1993, International Journal of Pattern Recognition and Artificial Intelligence, V7, P669, DOI 10.1142/S0218001493000339
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Du M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1285, DOI 10.1145/3133956.3134015
   Du M, 2016, IEEE DATA MINING, P859, DOI [10.1109/ICDM.2016.160, 10.1109/ICDM.2016.0103]
   Farzad A, 2021, Arxiv, DOI arXiv:1911.08744
   Glasmachers T., 2017, ASIAN C MACHINE LEAR, P17, DOI DOI 10.48550/ARXIV.1704.08305
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Guo HX, 2021, IEEE IJCNN, DOI 10.1109/IJCNN52387.2021.9534113
   Hashemi S, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-022-00365-7
   Le VH, 2021, Arxiv, DOI arXiv:2108.01955
   LeCun Y., 2015, Lenet-5, convolutional neural networks
   Lin QW, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P102, DOI 10.1145/2889160.2889232
   Lu SY, 2018, 2018 16TH IEEE INT CONF ON DEPENDABLE, AUTONOM AND SECURE COMP, 16TH IEEE INT CONF ON PERVAS INTELLIGENCE AND COMP, 4TH IEEE INT CONF ON BIG DATA INTELLIGENCE AND COMP, 3RD IEEE CYBER SCI AND TECHNOL CONGRESS (DASC/PICOM/DATACOM/CYBERSCITECH), P151, DOI 10.1109/DASC/PiCom/DataCom/CyberSciTec.2018.00037
   McInnes L, 2020, Arxiv, DOI [arXiv:1802.03426, 10.21105/joss.00861]
   Meng WB, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4739
   Nedelkoski S, 2020, Arxiv, DOI arXiv:2008.09340
   Oliner A, 2007, I C DEPEND SYS NETWO, P575, DOI 10.1109/DSN.2007.103
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Shahapure KR, 2020, PR INT CONF DATA SC, P747, DOI 10.1109/DSAA49011.2020.00096
   Shen SQ, 2016, Arxiv, DOI arXiv:1512.02433
   Shrikumar A., 2016, arXiv, DOI DOI 10.48550/ARXIV.1605.01713
   Shrikumar P., 2017, INT C MACHINE LEARNI, P3145, DOI DOI 10.5555/3305890.3306006
   Silver D, 2016, NATURE, V529, P484, DOI 10.1038/nature16961
   Starczewski A, 2015, LECT NOTES COMPUT SC, V9120, P49, DOI 10.1007/978-3-319-19369-4_5
   Sundararajan M, 2017, PR MACH LEARN RES, V70
   Winter Eyal, 2002, Handbook of Game Theory with Economic Applications, V3, P2025, DOI DOI 10.1016/S1574-0005(02)03016-3
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wu Ruihan, 2021, Advances in Neural Information Processing Systems, V34, P11745, DOI 10.48550/arXiv.2103.11766
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Zhang X, 2016, Arxiv, DOI arXiv:1509.01626
   Zhang X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P807, DOI 10.1145/3338906.3338931
   Zhu JM, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P121, DOI 10.1109/ICSE-SEIP.2019.00021
NR 35
TC 0
Z9 0
U1 7
U2 7
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 37
DI 10.1007/s10515-024-00428-x
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NY1V0
UT WOS:001203930800001
OA hybrid
DA 2024-08-05
ER

PT J
AU Houichime, T
   El Amrani, Y
AF Houichime, Tarik
   El Amrani, Younes
TI Optimized design refactoring (ODR): a generic framework for automated
   search-based refactoring to optimize object-oriented software
   architectures
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Object oriented design; Search-based refactoring; Complex numbers;
   Hilbert curve; Object oriented metrics; Genetic algorithms; Particle
   swarm optimization; Simulated annealing process
ID ALGORITHM; CONFLICT; METRICS; MODEL; FLOW
AB Software design optimization (SDO) demands advanced abstract reasoning to define optimal design components' structure and interactions. Modeling tools such as UML and MERISE, and to a degree, programming languages, are chiefly developed for lucid human-machine design dialogue. For effective automation of SDO, an abstract layer attuned to the machine's computational prowess is crucial, allowing it to harness its swift calculation and inference in determining the best design. This paper contributes an innovative and universal framework for search-based software design refactoring with an emphasis on optimization. The framework accommodates 44% of Fowler's cataloged refactorings. Owing to its adaptable and succinct structure, it integrates effortlessly with diverse optimization heuristics, eliminating the requirement for further adaptation. Distinctively, our framework offers an artifact representation that obviates the necessity for a separate solution representation, this unified dual-purpose representation not only streamlines the optimization process but also facilitates the computation of essential object-oriented metrics. This ensures a robust assessment of the optimized model through the construction of pertinent fitness functions. Moreover, the artifact representation supports parallel optimization processes and demonstrates commendable scalability with design expansion.
C1 [Houichime, Tarik; El Amrani, Younes] Mohammed V Univ Rabat, Lab Software Project Management, ENSIAS, Madinat Al Irfane BP 713, Rabat 10112, Morocco.
C3 Mohammed V University in Rabat
RP Houichime, T (corresponding author), Mohammed V Univ Rabat, Lab Software Project Management, ENSIAS, Madinat Al Irfane BP 713, Rabat 10112, Morocco.
EM tarik_houichime@um5.ac.ma; y.elamrani@um5r.ac.ma
RI Houichime, Tarik/KLV-0964-2024
OI Houichime, Tarik/0000-0003-3477-4912
CR Abid C, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P768, DOI 10.1109/ASE51524.2021.9678519
   Agnihotri Mansi, 2022, 2022 12th International Conference on Cloud Computing, Data Science & Engineering (Confluence), P41, DOI 10.1109/Confluence52989.2022.9734141
   Agnihotri M, 2020, J INF PROCESS SYST, V16, P915, DOI 10.3745/JIPS.04.0184
   Ahmadi H, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106893
   Alkhazi B, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P295, DOI 10.1145/2976767.2976782
   Amal B, 2014, LECT NOTES COMPUT SC, V8636, P31
   Anders S, 2009, BIOINFORMATICS, V25, P1231, DOI 10.1093/bioinformatics/btp152
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bowman M, 2010, IEEE T SOFTWARE ENG, V36, P817, DOI 10.1109/TSE.2010.70
   Bringmann K., 2021, P INT WORKSH INT WOR, DOI [10.48550/arXiv.2107.01721, DOI 10.48550/ARXIV.2107.01721]
   Cheikhi L., 2014, Int. J. Softw. Eng. Appl, V8, P359
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cinneide M. O., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P437, DOI 10.1109/ICSTW.2011.23
   Costa A, 2013, COMPUT IND ENG, V64, P937, DOI 10.1016/j.cie.2013.01.004
   Counsell S., 2019, 2019 ACM IEEE INT S, P1
   Cromwell HC, 2008, CLIN EEG NEUROSCI, V39, P69, DOI 10.1177/155005940803900209
   Di Penta M, 2005, J SYST SOFTWARE, V77, P225, DOI 10.1016/j.jss.2004.03.033
   Di Pompeo D, 2023, Arxiv, DOI [arXiv:2301.07500, 10.48550/arXiv.2301.07500, DOI 10.48550/ARXIV.2301.07500]
   Douglas RH., 1999, Bach an Eternal Golden Braid by Douglas R. Hofstadter
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   Francois-Michel D.R., 2023, github
   Gad AG, 2022, ARCH COMPUT METHOD E, V29, P2531, DOI 10.1007/s11831-021-09694-4
   Ghaith S., 2012, Int. Symp. Search Based Softw. Eng, V7515, P135, DOI [10.1007/978-3-642-33119-010, DOI 10.1007/978-3-642-33119-010]
   Ghannem Adnane, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P96, DOI 10.1007/978-3-642-39742-4_9
   Ghannem A, 2014, J SOFTW-EVOL PROC, V26, P692, DOI 10.1002/smr.1644
   Griffith I., 2011, P INT WORKSH MACH LE
   Gulia P., 2012, Int. J. Comput. Appl, DOI [10.5120/9403-3486, DOI 10.5120/9403-3486]
   Gungor M., 2019, Univ. J. Mathe. Appl, V2, P126, DOI [10.32323/ujma.587816, DOI 10.32323/UJMA.587816]
   Haner Kirgil EN, 2021, 2ND INTERNATIONAL INFORMATICS AND SOFTWARE ENGINEERING CONFERENCE (IISEC), DOI 10.1109/IISEC54230.2021.9672419
   Herold S, 2014, LECT NOTES COMPUT SC, V8627, P390, DOI 10.1007/978-3-319-09970-5_33
   Immanuel Savio D., 2019, 2019 International Conference on Communication and Electronics Systems (ICCES), P701, DOI 10.1109/ICCES45898.2019.9002372
   Imran M, 2013, PROCEDIA ENGINEER, V53, P491, DOI 10.1016/j.proeng.2013.02.063
   Katoch S, 2021, MULTIMED TOOLS APPL, V80, P8091, DOI 10.1007/s11042-020-10139-6
   Kaur Kuljit, 2010, Journal of Software Engineering and Applications, V3, P384, DOI 10.4236/jsea.2010.34043
   Kebir S, 2017, INFORM SOFTWARE TECH, V88, P17, DOI 10.1016/j.infsof.2017.03.009
   Leyman P, 2019, COMPUT OPER RES, V103, P184, DOI 10.1016/j.cor.2018.11.011
   Li ZX, 2017, COMPUT OPER RES, V84, P146, DOI 10.1016/j.cor.2017.03.002
   Liu H, 2008, IET SOFTW, V2, P446, DOI 10.1049/iet-sen:20070033
   Lyu C, 2022, Arxiv, DOI arXiv:2207.02026
   Mahouachi R, 2012, LECT NOTES COMPUT SC, V7212, P455, DOI 10.1007/978-3-642-28872-2_31
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   Masoud H, 2014, J SYST SOFTWARE, V93, P110, DOI 10.1016/j.jss.2014.02.053
   Mkaouer M.W., 2014, C S SEARCH BAS SOFTW, DOI [10.13140/2.1.1894.8485, DOI 10.13140/2.1.1894.8485]
   Moghadam IH, 2015, E-INFORMATICA, V9, P37, DOI 10.5277/e-Inf150103
   Moghadam IH, 2012, EUR CON SFTWR MTNCE, P43, DOI 10.1109/CSMR.2012.15
   Moghadam Iman Hemati., 2011, Proceeding of the 4th workshop on Refactoring tools - WRT'11, page, P41
   Mokaddem CE, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P257, DOI 10.1145/3239372.3239406
   Nguyen G., 2012, 21 INT C PATT REC IC
   O'Keeffe M., 2003, PPPJ 03, P59, DOI [10.1145/957289.957308, DOI 10.1145/957289.957308]
   O'Keeffe M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P247
   OKeeffe M., 2004, INT C SOFTW ENG
   OKeeffe M., 2007, GECCO 07, P1120, DOI [10.1145/1276958.1277177, DOI 10.1145/1276958.1277177]
   Okike E., 2010, IJCSI Int. J. Comp. Sci, V7, P3
   Ouni A, 2013, EUR CON SFTWR MTNCE, P221, DOI 10.1109/CSMR.2013.31
   Qayum F., 2011, Electron. Commun. EASST, DOI [10.14279/tuj.eceasst.38.577, DOI 10.14279/TUJ.ECEASST.38.577]
   Qayum F, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P43, DOI 10.1109/SSBSE.2009.27
   Rapaport W., 2023, Philosophy of Computer Science-Wiley-Blackwell
   RUTENBAR RA, 1989, IEEE CIRCUITS DEVICE, V5, P19, DOI 10.1109/101.17235
   Sandhu P., 2005, 9 PAC AS C INF SYST
   Santos Danilo B., 2017, Journal of Software, V12, P19, DOI 10.17706/jsw.12.1.19-34
   Schotter ER, 2012, VIS COGN, V20, P1110, DOI 10.1080/13506285.2012.735719
   Sun W., 2023, ACM Transactions on Software Engineering and Methodology
   Tawosi V, 2015, J SYST SOFTWARE, V109, P1, DOI 10.1016/j.jss.2015.06.067
   Tempero E, 2018, SCI COMPUT PROGRAM, V166, P214, DOI 10.1016/j.scico.2018.02.004
   van Ginneken LPPP, 2016, PROCEEDINGS OF THE 2016 INTERNATIONAL SYMPOSIUM ON PHYSICAL DESIGN (ISPD'16), P109, DOI 10.1145/2872334.2872346
   Wongpiang Ratapong, 2013, 2013 IEEE 4th International Conference on Electronics Information and Emergency Communication (ICEIEC), P160, DOI 10.1109/ICEIEC.2013.6835477
   Xenos M., 2000, P FESMA 2000 FED EUR
   Zhou L, 2021, IEEE T VIS COMPUT GR, V27, P1591, DOI 10.1109/TVCG.2020.3030473
NR 68
TC 0
Z9 0
U1 4
U2 4
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 48
DI 10.1007/s10515-024-00446-9
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TT0B0
UT WOS:001243380700002
DA 2024-08-05
ER

PT J
AU Zarrad, A
   Bahsoon, R
   Manimaran, P
AF Zarrad, Anis
   Bahsoon, Rami
   Manimaran, Priya
TI Optimizing regression testing with AHP-TOPSIS metric system for
   effective technical debt evaluation
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Software management; Regression testing; Technical debt;
   Modification-based reduction; AHP; TOPSIS
ID TEST-CASE SELECTION; HIERARCHY PROCESS
AB Regression testing is essential to ensure that the actual software product confirms the expected requirements following modification. However, it can be costly and time-consuming. To address this issue, various approaches have been proposed for selecting test cases that provide adequate coverage of the modified software. Nonetheless, problems related to omitting and/or rerunning unnecessary test cases continue to pose challenges, particularly with regard to technical debt (TD) resulting from code coverage shortcomings and/or overtesting. In the case of testing-related shortcomings, incurring TD may result in cost and time savings in the short run, but it can lead to future maintenance and testing expenses. Most prior studies have treated test case selection as a single-objective or two-objective optimization problem. This study introduces a multi-objective decision-making approach to quantify and evaluate TD in regression testing. The proposed approach combines the analytic-hierarchy-process (AHP) method and the technique of order preference by similarity to an ideal solution (TOPSIS) to select the most ideal test cases in terms of objective values defined by the test cost, code coverage, and test risk. This approach effectively manages the software regression testing problems. The AHP method was used to eliminate subjective bias when optimizing objective weights, while the TOPSIS method was employed to evaluate and select test-case alternatives based on TD. The effectiveness of this approach was compared to that of a specific multi-objective optimization method and a standard coverage methodology. Unlike other approaches, our proposed approach always accepts solutions based on balanced decisions by considering modifications and using risk analysis and testing costs against potential technical debt. The results demonstrate that our proposed approach reduces both TD and regression testing efforts.
C1 [Zarrad, Anis; Bahsoon, Rami; Manimaran, Priya] Univ Birmingham, Birmingham B15 2TT, England.
C3 University of Birmingham
RP Zarrad, A (corresponding author), Univ Birmingham, Birmingham B15 2TT, England.
EM a.zarrad@bham.ac.uk; r.bahsoon@bham.ac.uk; pmanimaran@conestogac.on.ca
CR Abreu R, 2009, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASE.2009.25
   Agrawal AP, 2020, INT J DISTRIB SYST T, V11, P53, DOI 10.4018/IJDST.2020010105
   Alonso JA, 2006, INT J UNCERTAIN FUZZ, V14, P445, DOI 10.1142/S0218488506004114
   ArcelliFontana M.Z., 2015, INT WORKSH MAN TECHN, P43
   Beena R., 2013, J. Soft. Eng. Appl, V4, P23
   Biswas S, 2011, INFORM-J COMPUT INFO, V35, P289
   Brown Y.C.N., 2010, P FSE SDP WORKSH FUT, P47
   Bryce RC, 2011, IEEE T SOFTWARE ENG, V37, P48, DOI 10.1109/TSE.2010.12
   Burguillo J., 2002, Electron. Notes Theor. Comput.Sci, V66, P50, DOI [10.1016/S1571-0661(04)80403-1, DOI 10.1016/S1571-0661(04)80403-1]
   Choudhary A, 2018, PROCEEDINGS 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P13, DOI 10.1145/3194718.3194722
   Chu P, 2002, MATH COMPUT MODEL, V35, P1077, DOI 10.1016/S0895-7177(02)00072-9
   Cibulski H., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P115, DOI 10.1109/ICSTW.2011.28
   Cunningham Ward, 1992, Addendum to the Proceedings on Object-Oriented Programming Systems, Languages, and Applications (Addendum), P29, DOI [10.1145/157709.157715, DOI 10.1145/157709.157715]
   DanielGuaman L.B.-G., 2017, C INF SYST TECHN CIS, P123
   Di Nucci D, 2020, IEEE T SOFTWARE ENG, V46, P674, DOI 10.1109/TSE.2018.2868082
   Farooq SU, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1883
   github, A program that uses artificial neural networks to recognize handwritten equations in images and calculates its result
   Guo Y., 2011, P 2 WORKSH MAN TECHN, P31, DOI [10.1145/1985362.1985370, DOI 10.1145/1985362.1985370]
   Gupta A, 2021, BAGHDAD SCI J, V18, P1056, DOI 10.21123/bsj.2021.18.2(Suppl.).1056
   Harikarthik SK, 2019, CLUSTER COMPUT, V22, P11425, DOI 10.1007/s10586-017-1401-7
   Huang RB, 2020, Arxiv, DOI arXiv:2007.03885
   Hwang C.-L., 1981, Multiple Attribute Decision Making: Methods and Applications, DOI DOI 10.1007/978-3-642-48318-9
   Leitner A., 2007, Autom. Softw. Eng, V4, P417
   Lenarduzzi V., 2019, INT SYMP EMP SOFTWAR, V35, P1, DOI [DOI 10.1109/ESEM.2019.8870159, DOI 10.1109/esem.2019.8870159]
   Lessmann S., 2008, Softw. Qual. J, V16, P405
   Li W., 2008, Softw. Maint, DOI [10.1109/ICSM.2008.4658075, DOI 10.1109/ICSM.2008.4658075]
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Mansour N, 2002, INFORM SOFTWARE TECH, V44, P431, DOI 10.1016/S0950-5849(02)00027-7
   Martini A, 2018, SCI COMPUT PROGRAM, V163, P42, DOI 10.1016/j.scico.2018.03.007
   Narciso EN, 2014, INT J SOFTW ENG KNOW, V24, P653, DOI 10.1142/S0218194014500259
   Nugroho A., 2011, P 2 WORKSH MAN TECHN, P1
   Olsthoorn M., 13 S SEARCH BAS SOFT
   SAATY TL, 1990, EUR J OPER RES, V48, P9, DOI 10.1016/0377-2217(90)90057-I
   Saber M.P. T., 2018, IEEE C EV COMP CEC, P1
   Sapna PG, 2015, PROCEDIA COMPUT SCI, V47, P188, DOI 10.1016/j.procs.2015.03.197
   Shakeri Z., 2016 IEE EACM 3 INT
   Shi JQ, 2018, OPEN PHYS, V16, P355, DOI 10.1515/phys-2018-0048
   Soares T.M. H., 2015, INT C INF TECHN, P43
   Supatsara Wattanakriengkrai H.H., 2018, INT WORKSH EMP SOFTW, V35, P13
   TAKEDA E, 1995, EUR J OPER RES, V86, P315, DOI 10.1016/0377-2217(95)00095-8
   Tornhill A., 2018 IEEE INT C SOFT
   Tornhill A, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P59, DOI 10.1145/3194164.3194187
   Trigui S, 2018, INTEL SERV ROBOT, V11, P355, DOI 10.1007/s11370-018-0259-8
   Wiklund K., 2012 IEEE 5 INT C SO
   Wu HY, 2020, IEEE T SOFTWARE ENG, V46, P302, DOI 10.1109/TSE.2018.2852744
   Xu ZH, 2009, ASIA PAC SOFWR ENG, P406, DOI 10.1109/APSEC.2009.29
   Yoo M., 2007, P INT S SOFTW TEST A, P140, DOI [DOI 10.1145/1273463.1273483.83T, 10.1145/1273463.1273483]
   Yoo S, 2011, LECT NOTES COMPUT SC, V6956, P219, DOI 10.1007/978-3-642-23716-4_20
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
   Zazworka N., 2011, P 2 WORKSH MAN TECHN, P17, DOI [10.1145/1985362.1985366, DOI 10.1145/1985362.1985366]
NR 50
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 58
DI 10.1007/s10515-024-00458-5
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XW7A4
UT WOS:001264767700001
DA 2024-08-05
ER

PT J
AU Vescan, A
   Gaceanu, R
   Serban, C
AF Vescan, Andreea
   Gaceanu, Radu
   Serban, Camelia
TI Exploring the impact of data preprocessing techniques on composite
   classifier algorithms in cross-project defect prediction
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Defect prediction; Cross-project; Replication
ID SOFTWARE; MACHINE
AB Success in software projects is now an important challenge. The main focus of the engineering community is to predict software defects based on the history of classes and other code elements. However, these software defect prediction techniques are effective only as long as there is enough data to train the prediction model. To mitigate this problem, cross-project defect prediction is used. The purpose of this research investigation is twofold: first, to replicate the experiments in the original paper proposal, and second, to investigate other settings regarding defect prediction with the aim of providing new insights and results regarding the best approach. In this study, three composite algorithms, namely AvgVoting, MaxVoting and Bagging are used. These algorithms integrate multiple machine classifiers to improve cross-project defect prediction. The experiments use pre-processed methods (normalization and standardization) and also feature selection. The results of the replicated experiments confirm the original findings when using raw data for all three methods. When normalization is applied, better results than in the original paper are obtained. Even better results are obtained when feature selection is used. In the original paper, the MaxVoting approach shows the best performance in terms of the F-measure, and BaggingJ48 shows the best performance in terms of cost-effectiveness. The same results in terms of F-measure were obtained in the current experiments: best MaxVoting, followed by AvgVoting and then by BaggingJ48. Our results emphasize the previously obtained outcome; the original study is confirmed when using raw data. Moreover, we obtained better results when using preprocessing and feature selection.
C1 [Vescan, Andreea; Gaceanu, Radu; Serban, Camelia] Babes Bolyai Univ, Comp Sci Dept, M Kogalniceanu 1, Cluj Napoca 400084, Cluj, Romania.
C3 Babes Bolyai University from Cluj
RP Vescan, A (corresponding author), Babes Bolyai Univ, Comp Sci Dept, M Kogalniceanu 1, Cluj Napoca 400084, Cluj, Romania.
EM andreea.vescan@ubbcluj.ro; radu.gaceanu@ubbcluj.ro;
   camelia.serban@ubbcluj.ro
FU Ministerul Cercetabreve;rii, Inovabreve;rii scedil;i Digitalizabreve;rii
   [PN-III-P1 - \]; Ministry of Research, Innovation, and Digitization,
   CNCS/CCCDI - UEFISCDI
FX This work was funded by the Ministry of Research, Innovation, and
   Digitization, CNCS/CCCDI - UEFISCDI, project number PN-III-P1 -
   \documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym}
   \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy}
   \usepackage{mathrsfs} \usepackage{upgreek}
   \setlength{\oddsidemargin}{-69pt} \begin{document}$$-$$\end{document}
   1.1-TE2021-0892 within PNCDI III.
CR Abreu FBE, 1996, PROCEEDINGS OF THE 3RD INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, P90, DOI 10.1109/METRIC.1996.492446
   Aljamaan H, 2020, PROCEEDINGS OF THE 16TH ACM INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, PROMISE 2020, P1, DOI 10.1145/3416508.3417114
   Amasaki S, 2021, 2021 47TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA 2021), P279, DOI 10.1109/SEAA53835.2021.00042
   Amasaki S, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P32, DOI 10.1145/3273934.3273938
   Bai J., 2022, Inf. Softw. Technol., V144, DOI [10.1016/j.infsof.2022.106831, DOI 10.1016/J.INFSOF.2022.106831]
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Bezerra MER, 2007, IEEE IJCNN, P2874
   Bowes D, 2018, SOFTWARE QUAL J, V26, P525, DOI 10.1007/s11219-016-9353-3
   Carvalho AM, 2007, LECT NOTES COMPUT SC, V4830, P16
   Carver J. C., 2010, INT WORKSH REPL EMP, P2
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   Ceylan E, 2006, EUROMICRO CONF PROC, P240, DOI 10.1109/EUROMICRO.2006.56
   Fagerholm F., 2019, 13 ACM IEEEE INT S E, P1
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Guo YC, 2018, PROC IEEE ACM INT C, P325, DOI 10.1145/3183440.3194992
   Gupta S, 2017, COMPUTING, V99, P889, DOI 10.1007/s00607-016-0538-1
   Ha DA, 2019, SOICT 2019: PROCEEDINGS OF THE TENTH INTERNATIONAL SYMPOSIUM ON INFORMATION AND COMMUNICATION TECHNOLOGY, P49, DOI 10.1145/3368926.3369711
   Han J., 2022, Data mining: concepts and techniques
   Herbold S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10092-4
   HESTENES MR, 1952, J RES NAT BUR STAND, V49, P409, DOI 10.6028/jres.049.044
   Hryszko J., 2017, SOFTWARE ENG CHALLEN, V504, P85
   Humphreys J, 2019, INT WORK REAL ARTIF, P49, DOI 10.1109/RAISE.2019.00016
   Kumar L, 2018, FRONT INFORM TECH EL, V19, P864, DOI 10.1631/FITEE.1601501
   Lamba T., 2017, Indian J, V7, P82
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Li R, 2019, 2019 CROSS STRAIT QUAD-REGIONAL RADIO SCIENCE AND WIRELESS TECHNOLOGY CONFERENCE (CSQRWC), DOI 10.1109/csqrwc.2019.8799249
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Madeyski L, 2017, IEEE WORK CONF MIN S, P515, DOI 10.1109/MSR.2017.46
   Mona J., 2023, Int. J. Intell. Syst. Appl. Eng., V11, P12
   Moritz P, 2016, JMLR WORKSH CONF PRO, V51, P249
   Mustaqeem M, 2021, CLUSTER COMPUT, V24, P2581, DOI 10.1007/s10586-021-03282-8
   Nelson A, 2011, SOFTWARE PRACT EXPER, V41, P283, DOI 10.1002/spe.1004
   NezhadShokouhi MM, 2020, J SUPERCOMPUT, V76, P602, DOI 10.1007/s11227-019-03051-w
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Pachouly J, 2022, ENG APPL ARTIF INTEL, V111, DOI 10.1016/j.engappai.2022.104773
   Pan C, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9102138
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Polikar R., 2009, Scholarpedia, V4, P1, DOI [DOI 10.4249/SCHOLARPEDIA.2776, 10.4249/scholarpedia.2776]
   Pushphavathi T. P., 2017, 2017 International Conference on Energy, Communication, Data Analytics and Soft Computing (ICECDS), P3003, DOI 10.1109/ICECDS.2017.8390007
   Rai A, 2017, PROCEEDINGS OF THE 2017 3RD INTERNATIONAL CONFERENCE ON APPLIED AND THEORETICAL COMPUTING AND COMMUNICATION TECHNOLOGY (ICATCCT), P347, DOI 10.1109/ICATCCT.2017.8389159
   Rhmann Wasiur, 2020, International Journal of Information Technology, V12, P531, DOI 10.1007/s41870-018-0244-7
   Ryu D, 2017, SOFTWARE QUAL J, V25, P235, DOI 10.1007/s11219-015-9287-1
   Sharma Deepak, 2019, International Journal of Information Technology, V11, P37, DOI 10.1007/s41870-018-0211-3
   Shepperd M, 2018, INFORM SOFTWARE TECH, V99, P120, DOI 10.1016/j.infsof.2018.01.006
   Soe Y.N., 2018, 2018 12 S E AS TU CO, V1, P1
   Sun J, 2018, INT CONF CLOUD COMPU, P567, DOI 10.1109/CCIS.2018.8691373
   Suresh Y, 2012, PROC TECH, V1, P420, DOI 10.1016/j.protcy.2012.10.050
   Tunkel S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10224-4
   Vescan A., Composite Classifier Algorithms in Cross-Project Defect Prediction
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Witten IH, 2011, MOR KAUF D, P1
   Wu F., 2018, IEEE Trans. Softw. Eng., V45, P311, DOI [10.1109/TSE.2018.2811486, DOI 10.1109/TSE.2018.2811486]
   Wu F, 2018, IEEE T RELIAB, V67, P581, DOI 10.1109/TR.2018.2804922
   Yan M, 2017, INT SYMP EMP SOFTWAR, P344, DOI 10.1109/ESEM.2017.48
   Ying Liu, 2020, 2019 6th International Conference on Dependable Systems and Their Applications (DSA). Proceedings, P521, DOI 10.1109/DSA.2019.00095
   Zhang Y, 2018, FRONT COMPUT SCI-CHI, V12, P280, DOI 10.1007/s11704-017-6015-y
   Zhu K., 2020, Comput. Mater. Contin, V62, P1189
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 61
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 47
DI 10.1007/s10515-024-00454-9
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TT0B0
UT WOS:001243380700001
OA hybrid
DA 2024-08-05
ER

PT J
AU Zhang, Y
   Guan, K
   Fang, LN
AF Zhang, Yang
   Guan, Ke
   Fang, Lining
TI MIRROR: multi-objective refactoring recommendation via correlation
   analysis
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Refactoring; Multi-objective optimization; Refactoring recommendation;
   Correlation analysis
ID ALGORITHM; TOOL
AB Refactoring is a critical but complex process to improve code quality by altering software structure without changing the observable behavior. Search-based approaches have been proposed to recommend refactoring solutions. However, existing works tend to leverage all the sub-attributes in an objective and ignore the relationship between the sub-attributes. Furthermore, the types of refactoring operations in the existing works can be further augmented. To this end, this paper proposes a novel approach, called MIRROR, to recommend refactoring by employing a multi-objective optimization across three objectives: (i) improving quality, (ii) removing code smell, and (iii) maximizing the similarity to refactoring history. Unlike previous works, MIRROR provides a way to further optimize attributes in each objective. To be more specific, given an objective, MIRROR investigates the possible correlations among attributes and selects those attributes with low correlations as the representation of this objective. MIRROR is evaluated on 6 real-world projects by answering 6 research questions. The experimental results demonstrate that MIRROR recommends an average of 43 solutions for each project. Furthermore, we compare MIRROR against existing tools JMove and QMove, and show that the F1 of MIRROR is 5.63% and 3.75% higher than that of JMove and QMove, demonstrating the effectiveness of MIRROR.
C1 [Zhang, Yang; Guan, Ke; Fang, Lining] Hebei Univ Sci & Technol, Sch Informat Sci & Engn, Shijiazhuang, Hebei, Peoples R China.
   [Zhang, Yang] Hebei Technol Innovat Ctr Intelligent IoT, Shijiazhuang, Peoples R China.
C3 Hebei University of Science & Technology
RP Zhang, Y; Fang, LN (corresponding author), Hebei Univ Sci & Technol, Sch Informat Sci & Engn, Shijiazhuang, Hebei, Peoples R China.; Zhang, Y (corresponding author), Hebei Technol Innovat Ctr Intelligent IoT, Shijiazhuang, Peoples R China.
EM zhangyang@hebust.edu.cn; gk15284306525@163.com; fanglining1228@163.com
FU Hebei Natural Science Foundation [F2023208001]; Hebei Oversea High-level
   Talent Foundation [C20230358]; Hebei Graduate Innovation Project
   [CXZZSS2022081]
FX The authors would like to thank the insightful comments and suggestions
   of those anonymous reviewers, which have improved the presentation. This
   work is partially supported by the Hebei Natural Science Foundation
   under Grant No.F2023208001, the Hebei Oversea High-level Talent
   Foundation under Grant No.C20230358, and the Hebei Graduate Innovation
   Project under Grant No. CXZZSS2022081.
CR Alizadeh V, 2020, IEEE T SOFTWARE ENG, V46, P932, DOI 10.1109/TSE.2018.2872711
   Aniche M, 2020, Arxiv, DOI arXiv:2001.03338
   Antezana AS, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P174, DOI 10.1109/ICSE-Companion.2019.00071
   apache, 2022, Xerces-j
   Apache, 2022, ABOUT US
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   BELL D., 2000, SOFTWARE ENG PROGRAM, V3rd
   Brown William H., 1998, AntiPatterns: Refactoring Software, Architectures, and Projects in Crisis, V1st
   Cinnéide MO, 2012, INT SYMP EMP SOFTWAR, P49, DOI 10.1145/2372251.2372260
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2006, P WORLD C COMP INT, P3352
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   Fokaefs Marios, 2007, 2007 IEEE International Conference on Software Maintenance, P519, DOI 10.1109/ICSM.2007.4362679
   Foster SR, 2012, PROC INT CONF SOFTW, P222, DOI 10.1109/ICSE.2012.6227191
   Fowler Martin, 1997, 11 EUROPEAN C
   Ganttproject, 2022, About us
   Github, 2018, About us
   Griffith Isaac, 2011, Proceedings of the ISCA 24th International Conference on Computer Applications in Industry and Engineering, P316
   Jfreechart, 2022, About us
   Jhotdraw, 2022, About us
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   KOZA JR, 1994, STAT COMPUT, V4, P87, DOI 10.1007/BF00175355
   [吴楠 Wu Nan], 2015, [中国科学. 信息科学, Scientia Sinica Informationis], V45, P623
   Lin Y, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P535, DOI 10.1145/2950290.2950317
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   Marinescu C., 2005, P INT C SOFTW MAINT, P77
   Mkaouer M., 2014, P 29 ACM IEEE INT C, P331, DOI DOI 10.1145/2642937.2642965.URL
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Moha N, 2008, LECT NOTES ARTIF INT, V4933, P289, DOI 10.1007/978-3-540-78137-0_21
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Mohan M, 2017, LECT NOTES COMPUT SC, V10611, P556, DOI 10.1007/978-3-319-69926-4_46
   O'Keeffe M, 2008, J SOFTW MAINT EVOL-R, V20, P345, DOI 10.1002/smr.378
   Ouni A., 2015, A multi-objective refactoring approach to introduce design patterns and fix anti-patterns
   Ouni A, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1843
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1461
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Rebai S, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106332
   Rhino, 2022, About us
   Silva D, 2015, Arxiv, DOI arXiv:1506.06086
   Couto CMS, 2015, PROCEEDINGS OF THE 17TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY (SBQS), P11, DOI 10.1145/3275245.3275247
   Terra R, 2018, J SYST SOFTWARE, V138, P19, DOI 10.1016/j.jss.2017.11.073
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Ujihara N, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P482, DOI 10.1109/SANER.2017.7884658
   Wang X., 2000, Syst. Eng. Theory Pract., V20, P63, DOI [10.12011/1000-6788(2000)12-63, DOI 10.12011/1000-6788(2000)12-63]
   Zanetti M.S., 2014, P 13 INT C MOD MODUL, P73
   Zhang Y., 2022, J. Softw, V005, P033
   Zhang Y, 2022, KNOWL-BASED SYST, V255, DOI 10.1016/j.knosys.2022.109737
   Zhao YY, 2022, IEEE T RELIAB, V71, P698, DOI 10.1109/TR.2022.3159851
NR 53
TC 1
Z9 1
U1 7
U2 17
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD JUN
PY 2024
VL 31
IS 1
AR 2
DI 10.1007/s10515-023-00400-1
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA W0YT4
UT WOS:001088978700001
DA 2024-08-05
ER

PT J
AU Li, ZQ
   Du, QN
   Zhang, HY
   Jing, XY
   Wu, F
AF Li, Zhiqiang
   Du, Qiannan
   Zhang, Hongyu
   Jing, Xiao-Yuan
   Wu, Fei
TI An empirical study of data sampling techniques for just-in-time software
   defect prediction
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Just-in-time software defect prediction; Class imbalance; Data sampling;
   Empirical study; Software quality assurance
ID MODELS
AB Just-in-time software defect prediction (JIT-SDP) is a fine-grained, easy-to-trace, and practical method. Unfortunately, JIT-SDP usually suffers from the class imbalance problem, which affects the performance of the models. Data sampling is one of the commonly used class imbalance techniques to overcome this problem. However, there is a lack of comprehensive empirical studies to compare different data sampling techniques on the performance of JIT-SDP. In this paper, we consider both defect classification and defect ranking, two typical application scenarios. To this end, we performed an empirical comparison of 10 data sampling algorithms on the performance of JIT-SDP. Extensive experiments on 10 open-source projects with 12 performance measures show that the effectiveness of data sampling techniques can indeed vary relying on the specific evaluation measures in both defect classification and defect ranking scenarios. Specifically, the RUM algorithm has demonstrated superior performance overall in the context of defect classification, particularly in F-measure, AUC, and MCC. On the other hand, for defect ranking, the ENN algorithm has emerged as the most favorable option, exhibiting perfect results in Popt\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$P_{opt}$$\end{document}, Recall@20%, and F-measure@20%. However, data sampling techniques can lead to an increase in false alarms and require the inspection of a higher number of changes. These findings highlight the importance of carefully selecting the appropriate data sampling technique based on the specific evaluation measures for different scenarios.
C1 [Li, Zhiqiang; Du, Qiannan] Shaanxi Normal Univ, Sch Comp Sci, Xian 710119, Peoples R China.
   [Zhang, Hongyu] Chongqing Univ, Sch Big Data & Software Engn, Chongqing 401331, Peoples R China.
   [Jing, Xiao-Yuan] Wuhan Univ, Sch Comp Sci, Wuhan 430072, Peoples R China.
   [Jing, Xiao-Yuan] Guangdong Univ Petrochem Technol, Sch Comp, Maoming 525000, Peoples R China.
   [Wu, Fei] Nanjing Univ Posts & Telecommun, Coll Automat & Coll Artificial Intelligence, Nanjing 210023, Peoples R China.
C3 Shaanxi Normal University; Chongqing University; Wuhan University;
   Guangdong University of Petrochemical Technology; Nanjing University of
   Posts & Telecommunications
RP Li, ZQ (corresponding author), Shaanxi Normal Univ, Sch Comp Sci, Xian 710119, Peoples R China.
EM lizq@snnu.edu.cn; duqiannan99@outlook.com; hyzhang@cqu.edu.cn;
   jingxy_2000@126.com; wufei_8888@126.com
FU National Natural Science Foundation of China; Natural Science Basic
   Research Program of Shaanxi Province [2024JC-YBMS-497]; China
   Scholarship Council;  [61902228];  [62176069]
FX The authors would like to thank the editors and anonymous reviewers for
   their constructive comments and suggestions. This work is partially
   funded by the National Natural Science Foundation of China (Grant Nos.:
   61902228 and 62176069), Natural Science Basic Research Program of
   Shaanxi Province (Grant No.: 2024JC-YBMS-497), and funded by the China
   Scholarship Council.
CR Agrawal Amritanshu, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE). Proceedings, P1050, DOI 10.1145/3180155.3180197
   Bennin KE, 2022, IET SOFTW, V16, P185, DOI 10.1049/sfw2.12052
   Bennin KE, 2019, EMPIR SOFTW ENG, V24, P602, DOI 10.1007/s10664-018-9633-6
   Cabral GG, 2023, IEEE T SOFTWARE ENG, V49, P1342, DOI 10.1109/TSE.2022.3175789
   Cabral GG, 2019, PROC INT CONF SOFTW, P666, DOI 10.1109/ICSE.2019.00076
   Chen HW, 2021, IEEE T SOFTWARE ENG, V47, P2803, DOI 10.1109/TSE.2020.2968520
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Guo HX, 2017, EXPERT SYST APPL, V73, P220, DOI 10.1016/j.eswa.2016.12.035
   Haitao Xu, 2021, Artificial Intelligence and Security: 7th International Conference, ICAIS 2021. Lecture Notes in Computer Science, Information Systems and Applications, incl. Internet/Web, and HCI (12737), P54, DOI 10.1007/978-3-030-78612-0_5
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hasanin T, 2019, J BIG DATA-GER, V6, DOI 10.1186/s40537-019-0274-4
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Krawczyk B, 2016, PROG ARTIF INTELL, V5, P221, DOI 10.1007/s13748-016-0094-0
   Lemaître G, 2017, J MACH LEARN RES, V18
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li WW, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106364
   Li Z., Appendices for "an empirical study of data sampling techniques for just-in-time software defect prediction
   Li ZQ, 2024, AUTOMAT SOFTW ENG, V31, DOI 10.1007/s10515-024-00424-1
   Li ZQ, 2023, IEEE T SOFTWARE ENG, V49, P1941, DOI 10.1109/TSE.2022.3204589
   Li ZQ, 2021, IEEE T RELIAB, V70, P996, DOI 10.1109/TR.2021.3074660
   Li ZQ, 2019, AUTOMAT SOFTW ENG, V26, P599, DOI 10.1007/s10515-019-00259-1
   Li ZQ, 2019, IEEE T SOFTWARE ENG, V45, P391, DOI 10.1109/TSE.2017.2780222
   Li ZQ, 2018, IET SOFTW, V12, P161, DOI 10.1049/iet-sen.2017.0148
   Li ZQ, 2018, AUTOMAT SOFTW ENG, V25, P201, DOI 10.1007/s10515-017-0220-7
   Liu JP, 2017, INT SYMP EMP SOFTWAR, P11, DOI 10.1109/ESEM.2017.8
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Ni C, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P672, DOI 10.1145/3540250.3549165
   Ni C, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3508479
   Ni C, 2022, IEEE T SOFTWARE ENG, V48, P786, DOI 10.1109/TSE.2020.3001739
   Niu JW, 2022, SOFTWARE QUAL J, V30, P917, DOI 10.1007/s11219-022-09588-z
   Shihab E., 2012, P ACM SIGSOFT 20 INT, P1
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Tabassum S, 2020, PROC INT CONF SOFTW, P554, DOI 10.1145/3377811.3380403
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Yan M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1308, DOI 10.1145/3368089.3417048
   Yang X., 2019, P 7 INT WORKSH QUANT, P12
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Zeng ZR, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P427, DOI 10.1145/3460319.3464819
   Zhang THR, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10185-8
   Zhou X, 2022, INT C PROGRAM COMPRE, P229, DOI 10.1145/3524610.3527910
NR 60
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 56
DI 10.1007/s10515-024-00455-8
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UZ3Y6
UT WOS:001251859900001
DA 2024-08-05
ER

PT J
AU Ayub, M
   Khan, MW
   Janjua, MU
AF Ayub, Maha
   Khan, Muhammad Waiz
   Janjua, Muhammmad Umar
TI Sound analysis and migration of data from Ethereum smart contracts
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Blockchain; Smart contract; State extraction; Migration; State
   verification
AB With the addition of multiple blockchain platforms in the ecosystem, the Dapp owners need to migrate their smart contracts from one platform to another to remain competitive, cost-effective, and secure. A smart contract is a piece of code that contains logic and data. To migrate a smart contract, whether it's on the same blockchain platform or a different one, we need both its source code that represents the logic and data that indicate the state of the contract. The source code can be easily set up, but to complete the migration, we have to extract the current state of the contract. In this paper, we have developed an advanced state extraction technique that uses static analysis to analyze the smart contract's call graph and events, and extracts the entire storage state from the storage trie, along with the proper associations across function calls, enabling users to visualize, manage, and transform the state as desired for migration. The soundness of the extracted state was confirmed using the method of abstract interpretation. Further, the migration adapter is designed to transform the extracted state into slot-value pairs and migrate it to the target blockchain. Using our new approach, we were able to completely analyze 14% more smart contracts with the extraction of 53% more data by analyzing function calls and event logs from 67,993 contracts and also migrated some contracts to the multiple popular EVM-compatible blockchains.
C1 [Ayub, Maha; Khan, Muhammad Waiz; Janjua, Muhammmad Umar] Informat Technol Univ, Dept Comp Sci, Lahore, Punjab, Pakistan.
RP Ayub, M (corresponding author), Informat Technol Univ, Dept Comp Sci, Lahore, Punjab, Pakistan.
EM maha.ayub@itu.edu.pk; waiz.khan@itu.edu.pk; umar.janjua@itu.edu.pk
FU National Center of Cyber Security (NCCS) Pakistan
FX This research project was partially funded by the National Center of
   Cyber Security (NCCS) Pakistan.
CR Academy B., 2023, Binance academy
   [Anonymous], 2021, Ethereum:history and Forks of ethereum
   [Anonymous], 2016, Web3 Dapps and nfts
   Ayub M, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3548683
   Bandara H.D., 2020, EUROPLOP 20, DOI [10.1145/3424771.3424796, DOI 10.1145/3424771.3424796]
   bit, 2021, Polygon: \$28b investment firm migrates equity from ethereum to polygon, upgrading speed, liquidity, and compliance
   bnbchain, 2022, Binance: Binance: Binance Smart Chain: Binance bridge: binance Swap: Binance.org
   Chriseth Hari, 2021, Layout of state variables in storage
   Coinbase, 2012, COINBASE wallet
   Cousot P., 1992, Journal of Logic and Computation, V2, P511, DOI 10.1093/logcom/2.4.511
   Csiro, 2021, Token swap
   EminSirer T.Y., 2020, Avalanche
   Gondek C., 2023, Polygon vs. Ethereum-what's the difference
   Herlihy M, 2018, PODC'18: PROCEEDINGS OF THE 2018 ACM SYMPOSIUM ON PRINCIPLES OF DISTRIBUTED COMPUTING, P245, DOI 10.1145/3212734.3212736
   infura, 2016, Infura: Ethereum API: Ipfs API amp; gateway: ETH Nodes as a service
   JayntiKanani S.N., 2017, Polygon
   Kwon J., 2021, Internet of blockchains
   Kwon J., 2019, The internet of Blockchains
   Makers D.W., 2023, How Ethereum manages transactions
   Marr Bernard, 2018, Blockchain: a very short history of ethereum everyone should read
   Marx Steve., 2018, Understanding Ethereum smart contract storage
   Metamask, 2022, The Ethereum address format and why it matters when using metamask
   Monarchy R., 2023, Binance smart contracts (BSC)
   Murdock M., 2022, A deep dive. Avalanche bridge built by Ava Labs
   Nielson F., 1991, Data flow analysis, V2, P35
   Paik HY, 2019, IEEE ACCESS, V7, P186091, DOI 10.1109/ACCESS.2019.2961404
   Shuttleworth D., 2022, Neon: An Ethereum Virtual Machine on Solana
   Suisse B., 2021, Compatible competition-empowering or encroaching on ethereum?: Bitcoin Suisse
   trailofbits, Josselinfeist: How contract migration works
   Wallet T., 2017, Best cryptocurrency wallet: ethereum wallet: Erc20 wallet
   web3py, 2023, web3py: Introduction
   web3py, 2023, Providers
   Westerkamp M., 2022, 2022 IEEE INT C BLOC, P1
   Wood G., 2016, "Polkadot: Vision for a heterogeneous multi-chain framework
   Wood G., 2020, Polkadot: Web3 interoperability: decentralized blockchain
   Zheng PL, 2019, Arxiv, DOI arXiv:1911.00169
NR 36
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 21
DI 10.1007/s10515-024-00422-3
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JF9I0
UT WOS:001171865900001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Ahsan, F
   Anwer, F
AF Ahsan, Fatma
   Anwer, Faisal
TI A systematic literature review on software security testing using
   metaheuristics
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE SBSST; Meta-heuristic; Optimization algorithm; Evolutionary algorithm;
   Software security testing; Code coverage; XSS; SQLI; XMLI; Program crash
ID TEST DATA GENERATION; GENETIC ALGORITHMS; SEARCH; STATE; ENVIRONMENT;
   COVERAGE
AB The security of an application is critical for its success, as breaches cause loss for organizations and individuals. Search-based software security testing (SBSST) is the field that utilizes metaheuristics to generate test cases for the software testing for some pre-specified security test adequacy criteria This paper conducts a systematic literature review to compare metaheuristics and fitness functions used in software security testing, exploring their distinctive capabilities and impact on vulnerability detection and code coverage. The aim is to provide insights for fortifying software systems against emerging threats in the rapidly evolving technological landscape. This paper examines how search-based algorithms have been explored in the context of code coverage and software security testing. Moreover, the study highlights different metaheuristics and fitness functions for security testing and code coverage. This paper follows the standard guidelines from Kitchenham to conduct SLR and obtained 122 primary studies related to SBSST after a multi-stage selection process. The papers were from different sources journals, conference proceedings, workshops, summits, and researchers' webpages published between 2001 and 2022. The outcomes demonstrate that the main tackled vulnerabilities using metaheuristics are XSS, SQLI, program crash, and XMLI. The findings have suggested several areas for future research directions, including detecting server-side request forgery and security testing of third-party components. Moreover, new metaheuristics must also need to be explored to detect security vulnerabilities that are still unexplored or explored significantly less. Furthermore, metaheuristics can be combined with machine learning and reinforcement learning techniques for better results. Some metaheuristics can be designed by looking at the complexity of security testing and exploiting more fitness functions related to detecting different vulnerabilities.
C1 [Ahsan, Fatma; Anwer, Faisal] Aligarh Muslim Univ, Dept Comp Sci, Aligarh 202002, Uttar Pradesh, India.
C3 Aligarh Muslim University
RP Ahsan, F (corresponding author), Aligarh Muslim Univ, Dept Comp Sci, Aligarh 202002, Uttar Pradesh, India.
EM fatimah.ahsan01@gmail.com; faisalanwer.cs@amu.ac.in
CR Afshan S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P352, DOI 10.1109/ICST.2013.11
   Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ahmed MA, 2016, J SYST ARCHITECT, V64, P50, DOI 10.1016/j.sysarc.2015.11.001
   Ahsan Fatma, 2023, Computational Intelligence: Select Proceedings of InCITe 2022. Lecture Notes in Electrical Engineering (968), P207, DOI 10.1007/978-981-19-7346-8_19
   Almulla H, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10048-8
   Alshahwan N., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P3, DOI 10.1109/ASE.2011.6100082
   Alyasiri H., 2020, INT C ADV CYB SEC, P642
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   Anas M., 2022, 2022 12 INT C CLOUD, P112
   Andrews Anneliese, 2014, 23rd Australian Software Engineering Conference (ASWEC 2014), P200, DOI 10.1109/ASWEC.2014.29
   Anjum MS, 2020, LECT NOTES COMPUT SC, V12101, P18, DOI 10.1007/978-3-030-44094-7_2
   Anwer F., 2016, Indian J. Sci. Technol, V9, P19
   Anwer F., 2017, Trends in Software Testing, P35
   Anwer F., 2014, P 2014 INT C INF COM, P1
   Anwer F., 2019, INT C SEC PRIV, P275
   Anwer F, 2013, 2013 THIRD INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING AND COMMUNICATIONS (ICACC 2013), P308, DOI 10.1109/ICACC.2013.65
   Arcuri A, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3477271
   Arcuri A, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3391533
   Arcuri A, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3293455
   Arcuri A, 2018, INFORM SOFTWARE TECH, V104, P195, DOI 10.1016/j.infsof.2018.05.003
   Arcuri A, 2018, IEEE INT CONF SOFTW, P394, DOI 10.1109/ICST.2018.00046
   Arcuri A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P9, DOI 10.1109/QRS.2017.11
   Avancini A., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P15, DOI 10.1109/IWAST.2012.6228984
   Avancini A., 2010, Proceedings of the 2010 ICSE Workshop on Software Engineering for Secure Systems. Cape Town, South Africa, P65, DOI DOI 10.1145/1809100.1809110
   Avancini A, 2013, INFORM SOFTWARE TECH, V55, P2209, DOI 10.1016/j.infsof.2013.08.001
   Avancini A, 2012, PROC INT CONF SOFTW, P1491, DOI 10.1109/ICSE.2012.6227054
   Avancini A, 2011, IEEE INT WORK C SO, P85, DOI 10.1109/SCAM.2011.7
   Aziz B, 2016, LECT NOTES COMPUT SC, V9594, P183, DOI 10.1007/978-3-319-30668-1_12
   Balera JM, 2019, INFORM SOFTWARE TECH, V114, P176, DOI 10.1016/j.infsof.2019.06.012
   Baluda M, 2015, INT WORKSH AUT TEST, P16, DOI [10.1145/2804322.2804325, DOI 10.1145/2804322.2804325]
   Baresel A, 2003, LECT NOTES COMPUT SC, V2724, P2442
   Baresel A, 2003, LECT NOTES COMPUT SC, V2724, P2428
   Bejo SD, 2021, 2021 INTERNATIONAL CONFERENCE ON INFORMATION AND COMMUNICATION TECHNOLOGY FOR DEVELOPMENT FOR AFRICA (ICT4DA), P178, DOI 10.1109/ICT4DA53266.2021.9672216
   Benito-Parejo M, 2021, IEEE C EVOL COMPUTAT, P2403, DOI 10.1109/CEC45853.2021.9504764
   Bhattacharya N, 2011, LECT NOTES COMPUT SC, V6956, P204, DOI 10.1007/978-3-642-23716-4_19
   Boopathi M, 2019, INT J BIO-INSPIR COM, V14, P27, DOI 10.1504/IJBIC.2019.101152
   Bottaci L., 2002, P GENETIC EVOLUTIONA, P1337
   Cao Y, 2009, WORLD SUMMIT ON GENETIC AND EVOLUTIONARY COMPUTATION (GEC 09), P25
   Cao Y, 2009, PROCEEDINGS OF 2009 8TH INTERNATIONAL CONFERENCE ON RELIABILITY, MAINTAINABILITY AND SAFETY, VOLS I AND II, P888, DOI 10.1109/ICRMS.2009.5269962
   Castelein J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1220, DOI 10.1145/3180155.3180202
   Ceccato M, 2016, IEEE INT CONF AUTOM, P167, DOI 10.1145/2970276.2970343
   Chang BM, 2016, INFORM SOFTWARE TECH, V77, P1, DOI 10.1016/j.infsof.2016.05.003
   Charmchi Mohammad Reza Hassanpour, 2021, 2021 12th International Conference on Information and Knowledge Technology (IKT), P157, DOI 10.1109/IKT54664.2021.9685262
   Charters S., 2007, GUIDELINES PERFORMIN
   Costa G, 2020, Arxiv, DOI arXiv:2011.13213
   Cui BJ, 2011, ADV INTEL SOFT COMPU, V122, P259
   cwe.mitre, CWE COMMON WEAKNESS
   Dass S, 2020, Arxiv, DOI arXiv:2006.08604
   Dass S, 2020, Arxiv, DOI arXiv:2006.08606
   Dass S, 2020, P INT COMP SOFTW APP, P1795, DOI 10.1109/COMPSAC48688.2020.00049
   Dass S, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P540, DOI [10.1145/3341105.3374099, 10.1445/3341405.3374099]
   de Almeida Biolchini JC, 2007, ADV ENG INFORM, V21, P133, DOI 10.1016/j.aei.2006.11.006
   Del Grosso C, 2008, COMPUT OPER RES, V35, P3125, DOI 10.1016/j.cor.2007.01.013
   Del Grosso C, 2005, GECCO 2005: Genetic and Evolutionary Computation Conference, Vols 1 and 2, P1037
   DelGrosso C., 2004, P INT S SOFTW REL EN
   deLima D.F., 2023, AN 3 WORKSH BRAS ENG, P39
   Duchene F., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P815, DOI 10.1109/ICST.2012.181
   Duchene F, 2014, P 4 ACM C DAT APPL S, P37, DOI DOI 10.1145/2557547.2557550
   Eberlein Martin, 2020, INT S SEARCH BAS SOF, DOI [DOI 10.1007/978-3-030, DOI 10.1007/978-3-030-59762-7_8]
   Ebert F, 2015, J SYST SOFTWARE, V106, P82, DOI 10.1016/j.jss.2015.04.066
   Elyasov A, 2018, PROC INT SYMP SOFTW, P88, DOI 10.1109/ISSRE.2018.00020
   Esnaashari M, 2021, EXPERT SYST APPL, V183, DOI 10.1016/j.eswa.2021.115446
   Fraser G, 2011, P 19 ACM SIGSOFT S 1, P416, DOI 10.1145/2025113.2025179
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P611, DOI 10.1007/s10664-013-9288-2
   Gan J.-M., 2020, Revised Selected Papers, V2, P685
   Gao HC, 2005, PROCEEDINGS OF THE 2005 INTERNATIONAL CONFERENCE ON NEURAL NETWORKS AND BRAIN, VOLS 1-3, P111
   Harman M., 2002, P GENETIC EVOLUTIONA, P1359
   Havrikov N, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P719, DOI 10.1145/2635868.2661666
   Htay Khin Maung, 2021, 2021 International Conference on Artificial Intelligence and Computer Science Technology (ICAICST), P7, DOI 10.1109/ICAICST53116.2021.9497823
   Hydara I., 2014, 9 INT C SOFTW ENG AD
   Hydara I., 2015, Indian J. Sci. Technol., V8, P1
   Hydara I, 2015, INFORM SOFTWARE TECH, V58, P170, DOI 10.1016/j.infsof.2014.07.010
   Iannone E, 2021, INT C PROGRAM COMPRE, P396, DOI 10.1109/ICPC52881.2021.00046
   Imam Raza, 2022, International Journal of Information Technology, P2645, DOI 10.1007/s41870-022-00993-y
   Imam Raza, 2022, Cyber Security, Privacy and Networking: Proceedings of ICSPN 2021. Lecture Notes in Networks and Systems (370), P185, DOI 10.1007/978-981-16-8664-1_17
   Imam R, 2022, J KING SAUD UNIV-COM, V34, P6743, DOI 10.1016/j.jksuci.2022.06.018
   Imam R, 2021, IEEE ACCESS, V9, P155949, DOI 10.1109/ACCESS.2021.3129224
   Jan S, 2019, EMPIR SOFTW ENG, V24, P3696, DOI 10.1007/s10664-019-09707-8
   Jan S, 2019, IEEE T SOFTWARE ENG, V45, P335, DOI 10.1109/TSE.2017.2778711
   Jan S, 2017, IEEE INT CONF SOFTW, P356, DOI 10.1109/ICST.2017.39
   Jawed MS, 2023, EVOL SYST-GER, V14, P749, DOI 10.1007/s12530-022-09462-0
   Kayacik HG, 2005, 21ST ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P202
   Kayacik HG, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1667
   Khanna M, 2018, ARAB J SCI ENG, V43, P4179, DOI 10.1007/s13369-017-2830-6
   Khari M, 2020, SOFT COMPUT, V24, P9143, DOI 10.1007/s00500-019-04444-y
   Khari M, 2019, ADV INTELL SYST, V731, P375, DOI 10.1007/978-981-10-8848-3_35
   Khor S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P346, DOI 10.1109/ASE.2004.1342761
   Kumar A, 2023, EVOL SYST-GER, V14, P141, DOI 10.1007/s12530-022-09432-6
   Li YJ, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P79, DOI 10.1109/QRS-C.2018.00028
   Lin Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1068, DOI 10.1145/3468264.3468619
   Liu GH, 2008, THIRD 2008 INTERNATIONAL CONFERENCE ON CONVERGENCE AND HYBRID INFORMATION TECHNOLOGY, VOL 2, PROCEEDINGS, P491, DOI 10.1109/ICCIT.2008.9
   Liu MY, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCCO'19 COMPANION), P417, DOI 10.1145/3319619.3322026
   Lüdtke S, 2021, IEEE I C SQRS-C, P92, DOI 10.1109/QRS-C55045.2021.00023
   Manès VJM, 2020, PROC INT CONF SOFTW, P1024, DOI 10.1145/3377811.3380421
   Mann M, 2018, APPL INTELL, V48, P687, DOI 10.1007/s10489-017-1003-3
   Mantere T, 2005, APPL SOFT COMPUT, V5, P315, DOI 10.1016/j.asoc.2004.08.004
   Mao CY, 2020, IEEE INT CONF TRUST, P46, DOI 10.1109/TrustCom50675.2020.00020
   Mao CY, 2014, NEURAL COMPUT APPL, V25, P199, DOI 10.1007/s00521-013-1474-z
   Marashdeh Zain, 2021, 2021 International Conference on Information Technology (ICIT), P957, DOI 10.1109/ICIT52682.2021.9491117
   Marashdih AW, 2017, 2017 INTERNATIONAL CONFERENCE ON PROMISING ELECTRONIC TECHNOLOGIES (ICPET 2017), P26, DOI 10.1109/ICPET.2017.11
   Marashdih AW, 2017, INT J ADV COMPUT SC, V8, P64
   Marculescu B, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3491038
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   McMinn P., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P141, DOI 10.1109/ICST.2012.94
   McMinn P, 2003, LECT NOTES COMPUT SC, V2724, P2488
   Menéndez HD, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447265
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Oster N, 2006, LECT NOTES COMPUT SC, V4166, P426
   Padmanabhuni BM, 2015, 10TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST AST 2015, P48, DOI 10.1109/AST.2015.17
   Paduraru C, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P1857, DOI 10.1145/3067695.3084219
   Palka D, 2016, COMM COM INF SC, V608, P384, DOI 10.1007/978-3-319-39207-3_33
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Rauf Abdul, 2010, Proceedings of the Seventh International Conference on Information Technology: New Generations (ITNG 2010), P1057, DOI 10.1109/ITNG.2010.95
   Rawat S., 2010, 2010 Proceedings of European Conference on Computer Network Defense (EC2ND 2010), P37, DOI 10.1109/EC2ND.2010.14
   Rawat S, 2013, Arxiv, DOI arXiv:1305.3883
   Reungsinkonkarn A, 2015, P INT CONF INTELL, P53, DOI 10.1109/ISMS.2015.20
   Rodrigues DS, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182659
   Romano Daniele, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P160, DOI 10.1109/ICST.2011.49
   Saber T, 2018, IEEE C EVOL COMPUTAT, P2309, DOI 10.1109/CEC.2018.8477875
   Seesing A., 2006, Int. Trans. Syst. Sci. Appl., V1
   Shahbazi A, 2016, IEEE T SOFTWARE ENG, V42, P361, DOI 10.1109/TSE.2015.2487958
   Shuai B, 2016, AER ADV ENG RES, V47, P1198
   Shuai B, 2015, 2015 11TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND SECURITY (CIS), P317, DOI 10.1109/CIS.2015.84
   Shuai B, 2013, 2013 3RD INTERNATIONAL CONFERENCE ON CONSUMER ELECTRONICS, COMMUNICATIONS AND NETWORKS (CECNET), P589, DOI 10.1109/CECNet.2013.6703400
   Silva RA, 2017, INFORM SOFTWARE TECH, V81, P19, DOI 10.1016/j.infsof.2016.01.017
   Skaruz J, 2009, IEEE C EVOL COMPUTAT, P2029, DOI 10.1109/CEC.2009.4983190
   Soltani M, 2020, EMPIR SOFTW ENG, V25, P96, DOI 10.1007/s10664-019-09762-1
   Sparks S, 2007, TWENTY-THIRD ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P477, DOI 10.1109/ACSAC.2007.27
   Stallenberg DM, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1090, DOI 10.1145/3338906.3341178
   Tfili M, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1917
   Thome J., 2014, P 7 INT WORKSH SEARC, P5, DOI DOI 10.1145/2593833.2593835
   Thomé J, 2020, IEEE T SOFTWARE ENG, V46, P163, DOI 10.1109/TSE.2018.2844343
   Thome J, 2017, PROC INT CONF SOFTW, P198, DOI 10.1109/ICSE.2017.26
   Tianyu Ren, 2020, IOP Conference Series: Materials Science and Engineering, V750, DOI 10.1088/1757-899X/750/1/012168
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Umar K., 2014, 5 INT C INF COMM TEC, P1
   Umar K, 2018, INT CONF INFORM COMM, P179, DOI 10.1109/ICT4M.2018.00041
   Wang WW, 2023, INFORM SOFTWARE TECH, V155, DOI 10.1016/j.infsof.2022.107113
   Wang WW, 2019, PROC INT SYMP SOFTW, P206, DOI 10.1109/ISSRE.2019.00029
   Wang YC, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P377, DOI 10.1109/QRS-C.2017.69
   Wang YC, 2019, INT CONF SOFTW ENG, P230, DOI 10.1109/icsess47205.2019.9040809
   Wappler S, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1053
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Wegener J., 2002, P GENETIC EVOLUTIONA, P1233
   Wu Z., 2009, INT C SOFTW ENG
   Xu X, 2018, IEEE C EVOL COMPUTAT, P2299, DOI 10.1109/CEC.2018.8477734
   Xueyong Zhu, 2013, Advanced Materials Research, V756-759, P4050, DOI 10.4028/www.scientific.net/AMR.756-759.4050
   Yao XJ, 2020, IEEE ACCESS, V8, P61999, DOI 10.1109/ACCESS.2020.2983762
   Ye JX, 2017, 2017 4TH INTERNATIONAL CONFERENCE ON INFORMATION SCIENCE AND CONTROL ENGINEERING (ICISCE), P24, DOI 10.1109/ICISCE.2017.15
   Yun Lin, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P440, DOI 10.1145/3395363.3397358
   Yunheng Luo, 2021, 2021 IEEE 21st International Conference on Communication Technology (ICCT), P846, DOI 10.1109/ICCT52962.2021.9657925
   Zhu ZM, 2018, PROC IEEE INT CONF S, P59, DOI 10.1109/ICSME.2018.00015
NR 153
TC 0
Z9 0
U1 3
U2 3
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 44
DI 10.1007/s10515-024-00433-0
PG 73
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RR3P1
UT WOS:001229352000001
DA 2024-08-05
ER

PT J
AU Shen, XN
   Yao, CB
   Song, LY
   Xu, JY
   Mao, MJ
AF Shen, Xiaoning
   Yao, Chengbin
   Song, Liyan
   Xu, Jiyong
   Mao, Mingjian
TI Coevolutionary scheduling of dynamic software project considering the
   new skill learning
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Dynamic software project scheduling; Learning mechanism of new skills;
   Multi-population coevolution; Dual indicators; Contribution
ID ALGORITHM; OPTIMIZATION
AB In the process of software project development, completing tasks may require new skills that employees have not yet mastered due to factors such as requirement changes. However, existing studies on software project scheduling usually overlook such new skill demands. This paper designs the learning mechanism targeting the treatment of new skills for project employees, including how to select appropriate employees to learn new skills, the growth curves of new skill proficiencies and the adaptive dedication changes for the selected employees. Three common dynamic events are considered to establish a mathematical model for the dynamic software project scheduling problem considering the new skill learning. To solve the model, a multi-population coevolutionary algorithm-based predictive-reactive scheduling method is proposed in this paper. Three novel strategies are incorporated, which include a response mechanism to environmental changes, a population grouping strategy based on dual indicators, and a dynamic allocation of subpopulation size according to the variation trend of contribution. Systematic experimental results based on ten synthetic instances and three real-world instances show that when dynamic events occur, the proposed algorithm can quickly reschedule the tasks with a better duration, cost and stability compared with six state-of-the-art algorithms, helping project manager make a more informed decision.
C1 [Shen, Xiaoning; Yao, Chengbin; Xu, Jiyong; Mao, Mingjian] Nanjing Univ Informat Sci & Technol, Sch Automat, 219 Ningliu Rd, Nanjing 210044, Jiangsu, Peoples R China.
   [Shen, Xiaoning] Nanjing Univ Informat Sci & Technol, Jiangsu Collaborat Innovat Ctr Atmospher Environm, Dept Jiangsu Collaborat Innovat, 219 Ningliu Rd, Nanjing 210044, Jiangsu, Peoples R China.
   [Shen, Xiaoning] Nanjing Univ Informat Sci & Technol, Jiangsu Key Lab Big Data Anal Technol, Nanjing 210044, Jiangsu, Peoples R China.
   [Song, Liyan] Southern Univ Sci & Technol, Dept Comp Sci & Engn, Guangdong Prov Key Lab Brain Inspired Intelligent, Shenzhen 518055, Guangdong, Peoples R China.
C3 Nanjing University of Information Science & Technology; Nanjing
   University of Information Science & Technology; Nanjing University of
   Information Science & Technology; Southern University of Science &
   Technology
RP Shen, XN (corresponding author), Nanjing Univ Informat Sci & Technol, Sch Automat, 219 Ningliu Rd, Nanjing 210044, Jiangsu, Peoples R China.; Shen, XN (corresponding author), Nanjing Univ Informat Sci & Technol, Jiangsu Collaborat Innovat Ctr Atmospher Environm, Dept Jiangsu Collaborat Innovat, 219 Ningliu Rd, Nanjing 210044, Jiangsu, Peoples R China.; Shen, XN (corresponding author), Nanjing Univ Informat Sci & Technol, Jiangsu Key Lab Big Data Anal Technol, Nanjing 210044, Jiangsu, Peoples R China.
EM sxnystsyt@sina.com; 1270089446@qq.com; songly@sustech.edu.cn;
   853724424@qq.com; 2514556253@qq.com
FU Guangdong Provincial Key Laboratory; National Natural Science Foundation
   of China (NSFC) [61502239, 62002148]; Natural Science Foundation of
   Jiangsu Province of China [BK20150924];  [2020B121201001]
FX This work is supported by the Guangdong Provincial Key Laboratory under
   Grant No. 2020B121201001, the National Natural Science Foundation of
   China (NSFC) under Grant No. 61502239 and No. 62002148, Natural Science
   Foundation of Jiangsu Province of China under Grant No. BK20150924. We
   are grateful to Weineng Chen and Jun Zhang for providing the data of the
   three real-world SPSP instances.
CR Alba E, 2007, INFORM SCIENCES, V177, P2380, DOI 10.1016/j.ins.2006.12.020
   Vega-Velázquez MA, 2018, INT J PROD ECON, V202, P145, DOI 10.1016/j.ijpe.2018.04.020
   Arunachalam N, 2022, J KING SAUD UNIV-COM, V34, P270, DOI 10.1016/j.jksuci.2018.10.003
   Bibi N, 2016, J INTELL SYST, V25, P629, DOI 10.1515/jisys-2015-0016
   Chang CK, 2008, INFORM SOFTWARE TECH, V50, P1142, DOI 10.1016/j.infsof.2008.03.002
   Chen GY, 2022, INFORM SCIENCES, V606, P328, DOI 10.1016/j.ins.2022.05.050
   Chen HN, 2017, IEEE T SYST MAN CY-S, V47, P327, DOI 10.1109/TSMC.2016.2558045
   Chen R, 2020, COMPUT IND ENG, V139, DOI 10.1016/j.cie.2019.106183
   Chen WN, 2013, IEEE T SOFTWARE ENG, V39, P1, DOI 10.1109/TSE.2012.17
   Ge YJ, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0157104
   Gueorguiev S., 2009, P 11 ANN C GENETIC E, P1673, DOI DOI 10.1145/1569901.1570125
   Guo Feng, 2012, 2012 International Conference on Information Management, Innovation Management and Industrial Engineering (ICIII 2012). Proceedings, P300, DOI 10.1109/ICIII.2012.6339838
   HAPKE M, 1994, FUZZY SET SYST, V67, P101, DOI 10.1016/0165-0114(94)90211-9
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Karaboga D, 2007, J GLOBAL OPTIM, V39, P459, DOI 10.1007/s10898-007-9149-x
   Li JQ, 2020, IEEE T CYBERNETICS, V50, P2425, DOI 10.1109/TCYB.2019.2943606
   Li JQ, 2016, IEEE T CYBERNETICS, V46, P1311, DOI 10.1109/TCYB.2015.2444383
   Li Yuanyuan, 2022, Complex System Modeling and Simulation, V2, P238, DOI 10.23919/CSMS.2022.0012
   Li YL, 2020, COMPUT IND ENG, V147, DOI 10.1016/j.cie.2020.106638
   Liu RC, 2017, EUR J OPER RES, V261, P1028, DOI 10.1016/j.ejor.2017.03.048
   Masmoudi M, 2013, ENG APPL ARTIF INTEL, V26, P135, DOI 10.1016/j.engappai.2012.07.012
   Minku LL, 2014, IEEE T SOFTWARE ENG, V40, P83, DOI 10.1109/TSE.2013.52
   Ngo-The A, 2009, IEEE T SOFTWARE ENG, V35, P109, DOI 10.1109/TSE.2008.80
   Otero LD, 2009, COMPUT IND ENG, V56, P1333, DOI 10.1016/j.cie.2008.08.002
   Pan ZX, 2022, IEEE T SYST MAN CY-S, V52, P5295, DOI 10.1109/TSMC.2021.3120702
   Rodríguez D, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1883
   Sarro F, 2017, IEEE T SOFTWARE ENG, V43, P898, DOI 10.1109/TSE.2017.2650914
   Shen XN, 2018, INFORM SCIENCES, V428, P1, DOI 10.1016/j.ins.2017.10.041
   Shen XN, 2020, APPL SOFT COMPUT, V88, DOI 10.1016/j.asoc.2019.106059
   Shen XN, 2016, IEEE T SOFTWARE ENG, V42, P658, DOI 10.1109/TSE.2015.2512266
   Song XY, 2020, EXPERT SYST APPL, V142, DOI 10.1016/j.eswa.2019.112921
   Song XY, 2019, SWARM EVOL COMPUT, V50, DOI 10.1016/j.swevo.2019.06.006
   Song YJ, 2021, ENERG CONVERS MANAGE, V228, DOI 10.1016/j.enconman.2020.113661
   Varalda W., 2018, Journal of Communications and Computer Engineering, V6, P132, DOI [10.4236/jcc.2018.69010, DOI 10.4236/JCC.2018.69010]
   Venkatesh P, 2019, APPL SOFT COMPUT, V78, P481, DOI 10.1016/j.asoc.2019.03.001
   Wang F, 2020, APPL SOFT COMPUT, V96, DOI 10.1016/j.asoc.2020.106592
   Wang WX, 2019, IEEE ACCESS, V7, P88986, DOI 10.1109/ACCESS.2019.2926337
   Xiang WL, 2018, INFORM SCIENCES, V429, P49, DOI 10.1016/j.ins.2017.11.007
   Xiao JC, 2010, LECT NOTES COMPUT SC, V6013, P107, DOI 10.1007/978-3-642-12029-9_8
   Xie HP, 2021, INFORM SCIENCES, V560, P307, DOI 10.1016/j.ins.2021.01.021
   Xing HL, 2019, CHINA COMMUN, V16, P160, DOI 10.12676/j.cc.2019.02.011
   Yang Q, 2022, INFORM SCIENCES, V607, P1408, DOI 10.1016/j.ins.2022.06.029
   Zhang X, 2020, EXPERT SYST APPL, V141, DOI 10.1016/j.eswa.2019.112976
   Zhou JJ, 2019, INFORM SCIENCES, V485, P114, DOI 10.1016/j.ins.2019.02.014
NR 44
TC 0
Z9 0
U1 7
U2 8
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 14
DI 10.1007/s10515-023-00411-y
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FI2F0
UT WOS:001145060000001
DA 2024-08-05
ER

PT J
AU Siavvas, M
   Tsoukalas, D
   Marantos, C
   Papadopoulos, L
   Lamprakos, C
   Matei, O
   Strydis, C
   Siddiqi, MA
   Chrobocinski, P
   Filus, K
   Domanska, J
   Avgeriou, P
   Ampatzoglou, A
   Soudris, D
   Chatzigeorgiou, A
   Gelenbe, E
   Kehagias, D
   Tzovaras, D
AF Siavvas, Miltiadis
   Tsoukalas, Dimitrios
   Marantos, Charalambos
   Papadopoulos, Lazaros
   Lamprakos, Christos
   Matei, Oliviu
   Strydis, Christos
   Siddiqi, Muhammad Ali
   Chrobocinski, Philippe
   Filus, Katarzyna
   Domanska, Joanna
   Avgeriou, Paris
   Ampatzoglou, Apostolos
   Soudris, Dimitrios
   Chatzigeorgiou, Alexander
   Gelenbe, Erol
   Kehagias, Dionysios
   Tzovaras, Dimitrios
TI SDK4ED: a platform for building energy efficient, dependable, and
   maintainable embedded software
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Embedded software; Software quality evaluation; Energy consumption;
   Dependability; Maintainability; Trade-off analysis
ID TECHNICAL DEBT; TIME
AB Developing embedded software applications is a challenging task, chiefly due to the limitations that are imposed by the hardware devices or platforms on which they operate, as well as due to the heterogeneous non-functional requirements that they need to exhibit. Modern embedded systems need to be energy efficient and dependable, whereas their maintenance costs should be minimized, in order to ensure the success and longevity of their application. Being able to build embedded software that satisfies the imposed hardware limitations, while maintaining high quality with respect to critical non-functional requirements is a difficult task that requires proper assistance. To this end, in the present paper, we present the SDK4ED Platform, which facilitates the development of embedded software that exhibits high quality with respect to important quality attributes, with a main focus on energy consumption, dependability, and maintainability. This is achieved through the provision of state-of-the-art and novel quality attribute-specific monitoring and optimization mechanisms, as well as through a novel fuzzy multi-criteria decision-making mechanism for facilitating the selection of code refactorings, which is based on trade-off analysis among the three main attributes of choice. Novel forecasting techniques are also proposed to further support decision making during the development of embedded software. The usefulness, practicality, and industrial relevance of the SDK4ED platform were evaluated in a real-world setting, through three use cases on actual commercial embedded software applications stemming from the airborne, automotive, and healthcare domains, as well as through an industrial study. To the best of our knowledge, this is the first quality analysis platform that focuses on multiple quality criteria, which also takes into account their trade-offs to facilitate code refactoring selection.
C1 [Siavvas, Miltiadis; Tsoukalas, Dimitrios; Kehagias, Dionysios; Tzovaras, Dimitrios] Ctr Res & Technol Hellas, Thessaloniki, Greece.
   [Marantos, Charalambos; Papadopoulos, Lazaros; Lamprakos, Christos; Soudris, Dimitrios] Natl Tech Univ Athens, Sch Elect & Comp Engn, Athens, Greece.
   [Matei, Oliviu] Holisun SRL, R&D Dept, Baia Mare, Romania.
   [Strydis, Christos; Siddiqi, Muhammad Ali] Erasmus MC, Neurosci Dept, Rotterdam, Netherlands.
   [Chrobocinski, Philippe] AIRBUS Def & Space, Toulouse, France.
   [Filus, Katarzyna; Domanska, Joanna; Gelenbe, Erol] Polish Acad Sci, Inst Theoret & Appl Informat, Gliwice, Poland.
   [Avgeriou, Paris] Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intellig, Groningen, Netherlands.
   [Ampatzoglou, Apostolos; Chatzigeorgiou, Alexander] Univ Macedonia, Dept Appl Informat, Thessaloniki, Greece.
C3 Centre for Research & Technology Hellas; National Technical University
   of Athens; Erasmus University Rotterdam; Erasmus MC; Airbus; Airbus
   France S.A.S.; Polish Academy of Sciences; Institute of Theoretical &
   Applied Informatics of the Polish Academy of Sciences; University of
   Groningen; University of Macedonia
RP Siavvas, M (corresponding author), Ctr Res & Technol Hellas, Thessaloniki, Greece.
EM siavvasm@iti.gr; tsoukj@iti.gr; hmarantos@microlab.ntua.gr;
   lpapadop@microlab.ntua.gr; cplamprakos@microlab.ntua.gr;
   oliviu.matei@holisun.com; c.strydis@erasmusmc.nl;
   m.siddiqi@erasmusmc.nl; philippe.chrobocinski@airbus.com;
   kfilus@iitis.pl; joanna@iitis.pl; p.avgeriou@rug.nl;
   a.ampatzoglou@uom.edu.gr; dsoudris@microlab.ntua.gr; achat@uom.edu.gr;
   seg@iitis.pl; diok@iti.gr; dimitrios.tzovaras@iti.gr
OI Strydis, Christos/0000-0002-0935-9322; Avgeriou,
   Paris/0000-0002-7101-0754
FU Horizon2020 [780572]; European Union's Horizon 2020 Research and
   Innovation Programme through SDK4ED project
FX This work is partially funded by the European Union's Horizon 2020
   Research and Innovation Programme through SDK4ED project under Grant
   Agreement No. 780572.
CR Aggarwal K, 2015, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSM.2015.7332477
   Alshammari B., 2011, Proceedings of the 11th International Conference on Quality Software (QSIC 2011), P218, DOI 10.1109/QSIC.2011.31
   Amanatidis T, 2020, EMPIR SOFTW ENG, V25, P4161, DOI 10.1007/s10664-020-09869-w
   Ampatzoglou A, 2022, SOFTWARE PRACT EXPER, V52, P1879, DOI 10.1002/spe.3093
   Ampatzoglou A, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P346, DOI 10.1145/3319008.3320125
   Ampatzoglou A, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P115, DOI 10.1145/3194164.3194175
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   [Anonymous], 2011, ISO 13314:2011, Mechanical testing of metals-Ductility testing-Compression test for porous and cellular metals 77.040.10 Mechanical testing of metals
   [Anonymous], 1995, Software Engineering
   [Anonymous], 2013, Information Security, Cybersecurity and Privacy Protection
   Ansar SA, 2018, LECT NOTE DATA ENG, V4, P15, DOI 10.1007/978-981-10-4600-1_2
   Ardalani N, 2015, PROCEEDINGS OF THE 48TH ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE (MICRO-48), P725, DOI 10.1145/2830772.2830780
   Arora R, 2017, HUST'17: PROCEEDINGS OF THE FOURTH INTERNATIONAL WORKSHOP ON HPC USER SUPPORT TOOLS, DOI 10.1145/3152493.3152558
   Avgeriou P, 2021, IEEE SOFTWARE, V38, P61, DOI 10.1109/MS.2020.3024958
   Awan MA, 2011, EUROMICRO, P92, DOI 10.1109/ECRTS.2011.17
   Bazzaz M, 2013, IEEE T INSTRUM MEAS, V62, P1927, DOI 10.1109/TIM.2013.2248288
   Besker T, 2019, J SYST SOFTWARE, V156, P41, DOI 10.1016/j.jss.2019.06.004
   Binkert Nathan, 2011, Computer Architecture News, V39, P1, DOI 10.1145/2024716.2024718
   Brooke J., 1996, SUS-a quick and dirty usability scale, DOI [DOI 10.1201/9781498710411-35, DOI 10.1201/9781498710411]
   Brown N., P FSE SDP WORKSH FUT
   Catthoor F., 2002, Data Access and Storage Management for Embedded Programmable Processors, DOI [10.1007/978-1-4757-4903-8, DOI 10.1007/978-1-4757-4903-8]
   Charalampidou S, 2017, IEEE T SOFTWARE ENG, V43, P954, DOI 10.1109/TSE.2016.2645572
   Chatzigeorgiou A, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P53, DOI 10.1109/MTD.2015.7332625
   Chowdhury I, 2011, J SYST ARCHITECT, V57, P294, DOI 10.1016/j.sysarc.2010.06.003
   Colombo R.T., 2012, SIGSOFT SOFTW ENG NO, V37, P1, DOI DOI 10.1145/2382756.2382781
   Cunningham W., 1993, OOPS Messenger, V4, P29
   David Howard, 2010, Proceedings of the 16th ACM/IEEE International Symposium on Low Power Electronics and Design (ISLPED 2010), P189, DOI 10.1145/1840845.1840883
   Dayanandan U, 2018, 3D RES, V9, DOI 10.1007/s13319-018-0183-x
   DeMarco T, 1986, CONTROLLING SOFTWARE
   Digkas G, 2022, IEEE T SOFTWARE ENG, V48, P1705, DOI 10.1109/TSE.2020.3032557
   Eder K., 2017, ICT-energy concepts for energy efficiency and sustainability, P103
   Egwutuoha IP, 2013, J SUPERCOMPUT, V65, P1302, DOI 10.1007/s11227-013-0884-0
   Elnozahy EN, 2002, ACM COMPUT SURV, V34, P375, DOI 10.1145/568522.568525
   Elo S, 2008, J ADV NURS, V62, P107, DOI 10.1111/j.1365-2648.2007.04569.x
   Euler L., 1783, Acta Acad. Sci. Imp. Petropolitanae, P29
   Filus Katarzyna, 2021, Modelling, Analysis, and Simulation of Computer and Telecommunication Systems. 28th International Symposium, MASCOTS 2020. Revised Selected Papers. Lecture Notes in Computer Science (LNCS 12527), P102, DOI 10.1007/978-3-030-68110-4_7
   Filus K, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21041133
   Fontana FA, 2016, INT WORKSH MANAG TEC, P28, DOI 10.1109/MTD.2016.11
   Fowers J, 2012, FPGA 12: PROCEEDINGS OF THE 2012 ACM-SIGDA INTERNATIONAL SYMPOSIUM ON FIELD PROGRAMMABLE GATE ARRAYS, P47
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   Gelenbe E, 2020, I S MOD ANAL SIM COM, P54, DOI 10.1109/mascots50786.2020.9285959
   Gelenbe E, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11031169
   Gelenbe E, 1989, NEURAL COMPUT, V1, P502, DOI 10.1162/neco.1989.1.4.502
   Georgiou S, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3337773
   Guo S, 2017, KNOWL-BASED SYST, V121, P23, DOI 10.1016/j.knosys.2017.01.010
   Haiyun Xu, 2013, 2013 IEEE Seventh International Conference on Software Security and Reliability Companion (SERE-C), P231, DOI 10.1109/SERE-C.2013.11
   Hanif H, 2022, IEEE IJCNN, DOI [10.1109/IJCNN55064.2022.9892280, 10.1109/MEPCON55441.2022.10021719]
   Dam HK, 2021, IEEE T SOFTWARE ENG, V47, P67, DOI 10.1109/TSE.2018.2881961
   Holzmann GJ, 2017, IEEE SOFTWARE, V34, P106, DOI 10.1109/MS.2017.19
   Honig T., 2014, 2014 C TIM RES OP SY
   Honig Timo., 2012, ACM SIGOPS Oper. Syst. Rev, V45, P58, DOI DOI 10.1145/2094091.2094106
   Hursey J., 2007, Architecture
   Kim S, 2022, IEEE INT SYMP SOFTW, P69, DOI 10.1109/ISSREW55968.2022.00042
   Lai S.T., 2010, P 2010 2 WRI WORLD C, DOI [10.1109/WCSE.2010.104, DOI 10.1109/WCSE.2010.104]
   Lambert Johann Heinrich, 1758, ACTA HELVETICA, VIII, P128
   Lamprakos CP, 2022, INFORM SOFTWARE TECH, V145, DOI 10.1016/j.infsof.2022.106851
   Lee S, 2015, PROCEEDINGS OF THE 29TH ACM INTERNATIONAL CONFERENCE ON SUPERCOMPUTING (ICS'15), P405, DOI 10.1145/2751205.2751220
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Li Z, 2018, Arxiv, DOI arXiv:1801.01681
   Llamocca Daniel, 2011, 2011 International Conference on Field Programmable Logic and Applications, P363, DOI 10.1109/FPL.2011.71
   Losada N, 2016, PROCEDIA COMPUT SCI, V80, P19, DOI 10.1016/j.procs.2016.05.294
   Lowe-Power J, 2020, Arxiv, DOI arXiv:2007.03152
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   Manotas I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P503, DOI 10.11455/2568225.2568297
   Marantos C., 2021, SN Comput. Sci, V2, P1, DOI [10.1007/s42979-020-00405-7, DOI 10.1007/S42979-020-00405-7]
   Marantos C, 2023, IEEE T SUST COMPUT, V8, P180, DOI 10.1109/TSUSC.2022.3222409
   Marantos C, 2022, DES AUT TEST EUROPE, P981, DOI 10.23919/DATE54114.2022.9774586
   Marantos C, 2022, SUSTAIN COMPUT-INFOR, V34, DOI 10.1016/j.suscom.2021.100631
   Medeiros N, 2018, IEEE PAC RIM INT SYM, P84, DOI 10.1109/PRDC.2018.00019
   Mohammed NM, 2017, COMPUT STAND INTER, V50, P107, DOI 10.1016/j.csi.2016.10.001
   Moody A., 2010, SC 10, P1, DOI [10.1109/SC.2010.18, DOI 10.1109/SC.2010.18]
   Morrison P, 2018, INFORM SOFTWARE TECH, V102, P146, DOI 10.1016/j.infsof.2018.05.011
   Noureddine A, 2015, AUTOMAT SOFTW ENG, V22, P291, DOI 10.1007/s10515-014-0171-1
   Pinto G, 2017, COMMUN ACM, V60, P68, DOI 10.1145/3154384
   Reddy R, 2010, ACM T EMBED COMPUT S, V9, DOI 10.1145/1698772.1698774
   Rios N, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P3, DOI 10.1109/TechDebt.2019.00009
   Rodríguez G, 2010, CONCURR COMP-PRACT E, V22, P749, DOI 10.1002/cpe.1541
   Saaty T. L., 2008, Int. J. Serv. Sci, V1, P83, DOI DOI 10.1504/IJSSCI.2008.017590
   Sas D, 2020, SOFTWARE QUAL J, V28, P505, DOI 10.1007/s11219-019-09478-x
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   SDK4ED, 2019, Tech. rep
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sentilles S., 2018, 6 INT WORKSH QUANT A
   Shahzad F, 2019, IEEE T PARALL DISTR, V30, P501, DOI 10.1109/TPDS.2018.2866794
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Siavvas M, 2021, SOFTWARE QUAL J, V29, P431, DOI 10.1007/s11219-021-09555-0
   Siavvas M, 2019, 2019 6TH IEEE INTERNATIONAL CONFERENCE ON CYBER SECURITY AND CLOUD COMPUTING (IEEE CSCLOUD 2019) / 2019 5TH IEEE INTERNATIONAL CONFERENCE ON EDGE COMPUTING AND SCALABLE CLOUD (IEEE EDGECOM 2019), P145, DOI 10.1109/CSCloud/EdgeCom.2019.000-4
   Siavvas M, 2019, SIMUL MODEL PRACT TH, V97, DOI 10.1016/j.simpat.2019.101951
   Siddiqi M.A., 2021, EWSN, P67
   Suryanarayana G., 2014, Refactoring for Software Design Smells: Managing Technical Debt
   Takizawa H., 2011, Proceedings of the 25th IEEE International Parallel & Distributed Processing Symposium (IPDPS 2011), P864, DOI 10.1109/IPDPS.2011.85
   Tsantalis N, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P4, DOI 10.1109/SANER.2018.8330192
   Tsintzira A.A., 2019, 15 CHIN EUR INT S SO
   Tsoukalas D., 2019, IN PRESS, P1, DOI [10.13140/RG.2.2.33152.79367, DOI 10.13140/RG.2.2.33152.79367]
   Tsoukalas D, 2024, J SOFTW-EVOL PROC, V36, DOI 10.1002/smr.2564
   Tsoukalas D, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110777
   Wagner S, 2015, INFORM SOFTWARE TECH, V62, P101, DOI 10.1016/j.infsof.2015.02.009
   Walden J, 2009, INT SYMP EMP SOFTWAR, P546
   Wang SQ, 2017, ACM T EMBED COMPUT S, V16, DOI 10.1145/3126546
   Wang WX, 2011, DES AUT CON, P948
   Zafar S, 2015, SOFTWARE QUAL J, V23, P29, DOI 10.1007/s11219-013-9223-1
   Zagane M, 2020, IEEE ACCESS, V8, P74562, DOI 10.1109/ACCESS.2020.2988557
   Zheng XN, 2017, DES AUT TEST EUROPE, P1709, DOI 10.23919/DATE.2017.7927269
   Zheng XN, 2016, DES AUT CON, DOI 10.1145/2897937.2897977
   Zhou YQ, 2019, Arxiv, DOI arXiv:1909.03496
NR 106
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 53
DI 10.1007/s10515-024-00450-z
PG 71
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TR2J5
UT WOS:001242918400002
DA 2024-08-05
ER

PT J
AU Araghi, MA
   Rafe, V
   Khendek, F
AF Araghi, Maryam Asgari
   Rafe, Vahid
   Khendek, Ferhat
TI Using data mining techniques to generate test cases from graph
   transformation systems specifications
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Model-based testing; Test case generation; Model
   checking; Data mining algorithms; Graph transformation systems
ID MODEL CHECKING
AB Software testing plays a crucial role in enhancing software quality. A significant portion of the time and cost in software development is dedicated to testing. Automation, particularly in generating test cases, can greatly reduce the cost. Model-based testing aims at generating automatically test cases from models. Several model based approaches use model checking tools to automate test case generation. However, this technique faces challenges such as state space explosion and duplication of test cases. This paper introduces a novel solution based on data mining algorithms for systems specified using graph transformation systems. To overcome the aforementioned challenges, the proposed method wisely explores only a portion of the state space based on test objectives. The proposed method is implemented using the GROOVE tool set for model-checking graph transformation systems specifications. Empirical results on widely used case studies in service-oriented architecture as well as a comparison with related state-of-the-art techniques demonstrate the efficiency and superiority of the proposed approach in terms of coverage and test suite size.
C1 [Araghi, Maryam Asgari; Khendek, Ferhat] Concordia Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
   [Rafe, Vahid] Goldsmiths Univ London, Dept Comp, London, England.
   [Rafe, Vahid] Arak Univ, Fac Engn, Dept Comp Engn, Arak 3815688349, Iran.
C3 Concordia University - Canada; University of London; Goldsmiths
   University London; Arak University
RP Araghi, MA (corresponding author), Concordia Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
EM ma_asgar@encs.concordia.ca; v.rafe@gold.ac.uk;
   ferhat.khendek@concordia.ca
FU Natural Sciences and Engineering Research Council of Canada
FX No Statement Available
CR Acharya A.A., 2015, Model based test case prioritization using association rule mining
   Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Agrawal R, 2000, P 20 INT C VER LARG, V1215
   Albazzan Mazen., 2019, Design of Variable Stiffness Cylinder with Holes Under Bending for Maximum Buckling Load Using Lamination Parameters, P1, DOI [10.1007/978-3-642-27739-9_1771-1, DOI 10.1007/978-3-642-27739-9_1771-1]
   Ammann Paul., 2008, Introduction to Software Testing, DOI DOI 10.1017/CBO9780511809163
   [Anonymous], 1990, Software Testing Techniques
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Chen TY, 1996, INFORM PROCESS LETT, V60, P135, DOI 10.1016/S0020-0190(96)00135-4
   de Lara J, 2002, LECT NOTES COMPUT SC, V2306, P174
   Ehrig H., 2004, Graph Transformations: Second International Conference, DOI [10.1007/b100934, DOI 10.1007/B100934]
   Engels G, 2007, LECT NOTES COMPUT SC, V4364, P182
   Enoiu EP, 2016, INT J SOFTW TOOLS TE, V18, P335, DOI 10.1007/s10009-014-0355-9
   Fraser G, 2009, J SYST SOFTWARE, V82, P1403, DOI 10.1016/j.jss.2009.05.016
   Garey M. R., 1979, Computers and intractability. A guide to the theory of NP-completeness
   Gargantini A, 1999, LECT NOTES COMPUT SC, V1687, P146, DOI 10.1145/318774.318939
   Gönczy L, 2007, LECT NOTES COMPUT SC, V4581, P155
   Han J, 2012, MOR KAUF D, P1
   Han JW, 2000, SIGMOD RECORD, V29, P1
   Harrold M. J., 1990, Proceedings. Conference on Software Maintenance 1990 (Cat. No.90CH2921-5), P302, DOI 10.1109/ICSM.1990.131378
   Heckel R., 2004, INT C COMPUTER SCI S
   Heckel R., 2011, ECEASST, DOI [10.14279/tuj.eceasst.41.667, DOI 10.14279/TUJ.ECEASST.41.667]
   Heckel R, 2006, ELECTRON NOTES THEOR, V148, P187, DOI 10.1016/j.entcs.2005.12.018
   Herman P. M., 1976, Australian Computer Journal, V8, P92
   Ilkhani Ali, 2010, 2010 International Conference on Computer Information Systems and Industrial Management Applications (CISIM 2010), P620, DOI 10.1109/CISIM.2010.5643525
   Kalaee A, 2019, INFORM SOFTWARE TECH, V108, P1, DOI 10.1016/j.infsof.2018.12.001
   Kastenberg H, 2006, LECT NOTES COMPUT SC, V3925, P299
   Khan Tamim Ahmed, 2012, Graph Transformations. Proceedings 6th International Conference, ICGT 2012, P279, DOI 10.1007/978-3-642-33654-6_19
   Lan QH, 2009, PROCEEDINGS OF THE 2009 WRI GLOBAL CONGRESS ON INTELLIGENT SYSTEMS, VOL II, P360, DOI 10.1109/GCIS.2009.387
   Last M, 2005, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, P1239, DOI 10.1007/0-387-25465-X_59
   Mohalik S, 2014, SOFTW TEST VERIF REL, V24, P155, DOI 10.1002/stvr.1489
   Muthyala K., 2011, Indian J. Comput. Sci. Eng, V2, P500
   Naik K., 2011, Software testing and quality assurance: theory and practice
   Noemmer R, 2020, LECT NOTES BUS INF P, V371, P51, DOI 10.1007/978-3-030-35510-4_4
   Pira E, 2018, INFORM SOFTWARE TECH, V97, P110, DOI 10.1016/j.infsof.2018.01.004
   Pira E, 2016, APPL SOFT COMPUT, V49, P1185, DOI 10.1016/j.asoc.2016.06.039
   Rafe V, 2022, SOFT COMPUT, V26, P3503, DOI 10.1007/s00500-021-06476-9
   Rafe V, 2013, J VISUAL LANG COMPUT, V24, P136, DOI 10.1016/j.jvlc.2012.12.002
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Rayadurgam S, 2001, EIGHTH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOP ON THE ENGINEERING OF COMPUTER BASED SYSTEMS, PROCEEDINGS, P83, DOI 10.1109/ECBS.2001.922409
   Rensink A, 2003, LECT NOTES COMPUT SC, V3062, P479
   Rensink A., 2010, User Manual for the Groove Tool Set
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Runge O., 2013, Electronic Communications of the EASST, V58
   Saifan AA, 2016, INT J SOFTW INNOV, V4, P56, DOI 10.4018/IJSI.2016100104
   Schieferdecker I, 2012, IEEE SOFTWARE, V29, P14, DOI 10.1109/MS.2012.13
   Taentzer G, 2003, LECT NOTES COMPUT SC, V3062, P446
   Tallam Sriraman., 2005, PASTE 05, P35, DOI [10.1145/1108768.1108802, DOI 10.1145/1108768.1108802]
   Thone S., 2005, Dynamic software architectures: a style based modeling and refinement technique with graph transformations
   Utting M., 2006, Practical Model-Based Testing
   Utting M, 2016, ADV COMPUT, V101, P53, DOI 10.1016/bs.adcom.2015.11.004
   Varró D, 2007, SCI COMPUT PROGRAM, V68, P214, DOI 10.1016/j.scico.2007.05.004
   Villani E, 2019, COMPUT IND, V104, P88, DOI 10.1016/j.compind.2018.08.003
   Wan CS, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3230633
   Witten I., 2002, Morgan Kaufmann, V31
   Wu B, 2008, THIRD 2008 INTERNATIONAL CONFERENCE ON CONVERGENCE AND HYBRID INFORMATION TECHNOLOGY, VOL 1, PROCEEDINGS, P1099, DOI 10.1109/ICCIT.2008.109
NR 56
TC 0
Z9 0
U1 7
U2 7
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 17
DI 10.1007/s10515-024-00417-0
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9S2
UT WOS:001166605200001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Cao, R
   Bao, L
   Zhangsun, P
   Wu, CS
   Wei, SX
   Sun, R
   Li, R
   Zhang, Z
AF Cao, Rong
   Bao, Liang
   Zhangsun, Panpan
   Wu, Chase
   Wei, Shouxin
   Sun, Ren
   Li, Ran
   Zhang, Zhe
TI PTSSBench: a performance evaluation platform in support of automated
   parameter tuning of software systems
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Benchmark; Parameter tuning; Comparability; Reproducibility
ID ALGORITHM; OPTIMIZATION; CONFIGURATIONS; PREDICTION; SELECTION; MODELS
AB As software systems become increasingly large and complex, automated parameter tuning of software systems (PTSS) has been the focus of research and many tuning algorithms have been proposed recently. However, due to the lack of a unified platform for comparing and reproducing existing tuning algorithms, it remains a significant challenge for a user to choose an appropriate algorithm for a given software system. There are multiple reasons for this challenge, including diverse experimental conditions, lack of evaluations for different tasks, and excessive evaluation costs of tuning algorithms. In this paper, we propose an extensible and efficient benchmark, referred to as PTSSBench, which provides a unified platform for supporting a comparative study of different tuning algorithms via surrogate models and actual systems. We demonstrate the usability and efficiency of PTSSBench through comparative experiments of six state-of-the-art tuning algorithms from a holistic perspective and a task-oriented perspective. The experimental results show the necessity and effectiveness of parameter tuning for software systems and indicate that the PTSS problem remains an open problem. Moreover, PTSSBench allows extensive runs and in-depth analyses of parameter tuning algorithms, hence providing an efficient and effective way for researchers to develop new tuning algorithms and for users to choose appropriate tuning algorithms for their systems. The proposed PTSSBench benchmark together with the experimental results is made publicly available online as an open-source project.
C1 [Cao, Rong; Bao, Liang; Zhangsun, Panpan; Wei, Shouxin; Sun, Ren; Li, Ran; Zhang, Zhe] Xidian Univ, Sch Comp Sci & Technol, Xian 710071, Shaanxi, Peoples R China.
   [Wu, Chase] New Jersey Inst Technol, Dept Data Sci, Newark, NJ 07102 USA.
C3 Xidian University; New Jersey Institute of Technology
RP Cao, R (corresponding author), Xidian Univ, Sch Comp Sci & Technol, Xian 710071, Shaanxi, Peoples R China.
EM caorong@stu.xidian.edu.cn; baoliang@mail.xidian.edu.cn;
   zhangsunpanpan@stu.xidian.edu.cn; chase.wu@njit.edu;
   imshouxin@gmail.com; laura1628@163.com; 1330259952@qq.com;
   21031211522@stu.xidian.edu.cn
FU This work is supported by the National Natural Science Foundation of
   China [Grant No. 62172316]; the Ministry of Education Humanities and
   Social Science Project of China [Grant No. 17YJA790047]; the Soft
   Science Research Plans of Shaanxi Province [Grant No [62172316];
   National Natural Science Foundation of China [17YJA790047]; Ministry of
   Education Humanities and Social Science Project of China [2020KRZ018];
   Soft Science Research Plans of Shaanxi Province [20JZ-25]; Research
   Project on Major Theoretical and Practical Problems of Philosophy and
   Social Sciences in Shaanxi Province [2019ZDLGY13-03-02]; Key R amp;D
   Program of Shaanxi [2019JM-368]; Natural Science Foundation of Shaanxi
   Province, China [20310102D]; Key R amp;D Program of Hebei
FX This work is supported by the National Natural Science Foundation of
   China [Grant No. 62172316]; the Ministry of Education Humanities and
   Social Science Project of China [Grant No. 17YJA790047]; the Soft
   Science Research Plans of Shaanxi Province [Grant No. 2020KRZ018]; the
   Research Project on Major Theoretical and Practical Problems of
   Philosophy and Social Sciences in Shaanxi Province [Grant No. 20JZ-25];
   the Key R & D Program of Shaanxi [Grant No. 2019ZDLGY13-03-02]; the
   Natural Science Foundation of Shaanxi Province, China [Grant No.
   2019JM-368]; and the Key R & D Program of Hebei [Grant No. 20310102D].
CR [Anonymous], 2011, CIDR
   Antipova E, 2015, COMPUT CHEM ENG, V74, P48, DOI 10.1016/j.compchemeng.2014.12.012
   Apache, 2019, Apache Spark Tuning Guide
   Apache, 2019, Apache JMeter
   Apache, 2019, Apache Storm Performance Tuning
   Bao L, 2018, IEEE INT CONF AUTOM, P29, DOI 10.1145/3238147.3238175
   Bao L, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P465, DOI 10.1109/ASE.2019.00051
   Bao L, 2018, IEEE INT CONF BIG DA, P181, DOI 10.1109/BigData.2018.8622018
   Bei ZD, 2016, IEEE T PARALL DISTR, V27, P1470, DOI 10.1109/TPDS.2015.2449299
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Birattari M., 2002, Gecco, P11
   Bischl B, 2023, WIRES DATA MIN KNOWL, V13, DOI 10.1002/widm.1484
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Blot A, 2019, EVOL COMPUT, V27, P147, DOI 10.1162/evco_a_00240
   Borgonovo E, 2016, EUR J OPER RES, V248, P869, DOI 10.1016/j.ejor.2015.06.032
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Breiman L, 1996, MACH LEARN, V24, P123, DOI 10.1007/bf00058655
   Brusco MJ, 2017, COMPUT IND ENG, V111, P29, DOI 10.1016/j.cie.2017.06.035
   Cáceres LP, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P1146, DOI 10.1145/3067695.3082057
   Calinescu R, 2018, J SYST SOFTWARE, V143, P140, DOI 10.1016/j.jss.2018.05.013
   Calinescu R, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P131, DOI 10.1109/ICSA.2017.16
   Cao Z, 2020, PROCEEDINGS OF THE 18TH USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES, P43
   Cao Z, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P893
   Cereda S, 2021, PROC VLDB ENDOW, V14, P1401, DOI 10.14778/3457390.3457404
   Chao Liu, 2015, Algorithms and Architectures for Parallel Processing. 15th International Conference, ICA3PP 2015. Proceedings: LNCS 9531, P344, DOI 10.1007/978-3-319-27140-8_24
   Chen KK, 2014, IEEE T PARALL DISTR, V25, P1403, DOI 10.1109/TPDS.2013.297
   Chen T, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3204459
   Chen Tao, 2023, ACM Transactions on Software Engineering and Methodology, V32, P1
   Chen YTY, 2020, LECT NOTES COMPUT SC, V12028, P243, DOI 10.1007/978-3-030-41418-4_17
   Cheng GL, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111028
   ClouderaSparkTuning, 2018, Cloudera Performance Management-Tuning Spark Applications
   ClouderaYarnTuning, 2018, Cloudera Performance Management-Tuning YARN
   Cooper BF, 2010, Proceedings of the 1st ACM Symposium on Cloud Computing, SoCC'10, P143, DOI DOI 10.1145/1807128.1807152
   Dalibard V, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P479, DOI 10.1145/3038912.3052662
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Debnath Biplob K., 2008, 2008 IEEE 24th International Conference on Data Engineering Workshop (ICDE Workshop), P11, DOI 10.1109/ICDEW.2008.4498279
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Dorn J, 2020, PROCEEDINGS OF THE 14TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '20), DOI 10.1145/3377024.3377040
   Duan SY, 2009, PROC VLDB ENDOW, V2
   Eryoldas Y, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app12136316
   Fekry A, 2020, Arxiv, DOI arXiv:2001.08002
   Fekry A, 2020, KDD '20: PROCEEDINGS OF THE 26TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P2494, DOI 10.1145/3394486.3403299
   Friedman JH, 2002, COMPUT STAT DATA AN, V38, P367, DOI 10.1016/S0167-9473(01)00065-2
   Gerasimou S, 2018, AUTOMAT SOFTW ENG, V25, P785, DOI 10.1007/s10515-018-0235-8
   Guo JM, 2018, EMPIR SOFTW ENG, V23, P1826, DOI 10.1007/s10664-017-9573-6
   Guo JM, 2013, IEEE INT CONF AUTOM, P301, DOI 10.1109/ASE.2013.6693089
   Ha H, 2019, PROC INT CONF SOFTW, P1095, DOI 10.1109/ICSE.2019.00113
   hadoop, 2018, HadoopTutorial: Hadoop MapReduce Tutorial
   HadoopTuning, 2015, Hadoop Performance Tuning Tutorial
   Hastie T., 2009, The Elements of Statistical Learning, V2, P1
   Herodotou H, 2022, PROC INT CONF DATA, P3194, DOI 10.1109/ICDE53745.2022.00296
   Herodotou H, 2020, ACM COMPUT SURV, V53, DOI 10.1145/3381027
   Herodotou H, 2011, PROC VLDB ENDOW, V4, P1111
   Huang CW, 2020, IEEE T EVOLUT COMPUT, V24, P201, DOI 10.1109/TEVC.2019.2921598
   Huang SS, 2010, I C DATA ENGIN WORKS, P41, DOI 10.1109/ICDEW.2010.5452747
   Hutter Frank, 2011, Learning and Intelligent Optimization. 5th International Conference, LION 5. Selected Papers, P507, DOI 10.1007/978-3-642-25566-3_40
   Hutter F., 2014, LNCS, P36
   Hutter F, 2009, J ARTIF INTELL RES, V36, P267, DOI 10.1613/jair.2861
   Jamshidi P, 2017, IEEE INT CONF AUTOM, P497, DOI 10.1109/ASE.2017.8115661
   Jamshidi P, 2016, I S MOD ANAL SIM COM, P39, DOI 10.1109/MASCOTS.2016.17
   Kewen Wang, 2012, 2012 IEEE 4th International Conference on Cloud Computing Technology and Science (CloudCom). Proceedings, P419, DOI 10.1109/CloudCom.2012.6427486
   Khan M, 2016, IEEE T PARALL DISTR, V27, P441, DOI 10.1109/TPDS.2015.2405552
   Krishna R, 2022, IEEE T SOFTWARE ENG, V48, P893, DOI 10.1109/TSE.2020.3007560
   kubeflow, 2020, Kubeflow: kubeflow
   Kunjir M, 2020, SIGMOD'20: PROCEEDINGS OF THE 2020 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1667, DOI 10.1145/3318464.3380591
   Li GL, 2019, PROC VLDB ENDOW, V12, P2118, DOI 10.14778/3352063.3352129
   Li L, 2020, PR MACH LEARN RES, V115, P367
   Li T., 2018, Commun. Comput. Inf. Sci, V901, P525, DOI [10.1007/978-981-13-2203-7_42, DOI 10.1007/978-981-13-2203-7_42]
   Li ZL, 2018, PROCEEDINGS OF THE 2018 USENIX ANNUAL TECHNICAL CONFERENCE, P981
   Liashchynskyi P, 2019, Arxiv, DOI arXiv:1912.06059
   Lima M.I.V., 2018, SBBD, P169
   Liu J, 2020, IEEE ACCESS, V8, P63862, DOI 10.1109/ACCESS.2020.2984778
   López-Ibáñez M, 2016, OPER RES PERSPECT, V3, P43, DOI 10.1016/j.orp.2016.09.002
   Lu JH, 2019, PROC VLDB ENDOW, V12, P1970, DOI 10.14778/3352063.3352112
   Mahdavian M., 2016, INT C INFORM SCI SYS, P1
   Mahgoub A, 2017, PROCEEDINGS OF THE 2017 INTERNATIONAL MIDDLEWARE CONFERENCE (MIDDLEWARE'17), P28, DOI 10.1145/3135974.3135991
   Martens A., 2010, P 1 JOINT WOSP SIPEW, P105, DOI DOI 10.1145/1712605.1712624
   Martin MA, 2013, P 15 ANN C COMP GEN, P1497, DOI DOI 10.1145/2464576.2482728
   Meng WY, 2021, EXPERT SYST APPL, V185, DOI 10.1016/j.eswa.2021.115493
   Moore A. W., 1993, ROBOT I, V6, P59
   Nabi Z., 2014, IBM White Paper
   Nair V, 2020, IEEE T SOFTWARE ENG, V46, P794, DOI 10.1109/TSE.2018.2870895
   Nair V, 2018, AUTOMAT SOFTW ENG, V25, P247, DOI 10.1007/s10515-017-0225-2
   Nair V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3106237.3106238
   Oh J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P61, DOI 10.1145/3106237.3106273
   Padhye Nikhil., 2011, Multi-objective Optimisation and Multi-criteria Decision Making for FDM Using Evolutionary Approaches, P219
   Pérez CJ, 2017, J CLEAN PROD, V166, P579, DOI 10.1016/j.jclepro.2017.08.060
   Poli R, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P169
   Redis, 2019, Redis benchmark
   Sanchez-Gomez JM, 2019, KNOWL-BASED SYST, V174, P123, DOI 10.1016/j.knosys.2019.03.002
   Sarkar A, 2015, IEEE INT CONF AUTOM, P342, DOI 10.1109/ASE.2015.45
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Schede E, 2022, J ARTIF INTELL RES, V75, P425
   Schmied T, 2021, PROCEEDINGS OF THE 1ST WORKSHOP ON MACHINE LEARNING AND SYSTEMS (EUROMLSYS'21), P24, DOI 10.1145/3437984.3458830
   Shi JW, 2014, PROC VLDB ENDOW, V7, P1319, DOI 10.14778/2733004.2733005
   Siegmund N, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P268, DOI 10.1145/3106237.3106251
   Singh R, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P309, DOI 10.1145/2851553.2851576
   Singhal R., 2017, TECHN C PERF EV BENC, P131
   Taboada H., 2007, QUALITY TECHNOLOGY Q, V4, P191, DOI DOI 10.1080/16843703.2007.11673145
   Tan KG., 2018, Int. J. Electr. Comput. Eng, V8, P1854
   Tang C, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1046, DOI 10.1145/3106237.3119880
   Tari Sara, 2020, Parallel Problem Solving from Nature - PPSN XVI. 16th International Conference, PPSN 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12269), P65, DOI 10.1007/978-3-030-58112-1_5
   Thummala V., 2010, P 2010 ACM SIGMOD IN, P1231
   Tian Y, 2019, 2019 IEEE SYMPOSIUM SERIES ON COMPUTATIONAL INTELLIGENCE (IEEE SSCI 2019), P3225, DOI 10.1109/SSCI44817.2019.9003018
   Tibshirani R, 1996, J ROY STAT SOC B, V58, P267, DOI 10.1111/j.2517-6161.1996.tb02080.x
   Tiwary M., 2023, A literature review of parameter tuning
    VV, 2020, Arxiv, DOI arXiv:2009.06374
   Valov P, 2015, P 19 INT C SOFTWARE, P186, DOI DOI 10.1145/2791060.2791069
   Van Aken D, 2021, PROC VLDB ENDOW, V14, P1241, DOI 10.14778/3450980.3450992
   Van Aken D, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1009, DOI 10.1145/3035918.3064029
   Venkataraman S, 2016, 13TH USENIX SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI '16), P363
   Venkataraman Shivaram, 2020, 12 USENIX WORKSH HOT
   Verma A, 2011, P 8 ACM INT C AUT CO, P235, DOI [10.1145/1998582.1998637, DOI 10.1145/1998582.1998637]
   Verma A, 2011, LECT NOTES COMPUT SC, V7049, P165
   Wang GL, 2016, PROCEEDINGS OF 2016 IEEE 18TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING AND COMMUNICATIONS; IEEE 14TH INTERNATIONAL CONFERENCE ON SMART CITY; IEEE 2ND INTERNATIONAL CONFERENCE ON DATA SCIENCE AND SYSTEMS (HPCC/SMARTCITY/DSS), P586, DOI [10.1109/HPCC-SmartCity-DSS.2016.45, 10.1109/HPCC-SmartCity-DSS.2016.0088]
   Wang KW, 2015, IEEE I C EMBED SOFTW, P166, DOI 10.1109/HPCC-CSS-ICESS.2015.246
   WEISE T, 2009, Global Optimization Algorithms-Theory and Application
   WEYMARK JA, 1981, MATH SOC SCI, V1, P409, DOI 10.1016/0165-4896(81)90018-4
   White T., 2012, Hadoop: The Definitive Guide
   Yang L, 2020, NEUROCOMPUTING, V415, P295, DOI 10.1016/j.neucom.2020.07.061
   Yeh CC, 2016, CONF TECHNOL APPL, P228, DOI 10.1109/TAAI.2016.7880179
   Yi WJ, 2023, IEEE T EVOLUT COMPUT, V27, P1072, DOI 10.1109/TEVC.2022.3197298
   Yu T., 2020, arXiv
   Yu ZB, 2018, ACM SIGPLAN NOTICES, V53, P564, DOI [10.1145/3173162.3173187, 10.1145/3296957.3173187]
   Zacheilas N, 2018, PROC INT CONF DATA, P1637, DOI 10.1109/ICDE.2018.00195
   Zacheilas N, 2017, IEEE INT CONF BIG DA, P389, DOI 10.1109/BigData.2017.8257950
   Zhang BH, 2018, PROC VLDB ENDOW, V11, P1910, DOI 10.14778/3229863.3236222
   Zhang J, 2019, INT CONF MANAGE DATA, P415, DOI 10.1145/3299869.3300085
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zhang Xinyi, 2021, arXiv
   Zhao Q, 2024, Arxiv, DOI arXiv:2303.06532
   Zhao XY, 2023, IEEE T KNOWL DATA EN, V35, P12470, DOI 10.1109/TKDE.2023.3266893
   Zhu YQ, 2022, IEEE T CLOUD COMPUT, V10, P234, DOI 10.1109/TCC.2019.2936567
   Zhu YQ, 2017, PROCEEDINGS OF THE 2017 SYMPOSIUM ON CLOUD COMPUTING (SOCC '17), P338, DOI 10.1145/3127479.3128605
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
NR 135
TC 0
Z9 0
U1 4
U2 12
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 4
DI 10.1007/s10515-023-00402-z
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Y2ZL3
UT WOS:001103998900002
DA 2024-08-05
ER

PT J
AU Sarkar, A
AF Sarkar, Aritra
TI Automated quantum software engineering
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Quantum algorithms; Software automation; Program synthesis
ID COMPUTATION; ALGORITHMS
AB As bigger quantum processors with hundreds of qubits become increasingly available, the potential for quantum computing to solve problems intractable for classical computers is becoming more tangible. Designing efficient quantum algorithms and software in tandem is key to achieving quantum advantage. Quantum software engineering is challenging due to the unique counterintuitive nature of quantum logic. Moreover, with larger quantum systems, traditional programming using quantum assembly language and qubit-level reasoning is becoming infeasible. Automated Quantum Software Engineering (AQSE) can help to reduce the barrier to entry, speed up development, reduce errors, and improve the efficiency of quantum software. This article elucidates the motivation to research AQSE (why), a precise description of such a framework (what), and reflections on components that are required for implementing it (how).
C1 [Sarkar, Aritra] QuTech, Quantum Machine Learning Res Grp, Quantum Comp Div, Lorentzweg 1, NL-2628 CJ Delft, Netherlands.
   [Sarkar, Aritra] Delft Univ Technol, Dept Quantum & Comp Engn, Mekelweg 4, NL-2628 CD Delft, Netherlands.
C3 Delft University of Technology; Delft University of Technology
RP Sarkar, A (corresponding author), QuTech, Quantum Machine Learning Res Grp, Quantum Comp Div, Lorentzweg 1, NL-2628 CJ Delft, Netherlands.; Sarkar, A (corresponding author), Delft Univ Technol, Dept Quantum & Comp Engn, Mekelweg 4, NL-2628 CD Delft, Netherlands.
EM a.sarkar-3@tudelft.nl
CR Aiello CD, 2021, QUANTUM SCI TECHNOL, V6, DOI 10.1088/2058-9565/abfa64
   Alvarez G, 2023, Arxiv, DOI arXiv:2303.08203
   Andriushchenko R, 2021, LECT NOTES COMPUT SC, V12759, P856, DOI 10.1007/978-3-030-81685-8_40
   Arawjo I, 2022, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, UIST 2022, DOI 10.1145/3526113.3545619
   Arunachalam Srinivasan, 2017, ACM SIGACT News, V48, P41, DOI 10.1145/3106700.3106710
   Atzemoglou P, 2014, arXiv
   Baez J, 2011, LECT NOTES PHYS, V813, P95, DOI 10.1007/978-3-642-12821-9_2
   Bakó B, 2024, Arxiv, DOI arXiv:2209.03386
   Bedford A, 2017, Arxiv, DOI arXiv:1712.03894
   Bernstein E., 1993, Proceedings of the Twenty-Fifth Annual ACM Symposium on the Theory of Computing, P11, DOI 10.1145/167088.167097
   Bertels Koen, 2020, IEEE Transactions on Quantum Engineering, V1, DOI 10.1109/TQE.2020.2981074
   Bertels K, 2021, IEEE MICRO, V41, P24, DOI 10.1109/MM.2021.3099195
   Bichsel B, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P286, DOI 10.1145/3385412.3386007
   Bornholt J., 2015, WORKSHOP APPROXIMATE
   Brown AR, 2023, Arxiv, DOI arXiv:2111.12700
   Brown K, 2022, Arxiv, DOI arXiv:2206.08755
   Cai YZ, 2024, Arxiv, DOI arXiv:2304.08103
   Cartiere CR., 2022, Quantum Softw. Eng, P85, DOI [10.1007/978-3-031-05324-5_5, DOI 10.1007/978-3-031-05324-5_5]
   Cervera-Lierta A, 2022, QUANTUM-AUSTRIA, V6
   Chandarana P, 2023, PHYS REV APPL, V20, DOI 10.1103/PhysRevApplied.20.014024
   Chen M., 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Coecke B., 2021, The Interplay of Mathematics. Logic, and Linguistics, P181
   Colas C, 2022, J ARTIF INTELL RES, V74, P1159
   Cruz-Lemus J.A., 2021, Proceedings (Communications in Computer and Information Science, P239
   De Raedt L, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P1835
   Ezratty O, 2023, Arxiv, DOI [arXiv:2305.09518, 10.48550/ARXIV.2305.09518]
   Fawzi A, 2022, NATURE, V610, P47, DOI 10.1038/s41586-022-05172-4
   Fitzsimons J.F., 2021, US Patent App, Patent No. [17/337,873, 17337873]
   GIRARD JY, 1987, THEOR COMPUT SCI, V50, P1, DOI 10.1016/0304-3975(87)90045-4
   Girard JY., 1989, Proofs and Types
   Goertzel B, 2021, Arxiv, DOI arXiv:2101.07498
   Goertzel Ben, 2008, Probabilistic logic networks: A comprehensive framework for uncertain inference
   Goertzel Ben., 2021, arXiv
   Gorard J, 2020, Arxiv, DOI arXiv:2010.02752
   Gorard Jonathan, 2021, arXiv
   Gulwani S, 2017, FOUND TRENDS PROGRAM, V4, P1, DOI 10.1561/2500000010
   Heese R., 2023, "Explaining quantum circuits with shapley values: Towards explainable quantum machine learning
   Hietala K, 2021, Arxiv, DOI arXiv:2010.01240
   Kang CG, 2023, P ACM PROGRAM LANG, V7, DOI 10.1145/3586039
   Kedlaya KS, 2006, COMPUT COMPLEX, V15, P1, DOI 10.1007/s00037-006-0204-7
   Krenn M, 2016, PHYS REV LETT, V116, DOI 10.1103/PhysRevLett.116.090405
   Lehman J, 2011, GENET EVOL COMPUT, P37
   Leymann F, 2020, QUANTUM SCI TECHNOL, V5, DOI 10.1088/2058-9565/abae7d
   Liang ZD, 2023, Arxiv, DOI arXiv:2307.08191
   Mankowitz DJ, 2023, NATURE, V618, P257, DOI 10.1038/s41586-023-06004-9
   Martyniuk Darya, 2021, Qurator
   Murakami K., 2022, arXiv
   Naveh A., 2021, US Patent App, Patent No. [17/499,063, 17499063]
   Naveh A., 2021, US Patent App, Patent No. [17/499,046, 17499046]
   Naveh Y., 2021, US Patent App, Patent No. [17/149,326, 17149326]
   Nichols R, 2019, QUANTUM SCI TECHNOL, V4, DOI 10.1088/2058-9565/ab4d89
   Nielsen MA, 2006, SCIENCE, V311, P1133, DOI 10.1126/science.1121541
   Nori AV, 2015, ACM SIGPLAN NOTICES, V50, P208, DOI [10.1145/2813885.2737982, 10.1145/2737924.2737982]
   Paykin J, 2017, ACM SIGPLAN NOTICES, V52, P846, DOI 10.1145/3093333.3009894
   Pérez-Castillo R, 2021, 2021 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON QUANTUM SOFTWARE ENGINEERING (Q-SE 2021), P7, DOI 10.1109/Q-SE52541.2021.00009
   Preskill J, 2018, QUANTUM-AUSTRIA, V2, DOI 10.22331/q-2018-08-06-79
   Quetschlich N, 2023, Arxiv, DOI arXiv:2210.14928
   Richardson M, 2006, MACH LEARN, V62, P107, DOI 10.1007/s10994-006-5833-1
   Romera-Paredes B., 2023, Nature
   Saggio V, 2021, NATURE, V591, P229, DOI 10.1038/s41586-021-03242-7
   Sarkar A, 2023, NEURAL COMPUT APPL, V35, P5165, DOI 10.1007/s00521-022-07911-0
   Sarra L, 2023, Arxiv, DOI arXiv:2305.01707
   Schuld M, 2019, PHYS REV LETT, V122, DOI 10.1103/PhysRevLett.122.040504
   Sebastianelli A, 2022, IEEE J-STARS, V15, P565, DOI 10.1109/JSTARS.2021.3134785
   Seidel R., 2022, PlanQC-Programm. Lang. Quantum Comput.
   Serrano MA., 2022, Quantum Software Engineering, DOI [10.1007/978-3-031-05324-5, DOI 10.1007/978-3-031-05324-5]
   Shi YN, 2020, P IEEE, V108, P1353, DOI 10.1109/JPROC.2020.2994765
   Shor PW, 2022, Arxiv, DOI arXiv:2208.09964
   Simonyi C, 2006, ACM SIGPLAN NOTICES, V41, P451, DOI 10.1145/1167515.1167511
   Spector L., 2004, Automatic Quantum Computer Programming: A Genetic Programming Approach
   Stanley KO, 2002, EVOL COMPUT, V10, P99, DOI 10.1162/106365602320169811
   Ventura D, 1998, IEEE WORLD CONGRESS ON COMPUTATIONAL INTELLIGENCE, P509, DOI 10.1109/IJCNN.1998.682319
   Wang R., 2020, P MACHINE LEARNING R, P9940
   Wang XY, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1237, DOI 10.1109/ASE51524.2021.9678798
   Weiden M, 2023, Arxiv, DOI arXiv:2306.05622
   Yakaryilmaz A., 2021, APS MARCH MEET, pA29
   Zhao J., 2020, arXiv
   Zhou L, 2022, Arxiv, DOI [arXiv:2207.11350, 10.48550/ARXIV.2207.11350, DOI 10.1145/3571222]
   Zulehner A., 2020, Introducing Design Automation for Quantum Computing, DOI [10.1007/978-3-030-41753-6, DOI 10.1007/978-3-030-41753-6]
NR 79
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 36
DI 10.1007/s10515-024-00436-x
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NK7X7
UT WOS:001200424400001
OA hybrid
DA 2024-08-05
ER

PT J
AU Wu, D
   Feng, Y
   Zhang, HY
   Xu, BW
AF Wu, Di
   Feng, Yang
   Zhang, Hongyu
   Xu, Baowen
TI Automatic recognizing relevant fragments of APIs using API references
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE API tutorials; API references; Relevance generation; Learned features
ID TUTORIAL FRAGMENTS
AB API tutorials are crucial resources as they often provide detailed explanations of how to utilize APIs. Typically, an API tutorial is segmented into a number of consecutive fragments.. If a fragment explains API usage, we regard it as a relevant fragment of the API. Recognizing relevant fragments can aid developers in comprehending, learning, and using APIs. Recently, some studies have presented relevant fragments recognition approaches, which mainly focused on using API tutorials or Stack Overflow to train the recognition model. API references are also important API learning resources as they contain abundant API knowledge. Considering the similarity between API tutorials and API references (both provide API knowledge), we believe that using API knowledge from API references could help recognize relevant tutorial fragments of APIs effectively. However, it is non-trivial to leverage API references to build a supervised learning-based recognition model. Two major problems are the lack of labeled API references and the unavailability of engineered features of API references. We propose a supervised learning based approach named RRTR (which stands for Recognize Relevant Tutorial fragments using API References) to address the above problems. For the problem of lacking labeled API references, RRTR designs heuristic rules to automatically collect relevant and irrelevant API references for APIs. Regarding the unavailable engineered features issue, we adopt the pre-trained SBERT model (SBERT stands for Sentence-BERT) to automatically learn semantic features for API references. More specifically, we first automatically generate labeled < API, ARE > pairs (ARE stands for an API reference) via our heuristic rules of API references. We then use SBERT to automatically learn semantic features for the collected pairs and train a supervised learning based recognition model. Finally, we can recognize the relevant tutorial fragments of APIs based on the trained model. To evaluate the effectiveness of RRTR, we collected Java and Android API reference datasets containing a total of 20,680 labeled < API, ARE > pairs. Experimental results demonstrate that RRTR outperforms state-of-the-art approaches in terms of F-Measure on two datasets. In addition, we conducted a user study to investigate the practicality of RRTR and the results further illustrate the effectiveness of RRTR in practice. The proposed RRTR approach can effectively recognize relevant fragments of APIs with API references by solving the problems of lacking labeled API references and engineered features of API references.
C1 [Wu, Di; Feng, Yang; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Zhang, Hongyu] Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
C3 Nanjing University; Chongqing University
RP Feng, Y (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
EM wudidi@nju.edu.cn; fengyang@nju.edu.cn; hyzhang@cqu.edu.cn;
   bwxu@nju.edu.cn
RI Wu, Di/GXG-3795-2022
OI Wu, Di/0000-0003-1096-7074
FU We would like to thank anonymous reviewers for their insightful and
   constructive comments. This research was partially funded by the
   National Natural Science Foundation of China under Grant No. 62172209,
   and the Science, Technology and Innovation Commissio [62172209];
   National Natural Science Foundation of China [2021Szvup057]; Science,
   Technology and Innovation Commission of Shenzhen Municipality
FX We would like to thank anonymous reviewers for their insightful and
   constructive comments. This research was partially funded by the
   National Natural Science Foundation of China under Grant No. 62172209,
   and the Science, Technology and Innovation Commission of Shenzhen
   Municipality (No.CJGJZD20200617103001003, 2021Szvup057).
CR Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Azad S, 2017, ACM T SOFTW ENG METH, V25, DOI 10.1145/2990497
   Bao LF, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3392093
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P456, DOI 10.1145/2591062.2591128
   Chowdhury SA, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P422, DOI 10.1109/MSR.2015.54
   Ciborowska A, 2022, PROC INT CONF SOFTW, P946, DOI 10.1145/3510003.3510042
   Cliff N., 2014, Ordinal methods for behavioral data analysis, DOI DOI 10.4324/9781315806730
   Dekel U, 2009, PROC INT CONF SOFTW, P320, DOI 10.1109/ICSE.2009.5070532
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Gao ZP, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3401026
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Hall M., 2009, SIGKDD Explor. Newsl, V11, P10, DOI [10.1145/1656274.1656278, DOI 10.1145/1656274.1656278]
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Isotani H, 2021, PROC IEEE INT CONF S, P535, DOI 10.1109/ICSME52107.2021.00054
   Jiang H, 2017, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2017.12
   Jiang H, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P157, DOI 10.1109/SANER.2016.59
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   Karmakar A, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1332, DOI 10.1109/ASE51524.2021.9678927
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Li HW, 2018, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2018.00028
   Li XC, 2020, IEEE T SOFTWARE ENG, V46, P1081, DOI 10.1109/TSE.2018.2876006
   Lin B, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3505247
   Lin JF, 2021, PROC INT CONF SOFTW, P324, DOI 10.1109/ICSE43902.2021.00040
   Luo X., 2022, INT C AUTOMATED SOFT, P1
   Ma SY, 2021, IEEE T SOFTWARE ENG, V47, P2296, DOI 10.1109/TSE.2019.2946830
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   McCallum A, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P662
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P1, DOI DOI 10.48550/ARXIV.1310.4546
   Petrosyan G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P869, DOI 10.1109/ICSE.2015.97
   Ponzanelli Luca, 2019, IEEE Transactions on Software Engineering, V45, P464, DOI 10.1109/TSE.2017.2779479
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Rehurek R., 2010, P LREC 2010 WORKSH N, DOI DOI 10.13140/2.1.2393.1847
   Reimers N, 2019, Arxiv, DOI [arXiv:1908.10084, DOI 10.48550/ARXIV.1908.10084]
   Robillard MP, 2015, EMPIR SOFTW ENG, V20, P1558, DOI 10.1007/s10664-014-9323-y
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Tan CQ, 2018, Arxiv, DOI [arXiv:1808.01974, DOI 10.48550/ARXIV.1808.01974, 10.48550/arXiv.1808.01974]
   tensorflow, 2023, About us
   Nguyen T, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P551, DOI 10.1145/3236024.3236036
   Tian H, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3576039
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Treude C, 2015, IEEE T SOFTWARE ENG, V41, P565, DOI 10.1109/TSE.2014.2387172
   Viggiato M, 2023, IEEE T SOFTWARE ENG, V49, P1027, DOI 10.1109/TSE.2022.3170272
   Wang DZ, 2022, PROC INT CONF SOFTW, P287, DOI 10.1145/3510003.3510062
   Wei MS, 2022, PROC INT CONF SOFTW, P376, DOI 10.1145/3510003.3510159
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Wu D., 2020, Wiley Interdiscip. Rev.: Data Min. Knowl. Discov, V10
   Wu D, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3565799
   Wu D, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10235-1
   Wu D, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09962-8
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Zhang F, 2018, IEEE T SOFTWARE ENG, V44, P1070, DOI 10.1109/TSE.2017.2750682
   Zhang HY, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P956, DOI 10.1145/2950290.2983955
   Zhang J., 2022, IEEE Trans. Softw. Eng.
   Zhang JX, 2021, IEEE T SOFTWARE ENG, V47, P1299, DOI 10.1109/TSE.2019.2919304
   Zhang N, 2022, IEEE T SOFTWARE ENG, V48, P1185, DOI 10.1109/TSE.2020.3016006
   Zhong H, 2019, IEEE T SOFTWARE ENG, V45, P319, DOI 10.1109/TSE.2017.2782280
   Zhong H, 2009, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2009.94
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
   Zhou Y, 2020, IEEE T SOFTWARE ENG, V46, P1004, DOI 10.1109/TSE.2018.2872971
NR 68
TC 0
Z9 0
U1 4
U2 12
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 3
DI 10.1007/s10515-023-00401-0
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Y1TX3
UT WOS:001103172300001
DA 2024-08-05
ER

PT J
AU Zou, HC
   Wang, YL
AF Zou, Haochen
   Wang, Yongli
TI A novel automated framework for fine-grained sentiment analysis of
   application reviews using deep neural networks
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Application review; Fine-grained sentiment analysis; Requirement
   engineering; Information retrieval; User feedback
AB The substantial volume of user feedback contained in application reviews significantly contributes to the development of human-centred software requirement engineering. The abundance of unstructured text data necessitates an automated analytical framework for decision-making. Language models can automatically extract fine-grained aspect-based sentiment information from application reviews. Existing approaches are constructed based on the general domain corpus, and are challenging to elucidate the internal technique of the recognition process, along with the factors contributing to the analysis results. To fully utilize software engineering domain-specific knowledge and accurately identify aspect-sentiment pairs from application reviews, we design a dependency-enhanced heterogeneous graph neural networks architecture based on the dual-level attention mechanism. The heterogeneous information network with knowledge resources from the software engineering field is embedded into graph convolutional networks to consider the attribute characteristics of different node types. The relationship between aspect terms and sentiment terms in application reviews is determined by adjusting the dual-level attention mechanism. Semantic dependency enhancement is introduced to comprehensively model contextual relationships and analyze sentence structure, thereby distinguishing important contextual information. To our knowledge, this marks initial efforts to leverage software engineering domain knowledge resources to deep neural networks to address fine-grained sentiment analysis issues. The experimental results on multiple public benchmark datasets indicate the effectiveness of the proposed automated framework in aspect-based sentiment analysis tasks for application reviews.
C1 [Zou, Haochen; Wang, Yongli] Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, 200 Xiaolingwei St, Nanjing 210094, Jiangsu, Peoples R China.
   [Zou, Haochen] Concordia Univ, Dept Comp Sci & Software Engn, 2155 Guy St, Montreal, PQ H3H 2L9, Canada.
C3 Nanjing University of Science & Technology; Concordia University -
   Canada
RP Wang, YL (corresponding author), Nanjing Univ Sci & Technol, Sch Comp Sci & Engn, 200 Xiaolingwei St, Nanjing 210094, Jiangsu, Peoples R China.
EM haochenzou@njust.edu.cn; yongliwang@njust.edu.cn
FU Science and Technology on Information System Engineering Laboratory;
   National Natural Science Foundation of China [61941113]; Jiangsu
   Province Key R&D Program (Modern Agriculture) Key Project [BE2023352];
   Key Medical Research Projects of Jiangsu Provincial Health Commission
   [ZD2022068];  [05202104]
FX The authors would like to thank the anonymous reviewers for their
   valuable comments. This article has been supported by the National
   Natural Science Foundation of China (61941113), Science and Technology
   on Information System Engineering Laboratory (No. 05202104). Jiangsu
   Province Key R&D Program (Modern Agriculture) Key Project (BE2023352),
   Key Medical Research Projects of Jiangsu Provincial Health Commission
   (ZD2022068).
CR Abdou T., 2019, Advanced Methodologies and Technologies in Network Architecture, Mobile Computing, and Data Analytics, P1358
   Acheampong FA, 2021, ARTIF INTELL REV, V54, P5789, DOI 10.1007/s10462-021-09958-2
   Ahmed T, 2017, IEEE INT CONF AUTOM, P106, DOI 10.1109/ASE.2017.8115623
   Alami A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10208-4
   Aldave A, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.110396
   Alturayeif N, 2023, AUTOMAT SOFTW ENG, V30, DOI 10.1007/s10515-023-00397-7
   Alzubaidi L, 2021, J BIG DATA-GER, V8, DOI 10.1186/s40537-021-00444-8
   Amplayo RK, 2017, DATA KNOWL ENG, V110, P54, DOI 10.1016/j.datak.2017.03.009
   Arora D, 2022, WIRELESS PERS COMMUN, V127, P3533, DOI 10.1007/s11277-022-09932-3
   Birjali M, 2021, KNOWL-BASED SYST, V226, DOI 10.1016/j.knosys.2021.107134
   Brauwers G, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3503044
   Calefato F, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P128, DOI 10.1145/3180155.3182519
   Calefato F, 2017, INT CONF AFFECT, P79, DOI 10.1109/ACIIW.2017.8272591
   Camacho-Otero J, 2019, J CLEAN PROD, V231, P928, DOI 10.1016/j.jclepro.2019.05.162
   Carrera-Rivera A, 2022, COMPUT IND, V142, DOI 10.1016/j.compind.2022.103730
   Chazette L, 2020, REQUIR ENG, V25, P493, DOI 10.1007/s00766-020-00333-1
   Chén OY, 2023, PATTERNS, V4, DOI 10.1016/j.patter.2023.100878
   Chen XL, 2021, NEUROCOMPUTING, V461, P497, DOI 10.1016/j.neucom.2021.02.098
   Chen Z, 2024, NEURAL COMPUT APPL, V36, P303, DOI 10.1007/s00521-023-08977-0
   Cortiñas-Lorenzo K, 2023, IEEE T NEUR NET LEAR, DOI 10.1109/TNNLS.2023.3270027
   Do HH, 2019, EXPERT SYST APPL, V118, P272, DOI 10.1016/j.eswa.2018.10.003
   Dridi A, 2019, INT J MACH LEARN CYB, V10, P2199, DOI 10.1007/s13042-018-0805-x
   Du JY, 2021, COGN COMPUT, V13, P1114, DOI 10.1007/s12559-021-09855-4
   Gao C., 2023, ACM Transactions Recommender System, V1, P1, DOI [DOI 10.1145/3568022, 10.1145/3568022]
   Gong JB, 2020, PROCEEDINGS OF THE 43RD INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR '20), P79, DOI [10.1145/11221.27, 10.1145/3397271.3401057]
   Gunathilaka Sadeep, 2022, 2022 22nd International Conference on Advances in ICT for Emerging Regions (ICTer), P183, DOI 10.1109/ICTer58063.2022.10024070
   Hadi MA, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10314-x
   Hossain A, 2022, PROCEEDINGS OF THE SECOND WORKSHOP ON SPEECH AND LANGUAGE TECHNOLOGIES FOR DRAVIDIAN LANGUAGES (DRAVIDIANLANGTECH 2022), P221
   Hu LM, 2024, IEEE T KNOWL DATA EN, V36, P1413, DOI 10.1109/TKDE.2023.3310002
   Imran M, 2023, IEEE T KNOWL DATA EN, V35, P3645, DOI 10.1109/TKDE.2022.3141951
   Iqbal S, 2023, ARCH COMPUT METHOD E, V30, P3173, DOI 10.1007/s11831-023-09899-9
   Islam MR, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1536, DOI 10.1145/3167132.3167296
   Islam MR, 2018, J SYST SOFTWARE, V145, P125, DOI 10.1016/j.jss.2018.08.030
   Jeong J, 2021, AUTOMAT SOFTW ENG, V28, DOI 10.1007/s10515-021-00295-w
   Klotins E, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10191-w
   Kolthoff K, 2023, AUTOMAT SOFTW ENG, V30, DOI 10.1007/s10515-023-00377-x
   Laplante PA., 2022, What Every Engineer Should Know About Software Engineering, DOI [10.1201/9781003218647, DOI 10.1201/9781003218647]
   Lenoir WF, 2021, NAT COMMUN, V12, DOI 10.1038/s41467-021-26867-8
   Li BT, 2020, NEURAL COMPUT APPL, V32, P16647, DOI 10.1007/s00521-020-04908-5
   Li B, 2021, NEUROCOMPUTING, V440, P45, DOI 10.1016/j.neucom.2021.01.089
   Li J, 2022, PROCEEDINGS OF THE 31ST ACM INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, CIKM 2022, P1114, DOI 10.1145/3511808.3557452
   Li N, 2024, ACM COMPUT SURV, V56, DOI 10.1145/3603704
   Ligthart A, 2021, ARTIF INTELL REV, V54, P4997, DOI 10.1007/s10462-021-09973-3
   Liu HY, 2020, IEEE T COMPUT SOC SY, V7, P1358, DOI 10.1109/TCSS.2020.3033302
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Martínez-Plumed F, 2021, IEEE T KNOWL DATA EN, V33, P3048, DOI 10.1109/TKDE.2019.2962680
   Mewada A, 2023, J SUPERCOMPUT, V79, P5516, DOI 10.1007/s11227-022-04881-x
   Min BN, 2024, ACM COMPUT SURV, V56, DOI 10.1145/3605943
   Mökander J, 2021, SCI ENG ETHICS, V27, DOI 10.1007/s11948-021-00319-4
   Motger Q, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3527450
   Obaidi M, 2022, INFORM SOFTWARE TECH, V151, DOI 10.1016/j.infsof.2022.107018
   Obie HO, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10361-4
   Peeters MMM, 2021, AI SOC, V36, P217, DOI 10.1007/s00146-020-01005-y
   Pinto C, 2020, 2020 53RD ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE (MICRO 2020), P868, DOI 10.1109/MICRO50266.2020.00075
   Radford A., 2019, OpenAI blog, V1, P9
   Reinhartz-Berger I, 2020, REQUIR ENG, V25, P47, DOI 10.1007/s00766-018-0307-0
   Ren FY, 2020, EXPERT SYST APPL, V151, DOI 10.1016/j.eswa.2020.113393
   Ren K, 2020, ENGINEERING-PRC, V6, P346, DOI 10.1016/j.eng.2019.12.012
   Roy S, 2021, IEEE T VLSI SYST, V29, P730, DOI 10.1109/TVLSI.2021.3063543
   Saidani I, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-021-00319-5
   Sapoval N, 2022, NAT COMMUN, V13, DOI 10.1038/s41467-022-29268-7
   Sarker I.H., 2021, SN Comput. Sci, V2, P1, DOI DOI 10.1007/S42979-021-00557-0
   Shuang K, 2020, INFORM FUSION, V61, P13, DOI 10.1016/j.inffus.2020.03.003
   Simin Wang, 2021, EITCE 2021: Proceedings of the 2021 5th International Conference on Electronic Information Technology and Computer Engineering, P915, DOI 10.1145/3501409.3501574
   Siyakumar M, 2017, PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON INVENTIVE COMPUTING AND INFORMATICS (ICICI 2017), P726, DOI 10.1109/ICICI.2017.8365231
   Snoeck M, 2022, SOFTW SYST MODEL, V21, P1469, DOI 10.1007/s10270-022-01015-y
   Suyuti Imam, 2022, 2022 9th International Conference on Electrical Engineering, Computer Science and Informatics (EECSI), P374, DOI 10.23919/EECSI56542.2022.9946469
   Tang FL, 2019, INFORM SCIENCES, V488, P190, DOI 10.1016/j.ins.2019.02.064
   Touvron H, 2023, Arxiv, DOI [arXiv:2302.13971, DOI 10.48550/ARXIV.2302.13971]
   Trusca MM, 2023, ARTIF INTELL REV, V56, P3797, DOI 10.1007/s10462-022-10252-y
   Usuga-Cadavid JP, 2022, INT J PROD RES, V60, P4548, DOI 10.1080/00207543.2021.1951868
   Veling L, 2021, INT J SOC ROBOT, V13, P1689, DOI 10.1007/s12369-020-00723-z
   Voelter M, 2013, AUTOMAT SOFTW ENG, V20, P339, DOI 10.1007/s10515-013-0120-4
   Wahyudi D., 2022, Build. Inform. Technol. Sci. (BITS), V4, P169
   Wan H, 2020, AAAI CONF ARTIF INTE, V34, P9122
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1857, DOI 10.1109/TSE.2019.2937083
   Wang HF, 2023, ENGINEERING-PRC, V25, P51, DOI 10.1016/j.eng.2022.04.024
   Wang JD, 2023, IEEE T KNOWL DATA EN, V35, P8052, DOI 10.1109/TKDE.2022.3178128
   Wang X, 2021, DECIS SUPPORT SYST, V141, DOI 10.1016/j.dss.2020.113448
   Wankhade M, 2022, ARTIF INTELL REV, V55, P5731, DOI 10.1007/s10462-022-10144-1
   Wu ZH, 2022, APPL INTELL, V52, P8428, DOI 10.1007/s10489-021-02836-y
   Yadav A, 2020, ARTIF INTELL REV, V53, P4335, DOI 10.1007/s10462-019-09794-5
   Yang CR, 2022, EUR CON SFTWR MTNCE, P385, DOI 10.1109/SANER53432.2022.00054
   Yang Guang, 2021, arXiv
   Yang H, 2023, PROCEEDINGS OF THE 32ND ACM INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, CIKM 2023, P5117, DOI 10.1145/3583780.3614752
   Yang H, 2021, NEUROCOMPUTING, V419, P344, DOI 10.1016/j.neucom.2020.08.001
   Yang TY, 2021, WEB CONFERENCE 2021: COMPANION OF THE WORLD WIDE WEB CONFERENCE (WWW 2021), P708, DOI 10.1145/3442442.3458612
   Yang YM, 2023, IEEE T KNOWL DATA EN, V35, P1637, DOI 10.1109/TKDE.2021.3101356
   Zeng YF, 2023, EXPERT SYST APPL, V213, DOI 10.1016/j.eswa.2022.119240
   Zhang T, 2020, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSME46990.2020.00017
   Zhang Z., 2022, 2022 INT JOINT C NEU, P1
   Zhao GS, 2023, KNOWL-BASED SYST, V264, DOI 10.1016/j.knosys.2023.110326
   Zhao YH, 2023, INFORM PROCESS MANAG, V60, DOI 10.1016/j.ipm.2023.103513
   Zheng LM, 2023, Arxiv, DOI [arXiv:2306.05685, 10.48550/arXiv.2306.05685]
   Zorzetti M, 2022, INFORM SOFTWARE TECH, V141, DOI 10.1016/j.infsof.2021.106718
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
NR 96
TC 0
Z9 0
U1 8
U2 8
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 43
DI 10.1007/s10515-024-00444-x
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RI5N5
UT WOS:001227049000001
DA 2024-08-05
ER

PT J
AU Gärtner, AE
   Göhlich, D
AF Gaertner, Alexander Elenga
   Goehlich, Dietmar
TI Automated requirement contradiction detection through formal logic and
   LLMs
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Contradiction detection; Requirements engineering; Natural language
   processing
AB This paper introduces ALICE (Automated Logic for Identifying Contradictions in Engineering), a novel automated contradiction detection system tailored for formal requirements expressed in controlled natural language. By integrating formal logic with advanced large language models (LLMs), ALICE represents a significant leap forward in identifying and classifying contradictions within requirements documents. Our methodology, grounded on an expanded taxonomy of contradictions, employs a decision tree model addressing seven critical questions to ascertain the presence and type of contradictions. A pivotal achievement of our research is demonstrated through a comparative study, where ALICE's performance markedly surpasses that of an LLM-only approach by detecting 60% of all contradictions. ALICE achieves a higher accuracy and recall rate, showcasing its efficacy in processing real-world, complex requirement datasets. Furthermore, the successful application of ALICE to real-world datasets validates its practical applicability and scalability. This work not only advances the automated detection of contradictions in formal requirements but also sets a precedent for the application of AI in enhancing reasoning systems within product development. We advocate for ALICE's scalability and adaptability, presenting it as a cornerstone for future endeavors in model customization and dataset labeling, thereby contributing a substantial foundation to requirements engineering.
C1 [Gaertner, Alexander Elenga] IAV GmbH, Berlin, Germany.
   [Goehlich, Dietmar] TU Berlin, Berlin, Germany.
C3 IAV GmbH; Technical University of Berlin
RP Gärtner, AE (corresponding author), IAV GmbH, Berlin, Germany.
EM a.e.gaertner@outlook.de; dietmar.goehlich@tu-berlin.de
FU Technische Universitt Berlin (3136)
FX We thank IAV GmbH for providing us with the requirements specifications
   for electric buses.
CR Ahmad A, 2020, APPL SCI-BASEL, V10, DOI 10.3390/app10217749
   [Anonymous], 2019, VDI 2221 Blatt 1:2019-11: design of technical products and systems-model of product design
   [Anonymous], 2009, DIN 69901-5:2009-01
   [Anonymous], 2018, IEEE/ISO/IEC 29148-2018
   Aristotle, 1999, ARISTOTLES METAPHYSI
   Bender B., 2021, Pahl/Beitz Konstruktionslehre: Methoden and Anwendung Erfolgreicher Produktentwicklung, P169, DOI [10.1007/978-3-662-57303-77, DOI 10.1007/978-3-662-57303-77]
   Chen ZG, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P106
   De Marneffe M.C., 2008, Finding Contradictions in Text
   Dick J., 2017, Requirements Engineering, V4, DOI DOI 10.1007/978-3-319-61073-3
   Frattini J, 2023, REQUIR ENG, V28, P49, DOI 10.1007/s00766-022-00371-x
   Friedman L., 2020, Math, Manim, Neural Networks & Teaching with 3Blue1Brown (118)
   Gärtner AE, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app12157628
   Gartner A.E., 2024, INT DES C HG DES 24
   Gartner A E., 2023, Proceedings of the Design Society, V3, P707, DOI DOI 10.1017/PDS.2023.71
   Gericke K., 2012, Proceedings of International Design Conference, DESIGN, V70, P171
   Gervasi V, 2005, ACM T SOFTW ENG METH, V14, P277, DOI 10.1145/1072997.1072999
   Ghlich D., 2008, Forschung fr das Auto von morgen, P129, DOI [10.1007/978-3-540-74151-02, DOI 10.1007/978-3-540-74151-02]
   Göhlich D, 2018, DES SCI, V4, DOI 10.1017/dsj.2018.10
   Gohlich D., 2021, Pahl/Beitz Konstruktionslehre. Methoden and Anwendung erfolgreicher Produktentwicklung, P211
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Guo W., 2021, arXiv
   Heitmeyer C. L., 1996, ACM Transactions on Software Engineering and Methodology, V5, P231, DOI 10.1145/234426.234431
   Horn Laurence R., 2018, The Stanford Encyclopedia of Philosophy
   Hunter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P335, DOI 10.1145/292182.292187
   Jang A., 2020, Contradictory, My Dear Watson
   Jindal R, 2016, 2016 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P2027, DOI 10.1109/ICACCI.2016.7732349
   Johnson-Laird PN., 2006, How We Reason, 1
   Jurafsky D., 2019, Speech and Language Processing, V3rd
   Karlova-Bourbonus N., 2019, Automatic detection of contradictions in texts
   Kim H.K., 2018, 2018 IEEE ACIS 19 IN
   Knothe F., 2006, ATZ Automob. Z, V108, P800, DOI [10.1007/BF03221821, DOI 10.1007/BF03221821]
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P490, DOI 10.1109/RE.2017.82
   Li LY, 2017, ALGORITHMS, V10, DOI 10.3390/a10020059
   Liu Q, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P1501
   Loucopoulos P., 2005, Design process improvement, P116, DOI [10.1007/978-1-84628-061-05, DOI 10.1007/978-1-84628-061-05]
   Miller T, 2019, ARTIF INTELL, V267, P1, DOI 10.1016/j.artint.2018.07.007
   Montgomery L, 2022, REQUIR ENG, V27, P183, DOI 10.1007/s00766-021-00367-z
   NEWELL A, 1956, IRE T INFORM THEOR, V2, P61, DOI 10.1109/tit.1956.1056797
   openai, 2023, GPT-4 Technical Report, P7
   openai, openai: ChatGPT-Release Notes. The Latest Update for ChatGPT
   openai, 2020, openai: Models. GPT-3. Hg. v. openai
   Ritter A., 2008, P 2008 C EMP METH NA, P11
   Robertson S., 2013, MASTERING REQUIREMEN, V3rd
   RuSSELL Stuart, 2010, Artificial Intelligence: A Modern Approach
   Schwitter R., 2010, Coling 2010: Posters, P1113
   Sepúlveda-Torres R, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11073060
   Sophist GmbH, 2016, Schablonen fur alle Falle
   Surana S., 2022, SN Comput. Sci, V3, P187, DOI [10.1007/s42979-022-01075-3, DOI 10.1007/S42979-022-01075-3]
   Ting K.M., 2011, ENCY MACHINE LEARNIN, V1st, P209, DOI [DOI 10.1007/978-0-387-30164-8_157, 10.1007/978-0-387-30164-8157]
   Touvron H., 2023, Llama: Open and efficient foundation language models
   Wiegers K. E., 2013, Software requirements
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wu X., P 45 INT ACM SIGIR C
   Zhao L, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3444689
NR 54
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 49
DI 10.1007/s10515-024-00452-x
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TT0B0
UT WOS:001243380700003
OA hybrid
DA 2024-08-05
ER

PT J
AU Sakhrawi, Z
   Labidi, T
AF Sakhrawi, Zaineb
   Labidi, Taher
TI Test case selection and prioritization approach for automated regression
   testing using ontology and COSMIC measurement
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Software regression testing; Test case selection; Test case
   prioritization; Ontology; COSMIC FSM method; Automated testing
ID UML
AB Regression testing is an important activity that aims to provide information about the quality of the software product under test when changes occur. The two primary techniques for optimizing regression testing are test case selection and prioritization. To identify features affected by a change and determine the best test cases for selection and prioritization, techniques allowing the semantic representation and the quantification of testing concepts are required. The goal of this paper is threefold. Firstly, we proposed an ontology-based test case selection model that enables automated regression testing by dynamically selecting appropriate test cases. The selection of test cases is based on a semantic mapping between change requests and their associated test suites and test cases. Secondly, the selected test cases are prioritized based on their functional size. The functional size is determined using the COmmon Software Measurement International Consortium (COSMIC) Functional Size Measurement (FSM) method. The test case prioritization attempts to reorganize test case execution in accordance with its goal. One common goal is fault detection, in which test cases with a higher functional size (i.e., with a higher chance of detecting a fault) are run first, followed by the remaining test cases. Thirdly, we built an automated testing tool using the output of the aforementioned processes to validate the robustness of our proposed research methodology. Results from a case study in the automotive industry domain show that semantically presenting change requests and using standardized FSM methods to quantify their related test cases are the most interesting metrics. Obviously, they assist in the automation of regression testing and, therefore, in all the software testing processes.
C1 [Sakhrawi, Zaineb] Univ Sfax, Higher Inst Comp Sci & Multimedia, Sfax, Tunisia.
   [Labidi, Taher] Univ Gabes, Higher Inst Comp Sci Medenine, Gabes, Tunisia.
C3 Universite de Sfax; Universite de Gabes
RP Labidi, T (corresponding author), Univ Gabes, Higher Inst Comp Sci Medenine, Gabes, Tunisia.
EM zaineb.sakhraoui@isims.usf.tn; taherlabidi@gmail.com
CR Abran A., The COSMIC functional size measurement method version 5.0, Online
   Attallah Y., 2022, IWSM MENSURA
   Bajaj A, 2022, SENSORS-BASEL, V22, DOI 10.3390/s22124374
   Banerjee S., 2021, SN Comput. Sci, V2, P1, DOI [10.1007/s42979-020-00420-8, DOI 10.1007/S42979-020-00420-8]
   Baskaran S, 2017, CIKM'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1847, DOI 10.1145/3132847.3132879
   bin Ali N, 2019, EMPIR SOFTW ENG, V24, P2020, DOI 10.1007/s10664-018-9670-1
   Bluemke I, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3442694
   Chen Y. P., 2003, International Journal of Foundations of Computer Science, V14, P305, DOI 10.1142/S0129054103001741
   Chittimalli Pavan Kumar, 2008, 1st India Software Engineering Conference. ISEC 2008, P87
   De Vito G, 2020, SOFTW SYST MODEL, V19, P171, DOI 10.1007/s10270-019-00731-2
   Djam XY., 2021, J. Softw. Eng. Appli, V14, P95, DOI [10.4236/jsea.2021.144007, DOI 10.4236/JSEA.2021.144007]
   Freitas A, 2014, 2014 IEEE/WIC/ACM INTERNATIONAL JOINT CONFERENCES ON WEB INTELLIGENCE (WI) AND INTELLIGENT AGENT TECHNOLOGIES (IAT), VOL 1, P400, DOI 10.1109/WI-IAT.2014.62
   Graham D., 2021, Foundations of software testing ISTQB certification
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Haoues M, 2019, INFORM SOFTWARE TECH, V110, P78, DOI 10.1016/j.infsof.2019.02.004
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Khlif W, 2017, ICSOFT: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES, P265, DOI 10.5220/0006418902650274
   Khlif W, 2018, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P124, DOI 10.5220/0006707301240136
   Labidi T, 2019, LECT NOTES ARTIF INT, V11683, P663, DOI 10.1007/978-3-030-28377-3_55
   Labidi T, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC), P338, DOI 10.1109/SCC.2017.50
   Labidi T, 2016, J DATA SEMANT, V5, P179, DOI 10.1007/s13740-016-0070-7
   Lavazza L, 2009, LECT NOTES COMPUT SC, V5891, P101, DOI 10.1007/978-3-642-05415-0_8
   Li BX, 2012, J SYST SOFTWARE, V85, P1300, DOI 10.1016/j.jss.2012.01.036
   Li M, 2004, IEEE T INFORM THEORY, V50, P3250, DOI 10.1109/TIT.2004.838101
   Ling X, 2021, IEEE T SOFTWARE ENG, V48, P2526, DOI 10.1109/TSE.2021.3063220
   Mahdieh M, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-022-00344-y
   Marín B, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491520
   Mkhinini MM, 2020, COMPUT SCI REV, V35, DOI 10.1016/j.cosrev.2019.100223
   Abadeh MN, 2021, SERV ORIENTED COMPUT, V15, P55, DOI 10.1007/s11761-020-00312-y
   Pan RQ, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10066-6
   Pedersen T, 2004, PROCEEDING OF THE NINETEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE SIXTEENTH CONFERENCE ON INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE, P1024
   Poston R.M., 1997, AUTOMATING SPECIFICA
   ROOK P, 1986, SOFTWARE ENG J, V1, P7, DOI 10.1049/sej.1986.0003
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Sakhrawi Z, 2022, INNOV SYST SOFTW ENG, V18, P137, DOI 10.1007/s11334-021-00420-8
   Samad A, 2021, SCI PROGRAMMING-NETH, V2021, DOI 10.1155/2021/9988987
   Sapna P. G., 2011, INFORM INTELLIGENCE, V5, P91
   Sellami A., 2019, Case study: sizing natural language/ user stories/ UML use cases for web and mobile applications using COSMIC FSM
   Sellami A, 2013, COMM COM INF SC, V417, P48
   Silva TR, 2017, IEEE INT C SEMANT CO, P250, DOI 10.1109/ICSC.2017.73
   Talib M. A., 2006, Softw Quality Profess Magaz, V8
   Tan H., 2019, JOWO 2019, V2518
   Tarasov V, 2017, LECT NOTES COMPUT SC, V10161, P82, DOI 10.1007/978-3-319-54627-8_7
   Ul Haq S, 2019, PROCEEDINGS OF 2019 8TH INTERNATIONAL CONFERENCE ON EDUCATIONAL AND INFORMATION TECHNOLOGY (ICEIT 2019), P236, DOI 10.1145/3318396.3318442
   Vasanthapriyan S., 2017, SEKE, P230
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Yu Y, 2011, LECT NOTES COMPUT SC, V7031, P794, DOI 10.1007/978-3-642-25073-6_50
NR 47
TC 0
Z9 0
U1 3
U2 3
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 51
DI 10.1007/s10515-024-00447-8
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TR2J5
UT WOS:001242918400001
DA 2024-08-05
ER

PT J
AU Samet, D
   Ktata, FB
   Ghedira, K
AF Samet, Donies
   Ktata, Farah Barika
   Ghedira, Khaled
TI A security framework for mobile agent systems
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Mobile agent system; Security; MA-UML profile; Cooperative attacks
ID MULTIAGENT SYSTEMS; ACCESS-CONTROL; MODEL
AB Security is a very important challenge in mobile agent systems due to the strong dependence of agents on the platform and vice versa. According to recent studies, most current mobile agent platforms suffer from significant limitations in terms of security when they face Denial of Service (DOS) attacks. Current security solutions even provided by the mobile agent platforms or by the literature focus essentially on individual attacks and are mainly based on static models that present a lack of the permissions definition and are not detailed enough to face collaborative DOS attacks executed by multiple agents or users. This paper presents a security framework that adds security defenses to mobile agent platforms. The proposed security framework implements a standard security model described using MA-UML (Mobile Agent-Unified Modeling Language) notations. The framework lets the administrator (of agents' place) define a precise and fine-grained authorization policy to defend against DOS attacks. The authorization enforcement in the proposed framework is dynamic : the authorization decisions executed by the proposed framework are based upon run-time parameters like the amount of activity of an agent. We implement an experiment on a mobile agent system of e-marketplaces. Given that we focus essentially on the availability criterion, the performance of the proposed framework on a place is evaluated against DOS and DDOS attacks and investigated in terms of duration of execution that is the availability of the place.
C1 [Samet, Donies] Univ Manouba, Natl Sch Comp Sci ENSI, Tunis, Tunisia.
   [Ktata, Farah Barika] Higher Inst Appl Sci & Technol Sousse, Sousse, Tunisia.
   [Ghedira, Khaled] Honoris United Univ, Univ Cent Tunis, Tunis, Tunisia.
C3 Universite de la Manouba; Universite de Sousse
RP Samet, D (corresponding author), Univ Manouba, Natl Sch Comp Sci ENSI, Tunis, Tunisia.
EM donies.samet@yahoo.com; farah.ktata@gmail.com;
   khaled.ghedira@universitecentrale.tn
OI BARIKA KTATA, Farah/0000-0001-5706-4548
CR Ahmed Tarig Mohamed, 2012, 2012 IEEE Symposium on Computers & Informatics, P86, DOI 10.1109/ISCI.2012.6222672
   Alami-Kamouri S., 2020, J. Commun, V15, P221, DOI [10.12720/jcm.15.3.221-230, DOI 10.12720/JCM.15.3.221-230]
   Alfalayleh M, 2005, INT FED INFO PROC, V175, P59
   Alluhaybi B, 2020, IEEE ACCESS, V8, P129320, DOI 10.1109/ACCESS.2020.3009245
   Alluhaybi B, 2019, INT J ADV COMPUT SC, V10, P211
   Bagga P, 2017, EXPERT SYST APPL, V72, P269, DOI 10.1016/j.eswa.2016.10.062
   Belghiat Aissam, 2016, CIT. Journal of Computing and Information Technology, V24, P149, DOI 10.20532/cit.2016.1002695
   Bellifemine F, 2008, INFORM SOFTWARE TECH, V50, P10, DOI 10.1016/j.infsof.2007.10.008
   Berguig Y., 2019, Int J Innov Technol Explor Eng, V8
   Beydoun G, 2009, INFORM SOFTWARE TECH, V51, P832, DOI 10.1016/j.infsof.2008.05.003
   Beydoun G., 2007, Modelling mas-specific security features
   Bhamra GS., 2014, Int. J. Comput. Appl, V89, P19
   Bürkle A, 2009, AUTON AGENT MULTI-AG, V18, P295, DOI 10.1007/s10458-008-9043-z
   Cao C, 2006, INT J PARALLEL EMERG, V21, P215, DOI 10.1080/17445760500356205
   Farmer W.M., 1996, P 19 NAT INF SYST SE, V2, P591
   Feng Y., 2016, INT WORKSH INF SEC A, P79
   Group O. etal, 2001, unified modeling language
   Hachicha Hela, 2009, International Journal of Agent-Oriented Software Engineering, V3, P277, DOI 10.1504/IJAOSE.2009.023640
   Hachicha H, 2015, LECT NOTES ARTIF INT, V9433, P154, DOI 10.1007/978-3-319-27343-3_9
   Hanaoui S., 2018, INT C ADV INT SYST S, P302
   JADEBoard, 2005, Jade security guide
   Jansen W., 2000, Nist special publication 800-19-mobile agent security
   Kori Gururaj S., 2022, International Journal of Information Technology, V14, P345, DOI 10.1007/s41870-021-00829-1
   Linna F., 2010, 2010 2 INT C ED TECH, V5, pV5
   lnowski A.P.Z., 2012, JADE-PKI 1.0 Manual
   Loulou M, 2006, 2006 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND SECURITY, PTS 1 AND 2, PROCEEDINGS, P524, DOI 10.1109/ICCIAS.2006.294189
   Ma L, 2008, IEEE T SYST MAN CY A, V38, P180, DOI 10.1109/TSMCA.2007.909552
   Marikkannu P., 2011, Journal of Computer Sciences, V7, P488, DOI 10.3844/jcssp.2011.488.492
   Marikkannu P., 2011, 2011 International Conference on Recent Trends in Information Technology (ICRTIT 2011), P240, DOI 10.1109/ICRTIT.2011.5972321
   Mishra PK, 2019, INT J COMMUN NETW DI, V22, P294
   Montanari R, 2001, MICROPROCESS MICROSY, V25, P93, DOI 10.1016/S0141-9331(01)00102-8
   Mouratidis Haralambos., 2003, AAMAS 03 P 2 INT JOI, P859
   Nasr MM, 2015, 2015 5TH NATIONAL SYMPOSIUM ON INFORMATION TECHNOLOGY: TOWARDS NEW SMART WORLD (NSITNSW)
   Ordille JJ, 1996, FIRST ANNUAL CONFERENCE ON EMERGING TECHNOLOGIES AND APPLICATIONS IN COMMUNICATIONS, PROCEEDINGS, P188, DOI 10.1109/ETACOM.1996.502505
   Rekik Molka, 2012, Agent and Multi-Agent Systems. Technologies and Applications. Proceedings 6th KES International Conference, KES-AMSTA 2012, P330, DOI 10.1007/978-3-642-30947-2_37
   Samet Donies, 2020, Agents and Multi-Agent Systems: Technologies and Applications 2020. 14th KES International Conference, KES-AMSTA 2020. Proceedings. Smart Innovation, Systems and Technologies (SIST 186), P71, DOI 10.1007/978-981-15-5764-4_7
   Samet D., 2018, KES INT S AG MULT SY, P97
   Samet D, 2018, SMART INNOV SYST TEC, V74, P42, DOI 10.1007/978-3-319-59394-4_5
   Sandhu RS, 1996, COMPUTER, V29, P38, DOI 10.1109/2.485845
   Saxena A, 2005, 2005 IEEE INTERNATIONAL CONFERENCE ON E-TECHNOLOGY, E-COMMERCE AND E-SERVICE, PROCEEDINGS, P282, DOI 10.1109/EEE.2005.35
   Schafer G., 2005, Praxis der Informationsverarbeitung und Kommunikation, V28, P130, DOI [10.1515/PIKO.2005.130, DOI 10.1515/PIKO.2005.130]
   Srivastava S., 2011, 2011 2nd International Conference on Computer and Communication Technology, P405, DOI 10.1109/ICCCT.2011.6075189
   Srivastava S, 2014, J KING SAUD UNIV-COM, V26, P131, DOI 10.1016/j.jksuci.2013.08.002
   Tsiligiridis T. A., 2004, Neural, Parallel & Scientific Computations, V12, P153
   van't Noordende GJ, 2004, 2004 IEEE 1ST SYMPOSIUM ON MULTI-AGENT SECURITY & SURVIVABILITY, P35
   Venkatesan S, 2013, COMPUT STAND INTER, V35, P365, DOI 10.1016/j.csi.2012.10.003
   Venkatesan S, 2010, J NETW COMPUT APPL, V35, P661, DOI 10.1016/j.jnca.2010.03.010
   Venkatesan S., 2008, 2008 1st International Conference on Emerging Trends in Engineering and Technology (ICETET), P1228, DOI 10.1109/ICETET.2008.89
   Wahbe R., 1994, ACM SIGOPS Operating Systems Review
   Xiao L, 2007, P INT COMP SOFTW APP, P261
   Yousefi S, 2021, INTERNET THINGS-NETH, V15, DOI 10.1016/j.iot.2021.100427
   Zrari C, 2015, PROCEDIA COMPUT SCI, V60, P17, DOI 10.1016/j.procs.2015.08.100
NR 52
TC 0
Z9 0
U1 1
U2 2
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 12
DI 10.1007/s10515-023-00408-7
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI7S5
UT WOS:001138367700001
DA 2024-08-05
ER

PT J
AU Lima, R
   Ferreira, JF
   Mendes, A
   Carreira, C
AF Lima, Rui
   Ferreira, Joao F.
   Mendes, Alexandra
   Carreira, Carolina
TI <i>DifFuzzAR</i>: automatic repair of timing side-channel
   vulnerabilities via refactoring
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Source code refactoring; Timing side-channel vulnerabilities; Automatic
   repair of vulnerabilities; Code repair; Security; Java
AB Vulnerability detection and repair is a demanding and expensive part of the software development process. As such, there has been an effort to develop new and better ways to automatically detect and repair vulnerabilities. DifFuzz is a state-of-the-art tool for automatic detection of timing side-channel vulnerabilities, a type of vulnerability that is particularly difficult to detect and correct. Despite recent progress made with tools such as DifFuzz, work on tools capable of automatically repairing timing side-channel vulnerabilities is scarce. In this paper, we propose DifFuzzAR, a tool for automatic repair of timing side-channel vulnerabilities in Java code. The tool works in conjunction with DifFuzz and it is able to repair 56% of the vulnerabilities identified in DifFuzz's dataset. The results show that the tool can automatically correct timing side-channel vulnerabilities, being more effective with those that are control-flow based. In addition, the results of a user study show that users generally trust the refactorings produced by DifFuzzAR and that they see value in such a tool, in particular for more critical code.
C1 [Lima, Rui; Ferreira, Joao F.; Carreira, Carolina] INESC ID, Lisbon, Portugal.
   [Lima, Rui; Ferreira, Joao F.; Carreira, Carolina] Univ Lisbon, IST, Lisbon, Portugal.
   [Mendes, Alexandra] INESC TEC, HASLab, Porto, Portugal.
   [Mendes, Alexandra] Univ Porto, Fac Engn, Porto, Portugal.
C3 Universidade de Lisboa; INESC-ID; Universidade de Lisboa; INESC TEC;
   Universidade do Porto
RP Ferreira, JF (corresponding author), INESC ID, Lisbon, Portugal.; Ferreira, JF (corresponding author), Univ Lisbon, IST, Lisbon, Portugal.
EM joao@joaoff.com
RI Mendes, Alexandra/IST-4041-2023
OI Mendes, Alexandra/0000-0001-8060-5920
FU PassCert project, a CMU Portugal Exploratory Project by Fundacao para a
   Ciencia e Tecnologia (FCT) [CMU/TIC/0006/2019]; FCT [UIDB/50021/2020]
FX We thank the anonymous reviewers of the previous version of this work
   (Lima et al. 2021) for their valuable and constructive comments. We also
   thank the anonymous reviewers of this extended version for their
   comments, which substantially improved the paper. This work was
   partially funded by the PassCert project, a CMU Portugal Exploratory
   Project funded by Fundacao para a Ciencia e Tecnologia (FCT), with
   reference CMU/TIC/0006/2019 and supported by national funds through FCT
   under project UIDB/50021/2020.
CR Allamanis Miltiadis, 2021, NeurIPS
   [Anonymous], 2005, Cryptology ePrint Archive
   Antonopoulos T, 2017, ACM SIGPLAN NOTICES, V52, P362, DOI [10.1145/3062341.3062378, 10.1145/3140587.3062378]
   Berry DM, 2003, IEEE T SOFTWARE ENG, V29, P567, DOI 10.1109/TSE.2003.1205183
   Brumley D, 2005, COMPUT NETW, V48, P701, DOI 10.1016/j.comnet.2005.01.010
   Chen J, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P875, DOI 10.1145/3133956.3134058
   Chen S., 2021, arXiv
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Ciolkowski M., 2003, Practical Experiences in the Design and Conduct of Surveys in Empirical Software Engineering, DOI [10.1007/978-3-540-45143-3_7, DOI 10.1007/978-3-540-45143-3_7]
   Cloud Foundry, These are the top languages for enterprise application development and what that means for business
   Cornu B, 2015, Arxiv, DOI arXiv:1512.07423
   Cummings R, 2021, CCS '21: PROCEEDINGS OF THE 2021 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P3037, DOI 10.1145/3460120.3485252
   DARPA, Space/time analysis for cybersecurity (STAC)
   Eilertsen M., 2012, Improving the usability of refactoring tools for software change tasks
   EvoSuite, Automatic test suite generation for Java
   Forrest Stephanie, 2009, P 11 ANN C GEN EV CO, P947
   github, GitHub: the state of the octoverse
   Goguen J. A., 1982, Proceedings of the 1982 Symposium on Security and Privacy, P11
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Hainmueller J, 2015, P NATL ACAD SCI USA, V112, P2395, DOI 10.1073/pnas.1416587112
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   IBM, Modern languages for the modern enterprise
   IVC Wiki, Xbox 360 timing attack
   Kersten R, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2511, DOI 10.1145/3133956.3138820
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Koeune F, 2005, LECT NOTES COMPUT SC, V3655, P78
   Lavrakas P. J., 2008, Encyclopedia of Survey Research Methods, DOI DOI 10.4135/9781412963947
   Lawson N., Timing attack in google keyczar library
   Lazar J., 2017, Research methods in human-computer interaction, V2nd, DOI DOI 10.1016/B978-0-12-805390-4.00014-5
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Lima R., 2021, Master's thesis
   Lima R, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2021), P1, DOI 10.1109/ASEW52652.2021.00014
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Monperrus M., 2018, Technical Report hal-01956501
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Nilizadeh S, 2019, PROC INT CONF SOFTW, P176, DOI 10.1109/ICSE.2019.00034
   Pawlak R, 2016, SOFTWARE PRACT EXPER, V46, P1155, DOI 10.1002/spe.2346
   Pereira RB, 2022, 9TH IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS, MOBILESOFT 2022, P17, DOI 10.1145/3524613.3527815
   Redmiles EM, 2017, P 2017 IEEE CYB DEV, P22
   Ribeiro A, 2021, IEEE INT C S Q R S, P62, DOI 10.1109/QRS54544.2021.00017
   Wu M, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P15, DOI 10.1145/3213846.3213851
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Yasunaga M., 2020, P 37 INT C MACHINE L
   Yasunaga M, 2021, PR MACH LEARN RES, V139
   Ye H, 2022, Arxiv, DOI arXiv:2105.04123
   Zalewski M., 2017, american fuzzy lop
NR 50
TC 0
Z9 0
U1 2
U2 7
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD JUN
PY 2024
VL 31
IS 1
AR 1
DI 10.1007/s10515-023-00398-6
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA W1VT3
UT WOS:001089587100001
OA hybrid
DA 2024-08-05
ER

PT J
AU Sauvola, J
   Tarkoma, S
   Klemettinen, M
   Riekki, J
   Doermann, D
AF Sauvola, Jaakko
   Tarkoma, Sasu
   Klemettinen, Mika
   Riekki, Jukka
   Doermann, David
TI Future of software development with generative AI
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Software development; Generative AI; Real-time digital economy
AB Generative AI is regarded as a major disruption to software development. Platforms, repositories, clouds, and the automation of tools and processes have been proven to improve productivity, cost, and quality. Generative AI, with its rapidly expanding capabilities, is a major step forward in this field. As a new key enabling technology, it can be used for many purposes, from creative dimensions to replacing repetitive and manual tasks. The number of opportunities increases with the capabilities of large-language models (LLMs). This has raised concerns about ethics, education, regulation, intellectual property, and even criminal activities. We analyzed the potential of generative AI and LLM technologies for future software development paths. We propose four primary scenarios, model trajectories for transitions between them, and reflect against relevant software development operations. The motivation for this research is clear: the software development industry needs new tools to understand the potential, limitations, and risks of generative AI, as well as guidelines for using it.
C1 [Sauvola, Jaakko; Riekki, Jukka] Univ Oulu, Oulu, Finland.
   [Tarkoma, Sasu] Univ Helsinki, Helsinki, Finland.
   [Klemettinen, Mika] Business Finland, Helsinki, Finland.
   [Doermann, David] SUNY Buffalo, Buffalo, NY USA.
C3 University of Oulu; University of Helsinki; State University of New York
   (SUNY) System; State University of New York (SUNY) Buffalo
RP Sauvola, J (corresponding author), Univ Oulu, Oulu, Finland.
EM jaakko.sauvola@oulu.fi
FU University of Oulu (including Oulu University Hospital)
FX No Statement Available
CR Bull C, 2024, IEEE SOFTWARE, V41, P52, DOI 10.1109/MS.2023.3300574
   Cai TL, 2024, Arxiv, DOI arXiv:2305.17126
   Ebert C, 2023, IEEE SOFTWARE, V40, P30, DOI 10.1109/MS.2023.3265877
   Elazhary O, 2021, PROC IEEE ACM INT C, P153, DOI 10.1109/ICSE-Companion52605.2021.00064
   forbes, Forbes Homepage
   futurepedia, FuturePedia Homepage
   gartner, Homepage Gartner
   github, ChatDev Homepage
   mckinseyenergyinsights, About us
   medium, Medium Homepage
NR 10
TC 0
Z9 0
U1 45
U2 45
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 26
DI 10.1007/s10515-024-00426-z
PG 8
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KK6I2
UT WOS:001179890300001
OA hybrid
DA 2024-08-05
ER

PT J
AU Yu, XZ
   Tang, W
   Xiong, TL
   Chen, WA
   He, J
   Yang, B
   Qi, ZW
AF Yu, Xingzi
   Tang, Wei
   Xiong, Tianlei
   Chen, Wengang
   He, Jie
   Yang, Bin
   Qi, Zhengwei
TI Enhancing embedded systems development with TS<SUP>-</SUP>
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE TypeScript; Software development; AOT compilation; WebAssembly
ID IMPACT
AB The lack of flexibility and safety in C language development has been criticized for a long time, causing detriments to the development cycle and software quality in the embedded systems domain. TypeScript, as an optionally-typed dynamic language, offers the flexibility and safety that developers desire. With the advancement of Ahead-of-Time (AOT) compilation technologies for TypeScript and JavaScript, it has become feasible to write embedded applications using TypeScript. Despite the availability of writing AOT compiled programs with TypeScript, implementing a compiler toolchain for this purpose requires substantial effort. To simplify the design of languages and compilers, this paper presents a new compiler toolchain design methodology called TS-, which advocates the generation of target intermediate language code (such as C) from TypeScript rather than the construction of higher-level compiler tools and type systems on top of the intermediate language. TS- not only simplifies the design of the system but also provides developers with a quasi-native TypeScript development experience. This paper also presents TS2WASM, a prototype that implements TS(-)and allows compiling a language subset of TypeScript to WebAssembly (WASM). The tests in the TypeScript repository show that TS2WASM provides 3.8x as many features compared to the intermediate language (AssemblyScript). Regarding performance, TS2WASM offers a significant speed-up of 1.4x to 19x. Meanwhile, it imposes over 65% less memory overhead compared to Node.js in most cases.
C1 [Yu, Xingzi; Xiong, Tianlei; Qi, Zhengwei] Shanghai Jiao Tong Univ, Shanghai, Peoples R China.
   [Tang, Wei; Chen, Wengang; He, Jie; Yang, Bin] Ant Grp, Shanghai, Peoples R China.
C3 Shanghai Jiao Tong University
RP Qi, ZW (corresponding author), Shanghai Jiao Tong Univ, Shanghai, Peoples R China.
EM edittriendl@sjtu.edu.cn; tangwei.tang@antgroup.com; qmyyxtl@sjtu.edu.cn;
   wengang.cwg@antgroup.com; hejie.he@antgroup.com; yb261973@antgroup.com;
   qizhwei@sjtu.edu.cn
RI ren, jun/KHG-7717-2024; guo, yi/KHC-4669-2024; Zhang, Lu/KHE-5879-2024;
   Liu, Yu/KFS-0769-2024; su, lin/KHC-5034-2024; li, cheng/KCZ-0615-2024;
   zhang, yan/KHC-3163-2024; liu, qi/KHC-7509-2024; li, jing/KHC-8303-2024;
   liu, qi/KFA-4047-2024; Chen, Yang/KHD-8849-2024; zhu, hao/KHW-3813-2024
OI Yu, Xingzi/0009-0009-5729-3207
FU National NSF of China; Shanghai Key Laboratory of Scalable Computing and
   Systems;  [62141218]
FX This work was supported in part by the National NSF of China (No.
   62141218), the cooperation project from Ant Group ("Wasm-enabled Managed
   language in security restricted scenarios"), and Shanghai Key Laboratory
   of Scalable Computing and Systems.
CR Agesen O., 1993, ECOOP '93, P247, DOI DOI 10.1007/3-540-47910-4_14
   Allende E, 2014, SCI COMPUT PROGRAM, V96, P52, DOI 10.1016/j.scico.2013.06.006
   Alliance B, 2023, WebAssembly micro runtime
   Apple, 2018, Webkit: A fast, open source web browser engine
   Ball T, 2019, PROCEEDINGS OF THE 16TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON MANAGED PROGRAMMING LANGUAGES AND RUNTIMES (MPLR '19), P105, DOI 10.1145/3357390.3361032
   Bastien J., 2015, Webassembly-going public launch bug
   Bellard F., 2021, Quickjs documentation-jsvalue
   Bellard F., 2021, Quickjs javascript engine
   Berger ED, 2019, ACM T PROGR LANG SYS, V41, DOI 10.1145/3340571
   Bierman G, 2014, LECT NOTES COMPUT SC, V8586, P257
   Bierman G, 2010, LECT NOTES COMPUT SC, V6183, P76, DOI 10.1007/978-3-642-14107-2_5
   bytecodealliance, 2020, Wasi: The webassembly system interface
   Chandra S, 2016, ACM SIGPLAN NOTICES, V51, P410, DOI 10.1145/3022671.2984017
   Chaudhuri A, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133872
   Cheng L, 2020, INT SYM CODE GENER, P16, DOI 10.1145/3368826.3377907
   Choi W, 2015, LECT NOTES COMPUT SC, V9291, P181, DOI 10.1007/978-3-662-48288-9_11
   Clark L., 2019, STANDARDIZING WASI S
   Devine J, 2018, ACM SIGPLAN NOTICES, V53, P19, DOI [10.1145/3299710.3211335, 10.1145/3211332.3211335]
   Expruino, 2023, Espruino-JavaScript for Microcontrollers
   Foundation E., 2022, 2022 iot & edge developer survey report
   Gao Z, 2017, PROC INT CONF SOFTW, P758, DOI 10.1109/ICSE.2017.75
   George D., 2023, Micropython
   Haas A, 2017, ACM SIGPLAN NOTICES, V52, P185, DOI [10.1145/3062341.3062363, 10.1145/3140587.3062363]
   Hanenberg S, 2014, EMPIR SOFTW ENG, V19, P1335, DOI 10.1007/s10664-013-9289-1
   Jensen SH, 2009, LECT NOTES COMPUT SC, V5673, P238, DOI 10.1007/978-3-642-03237-0_17
   Kranz D.A., 1986, 20 YEARS ACM SIGPLAN, P175, DOI [10.1145/989393.989414, DOI 10.1145/989393.989414]
   manual page L, 2023, time(1)-Linux manual page
   McCallum T., 2021, Ai on a cloud native webassembly runtime (wasmedge)-part i
   MDN, 2019, Spidermonkey internals
   Menetrey J, 2021, PROC INT CONF DATA, P205, DOI 10.1109/ICDE51399.2021.00025
   Microsoft, 2023, Devicescript: Typescript for tiny iot devices
   Microsoft, 2021, Using the compiler api.microsoft/typescript wiki
   Microsoft, 2014, Typescript specification
   Mozilla, 2022, Spidermonkey-mozilla's javascript and webassembly engine
   Narayan S., 2019, arXiv
   nischayv, 2020, Github-as-benchmarks
   Rastogi A, 2015, ACM SIGPLAN NOTICES, V50, P167, DOI [10.1145/2775051.2676971, 10.1145/2676726.2676971]
   Ray B., 2019, toplas 2019, V1911
   Ray B, 2017, COMMUN ACM, V60, P91, DOI 10.1145/3126905
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Richards Gregor., 2015, Proc. European Conference on Object-Oriented Programming, P76, DOI DOI 10.4230/LIPICS.ECOOP.2015.76
   Saifullah CMK, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P70, DOI [10.1109/saner48275.2020.9054814, 10.1109/SANER48275.2020.9054814]
   Serrano M., 1995, Static Analysis. Second International Symposium, SAS'95. Proceedings, P366
   Serrano M, 2021, P ACM PROGRAM LANG, V5, DOI 10.1145/3473575
   Serrano M, 2019, PROCEEDINGS OF THE 28TH INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION (CC '19), P99, DOI 10.1145/3302516.3307344
   Serrano M, 2018, DLS'18: PROCEEDINGS OF THE 14TH ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON DYNAMIC LANGUAGES, P50, DOI 10.1145/3276945.3276950
   Shillaker S, 2020, PROCEEDINGS OF THE 2020 USENIX ANNUAL TECHNICAL CONFERENCE, P419
   Siek J, 2007, LECT NOTES COMPUT SC, V4609, P2
   Takikawa A, 2016, ACM SIGPLAN NOTICES, V51, P456, DOI 10.1145/2914770.2837630
   Vaarala S., 2023, Duktape
   Wade AW, 2017, ACM SIGPLAN NOTICES, V52, P1, DOI [10.1145/3078633.3081037, 10.1145/3140582.3081037]
   Wasm3, 2023, wasm3/wasm3: A fast WebAssembly interpreter, and the most universal WASM runtime
   Wen E, 2021, LCTES '21: PROCEEDINGS OF THE 22ND ACM SIGPLAN/SIGBED INTERNATIONAL CONFERENCE ON LANGUAGES, COMPILERS, AND TOOLS FOR EMBEDDED SYSTEMS, P80, DOI 10.1145/3461648.3463849
   Wen E, 2020, INT CONF PERVAS COMP, DOI 10.1109/percomworkshops48775.2020.9156135
   Wikipedia TFE, 2022, Double-precision floating-point format
   Wimmer C, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360610
   Wu ZF, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428242
   Zheng SY, 2021, Arxiv, DOI arXiv:2012.01032
   Zhong Shao, 1994, Proceedings of the 1994 ACM Conference on LISP and Functional Programming, P150, DOI 10.1145/182409.156783
NR 59
TC 0
Z9 0
U1 5
U2 6
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 6
DI 10.1007/s10515-023-00404-x
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Z9BV9
UT WOS:001114963100001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Li, YS
   Keung, J
   Yang, Z
   Ma, XX
   Zhang, JY
   Liu, S
AF Li, Yishu
   Keung, Jacky
   Yang, Zhen
   Ma, Xiaoxue
   Zhang, Jingyu
   Liu, Shuo
TI SimAC: simulating agile collaboration to generate acceptance criteria in
   user story elaboration
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Large language models; Prompts engineering; User story; Acceptance
   criteria; Agile requirements engineering
ID AGREEMENT
AB In agile requirements engineering, Generating Acceptance Criteria (GAC) to elaborate user stories plays a pivotal role in the sprint planning phase, which provides a reference for delivering functional solutions. GAC requires extensive collaboration and human involvement. However, the lack of labeled datasets tailored for User Story attached with Acceptance Criteria (US-AC) poses significant challenges for supervised learning techniques attempting to automate this process. Recent advancements in Large Language Models (LLMs) have showcased their remarkable text-generation capabilities, bypassing the need for supervised fine-tuning. Consequently, LLMs offer the potential to overcome the above challenge. Motivated by this, we propose SimAC, a framework leveraging LLMs to simulate agile collaboration, with three distinct role groups: requirement analyst, quality analyst, and others. Initiated by role-based prompts, LLMs act in these roles sequentially, following a create-update-update paradigm in GAC. Owing to the unavailability of ground truths, we invited practitioners to build a gold standard serving as a benchmark to evaluate the completeness and validity of auto-generated US-AC against human-crafted ones. Additionally, we invited eight experienced agile practitioners to evaluate the quality of US-AC using the INVEST framework. The results demonstrate consistent improvements across all tested LLMs, including the LLaMA and GPT-3.5 series. Notably, SimAC significantly enhances the ability of gpt-3.5-turbo in GAC, achieving improvements of 29.48% in completeness and 15.56% in validity, along with the highest INVEST satisfaction score of 3.21/4. Furthermore, this study also provides case studies to illustrate SimAC's effectiveness and limitations, shedding light on the potential of LLMs in automated agile requirements engineering.
C1 [Li, Yishu; Keung, Jacky; Ma, Xiaoxue; Zhang, Jingyu; Liu, Shuo] City Univ Hong Kong, Dept Comp Sci, Hong Kong, Peoples R China.
   [Yang, Zhen] Shandong Univ, Sch Comp Sci & Technol, Qingdao, Peoples R China.
C3 City University of Hong Kong; Shandong University
RP Yang, Z (corresponding author), Shandong Univ, Sch Comp Sci & Technol, Qingdao, Peoples R China.
EM yishuli5-c@my.cityu.edu.hk; Jacky.Keung@cityu.edu.hk;
   zhenyang@sdu.edu.cn; xiaoxuema3-c@my.cityu.edu.hk;
   jzhang2297-c@my.cityu.edu.hk; sliu273-c@my.cityu.edu.hk
OI Keung, Jacky/0000-0002-3803-9600; MA, Xiaoxue/0000-0002-5476-6074; LIU,
   Shuo/0000-0002-8877-3678; ZHANG, Jingyu/0000-0001-6043-4239; LI,
   Yishu/0000-0003-4017-4294
FU General Research Fund of the Research Grants Council of Hong Kong; City
   University of Hong Kong [6000796, 9229109, 9229098, 9220103, 9229029]
FX This work is supported in part by the General Research Fund of the
   Research Grants Council of Hong Kong and the research funds of the City
   University of Hong Kong (6000796, 9229109, 9229098, 9220103, 9229029).
CR Achananuparp P, 2008, LECT NOTES COMPUT SC, V5182, P305, DOI 10.1007/978-3-540-85836-2_29
   Ahmed M, 2023, AUTOMAT SOFTW ENG, V30, DOI 10.1007/s10515-022-00371-9
   Ali N, 2019, INFORM SOFTWARE TECH, V106, P126, DOI 10.1016/j.infsof.2018.09.009
   Almanaseer A.M., 2022, 2022 INT C EM TRENDS, P1
   Bjarnason E, 2015, LECT NOTES BUS INF P, V212, P27, DOI 10.1007/978-3-319-18612-2_3
   Bragilovski M, 2022, LECT NOTES COMPUT SC, V13216, P131, DOI 10.1007/978-3-030-98464-9_11
   Brown T. B., 2020, P 34 INT C NEURAL IN, P1
   Buglione L, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P49, DOI 10.1109/IWSM-Mensura.2013.18
   Cardoso Jefferson Rosa, 2014, Dental Press J. Orthod., V19, P27
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Cer D, 2018, Arxiv, DOI arXiv:1803.11175
   Chipman HA, 2010, ANN APPL STAT, V4, P266, DOI 10.1214/09-AOAS285
   Cho KYHY, 2014, Arxiv, DOI arXiv:1409.1259
   Coe R., 2002, British Educ. Res. Assoc. Ann. Conf, V12, P14
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cohen J., 1988, Statistical power analysis for the behavioral sciences
   Cohn Mike., 2004, USER STORIES APPL AG
   Conboy Kieran., 2004, P 2004 ACM WORKSHOP, P37
   Dalpiaz F., 2012, 2018 IEEE 26 INT REQ, P191
   Dalpiaz F, 2019, INFORM SOFTWARE TECH, V110, P3, DOI 10.1016/j.infsof.2018.12.007
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Diebold P, 2015, LECT NOTES BUS INF P, V212, P40, DOI 10.1007/978-3-319-18612-2_4
   Dimitrijevic S, 2015, INFORM SOFTWARE TECH, V57, P352, DOI 10.1016/j.infsof.2014.05.012
   Dong YH, 2024, Arxiv, DOI arXiv:2304.07590
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Fan AEL, 2023, Arxiv, DOI arXiv:2310.03533
   Ferrari A., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P191, DOI 10.1109/RE.2012.6345803
   Ferrari A, 2024, Arxiv, DOI arXiv:2404.06371
   Ferreira AMS, 2022, ENASE: PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P477, DOI 10.5220/0011082000003176
   Fischbach J, 2020, IEEE INT CONF SOFTW, P321, DOI 10.1109/ICST46399.2020.00040
   Fried D, 2023, Arxiv, DOI [arXiv:2204.05999, 10.48550/ARXIV.2204.05999]
   Geng X., 2023, Openllama
   Guo DY, 2022, Arxiv, DOI arXiv:2203.03850
   Gupta A, 2019, LECT NOTES COMPUT SC, V11787, P47, DOI 10.1007/978-3-030-34146-6_5
   Hakala K., 2019, P 5 WORKSH BIONLP OP, P56, DOI DOI 10.18653/V1/D19-5709
   Halme E, 2021, LECT NOTES BUS INF P, V419, P36, DOI 10.1007/978-3-030-78098-2_3
   Hey T, 2020, INT REQUIR ENG CONF, P169, DOI 10.1109/RE48521.2020.00028
   Hoang M., 2019, P 22 NORDIC C COMPUT, P187
   Hoda R, 2018, IEEE SOFTWARE, V35, P58, DOI 10.1109/MS.2018.290111318
   Honnibal Matthew, 2020, spaCy: Industrial-strength natural language processing in python, DOI DOI 10.5281/ZENODO
   Hotomski S, 2018, INT REQUIR ENG CONF, P29, DOI 10.1109/RE.2018.00-54
   Kasneci E, 2023, LEARN INDIVID DIFFER, V103, DOI 10.1016/j.lindif.2023.102274
   Kelly A., 2019, The Art of Agile Product Ownership: A Guide for Product Managers, Business Analysts, and Entrepreneurs, P93
   Khanh N.T., 2017, P 6 INT C SOFTW COMP, P15
   Kojima S. S., 2022, Advances in Neural Information Processing Systems, V35, P22199, DOI DOI 10.48550/ARXIV.2205.11916
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lewis M, 2019, Arxiv, DOI arXiv:1910.13461
   Li GH, 2023, Arxiv, DOI arXiv:2303.17760
   Li Y., 2024, 2024 IEEE 48 ANN COM
   Liu F, 2024, Arxiv, DOI arXiv:2404.00971
   Lombriser P, 2016, LECT NOTES COMPUT SC, V9619, P171, DOI 10.1007/978-3-319-30282-9_12
   Lucassen G, 2017, REQUIR ENG, V22, P339, DOI 10.1007/s00766-017-0270-1
   Lucassen G, 2016, REQUIR ENG, V21, P383, DOI 10.1007/s00766-016-0250-x
   Lucassen G, 2016, LECT NOTES COMPUT SC, V9619, P205, DOI 10.1007/978-3-319-30282-9_14
   Ma XX, 2023, IEEE T RELIAB, V72, P1663, DOI 10.1109/TR.2023.3236404
   Manifesto A., 2001, Haettu, V14, P2012
   Meredith P., 2019, ACIS 2019 P, P93
   Nema P, 2022, PROC INT CONF SOFTW, P112, DOI 10.1145/3510003.3510079
   Nijkamp E, 2023, Arxiv, DOI arXiv:2305.02309
   Nijkamp E, 2022, Arxiv, DOI arXiv:2203.13474
   Ozkaya I, 2023, IEEE SOFTWARE, V40, P4, DOI 10.1109/MS.2023.3248401
   Pandit P., 2015, Int. J. Comput. Appl, V120, P16
   Pantiuchina J, 2017, LECT NOTES BUS INF P, V283, P167, DOI 10.1007/978-3-319-57633-6_11
   Peng ZD, 2021, INT REQUIR ENG CONF, P245, DOI 10.1109/RE51729.2021.00029
   Raffel C, 2020, J MACH LEARN RES, V21
   Sedano T, 2019, PROC INT CONF SOFTW, P200, DOI 10.1109/ICSE.2019.00036
   Shen YL, 2023, Arxiv, DOI arXiv:2303.17580
   Spoletini P, 2024, LECT NOTES COMPUT SC, V14588, P344, DOI 10.1007/978-3-031-57327-9_22
   Subramanian S, 2018, ADV NEUR IN, V31
   Sullivan Gail M, 2012, J Grad Med Educ, V4, P279, DOI 10.4300/JGME-D-12-00156.1
   Sverrisdottir HS, 2014, PROCD SOC BEHV, V119, P257, DOI 10.1016/j.sbspro.2014.03.030
   Thakur JS, 2016, IEEE INT CONF AUTOM, P828, DOI 10.1145/2970276.2970289
   Touvron H, 2023, Arxiv, DOI [arXiv:2302.13971, DOI 10.48550/ARXIV.2302.13971]
   Wang T, 2022, PMLR, P22964
   Wang X., 2014, Current advances on genetic resistance to rice blast disease, P195
   Wang Y., 2021, arXiv
   Wautelet Yves, 2016, 2016 IEEE Tenth International Conference on Research Challenges in Information Science (RCIS), P1, DOI 10.1109/RCIS.2016.7549299
   Wei J., 2022, Advances in Neural Information Processing Systems, V35, P24824, DOI DOI 10.48550/ARXIV.2201.11903
   White J, 2023, Arxiv, DOI [arXiv:2302.11382, DOI 10.48550/ARXIV.2302.11382, 10.48550/arXiv.2302.11382]
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wu CF, 2023, Arxiv, DOI arXiv:2303.04671
   Xia CS, 2023, PROC INT CONF SOFTW, P1482, DOI 10.1109/ICSE48619.2023.00129
   Xiao Xusheng, 2012, P ACM SIGSOFT 20 INT, P11, DOI [DOI 10.1145/2393596.2393608, 10.1145/2393596.2393608]
   Xue PY, 2024, Arxiv, DOI arXiv:2404.14824
   Yang Z, 2024, Arxiv, DOI arXiv:2404.14646
   Zhang JZ, 2023, Arxiv, DOI arXiv:2304.12562
   Zhang YW, 2023, Arxiv, DOI arXiv:2308.14460
   Zhao L, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3444689
   Zhao WX, 2023, Arxiv, DOI arXiv:2303.18223
NR 89
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 55
DI 10.1007/s10515-024-00448-7
PG 56
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UY2H3
UT WOS:001251554000001
DA 2024-08-05
ER

PT J
AU Di Ruscio, D
   Inverardi, P
   Migliarini, P
   Nguyen, PT
AF Di Ruscio, Davide
   Inverardi, Paola
   Migliarini, Patrizio
   Nguyen, Phuong T.
TI Leveraging privacy profiles to empower users in the digital society
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Privacy; Clustering; Recommender systems; Machine learning
ID NEURAL-NETWORKS; SYSTEMS
AB Protecting privacy and ethics of citizens is among the core concerns raised by an increasingly digital society. Profiling users is common practice for software applications triggering the need for users, also enforced by laws, to manage privacy settings properly. Users need to properly manage these settings to protect personally identifiable information and express personal ethical preferences. This has shown to be very difficult for several concurrent reasons. However, profiling technologies can also empower users in their interaction with the digital world by reflecting personal ethical preferences and allowing for automatizing/assisting users in privacy settings. In this way, if properly reflecting users' preferences, privacy profiling can become a key enabler for a trustworthy digital society. We focus on characterizing/collecting users' privacy preferences and contribute a step in this direction through an empirical study on an existing dataset collected from the fitness domain. We aim to understand which set of questions is more appropriate to differentiate users according to their privacy preferences. The results reveal that a compact set of semantic-driven questions (about domain-independent privacy preferences) helps distinguish users better than a complex domain-dependent one. Based on the outcome, we implement a recommender system to provide users with suitable recommendations related to privacy choices. We then show that the proposed recommender system provides relevant settings to users, obtaining high accuracy.
C1 [Di Ruscio, Davide; Migliarini, Patrizio; Nguyen, Phuong T.] Univ LAquila, Laquila, Italy.
   [Inverardi, Paola] Gran Sasso Sci Inst, Laquila, Italy.
C3 University of L'Aquila; Gran Sasso Science Institute (GSSI)
RP Di Ruscio, D (corresponding author), Univ LAquila, Laquila, Italy.
EM davide.diruscio@univaq.it; paola.inverardi@gssi.it;
   patrizio.migliarini@univaq.it; phuong.nguyen@univaq.it
OI Di Ruscio, Davide/0000-0002-5077-6793
FU Centre of excellence EX-EMERGE of the University of L'Aquila, Italy
FX The research described in this paper has been carried out as part of the
   EXOSOUL project and also partially supported by the Centre of excellence
   EX-EMERGE (Centre of EXcellence on Connected, Geo-localized and
   Cyber-secure vehicles) of the University of L'Aquila, Italy.
CR Aggarwal C. C., 2016, Neighborhood-Based Collaborative Filtering, P29, DOI [DOI 10.1007/978-3-319-29659-3_2, 10.1007/978-3-319-29659-3_2]
   Alfieri C., 2023, HHAI2023 VOLUME368 F, DOI [10.3233/FAIA230092, DOI 10.3233/FAIA230092]
   Alfieri C., 2022, HHAI2022 VOLUME354 F, DOI [10.3233/FAIA220194, DOI 10.3233/FAIA220194]
   [Anonymous], 2015, Berkeley Technol Law J
   Autili M, 2019, IEEE ACCESS, V7, P62011, DOI 10.1109/ACCESS.2019.2916203
   Barth S, 2017, TELEMAT INFORM, V34, P1038, DOI 10.1016/j.tele.2017.04.013
   Bhatia J, 2016, INT REQUIR ENG CONF, P26, DOI 10.1109/RE.2016.20
   Bishop CM., 1995, Neural Networks for Pattern Recognition, DOI [10.1093/oso/9780198538493.001.0001, DOI 10.1093/OSO/9780198538493.001.0001]
   BURNS JA, 1993, CHEM REV, V93, P2583, DOI 10.1021/cr00024a001
   Colnago J, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376389
   Cranor LF, 2022, COMMUN ACM, V66, P35, DOI 10.1145/3581764
   Cranor LF, 2022, COMMUN ACM, V65, P30, DOI 10.1145/3538639
   Delbecq A., 1976, Social Work, V21, P338, DOI [10.1093/sw/21.4.338, DOI 10.1093/SW/21.4.338]
   Di Noia T, 2015, LECT NOTES COMPUT SC, V9203, P88, DOI 10.1007/978-3-319-21768-0_4
   Dupree JL, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P5228, DOI 10.1145/2858036.2858214
   Emami-Naeini P, 2020, P IEEE S SECUR PRIV, P447, DOI 10.1109/SP40000.2020.00043
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fernquist J, 2017, EUR INTELL SECUR INF, P61, DOI 10.1109/EISIC.2017.17
   Gurney K., 1997, An introduction to neural networks
   Habib H, 2022, PROCEEDINGS OF THE 2022 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI' 22), DOI 10.1145/3491102.3501985
   Hoofnagle Chris, 2014, Wake Forest Law Review, V49, P261
   Inverardi P, 2023, Arxiv, DOI [arXiv:2307.03652, 10.48550/arXiv.2307.03652, DOI 10.48550/ARXIV.2307.03652]
   Inverardi P, 2023, COMPUT SCI REV, V49, DOI 10.1016/j.cosrev.2023.100574
   Jensen C., 2004, P SIGCHI C HUM FACT, V6, P471, DOI DOI 10.1145/985692.985752
   Kaufman L., 1990, Finding Groups in Data: An Introduction to Cluster Analysis, DOI [10.1002/9780470316801, DOI 10.1002/9780470316801]
   Kohavi R., 1995, A Study of Cross-Validation and Bootstrap for Accuracy Estimation and Model Selection, P1137, DOI DOI 10.5555/1643031.1643047
   Kumaraguru P., 2005, Privacy indexes: a survey of westin's studies
   Lee H, 2016, 2016 IEEE 3RD WORLD FORUM ON INTERNET OF THINGS (WF-IOT), P407, DOI 10.1109/WF-IoT.2016.7845392
   Lin J, 2014, Modeling {users'} mobile app privacy preferences: restoring usability in a sea of permission settings, P199
   Liu B., 2016, P S US PRIV SEC
   Liu B, 2020, Can machine learning help people configure their mobile app privacy settings?, P1, DOI DOI 10.1184/R1/11591340.V1
   Liu Y., 2010, 2010 IEEE 10th International Conference on Data Mining ICDM, P911, DOI 10.1109/icdm.2010.35
   Liu ZX, 2019, AUTOMAT SOFTW ENG, V26, P241, DOI 10.1007/s10515-019-00254-6
   Lockee BB, 2021, NAT ELECTRON, V4, P5, DOI 10.1038/s41928-020-00534-0
   McDonald A.M., 2008, I/S: A J. Law Policy Inf. Soc., V4, P543, DOI DOI 10.1136/BMJ.C2665
   McDonald AM, 2009, LECT NOTES COMPUT SC, V5672, P37, DOI 10.1007/978-3-642-03168-7_3
   Milne GR, 2004, J INTERACT MARK, V18, P15, DOI 10.1002/dir.20009
   Minaee S, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3439726
   Nguyen PT, 2019, 2019 ACM/IEEE 22ND INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2019), P272, DOI 10.1109/MODELS.2019.00011
   Obar JA, 2020, INFORM COMMUN SOC, V23, P128, DOI 10.1080/1369118X.2018.1486870
   OECD, 2020, OECD Digital Economy Outlook 2020, DOI DOI 10.1787/BB167041-EN
   Park HS, 2009, EXPERT SYST APPL, V36, P3336, DOI 10.1016/j.eswa.2008.01.039
   Parliament and the Council of the European Union T. E., 2016, Official Journal of the European Union
   Qin M, 2008, LECT NOTES ARTIF INT, V5032, P222
   Quach A., 2020, SOCIAL WASHING COVID
   Redmiles EM, 2017, P 2017 IEEE CYB DEV, P22
   Sadeh N., 2021, US Patent, Patent No. [10,956,586, 10956586]
   Sanchez OR, 2020, USER MODEL USER-ADAP, V30, P513, DOI 10.1007/s11257-019-09246-3
   Sangaroonsilp P, 2023, AUTOMAT SOFTW ENG, V30, DOI 10.1007/s10515-023-00387-9
   Schafer J. B., 2007, The Adaptive Web. Methods and Strategies of Web Personalization, P291
   Schairer CE, 2019, J AM MED INFORM ASSN, V26, P610, DOI 10.1093/jamia/ocz010
   Scoccia GL, 2021, IEEE T SOFTWARE ENG, V47, P2032, DOI 10.1109/TSE.2019.2941936
   Service E.P.R., 2021, Technical report
   Simoudis E., 1996, KDD 96 P 2 INT C KNO, P226
   Urban Jennifer M., 2014, S USABLE PRIVACY SEC
   Westin A.F., 2003, Bibliography of Surveys of the U.S. Public
   Wilson S, 2013, UBICOMP'13: PROCEEDINGS OF THE 2013 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING, P549
   Zhang GQ, 1998, INT J FORECASTING, V14, P35, DOI 10.1016/S0169-2070(97)00044-7
   Zhu XQ, 2004, ARTIF INTELL REV, V22, P177, DOI 10.1007/s10462-004-0751-8
NR 59
TC 0
Z9 0
U1 4
U2 4
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 16
DI 10.1007/s10515-024-00415-2
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HZ9P6
UT WOS:001163457200001
OA hybrid
DA 2024-08-05
ER

PT J
AU Wu, D
   Zhang, HY
   Feng, Y
   Dong, ZJ
   Sun, Y
AF Wu, Di
   Zhang, Hongyu
   Feng, Yang
   Dong, Zhenjiang
   Sun, Ying
TI The future of API analytics
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE API analytics; API knowledge; Large language models
AB Reusing APIs can greatly expedite the software development process and reduce programming effort. To learn how to use APIs, developers often rely on API learning resources (such as API references and tutorials) that contain rich and valuable API knowledge. In recent years, numerous API analytic approaches have been presented to help developers mine API knowledge from API learning resources. While these approaches have shown promising results in various tasks, there are many opportunities in this area. In this paper, we discuss several possible future works on API analytics.
C1 [Wu, Di] Nanjing Univ Posts & Telecommun, Sch Internet Things, Nanjing, Peoples R China.
   [Zhang, Hongyu] Chongqing Univ, Sch Big Data & Software Engn, Chongqing, Peoples R China.
   [Feng, Yang] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Dong, Zhenjiang; Sun, Ying] Nanjing Univ Posts & Telecommun, Sch Comp Sci, Nanjing, Peoples R China.
C3 Nanjing University of Posts & Telecommunications; Chongqing University;
   Nanjing University; Nanjing University of Posts & Telecommunications
RP Dong, ZJ (corresponding author), Nanjing Univ Posts & Telecommun, Sch Comp Sci, Nanjing, Peoples R China.
EM wudidi@nju.edu.cn; hyzhang@cqu.edu.cn; fengyang@nju.edu.cn;
   dongzhenjiang@njupt.edu.cn; sunying@njupt.edu.cn
RI Wu, Di/GXG-3795-2022
OI Wu, Di/0000-0003-1096-7074
FU National Natural Science Foundation of China [62172209]; Primary
   Research & Development Plan of Jiangsu Province [BE2023025,
   BE2023025-1]; Natural Science Research Project of Jiangsu Higher
   Education Institutions [22KJB520026]
FX We would like to thank anonymous reviewers for their insightful and
   constructive comments. This research was partially funded by the
   National Natural Science Foundation of China under Grant No. 62172235,
   Primary Research & Development Plan of Jiangsu Province under Grant Nos.
   BE2023025 and BE2023025-1, National Natural Science Foundation of China
   under Grant No. 62172209, and the Natural Science Research Project of
   Jiangsu Higher Education Institutions under Grant No. 22KJB520026.
CR Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Antognini D, 2021, Arxiv, DOI arXiv:2105.04837
   Choetkiertikul M, 2019, IEEE T SOFTWARE ENG, V45, P637, DOI 10.1109/TSE.2018.2792473
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Gao H, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556948
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Henkel J, 2022, EUR CON SFTWR MTNCE, P526, DOI 10.1109/SANER53432.2022.00070
   Huang Q, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3597206
   Kou BN, 2023, PROC INT CONF SOFTW, P1853, DOI 10.1109/ICSE48619.2023.00158
   Lamothe M, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3470133
   Li J, 2019, WORLD WIDE WEB, V22, P1699, DOI 10.1007/s11280-018-0621-y
   Lill A., 2024, INT C SOFTW ENG, P1
   Liu MW, 2023, PROCEEDINGS OF THE 31ST ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2023, P1496, DOI 10.1145/3611643.3616305
   Lundberg SM, 2017, ADV NEUR IN, V30
   Ma SY, 2021, IEEE T SOFTWARE ENG, V47, P2296, DOI 10.1109/TSE.2019.2946830
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   Mikolov T., 2013, Advances in Neural Information Processing Systems, P3111
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Noci L., 2023, C NEUR INF PROC SYST, P1
   Rabin MRI, 2021, INFORM SOFTWARE TECH, V135, DOI 10.1016/j.infsof.2021.106552
   Ren XX, 2020, IEEE INT CONF AUTOM, P461, DOI 10.1145/3324884.3416551
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Sworna ZT, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3512768
   Nguyen T, 2023, IEEE INT CONF AUTOM, P484, DOI 10.1109/ASE56229.2023.00203
   Wei MS, 2022, PROC INT CONF SOFTW, P376, DOI 10.1145/3510003.3510159
   Wu D, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3565799
   Wu D, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-022-10235-1
   Wu D, 2020, WIRES DATA MIN KNOWL, V10, DOI 10.1002/widm.1369
   Xie WK, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1015, DOI 10.1145/3368089.3409731
   Yang YH, 2024, ACM T SOFTW ENG METH, V33, DOI 10.1145/3607189
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Zhang JX, 2023, IEEE T SOFTWARE ENG, V49, P2597, DOI 10.1109/TSE.2022.3227559
   Zhou Y, 2020, IEEE T SOFTWARE ENG, V46, P1004, DOI 10.1109/TSE.2018.2872971
   Zhu JF, 2022, PROC INT SYMP SOFTW, P446, DOI 10.1109/ISSRE55969.2022.00050
NR 36
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 50
DI 10.1007/s10515-024-00442-z
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TO9T5
UT WOS:001242327600001
DA 2024-08-05
ER

PT J
AU Lano, K
   Siala, H
AF Lano, Kevin
   Siala, Hanan
TI Using model-driven engineering to automate software language translation
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Program translation; Model-driven engineering; Re-engineering; Reverse
   engineering
ID CODE
AB The porting or translation of software applications from one programming language to another is a common requirement of organisations that utilise software, and the increasing number and diversity of programming languages makes this capability as relevant today as in previous decades. Several approaches have been used to address this challenge, including machine learning and the manual definition of direct language-to-language translation rules, however the accuracy of these approaches remains unsatisfactory. In this paper we describe a new approach to program translation using model-driven engineering techniques: reverse-engineering source programs into specifications in the UML and OCL formalisms, and then forward-engineering the specifications to the required target language. This approach can provide assurance of semantic preservation, and additionally has the advantage of extracting precise specifications of software from code. We provide an evaluation based on a comprehensive dataset of examples, including industrial cases, and compare our results to those of other approaches and tools. Our specific contributions are: (1) Reverse-engineering source programs to detailed semantic models of software behaviour, to enable semantically-correct translations and reduce re-testing costs; (2) Program abstraction processes defined by precise and explicit rules, which can be edited and configured by users; (3) A set of reusable OCL library components appropriate for representing program semantics, and which can also be used for OCL specification of new applications; (4) A systematic procedure for building program abstractors based on language grammars and semantics.
C1 [Lano, Kevin; Siala, Hanan] Kings Coll London, Dept Informat, London WC2R 2LS, England.
C3 University of London; King's College London
RP Lano, K (corresponding author), Kings Coll London, Dept Informat, London WC2R 2LS, England.
EM kevin.lano@kcl.ac.uk; hanan.siala@kcl.ac.uk
OI Siala, Hanan Abdulwahab/0009-0003-4693-8707; Lano, Kevin
   Charles/0000-0002-9706-1410
CR Abukhalaf S, 2023, Arxiv, DOI arXiv:2303.16244
   Agarwal M, 2021, arXiv
   Aggarwal K., 2015, PeerJ
   Ahmad WU, 2021, Arxiv, DOI arXiv:2108.11590
   [Anonymous], 2024, Eclipse AgileUML project
   [Anonymous], 2022, Eclipse OCL Version 6.4.0
   ANTLR, 2023, About us
   Balogh Z, 2009, SOFTW SYST MODEL, V8, P347, DOI 10.1007/s10270-008-0092-1
   Barnes J., 1997, High-Integrity Ada: The SPARK Approach
   BOWEN JP, 1993, INFORM SOFTWARE TECH, V35, P679, DOI 10.1016/0950-5849(93)90083-F
   Brambilla M., 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00751ED2V01Y201701SWE004]
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Büttner F, 2014, SCI COMPUT PROGRAM, V92, P162, DOI 10.1016/j.scico.2013.10.003
   Camara J., 2023, SoSyM, V22
   Canfora G., 2011, Comm. ACM, V54
   Izquierdo JLC, 2014, SOFTW SYST MODEL, V13, P713, DOI 10.1007/s10270-012-0270-z
   Chen Mark, 2021, arXiv
   Chen X, 2018, Tree-to-tree neural networks for program translation
   Claudia P., 2011, Proceedings of the 2011 Eighth International Conference on Information Technology: New Generations (ITNG), P737, DOI 10.1109/ITNG.2011.130
   ClearPath Enterprise Servers, 2015, COBOL ANSI-85 Programming Reference Manual
   Cook S, 2002, LECT NOTES COMPUT SC, V2263, P115
   Cook S., 1994, DESIGNING OBJECT SYS
   De Marco A, 2018, PROC IEEE INT CONF S, P583, DOI 10.1109/ICSME.2018.00055
   Deltombe G, 2012, Bridging KDM and ASTM for model-driven software modernization
   eclipse, 2023, The Epsilon Object Language
   eclipse, 2023, Papyrus toolset
   Eichberg M, 2010, LECT NOTES COMPUT SC, V6138, P104, DOI 10.1007/978-3-642-13595-8_10
   El Beggar O., 2013, LNSE
   Candel CJF, 2019, J SYST SOFTWARE, V151, P38, DOI 10.1016/j.jss.2019.01.068
   Fleurey F., 2007, MODELS
   Fuhr A, 2013, COMPUT SCI-RES DEV, V28, P65, DOI 10.1007/s00450-011-0183-z
   Guo D., 2021, 9 INT C LEARNING REP
   Le THM, 2020, Arxiv, DOI arXiv:2002.05442
   Heidenreich Florian., 2011, MDSM at CSMR, P8
   Hou XY, 2024, Arxiv, DOI arXiv:2308.10620
   Jana P, 2024, Arxiv, DOI arXiv:2306.06755
   Java2C, 2023, About us
   Java2ObjectiveC, 2023, About us
   Java2Python, 2023, About us
   Jin K, 2022, MODEVVA 2022
   Jouault F., 2006, KM3: a DSL for metamodel specification
   Kernighan B. W., 1988, The C Programming Language, V2nd
   Keschenau M., 2004, OOPSLA 04
   Khadka R, 2014, ICSE 2014
   Kitchenham B., 2007, GUIDELINES PERFORMIN, P1, DOI DOI 10.1145/1134285.1134500
   Korshunova E, 2006, WORK CONF REVERSE EN, P297
   Krasteva I, 2013, ICIW, P1
   Lachaux MA, 2020, Arxiv, DOI arXiv:2006.03511
   Lano K, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3471907
   Lano K., 1999, Automated Software Engineering, V6, P265, DOI 10.1023/A:1008708927260
   Lano K., 1994, Software Testing, Verification and Reliability, V4, P155, DOI 10.1002/stvr.4370040304
   Lano K., FSEN 2021, V2021
   Lano K., 2023, Code Generation by Example Using Symbolic Machine Learning
   Lano K, 2022, ICSE
   Lano K., 2016, Agile Model-driven Development with UML-RSDS
   Lano K., 2017, STAF 2017 P, P317
   Lano K, 2020, ICSEA
   Lano K., 2021, OCL 2021
   Lano K., 2023, Program Abstraction and Re-engineering: an Agile MDE Approach
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/cgo.2004.1281665
   Liu X., 1997, Compsac, V97
   Liu Y, 2024, Arxiv, DOI arXiv:2302.09587
   Lu S., 2021, NIPS
   Malyaya A., 2023, arXiv
   mathworks, 2023, Simulink toolset
   Microsoft Com, 2022, Office VBA Reference
   Motogna S., 2008, Informatica, VLIII, P15
   Mozilla Org, 2023, JavaScript
   Tran N, 2019, INT C PROGRAM COMPRE, P165, DOI 10.1109/ICPC.2019.00034
   Nguyen A.T., 2013, P 2013 9 JOINT M FDN, P651
   Ogheneovo E.E., 2014, Journal of Computer and Communications, V2, P1, DOI [10.4236/jcc.2014.214001, DOI 10.4236/JCC.2014.214001]
   OMG, 2014, Object Constraint Language-OCL v 2.4
   Ouyang SY, 2023, Arxiv, DOI arXiv:2308.02828
   Parkin A., 1982, COBOL for students
   Perez J., 2003, ENTCS, V72, P7
   Perez-Castillo R, 2010, ICMT
   Pérez-Castillo R, 2011, COMPUT STAND INTER, V33, P519, DOI 10.1016/j.csi.2011.02.007
   Reus T, 2006, LECT NOTES COMPUT SC, V4066, P213
   Reynolds J. C., 1993, LISP and Symbolic Computation, V6, P233, DOI 10.1007/BF01019459
   Richters M., 1998, Conceptual Modeling - ER'98. 17th International Conference on Conceptual Modeling. Proceedings, P449
   Roziere B., 2022, ICLR 2022
   Sabir U, 2019, IEEE ACCESS, V7, P158931, DOI 10.1109/ACCESS.2019.2950884
   Sen T, 2016, SOFTW SYST MODEL, V15, P497, DOI 10.1007/s10270-014-0415-3
   Siala H., 2024, DOCTORIAL S
   Siala H.A., 2007, TJSC2UML: a tool to reverse-engineer UML diagrams
   Sneed H, 2011, IEEE P 26 ICSM, P1
   Szafraniec M, 2022, Arxiv, DOI [arXiv:2207.03578, 10.48550/arXiv.2207.03578, DOI 10.48550/ARXIV.2207.03578]
   Tangible Software, 2023, About us
   van Zuylen H., 1993, The REDO Compendium
   Wang Y., 2021, arXiv
   Xtext, 2021, About us
   Zhao WX, 2023, Arxiv, DOI arXiv:2303.18223
   Zhu M., 2022, AAAI-22
NR 93
TC 1
Z9 1
U1 6
U2 6
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 20
DI 10.1007/s10515-024-00419-y
PG 59
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JC9K7
UT WOS:001171073600001
OA hybrid
DA 2024-08-05
ER

PT J
AU Su, CY
   McMillan, C
AF Su, Chia-Yi
   McMillan, Collin
TI Distilled GPT for source code summarization
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Source code summarization; Software documentation generation; Language
   model
AB A code summary is a brief natural language description of source code. Summaries are usually only a single sentence long, and yet form the backbone of developer documentation. A short descriptions such as "changes all visible polygons to the color blue" can give a programmer a high-level idea of what code does without the effort of reading the code itself. Recently, products based on Large Language Models such as ChatGPT have demonstrated a strong ability to write these descriptions automatically. However, to use these tools, programmers must send their code to untrusted third parties for processing (e.g., via an API call). This loss of custody is not acceptable to many organizations. In this paper, we present an alternative: we train an open source model using sample output generated by GPT-\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$-$$\end{document}3.5 in a process related to knowledge distillation. Our model is small enough (350 m parameters) to be run on a single 16gb GPU, yet we show in our evaluation that it is large enough to mimic GPT-\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$$-$$\end{document}3.5 on this task.
C1 [Su, Chia-Yi; McMillan, Collin] Univ Notre Dame, Dept Comp Sci, Holy Cross Dr, Notre Dame, IN 46556 USA.
C3 University of Notre Dame
RP Su, CY (corresponding author), Univ Notre Dame, Dept Comp Sci, Holy Cross Dr, Notre Dame, IN 46556 USA.
EM csu3@nd.edu; cmc@nd.edu
FU National Science Foundation
FX No Statement Available
CR Aghajani E, 2019, PROC INT CONF SOFTW, P1199, DOI 10.1109/ICSE.2019.00122
   Ahmad Wasi Uddin, 2020, P 58 ANN M ASS COMPU, P4998, DOI 10.18653/v1/2020.acl-main.449
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Allamanis Miltiadis, 2018, P INT C LEARNING REP
   Alon U., 2019, P INT C LEARN REPR I
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   [Anonymous], 2022, GitHub Copilot
   Banerjee S., 2005, P ACL WORKSHOP INTRI, P65, DOI DOI 10.3115/1626355.1626389
   Bansal A, 2021, INT C PROGRAM COMPRE, P253, DOI 10.1109/ICPC52881.2021.00032
   Bansal A, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P60, DOI 10.1109/SANER50967.2021.00015
   Bender EM, 2021, PROCEEDINGS OF THE 2021 ACM CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, FACCT 2021, P610, DOI 10.1145/3442188.3445922
   Brown T. B., 2020, P 34 INT C NEURAL IN, P1
   Chang TA, 2023, Arxiv, DOI arXiv:2303.11504
   Chen ZH, 2023, Arxiv, DOI arXiv:2304.10453
   Danilova A, 2021, PROC INT CONF SOFTW, P537, DOI 10.1109/ICSE43902.2021.00057
   Delgado R, 2019, PLOS ONE, V14, DOI 10.1371/journal.pone.0222916
   Dell N, 2012, P SIGCHI C HUM FACT, P1321, DOI DOI 10.1145/2207676.2208589
   Derner E, 2023, Arxiv, DOI [arXiv:2305.08005, 10.48550/arXiv.2305.08005]
   DONKER DK, 1993, INT J BIOMED COMPUT, V33, P55, DOI 10.1016/0020-7101(93)90059-F
   Forward A., 2002, Proceedings of the Symposium on Document Engineering, DocEng '02, DOI [10.1145/585058.585065, DOI 10.1145/585058.585065]
   Fowkes J, 2017, IEEE T SOFTWARE ENG, V43, P1095, DOI 10.1109/TSE.2017.2664836
   Ghorbani A, 2023, PROC INT CONF SOFTW, P1405, DOI 10.1109/ICSE48619.2023.00123
   Gou JP, 2021, INT J COMPUT VISION, V129, P1789, DOI 10.1007/s11263-021-01453-z
   Gudibande A, 2023, Arxiv, DOI arXiv:2305.15717
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Haldar Rajarshi, 2020, P 58 ANN M ASS COMP, P8563, DOI [10.18653/v1/2020, 10.18653/v1/2020.acl-main.758, DOI 10.18653/V1/2020.ACL-MAIN.758]
   Haque S, 2022, INT C PROGRAM COMPRE, P36, DOI 10.1145/nnnnnnn.nnnnnnn
   Haque S, 2020, IEEE WORK CONF MIN S, P300, DOI 10.1145/3379597.3387449
   Haque S, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P330, DOI 10.1109/SANER50967.2021.00038
   Hellendoorn VJ, 2022, COMMUN ACM, V65, P31, DOI 10.1145/3501261
   Hsieh CY, 2023, Arxiv, DOI [arXiv:2305.02301, 10.48550/arXiv.2305.02301]
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Israel G. D., 1992, Determining Sample Size, DOI DOI 10.4039/ENT85108-3
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   LeClair A, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P3931
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Li JZ, 2023, Arxiv, DOI arXiv:2305.12962
   Li RY, 2023, Arxiv, DOI arXiv:2305.06161
   Li Z, 2023, IEEE T RELIAB, V72, P258, DOI 10.1109/TR.2022.3154773
   Liang Y., 2018, AAAI'18/IAAI'18/EAAI'18
   [刘尚鹏 Liu Shangpeng], 2022, [高分子通报, Polymer Bulletin], P1
   Liu Yi, 2023, arXiv, DOI DOI 10.48550/ARXIV.2305.12865
   Loyola P, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 2, P287, DOI 10.18653/v1/P17-2045
   Lu Yangyang, 2019, Software Engineering and Methodology for Emerging Domains, P3, DOI DOI 10.1007/978-981-15-0310-8_1
   Ma W, 2024, Arxiv, DOI arXiv:2305.12138
   McBurney PW, 2016, J SOFTW-EVOL PROC, V28, P120, DOI 10.1002/smr.1768
   Nie PY, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3338906.3338965
   Novikova Jekaterina, 2017, P 2017 C EMP METH NA, P2241
   OpenAI, 2022, CHATGPT
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Pérez-Mayos L, 2021, Arxiv, DOI [arXiv:2109.03160, DOI 10.48550/ARXIV.2109.03160]
   Robillard MP, 2017, PROC IEEE INT CONF S, P479, DOI 10.1109/ICSME.2017.17
   Rodeghero P, 2017, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.2017.13
   Roy D, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1105, DOI 10.1145/3468264.3468588
   Sa Gao, 2019, 2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER). Proceedings, P414, DOI 10.1109/SANER.2019.8667994
   Schaeffer R, 2023, Arxiv, DOI [arXiv:2304.15004, DOI 10.48550/ARXIV.2304.15004]
   Shi L, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P107, DOI 10.1145/3540250.3549145
   Sievertsen HH, 2016, P NATL ACAD SCI USA, V113, P2621, DOI 10.1073/pnas.1516947113
   Sridhara G., 2010, P IEEEACM INT C AUTO, P43
   Su C.Y., 2023, 31 ACM JOINT EUROPEA
   Tang Y, 2023, Arxiv, DOI arXiv:2307.11769
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang L, 2022, IEEE T PATTERN ANAL, V44, P3048, DOI 10.1109/TPAMI.2021.3055564
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Xu CW, 2023, Arxiv, DOI arXiv:2305.08848
   Yu Y, 2023, Arxiv, DOI [arXiv:2306.15895, DOI 10.48550/ARXIV.2306.15895]
   Zagoruyko S., 2016, INT C LEARNING REPRE
   Zhai X., 2022, P IEEECVF C COMPUTER, P12104, DOI [10.1109/CVPR52688.2022.01179, DOI 10.1109/CVPR52688.2022.01179]
   Zhang R., 2023, Parameters, V7, p13B
   Zugner D., 2021, 9 INT C LEARN REPR I
NR 72
TC 1
Z9 1
U1 12
U2 12
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 22
DI 10.1007/s10515-024-00421-4
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JE2Q0
UT WOS:001171426000001
DA 2024-08-05
ER

PT J
AU Watkinson, M
   Brownlee, AEI
AF Watkinson, Myles
   Brownlee, Alexander E. I.
TI Comparing apples and oranges? Investigating the consistency of CPU and
   memory profiler results across multiple java versions
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Profiling; Runtime; Memory use; Genetic improvement; Java; Empirical
   study
ID GENETIC-IMPROVEMENT; SOFTWARE
AB Profiling is an important tool in the software developer's box, used to identify hot methods where most computational resources are used, to focus efforts at improving efficiency. Profilers are also important in the context of Genetic improvement (GI) of software. GI applies search-based optimisation to existing software with many examples of success in a variety of contexts. GI generates variants of the original program, testing each for functionality and properties such as run time or memory footprint, and profiling can be used to target the code variations to increase the search efficiency. We report on an experimental study comparing two profilers included with different versions of the Java Development Kit (JDK), HPROF (JDK 8) and Java Flight Recorder (JFR) (JDK 8, 9, and 17), within the GI toolbox Gin on six open-source applications, for both run time and memory use. We find that a core set of methods are labelled hot in most runs, with a long tail appearing rarely. We suggest five repeats enough to overcome this noise. Perhaps unsurprisingly, changing the profiler and JDK dramatically change the hot methods identified, so profiling must be rerun for new JDKs. We also show that using profiling for test case subset selection is unwise, often missing relevant members of the test suite. Similar general patterns are seen for memory profiling as for run time but the identified hot methods are often quite different.
C1 [Watkinson, Myles] Univ Adelaide, Sch Comp Sci, Adelaide, SA, Australia.
   [Brownlee, Alexander E. I.] Univ Stirling, Comp Sci & Math, Stirling, Scotland.
C3 University of Adelaide; University of Stirling
RP Brownlee, AEI (corresponding author), Univ Stirling, Comp Sci & Math, Stirling, Scotland.
EM myleswatkinson1@gmail.com; alexander.brownlee@stir.ac.uk
CR Ahmad H, 2022, LECT NOTES COMPUT SC, V13399, P3, DOI 10.1007/978-3-031-14721-0_1
   Apache, 2020, Introduction to Profiling Java Applications in NetBeans IDE
   Blot A., 2022, MAGPIE: Machine Automated General Performance Improvement via Evolution of Software
   Bokhari MA, 2018, PROCEEDINGS OF THE 15TH EAI INTERNATIONAL CONFERENCE ON MOBILE AND UBIQUITOUS SYSTEMS: COMPUTING, NETWORKING AND SERVICES (MOBIQUITOUS 2018), P207, DOI 10.1145/3286978.3287014
   Brownlee A.E.I., Data and Processing Scripts for the Paper "Comparing Apples and Oranges? Investigating the Consistency of CPU and Memory Profiler Results Across Multiple Java Versions
   Brownlee AEI, 2020, IEEE C EVOL COMPUTAT, DOI 10.1109/cec48606.2020.9185708
   Brownlee AEI, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'19), P985, DOI 10.1145/3321707.3321841
   Callan J, 2022, LECT NOTES COMPUT SC, V13711, P111, DOI 10.1007/978-3-031-21251-2_8
   Eclipse Foundation, 2019, Eclipse Downloads | The Eclipse Foundation
   EJ-Technologies, 2020, Java Profiler-JProfiler
   Fraser G, 2011, P 19 ACM SIGSOFT S 1, P416, DOI 10.1145/2025113.2025179
   Froyd N., 2004, A Sample-Driven Call Stack Profiler
   GitHub, 2020, Java Flight Recorder Events
   Guizzo G, 2021, PROC INT CONF SOFTW, P1323, DOI 10.1109/ICSE43902.2021.00120
   Haraldsson SO, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P1521, DOI 10.1145/3067695.3082526
   Harrand N, 2019, GENET PROGRAM EVOL M, V20, P531, DOI 10.1007/s10710-019-09355-3
   Kuepper J., 2022, CryptOpt: Verified Compilation with Random Program Search for Cryptographic Primitives
   Langdon WB, 2023, 2023 IEEE/ACM INTERNATIONAL WORKSHOP ON GENETIC IMPROVEMENT, GI, P9, DOI 10.1109/GI59320.2023.00011
   Langdon WB, 2017, GENET PROGRAM EVOL M, V18, P5, DOI 10.1007/s10710-016-9273-9
   Langdon WB, 2015, IEEE T EVOLUT COMPUT, V19, P118, DOI 10.1109/TEVC.2013.2281544
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Mytkowicz T, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P187, DOI 10.1145/1806596.1806618
   Oracle, 2018, JDK Mission Control
   Oracle, 2011, HPROF: A Heap/CPU Profiling Tool
   Oracle, 2023, Using JConsole-Java SE Monitoring and Management Guide
   Oracle, 2014, JFR Runtime Guide
   Oracle Corporation, 2022, Oracle JDK Migration Guide
   Patel R., 2013, International Journal of Embedded Systems and Applications, V1, DOI [10.5121/ijesa.2011.1203, DOI 10.5121/IJESA.2011.1203]
   Petke J., 2022, Using genetic improvement to optimise optimisation algorithm implementations
   Petke J, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10344-5
   Petke J, 2019, LECT NOTES COMPUT SC, V11664, P183, DOI 10.1007/978-3-030-27455-9_14
   Petke J, 2018, IEEE T SOFTWARE ENG, V44, P574, DOI 10.1109/TSE.2017.2702606
   Petke J, 2018, IEEE T EVOLUT COMPUT, V22, P415, DOI 10.1109/TEVC.2017.2693219
   Raikar K., 2023, Towareds Data Science
   Sarica A, 2022, LECT NOTES ARTIF INT, V13406, P129, DOI 10.1007/978-3-031-15037-1_11
   Schulte E, 2014, ACM SIGPLAN NOTICES, V49, P639, DOI 10.1145/2541940.2541980
   Sedlacek J., 2022, VisualVM: Home
   VARLEY DA, 1993, SOFTWARE PRACT EXPER, V23, P461, DOI 10.1002/spe.4380230407
   Watkinson M., 2023, 12 INT WORKSHOP GENE
   Webber W, 2010, ACM T INFORM SYST, V28, DOI 10.1145/1852102.1852106
   White DR, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P1549, DOI 10.1145/3067695.3082515
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
NR 42
TC 0
Z9 0
U1 3
U2 3
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 28
DI 10.1007/s10515-024-00423-2
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LU2C3
UT WOS:001189238600001
OA hybrid, Green Submitted
DA 2024-08-05
ER

PT J
AU Akbar, MA
   Khan, AA
   Hyrynsalmi, S
   Khan, JA
AF Akbar, Muhammad Azeem
   Khan, Arif Ali
   Hyrynsalmi, Sami
   Khan, Javed Ali
TI 6G secure quantum communication: a success probability prediction model
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE 6G Technology; Quantum computing; Secure communication; Prediction model
ID GLOBAL SOFTWARE-DEVELOPMENT; PROCESS IMPROVEMENT; FUTURE; NETWORKS;
   PRIVACY; REQUIREMENTS; ALGORITHM; VISION; DESIGN; STATE
AB The emergence of 6G networks initiates significant transformations in the communication technology landscape. Yet, the melding of quantum computing (QC) with 6G networks although promising an array of benefits, particularly in secure communication. Adapting QC into 6G requires a rigorous focus on numerous critical variables. This study aims to identify key variables in secure quantum communication (SQC) in 6G and develop a model for predicting the success probability of 6G-SQC projects. We identified key 6G-SQC variables from existing literature to achieve these objectives and collected training data by conducting a questionnaire survey. We then analyzed these variables using an optimization model, i.e., Genetic Algorithm (GA), with two different prediction methods the Naive Bayes Classifier (NBC) and Logistic Regression (LR). The results of success probability prediction models indicate that as the 6G-SQC matures, project success probability significantly increases, and costs are notably reduced. Furthermore, the best fitness rankings for each 6G-SQC project variable determined using NBC and LR indicated a strong positive correlation (rs = 0.895). The t-test results (t = 0.752, p = 0.502 > 0.05) show no significant differences between the rankings calculated using both prediction models (NBC and LR). The results reveal that the developed success probability prediction model, based on 15 identified 6G-SQC project variables, highlights the areas where practitioners need to focus more to facilitate the cost-effective and successful implementation of 6G-SQC projects.
C1 [Akbar, Muhammad Azeem; Hyrynsalmi, Sami] LUT Univ, Software Engn Dept, Lahti 15100, Finland.
   [Khan, Arif Ali] Univ Oulu, Empir Software Engn Res Unit M3S, Oulu 90014, Finland.
   [Khan, Javed Ali] Univ Hertfordshire, Sch Phys Engn & Comp Sci, Dept Comp Sci, Hatfield, England.
C3 University of Oulu; University of Hertfordshire
RP Akbar, MA (corresponding author), LUT Univ, Software Engn Dept, Lahti 15100, Finland.
EM azeem.akbar@lut.fi; arif.khan@oulu.fi; sami.hyrynsalmi@lut.fi;
   j.a.khan@herts.ac.uk
RI Hyrynsalmi, Sami/U-6315-2017; Khan, Javed Ali/ISS-4923-2023
OI Hyrynsalmi, Sami/0000-0002-5073-3750; Khan, Javed
   Ali/0000-0003-3306-1195
FU LUT University (previously Lappeenranta University of Technology (LUT))
FX No Statement Available
CR Abe M, 2021, QUANTUM SCI TECHNOL, V6, DOI 10.1088/2058-9565/abf719
   Abe S., 2006, 28th International Conference on Software Engineering Proceedings, P600, DOI 10.1145/1134285.1134371
   Acín A, 2018, NEW J PHYS, V20, DOI 10.1088/1367-2630/aad1ea
   Ahammed TB, 2023, ICT EXPRESS, V9, P197, DOI 10.1016/j.icte.2022.05.005
   Aiello CD, 2021, QUANTUM SCI TECHNOL, V6, DOI 10.1088/2058-9565/abfa64
   Akbar M. A., 2022, Inf. Technol. Manag., P1
   Akbar MA, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106894
   Akbar MA, 2023, INFORM TECHNOL MANAG, V24, P115, DOI 10.1007/s10799-021-00355-3
   Akbar MA, 2020, IEEE ACCESS, V8, P203070, DOI 10.1109/ACCESS.2020.3035829
   Akbar MA, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2292
   Akbar MA, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2275
   Akhtar MW, 2020, HUM-CENT COMPUT INFO, V10, DOI 10.1186/s13673-020-00258-2
   Akyildiz IF, 2020, IEEE ACCESS, V8, P133995, DOI 10.1109/ACCESS.2020.3010896
   Ali M. Z., 2023, IET Quant. Commun.
   Alraih S, 2022, SENSORS-BASEL, V22, DOI 10.3390/s22030762
   Awschalom D, 2021, PRX QUANTUM, V2, DOI 10.1103/PRXQuantum.2.017002
   Azari MM, 2022, IEEE COMMUN SURV TUT, V24, P2633, DOI 10.1109/COMST.2022.3199901
   Ball H, 2021, QUANTUM SCI TECHNOL, V6, DOI 10.1088/2058-9565/abdca6
   Bassoli R., 2023, Photonic Quantum Technol.: Sci. Appl, V2, P715, DOI [10.1002/9783527837427.ch26, DOI 10.1002/9783527837427.CH26]
   Berrar D., 2018, Ency. Bioinform. Comput. Biol.: ABC Bioinform, P403, DOI DOI 10.1016/B978-0-12-809633-8.20473-1
   Bhat JR, 2023, J KING SAUD UNIV-COM, V35, P87, DOI 10.1016/j.jksuci.2022.08.033
   Briegel HJ, 2009, NAT PHYS, V5, P19, DOI [10.1038/NPHYS1157, 10.1038/nphys1157]
   Brin D., 2022, Convergence: Artificial Intelligence and Quantum Computing: Social, Economic, and Policy Impacts: John Wiley Sons
   Cerpa N, 2016, J SYST SOFTWARE, V112, P48, DOI 10.1016/j.jss.2015.10.011
   Chaoub Abdelaali, 2023, IEEE Communications Standards Magazine, P14, DOI 10.1109/MCOMSTD.0002.2200049
   Cheng MY, 2010, AUTOMAT CONSTR, V19, P302, DOI 10.1016/j.autcon.2009.12.003
   Chong FT, 2017, NATURE, V549, P180, DOI 10.1038/nature23459
   Cory DG, 2000, FORTSCHR PHYS, V48, P875, DOI 10.1002/1521-3978(200009)48:9/11<875::AID-PROP875>3.0.CO;2-V
   de Winter JCF, 2016, PSYCHOL METHODS, V21, P273, DOI 10.1037/met0000079
   Duong T. Q., 2022, IEEE Open J. Commun. Soc.
   Duong TQ, 2022, IEEE OPEN J VEH TECH, V3, P375, DOI 10.1109/OJVT.2022.3202876
   Hakeem S. A. A., 2022, J. King Saud Univ.-Comput. Inf. Sci.
   Hakeem SAA, 2022, SENSORS-BASEL, V22, DOI 10.3390/s22051969
   Head-Marsden K, 2021, CHEM REV, V121, P3061, DOI 10.1021/acs.chemrev.0c00620
   HOLLAND JH, 1992, SCI AM, V267, P66, DOI 10.1038/scientificamerican0792-66
   Hsieh HF, 2005, QUAL HEALTH RES, V15, P1277, DOI 10.1177/1049732305276687
   Hu P, 2020, KNOWL-BASED SYST, V195, DOI 10.1016/j.knosys.2020.105746
   Huangqing Chen, 2020, 2020 International Conference on Urban Engineering and Management Science (ICUEMS). Proceedings, P592, DOI 10.1109/ICUEMS50872.2020.00130
   Khan A. A., 2023, IEEE Trans Comput Soc Syst
   Khan AA, 2021, APPL SOFT COMPUT, V102, DOI 10.1016/j.asoc.2021.107090
   Khan AA, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2242
   Khan AA, 2017, INFORM SOFTWARE TECH, V87, P180, DOI 10.1016/j.infsof.2017.03.006
   Khan LU, 2020, IEEE ACCESS, V8, P147029, DOI 10.1109/ACCESS.2020.3015289
   Khorsandi Bahare M., 2022, 2022 IEEE Globecom Workshops (GC Wkshps), P1, DOI 10.1109/GCWkshps56602.2022.10008585
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering, VVolume 2, DOI [10.1145/1134285.1134500, DOI 10.1145/1134285.1134500]
   Ko CH, 2007, J CONSTR ENG M, V133, P316, DOI 10.1061/(ASCE)0733-9364(2007)133:4(316)
   Komaki GM, 2015, J COMPUT SCI-NETH, V8, P109, DOI 10.1016/j.jocs.2015.03.011
   Kota S, 2021, IEEE INT CONF COMM, DOI 10.1109/ICCWorkshops50388.2021.9473743
   Kotsiantis SB, 2006, ARTIF INTELL REV, V26, P159, DOI [10.1007/s10462-007-9052-3, 10.1007/S10462-007-9052-3]
   Kumar A, 2023, EVOL SYST-GER, V14, P141, DOI 10.1007/s12530-022-09432-6
   Kumar RD, 2022, SUSTAIN ENERGY TECHN, V54, DOI 10.1016/j.seta.2022.102666
   Länger T, 2009, NEW J PHYS, V11, DOI 10.1088/1367-2630/11/5/055051
   Li J., 2022, IEEE Trans. Green Commun. Netw.
   Li L, 2022, INFORM SYST FRONT, DOI 10.1007/s10796-022-10308-y
   Li Y, 2018, FRONT IMMUNOL, V9, DOI 10.3389/fimmu.2018.02087
   Li Y, 2016, PROCEEDINGS OF THE NINTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM'16), P247, DOI 10.1145/2835776.2835791
   Lin X., 2021, arXiv
   Linke NM, 2017, P NATL ACAD SCI USA, V114, P3305, DOI 10.1073/pnas.1618020114
   Liu JH, 2021, IEEE INTERNET THINGS, V8, P16290, DOI 10.1109/JIOT.2021.3102385
   Liu RQ, 2022, IET QUANTUM COMMUN, V3, P151, DOI 10.1049/qtc2.12044
   Lu HY, 2019, SCI REP-UK, V9, DOI 10.1038/s41598-018-37045-0
   Lu Y, 2020, J IND INF INTEGR, V19, DOI 10.1016/j.jii.2020.100158
   Mahmoodabadi MJ, 2013, APPL SOFT COMPUT, V13, P2577, DOI 10.1016/j.asoc.2012.11.028
   Mahmoud HHH, 2021, T EMERG TELECOMMUN T, V32, DOI 10.1002/ett.4233
   Maraqa O, 2020, IEEE COMMUN SURV TUT, V22, P2192, DOI 10.1109/COMST.2020.3013514
   Matinmikko-Blue M, 2020, Arxiv, DOI arXiv:2004.14695
   Mirjalili S, 2019, STUD COMPUT INTELL, V780, P43, DOI 10.1007/978-3-319-93025-1_4
   Mirjalili S, 2014, ADV ENG SOFTW, V69, P46, DOI 10.1016/j.advengsoft.2013.12.007
   Mitchell M., 1998, INTRO GENETIC ALGORI, DOI DOI 10.1016/S0898-1221(96)90227-8
   Monserrat JF, 2020, IEEE WIREL COMMUNN, DOI 10.1109/wcncw48565.2020.9124725
   Moser K., 2021, Commun. Syst., VXIV, P48
   Mourtzis D, 2021, ELECTRONICS-SWITZ, V10, DOI 10.3390/electronics10243175
   Mumtaz S, 2022, IEEE WIREL COMMUN, V29, P14, DOI 10.1109/MWC.2022.9749174
   Myers L., 2006, Encyclopedia of statistical sciences, DOI [DOI 10.1002/0471667196.ESS5050.PUB2, 10.1002/0471667196.ess5050.pub2]
   Nawaz SJ, 2019, IEEE ACCESS, V7, P46317, DOI 10.1109/ACCESS.2019.2909490
   Nayak Sabuzima, 2020, arXiv
   Niazi M, 2015, ARAB J SCI ENG, V40, P845, DOI 10.1007/s13369-015-1586-0
   Niazi M, 2012, J SOFTW-EVOL PROC, V24, P877, DOI 10.1002/smr.543
   Okey OD, 2022, SUSTAINABILITY-BASEL, V14, DOI 10.3390/su142315901
   Partala J, 2021, 6G Mobile Wireless Networks, P431
   Porambage P, 2021, EUR CONF NETW COMMUN, P622, DOI [10.1109/EuCNC/6GSummit51104.2021.9482609, 10.1109/EUCNC/6GSUMMIT51104.2021.9482609]
   Porambage P, 2021, IEEE OPEN J COMM SOC, V2, P1094, DOI 10.1109/OJCOMS.2021.3078081
   Prateek K, 2023, TELECOMMUN SYST, V82, P315, DOI 10.1007/s11235-022-00979-y
   Ralegankar VK, 2022, IEEE ACCESS, V10, P1475, DOI 10.1109/ACCESS.2021.3138753
   Ray PP, 2021, J SYST ARCHITECT, V118, DOI 10.1016/j.sysarc.2021.102180
   Reyes F, 2011, J SYST SOFTWARE, V84, P775, DOI 10.1016/j.jss.2010.12.036
   Saad W, 2020, IEEE NETWORK, V34, P134, DOI 10.1109/MNET.001.1900287
   Saeed N, 2021, IEEE OPEN J COMM SOC, V2, P1505, DOI 10.1109/OJCOMS.2021.3093110
   Sandeepa C, 2022, J IND INF INTEGR, V30, DOI 10.1016/j.jii.2022.100405
   Shameem M, 2023, APPL SOFT COMPUT, V135, DOI 10.1016/j.asoc.2023.109998
   Shameem M, 2020, IET SOFTW, V14, P389, DOI 10.1049/iet-sen.2019.0196
   Shi R., 2012, 2012 IEEE 11 INT C T, pxxxix
   Siriwardhana Y, 2021, EUR CONF NETW COMMUN, P616, DOI [10.1109/EUCNC/6GSUMMIT51104.2021.9482503, 10.1109/EuCNC/6GSummit51104.2021.9482503]
   Soldani D., 2021, J. Telecommun. Digit. Econ., V9, P58
   Tanizawa K., 2023, Next-Generation Optical Communication: Components, Sub-Systems, and Systems, VXII, P289
   Tariq F, 2020, IEEE WIREL COMMUN, V27, P118, DOI 10.1109/MWC.001.1900488
   Ulitzsch V, 2022, PROCEEDINGS OF THE 15TH ACM CONFERENCE ON SECURITY AND PRIVACY IN WIRELESS AND MOBILE NETWORKS (WISEC '22), P157, DOI 10.1145/3507657.3528540
   Urgelles H, 2022, IEEE ICC, P643, DOI 10.1109/ICC45855.2022.9838523
   Nguyen VL, 2021, IEEE COMMUN SURV TUT, V23, P2384, DOI 10.1109/COMST.2021.3108618
   Verner JM, 2007, INFORM SOFTWARE TECH, V49, P181, DOI 10.1016/j.infsof.2006.05.001
   Vista F., 2021, IEEE Globecom Workshops (GC Wkshps), V2021, P1
   Wang C., 2021, Quantum-enabled 6G wireless networks: Opportunities and challenges
   Wang CG, 2022, IEEE WIREL COMMUN, V29, P58, DOI 10.1109/MWC.006.00340
   Wang MH, 2020, DIGIT COMMUN NETW, V6, P281, DOI 10.1016/j.dcan.2020.07.003
   Wang S, 2020, 2020 2ND 6G WIRELESS SUMMIT (6G SUMMIT), DOI 10.1109/6gsummit49458.2020.9083888
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wohlin C., 2014, P 18 INT C EV ASS SO, P1, DOI [DOI 10.1145/2601248.2601268, 10.1145/2601248.2601268]
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
   Xu M., 2022, IEEE Wireless Commun.
   Yrjola S, 2020, Arxiv, DOI arXiv:2005.06400
   Zaman F, 2023, IEEE WIREL COMMUN, V30, P22, DOI 10.1109/MWC.003.2200382
   Zhang HG, 2019, CHINA COMMUN, V16, P1, DOI 10.23919/JCC.2019.10.001
   Zhang ZQ, 2019, IEEE VEH TECHNOL MAG, V14, P28, DOI 10.1109/MVT.2019.2921208
   Zhao N, 2023, ADV APPL ENERGY, V9, DOI 10.1016/j.adapen.2023.100125
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.62, 10.1109/APSEC.2016.031]
   Zoller P, 2005, EUR PHYS J D, V36, P203, DOI 10.1140/epjd/e2005-00251-1
NR 116
TC 0
Z9 0
U1 5
U2 5
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 31
DI 10.1007/s10515-024-00427-y
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MR1A3
UT WOS:001195254900001
OA hybrid
DA 2024-08-05
ER

PT J
AU Galbin-Nasui, A
   Vescan, A
AF Galbin-Nasui, Andreea
   Vescan, Andreea
TI Bug reports priority classification models. Replication study
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Bug priority prediction; Bug report; CNN; SVM; BN
ID SOFTWARE; PREDICTION
AB Bug tracking systems receive a large number of bugs on a daily basis. The process of maintaining the integrity of the software and producing high-quality software is challenging. The bug-sorting process is usually a manual task that can lead to human errors and be time-consuming. The purpose of this research is twofold: first, to conduct a literature review on the bug report priority classification approaches, and second, to replicate existing approaches with various classifiers to extract new insights about the priority classification approaches. We used a Systematic Literature Review methodology to identify the most relevant existing approaches related to the bug report priority classification problem. Furthermore, we conducted a replication study on three classifiers: Naive Bayes (NB), Support Vector Machines (SVM), and Convolutional Neural Network (CNN). Two sets of experiments are performed: first, our own NLTK implementation based on NB and CNN, and second, based on Weka implementation for NB, SVM, and CNN. The dataset used consists of several Eclipse projects and one project related to database systems. The obtained results are better for the bug priority P3 for the CNN classifier, and overall the quality relation between the three classifiers is preserved as in the original studies. The replication study confirmed the findings of the original studies, emphasizing the need to further investigate the relationship between the characteristics of the projects used as training and those used as testing.
C1 [Galbin-Nasui, Andreea; Vescan, Andreea] Babes Bolyai Univ, Comp Sci Dept, M Kogalniceanu 1, Cluj Napoca 400084, Romania.
C3 Babes Bolyai University from Cluj
RP Vescan, A (corresponding author), Babes Bolyai Univ, Comp Sci Dept, M Kogalniceanu 1, Cluj Napoca 400084, Romania.
EM andreeagalbin13@gmail.com; andreea.vescan@ubbcluj.ro
FU Ministerul Cercetabreve;rii, Inovabreve;rii scedil;i Digitalizabreve;rii
   [PN-III-P1-1.1-TE2021-0892]; Ministry of Research, Innovation, and
   Digitization, CNCS/CCCDI - UEFISCDI
FX This work was funded by the Ministry of Research, Innovation, and
   Digitization, CNCS/CCCDI - UEFISCDI, Project number
   PN-III-P1-1.1-TE2021-0892 within PNCDI III. We also would like to thank
   professor Alexander Serebrenik, our research collaborator, from the
   Eindhoven University of Technology for providing us with improvement
   suggestions for the study and useful insights on how to improve the
   paper.
CR Alenezi M, 2013, 2013 12TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2013), VOL 2, P112, DOI 10.1109/ICMLA.2013.114
   Bugzilla, Bugzilla: Bug tracking systems
   Carver J. C., 2010, INT WORKSH REPL EMP, P2
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Eclipse-bugs E., Eclipse
   Fagerholm F., 2019, 13 ACM IEEE INT S EM, P1
   Frank E., Weka-waikato environment for knowledge analysis
   Galbin-Nasui A., 2020, Predictia automata a prioritatii unui bug
   Galbin-Nasui A., 2022, Bug reports priority classification model
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Juristo N, 2009, INT SYMP EMP SOFTWAR, P357
   Kitchenham B., 2007, GUIDELINES PERFORMIN, V1, P57
   Myers G., 2005, The Art of Software Testing
   nltk, Natural Language Toolkit
   Patton R., 2000, Software Testing
   Python, Python: Python-programming language
   Ramay WY, 2019, IEEE ACCESS, V7, P46846, DOI 10.1109/ACCESS.2019.2909746
   SentiWordNet, Sentiwordnet-lexical resource for opinion mining
   Sharma G, 2015, PROCEDIA COMPUT SCI, V70, P632, DOI 10.1016/j.procs.2015.10.059
   Shepperd M, 2018, INFORM SOFTWARE TECH, V99, P120, DOI 10.1016/j.infsof.2018.01.006
   Tian Y, 2013, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2013.31
   Trevor Hastie J.F., 2016, The Elements of Statistical Learning, V2nd
   Uddin J, 2017, ARTIF INTELL REV, V47, P145, DOI 10.1007/s10462-016-9478-6
   Umer Q, 2020, IEEE T RELIAB, V69, P1341, DOI 10.1109/TR.2019.2959624
   Umer Q, 2018, IEEE ACCESS, V6, P35743, DOI 10.1109/ACCESS.2018.2850910
   Weber B., 2020, Data Science in Production: Building Scalable Model Pipelines with Python
   Yu L, 2010, LECT NOTES ARTIF INT, V6441, P356, DOI 10.1007/978-3-642-17313-4_35
   Yuan Tian, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P215, DOI 10.1109/WCRE.2012.31
NR 29
TC 0
Z9 0
U1 4
U2 4
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 35
DI 10.1007/s10515-024-00432-1
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NI1F6
UT WOS:001199723500001
DA 2024-08-05
ER

PT J
AU Wang, Y
   Chen, LJ
   Gao, CY
   Fang, YT
   Li, Y
AF Wang, Yong
   Chen, Linjun
   Gao, Cuiyun
   Fang, Yingtao
   Li, Yong
TI Prompt enhance API recommendation: visualize the user's real intention
   behind this query
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE API recommendation; Real intentions; Prompt template; Stack overflow
AB Developers frequently rely on APIs in their daily programming tasks, as APIs have become an indispensable tool for program development. However, with a vast number of open-source libraries available, selecting the appropriate API quickly can be a common challenge for programmers. Previous research on API recommendation primarily focused on designing better approaches to interpret user input. However, in practical applications, it is often difficult for users, especially novice programmers, to express their real intentions due to the limitations of language expression and programming capabilities. To address this issue, this paper introduces PTAPI, an approach that visualizes the user's real intentions based on their query to enhance recommendation performance. Firstly, PTAPI identifies the prompt template from Stack Overflow (SO) posts based on the user's input. Secondly, the obtained prompt template is combined with the user's input to generate a new question. Finally, the newly generated question leverages dual information sources from SO posts and API official documentation to provide recommendations. To evaluate the effectiveness of PTAPI, we conducted experiments at both the class-level and method-level. The experimental results demonstrate the effectiveness of the proposed approach, with a significant improvement in the success rate.
C1 [Wang, Yong; Chen, Linjun; Fang, Yingtao] Anhui Polytech Univ, Sch Comp & Informat, Wuhu 241000, Anhui, Peoples R China.
   [Wang, Yong] Inst Artificial Intelligence, Hefei Comprehens Natl Sci Ctr, Anhui Artificial Intelligence Lab, High tech Zone, Hefei 230026, Anhui, Peoples R China.
   [Gao, Cuiyun] Harbin Inst Technol, Sch Comp Sci & Technol, Shenzhen 518055, Guangdong, Peoples R China.
   [Li, Yong] Xinjiang Normal Univ, Coll Comp Sci & Technol, Urumqi 830017, Peoples R China.
C3 Anhui Polytechnic University; Harbin Institute of Technology; Xinjiang
   Normal University
RP Chen, LJ (corresponding author), Anhui Polytech Univ, Sch Comp & Informat, Wuhu 241000, Anhui, Peoples R China.
EM yongwang@ahpu.edu.cn; 2210920113@stu.ahpu.edu.cn; gaocuiyun@hit.edu.cn;
   2269721052@qq.com; liyong@live.com
FU Key Project of Anhui Unversity Natural Science Foundation
FX No Statement Available
CR Lam AN, 2015, IEEE INT CONF AUTOM, P476, DOI 10.1109/ASE.2015.73
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   archive, 2017, Stack overflow data dump
   Brown T., 2020, ADV NEURAL INFORM PR, V33, P1877, DOI DOI 10.48550/ARXIV.2005.14165
   Chen YJ, 2023, IEEE T SOFTWARE ENG, V49, P3289, DOI 10.1109/TSE.2023.3252259
   Daqing Hou, 2011, 2011 18th Working Conference on Reverse Engineering, P131, DOI 10.1109/WCRE.2011.24
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Fowkes J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P254, DOI 10.1145/2950290.2950319
   Gao T., 2020, arXiv:2012.15723
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Gvero I., 2013, SIGSOFTSoftw. Eng. Notes, V38, DOI [10.1145/2464526.2464552, DOI 10.1145/2464526.2464552]
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Irsan IC, 2023, IEEE WORK CONF MIN S, P92, DOI 10.1109/MSR59073.2023.00025
   [李正 Li Zheng], 2018, [软件学报, Journal of Software], V29, P1716
   Ling CY, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P36, DOI 10.1109/SANER50967.2021.00013
   Li XL, 2021, Arxiv, DOI [arXiv:2101.00190, 10.48550/arXiv.2101.00190]
   Liu K, 2023, IEEE T SOFTWARE ENG, V49, P4390, DOI 10.1109/TSE.2023.3292399
   Liu PF, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3560815
   Liu X, 2023, IEEE T KNOWL DATA EN, V35, P857, DOI 10.1109/TKDE.2021.3090866
   Loper E., 2002, arXiv
   Mikolov T., 2013, Advances in Neural Information Processing Systems, P3111
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Oracle, 2022, JDK 18 documentation
   oracle, 2017, Java se 8 api documentation downloading site
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSME.2014.90
   Radford, 2018, OPENAI BLOG
   Rahman M.M., 2018, CoRR abs/1807.02953
   Sacramento P., 2006, IVNET 06
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Sarwar B., 2001, Proceedings of the 10th internationalConference on World Wide Web (Hong Kong, Hong Kong, May 01-05, P285, DOI DOI 10.1145/371920.372071
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Shin T, 2020, Arxiv, DOI arXiv:2010.15980
   Su X., 2009, Advances in Artificial Intelligence, V2009, DOI [DOI 10.1155/2009/421425, 10.1155/2009/421425]
   Thung F, 2016, IEEE INT CONF AUTOM, P896, DOI 10.1145/2970276.2975940
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Wang XL, 2022, PROCEEDINGS OF THE 28TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, KDD 2022, P1929, DOI 10.1145/3534678.3539382
   Wei MS, 2022, PROC INT CONF SOFTW, P376, DOI 10.1145/3510003.3510159
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Xie Tao, 2006, Proc. MSR, P54
   Yu ZX, 2021, IEEE T SOFTWARE ENG, V47, P969, DOI 10.1109/TSE.2019.2910516
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
   Zhang JX, 2018, IEEE ACCESS, V6, P6205, DOI 10.1109/ACCESS.2017.2777845
   Zhou Y, 2022, IEEE T SOFTWARE ENG, V48, P2157, DOI 10.1109/TSE.2021.3053111
NR 43
TC 0
Z9 0
U1 8
U2 8
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 27
DI 10.1007/s10515-024-00425-0
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KK6I2
UT WOS:001179890300002
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Freire, WM
   Rosa, CT
   Amaral, AMMM
   Colanzi, TE
AF Freire, Willian Marques
   Rosa, Claudia Tupan
   Amaral, Aline Maria Malachini Miotto
   Colanzi, Thelma Elita
TI Interactive search-based Product Line Architecture design
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Interactive seach-based software engineering; Software product line;
   Machine learning; User preferences
ID INCORPORATING USER PREFERENCES; OPTIMIZATION
AB Software Product Line (SPL) is an approach derived from other engineering fields that use reuse techniques for a family of products in a given domain. An essential artifact of SPL is the Product Line Architecture (PLA), which identifies elements characterized by variation points, variability, and variants. The PLA aims to anticipate design decisions to obtain features such as reusability and modularity. Nevertheless, getting a reusable and modular PLA and following pre-defined standards can be a complex task involving several conflicting objectives. In this sense, PLA can be formulated as a multiobjective optimization problem. This research presents an approach that helps DMs (Decision Makers) to interactively optimize the PLAs through several strategies such as interactive optimization and Machine Learning (ML) algorithms. The interactive multiobjective optimization approach for PLA design (iMOA4PLA) uses specific metrics for the PLA optimization problem, implemented through the OPLA-Tool v2.0. In this approach, the architect assumes the role of DM during the search process, guiding the evolution of PLAs through various strategies proposed in previous works. Two quantitative and one qualitative experiments were performed to evaluate the iMOA4PLA. The results showed that this approach can assist the PLA optimization process by meeting more than 90% of DM preferences. The scientific contribution of this work lies in providing an approach for the PLA design and evaluation that leverages the benefits of machine learning algorithms and can serve as a basis for different SE contexts.
C1 [Freire, Willian Marques; Rosa, Claudia Tupan; Amaral, Aline Maria Malachini Miotto; Colanzi, Thelma Elita] Univ Estadual Maringa, Maringa, Brazil.
C3 Universidade Estadual de Maringa
RP Freire, WM (corresponding author), Univ Estadual Maringa, Maringa, Brazil.
EM willianmarquesfreire@gmail.com; ctupanrosa@gmail.com; ammmamaral@uem.br;
   thelma@din.uem.br
CR Alizadeh V, 2018, IEEE INT CONF AUTOM, P464, DOI [10.1145/3238147.3238217, 10.114513238147.3238217]
   Alpaydin E., 2010, INTRO MACHINE LEARNI
   Araújo AA, 2017, AUTOMAT SOFTW ENG, V24, P623, DOI 10.1007/s10515-016-0200-3
   Araújo AA, 2014, LECT NOTES COMPUT SC, V8636, P228
   Arthur D, 2007, PROCEEDINGS OF THE EIGHTEENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P1027
   Bachmann Felix., 2005, Variability in Software Product Lines
   Bindewald Carlos Vinicius, 2020, SBCARS '20: Proceedings of the 14th Brazilian Symposium on Software Components, Architectures, and Reuse, P11, DOI 10.1145/3425269.3425278
   Bindewald CV, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P387, DOI 10.1145/3350768.3351993
   Birtolo Cosimo, 2009, Proceedings of the 2009 World Congress on Nature & Biologically Inspired Computing (NaBIC 2009), P349, DOI 10.1109/NABIC.2009.5393307
   Neto JC, 2018, PROC INT C TOOLS ART, P498, DOI 10.1109/ICTAI.2018.00083
   Coello C.A.C., 2007, Evolutionary Algorithms for Solving Multi-Objective Problems, V5, DOI DOI 10.1007/978-0-387-36797-2
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Colanzi TE, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106372
   Colanzi TE, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P237, DOI 10.1145/2648511.2648537
   Contieri AC, 2011, LECT NOTES COMPUT SC, V6903, P130, DOI 10.1007/978-3-642-23798-0_13
   da Silva LF, 2021, PROCEEDINGS OF 15TH INTERNATIONAL WORKING CONFERENCE ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS, VAMOS 2021, DOI 10.1145/3442391.3442397
   Dantas Altino, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P341, DOI 10.1007/978-3-319-22183-0_32
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Donegan P.M., 2007, SBCARS, P3
   Ferreira TD, 2016, APPL SOFT COMPUT, V49, P1283, DOI 10.1016/j.asoc.2016.06.027
   Ferreira TN, 2017, INFORM SOFTWARE TECH, V90, P55, DOI 10.1016/j.infsof.2017.05.003
   Freire W.M., 2023, Complementary Material, DOI [10.6084/m9.figshare.22229605.v1, DOI 10.6084/M9.FIGSHARE.22229605.V1]
   Freire W.M., 2020, Otimizacao interativa de arquitetura de linha de produto de software utilizando congelamento de elementos arquiteturais
   Freire WM, 2019, P INT COMP SOFTW APP, P139, DOI 10.1109/COMPSAC.2019.00028
   Gibbs G. R., 2018, Analyzing qualitative data, V2nd, P1
   Guest G., 2012, APPL THEMATIC ANAL, DOI 10.4135/9781483384436
   Harman M, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P58, DOI 10.1109/METRIC.2004.1357891
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Horstmann CS., 2005, Object-Oriented Design and Patterns, V2
   Kalboussi Sabrine, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P245, DOI 10.1007/978-3-642-39742-4_19
   Kessentini W., 2020, P 23 ACM IEEE INT C, P68, DOI DOI 10.1145/3239372.3239375
   Kessentini W, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P101, DOI 10.1145/3239372.3239375
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Kuviatkovski FH, 2022, 2022 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2022), P68, DOI 10.1109/ICSA-C54293.2022.00057
   Likert R.A., 1932, A technique for the measurement of attitudes, V22, P5, DOI DOI 10.4135/9781412961288.N454
   Linden F.v.d., 2007, Software Product Lines in Action, P3, DOI [10.1007/978-3-540-71437-81, DOI 10.1007/978-3-540-71437-81]
   Marculescu B, 2018, J SYST SOFTWARE, V142, P156, DOI 10.1016/j.jss.2018.04.061
   Marculescu B, 2016, INFORM SOFTWARE TECH, V78, P66, DOI 10.1016/j.infsof.2016.05.009
   Marculescu B, 2015, APPL SOFT COMPUT, V29, P26, DOI 10.1016/j.asoc.2014.12.025
   Marques Freire Willian, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P818, DOI 10.1145/3422392.3422498
   Myers L., 2006, Encyclopedia of statistical sciences, DOI [DOI 10.1002/0471667196.ESS5050.PUB2, 10.1002/0471667196.ess5050.pub2]
   Oliveira EA, 2010, J UNIVERS COMPUT SCI, V16, P2374
   Pareto V., 1927, Manuel dconomie politique
   Pitangueira AM, 2015, INT REQUIR ENG CONF, P382, DOI 10.1109/RE.2015.7320455
   Pohl K., 2005, Software product line engineering: foundations, principles and techniques, DOI [DOI 10.1007/3-540-28901-1, 10.1007/3-540-28901-1]
   Ramírez A, 2019, IEEE T SOFTWARE ENG, V45, P760, DOI 10.1109/TSE.2018.2803055
   Ramírez A, 2018, INFORM SCIENCES, V463, P92, DOI 10.1016/j.ins.2018.06.034
   Rebai S, 2022, IEEE T SOFTWARE ENG, V48, P1560, DOI 10.1109/TSE.2020.3024814
   Rosa CT, 2022, PROCEEDINGS OF THE 2022 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION, GECCO 2022, P794, DOI 10.1145/3520304.3529041
   Saldaeta~a J., 2016, The coding manual for qualitative researchers, V3rd
   SEI, 2009, Software engineering institute-the Arcade game maker pedagogical product line
   Shackelford M.R.N., 2007, P 9 ANN C COMP GEN E, P2933
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.2307/2333709
   Simons C, 2016, PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'16 COMPANION), P143, DOI 10.1145/2908961.2909018
   Simons CL, 2010, IEEE T SOFTWARE ENG, V36, P798, DOI 10.1109/TSE.2010.34
   Takagi H, 2001, P IEEE, V89, P1275, DOI 10.1109/5.949485
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wohlin C., 2000, EXPT SOFTWARE ENG IN, DOI DOI 10.1007/978-1-4615-4625-2
NR 58
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 59
DI 10.1007/s10515-024-00457-6
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XY3M1
UT WOS:001265201200001
DA 2024-08-05
ER

PT J
AU Stepanov, EV
   Mitsyuk, AA
AF Stepanov, Evgenii V.
   Mitsyuk, Alexey A.
TI Extracting high-level activities from low-level program execution logs
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Software analysis; Software process mining; Activity extraction; .NET
AB Modern runtime environments, standard libraries, and other frameworks provide many ways of diagnostics for software engineers. One form of such diagnostics is logging low-level events which characterize internal processes during program execution like garbage collection, assembly loading, just-in-time compilation, etc. Low-level program execution event logs contain a large number of events and event classes, which makes it impossible to discover meaningful process models straight from the event log, so extraction of high-level activities is a necessary step for further processing of such logs. In this paper, .NET applications execution logs are considered and an approach based on an unsupervised technique is extended with the domain-driven hierarchy built with the knowledge of a structure of logged events. The proposed approach allows treating events on different levels of abstraction, thus extending the number of patterns and activities found with the unsupervised technique. Experiments with real-life .NET programs execution event logs are conducted to demonstrate the proposed approach's capability.
C1 [Stepanov, Evgenii V.; Mitsyuk, Alexey A.] HSE Univ, Fac Comp Sci, PAIS Lab, Moscow, Russia.
C3 HSE University (National Research University Higher School of Economics)
RP Stepanov, EV; Mitsyuk, AA (corresponding author), HSE Univ, Fac Comp Sci, PAIS Lab, Moscow, Russia.
EM evstepanov@edu.hse.ru; amitsyuk@hse.ru
RI ; Mitsyuk, Alexey/J-6066-2015
OI Stepanov, Evgenii/0009-0003-2764-0171; Mitsyuk,
   Alexey/0000-0003-2352-3384
FU Basic Research Program at the National Research University Higher School
   of Economics (HSE University); Basic Research Program at the National
   Research University Higher School of Economics (HSE University)
FX This work is an output of a research project implemented as part of the
   Basic Research Program at the National Research University Higher School
   of Economics (HSE University).
CR Acampora G., 2017, IEEE Computational Intelligence Magazine, P4, DOI DOI 10.1109/MCI.2017.2670420
   Alharbi A, 2018, STUD HEALTH TECHNOL, V247, P381, DOI 10.3233/978-1-61499-852-5-381
   [Бегичева Антонина Константиновна Begicheva Antonina A.], 2017, [Моделирование и анализ информационных систем, Modelirovanie i analiz informatsionnykh sistem], V24, P125, DOI 10.18255/1818-1015-2017-2-125-140
   Bose RPJC, 2013, 2013 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DATA MINING (CIDM), P111, DOI 10.1109/CIDM.2013.6597225
   Bose RPJC, 2013, 2013 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DATA MINING (CIDM), P127, DOI 10.1109/CIDM.2013.6597227
   Bose RPJC, 2009, LECT NOTES COMPUT SC, V5701, P159, DOI 10.1007/978-3-642-03848-8_12
   Bottrighi A, 2022, FUTURE INTERNET, V14, DOI 10.3390/fi14120357
   Di Federico G, 2023, FUTURE INTERNET, V15, DOI 10.3390/fi15030113
   Fazzinga B, 2018, INFORM SYST, V73, P1, DOI 10.1016/j.is.2017.11.001
   Feng Y, 2018, INT C PROGRAM COMPRE, P86, DOI 10.1145/3196321.3196343
   Ferreira Diogo R., 2013, International Journal of Business Process Integration and Management, V6, P146
   Folino F., 2015, LNBIP, V208, P165, DOI [10.1007/978-3-319-19027-3_14, DOI 10.1007/978-3-319-19027-3_14]
   Fraenkel AS, 1998, J COMB THEORY A, V82, P112, DOI 10.1006/jcta.1997.2843
   github, NET Platform.
   github, Source code of experiments
   github, Source code of Ficus python package
   github, C# Language Repository
   github, Procfiler tool
   github, Source code for the array pooling experiment
   github, Entity Framework
   github, Source code of test applications
   github, CLR events documentation
   Günther CW, 2010, LECT NOTES BUS INF, V43, P128
   Gusfield D, 2004, J COMPUT SYST SCI, V69, P525, DOI 10.1016/j.jcss.2004.03.004
   Gusfield Dan, 1997, ACM Sigact News, V28, P41, DOI DOI 10.1145/270563.571472
   Hidalgo L, 2023, APPL SCI-BASEL, V13, DOI 10.3390/app13053039
   Hojaji F, 2020, SOFTW SYST MODEL, V19, P199, DOI 10.1007/s10270-019-00737-w
   Islam MR, 2022, ELECTRONICS-SWITZ, V11, DOI 10.3390/electronics11121880
   Kolpakov R., 1999, 40th Annual Symposium on Foundations of Computer Science (Cat. No.99CB37039), P596, DOI 10.1109/SFFCS.1999.814634
   Leemans M, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P502, DOI 10.1109/SANER.2018.8330248
   Leemans M, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P185, DOI 10.1109/SANER.2018.8330208
   Leemans M, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P44, DOI 10.1109/MODELS.2015.7338234
   Leonardi G., 2019, Data-Driven Process Discovery and Analysis. 7th IFIP WG 2.6 International Symposium (SIMPDA 2017). Revised Selected Papers. Lecture Notes in Business Information Processing (LNBIP 340), P45, DOI 10.1007/978-3-030-11638-5_3
   Li C-Y., 2023, Intelligent systems design and applications, P126, DOI [10.1007/978-3-031-35507-3_13, DOI 10.1007/978-3-031-35507-3_13]
   Liu C, 2018, IEICE T INF SYST, VE101D, P2005, DOI 10.1587/transinf.2017EDP7027
   Mannhardt F., 2017, Unsupervised event abstraction using pattern abstraction and local process models
   promtools, ProM Tools
   Rehse Jana-Rebecca, 2019, Business Process Management Workshops. BPM 2018 International Workshops. Revised Papers. Lecture Notes in Business Information Processing (LNBIP 342), P5, DOI 10.1007/978-3-030-11641-5_1
   Rezunik L., 2023, P ISP RAS, V35, P171, DOI [10.15514/10.15514/ISPRAS-2023-35(3)-13, DOI 10.15514/10.15514/ISPRAS-2023-35(3)-13]
   Rubin V., 2014, Agile development with software process mining, DOI [10.1145/2600821.2600842, DOI 10.1145/2600821.2600842]
   Sánchez-Charles D, 2018, LECT NOTES BUS INF P, V308, P191, DOI 10.1007/978-3-319-74030-0_14
   Shershakov Sergey Anreevich, 2015, [Моделирование и анализ информационных систем, Modelirovanie i analiz informatsionnykh sistem], V22, P818, DOI 10.18255/1818-1015-2015-6-818-833
   Taibi D, 2019, CLOSER: PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P153, DOI 10.5220/0007755901530164
   Tax Niek, 2016, Journal of Innovation in Digital Ecosystems, V3, P183, DOI 10.1016/j.jides.2016.11.001
   Tax N, 2018, LECT NOTE NETW SYST, V15, P251, DOI 10.1007/978-3-319-56994-9_18
   tiobe, TIOBE Index
   UKKONEN E, 1995, ALGORITHMICA, V14, P249, DOI 10.1007/BF01206331
   Van Der Aalst W., 2016, PROCESS MINING DATA, DOI [10.1007/978-3-662-49851-4_1, DOI 10.1007/978-3-662-49851-4]
   van der Aalst W.M.P., 2022, Process mining handbook.Lecture Notes in Business Information Processing, V448
   van Eck ML, 2015, LECT NOTES COMPUT SC, V9097, P297, DOI 10.1007/978-3-319-19069-3_19
   van Zelst SJ, 2021, GRANULAR COMPUT, V6, P719, DOI 10.1007/s41066-020-00226-2
   Yazdi MA, 2021, PROCEEDINGS OF THE 13TH INTERNATIONAL JOINT CONFERENCE ON KNOWLEDGE DISCOVERY, KNOWLEDGE ENGINEERING AND KNOWLEDGE MANAGEMENT (KDIR), VOL 1:, P27, DOI 10.5220/0010652000003064
NR 52
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 41
DI 10.1007/s10515-024-00441-0
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QM5C7
UT WOS:001221293800001
DA 2024-08-05
ER

PT J
AU Shimizu, R
   Nunomura, Y
   Kanuka, H
AF Shimizu, Ryo
   Nunomura, Yuna
   Kanuka, Hideyuki
TI Test-suite-guided discovery of least privilege for cloud infrastructure
   as code
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Cloud computing; Infrastructure as code; Least privilege; Software
   testing
AB Infrastructure as code (IaC) for the cloud, which automatically configures a system's cloud environment from source code, is an important practice thanks to its efficient, reproducible provisioning. On a cloud IaC definition (template), developers must carefully manage permission settings to minimize the risk of cyber-attacks. To this end, least privilege on IaC templates, i.e., the assignment of a necessary and sufficient set of permissions, is widely regarded as a best practice. However, the discovery of least privilege can be an error-prone, burdensome task for developers. This is partially because the execution of an action on the cloud sometimes implicitly requires permissions of other services, and since these are difficult to recognize without actual execution, developers are forced to manually iterate the execution of an action and the modification of permissions. In this work, we present an approach to automatically discover least privilege. Our approach utilizes a test suite, which represents what a system should achieve on the cloud, as an indicator of least privilege, and it iterates testing on the cloud and (re)configuration of permissions on the basis of the test results. We also propose a stepwise filtering technique that utilizes the co-occurrences of cloud services/actions and clustering-based pruning to efficiently rule out unnecessary permissions. Our experiments demonstrate that this filtering reduces the number of iterations compared to naive approaches, which directly affects the time and cost to discover least privilege. Moreover, three case studies show that our approach can identify least privilege on Amazon Web Services within a practical time.
C1 [Shimizu, Ryo; Nunomura, Yuna; Kanuka, Hideyuki] Hitachi Ltd, Res & Dev Grp, Yokohama, Kanagawa, Japan.
C3 Hitachi Limited
RP Shimizu, R (corresponding author), Hitachi Ltd, Res & Dev Grp, Yokohama, Kanagawa, Japan.
EM ryo.shimizu.wq@hitachi.com
RI Kanuka, Hideyuki/AAJ-9751-2020
OI Shimizu, Ryo/0000-0003-1754-5691
CR Amazon Web Services Inc, Actions, resources, and condition keys for AWS services
   Amazon Web Services Inc, IAM best practices-AWS identity and access management
   Amazon Web Services Inc, 2022, Using AWS IAM access analyzer-AWS identity and access management
   Amazon Web Services Inc, AWS serverless application model
   Amazon Web Services Inc, AWS cloudformation
   Artac M, 2017, PROC IEEE ACM INT C, P497, DOI 10.1109/ICSE-C.2017.162
   Backes J., 2018, 2018 FORMAL METHODS, P1, DOI DOI 10.23919/FMCAD.2018.8602994
   Binz T., 2014, TOSCA: Portable Automated Deployment and Management of Cloud Applications, P527, DOI 10.1007/978-1-4614-7535-4_22
   Buyens K, 2013, SOFTW SYST MODEL, V12, P331, DOI 10.1007/s10270-011-0218-8
   Cauli C, 2021, LECT NOTES COMPUT SC, V12759, P767, DOI 10.1007/978-3-030-81685-8_36
   Chari S. N., 2003, ACM Transactions on Information and Systems Security, V6, P173, DOI 10.1145/762476.762477
   Chen HC, 2020, IEEE INT CONF AUTOM, P536, DOI 10.1145/3324884.3416548
   College O., 1995, USENIX COMPUTING SYS
   DENNING PJ, 1976, COMPUT SURV, V8, P359, DOI 10.1145/356678.356680
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Geneiatakis D, 2015, COMPUT SECUR, V49, P192, DOI 10.1016/j.cose.2014.10.005
   Gill P, 2023, IEEE T DEPEND SECURE, V20, P2085, DOI 10.1109/TDSC.2022.3171740
   Google Cloud, 2022, Deployment manager fundamentals
   Guerriero M, 2019, PROC IEEE INT CONF S, P580, DOI 10.1109/ICSME.2019.00092
   Hanappi O., 2016, P ACM SIGPLAN INT C, DOI [10.1145/2983990.2984000, DOI 10.1145/2983990.2984000]
   HashiCorp T, 2022, Terraform by hashicorp
   Herbold S., 2020, Journal of Open Source Software, V5, P2173, DOI [DOI 10.21105/JOSS.02173, 10.21105/JOSS.02173]
   Hummer Waldemar, 2013, Middleware 2013. ACM/IFIP/USENIX 14th International Middleware Conference. Proceedings: LNCS 8275, P368, DOI 10.1007/978-3-642-45065-5_19
   Ikeshita Katsuhiko, 2017, Tests and Proofs. 11th International Conference, TAP 2017, held as part of STAF 2017. Proceedings: LNCS 10375, P98, DOI 10.1007/978-3-319-61467-0_6
   Jin D., 2020, P 23 INT S RES ATTAC
   Kanies Luke., 2006, USENIX ASS NEWSLETTE, V31, P19
   Kubernetes, 2022, Kubernetes
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Liu ZX, 2019, AUTOMAT SOFTW ENG, V26, P241, DOI 10.1007/s10515-019-00254-6
   Microsoft, What are arm templates?
   Microsoft, Azure identity management and access control security best practices
   Morris Kief, 2020, Infrastructure as Code, V2nd
   MURTAGH F, 1983, COMPUT J, V26, P354, DOI 10.1093/comjnl/26.4.354
   Nelson-Smith S., 2013, Test-Driven Infrastructure with Chef, V2
   O'Hearn P, 2018, LICS'18: PROCEEDINGS OF THE 33RD ANNUAL ACM/IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE, P13, DOI 10.1145/3209108.3209109
   OASIS Standard, 2013, Topology and orchestration specification for cloud applications version 1.0
   OWASP Foundation, 2022, Server side request forgery
   Rahman A, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3408897
   Rahman A, 2019, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2019.00033
   Rahman A, 2019, INFORM SOFTWARE TECH, V108, P65, DOI 10.1016/j.infsof.2018.12.004
   Red Hat Inc, 2022, Ansible is simple it automation
   Saavedra N, 2022, IEEE INT CONF AUTOM, DOI 10.1145/3551349.3556945
   SALTZER JH, 1975, P IEEE, V63, P1278, DOI 10.1109/PROC.1975.9939
   Sandobalin J, 2020, IEEE ACCESS, V8, P17734, DOI 10.1109/ACCESS.2020.2966597
   J L, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC), P354, DOI 10.1109/SCC.2017.52
   Sharath A.V., 2018, Aws security flaw which can grant admin access!
   Shimizu R, 2020, INT CONF CLOUD COMP, P1, DOI 10.1109/CloudCom49646.2020.00007
   Sotiropoulos T, 2020, PROC INT CONF SOFTW, P26, DOI 10.1145/3377811.3380384
   Strandberg PE, 2016, PROC INT SYMP SOFTW, P12, DOI 10.1109/ISSRE.2016.23
   Thoughtworks Inc, 2020, Infrastructure as code | technology radar | thoughtworks
   Ting Dai, 2020, SoCC '20: Proceedings of the 11th ACM Symposium on Cloud Computing, P358, DOI 10.1145/3419111.3421303
   Wang SQ, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P1599
   Wang X., 2019, Exploring the machine learning models behind cloud IAM recommender
   WARD JH, 1963, J AM STAT ASSOC, V58, P236, DOI 10.2307/2282967
   Weiss A, 2017, IEEE INT CONF AUTOM, P625, DOI 10.1109/ASE.2017.8115673
   Wettinger J, 2014, INT CONF UTIL CLOUD, P59, DOI 10.1109/UCC.2014.14
   Wetzlmaier T, 2016, IEEE INT CONF SOFTW, P416, DOI 10.1109/ICST.2016.51
   Wurster M, 2020, SICS SOFTWARE, V35, P63, DOI 10.1007/s00450-019-00412-x
   Yu L, 2021, IEEE T SOFTWARE ENG, V47, P221, DOI 10.1109/TSE.2018.2886875
   Zhai GS, 2008, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON INFORMATION SECURITY AND ASSURANCE, P181, DOI 10.1109/ISA.2008.61
   Zhang M, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3585009
   Zhou H, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P505, DOI 10.1109/ASE51524.2021.9678843
NR 63
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 25
DI 10.1007/s10515-024-00420-5
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JS0P3
UT WOS:001175039000001
DA 2024-08-05
ER

PT J
AU Wang, RC
   Xu, SL
   Ji, XY
   Tian, Y
   Gong, LN
   Wang, K
AF Wang, Rongcun
   Xu, Senlei
   Ji, Xingyu
   Tian, Yuan
   Gong, Lina
   Wang, Ke
TI An extensive study of the effects of different deep learning models on
   code vulnerability detection in Python code
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Code vulnerability; Representation learning; Deep learning; Python
ID CHURN
AB Deep learning has achieved great progress in automated code vulnerability detection. Several code vulnerability detection approaches based on deep learning have been proposed. However, few studies empirically studied the impacts of different deep learning models on code vulnerability detection in Python. For this reason, we strive to cover many more code representation learning models and classification models for vulnerability detection. We design and conduct an empirical study for evaluating the effects of the eighteen deep learning architectures derived from combinations of three representation learning models, i.e., Word2Vec, fastText, and CodeBERT, and six classification models, i.e., random forest, XGBoost, Multi-Layer Perception (MLP), Convolutional Neural Network (CNN), Long Short-Term Memory (LSTM), Gate Recurrent Unit (GRU) on code vulnerability detection in total. Additionally, two machine learning strategies i.e., the attention and bi-directional mechanisms are also empirically compared. The statistical significance and effect size analysis between different models are also conducted. In terms of precision, recall, and F-score, Word2Vec is better than Bidirectional Encoder Representations from Transformers CodeBERT and fastText. Likewise, long short-term memory (LSTM) and gated recurrent unit (GRU) are superior to other classification models we studied. The bi-directional LSTM and GRU with attention using Word2Vec are two optimal models for solving code vulnerability detection for Python code. Moreover, they have medium or large effect sizes on LSTM and GRU using only a single mechanism. Both the representation learning models and classification models have important influences on vulnerability detection in Python code. Likewise, the bi-directional and attention mechanisms can impact the performance of code vulnerability detection.
C1 [Wang, Rongcun; Xu, Senlei; Ji, Xingyu; Wang, Ke] China Univ Min & Technol, Sch Comp Sci & Technol, 1 Daxue Rd, Xuzhou 221116, Jiangsu, Peoples R China.
   [Tian, Yuan] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Gong, Lina] Nanjing Univ Aeronaut & Astronaut, Sch Comp Sci & Technol, 9 Jiangjun St, Nanjing 210016, Jiangsu, Peoples R China.
C3 China University of Mining & Technology; Queens University - Canada;
   Nanjing University of Aeronautics & Astronautics
RP Wang, K (corresponding author), China Univ Min & Technol, Sch Comp Sci & Technol, 1 Daxue Rd, Xuzhou 221116, Jiangsu, Peoples R China.
EM rcwang@cumt.edu.cn; ts21170103p31@cumt.edu.cn;
   ts21170073p31@cumt.edu.cn; y.tian@queensu.ca; gonglina@nuaa.edu.cn;
   wangke@cumt.edu.cn
FU National Natural Science Foundation of China [61673384, 62202223];
   National Natural Science Foundation of China [BK20220881]; Natural
   Science Foundation of Jiangsu Province, China
FX The authors would like to thank the anonymous reviewers for valuable
   comments and helpful suggestions. This work is partially supported by
   the National Natural Science Foundation of China under Grant Nos.
   61673384 and 62202223, and the Natural Science Foundation of Jiangsu
   Province, China under grant No. BK20220881.
CR Harer JA, 2018, Arxiv, DOI arXiv:1803.04497
   Aivatoglou G, 2021, PROCEEDINGS OF THE 2021 IEEE INTERNATIONAL CONFERENCE ON CYBER SECURITY AND RESILIENCE (IEEE CSR), P312, DOI 10.1109/CSR51186.2021.9527965
   Albawi S, 2017, I C ENG TECHNOL
   Alfadel M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P446, DOI 10.1109/SANER50967.2021.00048
   Amin A, 2016, IEEE ACCESS, V4, P7940, DOI 10.1109/ACCESS.2016.2619719
   Aota M, 2020, IEEE SYMP COMP COMMU, P26, DOI 10.1109/iscc50000.2020.9219568
   Bagheri A., 2021, INT C QUAL INF COMM, P267
   Bahdanau D, 2016, Arxiv, DOI arXiv:1409.0473
   Bhandari G, 2021, PROCEEDINGS OF THE 17TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE '21), P30, DOI 10.1145/3475960.3475985
   Bojanowski Piotr, 2017, T ASSOC COMPUT LING, V5, P135, DOI [10.48550/arXiv.1607.04606, DOI 10.1162/TACLA00051]
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Cho KYHY, 2014, Arxiv, DOI [arXiv:1406.1078, 10.48550/arXiv.1406.1078]
   Chollet F., 2018, Astrophysics Source Code Library
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dowd M., 2006, The art of software security assessment: Identifying and preventing software vulnerabilities
   Engler D., 2001, Operating Systems Review, V35, P57, DOI 10.1145/502059.502041
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   Fang Y, 2020, PLOS ONE, V15, DOI 10.1371/journal.pone.0228439
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Friedman M, 1937, J AM STAT ASSOC, V32, P675, DOI 10.2307/2279372
   Fu M, 2022, IEEE WORK CONF MIN S, P608, DOI 10.1145/3524842.3528452
   Ghaffarian SM, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092566
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Han ZB, 2017, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSME.2017.52
   Harzevili N. S., 2022, arXiv
   He JY, 2021, NEUROCOMPUTING, V444, P319, DOI 10.1016/j.neucom.2020.05.118
   Heinemann Lars, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P207, DOI 10.1007/978-3-642-21347-2_16
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Hussain Shahid, 2022, EASE 2022: The International Conference on Evaluation and Assessment in Software Engineering 2022, P413, DOI 10.1145/3530019.3531333
   Jain S, 2019, Arxiv, DOI arXiv:1902.10186
   Jiang CM, 2021, PROC INT SYMP SOFTW, P468, DOI 10.1109/ISSRE52982.2021.00055
   Dam HK, 2017, Arxiv, DOI arXiv:1708.02368
   Le THM, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3529757
   Li J., 2016, arXiv
   Li Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P292, DOI 10.1145/3468264.3468597
   Li Z, 2018, Arxiv, DOI arXiv:1801.01681
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Lin GJ, 2021, IEEE T DEPEND SECURE, V18, P2469, DOI 10.1109/TDSC.2019.2954088
   Lina Gong, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P698, DOI 10.1109/ASE.2019.00071
   Liu TZ, 2021, IEEE SENSOR, DOI 10.1109/SENSORS47087.2021.9639547
   Ma SQ, 2017, LECT NOTES COMPUT SC, V10493, P229, DOI 10.1007/978-3-319-66399-9_13
   Mashhadi E, 2021, IEEE WORK CONF MIN S, P505, DOI 10.1109/MSR52588.2021.00063
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, DOI 10.48550/ARXIV.1301.3781]
   Nikitopoulos G, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1565, DOI 10.1145/3468264.3473122
   Pang N, 2021, SCI CHINA INFORM SCI, V64, DOI 10.1007/s11432-020-3055-1
   Pang YL, 2015, 2015 IEEE 14TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P543, DOI 10.1109/ICMLA.2015.99
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pendleton Marcus, 2017, ACM Computing Surveys, V49, DOI 10.1145/3005714
   Pewny Jannik, 2014, P 30 ANN COMP SEC AP, P406, DOI [10.1145/2664243.2664269, DOI 10.1145/2664243.2664269]
   Qiao YC, 2022, ACM T INTERNET TECHN, V22, DOI 10.1145/3436751
   Romano J., 2006, ANN M FLORIDA ASS IN
   ROSENBLATT F, 1958, PSYCHOL REV, V65, P386, DOI 10.1037/h0042519
   Ruohonen J, 2018, INT WORKSH EMPIR ENG, P25, DOI 10.1109/IWESEP.2018.00013
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Sahin SE, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P244, DOI 10.1145/3319008.3319033
   Semasaba AOA, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2422
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Stein RA, 2019, INFORM SCIENCES, V471, P216, DOI 10.1016/j.ins.2018.09.001
   Subhan F, 2022, IET SOFTW, V16, P516, DOI 10.1049/sfw2.12066
   Triet Huynh Minh Le, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P371, DOI 10.1109/MSR.2019.00063
   Vaswani A, 2017, ADV NEUR IN, V30
   Verdi M., 2020, IEEE Transactions on Software Engineering
   Wang J, 2017, 2017 13TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND SECURITY (CIS), P268, DOI 10.1109/CIS.2017.00065
   Wang K, 2021, ACM T ASIAN LOW-RESO, V20, DOI 10.1145/3398191
   Wartschinski L, 2022, INFORM SOFTWARE TECH, V144, DOI 10.1016/j.infsof.2021.106809
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Wu XX, 2020, J SYST SOFTWARE, V160, DOI 10.1016/j.jss.2019.110456
   Xu AD, 2018, INT CONF SYST INFORM, P1225, DOI 10.1109/ICSAI.2018.8599360
   Zheng YH, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P111, DOI 10.1109/ICSE-SEIP52600.2021.00020
   Zhou X, 2021, PROC IEEE INT CONF S, P425, DOI 10.1109/ICSME52107.2021.00044
   Zou DQ, 2021, IEEE T DEPEND SECURE, V18, P2224, DOI 10.1109/TDSC.2019.2942930
NR 76
TC 2
Z9 2
U1 14
U2 14
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 15
DI 10.1007/s10515-024-00413-4
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GH5C9
UT WOS:001151781300001
DA 2024-08-05
ER

PT J
AU Liu, Y
   Wang, C
   Ma, Y
AF Liu, Yang
   Wang, Chao
   Ma, Yan
TI DL4SC: a novel deep learning-based vulnerability detection framework for
   smart contracts
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Smart contract; Vulnerability detection; Machine learning; Transformer;
   CNN; SSA
AB Smart contract is a new paradigm for the decentralized software system, which plays an important and key role in Blockchain-based application. The vulnerabilities in smart contracts are unacceptable, and some of which have caused significant economic losses. The machine learning, especially deep learning, is a very promising and potential approach to vulnerability detecting for smart contracts. At present, deep learning-based vulnerability detection methods have low accuracy, time-consuming, and too small application range. For dealing with these, we propose a novel deep learning-based vulnerability detection framework for smart contracts at opcode level, named as DL4SC. It orthogonally combines the Transformer encoder and CNN (convolutional neural networks) to detect vulnerabilities of smart contracts for the first time, and firstly exploit SSA (sparrow search algorithm) to automatically search model hyperparameters for vulnerability detection. We implement the framework DL4SC on deep learning platform Pytorch with Python, and compare it with existing works on the three public datasets and one dataset we collect. The experiment results show that DL4SC can accurately detect vulnerabilities of smart contracts, and performs better than state-of-the-art works for detecting vulnerabilities in smart contracts. The accuracy and F1-score of DL4SC are 95.29% and 95.68%, respectively.
C1 [Liu, Yang; Wang, Chao] Shanghai Maritime Univ, Inst Logist Sci & Engn, Shanghai 201306, Peoples R China.
   [Ma, Yan] Nanjing Univ Finance & Econ, Sch Accounting, Nanjing 210023, Peoples R China.
   [Liu, Yang; Ma, Yan] Natl Univ Singapore, Sch Comp, Singapore 117417, Singapore.
C3 Shanghai Maritime University; Nanjing University of Finance & Economics;
   National University of Singapore
RP Ma, Y (corresponding author), Nanjing Univ Finance & Econ, Sch Accounting, Nanjing 210023, Peoples R China.; Ma, Y (corresponding author), Natl Univ Singapore, Sch Comp, Singapore 117417, Singapore.
EM yanma_nus@126.com
FU Singapore-UK Cyber Security of EPSRC;  [EP/N020170/1]
FX The work was supported by Singapore-UK Cyber Security of EPSRC under
   Grant Nos. EP/N020170/1. We would like to extend our deepest respects to
   Professor Edmund M. Clarke at Carnegie Mellon University, USA, who
   received ACM Turing Award for his pioneering work of model checking and
   passed away on December 22, 2020. He inspired us a lot through his books
   and papers, especially the direct discussion about machine learning for
   system vulnerability detection. We also thank the editors and referees
   for their efforts in reviewing this work.
CR [Anonymous], 2017, Mythril
   [Anonymous], 2017, The parity wallet hack explained
   Bhargavan K, 2016, PROCEEDINGS OF THE 2016 ACM WORKSHOP ON PROGRAMMING LANGUAGES AND ANALYSIS FOR SECURITY (PLAS'16), P91, DOI 10.1145/2993600.2993611
   Brent L, 2018, Arxiv, DOI arXiv:1809.03981
   Cai J, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111550
   Dannen C., 2017, Introducing ethereum and solidity, DOI [10.1007/978-1-4842-2535-6, DOI 10.1007/978-1-4842-2535-6]
   Fan SH, 2021, INFORM PROCESS MANAG, V58, DOI 10.1016/j.ipm.2021.102587
   Feist J, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB 2019), P8, DOI 10.1109/WETSEB.2019.00008
   Feldman YMY, 2021, P ACM PROGRAM LANG, V5, DOI 10.1145/3434296
   Feng Y, 2020, IEEE INT CONF AUTOM, P1141, DOI 10.1145/3324884.3416646
   Fey G., 2011, INT DOCTORAL WORKSHO, P47
   Fu Y, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1110, DOI 10.1145/3338906.3341175
   Gao GW, 2023, IEEE T IMAGE PROCESS, V32, P1978, DOI 10.1109/TIP.2023.3261747
   Gayvoronskaya T., 2020, Blockchain: Hype or Innovation
   Ghaleb A, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P728, DOI 10.1145/3533767.3534378
   Grech N, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276486
   Grieco Gustavo, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P557, DOI 10.1145/3395363.3404366
   Gupta R, 2022, COMPUT ELECTR ENG, V97, DOI 10.1016/j.compeleceng.2021.107583
   He DJ, 2023, IEEE INTERNET THINGS, V10, P12178, DOI 10.1109/JIOT.2023.3241544
   He DJ, 2020, IEEE NETWORK, V34, P276, DOI 10.1109/MNET.001.1900656
   He JX, 2019, PROCEEDINGS OF THE 2019 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'19), P531, DOI 10.1145/3319535.3363230
   Hessenauer S., 2018, Batch Overflow bug on Ethereum ERC20 token contracts and SafeMath
   Howell J., 2022, Top 10 DeFi Hacks You Should Know
   Huang THD, 2018, Arxiv, DOI arXiv:1807.01868
   Hu T., 2023, IEEE Trans. Reliabil.
   Hu T, 2021, INFORM PROCESS MANAG, V58, DOI 10.1016/j.ipm.2020.102462
   Huang JJ, 2021, IEEE T INF FOREN SEC, V16, P2144, DOI 10.1109/TIFS.2021.3050051
   Huang J, 2022, SENSORS-BASEL, V22, DOI 10.3390/s22051829
   Ji SY, 2023, INFORM SOFTWARE TECH, V159, DOI 10.1016/j.infsof.2023.107213
   Jiang B, 2018, IEEE INT CONF AUTOM, P259, DOI 10.1145/3238147.3238177
   Jie WQ, 2023, INFORM SCIENCES, V636, DOI 10.1016/j.ins.2023.03.132
   Jin H, 2022, IEEE T SOFTWARE ENG, V48, P4611, DOI 10.1109/TSE.2021.3123170
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Li BX, 2022, IEEE T RELIAB, V71, P984, DOI 10.1109/TR.2022.3161634
   Li Junzhe, 2022, ICMLC 2022: 2022 14th International Conference on Machine Learning and Computing (ICMLC), P120, DOI 10.1145/3529836.3529912
   Li J, 2018, CYBERSECURITY, V1, DOI 10.1186/s42400-018-0002-y
   Liao JW, 2019, 2019 SIXTH INTERNATIONAL CONFERENCE ON INTERNET OF THINGS: SYSTEMS, MANAGEMENT AND SECURITY (IOTSMS), P458, DOI 10.1109/iotsms48152.2019.8939256
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Liu C, 2018, PROC IEEE ACM INT C, P65, DOI 10.1145/3183440.3183495
   Liu Z., 2021, IEEE Trans. Knowled. Data Eng
   Liu ZG, 2021, Arxiv, DOI arXiv:2106.09282
   Vivar AL, 2021, COMPUT COMMUN, V172, P119, DOI 10.1016/j.comcom.2021.03.008
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Ma FC, 2022, IEEE T SOFTWARE ENG, V48, P4380, DOI 10.1109/TSE.2021.3117966
   Ma J, 2022, INFORM PROCESS MANAG, V59, DOI 10.1016/j.ipm.2021.102854
   Mehar MI, 2019, J CASES INF TECHNOL, V21, P19, DOI 10.4018/JCIT.2019010102
   Mossberg M, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1186, DOI 10.1109/ASE.2019.00133
   Mueller B., 2018, HITB SECCONF Amsterdam, V9, P54
   Nakamoto S., 2008, BITCOIN PEER TO PEER, P21260
   Nikolic I, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P653, DOI 10.1145/3274694.3274743
   Perez D, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P1325
   Qian SY, 2022, ELECTRONICS-SWITZ, V11, DOI 10.3390/electronics11193260
   Rodler M, 2018, Arxiv, DOI arXiv:1812.05934
   Sendner C., 2023, Smarter contracts: detecting vulnerabilities in smart contracts with deep transfer learning
   Shi L, 2022, INT J INTELL SYST, V37, P4393, DOI 10.1002/int.22723
   Sun XB, 2023, J INF SECUR APPL, V73, DOI 10.1016/j.jisa.2023.103423
   Sun Y., 2021, Journal of Physics: Conference Series
   Szabo N., 1996, SMART CONTRACTS BUIL
   Thomas JB, 2023, IEEE T INSTRUM MEAS, V72, DOI 10.1109/TIM.2023.3238059
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Torres CF, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P664, DOI 10.1145/3274694.3274737
   Tsankov P, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P67, DOI 10.1145/3243734.3243780
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang L, 2021, KNOWL-BASED SYST, V228, DOI 10.1016/j.knosys.2021.107312
   Wang W, 2021, IEEE T NETW SCI ENG, V8, P1133, DOI 10.1109/TNSE.2020.2968505
   Wang XM, 2020, IEEE T SERV COMPUT, V13, P314, DOI 10.1109/TSC.2019.2949561
   Wood G., 2014, Ethereum Project Yellow Paper, V151, P1, DOI DOI 10.1017/CBO9781107415324.004
   Wu HG, 2023, APPL SCI-BASEL, V13, DOI 10.3390/app13020770
   Xing CP, 2020, WIREL NETW, DOI 10.1007/s11276-020-02379-z
   Xu YK, 2022, SEP SCI TECHNOL, V57, P83, DOI 10.1080/01496395.2021.1884879
   Xue JK, 2020, SYST SCI CONTROL ENG, V8, P22, DOI 10.1080/21642583.2019.1708830
   Xue YX, 2020, IEEE INT CONF AUTOM, P1029, DOI 10.1145/3324884.3416553
   Ye JM, 2022, J SYST SOFTWARE, V192, DOI 10.1016/j.jss.2022.111410
   Yu XL, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3402450
   Yuan FN, 2023, PATTERN RECOGN, V136, DOI 10.1016/j.patcog.2022.109228
   Zelinka I, 2022, INFORM SCIENCES, V587, P692, DOI 10.1016/j.ins.2021.10.076
   Zhang LJ, 2022, COMPUT NETW, V217, DOI 10.1016/j.comnet.2022.109289
   Zhang LJ, 2022, SENSORS-BASEL, V22, DOI 10.3390/s22124621
   Zheng PL, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P740, DOI 10.1145/3533767.3534395
   Zhou QH, 2022, IEEE INTERNET THINGS, V9, P24695, DOI 10.1109/JIOT.2022.3196269
   Zhou Y, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111257
   Zhuang Y, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3283
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
NR 83
TC 1
Z9 1
U1 25
U2 25
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 24
DI 10.1007/s10515-024-00418-z
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JE2Q0
UT WOS:001171426000003
DA 2024-08-05
ER

PT J
AU Chakroborti, D
   Schneider, KA
   Roy, CK
AF Chakroborti, Debasish
   Schneider, Kevin A.
   Roy, Chanchal K.
TI ReBack: recommending backports in social coding environments
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Pull-requests; Deep-learning; Backporting; GitHub; Patches
ID REVIEWER RECOMMENDATION; PULL-REQUESTS
AB Pull-based development is widely used in popular social coding environments like GitHub and GitLab for both internal and external contributions. When critical bug fixes or features are committed to the main branch of a project, it is often desirable to also port those changes to other stable branches. This process is referred to as backporting, and pull-requests in the process are known as backports. Backports are typically determined after extensive discussion with collaborators, and it may take many days to identify backports, which commonly results in tags and references to the original pull-requests (i.e., pull-requests for the main branch) being missed. To help software development teams better identify and manage backports, we propose ReBack (Recommending Backports), a tool based on a deep-learning model for automatically identifying backports from pull-requests and related reviews, discussions, metadata, and committed code. ReBack predicted backports with 90.98% precision and 91.81% recall from 80,000 pull-requests in 17 GitHub projects. Although the results are promising, more research is required to further support backporting, including research into automatically porting a pull-request to further reduce costs when managing software versions and branches.
C1 [Chakroborti, Debasish; Schneider, Kevin A.; Roy, Chanchal K.] Univ Saskatchewan, Dept Comp Sci, 110 Sci Pl, Saskatoon, SK S7N 5C9, Canada.
C3 University of Saskatchewan
RP Chakroborti, D (corresponding author), Univ Saskatchewan, Dept Comp Sci, 110 Sci Pl, Saskatoon, SK S7N 5C9, Canada.
EM debasish.chakroborti@usask.ca; kevin.schneider@usask.ca;
   chanchal.roy@usask.ca
RI Schneider, Kevin/KQV-5113-2024
OI Schneider, Kevin/0000-0003-1113-1754
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   Discovery grants; NSERC Collaborative Research and Training Experience
   (CREATE); Canada First Research Excellence Fund (CFREF); Global
   Institute for Water Security (GIWS)
FX This research is supported in part by the Natural Sciences and
   Engineering Research Council of Canada (NSERC) Discovery grants, and by
   an NSERC Collaborative Research and Training Experience (CREATE) grant,
   and by two Canada First Research Excellence Fund (CFREF) grants
   coordinated by the Global Institute for Food Security (GIFS) and the
   Global Institute for Water Security (GIWS).
CR Anonymous, 2022, Zenodo, DOI 10.5281/ZENODO.6715562
   Anonymous, 2022, Zenodo, DOI 10.5281/ZENODO.6715463
   [Anonymous], 2021, Kibana: Creating PRs
   [Anonymous], 2015, TENSORFLOW LARGE SCA
   [Anonymous], 2021, Ansible: Backport ReadmeD
   [Anonymous], 2021, Ansible: DevelopmentProcess.rst
   [Anonymous], 2021, GitHub: Query backport
   [Anonymous], 2020, Ansible: README.md
   [Anonymous], 2016, SBSI 2016
   [Anonymous], 2021, Kibana: README.md
   [Anonymous], 2021, Ansible: The Ansible Development Cycle
   [Anonymous], 2021, PyGitHUb: About PyGitHUb
   Azeem MI, 2020, 2020 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES, ICSSP, P115, DOI 10.1145/3379177.3388904
   Cabot J, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P550, DOI 10.1109/SANER.2015.7081875
   Chakroborti D, 2022, INT C PROGRAM COMPRE, P636, DOI [10.1145/352461O.3527920, 10.1145/3524610.3527920]
   Chen D, 2019, INT C PROGRAM COMPRE, P179, DOI 10.1109/ICPC.2019.00037
   Chollet F., 2015, Keras
   Cotroneo D, 2013, PROC INT SYMP SOFTW, P178, DOI 10.1109/ISSRE.2013.6698917
   Davis J, 2006, Proceedings of the 23rd international conference on Machine learning, P233, DOI [10.1145/1143844.1143874, DOI 10.1145/1143844.1143874]
   de Lima ML, 2018, J SYST SOFTWARE, V144, P181, DOI 10.1016/j.jss.2018.05.065
   de Lima ML, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1567, DOI 10.1145/2695664.2695884
   Dehaghani Sayed Mehdi Hejazi, 2013, Acta Inform Med, V21, P63, DOI 10.5455/AIM.2012.21.63-66
   German DM, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P81, DOI 10.1109/MSR.2009.5069483
   GitHub, 2021, About branches
   GitHub, 2021, About Pull-requests
   GitHub, 2021, About forks
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Gu X., 2021, 35 EUROPEAN C OBJECT, V194, P11, DOI [10.4230/LIPIcs.ECOOP.2021.11, DOI 10.4230/LIPICS.ECOOP.2021.11]
   Harris CR, 2020, NATURE, V585, P357, DOI 10.1038/s41586-020-2649-2
   Pham H, 2021, PROC CVPR IEEE, P11552, DOI 10.1109/CVPR46437.2021.01139
   Hoang T, 2021, IEEE T SOFTWARE ENG, V47, P2471, DOI 10.1109/TSE.2019.2952614
   Hoang T, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P87, DOI 10.1109/ICSE-Companion.2019.00044
   Jiang J, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106394
   Jiang J, 2017, INFORM SOFTWARE TECH, V84, P48, DOI 10.1016/j.infsof.2016.10.006
   Karpathy A, 2014, PROC CVPR IEEE, P1725, DOI 10.1109/CVPR.2014.223
   Kim Yoon, 2014, EMNLP, P1746, DOI 10.3115/v1/D14-1181
   Kingma D. P., 2014, arXiv
   Kingma D.P., 2014, Proc. of ICLR
   Kokubun T., 2014, Gitstar Ranking
   Kononenko O, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P124, DOI 10.1145/3183519.3183542
   Krasner H., 2021, P CONS INF SOFTW QUA, P1
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Lawall J, 2017, 2017 USENIX ANNUAL TECHNICAL CONFERENCE (USENIX ATC '17), P15
   Lawrence S, 1997, IEEE T NEURAL NETWOR, V8, P98, DOI 10.1109/72.554195
   Li Y, 2018, IEEE T SOFTWARE ENG, V44, P182, DOI 10.1109/TSE.2017.2664824
   Li Z., 2017, SEKE
   Li Z, 2017, P 9 ASIA PACIFIC S I
   Li ZX, 2017, J COMPUT SCI TECH-CH, V32, P1060, DOI 10.1007/s11390-017-1783-2
   Powers DMW, 2020, Arxiv, DOI [arXiv:2010.16061, DOI 10.48550/ARXIV.2010.16061]
   Mohamed A, 2018, ASIA PAC SOFWR ENG, P375, DOI 10.1109/APSEC.2018.00052
   Mondal M, 2017, PROC IEEE INT CONF S, P227, DOI 10.1109/ICSME.2017.33
   Ng Andrew Y., 2004, ICML'04, DOI DOI 10.1145/1015330.1015435
   Rahman Mohammad Masudur, 2014, P 11 WORKING C MININ, P364, DOI [10.1145/2597073.2597121, DOI 10.1145/2597073.2597121]
   Ray B, 2013, IEEE INT CONF AUTOM, P367, DOI 10.1109/ASE.2013.6693095
   Ray Baishakhi, 2012, P ACM SIGSOFT 20 INT, DOI [10.1145/2393596.2393659, DOI 10.1145/2393596.2393659]
   Ren LY, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1199, DOI 10.1145/3338906.3342488
   Soares DM, 2018, INFORM SOFTWARE TECH, V98, P32, DOI 10.1016/j.infsof.2018.01.015
   Stanciulescu S, 2015, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSM.2015.7332461
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Tufano R, 2021, PROC INT CONF SOFTW, P163, DOI 10.1109/ICSE43902.2021.00027
   van der Veen E, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P357, DOI 10.1109/MSR.2015.40
   Wang QT, 2021, PLANT SOIL, V458, P277, DOI [10.1007/s11104-019-04156-0, 10.1145/3361242.3361254]
   Yang C, 2018, J CENT SOUTH UNIV, V25, P1129, DOI 10.1007/s11771-018-3812-x
   Yu S, 2018, 2018 IEEE INT C COMM, P1
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Yue Yu, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P335, DOI 10.1109/APSEC.2014.57
   Zampetti F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P38, DOI [10.1109/SANER.2019.8667996, 10.1109/saner.2019.8667996]
   Zampetti F, 2017, INT C PROGRAM COMPRE, P23, DOI 10.1109/ICPC.2017.30
   Zhai X., 2021, arXiv e-prints, P2106
NR 71
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 18
DI 10.1007/s10515-024-00416-1
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IT7C9
UT WOS:001168642800001
DA 2024-08-05
ER

PT J
AU Do, CX
   Luu, NT
   Nguyen, PTL
AF Do, Cho Xuan
   Luu, Nguyen Trong
   Nguyen, Phuong Thi Lan
TI Optimizing software vulnerability detection using RoBERTa and machine
   learning
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Source code vulnerability; Software vulnerability detection; RoBERTa;
   Machine learning algorithms; Natural language processing
ID GRAPH
AB Detecting vulnerabilities in source code written in C and C + + is currently essential as attack techniques against systems seek to find, exploit, and attack these vulnerabilities. In this article, to improve the effectiveness of the source code vulnerability detection process, we propose a new approach based on building and representing source code features using natural language processing (NLP) techniques. Our proposal in the article consists of two main stages: (i) building a feature profile of the source code using the RoBERTa model, and (ii) classifying source code based on the feature profile using a supervised machine learning algorithm. Specifically, with our proposal utilizing the pre-trained RoBERTa model, we have successfully built and represented important features of source code as complete vectors, thereby enhancing the effectiveness of prediction and vulnerability detection models. The experimental part of our article compared and evaluated our proposal with other approaches on the FFmpeg + Qume dataset. The experimental results in the article showed that the approach in this study was superior to other research directions on all measures. Therefore, the proposal to use NLP techniques based on the RoBERTa model not only has scientific significance as a new research direction that has not been proposed for application but also has practical significance when all experimental results are highly effective.
C1 [Do, Cho Xuan] Posts & Telecommun Inst Technol, Fac Informat Secur, Hanoi, Vietnam.
   [Luu, Nguyen Trong; Nguyen, Phuong Thi Lan] Posts & Telecommun Inst Technol, Fac Informat Technol, Hanoi, Vietnam.
RP Do, CX (corresponding author), Posts & Telecommun Inst Technol, Fac Informat Secur, Hanoi, Vietnam.
EM chodx@ptit.edu.vn
CR Ba L.J., 2016, arXiv, DOI DOI 10.48550/ARXIV.1607.06450
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Chen D, 2017, FRONT INFORM TECH EL, V18, P332, DOI 10.1631/FITEE.1500379
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Xuan CD, 2022, J ICT RES APPL, V16, P70, DOI 10.5614/itbj.ict.res.appl.2022.16.1.5
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Gascon H., 2013, P ACM WORKSH ART INT, P45
   Handa A, 2019, WIRES DATA MIN KNOWL, V9, DOI 10.1002/widm.1306
   Harer J., 2018, ARXIV PREPRINT ARXIV
   Haridas P, 2020, IEEE ACCESS, V8, P136307, DOI 10.1109/ACCESS.2020.3011909
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hu JC, 2020, TSINGHUA SCI TECHNOL, V25, P604, DOI 10.26599/TST.2019.9010068
   Khanna C., 2021, Byte-Pair Encoding: Subword-based tokenization algorithm
   Lee M, 2006, 2006 INTERNATIONAL CONFERENCE ON HYBRID INFORMATION TECHNOLOGY, VOL 2, PROCEEDINGS, P505
   Li M, 2021, LECT NOTES COMPUT SC, V12918, P243, DOI 10.1007/978-3-030-86890-1_14
   Li Z, 2021, Arxiv, DOI arXiv:1807.06756
   Li Z, 2018, Arxiv, DOI arXiv:1801.01681
   Li Z, 2019, IEEE ACCESS, V7, P103184, DOI 10.1109/ACCESS.2019.2930578
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Lin GJ, 2021, IEEE T DEPEND SECURE, V18, P2469, DOI 10.1109/TDSC.2019.2954088
   Liu YH, 2019, Arxiv, DOI [arXiv:1907.11692, DOI 10.48550/ARXIV.1907.11692]
   Torres JM, 2019, INT J MACH LEARN CYB, V10, P2823, DOI 10.1007/s13042-018-00906-1
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Sennrich R, 2016, Arxiv, DOI [arXiv:1508.07909, DOI 10.48550/ARXIV.1508.07909]
   Shalev-Shwartz S., 2014, Understanding machine learning: from theory to algorithms, DOI [DOI 10.1017/CBO9781107298019, 10.1017/cbo9781107298019]
   Tang GG, 2021, SECUR COMMUN NETW, V2021, DOI 10.1155/2021/5566423
   Tian H, 2009, 2009 2ND IEEE INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND INFORMATION TECHNOLOGY, VOL 2, P237, DOI 10.1109/ICCSIT.2009.5234394
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang HT, 2021, IEEE T INF FOREN SEC, V16, P1943, DOI 10.1109/TIFS.2020.3044773
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wu P., 2020, IEEE 20 INT C SOFTW
   Yamaguchi F, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P359
   Zeng P, 2020, IEEE ACCESS, V8, P197158, DOI 10.1109/ACCESS.2020.3034766
   Zheng W, 2020, J SYST SOFTWARE, V168, DOI 10.1016/j.jss.2020.110659
   Zhou Yaqin, 2019, Proceedings of the Advances in Neural Information Processing Systems, P10197
NR 37
TC 0
Z9 0
U1 4
U2 4
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 40
DI 10.1007/s10515-024-00440-1
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SH0Y9
UT WOS:001233459400001
DA 2024-08-05
ER

PT J
AU Nirumand, A
   Zamani, B
   Ladani, BT
AF Nirumand, Atefeh
   Zamani, Bahman
   Ladani, Behrouz Tork
TI A comprehensive framework for inter-app ICC security analysis of Android
   apps
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Inter-Component Communication (ICC); ICC vulnerabilities; Model-Driven
   Reverse Engineering (MDRE); Inter-app ICC security issues
ID STATIC ANALYSIS
AB The Inter-Component Communication (ICC) model in Android enables the sharing of data and services among app components. However, it has been associated with several problems, including complexity, support for unconstrained communication, and difficulties for developers to understand. These issues have led to numerous security vulnerabilities in Android ICC. While existing research has focused on specific subsets of these vulnerabilities, it lacks comprehensive and scalable modeling of app specifications and interactions, which limits the precision of analysis. To tackle these problems, we introduce VAnDroid3, a Model-Driven Reverse Engineering (MDRE) framework. VAnDroid3 utilizes purposeful model-based representations to enhance the comprehension of apps and their interactions. We have made significant extensions to our previous work, which include the identification of six prominent ICC vulnerabilities and the consideration of both Intent and Data sharing mechanisms that facilitate ICCs. By employing MDRE techniques to create more efficient and accurate domain-specific models from apps, VAnDroid3 enables the analysis of ICC vulnerabilities on intra- and inter-app communication levels. We have implemented VAnDroid3 as an Eclipse-based tool and conducted extensive experiments to evaluate its correctness, scalability, and run-time performance. Additionally, we compared VAnDroid3 with state-of-the-art tools. The results substantiate VAnDroid3 as a promising framework for revealing Android inter-app ICC security issues.
C1 [Nirumand, Atefeh] Luxembourg Inst Sci & Technol, Esch sur Alzette, Luxembourg.
   [Zamani, Bahman; Ladani, Behrouz Tork] Univ Isfahan, Fac Comp Engn, MDSE Res Grp, Esfahan, Iran.
C3 Luxembourg Institute of Science & Technology; University of Isfahan
RP Nirumand, A (corresponding author), Luxembourg Inst Sci & Technol, Esch sur Alzette, Luxembourg.
EM atefeh.nirumand@list.lu; zamani@eng.ui.ac.ir; ladani@eng.ui.ac.ir
CR Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Android Developers, Androif API reference
   [Anonymous], Github: secure-software-engineering/DroidBench
   [Anonymous], 1992, The Z Notation
   [Anonymous], 2017, Mobile OS market share
   [Anonymous], STATISTA - Number of Available Apps in the Apple App Store
   [Anonymous], Github: Jadx:Dex to java decompile
   [Anonymous], Android Developers: Intent and intetn filters
   [Anonymous], Github: fgwei/ICC-Bench
   [Anonymous], 2022, Statistics: Mobile App Download and Usage Statistics
   [Anonymous], Statistics: Most popular Google Play app categories as of 1st quarter 2022
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Backes M, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P1101
   Bagheri Hamid, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P514, DOI 10.1109/DSN.2016.53
   Bagheri H, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09932-6
   Bagheri H, 2018, FORM ASP COMPUT, V30, P525, DOI 10.1007/s00165-017-0445-z
   Bagheri H, 2015, IEEE T SOFTWARE ENG, V41, P866, DOI 10.1109/TSE.2015.2419611
   Bass L., 2003, Software architecture in practice
   Bondi A. B., 2000, Proceedings Second International Workshop on Software and Performance. WOSP2000, P195, DOI 10.1145/350391.350432
   Bosu AS, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P71, DOI 10.1145/3052973.3053004
   Brambilla M., 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.1007/978-3-031-02549-5, 10.2200/S00441ED1V01Y201208SWE001, DOI 10.2200/S00751ED2V01Y201701SWE004]
   Bruneliere H., 2018, Generic model-based approaches for software reverse engineering and comprehension
   Brunelière H, 2014, INFORM SOFTWARE TECH, V56, P1012, DOI 10.1016/j.infsof.2014.04.007
   Castro PF, 2015, FORM ASP COMPUT, V27, P831, DOI 10.1007/s00165-015-0336-0
   Chin Erika, 2011, MobiSys, P239, DOI DOI 10.1145/1999995.2000018
   Demissie BF, 2020, EMPIR SOFTW ENG, V25, P5084, DOI 10.1007/s10664-020-09879-8
   Dilhara M, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P67, DOI 10.1145/3197231.3197255
   Elish KO, 2020, IEEE T MOBILE COMPUT, V19, P90, DOI 10.1109/TMC.2018.2889495
   Elsabagh M, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P2379
   Fuchs A.P., 2009, University of Maryland, V2
   Gadient P, 2019, EMPIR SOFTW ENG, V24, P3046, DOI 10.1007/s10664-018-9673-y
   Gajrani J, 2020, DIGIT THREATS, V1, DOI 10.1145/3376121
   Garg S, 2021, COMPUT SECUR, V100, DOI 10.1016/j.cose.2020.102087
   Gordon MI, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23089
   Grace M.C., 2012, NDSS, V14
   Hammad M., 2018, Self-protection of android systems from inter-component communication attacks
   Hammad M, 2019, J SYST SOFTWARE, V149, P83, DOI 10.1016/j.jss.2018.11.049
   Jenkins J, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P80, DOI 10.1145/3197231.3197233
   Jenkins J, 2017, PROC IEEE INT CONF S, P519, DOI 10.1109/ICSME.2017.74
   Jha AK, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P113, DOI 10.1109/MobileSoft.2015.24
   Jouault F, 2008, SCI COMPUT PROGRAM, V72, P31, DOI 10.1016/j.scico.2007.08.002
   Klein J., 2021, P 2021 INT S ADV SEC, P1
   KLIEBER W., 2014, Proceedings of the 3rd ACM SIGPLAN International Workshop on the State of the Art in Java Program Analysis, P1
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Li R, 2022, IEEE T SOFTWARE ENG, V48, P4465, DOI 10.1109/TSE.2021.3119980
   Lu L., 2012, Proceedings of the 19th ACM Conference on Computer and Communications Security, P229, DOI DOI 10.1145/2382196.2382223
   Nirumand A., 2022, 2022 27 INT COMP C C, P1, DOI [10.1109/CSICC55295.2022.9780518, DOI 10.1109/CSICC55295.2022.9780518]
   Nirumand A, 2023, SOFTWARE PRACT EXPER, V53, P895, DOI 10.1002/spe.3171
   Nirumand A, 2019, SOFTWARE PRACT EXPER, V49, P70, DOI 10.1002/spe.2643
   Octeau D, 2016, ACM SIGPLAN NOTICES, V51, P469, DOI 10.1145/2914770.2837661
   Octeau D, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P77, DOI 10.1109/ICSE.2015.30
   Octeau Damien, 2013, P 22 USENIX SEC S, P543
   Patil Manisha, 2021, Computer Networks and Inventive Communication Technologies. Proceedings of Third ICCNCT 2020. Lecture Notes on Data Engineering and Communications Technologies (LNDECT 58), P1199, DOI 10.1007/978-981-15-9647-6_95
   Pauck F, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P331, DOI 10.1145/3236024.3236029
   Pressman R.S., 2005, Software Engineering: A Practitioner's Approach
   Qiu LN, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P176, DOI 10.1145/3213846.3213873
   Rai Pragati Ogal., 2013, Android Application Security Essentials
   Ranganath VP, 2020, EMPIR SOFTW ENG, V25, P178, DOI 10.1007/s10664-019-09749-y
   Ravitch T., 2014, P 4 PROGR PROT REV E, P1
   Sabir U, 2019, IEEE ACCESS, V7, P158931, DOI 10.1109/ACCESS.2019.2950884
   Sadeghi A, 2017, IEEE T SOFTWARE ENG, V43, P492, DOI 10.1109/TSE.2016.2615307
   Samhi J, 2021, PROC INT CONF SOFTW, P1398, DOI 10.1109/ICSE43902.2021.00126
   Senanayake J, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3556974
   Shahriar H., 2014, P 7 INT C SEC INF NE, P359, DOI [10.1145/2659651.2659716, DOI 10.1145/2659651.2659716]
   Six Jeff., 2011, APPL SECURITY ANDROI
   Talegaon S, 2021, INFORM SYST FRONT, V23, P849, DOI 10.1007/s10796-020-10066-9
   Talukder MAI, 2019, P INT COMP SOFTW APP, P565, DOI 10.1109/COMPSAC.2019.00087
   Tan ZY, 2023, PROC INT CONF SOFTW, P473, DOI 10.1109/ICSE48619.2023.00050
   Tiwari A, 2019, L N INST COMP SCI SO, V305, P335, DOI 10.1007/978-3-030-37231-6_19
   Tuncay GS, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23210
   Wang RW, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P351
   Wei FS, 2018, ANALYTICAL METHODS FOR FOOD SAFETY BY MASS SPECTROMETRY, VOL II VETERINARY DRUGS, P1, DOI [10.1016/B978-0-12-814165-6.00001-4, 10.1145/3183575]
   Woodcock J., 2011, Using Z
   Wu TY, 2019, FRONT COMPUT SCI-CHI, V13, P1210, DOI 10.1007/s11704-018-7008-1
   Yan JW, 2022, PROC IEEE ACM INT C, P105, DOI [10.1145/3510454.3516864, 10.1109/ICSE-Companion55297.2022.9793791]
   Zamani B., Technical Report
   Zhang J, 2021, COMPUT SECUR, V104, DOI 10.1016/j.cose.2020.102161
   Zhou Yajin., 2013, Proceedings of the 20th Annual Network Distributed System Security Symposium, NDSS'13, Reston, VA, USA
NR 79
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 45
DI 10.1007/s10515-024-00439-8
PG 61
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TA7S4
UT WOS:001238607100002
DA 2024-08-05
ER

PT J
AU Khan, AA
   Akbar, MA
   Lahtinen, V
   Paavola, M
   Niazi, M
   Alatawi, MN
   Alotaibi, SD
AF Khan, Arif Ali
   Akbar, Muhammad Azeem
   Lahtinen, Valtteri
   Paavola, Marko
   Niazi, Mahmood
   Alatawi, Mohammed Naif
   Alotaibi, Shoayee Dlaim
TI Agile meets quantum: a novel genetic algorithm model for predicting the
   success of quantum software development project
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Agile approaches; Quantum software development; Prediction model
ID DESIGN
AB Quantum software systems represent a new realm in software engineering, utilizing quantum bits (Qubits) and quantum gates (Qgates) to solve the complex problems more efficiently than classical counterparts. Agile software development approaches are considered to address many inherent challenges in quantum software development, but their effective integration remains unexplored. This study investigates key causes of challenges that could hinders the adoption of traditional agile approaches in quantum software projects and develop an Agile-Quantum Software Project Success Prediction Model (AQSSPM). Firstly, we identified 19 causes of challenging factors discussed in our previous study, which are potentially impacting agile-quantum project success. Secondly, a survey was conducted to collect expert opinions on these causes and applied Genetic Algorithm (GA) with Naive Bayes Classifier (NBC) and Logistic Regression (LR) to develop the AQSSPM. Utilizing GA with NBC, project success probability improved from 53.17 to 99.68%, with cost reductions from 0.463 to 0.403%. Similarly, GA with LR increased success rates from 55.52 to 98.99%, and costs decreased from 0.496 to 0.409% after 100 iterations. Both methods result showed a strong positive correlation (rs = 0.955) in causes ranking, with no significant difference between them (t = 1.195, p = 0.240 > 0.05). The AQSSPM highlights critical focus areas for efficiently and successfully implementing agile-quantum projects considering the cost factor of a particular project.
C1 [Khan, Arif Ali] Univ Oulu, Empir Software Engn Res Unit M3S, Oulu 90014, Finland.
   [Akbar, Muhammad Azeem] Lappeenranta Lahti Univ Technol, Software Engn Dept, Lappeenranta 53851, Finland.
   [Lahtinen, Valtteri] Quanscient Oy, Tampere, Finland.
   [Paavola, Marko] VTT Tech Res Ctr Finland Ltd, Oulu, Finland.
   [Niazi, Mahmood] King Fahd Univ Petr & Minerals, Dept Informat & Comp Sci, Dhahran, Saudi Arabia.
   [Niazi, Mahmood] King Fahd Univ Petr & Minerals, Interdisciplinary Res Ctr Intelligent Secure Syst, Dhahran, Saudi Arabia.
   [Alatawi, Mohammed Naif] Univ Tabuk, Fac Comp & Informat Technol, Informat Technol Dept, Tabuk, Saudi Arabia.
   [Alotaibi, Shoayee Dlaim] Univ Hail, Coll Comp Sci & Engn, Dept Artificial Intelligence & Data Sci, Hail 81481, Saudi Arabia.
C3 University of Oulu; Lappeenranta-Lahti University of Technology LUT; VTT
   Technical Research Center Finland; King Fahd University of Petroleum &
   Minerals; King Fahd University of Petroleum & Minerals; University of
   Tabuk; University Ha'il
RP Khan, AA (corresponding author), Univ Oulu, Empir Software Engn Res Unit M3S, Oulu 90014, Finland.
EM arif.khan@oulu.fi; azeem.akbar@lut.fi; valtteri.lahtinen@quanscient.com;
   marko.paavola@vtt.fi; mkniazi@kfupm.edu.sa; alatawimn@ut.edu.sa;
   s.alotaibi@uoh.edu.sa
RI alotaibi, Shoayee/GNM-8020-2022; Alatawi, Mohammed/HTN-1049-2023
OI alotaibi, Shoayee/0000-0002-8891-6421; Alatawi,
   Mohammed/0009-0000-0808-3638
FU University of Oulu (including Oulu University Hospital)
FX The authors acknowledge that they used generative AI tools, including
   ChatGPT, and the writing assistant tool Grammarly, which were
   instrumental in addressing writing issues in this paper. It is important
   to note that using these tools, the authors conducted a thorough review
   and made substantial modifications to the content. The authors assume
   complete responsibility for the final content of the paper.
CR Ahmad A, 2022, 2022 IEEE INTERNATIONAL CONFERENCE ON QUANTUM SOFTWARE (IEEE QSW 2022), P26, DOI 10.1109/QSW55613.2022.00019
   Akbar M.A., 2022, arXiv, DOI [10.48550/arxiv.2211.13990, DOI 10.48550/ARXIV.2211.13990]
   Akbar MA, 2023, AUTOMAT SOFTW ENG, V30, DOI 10.1007/s10515-023-00389-7
   Akbar MA, 2023, INFORM TECHNOL MANAG, V24, P195, DOI 10.1007/s10799-022-00364-w
   Ali Shaukat, 2022, Communications of the ACM, V65, P84, DOI 10.1145/3512340
   Alsghaier H, 2020, SOFTWARE PRACT EXPER, V50, P407, DOI 10.1002/spe.2784
   [Anonymous], 2023, What is sustainable software development.
   Berrar D., 2018, Ency. Bioinform. Comput. Biol.: ABC Bioinform, P403, DOI DOI 10.1016/B978-0-12-809633-8.20473-1
   Bilgaiyan S., 2020, J. Towards Bio-inspired Tech. Softw. Eng., P89
   Carleton A, 2022, COMPUTER, V55, P89, DOI 10.1109/MC.2022.3187912
   Cerpa N, 2016, J SYST SOFTWARE, V112, P48, DOI 10.1016/j.jss.2015.10.011
   De Stefano M, 2022, J SYST SOFTWARE, V190, DOI 10.1016/j.jss.2022.111326
   de Winter JCF, 2016, PSYCHOL METHODS, V21, P273, DOI 10.1037/met0000079
   Fitzgerald B, 2006, EUR J INFORM SYST, V15, P200, DOI 10.1057/palgrave.ejis.3000605
   Fowler M., 2001, Software Development, V9, P28
   Gonzalez Guillermo Jose Hernandez, 2020, Quality of Information and Communications Technology, P284, DOI DOI 10.1007/978-3-030-58793-223
   Google, 2022, Cirq.
   HOLLAND JH, 1992, SCI AM, V267, P66, DOI 10.1038/scientificamerican0792-66
   Hu P, 2020, KNOWL-BASED SYST, V195, DOI 10.1016/j.knosys.2020.105746
   IBM, 2021, Qiskit
   Khan A. A., 2023, IEEE Trans Comput Soc Syst
   Khan AA, 2022, PROCEEDINGS OF THE 1ST INTERNATIONAL WORKSHOP ON QUANTUM PROGRAMMING FOR SOFTWARE ENGINEERING, QP4SE 2022, P11, DOI 10.1145/3549036.3562057
   Khan AA, 2023, 2023 IEEE INTERNATIONAL CONFERENCE ON QUANTUM SOFTWARE, QSW, P9, DOI 10.1109/QSW59989.2023.00012
   Khan AA, 2023, J SYST SOFTWARE, V201, DOI 10.1016/j.jss.2023.111682
   Khan AA, 2021, APPL SOFT COMPUT, V102, DOI 10.1016/j.asoc.2021.107090
   Khan AA, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2242
   Khan AA, 2017, INFORM SOFTWARE TECH, V87, P180, DOI 10.1016/j.infsof.2017.03.006
   Komaki GM, 2015, J COMPUT SCI-NETH, V8, P109, DOI 10.1016/j.jocs.2015.03.011
   Kotsiantis SB, 2006, ARTIF INTELL REV, V26, P159, DOI [10.1007/s10462-007-9052-3, 10.1007/S10462-007-9052-3]
   Kumar A, 2023, EVOL SYST-GER, V14, P141, DOI 10.1007/s12530-022-09432-6
   Lester M, 2020, AI EDAM, V34, P132, DOI 10.1017/S0890060420000037
   Mahmoodabadi MJ, 2013, APPL SOFT COMPUT, V13, P2577, DOI 10.1016/j.asoc.2012.11.028
   Microsoft, 2021, Q# and the quantum development kit
   Mirjalili S, 2019, STUD COMPUT INTELL, V780, P43, DOI 10.1007/978-3-319-93025-1_4
   Mirjalili S, 2014, ADV ENG SOFTW, V69, P46, DOI 10.1016/j.advengsoft.2013.12.007
   Mitchell M., 1998, INTRO GENETIC ALGORI, DOI DOI 10.1016/S0898-1221(96)90227-8
   Moguel Enrique, 2020, QCE, P5
   Myers L., 2004, Encyclop. Stat. Sci., V12
   Piattini M, 2021, IT PROF, V23, P62, DOI 10.1109/MITP.2020.3019522
   Rieffel E., 2011, Quantum Computing: A Gentle Introduction
   Shameem M, 2023, APPL SOFT COMPUT, V135, DOI 10.1016/j.asoc.2023.109998
   Wang XY, 2022, PROCEEDINGS OF THE 2022 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'22), P1345, DOI 10.1145/3512290.3528869
   Wang XY, 2021, LECT NOTES COMPUT SC, V12914, P9, DOI 10.1007/978-3-030-88106-1_2
   Weder B., 2022, Quantum Software Engineering, P61, DOI DOI 10.1007/978-3-031-05324-54
   Wohlin C., 2012, Experimentation in Software Engineering, DOI [10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
   Zhao J., 2020, arXiv
NR 47
TC 0
Z9 0
U1 6
U2 6
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 34
DI 10.1007/s10515-024-00434-z
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MZ4U9
UT WOS:001197452600001
OA hybrid
DA 2024-08-05
ER

PT J
AU Li, ZQ
   Niu, JW
   Jing, XY
AF Li, Zhiqiang
   Niu, Jingwen
   Jing, Xiao-Yuan
TI Software defect prediction: future directions and challenges
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Software defect prediction; Empirical software engineering; Software
   analytics; Quality assurance
ID FRAMEWORK; MODELS; CODE
AB Software defect prediction is one of the most popular research topics in software engineering. The objective of defect prediction is to identify defective instances prior to the occurrence of software defects, thus it aids in more effectively prioritizing software quality assurance efforts. In this article, we delve into various prospective research directions and potential challenges in the field of defect prediction. The aim of this article is to propose a range of defect prediction techniques and methodologies for the future. These ideas are intended to enhance the practicality, explainability, and actionability of the predictions of defect models.
C1 [Li, Zhiqiang] Shaanxi Normal Univ, Sch Comp Sci, Xian 710119, Peoples R China.
   [Niu, Jingwen] Xinxiang Univ, Sch Comp & Informat Engn, Xinxiang 453003, Peoples R China.
   [Jing, Xiao-Yuan] Wuhan Univ, Sch Comp Sci, Wuhan 430072, Peoples R China.
   [Jing, Xiao-Yuan] Guangdong Univ Petrochem Technol, Sch Comp, Maoming 525000, Peoples R China.
C3 Shaanxi Normal University; Xinxiang University; Wuhan University;
   Guangdong University of Petrochemical Technology
RP Li, ZQ (corresponding author), Shaanxi Normal Univ, Sch Comp Sci, Xian 710119, Peoples R China.
EM lizq@snnu.edu.cn; niujw66@163.com; jingxy_2000@126.com
FU National Natural Science Foundation Project of China
FX No Statement Available
CR Bird C, 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Chen HW, 2021, IEEE T SOFTWARE ENG, V47, P2803, DOI 10.1109/TSE.2020.2968520
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Giray G, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111537
   Guo ZQ, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3582572
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Dam HK, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P53, DOI 10.1145/3183399.3183424
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Jiarpakdee J, 2021, IEEE WORK CONF MIN S, P432, DOI 10.1109/MSR52588.2021.00055
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Jiarpakdee J, 2021, IEEE T SOFTWARE ENG, V47, P320, DOI 10.1109/TSE.2019.2891758
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Kamei Y, 2010, PROC IEEE INT CONF S
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li N, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106287
   Li ZQ, 2023, IEEE T SOFTWARE ENG, V49, P1941, DOI 10.1109/TSE.2022.3204589
   Li ZQ, 2021, IEEE T RELIAB, V70, P996, DOI 10.1109/TR.2021.3074660
   Li ZQ, 2019, AUTOMAT SOFTW ENG, V26, P599, DOI 10.1007/s10515-019-00259-1
   Li ZQ, 2019, IEEE T SOFTWARE ENG, V45, P391, DOI 10.1109/TSE.2017.2780222
   Li ZQ, 2018, IET SOFTW, V12, P161, DOI 10.1049/iet-sen.2017.0148
   Li ZQ, 2018, AUTOMAT SOFTW ENG, V25, P201, DOI 10.1007/s10515-017-0220-7
   Li ZQ, 2018, SOFTW TEST VERIF REL, V28, DOI 10.1002/stvr.1658
   Li ZQ, 2017, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2017.19
   liwerski J., 2005, ACM sigsoft software engineering notes, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147]
   Lo SK, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3450288
   Mende T, 2010, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2010.18
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Ni C, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P672, DOI 10.1145/3540250.3549165
   Ni C, 2022, IEEE T SOFTWARE ENG, V48, P786, DOI 10.1109/TSE.2020.3001739
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Pornprasit C, 2023, IEEE T SOFTWARE ENG, V49, P84, DOI 10.1109/TSE.2022.3144348
   Pornprasit C, 2021, IEEE WORK CONF MIN S, P369, DOI 10.1109/MSR52588.2021.00049
   Samoaa HP, 2022, IET SOFTW, V16, P351, DOI 10.1049/sfw2.12064
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shihab E, 2013, INFORM SOFTWARE TECH, V55, P1981, DOI 10.1016/j.infsof.2013.06.002
   Tang LX, 2023, IEEE INT CONF AUTOM, P1024, DOI 10.1109/ASE56229.2023.00037
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Tantithamthavorn C, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1, DOI 10.1109/ASE51524.2021.9678580
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   Wang H, 2021, IEEE T RELIAB, V70, P711, DOI 10.1109/TR.2020.3047396
   Wattanakriengkrai S, 2022, IEEE T SOFTWARE ENG, V48, P1480, DOI 10.1109/TSE.2020.3023177
   Wu R, 2011, SIGSOFT FSE, P15, DOI DOI 10.1145/2025113.2025120
   Xu JZ, 2021, IMPACT ASSESS PROJ A, V39, P429, DOI [10.1109/TR.2020.3040191, 10.1080/14615517.2020.1848242]
   Xu Z, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110862
   Yamamoto H, 2023, Soft Anal Evol Reeng, P485, DOI 10.1109/SANER56733.2023.00052
   Yang YM, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3505243
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Zain ZM, 2023, INFORM SOFTWARE TECH, V158, DOI 10.1016/j.infsof.2023.107175
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhao YH, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3567550
   Zhou CY, 2022, INFORM SOFTWARE TECH, V152, DOI 10.1016/j.infsof.2022.107057
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 71
TC 1
Z9 1
U1 22
U2 22
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 19
DI 10.1007/s10515-024-00424-1
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JC9K5
UT WOS:001171073400001
DA 2024-08-05
ER

PT J
AU Côté, PO
   Nikanjam, A
   Ahmed, N
   Humeniuk, D
   Khomh, F
AF Cote, Pierre-Olivier
   Nikanjam, Amin
   Ahmed, Nafisa
   Humeniuk, Dmytro
   Khomh, Foutse
TI Data cleaning and machine learning: a systematic literature review
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning; Data cleaning; Systematic literature review; Survey;
   Taxonomy
ID OUTLIER DETECTION; ERROR; QUALITY
AB Machine Learning (ML) is integrated into a growing number of systems for various applications. Because the performance of an ML model is highly dependent on the quality of the data it has been trained on, there is a growing interest in approaches to detect and repair data errors (i.e., data cleaning). Researchers are also exploring how ML can be used for data cleaning; hence creating a dual relationship between ML and data cleaning. To the best of our knowledge, there is no study that comprehensively reviews this relationship. This paper's objectives are twofold. First, it aims to summarize the latest approaches for data cleaning for ML and ML for data cleaning. Second, it provides future work recommendations. We conduct a systematic literature review of the papers published between 2016 and 2022 inclusively. We identify different types of data cleaning activities with and for ML: feature cleaning, label cleaning, entity matching, outlier detection, imputation, and holistic data cleaning. We summarize the content of 101 papers covering various data cleaning activities and provide 24 future work recommendations. Our review highlights many promising data cleaning techniques that can be further extended. We believe that our review of the literature will help the community develop better approaches to clean data.
C1 [Cote, Pierre-Olivier; Nikanjam, Amin; Ahmed, Nafisa; Humeniuk, Dmytro; Khomh, Foutse] Polytech Montreal, Quebec City, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Côté, PO (corresponding author), Polytech Montreal, Quebec City, PQ, Canada.
EM pierre-olivier.cote@polymtl.ca; amin.nikanjam@polymtl.ca;
   nafisa.abdelmutalab-ali-ahmed@polymtl.ca; dmytro.humeniuk@polymtl.ca;
   foutse.khomh@polymtl.ca
OI Ahmed, Nafisa/0000-0001-9404-6410
FU Fonds de recherche du Qubec; Fonds de Recherche du Quebec (FRQ);
   Canadian Institute for Advanced Research (CIFAR); Natural Sciences and
   Engineering Research Council of Canada (NSERC)
FX This work is funded by the Fonds de Recherche du Quebec (FRQ), the
   Canadian Institute for Advanced Research (CIFAR), and the Natural
   Sciences and Engineering Research Council of Canada (NSERC). We would
   like to thank Dr. Hyacinth Ali for contributing to improving this SLR
   with his valuable comments.
CR Abedjan Z, 2016, PROC VLDB ENDOW, V9, P993
   Abidin NZ, 2018, INT J ADV COMPUT SC, V9, P442
   Abiteboul S., 1995, Foundations of Databases, DOI DOI 10.5555/551350
   Adhikari D, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3533381
   AggarwalCharu C., 2013, Data clustering: algorithms and applications
   Agrawal A, 2019, Arxiv, DOI arXiv:1909.00084
   Akouemo HN, 2017, IEEE T POWER SYST, V32, P3352, DOI 10.1109/TPWRS.2017.2656939
   Alimohammadi H, 2022, EXPERT SYST APPL, V191, DOI 10.1016/j.eswa.2021.116371
   Alsolai H, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106214
   [Anonymous], 2022, Common problems
   Araci D, 2019, Arxiv, DOI arXiv:1908.10063
   Ataeyan M, 2020, EXPERT SYST APPL, V159, DOI 10.1016/j.eswa.2020.113511
   Atkinson G, 2021, THE 14TH ACM INTERNATIONAL CONFERENCE ON PERVASIVE TECHNOLOGIES RELATED TO ASSISTIVE ENVIRONMENTS, PETRA 2021, P203, DOI 10.1145/3453892.3453900
   Atkinson G, 2020, UBICOMP/ISWC '20 ADJUNCT: PROCEEDINGS OF THE 2020 ACM INTERNATIONAL JOINT CONFERENCE ON PERVASIVE AND UBIQUITOUS COMPUTING AND PROCEEDINGS OF THE 2020 ACM INTERNATIONAL SYMPOSIUM ON WEARABLE COMPUTERS, P238, DOI 10.1145/3410530.3414366
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Bach SH., 2017, Journal of Machine Learning Research (JMLR), V18, P1
   Badue C, 2021, EXPERT SYST APPL, V165, DOI 10.1016/j.eswa.2020.113816
   Bagherzadeh P, 2017, INT J MACH LEARN CYB, V8, P903, DOI 10.1007/s13042-015-0474-y
   Bank D., 2020, Autoencoders, DOI DOI 10.48550/ARXIV.2003.05991
   Barlaug N, 2021, ACM T KNOWL DISCOV D, V15, DOI 10.1145/3442200
   Beltagy I., 2019, arXiv
   Ben Braiek H, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110542
   Ben-Gal I., 2005, Data Mining and Knowledge Discovery Handbook
   Berger J, 2014, PHILOS PSYCHOL, V27, P829, DOI 10.1080/09515089.2013.771241
   Bernhardt M, 2022, NAT COMMUN, V13, DOI 10.1038/s41467-022-28818-3
   Berti-Equille L, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2580, DOI 10.1145/3308558.3313602
   Berti-Equille L, 2018, PROC INT CONF DATA, P1735, DOI 10.1109/ICDE.2018.00226
   Bhandari K, 2023, ARTIF INTELL REV, V56, P7839, DOI 10.1007/s10462-022-10371-6
   Bishop CM., 2006, PATTERN RECOGN
   Bogatu A, 2021, PROC INT CONF DATA, P1272, DOI 10.1109/ICDE51399.2021.00114
   Bojanowski Piotr, 2017, T ASSOC COMPUT LING, V5, P135, DOI [10.48550/arXiv.1607.04606, DOI 10.1162/TACLA00051]
   Bosu MF, 2013, IEEE AUS SOFT ENGR, P97, DOI 10.1109/ASWEC.2013.21
   Boukerche A, 2020, ACM COMPUT SURV, V53, DOI [10.1145/3421763, 10.1145/3381028]
   Brunner U., 2020, 23 INT C EXT DAT TEC
   CARPENTER GA, 1991, NEURAL NETWORKS, V4, P759, DOI 10.1016/0893-6080(91)90056-B
   Cer D, 2018, Arxiv, DOI arXiv:1803.11175
   Chai CL, 2023, IEEE T KNOWL DATA EN, V35, P4646, DOI 10.1109/TKDE.2022.3148237
   Chasmai ME, 2021, Arxiv, DOI arXiv:2111.06036
   Chen M., 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Chen T, 2020, PR MACH LEARN RES, V119
   Cheng KW, 2022, Arxiv, DOI [arXiv:2202.09747, 10.48550/ARXIV.2202.09747]
   Cholewiak Steven, 2023, Zenodo, DOI 10.5281/ZENODO.5764801
   Christophides V, 2021, ACM COMPUT SURV, V53, DOI 10.1145/3418896
   Chu X, 2016, SIGMOD'16: PROCEEDINGS OF THE 2016 INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P2201, DOI 10.1145/2882903.2912574
   cnet, 2023, about Us
   Cote P.O., 2023, The replication package
   Côté PO, 2023, Arxiv, DOI arXiv:2306.15007
   Croft R, 2023, PROC INT CONF SOFTW, P121, DOI 10.1109/ICSE48619.2023.00022
   Croft R, 2023, IEEE T SOFTWARE ENG, V49, P1044, DOI 10.1109/TSE.2022.3171202
   Cubuk ED, 2019, PROC CVPR IEEE, P113, DOI 10.1109/CVPR.2019.00020
   Das S., 2016, The Magellan Data Repository
   DEMPSTER AP, 1967, ANN MATH STAT, V38, P325, DOI 10.1214/aoms/1177698950
   Dempster AP, 2008, STUD FUZZ SOFT COMP, V219, P57
   Deng J, 2009, PROC CVPR IEEE, P248, DOI 10.1109/CVPRW.2009.5206848
   Dolatshah M, 2018, PROC VLDB ENDOW, V12, P376, DOI 10.14778/3297753.3297758
   Domingues R, 2018, PATTERN RECOGN, V74, P406, DOI 10.1016/j.patcog.2017.09.037
   Dong XL, 2018, INT CONF MANAGE DATA, P1645, DOI 10.1145/3183713.3197387
   Dongzhen Liu, 2020, Proceedings. 2020 International Conference on Intelligent Computing, Automation and Systems (ICICAS), P450, DOI 10.1109/ICICAS51530.2020.00099
   Dosovitskiy A, 2021, Arxiv, DOI arXiv:2010.11929
   Ebraheem M, 2018, PROC VLDB ENDOW, V11, P1454, DOI 10.14778/3236187.3236198
   Ekambaram R, 2016, PATTERN RECOGN, V51, P463, DOI 10.1016/j.patcog.2015.09.020
   Felderer M., 2019, Security and Quality in Cyber-Physical Systems Engineering: With Forewords, P129
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Feng W, 2023, J SYST ENG ELECTRON, V34, P36, DOI 10.23919/JSEE.2023.000034
   Fernandez RC, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1639, DOI 10.1145/3035918.3058740
   Filippone M, 2010, PATTERN RECOGN, V43, P805, DOI 10.1016/j.patcog.2009.07.002
   Flokas L, 2022, INT CONF MANAGE DATA, P369, DOI 10.1145/3514221.3517849
   Foidl H, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P13, DOI 10.1145/3340482.3342743
   Fox TL, 1999, J COMPUT INFORM SYST, V40, P76
   Freund Y, 1997, MACH LEARN, V28, P133, DOI 10.1023/A:1007330508534
   Fu C, 2020, PROCEEDINGS OF THE TWENTY-NINTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3665
   Gal Y., 2016, PhD Thesis
   Gal Y, 2016, Arxiv, DOI arXiv:1506.02142
   Gauen K, 2017, 2017 IEEE 18TH INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IEEE IRI 2017), P346, DOI 10.1109/IRI.2017.59
   Ge CC, 2022, IEEE T KNOWL DATA EN, V34, P2048, DOI 10.1109/TKDE.2020.3012472
   Gemp I., 2017, 20 9 IAAI C
   Gezici B, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10105-2
   Gitnux A., 2023, Self driving cars safety statistics and trends in 2023 gitnux
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Goodfellow J., 2014, arXiv, DOI DOI 10.48550/ARXIV.1406.2661
   Gottapu RD, 2016, PROCEDIA COMPUT SCI, V95, P153, DOI 10.1016/j.procs.2016.09.306
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Grill JeanBastien, Advances in neural information processing systems, V33, P21271
   Guan HJ, 2016, INT C PATT RECOG, P456, DOI 10.1109/ICPR.2016.7899676
   Guo G., 2018, Automated cleaning of identity label noise in a large-scale face dataset using a face image quality control
   Guo YJ, 2023, Security and Privacy, P29, DOI 10.1109/EuroSPW59978.2023.00008
   Guo ZH, 2019, Arxiv, DOI arXiv:1905.01425
   Oliveira PH, 2020, Arxiv, DOI arXiv:2011.04730
   Han B, 2018, Arxiv, DOI [arXiv:1804.06872, 10.48550/ARXIV.1804.06872]
   Hara S, 2019, ADV NEUR IN, V32
   Hawkins D. M., 1980, Identification of outliers, V11, DOI DOI 10.1007/978-94-015-3994-4
   He X, 2021, KNOWL-BASED SYST, V212, DOI 10.1016/j.knosys.2020.106622
   He Y. etal, 2021, Comput. Intell. Neurosci.
   Heidari A, 2019, INT CONF MANAGE DATA, P829, DOI 10.1145/3299869.3319888
   Hendrycks D, 2018, Arxiv, DOI arXiv:1610.02136
   Hernandez-Garc¡a A, 2020, Arxiv, DOI [arXiv:1806.03852, DOI 10.48550/ARXIV.1806.03852]
   Huang JC, 2023, VLDB J, V32, P229, DOI 10.1007/s00778-022-00745-1
   Huang JC, 2019, IEEE I CONF COMP VIS, P3325, DOI 10.1109/ICCV.2019.00342
   Huang Zhongtao, 2021, 2021 7th International Conference on Computer and Communications (ICCC), DOI 10.1109/ICCC54389.2021.9674334
   Hurakadli V., 2019, 2019 IEEE INT C EL I, P1
   Hwang P, 2022, INT CONF UBIQUIT INF, DOI 10.1109/IMCOM53663.2022.9721724
   Ilyas I.F., 2019, ser. ACM Books
   Ilyas IF, 2022, ACM J DATA INF QUAL, V14, DOI 10.1145/3506712
   Indyk P., 1998, Proceedings of the Thirtieth Annual ACM Symposium on Theory of Computing, P604, DOI 10.1145/276698.276876
   Jiang WY, 2023, AAAI CONF ARTIF INTE, P14910
   Jin Di., DEEP TRANSFER LEARNI
   Johnson J, 2021, IEEE T BIG DATA, V7, P535, DOI 10.1109/TBDATA.2019.2921572
   Johnson JM, 2022, ACM J DATA INF QUAL, V14, DOI 10.1145/3492546
   Kang ZQ, 2020, COMPUT IND ENG, V149, DOI 10.1016/j.cie.2020.106773
   Karimi D, 2020, MED IMAGE ANAL, V65, DOI 10.1016/j.media.2020.101759
   Karlas B, 2020, Arxiv, DOI arXiv:2005.05117
   Kasai J, 2019, Arxiv, DOI arXiv:1906.08042
   Ke XX, 2019, PROCEEDINGS OF 2019 IEEE 8TH JOINT INTERNATIONAL INFORMATION TECHNOLOGY AND ARTIFICIAL INTELLIGENCE CONFERENCE (ITAIC 2019), P672, DOI [10.1109/ITAIC.2019.8785558, 10.1109/itaic.2019.8785558]
   Kim J, 2012, J MACH LEARN RES, V13, P2529
   Kitchenham B., 2004, PROCEDURES PERFORMIN, DOI DOI 10.5144/0256-4947.2017.79
   Klie J.C., 2022, Comput. Linguist, P1
   Knill KM, 2019, INT CONF ACOUST SPEE, P8127, DOI [10.17863/cam.42085, 10.1109/ICASSP.2019.8683080]
   Koh PW, 2017, PR MACH LEARN RES, V70
   Kohler J.M., 2019, CVPR WORKSHOPS, P33
   Kriegel HP, 2009, LECT NOTES ARTIF INT, V5476, P831, DOI 10.1007/978-3-642-01307-2_86
   Krishnan S, 2017, Arxiv, DOI arXiv:1711.01299
   Krishnan S, 2019, Arxiv, DOI arXiv:1904.11827
   Krishnan S, 2016, PROC VLDB ENDOW, V9, P948
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Lakshminarayan K, 1999, APPL INTELL, V11, P259, DOI 10.1023/A:1008334909089
   Lakshminarayanan B, 2017, Arxiv, DOI arXiv:1612.01474
   Lattar Hafsa, 2020, Procedia Computer Science, V176, P1131, DOI 10.1016/j.procs.2020.09.109
   Lee KH, 2018, PROC CVPR IEEE, P5447, DOI 10.1109/CVPR.2018.00571
   Lew A., 2021, INT C ARTIFICIAL INT, P1927
   Li B, 2020, AAAI CONF ARTIF INTE, V34, P8172
   Li P., 2019, arXiv preprint arXiv:1904.09483, pp75
   Li YL, 2020, Arxiv, DOI arXiv:2004.00584
   Liang QY, 2023, Arxiv, DOI arXiv:2308.06898
   Liebchen G. A., 2008, P 4 INT WORKSH PRED, P39, DOI [10.1145/1370788.1370799, DOI 10.1145/1370788.1370799]
   Liebchen Gernot, 2016, P 12 INT C PRED MOD, DOI DOI 10.1145/2972958.2972967
   Lim S, 2019, ADV NEUR IN, V32
   Lin WC, 2020, ARTIF INTELL REV, V53, P1487, DOI 10.1007/s10462-019-09709-4
   Liu FT, 2008, IEEE DATA MINING, P413, DOI 10.1109/ICDM.2008.17
   Liu YZ, 2020, IEEE T KNOWL DATA EN, V32, P1517, DOI 10.1109/TKDE.2019.2905606
   Liu ZY, 2023, VLDB J, V32, P595, DOI 10.1007/s00778-022-00760-2
   Mahdavi M., 2021, CIDR
   Mahdavi M, 2020, PROC VLDB ENDOW, V13, P1948, DOI 10.14778/3407790.3407801
   Mahdavi M, 2019, INT CONF MANAGE DATA, P865, DOI 10.1145/3299869.3324956
   Marsland S, 2002, NEURAL NETWORKS, V15, P1041, DOI 10.1016/S0893-6080(02)00078-3
   Martínez-Fernández S, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3487043
   Mauritz RR, 2021, Arxiv, DOI arXiv:2106.09764
   Mayfield Chris, 2010, P 2010 ACM SIGMOD IN, P75, DOI DOI 10.1145/1807167.1807178
   Mazumder M, 2023, Arxiv, DOI [arXiv:2207.10062, 10.48550/arXiv.2207.10062]
   Meduri V, 2020, SIGMOD'20: PROCEEDINGS OF THE 2020 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1133, DOI 10.1145/3318464.3380597
   Miao ZJ, 2021, INT CONF MANAGE DATA, P1303, DOI 10.1145/3448016.3457258
   Motulsky HJ, 2006, BMC BIOINFORMATICS, V7, DOI 10.1186/1471-2105-7-123
   Mudgal S, 2018, INT CONF MANAGE DATA, P19, DOI 10.1145/3183713.3196926
   Müller H, 2021, PROC VLDB ENDOW, V14, P2763, DOI 10.14778/3476311.3476339
   Narayan A, 2022, Arxiv, DOI arXiv:2205.09911
   Nashaat Mona, 2021, ACM/IMS Transactions on Data Science, V2, DOI 10.1145/3447541
   Nassif AB, 2021, IEEE ACCESS, V9, P78658, DOI 10.1109/ACCESS.2021.3083060
   Neutatz F., 2021, IEEE Data Eng. Bull., V44, P24
   Neutatz F, 2019, Arxiv, DOI arXiv:1908.06309
   Ng A., 2021, CHAT ANDREW MLOPS MO
   Ng A, 2021, Data-Centric AI Competition
   Nie H, 2019, PROCEEDINGS OF THE 28TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM '19), P629, DOI 10.1145/3357384.3358018
   Northcutt CG, 2021, Arxiv, DOI [arXiv:1911.00068, 10.48550/ARXIV.1911.00068, 10.1613/jair.1.12125]
   Spithourakis GP, 2016, Arxiv, DOI arXiv:1608.04147
   Pang GS, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3439950
   Papastefanopoulos V, 2021, ELECTRONICS-SWITZ, V10, DOI 10.3390/electronics10182236
   Patel H., P 5 JOINT INT C DAT
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pennington J., 2014, P C EMP METH NAT LAN, P1532, DOI DOI 10.3115/V1/D14-1162
   Pham M., 2021, IJCAI, P3543
   Pise Nitin N., 2008, 2008 International Conference on Computational Intelligence and Security, P30, DOI 10.1109/CIS.2008.204
   Pit-Claudel C., 2016, Tech. rep., MIT-Computer Science and Artificial Intelligence Laboratory (MIT-CSAIL-TR-2016-002
   Ponzio F, 2021, Arxiv, DOI arXiv:2103.13107
   Pouyanfar S, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3234150
   Press G., 2022, Cleaning big data: Most time-consuming, least enjoyable data science task, survey says
   Qian K, 2017, CIKM'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1379, DOI 10.1145/3132847.3132949
   Rahm Erhard, 2000, proceedings of IEEE Bulletin of Technical Committee on Data Engineering, V23, P3, DOI DOI 10.1145/1317331.1317341
   Razavi-Far R, 2020, KNOWL-BASED SYST, V187, DOI 10.1016/j.knosys.2019.06.013
   Rehbein I, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1160, DOI 10.18653/v1/P17-1107
   Rei M, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P1181
   Rekatsinas T, 2017, Arxiv, DOI arXiv:1702.00820
   Ren MY, 2018, PR MACH LEARN RES, V80
   Roh Y, 2021, IEEE T KNOWL DATA EN, V33, P1328, DOI 10.1109/TKDE.2019.2946162
   ROSNER B, 1983, TECHNOMETRICS, V25, P165, DOI 10.2307/1268549
   Rottmann M, 2023, IEEE WINT CONF APPL, P3213, DOI 10.1109/WACV56688.2023.00323
   Russakovsky O, 2015, INT J COMPUT VISION, V115, P211, DOI 10.1007/s11263-015-0816-y
   Salekshahrezaee Z, 2021, J BIG DATA-GER, V8, DOI 10.1186/s40537-021-00447-5
   Sambasivan N., 2021, P 2021 CHI C HUM FAC, P1, DOI [DOI 10.1145/3411764.3445518, 10.1145/3411764.3445518]
   Santos EA., 2017, PeerJ PrePrints, V5, pe3123v1
   Sarker Iqbal H, 2021, SN Comput Sci, V2, P420, DOI 10.1007/s42979-021-00815-1
   Schölkopf B, 2000, ADV NEUR IN, V12, P582
   Shi JL, 2021, LECT NOTES COMPUT SC, V12901, P668, DOI 10.1007/978-3-030-87193-2_63
   Shi L, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P107, DOI 10.1145/3540250.3549145
   Silva-Ramírez EL, 2021, NEURAL COMPUT APPL, V33, P8981, DOI 10.1007/s00521-020-05661-5
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Smyth L., 2020, Training-Valuenet: A New Approach for Label Cleaning on Weakly-Supervised Datasets
   Song H, 2023, IEEE T NEUR NET LEAR, V34, P8135, DOI 10.1109/TNNLS.2022.3152527
   Song S., arXiv
   Studer S, 2021, MACH LEARN KNOW EXTR, V3, P392, DOI 10.3390/make3020020
   Su JZ, 2021, INT SYM MED INFORM, P98, DOI 10.1109/ISMICT51748.2021.9434911
   Surameery N.M.S., 2023, International Journal of Information Technology & Computer Engineering (IJITC), V3, P17, DOI DOI 10.55529/IJITC.31.17.22
   Suzuki Kenji., 2021, arXiv
   Tae K.H., 2019, P 3 INT WORKSH DAT M, P1
   Tambon F, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-022-00337-x
   Tang N, 2021, Arxiv, DOI arXiv:2012.02469
   Tawfik NS, 2020, J BIOMED INFORM, V104, DOI 10.1016/j.jbi.2020.103396
   Team S., 2024, Data-centric AI for the enterprise
   Terrades OR, 2022, BIG DATA RES, V29, DOI 10.1016/j.bdr.2022.100332
   Teso S., 2021, Advances in Neural Information Processing Systems, V34, P12966
   Tfwala SS, 2013, SCI WORLD J, DOI 10.1155/2013/584516
   Thekumparampil KK, 2018, ADV NEUR IN, V31
   Thirumuruganathan S, 2020, EDBT, P277
   Tonolini F, 2020, Arxiv, DOI arXiv:2006.16938
   Vaswani A, 2023, Arxiv, DOI arXiv:1706.03762
   Vaswani A, 2017, ADV NEUR IN, V30
   Veit A, 2017, PROC CVPR IEEE, P6575, DOI 10.1109/CVPR.2017.696
   Visengeriyeva L., 2016, ICIQ, P220
   Visengeriyeva L, 2018, 30TH INTERNATIONAL CONFERENCE ON SCIENTIFIC AND STATISTICAL DATABASE MANAGEMENT (SSDBM 2018), DOI 10.1145/3221269.3223028
   Wang HZ, 2019, IEEE ACCESS, V7, P107964, DOI 10.1109/ACCESS.2019.2932769
   Wang Q., 2020, 2020 INT JOINT C NEU, P1
   Wang RH, 2022, Arxiv, DOI arXiv:2207.04122
   Wang X, 2020, IEEE ACCESS, V8, P1866, DOI 10.1109/ACCESS.2019.2962152
   Wang ZY, 2020, IEEE DATA MINING, P1322, DOI 10.1109/ICDM50108.2020.00171
   Wei Jason, 2019, EDA: Easy Data Augmentation Techniques for Boosting Performance on Text Classification Tasks
   Whang SE, 2023, VLDB J, V32, P791, DOI 10.1007/s00778-022-00775-9
   Whang SE, 2022, Arxiv, DOI [arXiv:2112.06409, 10.48550/arXiv.2112.06409]
   White J, 2023, Arxiv, DOI [arXiv:2302.11382, DOI 10.48550/ARXIV.2302.11382, 10.48550/arXiv.2302.11382]
   Wikipedia, 2023, about us
   Wikipedia, 2023, Transfer learning
   Wikipedia, 2023, Boosting (machine learning)
   Wikipedia, 2023, Active learning (machine learning)
   Wohlin C., 2014, P 18 INT C EV ASS SO, P1, DOI [DOI 10.1145/2601248.2601268, 10.1145/2601248.2601268]
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wu RZ, 2020, SIGMOD'20: PROCEEDINGS OF THE 2020 ACM SIGMOD INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1149, DOI 10.1145/3318464.3389743
   Wu YJ, 2021, Arxiv, DOI arXiv:2107.08588
   Xiang SX, 2019, IEEE CONF VIS ANAL, P57, DOI [10.1109/vast47406.2019.8986943, 10.1109/VAST47406.2019.8986943]
   Yu Q, 2020, IEEE IMAGE PROC, P1731, DOI [10.1109/icip40778.2020.9190652, 10.1109/ICIP40778.2020.9190652]
   Zha D., 2023, arXiv
   Zhang HY, 2018, Arxiv, DOI arXiv:1710.09412
   Zhang QJ, 2024, ACM T SOFTW ENG METH, V33, DOI 10.1145/3631974
   Zhang W., 2019, 2019 IEEE INT C BIG, P1
   Zhang W, 2020, PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING (WSDM '20), P744, DOI 10.1145/3336191.3371813
   Zhang WN, 2018, LECT NOTES COMPUT SC, V10878, P256, DOI 10.1007/978-3-319-92537-0_30
   Zhang X., 2018 IEEE 5 INT C DA, P283
   Zhang XW, 2018, AAAI CONF ARTIF INTE, P5698
   Zhang YK, 2023, Arxiv, DOI arXiv:2309.14240
   Zhao C, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2413, DOI 10.1145/3308558.3313578
   Zhao Z., 2007, ICML, P1151
   Zhengwen Li, 2021, 2021 IEEE 6th International Conference on Signal and Image Processing (ICSIP), P1020, DOI 10.1109/ICSIP52628.2021.9688888
   Zhou X, 2016, ASIA PAC SOFWR ENG, P153, DOI [10.1109/APSEC.2016.62, 10.1109/APSEC.2016.031]
   Zhou X, 2021, 2021 IEEE/CVF INTERNATIONAL CONFERENCE ON COMPUTER VISION (ICCV 2021), P72, DOI 10.1109/ICCV48922.2021.00014
   Zhu X., 2002, ProQuest Number: Information to All Users
NR 251
TC 0
Z9 0
U1 13
U2 13
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 54
DI 10.1007/s10515-024-00453-w
PG 75
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TV0L4
UT WOS:001243916300001
DA 2024-08-05
ER

PT J
AU Tung, LN
   Duong, NVB
   Le, KN
   Hung, PN
AF Tung, Lam Nguyen
   Duong, Nguyen Vu Binh
   Le, Khoi Nguyen
   Hung, Pham Ngoc
TI Automated test data generation and stubbing method for C/C plus plus
   embedded projects
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Automated testing; Concolic testing; Automated stub; Symbolic execution;
   Static analysis; Dynamic analysis; C/C plus plus
ID SOFTWARE TEST DATA; SYMBOLIC EXECUTION
AB Automated test data generation for unit testing C/C++ functions using concolic testing has been known for improving software quality while reducing human testing effort. However, concolic testing could face challenging problems when tackling complex practical projects. This paper proposes a concolic-based method named Automated Unit Testing and Stubbing (AUTS) for automated test data and stub generation. The key idea of the proposed method is to apply the concolic testing approach with three major improvements. Firstly, the test data generation, which includes two path search strategies, not only is able to avoid infeasible paths but also achieves higher code coverage. Secondly, AUTS generates appropriate values for specialized data types to cover more test scenarios. Finally, the proposed method integrates automatic stub preparation and generation to reduce the costs of human effort. The method even works on incomplete source code or missing libraries. AUTS is implemented in a tool to test various C/C++ industrial and open-source projects. The experimental results show that the proposed method significantly improves the coverage of the generated test data in comparison with other existing methods.
C1 [Tung, Lam Nguyen; Duong, Nguyen Vu Binh; Le, Khoi Nguyen; Hung, Pham Ngoc] Vietnam Natl Univ, Univ Engn & Technol, 144 Xuan Thuy, Hanoi, Vietnam.
C3 Vietnam National University Hanoi
RP Hung, PN (corresponding author), Vietnam Natl Univ, Univ Engn & Technol, 144 Xuan Thuy, Hanoi, Vietnam.
EM tunglam@vnu.edu.vn; nguyenvubinhduong@vnu.edu.vn; khoi.n.le@vnu.edu.vn;
   hungpn@vnu.edu.vn
FU Master Scholarship Programme of Vingroup Innovation Foundation (VINIF)
   [VINIF.2023]
FX Duong Nguyen was funded by the Master Scholarship Programme of Vingroup
   Innovation Foundation (VINIF), code VINIF.2023.ThS.029.
CR Anand A., 2018, CRC Press, DOI [10.1201/9781351117661, DOI 10.1201/9781351117661]
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   AUTOSAR, Guidelines for the use of the C++14 language in critical and safety-related systems
   Avdeenko T, 2021, APPL SCI-BASEL, V11, DOI 10.3390/app11104673
   Baldoni R, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3182657
   Buckle G., 1998, Industrial Perspectives of Safety-critical Systems, P150, DOI [10.1007/978-1-4471-1534-211, DOI 10.1007/978-1-4471-1534-211]
   Burnim Jacob, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P443, DOI 10.1109/ASE.2008.69
   Cadar C, 2005, LECT NOTES COMPUT SC, V3639, P2
   Cadar C., 2008, KLEE: Unassisted and Automatic Generation of High-Coverage Tests for Complex Systems Programs
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Cadar C, 2008, ACM T INFORM SYST SE, V12, DOI 10.1145/1455518.1455522
   Cha SK, 2012, P IEEE S SECUR PRIV, P380, DOI 10.1109/SP.2012.31
   Chen YH, 2020, P IEEE S SECUR PRIV, P1580, DOI 10.1109/SP40000.2020.00002
   Chess B., 2007, Secure programming with static analysis
   Chipounov V, 2012, ACM T COMPUT SYST, V30, DOI 10.1145/2110356.2110358
   Circular A., 1988, Ac: 25.1309-1a: System design and analysis
   Vidaure AC, 2020, EIGHTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2020), P1, DOI 10.1109/VISSOFT51673.2020.00005
   Duc-Anh Nguyen, 2019, International Journal of Software Engineering and Knowledge Engineering, V29, P1279, DOI 10.1142/S0218194019500402
   El Koursi EM, 2002, TSI PRESS S, V14, P51, DOI 10.1109/WAC.2002.1049420
   Elkarablieh B, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129
   Ferrell UmaD., 2017, Digital Avionics Handbook, P207
   Flood D, 2015, J SOFTW-EVOL PROC, V27, P319, DOI 10.1002/smr.1711
   Godefroid P., 2007, SIGPLAN Notices, V42, P47, DOI [10.1145/1190216.1190226, 10.1145/1190215.1190226]
   Godefroid P, 2005, ACM SIGPLAN NOTICES, V40, P213, DOI 10.1145/1064978.1065036
   Godefroid P., P NETW DISTR SYST SE
   Grigorenko EL, 1998, PSYCHOL BULL, V124, P75, DOI 10.1037/0033-2909.124.1.75
   Guo XJ, 2022, IEEE ACCESS, V10, P20690, DOI 10.1109/ACCESS.2022.3153347
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Holm O., 2019, Improving the development of safety critical software: Automated test case generation for mc/dc coverage using incremental sat-based model checking
   Huong T.N., 2022, 2022 14 INT C KNOWL, P1, DOI [10.1109/KSE56063.2022.9953784, DOI 10.1109/KSE56063.2022.9953784]
   Ivankovic M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P955, DOI 10.1145/3338906.3340459
   Kafka P, 2012, PROCEDIA ENGINEER, V45, P2, DOI 10.1016/j.proeng.2012.08.112
   Kannavara R, 2015, PROC NAECON IEEE NAT, P374, DOI 10.1109/NAECON.2015.7443099
   Khurshid S, 2003, LECT NOTES COMPUT SC, V2619, P553
   Kim Y, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2019.106221
   Kim Y, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P151, DOI 10.1109/ICSE-SEIP.2019.00024
   Kim Y, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P315, DOI 10.1145/3180155.3180253
   Kim Y, 2013, IEEE INT CONF AUTOM, P519, DOI 10.1109/ASE.2013.6693109
   Ma KK, 2011, LECT NOTES COMPUT SC, V6887, P95, DOI 10.1007/978-3-642-23702-7_11
   KING JC, 1976, COMMUN ACM, V19, P385, DOI 10.1145/360248.360252
   Kleeberger VB, 2015, DES AUT CON, DOI 10.1145/2744769.2747918
   Kumar G., 2022, J. ICT Stand, V10, P531, DOI [10.13052/jicts2245-800X.1043, DOI 10.13052/JICTS2245-800X.1043]
   Kurian E, 2023, J SYST SOFTWARE, V199, DOI 10.1016/j.jss.2023.111629
   Tung LN, 2022, INFORM SOFTWARE TECH, V145, DOI 10.1016/j.infsof.2022.106821
   Larson E, 2003, USENIX ASSOCIATION PROCEEDINGS OF THE 12TH USENIX SECURITY SYMPOSIUM, P121
   Li GD, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P449, DOI 10.1145/2635868.2635913
   Li Y, 2013, ACM SIGPLAN NOTICES, V48, P19, DOI [10.1145/2544173.2509553, 10.1145/2509136.2509553]
   Majumdar R, 2007, PROC INT CONF SOFTW, P416
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Monpratarnchai S, 2013, ASIA PAC SOFWR ENG, P93, DOI 10.1109/APSEC.2013.121
   Moonzoo Kim, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P340, DOI 10.1109/ICST.2012.114
   Myers G, 1979, Art of Software Testing
   Nguyen A.T.V., 2022, P 11 INT S INF COMM, P352, DOI [10.1145/3568562.3568628, DOI 10.1145/3568562.3568628]
   Pasareanu Corina S., 2009, International Journal on Software Tools for Technology Transfer, V11, P339, DOI 10.1007/s10009-009-0118-1
   Pasareanu CS, 2019, ADV COMPUT, V113, P289, DOI 10.1016/bs.adcom.2018.10.004
   Platform I.O.B., ISO 26262-1:2011
   Rani SA, 2024, J CIRCUIT SYST COMP, V33, DOI 10.1142/S0218126624500294
   Sabbaghi A, 2020, COMPUT STAND INTER, V72, DOI 10.1016/j.csi.2020.103444
   Sen K, 2007, P 22 IEEE ACM INT C, P571, DOI [10.1145/1321631.1321746, DOI 10.1145/1321631.1321746]
   Sen K, 2011, LECT NOTES COMPUT SC, V6695, P3
   Sen Koushik, 2005, Proc. ESEC/FSE, DOI 10.1145/1081706.1081750
   Sun T, 2009, INT CONF QUAL SOFTW, P353, DOI 10.1109/QSIC.2009.53
   Takanen A, 2018, ADV TOP SCI TECH CHI, P1
   Tokumoto S, 2012, ASIA PAC SOFWR ENG, P314, DOI 10.1109/APSEC.2012.102
   Vitorino J., 2023, Constrained Adversarial Learning and its applicability to Automated Software Testing: a systematic review
   Wang HJ, 2017, IEEE T SOFTWARE ENG, V43, P252, DOI 10.1109/TSE.2016.2584063
   Wang XY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P291, DOI 10.1145/3180155.3180177
   Wang Z, 2009, THIRD INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING, PROCEEDINGS, P155, DOI 10.1109/TASE.2009.10
   Ward N. J., 1989, Safety of Computer Control Systems 1989 (SAFECOMP'89) Proceedings of the IFAC/IFIP Workshop, P91
   WICHMANN BA, 1995, SOFTWARE ENG J, V10, P69, DOI 10.1049/sej.1995.0010
   Williams N, 2005, LECT NOTES COMPUT SC, V3463, P281
   Yoshida H, 2017, IEEE SOFTWARE, V34, P30, DOI 10.1109/MS.2017.3571576
   Zhu HC, 2024, ACM T SOFTW ENG METH, V33, DOI 10.1145/3617171
NR 73
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 52
DI 10.1007/s10515-024-00449-6
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TR2J5
UT WOS:001242918400003
DA 2024-08-05
ER

PT J
AU Abadeh, MN
AF Abadeh, Maryam Nooraei
TI Knowledge-enhanced software refinement: leveraging reinforcement
   learning for search-based quality engineering
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based quality modeling; Reinforcement learning; Refinement;
   Throughput; Path efficiency; Quality-driven
AB In the rapidly evolving software development industry, the early identification of optimal design alternatives and accurate performance prediction are critical for developing efficient software products. This paper introduces a novel approach to software refinement, termed Reinforcement Learning-based Software Refinement (RLSR), which leverages Reinforcement Learning techniques to address this challenge. RLSR enables an automated software refinement process that incorporates quality-driven intelligent software development as an early decision-making strategy. By proposing a Q-learning-based approach, RLSR facilitates the automatic refinement of software in dynamic environments while optimizing the utilization of computational resources and time. Additionally, the convergence rate to an optimal policy during the refinement process is investigated. The results demonstrate that training the policy using throughput values leads to significantly faster convergence to optimal rewards. This study evaluates RLSR based on various metrics, including episode length, reward over time, and reward distributions on a running example. Furthermore, to illustrate the effectiveness and applicability of the proposed method, a comparative analysis is applied to three refinable software designs, such as the E-commerce platform, smart booking platform, and Web-based GIS transformation system. The comparison between Q-learning and the proposed algorithm reveals that the refinement outcomes achieved with the proposed algorithm are superior, particularly when an adequate number of learning steps and a comprehensive historical dataset are available. The findings emphasize the potential of leveraging reinforcement learning techniques for automating software refinement and improving the efficiency of the model-driven development process.
C1 [Abadeh, Maryam Nooraei] Islamic Azad Univ, Dept Comp Engn, Abadan Branch, Abadan, Iran.
C3 Islamic Azad University
RP Abadeh, MN (corresponding author), Islamic Azad Univ, Dept Comp Engn, Abadan Branch, Abadan, Iran.
EM ma.nooraei@iau.ac.ir
CR Abadeh MN, 2020, REQUIR ENG, V25, P95, DOI 10.1007/s00766-019-00309-w
   Abo-eleneen A, 2023, INFORM SOFTWARE TECH, V164, DOI 10.1016/j.infsof.2023.107325
   Ahmadi H, 2022, INFORM SOFTWARE TECH, V147, DOI 10.1016/j.infsof.2022.106893
   Ahmed A, 2023, LECT NOTES ARTIF INT, V14116, P467, DOI 10.1007/978-3-031-49011-8_37
   Alizadeh P, 2021, IEEE SYST J, V15, P1098, DOI 10.1109/JSYST.2020.2997069
   Barto AG, 2003, DISCRETE EVENT DYN S, V13, P41, DOI 10.1023/A:1025696116075
   BELLMAN R, 1957, J MATH MECH, V6, P679, DOI 10.1512/iumj.1957.6.56038
   Capuano R, 2023, Software Architectur, P22, DOI 10.1109/ICSA-C57050.2023.00021
   Cerón-Figueroa S, 2020, IET SOFTW, V14, P82, DOI 10.1049/iet-sen.2018.5332
   Chaslot Guillaume, 2008, AIIDE, V4, P216, DOI DOI 10.1609/AIIDE.V4I1.18700
   Chen H., 2024, arXiv
   Colas C., 2019, arXiv
   Colin TR, 2016, ROBOT AUTON SYST, V86, P196, DOI 10.1016/j.robot.2016.08.021
   Cui ZH, 2018, IEEE T IND INFORM, V14, P3187, DOI 10.1109/TII.2018.2822680
   Czyzowicz J, 2008, J DISCRET ALGORITHMS, V6, P28, DOI 10.1016/j.jda.2007.04.002
   Kulkarni TD, 2016, Arxiv, DOI arXiv:1606.02396
   d'Aloisio G, 2022, PROC IEEE ACM INT C, P291, DOI [10.1109/ICSE-Companion55297.2022.9793779, 10.1145/3510454.3517067]
   Das R, 2017, Arxiv, DOI arXiv:1607.01426
   Dzeroski S., 1998, Inductive Logic Programming. 8th International Conference, ILP-98. Proceedings, P11, DOI 10.1007/BFb0027307
   Eramo R, 2024, J SYST SOFTWARE, V207, DOI 10.1016/j.jss.2023.111833
   Esnaashari M, 2021, EXPERT SYST APPL, V183, DOI 10.1016/j.eswa.2021.115446
   Gardner M., 2013, P 2013 C EMP METH NA, P833
   Gardner M., 2014, P 2014 C EMP METH NA, P397, DOI 10.3115/v1
   Guu K, 2015, Arxiv, DOI arXiv:1506.01094
   Haouari B., 2022, INT C INT SYST DES A, P503
   [胡星 Hu Xing], 2019, [软件学报, Journal of Software], V30, P1206
   Isbell C, 2023, COMMUN ACM, V66, P35, DOI 10.1145/3539783
   Jia YT, 2018, KNOWL-BASED SYST, V151, P37, DOI 10.1016/j.knosys.2018.03.020
   Jia YT, 2018, ACM T WEB, V12, DOI 10.1145/3132733
   Johnson J, 2017, IEEE I CONF COMP VIS, P3008, DOI 10.1109/ICCV.2017.325
   Kaelbling LP, 1996, J ARTIF INTELL RES, V4, P237, DOI 10.1613/jair.301
   KNOBLOCK CA, 1991, PROCEEDINGS : NINTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 AND 2, P686
   Knoblock CA., 1993, Generating Abstraction Hierarchies, P23, DOI [10.1007/978-1-4615-3152-43, DOI 10.1007/978-1-4615-3152-43]
   Kulawiak M, 2023, SCI REP-UK, V13, DOI 10.1038/s41598-023-45268-z
   Lao Ni, 2011, P C EMP METH NAT LAN, P529, DOI DOI 10.5555/2145432.2145494
   Le H., 2022, Advances in Neural Information Processing Systems, V35, P21314
   Li ZX, 2018, INT CONF DAT MIN WOR, P929, DOI 10.1109/ICDMW.2018.00135
   Liang C., 2016, arXiv
   Lillicrap T.P., 2015, Continuous control with deep reinforcement learning
   Lin YK, 2015, AAAI CONF ARTIF INTE, P2181
   Mao HY, 2020, Arxiv, DOI arXiv:1912.01160
   Neelakantan A, 2015, Arxiv, DOI [arXiv:1504.06662, 10.48550/arXiv.1504.06662]
   ODonoghue B., 2016, arXiv
   Sakhrawi Z., 2021, SN Comput. Sci, V2, P468, DOI DOI 10.1007/S42979-021-00872-6
   Shabtai Asaf, 2009, Information Security Technical Report, V14, P16, DOI 10.1016/j.istr.2009.03.003
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.2307/2333709
   Shen J., 2018, Advances in Neural Information Processing Systems, P6787
   Singh J, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106273
   Sukur N, 2023, SOFT COMPUT, DOI 10.1007/s00500-023-08559-1
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Tang HY, 2019, Arxiv, DOI arXiv:1905.11100
   Tang HY, 2019, Arxiv, DOI [arXiv:1809.09332, 10.48550/arXiv.1809.09332]
   Vuong TAT, 2018, PROCEEDINGS OF THE 9TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON AUTOMATING TEST CASE DESIGN, SELECTION, AND EVALUATION (A-TEST '18), P31, DOI 10.1145/3278186.3278191
   Tlili A, 2021, INFORM-INT J COMPUT, V45, P133, DOI 10.31449/inf.v45i1.3104
   Toutanova D., 2015, P EMNLP C, P1499
   Urgaonkar B, 2007, ACM T WEB, V1, DOI 10.1145/1232722.1232724
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang HB, 2020, FUTURE GENER COMP SY, V107, P551, DOI 10.1016/j.future.2020.02.030
   Wang HB, 2016, INFORM SCIENCES, V363, P96, DOI 10.1016/j.ins.2016.05.002
   Wang HT, 2022, CC'22: PROCEEDINGS OF THE 31ST ACM SIGPLAN INTERNATIONAL CONFERENCE ON COMPILER CONSTRUCTION, P129, DOI 10.1145/3497776.3517769
   Wang L, 2023, INFORM SOFTWARE TECH, V164, DOI 10.1016/j.infsof.2023.107327
   Wang SM, 2023, IEEE T SOFTWARE ENG, V49, P1188, DOI 10.1109/TSE.2022.3173346
   Wang T, 2023, INT J SOFTW ENG KNOW, V33, P231, DOI 10.1142/S0218194022500747
   Wang Z, 2014, AAAI CONF ARTIF INTE, P1112
   Wilcoxon F., 1992, Breakthroughs in statistics: methodology and distribution, P196, DOI [DOI 10.2307/3001968, 10.1093/jee/39.2.269, DOI 10.1093/JEE/39.2.269, DOI 10.1007/978-1-4612-4380-916]
   Xiong WH, 2018, Arxiv, DOI arXiv:1707.06690
   Yang YM, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3505243
   Zeng D., 2014, P 25 INT C COMP LING, P2335
   Zolfagharian A, 2023, IEEE T SOFTWARE ENG, V49, P3715, DOI 10.1109/TSE.2023.3269804
NR 69
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 57
DI 10.1007/s10515-024-00456-7
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WI1Y3
UT WOS:001254160600001
DA 2024-08-05
ER

PT J
AU Ren, ZL
   Ju, XL
   Chen, X
   Shen, H
AF Ren, Zilong
   Ju, Xiaolin
   Chen, Xiang
   Shen, Hao
TI ProRLearn: boosting prompt tuning-based vulnerability detection by
   reinforcement learning
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Vulnerability detection; Prompt tuning; Pre-trained language model;
   Reinforcement learning
AB Software vulnerability detection is a critical step in ensuring system security and data protection. Recent research has demonstrated the effectiveness of deep learning in automated vulnerability detection. However, it is difficult for deep learning models to understand the semantics and domain-specific knowledge of source code. In this study, we introduce a new vulnerability detection framework, ProRLearn, which leverages two main techniques: prompt tuning and reinforcement learning. Since existing fine-tuning of pre-trained language models (PLMs) struggles to leverage domain knowledge fully, we introduce a new automatic prompt-tuning technique. Precisely, prompt tuning mimics the pre-training process of PLMs by rephrasing task input and adding prompts, using the PLM's output as the prediction output. The introduction of the reinforcement learning reward mechanism aims to guide the behavior of vulnerability detection through a reward and punishment model, enabling it to learn effective strategies for obtaining maximum long-term rewards in specific environments. The introduction of reinforcement learning aims to encourage the model to learn how to maximize rewards or minimize penalties, thus enhancing performance. Experiments on three datasets (FFMPeg+Qemu, Reveal, and Big-Vul) indicate that ProRLearn achieves performance improvement of 3.27-70.96% over state-of-the-art baselines in terms of F1 score. The combination of prompt tuning and reinforcement learning can offer a potential opportunity to improve performance in vulnerability detection. This means that it can effectively improve the performance in responding to constantly changing network environments and new threats. This interdisciplinary approach contributes to a better understanding of the interplay between natural language processing and reinforcement learning, opening up new opportunities and challenges for future research and applications.
C1 [Ren, Zilong; Ju, Xiaolin; Chen, Xiang; Shen, Hao] Nantong Univ, Sch Informat Sci & Technol, Nantong 226019, Jiangsu, Peoples R China.
C3 Nantong University
RP Ju, XL; Chen, X (corresponding author), Nantong Univ, Sch Informat Sci & Technol, Nantong 226019, Jiangsu, Peoples R China.
EM zilongren23@gmail.com; ju.xl@ntu.edu.cn; xchencs@ntu.edu.cn;
   shenhyc@gmail.com
CR Arulkumaran K, 2017, IEEE SIGNAL PROC MAG, V34, P26, DOI 10.1109/MSP.2017.2743240
   Brown T., 2020, ADV NEURAL INFORM PR, V33, P1877, DOI DOI 10.48550/ARXIV.2005.14165
   Caicedo JC, 2015, IEEE I CONF COMP VIS, P2488, DOI 10.1109/ICCV.2015.286
   Cao SC, 2022, PROC INT CONF SOFTW, P1456, DOI 10.1145/3510003.3510219
   Chakraborty S, 2022, IEEE T SOFTWARE ENG, V48, P3280, DOI 10.1109/TSE.2021.3087402
   Cheng X, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P519, DOI 10.1145/3533767.3534371
   Cherem S, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P480, DOI 10.1145/1250734.1250789
   DELUCA A, 1980, THEOR COMPUT SCI, V10, P157, DOI 10.1016/0304-3975(80)90012-2
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Fan G, 2019, PROC INT CONF SOFTW, P72, DOI 10.1109/ICSE.2019.00025
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fu M, 2022, IEEE WORK CONF MIN S, P608, DOI 10.1145/3524842.3528452
   Gu YX, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P8410
   Han X, 2022, AI OPEN, V3, P182, DOI 10.1016/j.aiopen.2022.11.003
   Han X, 2021, AI OPEN, V2, P225, DOI 10.1016/j.aiopen.2021.08.002
   Heine D. L., 2006, 28th International Conference on Software Engineering Proceedings, P252, DOI 10.1145/1134285.1134321
   Hin D, 2022, IEEE WORK CONF MIN S, P596, DOI 10.1145/3524842.3527949
   Infoarmor, 2020, The exactis breach: 5 things you need to know
   Jiang ZB, 2020, T ASSOC COMPUT LING, V8, P423, DOI 10.1162/tacl_a_00324
   Kaelbling LP, 1996, J ARTIF INTELL RES, V4, P237, DOI 10.1613/jair.301
   Dam HK, 2017, Arxiv, DOI arXiv:1708.02368
   Kroening Daniel, 2014, TOOLS ALGORITHMS CON, V8413, P389, DOI [10.1007/978-3-642-54862-8_26, DOI 10.1007/978-3-642-54862-8_26]
   Lagoudakis M.G., 2003, P 20 INT C MACHINE L, P424
   Lester B, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P3045
   Li XLS, 2021, 59TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 11TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (ACL-IJCNLP 2021), VOL 1, P4582
   Li XW, 2023, Soft Anal Evol Reeng, P604, DOI [10.1109/SANER56733.2023.00062, 10.1109/AINIT59027.2023.10212630]
   Li Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P292, DOI 10.1145/3468264.3468597
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, Arxiv, DOI arXiv:1801.01681
   Liu PF, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3560815
   Liu YH, 2019, INFORM SYST RES, DOI 10.48550/arXiv.1907.11692
   Lomio F, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111283
   Mnih V, 2015, NATURE, V518, P529, DOI 10.1038/nature14236
   Moerland TM, 2023, FOUND TRENDS MACH LE, V16, P1, DOI 10.1561/2200000086
   Nie E., 2022, arXiv e-prints, P2212
   NIST, National Vulnerability Database
   Nord R.L., 2017, 14 ANN ACQ RES S ACQ, P451
   Osband I, 2016, ADV NEUR IN, V29
   Qin GH, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P5203
   Qiu CR, 2019, IEEE INTERNET THINGS, V6, P8577, DOI 10.1109/JIOT.2019.2921159
   Qiu XP, 2020, SCI CHINA TECHNOL SC, V63, P1872, DOI 10.1007/s11431-020-1647-3
   Raffel C, 2020, J MACH LEARN RES, V21
   Rosenstein Michael T, 2004, Handbook of learning and approximate dynamic programming, P359
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Sallab A.E., 2017, Electronic Imaging, V19, P70, DOI [DOI 10.2352/ISSN.2470-1173.2017.19.AVM-023, 10.2352/ISSN.2470-1173.2017.19.AVM-023]
   Schick T, 2021, 16TH CONFERENCE OF THE EUROPEAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (EACL 2021), P255
   Shao K., 2019, ARXIV
   Silver D, 2014, PR MACH LEARN RES, V32
   Silver D, 2016, NATURE, V529, P484, DOI 10.1038/nature16961
   Skyboxsecurity, Vulnerability and Threat Trends Report 2023
   Sun C, 2019, LECT NOTES ARTIF INT, V11856, P194, DOI 10.1007/978-3-030-32381-3_16
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Tanha J, 2020, J BIG DATA-GER, V7, DOI 10.1186/s40537-020-00349-y
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang CZ, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P382, DOI 10.1145/3540250.3549113
   WATKINS CJCH, 1992, MACH LEARN, V8, P279, DOI 10.1007/BF00992698
   Wen X., 2023, arXiv
   Wolf T, 2020, Arxiv, DOI arXiv:1910.03771
   Wu YM, 2022, PROC INT CONF SOFTW, P2365, DOI 10.1145/3510003.3510229
   Yu L, 2023, PROC INT SYMP SOFTW, P556, DOI 10.1109/ISSRE59848.2023.00030
   Zeng A, 2018, IEEE INT C INT ROBOT, P4238, DOI 10.1109/IROS.2018.8593986
   Zhou YQ, 2019, ADV NEUR IN, V32
NR 63
TC 0
Z9 0
U1 10
U2 10
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 38
DI 10.1007/s10515-024-00438-9
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OD9L0
UT WOS:001205438900001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Bano, M
   Hoda, R
   Zowghi, D
   Treude, C
AF Bano, Muneera
   Hoda, Rashina
   Zowghi, Didar
   Treude, Christoph
TI Large language models for qualitative research in software engineering:
   exploring opportunities and challenges
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Large language models; LLMs; Qualitative research; Software engineering
AB The recent surge in the integration of Large Language Models (LLMs) like ChatGPT into qualitative research in software engineering, much like in other professional domains, demands a closer inspection. This vision paper seeks to explore the opportunities of using LLMs in qualitative research to address many of its legacy challenges as well as potential new concerns and pitfalls arising from the use of LLMs. We share our vision for the evolving role of the qualitative researcher in the age of LLMs and contemplate how they may utilize LLMs at various stages of their research experience.
C1 [Bano, Muneera; Zowghi, Didar] CSIROs Data61, Clayton, Australia.
   [Hoda, Rashina] Monash Univ, Melbourne, Australia.
   [Treude, Christoph] Univ Melbourne, Melbourne, Australia.
C3 Commonwealth Scientific & Industrial Research Organisation (CSIRO);
   Monash University; University of Melbourne
RP Bano, M (corresponding author), CSIROs Data61, Clayton, Australia.
EM muneera.bano@csiro.au
RI Bano, Muneera/AAP-7064-2021; Treude, Christoph/AAZ-6257-2021; Zowghi,
   Didar/AAF-2345-2019
OI Bano, Muneera/0000-0002-1447-9521; Zowghi, Didar/0000-0002-6051-0155;
   Treude, Christoph/0000-0002-6919-2149
CR Alkaissi H, 2023, CUREUS J MED SCIENCE, V15, DOI 10.7759/cureus.35179
   Arora C, 2023, Arxiv, DOI arXiv:2310.13976
   Balel Y, 2023, EUR J THER-ISTANBUL, V29, P984, DOI 10.58600/eurjther1691
   Bano M, 2023, Arxiv, DOI [arXiv:2306.13298, 10.48550/arXiv.2306.13298, DOI 10.48550/ARXIV.2306.13298]
   Bender EM, 2021, PROCEEDINGS OF THE 2021 ACM CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, FACCT 2021, P610, DOI 10.1145/3442188.3445922
   Byun C., 2023, EXTENDED 2023 CHI C, P1
   Easterbrook S., 2008, Guide to Advanced Empirical Software Eng, P285, DOI [10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-5_11]
   Ebert C, 2023, IEEE SOFTWARE, V40, P30, DOI 10.1109/MS.2023.3265877
   Emmert-Streib F., 2023, Europ. J. Human Genet, V15, P1
   Gentles SJ, 2015, QUAL REP, V20, P1772
   Hoda R, 2022, IEEE T SOFTWARE ENG, V48, P3808, DOI 10.1109/TSE.2021.3106280
   Hou XY, 2024, Arxiv, DOI arXiv:2308.10620
   Jalil S, 2023, IEEE ICST WORKSHOP, P430, DOI 10.1109/ICSTW58534.2023.00078
   Jiang DF, 2023, Arxiv, DOI arXiv:2306.02561
   Kitchenham B., 2004, PROCEDURES PERFORMIN, DOI DOI 10.5144/0256-4947.2017.79
   Kuhail M.A., Assessing Chatgpt's Effect on Software Development and Programmer Perceptions of Ai Tools
   Navigli R, 2023, ACM J DATA INF QUAL, V15, DOI 10.1145/3597307
   Nguyen-Duc A, 2023, Arxiv, DOI arXiv:2310.18648
   Ozkaya I, 2023, IEEE SOFTWARE, V40, P4, DOI 10.1109/MS.2023.3248401
   Polonsky M.J., 2023, Should artificial intelligent agents be your co-author? Arguments in favour, informed by ChatGPT, P91
   RuDOLPH Jurgen, 2023, J Appl Learn Teach, P342, DOI [10.37074/jalt.2023.6.1.9, DOI 10.37074/JALT.2023.6.1.9, DOI 10.37074/JALT.2023.6.1.23]
   Scoccia GL, 2023, IEEE INT CONF AUTOM, P88, DOI 10.1109/ASEW60602.2023.00016
   Treude C, 2023, Arxiv, DOI arXiv:2303.10131
   Watkins R., 2023, AI and Ethics, V16, P1
   Watson C., 2006, QUAL RES, V6, P367
NR 25
TC 1
Z9 1
U1 36
U2 45
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 8
DI 10.1007/s10515-023-00407-8
PG 12
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CS4H8
UT WOS:001127212600001
OA Green Published
DA 2024-08-05
ER

PT J
AU Li, Y
   Zhang, YM
   Ding, YR
   Jiang, SJ
   Yuan, G
AF Li, Yun
   Zhang, Yanmei
   Ding, Yanru
   Jiang, Shujuan
   Yuan, Guan
TI A class integration test order generation approach based on Sarsa
   algorithm
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Integration test; Test order; Reinforcement learning; Reward function
AB Class integration test order generation is a key step in integration testing, researching this problem can help find unknown bugs and improve the efficiency of software testing. The challenge of this problem is ordering the classes to be integrated to minimize the cost of required stubs. However, the existing approaches of generating class integration test orders cannot satisfy this requirement well. Considering the excellent performance of reinforcement learning in sequence decision problems, this paper proposes a class integration test order generation approach based on Sarsa algorithm, which is a data-driven model-free reinforcement learning algorithm. This approach takes the stubbing complexity as the indicator to evaluate the stubbing cost and uses it to measure the quality of a class integration test order. The Sarsa algorithm is used to train the agent, and three indicators such as test return, dependency complexity, and the number of cycles are integrated into the design of the reward function to evaluate the merits of the current action. By recording an action path of the agent from its initial state to its termination state, a class integration test order can be obtained. The experimental results on 10 systems show that the class integration test order generation approach based on Sarsa algorithm can generate the class integration test orders with lower stubbing cost.
C1 [Li, Yun; Zhang, Yanmei; Ding, Yanru; Jiang, Shujuan; Yuan, Guan] China Univ Min & Technol, Sch Comp Sci & Technol, Xuzhou 221116, Jiangsu, Peoples R China.
C3 China University of Mining & Technology
RP Zhang, YM (corresponding author), China Univ Min & Technol, Sch Comp Sci & Technol, Xuzhou 221116, Jiangsu, Peoples R China.
EM ymzhang@cumt.edu.cn
RI Wang, Fei/KEH-6292-2024; Wang, Yuhan/KGL-5855-2024; WANG,
   SHIHAO/KHC-8263-2024; Wang, Yibin/KEZ-9645-2024
FU Xuzhou Science and Technology Program [KC22047]; Fundamental Research
   Funds for the Xuzhou Science and Technology Project [71774159,
   61673384]; National Natural Science Foundation of China [2021T140707];
   Postdoctoral Foundation of China
FX This work is supported by the Fundamental Research Funds for the Xuzhou
   Science and Technology Project under grant No. KC22047; the National
   Natural Science Foundation of China under grant No. 71774159, 61673384;
   the Postdoctoral Foundation of China under grant No. 2021T140707.
CR Abdurazik A., 2006, P 2006 INT WORKSH AU, P50
   Abdurazik A, 2009, COMPUT J, V52, P557, DOI 10.1093/comjnl/bxm054
   Bansal P., 2009, P 2009 INT C METH MO, P1
   Borner L, 2009, 2009 FIRST INTERNATIONAL CONFERENCE ON ADVANCES IN SYSTEM TESTING AND VALIDATION LIFECYCLE, P80, DOI 10.1109/VALID.2009.30
   Briand LC, 2003, IEEE T SOFTWARE ENG, V29, P594, DOI 10.1109/TSE.2003.1214324
   Briand LC, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P287, DOI 10.1109/ISSRE.2001.989482
   Briand LC., 2002, P 14 INT C SOFTW ENG, P43, DOI DOI 10.1145/568760.568769
   Burke E.K., 2009, SURVEY HYPERHEURISTI
   Cabral RD, 2010, LECT NOTES COMPUT SC, V6435, P16, DOI 10.1007/978-3-642-16573-3_3
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Czibula G, 2018, APPL SOFT COMPUT, V65, P517, DOI 10.1016/j.asoc.2018.01.042
   [丁艳茹 Ding Yanru], 2022, [软件学报, Journal of Software], V33, P1674
   Gao Hai-chang, 2007, Journal of Chinese Computer Systems, V28, P725
   Gao Yang, 2004, Acta Automatica Sinica, V30, P86
   Guizzo G, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1343, DOI 10.1145/2739480.2754725
   Harman M, 2012, INT SYMP EMP SOFTWAR, P1, DOI 10.1145/2372251.2372253
   Hashim NL, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P11
   [何柳柳 He Liuliu], 2019, [软件学报, Journal of Software], V30, P1438
   Jiang Shu-Juan, 2011, Chinese Journal of Computers, V34, P1062, DOI 10.3724/SP.J.1016.2011.01062
   Jiang SJ, 2021, IEEE T SOFTWARE ENG, V47, P1350, DOI 10.1109/TSE.2019.2921965
   Kung D, 1995, P INT COMP SOFTW APP, P239, DOI 10.1109/CMPSAC.1995.524786
   KUNG DC, 1995, J OBJECT-ORIENT PROG, V8, P51
   Labiche Y., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P136, DOI 10.1109/ICSE.2000.870405
   Le Hanh V., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P381
   Le Traon Y, 2000, IEEE T RELIAB, V49, P12, DOI 10.1109/24.855533
   Li Yuan-jie, 2010, Computer Engineering, V36, P74
   Lu Yan-sheng, 2005, Mini-Micro Systems, V26, P995
   Ma A., 2022, J. Comput. Res. Dev, V59, P8
   Mao CY, 2005, FIFTH INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION TECHNOLOGY - PROCEEDINGS, P927, DOI 10.1109/CIT.2005.59
   Mariani T, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1069, DOI 10.1145/2908812.2908816
   Meng J., 2023, Railway Stand. Design, V12, P1
   Paradkar A., 1996, P 1996 C CTR ADV STU
   Tai KC, 1997, P INT COMP SOFTW APP, P602, DOI 10.1109/CMPSAC.1997.625079
   Tarjan R., 1972, SIAM Journal on Computing, V1, P146, DOI 10.1137/0201010
   Vergilio Silvia Regina, 2012, International Journal on Software Tools for Technology Transfer, V14, P461, DOI 10.1007/s10009-012-0226-1
   Wang HY, 2024, INFORM SYST FRONT, V26, P107, DOI 10.1007/s10796-021-10200-1
   [王莹 Wang Ying], 2016, [计算机研究与发展, Journal of Computer Research and Development], V53, P517
   Wang Z., 2011, SEKE, P254
   Wang ZS, 2011, P INT COMP SOFTW APP, P680, DOI 10.1109/COMPSAC.2011.122
   Yan XD, 2022, APPL SCI-BASEL, V12, DOI 10.3390/app122010225
   Yang Z., 2016, J. Baoshan Univ, V35, P5
   Zhang M, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106438
   Zhang M, 2019, P INT COMP SOFTW APP, P47, DOI 10.1109/COMPSAC.2019.00016
   [张妙 Zhang Miao], 2017, [小型微型计算机系统, Journal of Chinese Computer Systems], V38, P1772
   Zhang M, 2017, J SYST SOFTWARE, V133, P54, DOI 10.1016/j.jss.2017.08.026
   [张艳梅 Zhang Yanmei], 2018, [计算机学报, Chinese Journal of Computers], V41, P931
   [张艳梅 Zhang Yanmei], 2018, [计算机学报, Chinese Journal of Computers], V41, P670
   [张颖辉 Zhang Yinghui], 2023, [电子学报, Acta Electronica Sinica], V51, P455
   Zhao Yu-li, 2015, Journal of Northeastern University. Natural Science, V36, P1696, DOI 10.3969/j.issn.1005-3026.2015.12.006
   Zhengshan Wang, 2010, IEEE 34th Annual Computer Software and Applications Conference Workshops (COMPSACW 2010), P329, DOI 10.1109/COMPSACW.2010.64
   Zhou Z., 2016, Machine Learning, P371
NR 51
TC 0
Z9 0
U1 3
U2 6
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 7
DI 10.1007/s10515-023-00406-9
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AX6Q8
UT WOS:001121791200001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Kong, H
   Li, T
   Ge, JG
   Zhang, L
   Li, LX
AF Kong, He
   Li, Tong
   Ge, Jingguo
   Zhang, Lei
   Li, Liangxiong
TI Enhancing fault localization in microservices systems through span-level
   using graph convolutional networks
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Anomaly detection; Fault localization; GCN; Microservice
ID ANOMALY DETECTION
AB In the domain of cloud computing and distributed systems, microservices architecture has become preeminent due to its scalability and flexibility. However, the distributed nature of microservices systems introduces significant challenges in maintaining operational reliability, especially in fault localization. Traditional methods for fault localization are insufficient due to time-intensive and prone to error. Addressing this gap, we present SpanGraph, a novel framework employing graph convolutional networks (GCN) to achieve efficient span-level fault localization. SpanGraph constructs a directed graph from system traces to capture invocation relationships and execution times. It then utilizes GCN for edge representation learning to detect anomalies. Experimental results demonstrate that SpanGraph outperforms all baseline approaches on both the Sockshop and TrainTicket datasets. We also conduct incremental experiments on SpanGraph using unseen traces to validate its generalizability and scalability. Furthermore, we perform an ablation study, sensitivity analysis, and complexity analysis for SpanGraph to further verify its robustness, effectiveness, and flexibility. Finally, we validate SpanGraph's effectiveness in anomaly detection and fault location using real-world datasets.
C1 [Kong, He; Li, Tong; Ge, Jingguo; Zhang, Lei; Li, Liangxiong] Chinese Acad Sci, Inst Informat Engn, Beijing 100093, Peoples R China.
   [Kong, He; Ge, Jingguo] Univ Chinese Acad Sci, Sch Cyber Secur, Beijing 100049, Peoples R China.
C3 Chinese Academy of Sciences; Institute of Information Engineering, CAS;
   Chinese Academy of Sciences; University of Chinese Academy of Sciences,
   CAS
RP Li, T (corresponding author), Chinese Acad Sci, Inst Informat Engn, Beijing 100093, Peoples R China.
EM konghe@iie.ac.cn; litong@iie.ac.cn; gejingguo@iie.ac.cn;
   zhanglei@iie.ac.cn; liliangxiong@iie.ac.cn
FU National Key Research and Development Program of China [2022YFB3103402];
   National Key Research and Development Program of China
FX This work was supported in part by the National Key Research and
   Development Program of China under Grant 2022YFB3103402.
CR Agarap A.F., 2018, arXiv, DOI 10.48550/arXiv.1803.08375
   [Anonymous], 2023, Prometheus: Prometheus
   [Anonymous], 2019, Kubernetes: Kubernetes
   [Anonymous], 2023, TrainTicket: TrainTicket
   Apache, 2023, Apache SkyWalking
   Audibert J, 2020, KDD '20: PROCEEDINGS OF THE 26TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P3395, DOI 10.1145/3394486.3403392
   Bruna J, 2014, Arxiv, DOI [arXiv:1312.6203, DOI 10.48550/ARXIV.1312.6203]
   Chen J, 2023, COMPUT COMMUN, V204, P109, DOI 10.1016/j.comcom.2023.03.028
   Chen ZB, 2022, PROC INT CONF SOFTW, P61, DOI 10.1145/3510003.3510085
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   DGL, 2023, Deep Graph Library
   Du M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1285, DOI 10.1145/3133956.3134015
   Gan Y, 2019, TWENTY-FOURTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS (ASPLOS XXIV), P19, DOI 10.1145/3297858.3304004
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Huang J, 2023, Arxiv, DOI arXiv:2310.04701
   Kim Y, 2014, Arxiv, DOI [arXiv:1408.5882, DOI 10.48550/ARXIV.1408.5882]
   Lee C, 2023, PROC INT CONF SOFTW, P1750, DOI 10.1109/ICSE48619.2023.00150
   Li YJ, 2017, Arxiv, DOI arXiv:1511.05493
   Li ZY, 2021, INT WORKSH QUAL SERV, DOI 10.1109/IWQOS52092.2021.9521340
   Liu DW, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P338, DOI 10.1109/ICSE-SEIP52600.2021.00043
   Liu J., 2023, Log-based anomaly detection based on EVT theory with feedback
   Locust, 2023, Locust
   Loshchilov I, 2019, Arxiv, DOI [arXiv:1711.05101, 10.48550/arXiv.1711.05101, DOI 10.48550/ARXIV.1711.05101]
   Mariani L, 2018, IEEE INT CONF SOFTW, P262, DOI 10.1109/ICST.2018.00034
   Meng WB, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4739
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, DOI 10.48550/ARXIV.1301.3781]
   Ouyang Long, 2022, Advances in Neural Information Processing Systems, V35, P27730, DOI 10.1177/01454455830072006
   Query T.A., 2023, TrainTicket Auto Query
   Ren R., 2023, 2023 IEEE ACM 31 INT, P1
   Ruff L, 2018, PR MACH LEARN RES, V80
   ScikitLearn, 2023, ScikitLearn
   Shadija D., 2017, 2017 23 INT C AUT CO, P1
   SockShop, 2023, SockShop
   Sun Chang-Ai, 2023, 2023 IEEE International Conference on Web Services (ICWS), P7, DOI 10.1109/ICWS60048.2023.00013
   Le VH, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P492, DOI 10.1109/ASE51524.2021.9678773
   Yu B, 2018, Arxiv, DOI arXiv:1709.04875
   Zhang CX, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P1221, DOI 10.1145/3540250.3549146
   Zhang CX, 2022, PROC INT CONF SOFTW, P623, DOI 10.1145/3510003.3510180
   Zhang SL, 2023, Arxiv, DOI arXiv:2302.10512
   Zhou X, 2021, IEEE T SOFTWARE ENG, V47, P243, DOI 10.1109/TSE.2018.2887384
   Zhou X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3338906.3338961
   Zhou X, 2018, IEEE INT CONF AUTOM, P802, DOI 10.1145/3238147.3240730
NR 42
TC 0
Z9 0
U1 7
U2 7
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 46
DI 10.1007/s10515-024-00445-w
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TA7S4
UT WOS:001238607100001
DA 2024-08-05
ER

PT J
AU Le, KT
   Andrzejak, A
AF Le, Kim Tuyen
   Andrzejak, Artur
TI Rethinking AI code generation: a one-shot correction approach based on
   user feedback
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE One-shot correction; User feedback; Code translation; Large Language
   Models; Code interpretation; Artificial Intelligence
AB Code generation has become an integral feature of modern IDEs, gathering significant attention. Notable approaches like GitHub Copilot and TabNine have been proposed to tackle this task. However, these tools may shift code writing tasks towards code reviewing, which involves modification from users. Despite the advantages of user feedback, their responses remain transient and lack persistence across interaction sessions. This is attributed to the inherent characteristics of generative AI models, which require explicit re-training for new data integration. Additionally, the non-deterministic and unpredictable nature of AI-powered models limits thorough examination of their unforeseen behaviors. We propose a methodology named One-shot Correction to mitigate these issues in natural language to code translation models with no additional re-training. We utilize decomposition techniques to break down code translation into sub-problems. The final code is constructed using code snippets of each query chunk, extracted from user feedback or selectively generated from a generative model. Our evaluation indicates comparable or improved performance compared to other models. Moreover, the methodology offers straightforward and interpretable approaches, which enable in-depth examination of unexpected results and facilitate insights for potential enhancements. We also illustrate that user feedback can substantially improve code translation models without re-training. Ultimately, we develop a preliminary GUI application to demonstrate the utility of our methodology in simplifying customization and assessment of suggested code for users.
C1 [Le, Kim Tuyen; Andrzejak, Artur] Heidelberg Univ, Heidelberg, Germany.
C3 Ruprecht Karls University Heidelberg
RP Le, KT; Andrzejak, A (corresponding author), Heidelberg Univ, Heidelberg, Germany.
EM tuyen.le@informatik.uni-heidelberg.de; artur.andrzejak@uni-heidelberg.de
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Abney S.P., 1992, Computation and Psycholinguistics, Principle-Based Parsing, P257, DOI 10.1007/978-94-011-3474-3_10
   Ahmad WU, 2021, Arxiv, DOI [arXiv:2103.06333, 10.48550/arXiv.2103.06333]
   Asare O, 2024, Arxiv, DOI arXiv:2204.04741
   Barke S, 2023, P ACM PROGRAM LANG, V7, DOI 10.1145/3586030
   Bielik P, 2016, PR MACH LEARN RES, V48
   Bird Christian, 2022, ACM Queue, P35, DOI 10.1145/3582083
   Cai YZ, 2024, Arxiv, DOI arXiv:2304.08103
   Carpenter A., 2021, 7 tips to help you learn a new programming language fast
   Charitsis Charis, 2022, L@S '22: Proceedings of the Ninth ACM Conference on Learning @ Scale, P113, DOI 10.1145/3491140.3528272
   Chen M., 2021, arXiv, DOI DOI 10.48550/ARXIV.2107.03374
   Dakhel AM, 2023, J SYST SOFTWARE, V203, DOI 10.1016/j.jss.2023.111734
   Egidi M., 2006, Contrib. Econ. Anal, V280, P15, DOI [10.1016/S0573-8555(06)80002-7, DOI 10.1016/S0573-8555(06)80002-7]
   Elgohary A, 2021, Arxiv, DOI arXiv:2103.14540
   Evtikhiev M, 2023, J SYST SOFTWARE, V203, DOI 10.1016/j.jss.2023.111741
   Fan A, 2021, T ASSOC COMPUT LING, V9, P82, DOI 10.1162/tacl_a_00356
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Gozalo-Brizuela R., 2023, arXiv, DOI DOI 10.48550/ARXIV.2301.04655
   Gur I, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P1339
   Heyman Geert, 2021, Onward! 2021: Proceedings of the 2021 ACM SIGPLAN International Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software, P39, DOI 10.1145/3486607.3486749
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Imai S, 2022, PROC IEEE ACM INT C, P319, DOI [10.1145/3510454.3522684, 10.1109/ICSE-Companion55297.2022.9793778]
   Iyer S, 2017, Arxiv, DOI arXiv:1704.08760
   Izadi M, 2022, PROC INT CONF SOFTW, P401, DOI 10.1145/3510003.3510172
   Kanerva P., 1992, Sparse distributed memory and related models
   Khandelwal U, 2021, Arxiv, DOI arXiv:2010.00710
   Kim S, 2021, PROC INT CONF SOFTW, P150, DOI 10.1109/ICSE43902.2021.00026
   Le KT, 2023, DATA MIN KNOWL DISC, V37, P167, DOI 10.1007/s10618-022-00866-9
   Li J, 2018, Arxiv, DOI arXiv:1711.09573
   Li YJ, 2022, SCIENCE, V378, P1092, DOI 10.1126/science.abq1158
   Lu S, 2022, Arxiv, DOI [arXiv:2203.07722, 10.48550/ARXIV.2203.07722]
   Mohapatra N., 2021, Int. J. Nat. Lang. Comput. (IJNLC), V10
   Nguyen N, 2022, IEEE WORK CONF MIN S, P1, DOI 10.1145/3524842.3528470
   Nijkamp E, 2022, Arxiv, DOI arXiv:2203.13474
   Parvez R, 2021, Arxiv, DOI arXiv:2108.11601
   Pearce H, 2022, P IEEE S SECUR PRIV, P754, DOI 10.1109/SP46214.2022.00057
   Pourcel J, 2022, LECT NOTES COMPUT SC, V13685, P739, DOI 10.1007/978-3-031-19806-9_42
   Ramshaw L. A., 1999, TEXT SPEECH LANG TEC, P157
   Ren S, 2020, Arxiv, DOI [arXiv:2009.10297, 10.48550/arXiv.2009.10297]
   Reynolds L, 2021, EXTENDED ABSTRACTS OF THE 2021 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'21), DOI 10.1145/3411763.3451760
   Schlegel V, 2019, PROCEEDINGS OF IUI 2019, P30, DOI 10.1145/3301275.3302267
   Schumacher M.E.H., 2020, P IEEE ACM 42 INT C, P476
   Shin J, 2021, J INF PROCESS SYST, V17, P537
   Su Y, 2018, ACM/SIGIR PROCEEDINGS 2018, P855, DOI 10.1145/3209978.3210013
   Sun J, 2022, IUI'22: 27TH INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES, P212, DOI 10.1145/3490099.3511119
   Svyatkovskiy A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1433, DOI 10.1145/3368089.3417058
   Vaithilingam P., 2022, CHI C HUM FACT COMP, P1
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang L, 2023, Arxiv, DOI arXiv:2305.04091
   Wei J., 2022, Advances in Neural Information Processing Systems, V35, P24824, DOI DOI 10.48550/ARXIV.2201.11903
   Weisz JD, 2022, IUI'22: 27TH INTERNATIONAL CONFERENCE ON INTELLIGENT USER INTERFACES, P369, DOI 10.1145/3490099.3511157
   Wu Y., 2022, arXiv
   Xu FF, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3487569
   Yao SY, 2023, Arxiv, DOI [arXiv:2305.10601, DOI 10.48550/ARXIV.2305.10601]
   Zhang T., 2002, J. Mach. Learn. Res., V2
NR 54
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 60
DI 10.1007/s10515-024-00451-y
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YQ9R3
UT WOS:001270071300001
OA hybrid
DA 2024-08-05
ER

PT J
AU Fredericks, EM
   Moore, JM
   Diller, AC
AF Fredericks, Erik M.
   Moore, Jared M.
   Diller, Abigail C.
TI GenerativeGI: creating generative art with genetic improvement
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Generative art; Evolutionary algorithms; Grammatical evolution; Genetic
   improvement
AB Generative art is a domain in which artistic output is created via a procedure or heuristic that may result in digital and/or physical results. A generative artist will typically act as a domain expert by specifying the algorithms that will form the basis of the piece as well as defining and refining parameters that can impact the results, however such efforts can require a significant amount of time to generate the final output. This article presents and extends GenerativeGI, an evolutionary computation-based technique for creating generative art by automatically searching through combinations of artistic techniques and their accompanying parameters to produce outputs desirable by the designer. Generative art techniques and their respective parameters are encoded within a grammar that is then the target for genetic improvement. This grammar-based approach, combined with a many-objective evolutionary algorithm, enables the designer to efficiently search through a massive number of possible outputs that reflect their aesthetic preferences. We included a total of 15 generative art techniques and performed three separate empirical evaluations, each of which targets different aesthetic preferences and varying aspects of the search heuristic. Experimental results suggest that GenerativeGI can produce outputs that are significantly more novel than those generated by random or single objective search. Furthermore, GenerativeGI produces individuals with a larger number of relevant techniques used to generate their overall composition.
C1 [Fredericks, Erik M.; Moore, Jared M.; Diller, Abigail C.] Grand Valley State Univ, Sch Comp, 1 Campus Dr, Allendale, MI 49401 USA.
C3 Grand Valley State University
RP Fredericks, EM (corresponding author), Grand Valley State Univ, Sch Comp, 1 Campus Dr, Allendale, MI 49401 USA.
EM frederer@gvsu.edu; moorejar@gvsu.edu; dillerab@mail.gvsu.edu
FU Michigan Space Grant Consortium [80NSSC20M0124]; Michigan Space Grant
   Consortium; Grand Valley State University
FX We gratefully acknowledge support from the Michigan Space Grant
   Consortium (award number 80NSSC20M0124) and Grand Valley State
   University.
CR Gatys LA, 2015, Arxiv, DOI [arXiv:1508.06576, 10.1167/16.12.326, DOI 10.1167/16.12.326]
   Achiam OJ, 2023, Arxiv, DOI arXiv:2303.08774
   Agarwal V., Painting and sketching with OpenCV in Python
   Angeline P., 1994, Advances in Genetic Programming, V1, P75, DOI 10.7551/mitpress/1108.003.0009
   [Anonymous], 2023, TensorFlow: Neural style transfer
   [Anonymous], 2015, P COMPANION PUBLICAT
   Balan Kar, 2023, 2023 IEEE/CVF Conference on Computer Vision and Pattern Recognition Workshops (CVPRW), P913, DOI 10.1109/CVPRW59228.2023.00098
   Bergstrom I, 2015, LEONARDO, V48, P25, DOI 10.1162/LEON_a_00934
   Boden MA, 2009, DIGIT CREAT, V20, P21, DOI 10.1080/14626260902867915
   Bradski G, 2000, DR DOBBS J, V25, P120
   Bruce BR, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1327, DOI 10.1145/2739480.2754752
   Cabral B., 1993, Computer Graphics Proceedings, P263, DOI 10.1145/166117.166151
   Cartwright S., 2017, Digital datascapes
   Clune J., 2011, Endlessforms. com: collaboratively evolving objects and 3d printing them
   Clune J., 2011, ECAL, P141
   Comba JLD, 2020, COMPUT SCI ENG, V22, P81, DOI 10.1109/MCSE.2020.3019834
   Compton K, 2015, LECT NOTES COMPUT SC, V9445, P154, DOI 10.1007/978-3-319-27036-4_14
   Crowson K, 2022, LECT NOTES COMPUT SC, V13697, P88, DOI 10.1007/978-3-031-19836-6_6
   De Smedt T, 2011, LECT NOTES COMPUT SC, V6625, P264, DOI 10.1007/978-3-642-20520-0_27
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Dehouche N, 2023, Arxiv, DOI [arXiv:2301.01902, 10.48550/arXiv.2301.01902, DOI 10.48550/ARXIV.2301.01902]
   den Heijer Eelco, 2013, Evolutionary and Biologically Inspired Music,Sound, Art and Design. Second International Conference, EvoMUSART 2013. Proceedings, P109, DOI 10.1007/978-3-642-36955-1_10
   Floridi L, 2020, MIND MACH, V30, P681, DOI 10.1007/s11023-020-09548-1
   Forbes AngusG., 2013, Proceedings of the ACM/Eurographics International Symposium on Computational Aesthetics in Graphics, Visualization, and Imaging (CAe), P37
   Fredericks E.M., 2023, P 12 INT WORKSHOP GE
   Galanter P., 2016, A Companion to Digital Art, P146, DOI [10.1002/9781118475249.ch5, DOI 10.1002/9781118475249.CH5]
   Goodfellow IJ, 2014, ADV NEUR IN, V27, P2672, DOI 10.1145/3422622
   Greenberg I., 2007, Processing: creative coding and computational art. Apress
   He YF, 2022, OPER RES PERSPECT, V9, DOI 10.1016/j.orp.2022.100237
   Helmuth T., 2016, Genetic Programming Theory and Practice XIII, P151, DOI DOI 10.1007/978-3-319-34223-8_9
   Holland J. H., 1992, ADAPTATION NATURAL A, DOI DOI 10.7551/MITPRESS/1090.001.0001
   Huizinga J, 2022, EVOL COMPUT, V30, P131, DOI 10.1162/evco_a_00301
   Johnson CG, 2016, INT J ARTS TECHNOL, V9, P4, DOI 10.1504/IJART.2016.075406
   KOZA JR, 1994, STAT COMPUT, V4, P87, DOI 10.1007/BF00175355
   La Cava W, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P741, DOI 10.1145/2908812.2908898
   Langdon WB, 2020, IEEE C EVOL COMPUTAT, DOI 10.1109/cec48606.2020.9185771
   Langdon WB, 2017, GENET PROGRAM EVOL M, V18, P5, DOI 10.1007/s10710-016-9273-9
   Langdon WB, 2015, IEEE T EVOLUT COMPUT, V19, P118, DOI 10.1109/TEVC.2013.2281544
   Lawler GF., 2010, Random Walk: A Modern Introduction, DOI [DOI 10.1017/CBO9780511750854, 10.1017/CBO9780511750854]
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Lehman J, 2011, GENET EVOL COMPUT, P37
   Liu H, 2007, INT FED INFO PROC, V250, P125
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Peppler K., 2005, Retrieved, V30, P314
   Perlin K, 2002, ACM T GRAPHIC, V21, P681, DOI 10.1145/566570.566636
   Petke Justyna, 2014, Genetic Programming. 17th European Conference (EuroGP 2014). Revised Selected Papers: LNCS 8599, P137, DOI 10.1007/978-3-662-44303-3_12
   Petke J, 2018, IEEE T SOFTWARE ENG, V44, P574, DOI 10.1109/TSE.2017.2702606
   Petke J, 2018, IEEE T EVOLUT COMPUT, V22, P415, DOI 10.1109/TEVC.2017.2693219
   Phung T., 2023, Int. J. Manag, V21
   Ploennigs J, 2022, Arxiv, DOI arXiv:2212.09399
   Rudnick J., 2004, Elements of the Random Walk: An Introduction for Advanced Students and Researchers, DOI DOI 10.1017/CBO9780511610912
   Ryan C., 1998, Genetic Programming. First European Workshop, EuroGP'98. Proceedings, P83, DOI 10.1007/BFb0055930
   Shiffman D, 2012, The nature of code: simulating natural systems with processing,Version 1.0
   Spector L, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION COMPANION (GECCO'12), P401
   Stanton A, 2022, ARTIF LIFE, V28, P479, DOI 10.1162/artl_a_00374
   Vega FF., 2020, Genet. Program. Theory Pract, V17, P25
   Vestergaard LS, 2017, 2017 GLOBAL INTERNET OF THINGS SUMMIT (GIOTS 2017), P77
   Virtanen P, 2020, NAT METHODS, V17, P261, DOI 10.1038/s41592-019-0686-2
   Wong B, 2011, NAT METHODS, V8, P5, DOI 10.1038/nmeth0111-5
   Zhang CS, 2023, Arxiv, DOI arXiv:2303.07909
NR 60
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 23
DI 10.1007/s10515-024-00414-3
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JE2Q0
UT WOS:001171426000002
DA 2024-08-05
ER

PT J
AU Shen, J
   Li, Z
   Lu, YF
   Pan, MX
   Li, XD
AF Shen, Jian
   Li, Zhong
   Lu, Yifei
   Pan, Minxue
   Li, Xuandong
TI Mitigating the impact of mislabeled data on deep predictive models: an
   empirical study of learning with noise approaches in software
   engineering tasks
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical study; Deep predictive model; Learning from noisy labels;
   Label noise
ID MACHINE; CLASSIFICATION
AB Deep predictive models have been widely employed in software engineering (SE) tasks due to their remarkable success in artificial intelligence (AI). Most of these models are trained in a supervised manner, and their performance heavily relies on the quality of training data. Unfortunately, mislabeling or label noise is a common issue in SE datasets, which can significantly affect the validity of models trained on such datasets. Although learning with noise approaches based on deep learning (DL) have been proposed to address the issue of mislabeling in AI datasets, the distinct characteristics of SE datasets in terms of size and data quality raise questions about the effectiveness of these approaches within the SE context. In this paper, we conduct a comprehensive study to understand how mislabeled samples exist in SE datasets, how they impact deep predictive models, and how well existing learning with noise approaches perform on SE datasets. Through an empirical evaluation on two representative datasets for the Bug Report Classification and Software Defect Prediction tasks, our study reveals that learning with noise approaches have the potential to handle mislabeled samples in SE tasks, but their effectiveness is not always consistent. Our research shows that it is crucial to address mislabeled samples in SE tasks. To achieve this, it is essential to take into account the specific properties of the dataset to develop effective solutions. We also highlight the importance of addressing potential class distribution changes caused by mislabeled samples and present the limitations of existing approaches for addressing mislabeled samples. Therefore, we urge the development of more advanced techniques to improve the effectiveness and reliability of deep predictive models in SE tasks.
C1 [Shen, Jian; Li, Zhong; Lu, Yifei; Pan, Minxue; Li, Xuandong] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
C3 Nanjing University
RP Pan, MX (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
EM dz21320003@smail.nju.edu.cn; mg1733033@smail.nju.edu.cn; lyf@nju.edu.cn;
   mxp@nju.edu.cn; lxd@nju.edu.cn
FU National Natural Science Foundation of China
FX No Statement Available
CR Al-Hroob A, 2018, INFORM SOFTWARE TECH, V101, P1, DOI 10.1016/j.infsof.2018.04.010
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Cabral GG, 2019, PROC INT CONF SOFTW, P666, DOI 10.1109/ICSE.2019.00076
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen PF, 2021, AAAI CONF ARTIF INTE, V35, P11442
   Cheng H., 2021, 9 INT C LEARNING REP
   Clark P., 1989, Machine Learning, V3, P261, DOI 10.1023/A:1022641700528
   Cliff N., 1996, ORDINAL METHODS BEHA
   Cui Y, 2019, PROC CVPR IEEE, P9260, DOI 10.1109/CVPR.2019.00949
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   Feng S, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106662
   Ferreira F, 2021, 36TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, SAC 2021, P1542, DOI 10.1145/3412841.3442029
   Frénay B, 2014, IEEE T NEUR NET LEAR, V25, P845, DOI 10.1109/TNNLS.2013.2292894
   Fu M, 2022, IEEE WORK CONF MIN S, P608, DOI 10.1145/3524842.3528452
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Gamberger D, 1999, MACHINE LEARNING, PROCEEDINGS, P143
   github, Project Homepage
   GiulianoAntoniol KamelAyari, 2018, P 28 ANN INT C COMP, P2
   Graves A, 2012, STUD COMPUT INTELL, V385, P1, DOI [10.1162/neco.1997.9.8.1735, 10.1007/978-3-642-24797-2, 10.1162/neco.1997.9.1.1]
   Han B, 2018, ADV NEUR IN, V31, DOI 10.5555/3327757.3327944
   Han JX, 2023, AUTOMAT SOFTW ENG, V30, DOI 10.1007/s10515-023-00379-9
   He Shufan, 2022, 2022 IEEE 24th Int Conf on High Performance Computing & Communications; 8th Int Conf on Data Science & Systems; 20th Int Conf on Smart City; 8th Int Conf on Dependability in Sensor, Cloud & Big Data Systems & Application (HPCC/DSS/SmartCity/DependSys), P2062, DOI 10.1109/HPCC-DSS-SmartCity-DependSys57074.2022.00307
   Herbold S, 2021, Arxiv, DOI arXiv:2003.05357
   Herbold S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1063, DOI 10.1145/3180155.3182542
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hindle A., 2011, Automated topic naming to support cross-project analysis of software maintenance activities, P163
   Hongxin Wei, 2020, 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). Proceedings, P13723, DOI 10.1109/CVPR42600.2020.01374
   Huang L, 2020, ADV NEURAL INFORM PR
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Jain PK, 2022, IEEE T COMPUT SOC SY, V9, P1777, DOI 10.1109/TCSS.2022.3200890
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Kallis R, 2019, PROC IEEE INT CONF S, P406, DOI 10.1109/ICSME.2019.00070
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Khan S.S., 2020, 32 INT C SOFTWARE EN, P347
   Khoshgoftaar TM, 2007, J COMPUT SCI TECHNOL, V22, P387, DOI 10.1007/s11390-007-9054-2
   Khoshgoftaar TM, 2004, PROCEEDINGS OF THE 2004 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI-2004), P369, DOI 10.1109/IRI.2004.1431489
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kim Yoon, 2014, EMNLP, P1746, DOI 10.3115/v1/D14-1181
   Kochhar P. S., 2014, MSR, P296
   Krause J, 2016, LECT NOTES COMPUT SC, V9907, P301, DOI 10.1007/978-3-319-46487-9_19
   Laurikkala J, 2001, LECT NOTES ARTIF INT, V2101, P63, DOI 10.1007/3-540-48229-6_9
   Li GJ, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P480, DOI [10.1109/saner48275.2020.9054826, 10.1109/SANER48275.2020.9054826]
   Li ZQ, 2018, IET SOFTW, V12, P161, DOI 10.1049/iet-sen.2017.0148
   Lin B, 2019, PROC INT CONF SOFTW, P548, DOI 10.1109/ICSE.2019.00066
   Lina Gong, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P698, DOI 10.1109/ASE.2019.00071
   Lloyd RV, 2004, AM J SURG PATHOL, V28, P1336, DOI 10.1097/01.pas.0000135519.34847.f6
   Ma X., 2020, INT C MACHINE LEARNI, P6543
   Manwani N, 2013, IEEE T CYBERNETICS, V43, P1146, DOI 10.1109/TSMCB.2012.2223460
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Nafi KW, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1026, DOI 10.1109/ASE.2019.00099
   Pak C, 2018, INT J SOFTW ENG KNOW, V28, P811, DOI 10.1142/S0218194018500237
   Palomba F, 2021, IEEE T SOFTWARE ENG, V47, P108, DOI 10.1109/TSE.2018.2883603
   Pan C, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9102138
   Pandey N, 2017, INNOV SYST SOFTW ENG, V13, P279, DOI 10.1007/s11334-017-0294-1
   Pudlitz F, 2019, INT REQUIR ENG CONF, P211, DOI 10.1109/RE.2019.00031
   Qin HM, 2018, INTERNETWARE'18: PROCEEDINGS OF THE TENTH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, DOI 10.1145/3275219.3275239
   Sabzevari M, 2018, NEUROCOMPUTING, V275, P2374, DOI 10.1016/j.neucom.2017.11.012
   Sajnani H., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P265
   Shafiq S, 2020, Arxiv, DOI arXiv:2005.13299
   Song H, 2022, Arxiv, DOI arXiv:2007.08199
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Thongkam J, 2008, LECT NOTES COMPUT SC, V4977, P99, DOI 10.1007/978-3-540-89376-9_10
   Wang X., 2020, FCS Communications in Computer and Information Science, P95
   WILCOXON F, 1946, J ECON ENTOMOL, V39, P269, DOI 10.1093/jee/39.2.269
   Wu XX, 2021, IEEE T SOFTWARE ENG, V48, P2541, DOI 10.1109/TSE.2021.3063727
   Xia X., 2021, 9 INT C LEARNING REP
   Xia X., 2020, P NEUIPS DEC 6 12 VI, V33, P7597
   Xiao T, 2015, PROC CVPR IEEE, P2691, DOI 10.1109/CVPR.2015.7298885
   Xu BW, 2022, IEEE T SOFTWARE ENG, V48, P3423, DOI 10.1109/TSE.2021.3093761
   Yang YM, 2020, Arxiv, DOI arXiv:2011.14597
   Yang YM, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3503509
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Yu XR, 2019, PR MACH LEARN RES, V97
   Zhang CY, 2021, COMMUN ACM, V64, P107, DOI 10.1145/3446776
   Zhang X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P807, DOI 10.1145/3338906.3338931
   Zhang Y., 2021, 9 INT C LEARNING REP
   Zhang ZL, 2018, ADV NEUR IN, V31
   Zheng Songzhu, 2020, PMLR, P11447
   Zhu ZY, 2021, DATA MIN KNOWL DISC, V35, P1369, DOI 10.1007/s10618-021-00755-7
NR 83
TC 0
Z9 0
U1 2
U2 2
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 33
DI 10.1007/s10515-024-00435-y
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MZ4U9
UT WOS:001197452600002
DA 2024-08-05
ER

PT J
AU Shen, YH
   Ju, XL
   Chen, X
   Yang, G
AF Shen, Yiheng
   Ju, Xiaolin
   Chen, Xiang
   Yang, Guang
TI Bash comment generation via data augmentation and semantic-aware
   CodeBERT
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Bash code; Code comment generation; Adversarial training; Data
   augmentation
AB Understanding Bash code is challenging for developers due to its syntax flexibility and unique features. Bash lacks sufficient training data compared to comment generation tasks in popular programming languages. Furthermore, collecting more real Bash code and corresponding comments is time-consuming and labor-intensive. In this study, we propose a two-module method named Bash2Com for Bash code comments generation. The first module, NP-GD, is a gradient-based automatic data augmentation component that enhances normalization stability when generating adversarial examples. The second module, MASA, leverages CodeBERT to learn the rich semantics of Bash code. Specifically, MASA considers the representations learned at each layer of CodeBERT as a set of semantic information that captures recursive relationships within the code. To generate comments for different Bash snippets, MASA employs LSTM and attention mechanisms to dynamically concentrate on relevant representational information. Then, we utilize the Transformer decoder and beam search algorithm to generate code comments. To evaluate the effectiveness of Bash2Com, we consider a corpus of 10,592 Bash code and corresponding comments. Compared with the state-of-the-art baselines, our experimental results show that Bash2Com can outperform all baselines by at least 10.19%, 11.81%, 2.61%, and 6.13% in terms of the performance measures BLEU-3/4, METEOR, and ROUGR-L. Moreover, the rationality of NP-GD and MASA in Bash2Com are verified by ablation studies. Finally, we conduct a human evaluation to illustrate the effectiveness of Bash2Com from practitioners' perspectives.
C1 [Shen, Yiheng; Ju, Xiaolin; Chen, Xiang] Nantong Univ, Sch Informat Sci & Technol, Nantong 226019, Jiangsu, Peoples R China.
   [Yang, Guang] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing 210016, Jiangsu, Peoples R China.
C3 Nantong University; Nanjing University of Aeronautics & Astronautics
RP Ju, XL; Chen, X (corresponding author), Nantong Univ, Sch Informat Sci & Technol, Nantong 226019, Jiangsu, Peoples R China.
EM yiheng.s@outlook.com; ju.xl@ntu.edu.cn; xchencs@ntu.edu.cn;
   novelyg@outlook.com
CR Ahmad WU, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2655
   Ahmad Wasi Uddin, 2020, P 58 ANN M ASS COMPU, P4998, DOI 10.18653/v1/2020.acl-main.449
   Alon U., 2018, INT C LEARN REPR
   Anaby-Tavor A, 2020, AAAI CONF ARTIF INTE, V34, P7383
   [Anonymous], 2017, Technical Report UW-CSE-17-03-01
   Banerjee S., 2005, P ACL WORKSHOP INTRI, P65, DOI DOI 10.3115/1626355.1626389
   Cao KB, 2021, PROC INT CONF SOFTW, P1273, DOI 10.1109/ICSE43902.2021.00116
   Chen FX, 2022, INT C PROGRAM COMPRE, P401, DOI 10.1145/3524610.3527917
   Cho K., 2014, P 2014 C EMP METH NA, DOI 10.3115/v1/D14-1179
   Clark K., 2019, INT C LEARNING REPRE
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Dong X., 2021, P 59 ANN M ASS COMP, V1, P5158, DOI [10.18653/v1/2021.acl-long.401, DOI 10.18653/V1/2021.ACL-LONG.401]
   Ebrahimi J, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 2, P31
   Eddy BP, 2013, CONF PROC INT SYMP C, P13, DOI 10.1109/ICPC.2013.6613829
   Fatima S, 2023, IEEE T SOFTWARE ENG, V49, P1912, DOI 10.1109/TSE.2022.3201209
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Goodfellow IJ, 2015, P 3 INT C LEARNING R
   Graves A, 2005, NEURAL NETWORKS, V18, P602, DOI 10.1016/j.neunet.2005.06.042
   Gu J, 2022, EUR CON SFTWR MTNCE, P935, DOI 10.1109/SANER53432.2022.00112
   Gu YX, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P8410
   Guang Yang, 2021, 2021 8th International Conference on Dependable Systems and Their Applications (DSA), P30, DOI 10.1109/DSA52907.2021.00013
   Guo DY, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P7212
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Haque S, 2020, IEEE WORK CONF MIN S, P300, DOI 10.1145/3379597.3387449
   He H, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1217, DOI 10.1145/3338906.3342494
   Hochreiter S., 1996, Advances in neural information processing systems, V9
   Hu X, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P5, DOI 10.1109/ASE51524.2021.9678552
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Irsan IC, 2023, Arxiv, DOI arXiv:2303.12299
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Jawahar G, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P3651
   Jia-Wei Kan, 2020, 2020 International Computer Symposium (ICS), P67, DOI 10.1109/ICS51289.2020.00023
   Jiang HM, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P2177
   Kondratyuk D, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P2779
   Lan Zhenzhong., 2019, INT C LEARNING REPRE
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Li JA, 2017, PROC CVPR IEEE, P1951, DOI 10.1109/CVPR.2017.211
   Li Z, 2023, IEEE T RELIAB, V72, P258, DOI 10.1109/TR.2022.3154773
   Li Z, 2021, J SYST SOFTWARE, V181, DOI 10.1016/j.jss.2021.111036
   Lin H, 2023, J SYST SOFTWARE, V195, DOI 10.1016/j.jss.2022.111513
   Lin XV, 2018, PROCEEDINGS OF THE ELEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2018), P3107
   Liu K, 2022, 13TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, INTERNETWARE 2022, P147, DOI 10.1145/3545258.3545260
   Liu K, 2022, EUR CON SFTWR MTNCE, P577, DOI 10.1109/SANER53432.2022.00075
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Phan L, 2021, NLP4PROG 2021: THE 1ST WORKSHOP ON NATURAL LANGUAGE PROCESSING FOR PROGRAMMING (NLP4PROG 2021), P40
   Madry A, 2018, INT C LEARN REPR, DOI 10.48550/arXiv.1706.06083
   Mastropaolo A, 2023, IEEE T SOFTWARE ENG, V49, P1580, DOI 10.1109/TSE.2022.3183297
   MIYATO T., 2017, 5 INT C LEARN REPR I
   Miyato T, 2019, IEEE T PATTERN ANAL, V41, P1979, DOI 10.1109/TPAMI.2018.2858821
   Moreno-Barea FJ, 2018, 2018 IEEE SYMPOSIUM SERIES ON COMPUTATIONAL INTELLIGENCE (IEEE SSCI), P728, DOI 10.1109/SSCI.2018.8628917
   Morris JX, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING: SYSTEM DEMONSTRATIONS, P119
   Newham C., 2005, Learning the bash Shell, V3rd
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Provilkov I, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P1882
   Rey D, 2011, International Encyclopedia of Statistical Science, P1658, DOI [DOI 10.1007/978-3-642-04898-2616, 10.1007/978-3-642-04898-2616, 10.1007/978-3-642-04898-2_616]
   Rouge L.C., 2004, P WORKSHOP TEXT SUMM
   SamWiseman Alexander M., 2016, P 2016 C EMP METH NA, P1296, DOI DOI 10.18653/V1/D16-1137
   Schmidt M, 2007, LECT NOTES ARTIF INT, V4701, P286
   Shi ES, 2023, PROC INT CONF SOFTW, P2198, DOI 10.1109/ICSE48619.2023.00185
   Shrivastava A, 2017, PROC CVPR IEEE, P2242, DOI 10.1109/CVPR.2017.241
   Simon-Gabriel C.-J., 2019, P 36 INT C MACH LEAR, P5809
   Su TC, 2020, PR INT CONF DATA SC, P363, DOI 10.1109/DSAA49011.2020.00050
   Sutskever I, 2014, ADV NEUR IN, V27
   Trizna D., 2021, arXiv
   Vaswani A, 2017, ADV NEUR IN, V30
   Vedantam R, 2015, PROC CVPR IEEE, P4566, DOI 10.1109/CVPR.2015.7299087
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wei B., 2019, Advances in neural information processing systems, P6559
   Wei BL, 2020, IEEE INT CONF AUTOM, P349, DOI 10.1145/3324884.3416578
   Wei J, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P6382
   Wu HQ, 2021, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, ACL-IJCNLP 2021, P1078
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Xie CH, 2017, IEEE I CONF COMP VIS, P1378, DOI 10.1109/ICCV.2017.153
   Xie Q., 2020, Neural Information Processing Systems (NeurIPS), V33, P6256
   Yang G, 2023, J SYST SOFTWARE, V197, DOI 10.1016/j.jss.2022.111577
   Yang G, 2022, EUR CON SFTWR MTNCE, P361, DOI 10.1109/SANER53432.2022.00052
   Yang G, 2021, ASIA PAC SOFWR ENG, P213, DOI 10.1109/APSEC53868.2021.00029
   Yang G, 2022, KNOWL-BASED SYST, V237, DOI 10.1016/j.knosys.2021.107858
   Ye W, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P2309, DOI 10.1145/3366423.3380295
   Yu C, 2022, PROC IEEE INT CONF S, P82, DOI 10.1109/ICSME55016.2022.00016
   Zhang J, 2020, PROC INT CONF SOFTW, P1385, DOI 10.1145/3377811.3380383
   Zhang XQ, 2021, THE 12TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, INTERNETWARE 2020, P185, DOI 10.1145/3457913.3457937
   Zhao WX, 2023, Arxiv, DOI arXiv:2303.18223
   Zhu C., 2020, 8 INT C LEARNING REP
NR 89
TC 0
Z9 0
U1 4
U2 4
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 30
DI 10.1007/s10515-024-00431-2
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MC0H6
UT WOS:001191306100001
OA Green Submitted
DA 2024-08-05
ER

PT J
AU Ni, YC
   Du, X
   Yuan, Y
   Xiao, RL
   Chen, GL
AF Ni, Youcong
   Du, Xin
   Yuan, Yuan
   Xiao, Ruliang
   Chen, Gaolin
TI Tsoa: a two-stage optimization approach for GCC compilation options to
   minimize execution time
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Compiler optimization; GCC; Option selection; Pattern mining;
   Evolutionary algorithm
ID COMPILER; SELECTION
AB The open-source compiler GCC offers numerous options to improve execution time. Two categories of approaches, machine learning-based and design space exploration, have emerged for selecting the optimal set of options. However, they continue to face challenge in quickly obtaining high-quality solutions due to the large and discrete optimization space, time-consuming utility evaluation for selected options, and complex interactions among options. To address these challenges, we propose TSOA, a Two-Stage Optimization Approach for GCC compilation options to minimize execution time. In the first stage, we present OPPM, an Option Preselection algorithm based on Pattern Mining. OPPM generates diverse samples to cover a wide range of option interactions. It subsequently mines frequent options from both objective-improved and non-improved samples. The mining results are further validated using CRC codes to precisely preselect options and reduce the optimization space. Transitioning to the second stage, we present OSEA, an Option Selection Evolutionary optimization Algorithm. OSEA is grounded in solution preselection and an option interaction graph. The solution preselection employs a random forest to build a classifier, efficiently identifying promising solutions for the next-generation population and thereby reducing the time spent on utility evaluation. Simultaneously, the option interaction graph is built to capture option interplays and their influence on objectives from evaluated solutions. Then, high-quality solutions are generated based on the option interaction graph. We evaluate the performance of TSOA by comparing it with representative machine learning-based and design space exploration approaches across a diverse set of 20 problem instances from two benchmark platforms. Additionally, we validate the effectiveness of OPPM and conduct related ablation experiments. The experimental results show that TSOA outperforms state-of-the-art approaches significantly in both optimization time and solution quality. Moreover, OPPM outperforms other option preselection algorithms, while the effectiveness of random forest-assisted solution preselection, along with new solution generation based on the option interaction graph, has been verified.
C1 [Ni, Youcong; Du, Xin; Xiao, Ruliang; Chen, Gaolin] Fujian Normal Univ, Coll Comp & Cyber Secur, Fuzhou, Peoples R China.
   [Yuan, Yuan] Beihang Univ, Beijing, Peoples R China.
C3 Fujian Normal University; Beihang University
RP Du, X (corresponding author), Fujian Normal Univ, Coll Comp & Cyber Secur, Fuzhou, Peoples R China.
EM xindu79@126.com
FU National Natural Science Foundation of China [62172097]; Natural Science
   of Fujian Province [2021J01166]
FX This work is supported by the National Natural Science Foundation of
   China (No. 62172097), the Natural Science of Fujian Province (No.
   2021J01166).
CR Agakov F, 2006, INT SYM CODE GENER, P295
   Ashouri AH, 2018, SPRINGERBR APPL SCI, P41, DOI 10.1007/978-3-319-71489-9_3
   Ashouri AH, 2019, ACM COMPUT SURV, V51, DOI 10.1145/3197978
   Ashouri AH, 2016, ACM T ARCHIT CODE OP, V13, DOI 10.1145/2928270
   Bajpai V., 2012, 2012 IEEE Students' Conference on Electrical, Electronics and Computer Science (SCEECS 2012), DOI 10.1109/SCEECS.2012.6184810
   Ben Asher Y, 2017, 2017 IEEE 11TH INTERNATIONAL SYMPOSIUM ON EMBEDDED MULTICORE/MANY-CORE SYSTEMS-ON-CHIP (MCSOC 2017), P52, DOI 10.1109/MCSoC.2017.31
   Blackmore Craig, 2017, arXiv
   Cavazos J, 2007, INT SYM CODE GENER, P185
   CBench, 2020, about us
   Cervantes J, 2020, NEUROCOMPUTING, V408, P189, DOI 10.1016/j.neucom.2019.10.118
   Chen JJ, 2021, PROC INT CONF SOFTW, P1198, DOI 10.1109/ICSE43902.2021.00110
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Fursin G., 2009, GCC DEV SUMM
   Fursin G, 2011, INT J PARALLEL PROG, V39, P296, DOI 10.1007/s10766-010-0161-2
   Garciarena U, 2016, PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'16 COMPANION), P1159, DOI 10.1145/2908961.2931696
   Georgiou K, 2018, SCOPES '18: PROCEEDINGS OF THE 21ST INTERNATIONAL WORKSHOP ON SOFTWARE AND COMPILERS FOR EMBEDDED SYSTEMS, P35, DOI 10.1145/3207719.3207727
   Glek T, 2010, Arxiv, DOI arXiv:1010.2196
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   Kulkarni P, 2004, ACM SIGPLAN NOTICES, V39, P171, DOI 10.1145/996893.996863
   Kulkarni P.A., 2005, ACM T ARCHIT CODE OP, V2, P165
   Kulkarni PA, 2007, INT SYM CODE GENER, P157
   Leather H, 2020, INT FORUM DES LANG, DOI 10.1109/fdl50818.2020.9232934
   Lin S.C., 2008, 2008 13 AS PAC COMP, P1
   Liu H, 2022, ELECTRONICS-SWITZ, V11, DOI 10.3390/electronics11152452
   [刘慧 Liu Hui], 2019, [计算机研究与发展, Journal of Computer Research and Development], V56, P2012
   López-Ibáñez M, 2016, OPER RES PERSPECT, V3, P43, DOI 10.1016/j.orp.2016.09.002
   Martins LGA, 2016, ACM T ARCHIT CODE OP, V13, DOI 10.1145/2883614
   Ni YC, 2019, SWARM EVOL COMPUT, V50, DOI 10.1016/j.swevo.2019.100574
   [倪友聪 Ni Youcong], 2019, [软件学报, Journal of Software], V30, P1269
   Nobre R, 2016, ACM SIGPLAN NOTICES, V51, P21, DOI [10.1145/2907950.2907959, 10.1145/2980930.2907959]
   Pallister J, 2015, COMPUT J, V58, P95, DOI 10.1093/comjnl/bxt129
   Paul A, 2018, IEEE T IMAGE PROCESS, V27, P4012, DOI 10.1109/TIP.2018.2834830
   PolyBench, 2020, about us
   Potena Pasqualina., 2007, Joint Meeting of the European Software Engineering Conference and ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE), P583
   SAFAVIAN SR, 1991, IEEE T SYST MAN CYB, V21, P660, DOI 10.1109/21.97458
   SARWATE DV, 1988, COMMUN ACM, V31, P1008, DOI 10.1145/63030.63037
   Schwender H, 2010, ADV GENET, V72, P25, DOI [10.1016/B978-0-12-380862-2.00002-3, 10.1016/S0065-2660(10)72002-2]
   Tagtekin B., 2021, 2021 INT C INNOVATIO, P1
   Wang Z, 2018, P IEEE, V106, P1879, DOI 10.1109/JPROC.2018.2817118
NR 39
TC 0
Z9 0
U1 3
U2 3
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD NOV
PY 2024
VL 31
IS 2
AR 39
DI 10.1007/s10515-024-00437-w
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OM6T9
UT WOS:001207737700001
DA 2024-08-05
ER

PT J
AU Anwar, Z
   Afzal, H
AF Anwar, Zeeshan
   Afzal, Hammad
TI Mining crowd sourcing repositories for open innovation in software
   engineering
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Open innovation; Community question answering; Topic modeling; Sentiment
   analysis; Quality assessment; Crowd sourcing
AB Various development tools have been introduced and the choice of suitable development tool depends on the particular context like the type of application to be developed, the development process and application domain, etc. The real challenge is to deliver new features at the right time with a faster development cycle. The selection of suitable development tools will help developers to save time and effort. In this research, we will explore software engineering repositories (like StackOverflow) to collect feedback from developers about development tools. This will explore which features in a development tool are most important, which features are missing, and which features require changes. The answers to these questions can be found by mining the community question-answering sites (CQA). We will use user feedback to innovate the new features in the development tool. Various techniques of Big Data, Data Mining, Deep Learning, and Transformers including Generative Pre-Training Transformer will be used in our research. Some of the major techniques include (i) data collection from CQA sites like StackOverflow, (ii) data preprocessing (iii) categories the data into various topics using topic modeling (iv) sentiment analysis of data to get positive or negative aspects of features (v) ranking of users and their feedback. The output of this research will categorize the users feedback into various ideas, this will help organizations to decide which features are required, which features are not required, which features are difficult or confusing, and which new features should be introduced into a new release.
C1 [Anwar, Zeeshan; Afzal, Hammad] Natl Univ Sci & Technol, Dept Comp Software Engn, H-12, Islamabad 41000, Pakistan.
C3 National University of Sciences & Technology - Pakistan
RP Anwar, Z (corresponding author), Natl Univ Sci & Technol, Dept Comp Software Engn, H-12, Islamabad 41000, Pakistan.
EM zeeshan.phdcse@students.mcs.edu.pk; hammad.afzal@mcs.edu.pk
RI Anwar, Zeeshan/D-8774-2014
OI Anwar, Zeeshan/0000-0002-8029-0604
CR Anwar Z, 2023, J INTELL SYST, V32, DOI 10.1515/jisys-2023-0057
   Blohm I, 2016, INFORM SYST RES, V27, P27, DOI 10.1287/isre.2015.0605
   Bo Pang, 2008, Foundations and Trends in Information Retrieval, V2, P1, DOI 10.1561/1500000001
   Enkel E, 2009, R&D MANAGE, V39, P311, DOI 10.1111/j.1467-9310.2009.00570.x
   Estellés-Arolas E, 2012, J INF SCI, V38, P189, DOI 10.1177/0165551512437638
   Ginsca AL, 2013, P 2013 WORKSH DAT DR, P25, DOI [10.1145/2513577.2513579, DOI 10.1145/2513577.2513579]
   GKOTSIS G, 2014, P 2014 ACM C WEB SCI, P202, DOI [DOI 10.1145/2615569.2615681, 10.1145/2615569, DOI 10.1145/2615569]
   Gómez M, 2017, IEEE SOFTWARE, V34, P81, DOI 10.1109/MS.2017.46
   Hope T, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P235, DOI 10.1145/3097983.3098038
   Howe J., 2006, WIRED MAGAZINE, V14, P1, DOI DOI 10.1086/599595
   Novielli N, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P33, DOI 10.1145/2804381.2804387
   Poetz MK, 2012, J PROD INNOVAT MANAG, V29, P245, DOI 10.1111/j.1540-5885.2011.00893.x
   Ponzanelli L, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P645, DOI 10.1145/2889160.2889172
   Stol KJ, 2017, IEEE SOFTWARE, V34, P30, DOI 10.1109/MS.2017.52
   van de Vrande V, 2009, TECHNOVATION, V29, P423, DOI 10.1016/j.technovation.2008.10.001
   Yin HS, 2017, PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON COMMUNICATION AND INFORMATION PROCESSING (ICCIP 2017), P45, DOI 10.1145/3162957.3162965
   Yin HS, 2017, LECT NOTES COMPUT SC, V10611, P237, DOI 10.1007/978-3-319-69926-4_17
NR 17
TC 3
Z9 3
U1 1
U2 3
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 11
DI 10.1007/s10515-023-00410-z
PG 6
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EG3B8
UT WOS:001137719200001
DA 2024-08-05
ER

PT J
AU Mafi, Z
   Mirian-Hosseinabadi, SH
AF Mafi, Zohreh
   Mirian-Hosseinabadi, Seyed-Hassan
TI Regression test selection in test-driven development
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Test-driven development (TDD); Regression test;
   Program differencing; Segmentation; Change detection
ID EMPIRICAL-EVALUATION
AB The large number of unit tests produced in the test-driven development (TDD) method and the iterative execution of these tests extend the regression test execution time in TDD. This study aims to reduce test execution time in TDD. We propose a TDD-based approach that creates traceable code elements and connects them to relevant test cases to support regression test selection during the TDD process. Our proposed hybrid technique combines text and syntax program differences to select related test cases using the nature of TDD. We use a change detection algorithm to detect program changes. Our experience is reported with a tool called RichTest, which implements this technique. In order to evaluate our work, seven TDD projects have been developed. The implementation results indicate that the RichTest plugin significantly decreases the number of test executions and also the time of regression testing despite considering the overhead time. The test suite effectively enables fault detection because the selected test cases are related to the modified partitions. Moreover, the test cases cover the entire modified partitions; accordingly, the selection algorithm is safe. The concept is particularly designed for the TDD method. Although this idea is applicable in any programming language, it is already implemented as a plugin in Java Eclipse.
C1 [Mafi, Zohreh] Sharif Univ Technol, Fac Engn, Intl Campus, Kish Isl, Iran.
   [Mirian-Hosseinabadi, Seyed-Hassan] Sharif Univ Technol, Fac Member Comp Engn Dept, Tehran, Iran.
C3 Sharif University of Technology; Sharif University of Technology
RP Mirian-Hosseinabadi, SH (corresponding author), Sharif Univ Technol, Fac Member Comp Engn Dept, Tehran, Iran.
EM zohreh.mafi1@sharif.edu; hmirian@sharif.edu
RI Mafi, Zohreh/JVD-8619-2023
OI Mafi, Zohreh/0000-0002-8724-7019
CR Abadeh MN, 2015, J SOFTW-EVOL PROC, V27, P913, DOI 10.1002/smr.1752
   Ammann Paul., 2008, Introduction to Software Testing, DOI DOI 10.1017/CBO9780511809163
   Apiwattanapong T, 2007, AUTOMAT SOFTW ENG, V14, P3, DOI 10.1007/s10515-006-0002-0
   Archambault D., 2009, P GRAPHICS INTERFACE
   Asaduzzaman M, 2013, PROC IEEE INT CONF S, P230, DOI 10.1109/ICSM.2013.34
   Astels D., 2003, TEST DRIVEN DEV PRAC
   Beck K., 2003, Test Driven Development: By Example
   Beller M, 2019, IEEE T SOFTWARE ENG, V45, P261, DOI 10.1109/TSE.2017.2776152
   Beningo J., 2022, Embedded Software Design: A Practical Approach to Architecture, Processes, and Coding Techniques, P197
   Binkley D., 1992, IEEE C SOFTW MAINT
   Biswas S, 2011, INFORM-J COMPUT INFO, V35, P289
   Borle NC, 2018, EMPIR SOFTW ENG, V23, P1931, DOI 10.1007/s10664-017-9576-3
   Canfora G, 2009, PROC INT CONF SOFTW, P595, DOI 10.1109/ICSE.2009.5070564
   Cibulski H., 2011, IEEE 4 INT C SOFTW T
   Dalton J., 2019, Great Big Agile, P263
   Debin G., 2008, INT C INFORM COMMUNI
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Falleri J., 2014, 29 ACM IEEE INT C AU
   Fowler M., 1999, Refactoring: Improving the Design of Existing Programs
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   Gorg M., 2009, 18 INT S SOFTWARE TE
   Goto A, 2013, INT WORKS SOFTW CLON, P23, DOI 10.1109/IWSC.2013.6613038
   Herbold S., 2020, Journal of Open Source Software, V5, P2173, DOI [DOI 10.21105/JOSS.02173, 10.21105/JOSS.02173]
   HORWITZ S, 1990, SIGPLAN NOTICES, V25, P234, DOI 10.1145/93548.93574
   Hsu R., 1999, U.S. Patent, Patent No. [5,974,254, 5974254]
   Karac I, 2018, IEEE SOFTWARE, V35, P81, DOI 10.1109/MS.2018.2801554
   Khanam Z., 2017, Internat. J. Appl. Eng. Res., V12, P7705
   Kim M, 2009, PROC INT CONF SOFTW, P309, DOI 10.1109/ICSE.2009.5070531
   Legunsen O., 2017, 32 IEEEACM INT C AUT
   Linares-Vásquez M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P709, DOI 10.1109/ICSE.2015.229
   Liu C., 2006, 12 ACM SIGKDD INT C
   Madeyski L, 2018, STUD COMPUT INTELL, V733, P105, DOI 10.1007/978-3-319-65208-5_8
   Madeyski L, 2013, ENASE: PROCEEDINGS OF THE 8TH INTERNATIONAL CONFERENCE ON EVALUATION OF NOVEL APPROACHES TO SOFTWARE ENGINEERING, P260, DOI 10.5220/0004587202600267
   Maletic JI, 2004, PROC IEEE INT CONF S, P210, DOI 10.1109/ICSM.2004.1357805
   Myers EW, 1986, ALGORITHMICA, V1, P251, DOI 10.1007/BF01840446
   Neamtiu I., 2005, Understanding source code evolution using abstract Syntax Tree Matching
   Nguyen H.A., 2011, 26 IEEE ACM INT C AU
   Rathore SS, 2019, IEEE T RELIAB, V68, P216, DOI 10.1109/TR.2018.2864206
   Riebisch M., 2012, EMERGING TECHNOLOGIE, P254
   Rosero RH, 2016, INT J SOFTW ENG KNOW, V26, P675, DOI 10.1142/S0218194016300013
   Rothermel G, 1998, IEEE T SOFTWARE ENG, V24, P401, DOI 10.1109/32.689399
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   Shen JF, 2016, P INT COMP SOFTW APP, P103, DOI 10.1109/COMPSAC.2016.162
   Vokolos FI, 1998, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.1998.738488
   Wang TT, 2014, FRONT COMPUT SCI-CHI, V8, P996, DOI 10.1007/s11704-014-3430-1
   Wang X., 2011, 18 WORK C REV ENG IE
   Wolfgang O, 2018, TDD Kata
   WUU Y, 1991, SOFTWARE PRACT EXPER, V21, P739, DOI 10.1002/spe.4380210706
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang LM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P192, DOI 10.1109/ICSE.2013.6606565
   Zhu CG, 2019, PROC INT CONF SOFTW, P430, DOI 10.1109/ICSE.2019.00056
NR 51
TC 0
Z9 0
U1 7
U2 9
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 9
DI 10.1007/s10515-023-00405-w
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DT0A2
UT WOS:001134194300001
DA 2024-08-05
ER

PT J
AU Xia, PC
   Guo, YH
   Lin, ZW
   Wu, J
   Duan, PB
   He, NY
   Wang, KL
   Liu, TM
   Yue, YL
   Xu, GA
   Wang, HY
AF Xia, Pengcheng
   Guo, Yanhui
   Lin, Zhaowen
   Wu, Jun
   Duan, Pengbo
   He, Ningyu
   Wang, Kailong
   Liu, Tianming
   Yue, Yinliang
   Xu, Guoai
   Wang, Haoyu
TI WALLETRADAR: towards automating the detection of vulnerabilities in
   browser-based cryptocurrency wallets
SO AUTOMATED SOFTWARE ENGINEERING
LA English
DT Article
DE Cryptocurrency; Non-custodial wallets; Browser extensions; Automated
   security analysis; Vulnerability detection; Data leakage
AB Cryptocurrency wallets, acting as fundamental infrastructure to the blockchain ecosystem, have seen significant user growth, particularly among browser-based wallets (i.e., browser extensions). However, this expansion accompanies security challenges, making these wallets prime targets for malicious activities. Despite a substantial user base, there is not only a significant gap in comprehensive security analysis but also a pressing need for specialized tools that can aid developers in reducing vulnerabilities during the development process. To fill the void, we present a comprehensive security analysis of browser-based wallets in this paper, along with the development of an automated tool designed for this purpose. We first compile a taxonomy of security vulnerabilities resident in cryptocurrency wallets by harvesting historical security reports. Based on this, we design WALLETRADAR, an automated detection framework that can accurately identify security issues based on static and dynamic analysis. Evaluation of 96 popular browser-based wallets shows WalletRadar's effectiveness, by successfully automating the detection process in 90% of these wallets with high precision. This evaluation has led to the discovery of 116 security vulnerabilities corresponding to 70 wallets. By the time of this paper, we have received confirmations of 10 vulnerabilities from 8 wallet developers, with over $2,000 bug bounties. Further, we observed that 12 wallet developers have silently fixed 16 vulnerabilities after our Conflict of interest. WALLETRADAR can effectively automate the identification of security risks in cryptocurrency wallets, thereby enhancing software development quality and safety in the blockchain ecosystem.
C1 [Xia, Pengcheng; Guo, Yanhui; Lin, Zhaowen; Wu, Jun; Duan, Pengbo] Beijing Univ Posts & Telecommun, Beijing, Peoples R China.
   [He, Ningyu] Peking Univ, Beijing, Peoples R China.
   [Wang, Kailong; Wang, Haoyu] Huazhong Univ Sci & Technol, Wuhan, Peoples R China.
   [Liu, Tianming] Monash Univ, Melbourne, Australia.
   [Yue, Yinliang] Zhongguancun Lab, Beijing, Peoples R China.
   [Xu, Guoai] Harbin Inst Technol, Shenzhen, Peoples R China.
C3 Beijing University of Posts & Telecommunications; Peking University;
   Huazhong University of Science & Technology; Monash University;
   Zhongguancun Laboratory; Harbin Institute of Technology
RP Wu, J (corresponding author), Beijing Univ Posts & Telecommun, Beijing, Peoples R China.
EM xpc357@bupt.edu.cn; yhguo@bupt.edu.cn; wujun@bupt.edu.cn
CR [Anonymous], 2023, MetaMask: The crypto wallet for Defi, Web3 Dapps and NFTs
   [Anonymous], 2022, The Wild Crypto World in 2022: Fraud, Security Breaches & Resilient Builders
   [Anonymous], 2022, Dom-based XSS
   [Anonymous], 2023, Double trouble: crypto-stealing DoubleFinger
   [Anonymous], 2022, Hodlers beware! New malware targets MetaMask and 40 other crypto wallets
   [Anonymous], 2022, FTX START US BANKRUP
   [Anonymous], 2022, beautify-web/js-beautify: Beautifier for javascript-GitHub
   [Anonymous], 2022, MetaMask Security Monthly
   [Anonymous], 2017, From \$900 to \$20,000: Bitcoin's Historic 2017 Price Run Revisited
   [Anonymous], 2022, Bitcoin-Open source P2P money
   [Anonymous], 2022, Trinity Attack Incident Part 1: Summary and next steps
   [Anonymous], 2022, Security Threat Exposed for Browser-based Crypto Wallets
   [Anonymous], 2023, Review-Crypto Wallet Security Incidents
   [Anonymous], 2022, A Guide to Wallet Security and Best Practices
   [Anonymous], 2022, Crypto Wallet Security-A Complete Guide
   [Anonymous], 2022, CPR Alerts Crypto Wallet Users of Massive Search Engine Phishing Campaign That Has Resulted in at Least Half a Million Dollars Being Stolen
   [Anonymous], 2022, Check Point Research Detects Vulnerability in the Everscale Blockchain Wallet, Preventing Cryptocurrency Theft
   [Anonymous], 2023, Chrome Web Store
   [Anonymous], 2023, CoinMarketCap: Cryptocurrency Prices, Charts And Market
   [Anonymous], 2023, Phantom-Crypto & NFT Wallet-Solana | Ethereum | Polygon
   [Anonymous], 2023, LummaC2 Stealer: A Potent Threat to Crypto Users
   [Anonymous], 2022, Slope Wallet Incident Update
   [Anonymous], 2022, Security Notice: Extension Disk Encryption Issue
   [Anonymous], 2022, OWASP Top 10
   [Anonymous], 2023, Crypto Market Sizing Report H1
   Calzavara S, 2020, PROCEEDINGS OF THE 29TH USENIX SECURITY SYMPOSIUM, P683
   Chen Q, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P1687, DOI 10.1145/3243734.3243823
   Coinbase Wallet-Your key to the world of crypto, 2023, Coinbase Wallet-Your key to the world of crypto
   Eriksson B, 2022, 37TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1694, DOI 10.1145/3477314.3507098
   espressif, 2022, About us
   Gupta S, 2017, INT J SYST ASSUR ENG, V8, P512, DOI 10.1007/s13198-015-0376-0
   Guri M, 2018, IEEE 2018 INTERNATIONAL CONGRESS ON CYBERMATICS / 2018 IEEE CONFERENCES ON INTERNET OF THINGS, GREEN COMPUTING AND COMMUNICATIONS, CYBER, PHYSICAL AND SOCIAL COMPUTING, SMART DATA, BLOCKCHAIN, COMPUTER AND INFORMATION TECHNOLOGY, P1308, DOI 10.1109/Cybermatics_2018.2018.00227
   He DJ, 2020, IEEE NETWORK, V34, P114, DOI 10.1109/MNET.011.2000025
   Hu YW, 2021, PROCEEDINGS OF THE ELEVENTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY (CODASPY '21), P89, DOI 10.1145/3422337.3447832
   Huang Lin-Shung., 2012, USENIX Security Symposium, P413
   Nguyen HV, 2019, AUTOMAT SOFTW ENG, V26, P59, DOI 10.1007/s10515-018-0246-5
   Kariryaa A, 2021, PROCEEDINGS OF THE SEVENTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2021), P99
   Kumar Saurabh, 2022, ECS Transactions, V107, P7153, DOI 10.1149/10701.7153ecst
   Kumar S, 2022, J DISCRET MATH SCI C, V25, P1009, DOI 10.1080/09720529.2022.2072424
   Li C, 2020, 2020 IEEE INTERNATIONAL CONFERENCE ON BLOCKCHAIN (BLOCKCHAIN 2020), P9, DOI 10.1109/Blockchain50366.2020.00010
   Lin YZ, 2023, IEEE INT CONF AUTOM, P1188, DOI 10.1109/ASE56229.2023.00048
   Pan JK, 2017, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSME.2017.11
   Pazos JC, 2023, EMPIR SOFTW ENG, V28, DOI 10.1007/s10664-023-10323-w
   Praitheeshan P, 2020, LECT NOTES COMPUT SC, V12570, P22, DOI 10.1007/978-3-030-65745-1_2
   Qaiser S., 2018, Int. J. Comput. Appl., V181, P25, DOI [DOI 10.5120/IJCA2018917395, 10.5120/ijca2018917395]
   Sai AR, 2019, PROC CONF MOBILE SEC, DOI 10.1109/mobisecserv.2019.8686583
   Selenium, 2022, About us
   Turan M.S., 2010, NIST Special Publication, V800, P132
   Uddin MS, 2021, L N INST COMP SCI SO, V399, P120, DOI 10.1007/978-3-030-90022-9_7
   Visconti A, 2019, J INF SECUR APPL, V46, P296, DOI 10.1016/j.jisa.2019.03.016
   Wu LF, 2016, IEEE CONF COMM NETW, P55, DOI 10.1109/CNS.2016.7860470
   Zhao R, 2015, PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW 2015), P1384, DOI 10.1145/2736277.2741134
   Zheng Y, 2021, PROC INT CONF SOFTW, P423, DOI 10.1109/ICSE43902.2021.00048
NR 53
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI NEW YORK
PA ONE NEW YORK PLAZA, SUITE 4600, NEW YORK, NY, UNITED STATES
SN 0928-8910
EI 1573-7535
J9 AUTOMAT SOFTW ENG
JI Automat. Softw. Eng.
PD MAY
PY 2024
VL 31
IS 1
AR 32
DI 10.1007/s10515-024-00430-3
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MQ8W3
UT WOS:001195195600001
OA Green Submitted
DA 2024-08-05
ER

EF