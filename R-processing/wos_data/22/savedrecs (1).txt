FN Clarivate Analytics Web of Science
VR 1.0
PT J
AU Lavazza, L
   Morasca, S
   Gatto, M
AF Lavazza, Luigi
   Morasca, Sandro
   Gatto, Marco
TI An empirical study on software understandability and its dependence on
   code characteristics
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software understandability; Cognitive complexity; Software code
   measures; Complexity measures; Static code measures
ID PROGRAM COMPLEXITY; COMPREHENSION; METRICS
AB ContextInsufficient code understandability makes software difficult to inspect and maintain and is a primary cause of software development cost. Several source code measures may be used to identify difficult-to-understand code, including well-known ones such as Lines of Code and McCabe's Cyclomatic Complexity, and novel ones, such as Cognitive Complexity.ObjectiveWe investigate whether and to what extent source code measures, individually or together, are correlated with code understandability.MethodWe carried out an empirical study with students who were asked to carry out realistic maintenance tasks on methods from real-life Open Source Software projects. We collected several data items, including the time needed to correctly complete the maintenance tasks, which we used to quantify method understandability. We investigated the presence of correlations between the collected code measures and code understandability by using several Machine Learning techniques.ResultsWe obtained models of code understandability using one or two code measures. However, the obtained models are not very accurate, the average prediction error being around 30%.ConclusionsBased on our empirical study, it does not appear possible to build an understandability model based on structural code measures alone. Specifically, even the newly introduced Cognitive Complexity measure does not seem able to fulfill the promise of providing substantial improvements over existing measures, at least as far as code understandability prediction is concerned. It seems that, to obtain models of code understandability of acceptable accuracy, process measures should be used, possibly together with new source code measures that are better related to code understandability.
C1 [Lavazza, Luigi; Morasca, Sandro; Gatto, Marco] Univ Insubria, Dipartimento Sci Teor & Applicate, Varese, Italy.
C3 University of Insubria
RP Lavazza, L (corresponding author), Univ Insubria, Dipartimento Sci Teor & Applicate, Varese, Italy.
EM luigi.lavazza@uninsubria.it; sandro.morasca@uninsubria.it;
   marcogatto.1997@hotmail.it
OI Morasca, Sandro/0000-0003-4598-7024
FU The authors would like to thank the students that participated in the
   empirical study, the professionals that participated in the interviews,
   and Anatoliy Roshka and Gabriele Rotoloni, who developed the tool we
   used to measure Cognitive Complexity.
FX The authors would like to thank the students that participated in the
   empirical study, the professionals that participated in the interviews,
   and Anatoliy Roshka and Gabriele Rotoloni, who developed the tool we
   used to measure Cognitive Complexity.
CR Ajami S, 2019, EMPIR SOFTW ENG, V24, P287, DOI 10.1007/s10664-018-9628-3
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Baron Marvin Munoz, 2020, P ACM IEEE INT S EMP, V5, P1
   Börstler J, 2016, IEEE T SOFTWARE ENG, V42, P886, DOI 10.1109/TSE.2016.2527791
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Campbell G.A., 2018, COGNITIVE COMPLEXITY
   Campbell GA, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P57, DOI 10.1145/3194164.3194186
   Carver JC, 2010, EMPIR SOFTW ENG, V15, P35, DOI 10.1007/s10664-009-9109-9
   CHEN ET, 1978, IEEE T SOFTWARE ENG, V4, P187, DOI 10.1109/TSE.1978.231497
   COLEMAN D, 1994, COMPUTER, V27, P44, DOI 10.1109/2.303623
   Dolado JJ, 2003, IEEE T SOFTWARE ENG, V29, P665, DOI 10.1109/TSE.2003.1214329
   Dorn J, 2012, A general software readability model
   DUNSMORE HE, 1979, COMPUTER, V12, P50, DOI 10.1109/MC.1979.1658576
   Fakhoury S, 2019, INT C PROGRAM COMPRE, P2, DOI 10.1109/ICPC.2019.00014
   Fenton N. E., 2014, CHAPMAN HALL CRC INN
   FITZSIMMONS A, 1978, COMPUT SURV, V10, P3, DOI 10.1145/356715.356717
   Floyd B, 2017, PROC INT CONF SOFTW, P175, DOI 10.1109/ICSE.2017.24
   Fucci D, 2019, INT C PROGRAM COMPRE, P311, DOI 10.1109/ICPC.2019.00050
   GitHub, 2022, json-iterator/java: jsoniter (json-iterator) is fast and flexible JSON parser available in Java and Go
   GitHub-stleary/JSON-java, 2022, A reference implementation of a JSON package in Java
   Glass Robert L, 2001, IEEE software, V18, P112, DOI [DOI 10.1109/MS.2001.965816, 10.1109/MS.2001.922739, DOI 10.1109/MS.2001.922739]
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Harrison W., 1981, SIGPLAN Notices, V16, P51, DOI 10.1145/988131.988137
   Harrison W. A., 1981, SIGPLAN Notices, V16, P63, DOI 10.1145/947825.947829
   Heitlager I, 2007, QUATIC 2007: 6TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, PROCEEDINGS, P30, DOI 10.1109/QUATIC.2007.8
   Hofmeister J, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P217, DOI 10.1109/SANER.2017.7884623
   HOWATT JW, 1989, J SYST SOFTWARE, V10, P139, DOI 10.1016/0164-1212(89)90025-3
   Ikutani Y, 2014, 15 IEEE ACIS INT C S, P1, DOI DOI 10.1109/SNPD.2014.6888727
   Li E. Y., 1987, AFIPS Conference Proceedings. Vol.56: 1987 National Computer Conference, P531
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Minelli R, 2015, INT C PROGRAM COMPRE, P25, DOI 10.1109/ICPC.2015.12
   Morasca S, 2009, INT SYMP EMP SOFTWAR, P44, DOI 10.1109/ESEM.2009.5316048
   Oliveira D, 2020, PROC IEEE INT CONF S, P348, DOI 10.1109/ICSME46990.2020.00041
   Oman P., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P337, DOI 10.1109/ICSM.1992.242525
   Ostberg Jan-Peter, 2014, 2014 Joint Conference of the International Workshop on Software Measurement and the International Conference on Software Process and Product Measurement. (IWSM-MENSURA). Proceedings, P32, DOI 10.1109/IWSM.Mensura.2014.19
   Peitek N, 2020, IEEE T SOFTWARE ENG, V46, P442, DOI 10.1109/TSE.2018.2863303
   Piwowarski P., 1982, SIGPLAN Notices, V17, P44, DOI 10.1145/947955.947960
   Posnett D, 2011, P 8 WORKING C MINING, P73
   Posnett D., 2021, ACM SIGSOFT Softw Eng Notes, V46, P30, DOI [10.1145/3468744.3468754, DOI 10.1145/3468744.3468754]
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Salvaneschi G, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P564, DOI 10.1145/2635868.2635895
   Scalabrino S, 2021, IEEE T SOFTWARE ENG, V47, P595, DOI 10.1109/TSE.2019.2901468
   Scalabrino S, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1958
   Sharafi Z, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3434643
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Siegmund Janet., 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, P24
   SourceMeter, 2022, about us
   Trockman A, 2018, IEEE WORK CONF MIN S, P314, DOI 10.1145/3196398.3196441
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Welker KD, 1997, J SOFTW MAINT-RES PR, V9, P127, DOI 10.1002/(SICI)1096-908X(199705)9:3<127::AID-SMR149>3.0.CO;2-S
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
NR 51
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 155
DI 10.1007/s10664-023-10396-7
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X8VC1
UT WOS:001101151700001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Zaina, L
   Choma, J
   Saad, J
   Barroca, L
   Sharp, H
   Machado, L
   de Souza, CRB
AF Zaina, Luciana
   Choma, Joelma
   Saad, Jullia
   Barroca, Leonor
   Sharp, Helen
   Machado, Leticia
   de Souza, Cleidson R. B.
TI What do software startups need from UX work?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE User experience; Software startups; User-centred design; UX work;
   Qualitative research
ID COMPANIES
AB Empirical research on software development practices in startups is growing. However, little has been investigated about how User eXperience (UX) work has been carried out in software startups. The primary objective of this paper is to investigate what software startups need from UX work. To achieve this goal, we conducted open-ended interviews and retrospective meetings with 16 software professionals from two software startups in Brazil. We analysed the data qualitatively using different coding approaches: initial coding, focused coding, and theoretical coding. We found 14 UX work-related needs which emerged from the daily practices used for software development in the two startups studied. Based on our findings, we propose an initial theoretical framework that highlights two theoretical themes and four groups underlying the needs identified. Our study reveals several relationships between UX work-related needs which are helpful to understand in order to identify what startups need from UX work in practice and to focus startup teams' efforts on the most urgent needs. As future work, we plan to explore ways in which these needs may be addressed so that UX work may be put into practice in software startups.
C1 [Zaina, Luciana; Choma, Joelma; Saad, Jullia] Univ Fed Sao Carlos, Rdv Joao L Santos,Km 110, Sorocaba, SP, Brazil.
   [Barroca, Leonor; Sharp, Helen] Open Univ, Fac Sci Technol Engn & Math, Walton Hall, Milton Keynes, England.
   [Machado, Leticia] Fed Univ Jequitinhonha & Mucuri Valleys, R da Gloria 187, Diamantina, MG, Brazil.
   [de Souza, Cleidson R. B.] Fed Univ Para, Av Augusto Correa 1, Belem, PA, Brazil.
C3 Universidade Federal de Sao Carlos; Open University - UK; Universidade
   Federal dos Vales do Jequitinhonha e Mucuri (UFVJM); Universidade
   Federal do Para
RP Zaina, L (corresponding author), Univ Fed Sao Carlos, Rdv Joao L Santos,Km 110, Sorocaba, SP, Brazil.
EM lzaina@ufscar.br; jchoma@ufscar.br; julliasaad01@gmail.com;
   leonor.barroca@open.ac.uk; helen.sharp@open.ac.uk;
   leticia.machado@ufvjm.edu.br; cleidson.desouza@acm.org
RI Choma, Joh/KCZ-1386-2024
OI Sharp, Helen/0000-0003-4376-1734; Barroca, Leonor/0000-0002-6054-5366
CR [Anonymous], 2009, 9241 210 2010 ERGONO, DOI DOI 10.3403/30388991
   Bjarnason E, 2012, LECT NOTES BUS INF P, V111, P177
   Bjarnason E, 2014, IEEE SOFTWARE, V31, P37, DOI 10.1109/MS.2014.26
   Bygrave W.D., 1991, Entrepreneurship Theory and Practice, V16, P13, DOI DOI 10.1177/104225879201600203
   Charmaz K., 2006, CONSTRUCTING GROUNDE, DOI DOI 10.7748/NR.13.4.84.S4
   Coleman G, 2008, J ENTERP INF MANAG, V21, P633, DOI 10.1108/17410390810911221
   Cruth M, 2021, ATLASSIAN
   Gauthier J, 2021, GLOBAL STARTUP ECOSY
   Giardino C, 2016, IEEE T SOFTWARE ENG, V42, P585, DOI 10.1109/TSE.2015.2509970
   Giardino C, 2014, IEEE SOFTWARE, V31, P28, DOI 10.1109/MS.2014.129
   Guerino GC, 2021, LECT NOTES BUS INF P, V434, P122, DOI 10.1007/978-3-030-91983-2_10
   Hokkanen L., 2016, P ACADEMICMINDTREK 2, P59, DOI [10.1145/2994310.2994371, DOI 10.1145/2994310.2994371]
   Hokkanen L., 2016, Lecture Notes in Business Information Processing, V251, P66, DOI [10.1007/978, DOI 10.1007/978]
   Hokkanen L, 2015, PROCEEDINGS OF THE 20TH EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (EUROPLOP 2015), DOI 10.1145/2855321.2855373
   Hokkanen L, 2015, LECT NOTES BUS INF P, V212, P81, DOI 10.1007/978-3-319-18612-2_7
   Hokkanen L, 2015, LECT NOTES COMPUT SC, V9459, P217, DOI 10.1007/978-3-319-26844-6_16
   Hossain SS, 2019, LECT NOTES COMPUT SC, V11623, P70, DOI 10.1007/978-3-030-24308-1_6
   Iivari N, 2018, INFORM TECHNOL PEOPL, V31, P111, DOI 10.1108/ITP-07-2016-0168
   Kashfi P, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P59, DOI 10.1109/SEAA.2016.14
   Klotins E, 2021, IEEE T SOFTWARE ENG, V47, P498, DOI 10.1109/TSE.2019.2900213
   Klotins E, 2019, EMPIR SOFTW ENG, V24, P68, DOI 10.1007/s10664-018-9620-y
   Kuusinen Kati, 2019, Human-Centered Software Engineering. 7th IFIP WG 13.2 International Working Conference, HCSE 2018. Revised Selected Papers: Lecture Notes in Computer Science (LNCS 11262), P3, DOI 10.1007/978-3-030-05909-5_1
   Law ELC, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P719
   Liikkanen LA, 2014, PROCEEDINGS OF THE NORDICHI'14: THE 8TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION: FUN, FAST, FOUNDATIONAL, P1095, DOI 10.1145/2639189.2670285
   Lincoln YS., 1985, SAGE, DOI [10.1016/0147-1767(85)90062-8, DOI 10.1016/0147-1767(85)90062-8]
   Lindgren E, 2016, INFORM SOFTWARE TECH, V77, P80, DOI 10.1016/j.infsof.2016.04.008
   Ogunyemi AA, 2019, INT J HUM-COMPUT INT, V35, P1461, DOI 10.1080/10447318.2018.1541544
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Ries E., 2011, The lean startup: How today's entrepreneurs use continuous innovation to create radically successful businesses
   Robson C., 2016, REAL WORLD RES RESOU
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saad J, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106688
   Sedano T, 2020, IEEE SOFTWARE, V37, P58, DOI 10.1109/MS.2020.3013274
   Silveira SAM, 2021, LECT NOTES BUS INF P, V419, P19, DOI 10.1007/978-3-030-78098-2_2
   Strauss A.L., 1990, BASICS QUALITATIVE R
   Sutton SM, 2000, IEEE SOFTWARE, V17, P33, DOI 10.1109/52.854066
   Sy D, 2007, J USABILITY STUD, V2, P112
   Trieflinger Stefan, 2021, Software Business. 11th International Conference, ICSOB 2020. Proceedings. Lecture Notes in Business Information Processing (LNBIP 407), P55, DOI 10.1007/978-3-030-67292-8_5
   Unterkalmsteiner M, 2016, E-INFORMATICA, V10, P89, DOI 10.5277/e-Inf160105
NR 40
TC 0
Z9 0
U1 5
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2023
VL 28
IS 3
AR 80
DI 10.1007/s10664-023-10322-x
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA G0VL1
UT WOS:000986436400002
PM 37200579
OA Bronze, Green Accepted, Green Published
DA 2024-07-18
ER

PT J
AU Meidani, M
   Lamothe, M
   McIntosh, S
AF Meidani, Mehran
   Lamothe, Maxime
   McIntosh, Shane
TI Assessing the exposure of software changes The DiPiDi approach
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Build systems; Exposure of a change; Build dependency graph
ID BUILD; CODE
AB Changing a software application with many build-time configuration settings may introduce unexpected side effects. For example, a change intended to be specific to a platform (e.g., Windows) or product configuration (e.g., community editions) might impact other platforms or configurations. Moreover, a change intended to apply to a set of platforms or configurations may be unintentionally limited to a subset. Indeed, understanding the exposure of source code changes is an important risk mitigation step in change-based development approaches. In this paper, we present DiPiDi, a new approach to assess the exposure of source code changes under different build-time configuration settings by statically analyzing build specifications. To evaluate our approach, we produce a prototype implementation of DiPiDi for the CMake build system. We measure the effectiveness and efficiency of developers when performing five tasks in which they must identify the deliverable(s) and conditions under which a source code change will propagate. We assign participants into three groups: without explicit tool support, supported by existing impact analysis tools, and supported by DiPiDi. While our study does not have the statistical power to make generalized quantitative claims, we manually analyze the full distribution of our study's results and show that DiPiDi results in a net benefit for its users. Through our experimental evaluation, we show that DiPiDi results in a 36 average percentage points improvement in F-1-score when identifying impacted deliverables and a reduction of 0.62 units of distance when ranking impacted patches. Furthermore, DiPiDi results in a 42% average task time reduction for our participants when compared to a competing impact analysis approach. DiPiDi's improvements to both effectiveness and efficiency are especially prevalent in complex programs with many compile-time configurations.
C1 [Meidani, Mehran; McIntosh, Shane] Univ Waterloo, Waterloo, ON, Canada.
   [Lamothe, Maxime] Polytech Montreal, Montreal, PQ, Canada.
C3 University of Waterloo; Universite de Montreal; Polytechnique Montreal
RP Meidani, M (corresponding author), Univ Waterloo, Waterloo, ON, Canada.
EM mehran.meidani@uwaterloo.ca
OI Meidani, Mehran/0000-0003-3631-0716
CR Adams B., 2008, ELECTR COMMUN, V8
   Adams B, 2007, PROC IEEE INT CONF S, P214
   Ahsan S. N., 2010, ACM IEEE INT S EMPIR, P1
   Al-Kofahi JM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P150, DOI 10.1109/ICSM.2012.6405266
   [Anonymous], 1976, Experimenter effects in behavioral research
   [Anonymous], 2010, IEEE INT C SOFTWARE
   Arnold R. S., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P292, DOI 10.1109/ICSM.1993.366933
   Bezemer CP, 2017, EMPIR SOFTW ENG, V22, P3117, DOI 10.1007/s10664-017-9510-8
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Cao Q, 2017, PROC IEEE INT CONF S, P524, DOI 10.1109/ICSME.2017.34
   Cohen J., 2010, Making Software, P329
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Fontana F. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P450, DOI 10.1109/ICSTW.2011.12
   Gyori A, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P318, DOI 10.1145/3092703.3092719
   Hassan F, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1078, DOI 10.1145/3180155.3180181
   Hochstein L, 2011, INT SYMP EMP SOFTWAR, P384, DOI 10.1109/ESEM.2011.54
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Kirchner F, 2015, FORM ASP COMPUT, V27, P573, DOI 10.1007/s00165-014-0326-7
   Kitware, 2020, US
   Li BX, 2013, SOFTW TEST VERIF REL, V23, P613, DOI 10.1002/stvr.1475
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Martin Ken, 2010, MASTERING CMAKE CROS
   McIntosh S., 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P42, DOI 10.1109/MSR.2010.5463341
   McIntosh S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P141, DOI 10.1145/1985793.1985813
   Meidani M, 2021, Arxiv, DOI arXiv:2104.00725
   Nadi S, 2014, J SOFTW-EVOL PROC, V26, P730, DOI 10.1002/smr.1595
   Orru M, 2015, P 11 INT C PREDICTIV, P1
   PARR TJ, 1995, SOFTWARE PRACT EXPER, V25, P789, DOI 10.1002/spe.4380250705
   Robles G, 2006, J SYST SOFTWARE, V79, P1233, DOI 10.1016/j.jss.2006.02.048
   Rovegård P, 2008, IEEE T SOFTWARE ENG, V34, P516, DOI 10.1109/TSE.2008.32
   SciTools, 2022, UND
   Seo H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P724, DOI 10.1145/2568225.2568255
   SINCERO J., 2007, Proc. SPLC Workshop on Open Source Software and Product Lines
   Tamrawi A, 2012, PROC INT CONF SOFTW, P650, DOI 10.1109/ICSE.2012.6227152
   Tu Q, 2001, PROC IEEE INT CONF S, P398, DOI 10.1109/ICSM.2001.972753
   Tukey J.W., 1977, EXPLORATORY DATA ANA, V2
   Wen RY, 2018, PROC IEEE INT CONF S, P685, DOI 10.1109/ICSME.2018.00078
   Zhou B, 2014, P INT COMP SOFTW APP, P53, DOI 10.1109/COMPSAC.2014.12
NR 38
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 41
DI 10.1007/s10664-022-10270-y
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8T6US
UT WOS:000929394800001
DA 2024-07-18
ER

PT J
AU Dell'Anna, D
   Aydemir, FB
   Dalpiaz, F
AF Dell'Anna, Davide
   Aydemir, Fatma Basak
   Dalpiaz, Fabiano
TI Evaluating classifiers in SE research: the ECSER pipeline and two
   replication studies
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automated classification; Machine learning; Software engineering;
   Replication study
ID COMPARING CLASSIFIERS; SOFTWARE; CLASSIFICATION; GUIDELINES
AB Context Automated classifiers, often based on machine learning (ML), are increasingly used in software engineering (SE) for labelling previously unseen SE data. Researchers have proposed automated classifiers that predict if a code chunk is a clone, if a requirement is functional or non-functional, if the outcome of a test case is non-deterministic, etc. Objective The lack of guidelines for applying and reporting classification techniques for SE research leads to studies in which important research steps may be skipped, key findings might not be identified and shared, and the readers may find reported results (e.g., precision or recall above 90%) that are not a credible representation of the performance in operational contexts. The goal of this paper is to advance ML4SE research by proposing rigorous ways of conducting and reporting research. Results We introduce the ECSER (Evaluating Classifiers in Software Engineering Research) pipeline, which includes a series of steps for conducting and evaluating automated classification research in SE. Then, we conduct two replication studies where we apply ECSER to recent research in requirements engineering and in software testing. Conclusions In addition to demonstrating the applicability of the pipeline, the replication studies demonstrate ECSER's usefulness: not only do we confirm and strengthen some findings identified by the original authors, but we also discover additional ones. Some of these findings contradict the original ones.
C1 [Dell'Anna, Davide] Delft Univ Technol, Delft, Netherlands.
   [Aydemir, Fatma Basak] Bogazici Univ, Istanbul, Turkiye.
   [Dalpiaz, Fabiano] Univ Utrecht, Utrecht, Netherlands.
C3 Delft University of Technology; Bogazici University; Utrecht University
RP Dell'Anna, D (corresponding author), Delft Univ Technol, Delft, Netherlands.
EM d.dellanna@tudelft.nl; basak.aydemir@boun.edu.tr; f.dalpiaz@uu.nl
RI Aydemir, Fatma Başak/AAF-3242-2020
OI Aydemir, Fatma Başak/0000-0003-3833-3997; Dell'Anna,
   Davide/0000-0002-1162-8341
FU Scientific and Technological Research Council of Turkey through BIDEB
   [2232, 118C255]
FX The second author has been partially supported by the Scientific and
   Technological Research Council of Turkey through BIDEB 2232 grant no.
   118C255.
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Adams NM, 2000, NEURAL COMPUT, V12, P305, DOI 10.1162/089976600300015808
   Agrawal A, 2022, IEEE T SOFTWARE ENG, V48, P2939, DOI 10.1109/TSE.2021.3073242
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Alonso-Betanzos A, 2015, CLIN MED INSIGHTS-CA, V9, P57, DOI 10.4137/CMC.S18746
   Alshammari A, 2021, FLAKEFLAGGER PREDICT, DOI [10.5281/zenodo.5014076, DOI 10.5281/ZENODO.5014076]
   Alshammari A, 2021, PROC INT CONF SOFTW, P1572, DOI 10.1109/ICSE43902.2021.00140
   [Anonymous], 1993, How to lie with statistics
   Benavoli A, 2016, J MACH LEARN RES, V17
   Benavoli A, 2017, J MACH LEARN RES, V18
   Berry DM, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09986-0
   Bishop Christopher M., 2006, Pattern Recognition and Machine Learning, V4
   Boyd Kendrick, 2013, Machine Learning and Knowledge Discovery in Databases. European Conference, ECML PKDD 2013. Proceedings: LNCS 8190, P451, DOI 10.1007/978-3-642-40994-3_29
   Cawley GC, 2010, J MACH LEARN RES, V11, P2079
   Chen Tian, 2018, Shanghai Arch Psychiatry, V30, P60, DOI 10.11919/j.issn.1002-0829.218014
   Cleland-Huang J, 2007, REQUIR ENG, V12, P103, DOI 10.1007/s00766-007-0045-1
   Cleland-Huang J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P39
   Cohen B., 2008, Explaining psychological statistics
   Dalpiaz F, 2019, INT REQUIR ENG CONF, P142, DOI 10.1109/RE.2019.00025
   Dell'Anna Davide, 2021, Zenodo, DOI 10.5281/ZENODO.6266675
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dong G., 2018, Feature Engineering for Machine Learning and Data Analytics
   Duboue P., 2020, The art of feature engineering: essentials for machine learning
   Emenecker J., 2010, P 32 ACM IEEE INT C, V1, P155, DOI DOI 10.1145/1806799.1806825
   Fagerholm F, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.131
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Flach P., 2012, MACHINE LEARNING ART, DOI [10.1017/CBO9780511973000, DOI 10.1017/CBO9780511973000]
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Garousi V., 2017, P 21 INT C EV ASS SO, P170
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Goadrich M, 2006, MACH LEARN, V64, P231, DOI 10.1007/s10994-006-8958-3
   Good P., 2013, Permutation tests: A practical guide to resampling methods for testing hypotheses
   Greener JG, 2022, NAT REV MOL CELL BIO, V23, P40, DOI 10.1038/s41580-021-00407-0
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Herbold S., 2020, Journal of Open Source Software, V5, P2173, DOI DOI 10.21105/JOSS.02173
   Herbold S, 2020, EMPIR SOFTW ENG, V25, P5333, DOI 10.1007/s10664-020-09885-w
   Hey T, 2020, SUPPLEMENTARY MAT NO, DOI [10.5281/zenodo.3874137, DOI 10.5281/ZENODO.3874137]
   Hey T, 2020, INT REQUIR ENG CONF, P169, DOI 10.1109/RE48521.2020.00028
   Hutchinson B, 2021, PROCEEDINGS OF THE 2021 ACM CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, FACCT 2021, P560, DOI 10.1145/3442188.3445918
   Japkowicz N., 2011, EVALUATING LEARNING, DOI [10.1017/CBO9780511921803, DOI 10.1017/CBO9780511921803]
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jingxiu Yao, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P120, DOI 10.1145/3383219.3383232
   Ke GL, 2017, ADV NEUR IN, V30
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B, 2017, EMPIR SOFTW ENG, V22, P579, DOI 10.1007/s10664-016-9437-5
   Korkmaz S, 2014, R J, V6, P151, DOI 10.32614/rj-2014-031
   Kuhrmann M, 2017, EMPIR SOFTW ENG, V22, P2852, DOI 10.1007/s10664-016-9492-y
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P490, DOI 10.1109/RE.2017.82
   Lever J, 2016, NAT METHODS, V13, P603, DOI 10.1038/nmeth.3945
   Li FL, 2014, INT REQUIR ENG CONF, P293, DOI 10.1109/RE.2014.6912271
   Lones MA, 2024, Arxiv, DOI [arXiv:2108.02497, 10.48550/arXiv.2108.02497]
   Luo W, 2016, J MED INTERNET RES, V18, DOI 10.2196/jmir.5870
   Mahadi A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10009-1
   MARDIA KV, 1970, BIOMETRIKA, V57, P519, DOI 10.1093/biomet/57.3.519
   Menzies T., 2001, HDB SOFTWARE ENG KNO, V1, DOI [10.1142/9789812389718_0035, DOI 10.1142/9789812389718_0035]
   Menzies T, 2019, INFORM SOFTWARE TECH, V112, P35, DOI 10.1016/j.infsof.2019.04.005
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Montgomery L, 2018, REQUIR ENG, V23, P333, DOI 10.1007/s00766-018-0292-3
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Neto FGD, 2019, J SYST SOFTWARE, V156, P246, DOI 10.1016/j.jss.2019.07.002
   Tran N, 2020, PATTERN RECOGN, V103, DOI 10.1016/j.patcog.2020.107245
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Petersen K, 2008, P INT C EV ASS SOFTW, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pinto Gustavo, 2020, MSR '20: Proceedings of the 17th International Conference on Mining Software Repositories, P492, DOI 10.1145/3379597.3387482
   Rajbahadur GK, 2021, IEEE T SOFTWARE ENG, V47, P1414, DOI 10.1109/TSE.2019.2924371
   Ralph P, 2021, Arxiv, DOI arXiv:2010.03525
   Read J, 2011, MACH LEARN, V85, P333, DOI 10.1007/s10994-011-5256-5
   Salzberg SL, 1997, DATA MIN KNOWL DISC, V1, P317, DOI 10.1023/A:1009752403260
   Sheskin David, 2011, Handbook of Parametric and Nonparametric Statistical Procedures
   Siebert J., 2020, P INT C QUAL INF COM, P17
   Sorower Mohammad S., 2010, A Literature Survey on Algorithms for Multi-Label Learning
   Stapor K, 2018, ADV INTELL SYST COMP, V578, P12, DOI 10.1007/978-3-319-59162-9_2
   Sullivan Gail M, 2012, J Grad Med Educ, V4, P279, DOI 10.4300/JGME-D-12-00156.1
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tanwani AK, 2009, LECT NOTES COMPUT SC, V5483, P128, DOI 10.1007/978-3-642-01184-9_12
   Wang AYT, 2020, CHEM MATER, V32, P4954, DOI 10.1021/acs.chemmater.0c01907
   Wieringa Roel J., 2014, Design science methodology for information systems and software engineering
   Wohlin C., 2012, Experimentation in Software Engineering
   Zhang CQ, 2021, ADV FUNCT MATER, V31, DOI 10.1002/adfm.202100099
   Zhang D, 2003, SOFTWARE QUAL J, V11, P87, DOI 10.1023/A:1023760326768
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 85
TC 4
Z9 4
U1 1
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2023
VL 28
IS 1
AR 3
DI 10.1007/s10664-022-10243-1
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6A0EO
UT WOS:000880336500006
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Haggag, O
   Grundy, J
   Abdelrazek, M
   Haggag, S
AF Haggag, Omar
   Grundy, John
   Abdelrazek, Mohamed
   Haggag, Sherif
TI A large scale analysis of mHealth app user reviews
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE mHealth apps; User reviews; App store; Google play; Classification;
   Analysis; Recommendations
ID FUNCTIONAL HEALTH LITERACY; PHYSICAL-ACTIVITY; MOBILE; RISK
AB The global mHealth app market is rapidly expanding, especially since the COVID-19 pandemic. However, many of these mHealth apps have serious issues, as reported in their user reviews. Better understanding their key user concerns would help app developers improve their apps' quality and uptake. While app reviews have been used to study user feedback in many prior studies, many are limited in scope, size and/or analysis. In this paper, we introduce a very large-scale study and analysis of mHealth app reviews. We extracted and translated over 5 million user reviews for 278 mHealth apps. These reviews were then classified into 14 different aspects/categories of issues reported. Several mHealth app subcategories were examined to reveal differences in significant areas of user concerns, and to investigate the impact of different aspects of mhealth apps on their ratings. Based on our findings, women's health apps had the highest satisfaction ratings. Fitness activity tracking apps received the lowest and most unfavourable ratings from users. Over half of users who reported troubles leading them to uninstall mHealth apps gave a 1-star rating. Half of users gave the account and logging aspect only one star due to faults and issues encountered while registering or logging in. Over a third of users who expressed privacy concerns gave the app a 1-star rating. However, only 6% of users gave apps a one-star rating due to UI/UX concerns. 20% of users reported issues with handling of user requests and internationalisation concerns. We validated our findings by manually analysing a sample of 1,000 user reviews from each investigated aspect/category. We developed a list of recommendations for mHealth apps developers based on our user review analysis.
C1 [Haggag, Omar; Grundy, John] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Abdelrazek, Mohamed] Deakin Univ, Sch Informat Technol, Melbourne, Vic, Australia.
   [Haggag, Sherif] Univ Adelaide, Sch Comp Sci, Adelaide, SA, Australia.
C3 Monash University; Deakin University; University of Adelaide
RP Haggag, O (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
EM omar.haggag@monash.edu; john.grundy@monash.edu;
   mohamed.abdelrazek@deakin.edu.au; sherif.haggag@adelaide.edu.au
RI Grundy, John/I-6681-2012
FU Australian Research Council [FL190100035, DP200100020]; Monash FIT;
   Australian Research Council [DP200100020] Funding Source: Australian
   Research Council
FX This work is partially supported by Australian Research Council Laureate
   Fellowship FL190100035, Discovery Project DP200100020 and Monash FIT.
CR Abdelrazek M, 2022, 9 IEEEACM INT C MOBI
   Adhikari R., 2014, SECURITY PRIVACY ISS
   Alqahtani F, 2020, HEALTH INFORM J, V26, P2042, DOI 10.1177/1460458219896492
   Anderson K, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0156164
   [Anonymous], 2018, Physical inactivity: A global public health problem
   [Anonymous], 2013, Proceedings of the 27th International BCS Human Computer Interaction Conference
   Athilingam Ponrathi, 2018, JMIR Cardio, V2, pe10057, DOI 10.2196/10057
   Bach RL, 2020, PLOS ONE, V15, DOI 10.1371/journal.pone.0234663
   Baker DW, 1998, J GEN INTERN MED, V13, P791, DOI 10.1046/j.1525-1497.1998.00242.x
   Baker DW, 2002, AM J PUBLIC HEALTH, V92, P1278, DOI 10.2105/AJPH.92.8.1278
   Byambasuren O, 2018, NPJ DIGIT MED, V1, DOI 10.1038/s41746-018-0021-9
   Chatzipavlou Ioannis A, 2016, Mhealth, V2, P21, DOI 10.21037/mhealth.2016.05.01
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chevalier JA, 2006, J MARKETING RES, V43, P345, DOI 10.1509/jmkr.43.3.345
   Di Sorbo A, 2021, PROC IEEE INT CONF S, P569, DOI 10.1109/ICSME52107.2021.00058
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Dong X, 2021, SOFTW SYST MODEL, V20, P49, DOI 10.1007/s10270-020-00790-w
   Dwivedi YK, 2020, INT J INFORM MANAGE, V55, DOI 10.1016/j.ijinfomgt.2020.102211
   Fazzini M, 2022, 9TH IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS, MOBILESOFT 2022, P38, DOI 10.1145/3524613.3527814
   fsondej, 2021, AUT
   Genc-Nayebi N, 2017, J SYST SOFTWARE, V125, P207, DOI 10.1016/j.jss.2016.11.027
   Gómez M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P567, DOI 10.1109/ICSE.2015.195
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Guzman E, 2018, PROC INT CONF SOFTW, P13, DOI 10.1145/3183428.3183436
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Haggag O., 2022, INT C EV ASS SOFTW E, P329
   Haggag O, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P48, DOI 10.1109/ICSE-SEIS52602.2021.00014
   Heffernan KJ, 2016, JMIR MHEALTH UHEALTH, V4, P288, DOI 10.2196/mhealth.4423
   Higgins JP, 2016, AM J MED, V129, P11, DOI 10.1016/j.amjmed.2015.05.038
   Huebner J, 2018, 17TH INTERNATIONAL CONFERENCE ON MOBILE AND UBIQUITOUS MULTIMEDIA (MUM 2018), P293, DOI 10.1145/3282894.3282895
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Institute I, 2020, GROW VAL DIG HLTH
   Joseph RP, 2014, AM J LIFESTYLE MED, V8, P42, DOI 10.1177/1559827613498059
   Jusoh Shaidah, 2017, International Journal of Interactive Mobile Technologies, V11, P73, DOI 10.3991/ijim.v11i6.7265
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Li XZ, 2018, FRONT ARTIF INTEL AP, V303, P773, DOI 10.3233/978-1-61499-900-3-773
   Liew MS, 2019, JMIR MHEALTH UHEALTH, V7, DOI 10.2196/12160
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Mcilroy S, 2017, COMMUN ACM, V60, P62, DOI 10.1145/3141771
   Morey Stephanie A., 2017, Proceedings of the Human Factors and Ergonomics Society Annual Meeting, V61, P1, DOI 10.1177/1541931213601496
   nltk, 2021, Natural Language Toolkit 3.6.2
   Nordrum A., 2016, IEEE Spectrum, V18
   Oliveira N, 2016, PROCEEDINGS OF THE NORDICHI '16: THE 9TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION - GAME CHANGING DESIGN, DOI 10.1145/2971485.2971520
   Packard H, 2015, FAILING MEET MOBILE
   Pal Debajyoti, 2020, IAIT2020: Proceedings of the 11th International Conference on Advances in Information Technology, DOI 10.1145/3406601.3406632
   Pandey A, 2013, J CANCER EDUC, V28, P138, DOI 10.1007/s13187-012-0446-9
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   Pimenta Francisca, 2020, MUM 2020: 19th International Conference on Mobile and Ubiquitous Multimedia, P152, DOI 10.1145/3428361.3428403
   Qiao ZL, 2018, ANN INFORM SYST, V21, P95, DOI 10.1007/978-3-319-58097-5_8
   Reinecke K, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P11, DOI 10.1145/2556288.2557052
   Reinecke K, 2011, ACM T COMPUT-HUM INT, V18, DOI 10.1145/1970378.1970382
   Saadat S, 2020, SCI TOTAL ENVIRON, V728, DOI 10.1016/j.scitotenv.2020.138870
   Spittaels H, 2007, PREV MED, V44, P209, DOI 10.1016/j.ypmed.2006.11.010
   Theiwall M, 2020, PROF INFORM, V29, DOI 10.3145/epi.2020.mar.16
   thesauruscom, 2021, THES AP
   Timmers T, 2020, JMIR MHEALTH UHEALTH, V8, DOI 10.2196/19822
   Translate G, 2021, PYTH CLIENT LIB
   Vasa R., 2012, AUSTR COMP HUM INT C, P241, DOI DOI 10.1145/2414536.2414577
   Ventola C Lee, 2014, P T, V39, P356
   WILLIAMS MV, 1995, JAMA-J AM MED ASSOC, V274, P1677
   Williams MV, 1998, CHEST, V114, P1008, DOI 10.1378/chest.114.4.1008
   Wu HY, 2021, PROC INT CONF SOFTW, P922, DOI 10.1109/ICSE43902.2021.00088
   Zichermann G., 2011, GAMIFICATION DESIGN
NR 65
TC 12
Z9 13
U1 12
U2 34
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 196
DI 10.1007/s10664-022-10222-6
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5F2CI
UT WOS:000866127700002
PM 36246486
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Oliveira, D
   Assunçao, WKG
   Garcia, A
   Fonseca, B
   Ribeiro, M
AF Oliveira, Daniel
   Assuncao, Wesley K. G.
   Garcia, Alessandro
   Fonseca, Baldoino
   Ribeiro, Marcio
TI Developers' perception matters: machine learning to detect
   developer-sensitive smells
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software quality; Machine learning; Code smell detection; Code smell
ID CODE; BAD
AB Code smells are symptoms of poor design that hamper software evolution and maintenance. Hence, code smells should be detected as early as possible to avoid software quality degradation. However, the notion of whether a design and/or implementation choice is smelly is subjective, varying for different projects and developers. In practice, developers may have different perceptions about the presence (or not) of a smell, which we call developer-sensitive smell detection. Although Machine Learning (ML) techniques are promising to detect smells, there is little knowledge regarding the accuracy of these techniques to detect developer-sensitive smells. Besides, companies may change developers frequently, and the models should adapt quickly to the preferences of new developers, i.e., using few training instances. Based on that, we present an investigation of the behavior of ML techniques in detecting developer-sensitive smells. We evaluated seven popular ML techniques based on their accuracy and efficiency for identifying 10 smell types according to individual perceptions of 63 developers, with some divergent agreement on the presence of smells. The results showed that five out of seven techniques had statistically similar behavior, being able to properly detect smells. However, the accuracy of all ML techniques was affected by developers' opinion agreement and smell types. We also observed that the detection rules generated for developers individually have more metrics than in related studies. We can conclude that code smells detection tools should consider the individual perception of each developer to reach higher accuracy. However, untrained developers or developers with high disagreement can introduce bias in the smell detection, which can be risky for overall software quality. Moreover, our findings shed light on improving the state of the art and practice for the detection of code smells, contributing to multiple stakeholders.
C1 [Oliveira, Daniel; Assuncao, Wesley K. G.; Garcia, Alessandro] Pontifical Catholic Univ Rio de Janeiro PUC Rio, Rio De Janeiro, Brazil.
   [Fonseca, Baldoino; Ribeiro, Marcio] Univ Fed Alagoas, Comp Inst, Maceio, Alagoas, Brazil.
C3 Pontificia Universidade Catolica do Rio de Janeiro; Universidade Federal
   de Alagoas
RP Oliveira, D (corresponding author), Pontifical Catholic Univ Rio de Janeiro PUC Rio, Rio De Janeiro, Brazil.
EM doliveira@inf.puc-rio.br; wesleyklewerton@gmail.com;
   afgarcia@inf.puc-rio.br; baldoino@ic.ufal.br; marcio@ic.ufal.br
RI Assuncao, Wesley Klewerton Guez/AAA-8331-2020; Fonseca,
   Baldoino/JUV-2819-2023
OI Assuncao, Wesley Klewerton Guez/0000-0002-7557-9091; Fonseca,
   Baldoino/0000-0002-0730-0319
FU CNPq [434969/2018-4, 312149/2016-6, 309844/2018-5, 421306/2018-1,
   427787/2018-1, 141276/2020-7, 408356/2018-9]; FAPERJ [22520-7/2016,
   010002285/2019, 211033/2019, 202621/2019, 202073/2020]; FAPPR [51435]
FX This study was partially funded by CNPq grants 434969/2018-4,
   312149/2016-6, 309844/2018-5, 421306/2018-1, 427787/2018-1 141276/2020-7
   and 408356/2018-9; FAPERJ grants 22520-7/2016, 010002285/2019,
   211033/2019, 202621/2019 and PDR-10 Fellowship 202073/2020; FAPPR grant
   51435.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Amorim L, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P261, DOI 10.1109/ISSRE.2015.7381819
   Arcoverde R, 2013, 2013 27TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2013), P69, DOI 10.1109/SBES.2013.14
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Bertran IM, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1090, DOI 10.1145/1985793.1986003
   Bigonha MAS, 2019, INFORM SOFTWARE TECH, V115, P79, DOI 10.1016/j.infsof.2019.08.005
   Cohen W.W., 1995, P 12 INT C MACH LEAR, P115, DOI [DOI 10.1016/B978-1-55860-377-6.50023-2, 10.1016/B978-1-55860-377-6.50023-2]
   de Mello RM, 2017, INT SYMP EMP SOFTWAR, P68, DOI 10.1109/ESEM.2017.13
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Fernandes E, 2017, LECT NOTES COMPUT SC, V10221, P48, DOI 10.1007/978-3-319-56856-0_4
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fontana F. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P450, DOI 10.1109/ICSTW.2011.12
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2013, PROC IEEE INT CONF S, P396, DOI 10.1109/ICSM.2013.56
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Friedman M, 1937, J AM STAT ASSOC, V32, P675, DOI 10.2307/2279372
   Gopalan R., 2012, THESIS U W AUSTR
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   HOLTE RC, 1993, MACH LEARN, V11, P63, DOI 10.1023/A:1022631118932
   Hozano M, 2018, INFORM SOFTWARE TECH, V93, P130, DOI 10.1016/j.infsof.2017.09.002
   Hozano M, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P474, DOI 10.5220/0006338804740482
   Hozano M, 2017, INT C PROGRAM COMPRE, P110, DOI 10.1109/ICPC.2017.32
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2011, J SYST SOFTWARE, V84, P559, DOI 10.1016/j.jss.2010.11.921
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Lantz B., 2013, MACHINE LEARNING R
   Lanza Michele., 2005, Object-Oriented Metrics in Practice
   Macia I, 2013, EUR CON SFTWR MTNCE, P177, DOI 10.1109/CSMR.2013.27
   Macia I, 2012, EUR CON SFTWR MTNCE, P277, DOI 10.1109/CSMR.2012.35
   Maiga A., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P466, DOI 10.1109/WCRE.2012.56
   Maneerat N., 2011, Proceedings of the Eighth International Joint Conference on Computer Science and Software Engineering (JCSSE 2011), P331, DOI 10.1109/JCSSE.2011.5930143
   Mäntylä MV, 2006, EMPIR SOFTW ENG, V11, P395, DOI 10.1007/s10664-006-9002-8
   Mäntylá MV, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P277, DOI 10.1109/ISESE.2005.1541837
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Medvidovic Nenad, 2012, AOSD 12, P167
   MITCHELL T, 1989, ANNU REV COMPUT SCI, V4, P417
   Moha N, 2010, FORM ASP COMPUT, V22, P345, DOI 10.1007/s00165-009-0115-x
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Munro MJ, 2005, 2005 11th International Symposium on Software Metrics (METRICS), P124
   Oizumi W, 2019, PROC INT SYMP SOFTW, P346, DOI 10.1109/ISSRE.2019.00042
   Oizumi W, 2016, PROC INT CONF SOFTW, P440, DOI 10.1145/2884781.2884868
   Oliveira Daniel, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P233, DOI 10.1145/3422392.3422427
   Oliveira D., 2022, SUPPLEMENTARY MAT DE
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Pecorelli F, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110693
   Pecorelli F, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P19, DOI 10.1145/3340482.3342744
   Platt JC, 1999, ADVANCES IN KERNEL METHODS, P185
   PRAAGMAN J, 1985, EUR J OPER RES, V19, P144, DOI 10.1016/0377-2217(85)90321-2
   Quinlan R., 1993, C4 5 PROGRAMS MACHIN
   Rasool G, 2015, J SOFTW-EVOL PROC, V27, P867, DOI 10.1002/smr.1737
   Santos Jose Amancio, 2013, P 17 INT C EV ASS SO, P48
   Schumacher Jan., 2010, Proc. ACMIEEE Int. Symp. on Empirical Software Eng. and Measurement. ESEM '10, V8, P1, DOI [10.1145/1852786.1852797, DOI 10.1145/1852786.1852797]
   Silva AL, 2013, 2013 27TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2013), P79, DOI 10.1109/SBES.2013.9
   Sousa L, 2020, INT C PROGRAM COMPRE, P354, DOI 10.1145/3387904.3389276
   Sousa L, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P921, DOI 10.1145/3180155.3180239
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Steinwart Ingo, 2008, SUPPORT VECTOR MACHI
   Surhone LM, 2010, SHAPIRO WILK TEST
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   van Solingen R., 2002, Goal question metric (gqm) approach, DOI [10.1002/0471028959.sof142, DOI 10.1002/0471028959.SOF142]
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
NR 65
TC 0
Z9 0
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 195
DI 10.1007/s10664-022-10234-2
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5F2CI
UT WOS:000866127700001
DA 2024-07-18
ER

PT J
AU Pontillo, V
   Palomba, F
   Ferrucci, F
AF Pontillo, Valeria
   Palomba, Fabio
   Ferrucci, Filomena
TI Static test flakiness prediction: How Far Can We Go?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Flaky tests; Software testing; Machine learning
ID SMELLS; VARIANCE; SMOTE
AB Test flakiness is a phenomenon occurring when a test case is non-deterministic and exhibits both a passing and failing behavior when run against the same code. Over the last years, the problem has been closely investigated by researchers and practitioners, who all have shown its relevance in practice. The software engineering research community has been working toward defining approaches for detecting and addressing test flakiness. Despite being quite accurate, most of these approaches rely on expensive dynamic steps, e.g., the computation of code coverage information. Consequently, they might suffer from scalability issues that possibly preclude their practical use. This limitation has been recently targeted through machine learning solutions that could predict the flakiness of tests using various features, like source code vocabulary or a mixture of static and dynamic metrics computed on individual snapshots of the system. In this paper, we aim to perform a step forward and predict test flakiness only using static metrics. We propose a large-scale experiment on 70 Java projects coming from the iDFlakies and FlakeFlagger datasets. First, we statistically assess the differences between flaky and non-flaky tests in terms of 25 test and production code metrics and smells, analyzing both their individual and combined effects. Based on the results achieved, we experiment with a machine learning approach that predicts test flakiness solely based on static features, comparing it with two state-of-the-art approaches. The key results of the study show that the static approach has performance comparable to those of the baselines. In addition, we found that the characteristics of the production code might impact the performance of the flaky test prediction models.
C1 [Pontillo, Valeria; Palomba, Fabio; Ferrucci, Filomena] Univ Salerno, Dept Comp Sci, Software Engn SeSa Lab, Fisciano, Italy.
C3 University of Salerno
RP Pontillo, V (corresponding author), Univ Salerno, Dept Comp Sci, Software Engn SeSa Lab, Fisciano, Italy.
EM vpontillo@unisa.it; fpalomba@unisa.it; fferucci@unisa.it
OI Pontillo, Valeria/0000-0001-6012-9947
FU Universita degli Studi di Salerno within the CRUI-CARE Agreement
FX Open access funding provided by Universita degli Studi di Salerno within
   the CRUI-CARE Agreement.
CR Alshammari A, 2021, PROC INT CONF SOFTW, P1572, DOI 10.1109/ICSE43902.2021.00140
   [Anonymous], 2014, P 2014 INT S SOFTW T
   Association IS, 1998, 8291998 IS
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Azhagusundari B., 2013, INT J INNOVATIVE TEC, V2, P18
   Banko M, 2001, 39TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P26, DOI 10.3115/1073012.1073017
   Bell J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P433, DOI 10.1145/3180155.3180164
   Bell J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P770, DOI 10.1145/2786805.2786823
   Bengio Y, 2004, J MACH LEARN RES, V5, P1089
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Camara Bruno, 2021, SAST'21: Brazilian Symposium on Systematic and Automated Software Testing, P46, DOI 10.1145/3482909.3482916
   Catolino G, 2019, PROC IEEE INT CONF S, P223, DOI 10.1109/ICSME.2019.00034
   Thorve S, 2018, PROC IEEE INT CONF S, P534, DOI 10.1109/ICSME.2018.00062
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cordy M, 2022, FLAKIME LAB CONTROLL
   Daniel B, 2009, IEEE INT CONF AUTOM, P433, DOI 10.1109/ASE.2009.17
   de Almeida FG, 2019, INT C PROGRAM COMPRE, P116, DOI 10.1109/ICPC.2019.00025
   Sobrinho EVD, 2021, IEEE T SOFTWARE ENG, V47, P17, DOI 10.1109/TSE.2018.2880977
   dos Reis JP, 2022, ARCH COMPUT METHOD E, V29, P47, DOI 10.1007/s11831-021-09566-x
   Dutta Saikat, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P211, DOI 10.1145/3395363.3397366
   Eck M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P830, DOI 10.1145/3338906.3338945
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler M., 2011, ERADICATING NONDETER
   Freund Y, 1999, MACHINE LEARNING, PROCEEDINGS, P124
   Garson G. D., 2012, Testing Statistical Assumptions
   Grano G, 2020, PROC IEEE INT CONF S, P336, DOI 10.1109/ICSME46990.2020.00040
   Grano G, 2021, IEEE T SOFTWARE ENG, V47, P758, DOI 10.1109/TSE.2019.2903057
   Greiler M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P322, DOI 10.1109/ICST.2013.45
   Gruber M, 2021, IEEE INT CONF SOFTW, P148, DOI 10.1109/ICST49551.2021.00026
   Gyori Alex., 2015, Proceedings of the 2015 International Symposium on Software Testing and Analysis, P223
   Haben G, 2021, MSR 2021
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Han H, 2005, LECT NOTES COMPUT SC, V3644, P878, DOI 10.1007/11538059_91
   Han J, 2012, MOR KAUF D, P1
   Harman M, 2018, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2018.00009
   He HB, 2008, IEEE IJCNN, P1322, DOI 10.1109/IJCNN.2008.4633969
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Kohavi R., 1995, STUDY CROSS VALIDATI, DOI DOI 10.1067/MOD.2000.109031
   Koning AJ, 2005, INT J FORECASTING, V21, P397, DOI 10.1016/j.ijforecast.2004.10.003
   Kramer O, 2016, STUD BIG DATA, V20, P45, DOI 10.1007/978-3-319-33383-0_5
   Lacoste FJ, 2009, AGILE 2009 CONFERENCE, P387, DOI 10.1109/AGILE.2009.35
   Lam W, 2020, PROC INT SYMP SOFTW, P403, DOI 10.1109/ISSRE5003.2020.00045
   Lam W, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428270
   Lam W, 2019, IEEE INT CONF SOFTW, P312, DOI 10.1109/ICST.2019.00038
   Lambiase S, 2020, INT C PROGRAM COMPRE, P441, DOI 10.1145/3387904.3389296
   Lampel J, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1381, DOI 10.1145/3468264.3473931
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Memon AM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1479, DOI 10.1109/ICSE.2013.6606750
   Micco John, 2017, The State of Continuous Integration Testing @Google
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Murillo-Morera J, 2015, SEKE, P445, DOI DOI 10.18293/SEKE2015-099
   Myers L., 2004, Encycl. Stat. Sci, V12
   NELDER JA, 1972, J R STAT SOC SER A-G, V135, P370, DOI 10.2307/2344614
   NEMENYI P, 1962, BIOMETRICS, V18, P263
   Noble WS, 2006, NAT BIOTECHNOL, V24, P1565, DOI 10.1038/nbt1206-1565
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Camara BHP, 2021, INT C PROGRAM COMPRE, P444, DOI 10.1109/ICPC52881.2021.00052
   Palomba F, 2019, BENEVOL
   Palomba F, 2018, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSME.2018.00040
   Palomba F, 2018, IEEE T SOFTWARE ENG, V44, P977, DOI 10.1109/TSE.2017.2752171
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Parry O, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3476105
   PECORELLI F, 2020, AVI 2020, P1
   Pecorelli F, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10059-5
   Pecorelli F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09891-y
   Pecorelli F, 2019, INT C PROGRAM COMPRE, P93, DOI 10.1109/ICPC.2019.00023
   Perez A, 2017, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2017.66
   Peruma A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1650, DOI 10.1145/3368089.3417921
   Pezze M., 2008, Software Testing and Analysis: Process, Principles and Techniques
   Pinto Gustavo, 2020, MSR '20: Proceedings of the 17th International Conference on Mining Software Repositories, P492, DOI 10.1145/3379597.3387482
   Pontillo V, 2022, STATIC TEST FLAKINES, DOI [10.6084/m9.figshare.17080946, DOI 10.6084/M9.FIGSHARE.17080946]
   Pontillo V, 2021, MALTESQUE '21: PROCEEDINGS OF THE 5TH INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVOLUTION, P19, DOI 10.1145/3472674.3473981
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Qusef A, 2013, J SOFTW-EVOL PROC, V25, P1167, DOI 10.1002/smr.1573
   Rehman MHU, 2021, ESECFSE, P1371
   Schapire Robert E, 2013, EMPIRICAL INFERENCE, P37, DOI [DOI 10.1007/978-3-642-41136-65, DOI 10.1007/978-3-642-41136-6_5]
   Shabtai A, 2012, SPRINGERBRIEF COMPUT, P1, DOI 10.1007/978-1-4614-2053-8
   Shannon C. E., 1948, BELL SYST TECH J, V27, P379, DOI DOI 10.1002/J.1538-7305.1948.TB01338.X
   Shi A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P545, DOI 10.1145/3338906.3338925
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Taud H., 2018, Geomatic approaches for modeling land change scenarios, DOI [DOI 10.1007/978-3-319-60801-3_27, DOI 10.1007/978-3-319-60801-327]
   Terragni V, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P69, DOI 10.1145/3377816.3381742
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Vassallo C, 2020, EMPIR SOFTW ENG, V25, P1419, DOI 10.1007/s10664-019-09750-5
   Vavrova N, 2017, ARXIV
   Verdecchia R, 2021, IEEE ACCESS, V9, P76119, DOI 10.1109/ACCESS.2021.3082424
   Wang TJ, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P593, DOI 10.1109/ASE51524.2021.9678615
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Webb G. I., 2010, Encyclopedia of Machine Learning, P713, DOI DOI 10.1007/978-0-387-30164-8_576
   Yen SJ, 2006, LECT NOTES CONTR INF, V344, P731
   Zheng W, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P639, DOI 10.1109/SANER50967.2021.00081
NR 97
TC 3
Z9 3
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 187
DI 10.1007/s10664-022-10227-1
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5A0CE
UT WOS:000862564000005
PM 36199835
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Sas, D
   Avgeriou, P
   Uyumaz, U
AF Sas, Darius
   Avgeriou, Paris
   Uyumaz, Umut
TI On the evolution and impact of architectural smells-an industrial case
   study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Architectural smells; Empirical study; Industrial context; Software
   repository mining; Qualitative study; C; C plus plus
ID SOFTWARE
AB Architectural smells (AS) are notorious for their long-term impact on the Maintainability and Evolvability of software systems. The majority of research work has investigated this topic by mining software repositories of open source Java systems, making it hard to generalise and apply them to an industrial context and other programming languages. To address this research gap, we conducted an embedded multiple-case case study, in collaboration with a large industry partner, to study how AS evolve in industrial embedded systems. We detect and track AS in 9 C/C++ projects with over 30 releases for each project that span over two years of development, with over 20 millions lines of code in the last release only. In addition to these quantitative results, we also interview 12 among the developers and architects working on these projects, collecting over six hours of qualitative data about the usefulness of AS analysis and the issues they experienced while maintaining and evolving artefacts affected by AS. Our quantitative findings show how individual smell instances evolve over time, how long they typically survive within the system, how they overlap with instances of other smell types, and finally what the introduction order of smell types is when they overlap. Our qualitative findings, instead, provide insights on the effects of AS on the long-term maintainability and evolvability of the system, supported by several excerpts from our interviews. Practitioners also mention what parts of the AS analysis actually provide actionable insights that they can use to plan refactoring activities.
C1 [Sas, Darius; Avgeriou, Paris] Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intelli, Bernoulliborg Nijenborgh 9, NL-9747 AG Groningen, Netherlands.
   [Uyumaz, Umut] ASML, De Run 6501, NL-5504 DR Veldhoven, Netherlands.
C3 University of Groningen; ASML Holding
RP Sas, D (corresponding author), Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intelli, Bernoulliborg Nijenborgh 9, NL-9747 AG Groningen, Netherlands.
EM d.d.sas@rug.nl; p.avgeriou@rug.nl; umut.uyumaz@asml.com
OI Sas, Darius/0000-0003-3383-3298; Avgeriou, Paris/0000-0002-7101-0754
FU European Union [780572 SDK4ED]
FX This work was supported by the European Union's Horizon 2020 research
   and innovation programme under grant agreement No. 780572 SDK4ED
   (https://sdk4ed.eu/).
CR Abdeen H., 2011, 2011 18th Working Conference on Reverse Engineering, P394, DOI 10.1109/WCRE.2011.55
   Al-Mutawa HA, 2013, IEEE AUS SOFT ENGR, P48, DOI 10.1109/ASWEC.2014.15
   [Anonymous], 1994, ANAL DEPENDENCIES
   Azadi U, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P88, DOI 10.1109/TechDebt.2019.00027
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Biaggi A, 2018, EUROMICRO CONF PROC, P417, DOI 10.1109/SEAA.2018.00074
   Boeije H, 2002, QUAL QUANT, V36, P391, DOI 10.1023/A:1020909529486
   Brereton, 2008, P 12 INT C EVALUATIO, V8, P41, DOI 10.14236/ewic/EASE2008.5
   Cedrim D, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P465, DOI 10.1145/3106237.3106259
   Chatzigeorgiou A, 2014, INNOV SYST SOFTW ENG, V10, P3, DOI 10.1007/s11334-013-0205-z
   de Andrade Hugo Sica, 2014, WICSA COMPANION, V12, P1
   Le DM, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P176, DOI 10.1109/ICSA.2018.00027
   Le DM, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P178, DOI 10.1109/WICSA.2016.15
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Feng Q, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P986, DOI 10.1109/ASE.2019.00095
   Fontana FA., 2020, An architectural smell evaluation in an industrial context, P68
   Fontana FA, 2019, J SYST SOFTWARE, V154, P139, DOI 10.1016/j.jss.2019.04.066
   Fontana FA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P282, DOI 10.1109/ICSAW.2017.16
   Fontana FA, 2016, PROC IEEE INT CONF S, P433, DOI 10.1109/ICSME.2016.33
   Fontana FA, 2015, INT WORKS EMERG TREN, P44, DOI 10.1109/WETSoM.2015.14
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Garcia J, 2009, EUR CON SFTWR MTNCE, P255, DOI 10.1109/CSMR.2009.59
   Glaser B., 1967, The Discovery of Grounded Theory, V17, P2, DOI [10.4324/9780203793206, DOI 10.4324/9780203793206]
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Lefever J, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P121, DOI 10.1109/ICSE-SEIP52600.2021.00021
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Lippert M., 2006, Refactoring in large software projects: performing complex restructurings successfully
   Martin R., 2017, Clean architecture: A craftsman's guide to software structure and design
   Martin R, 2000, OBJECT MENTOR
   Martini A, 2018, LECT NOTES COMPUT SC, V11048, P320, DOI 10.1007/978-3-030-00761-4_21
   Mathison Sandra, 2005, Encyclopedia of Evaluation, V1
   Mo R, 2018, IEEE INT CONF AUTOM, P779, DOI 10.1145/3238147.3240467
   Mo R, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P51, DOI 10.1109/WICSA.2015.12
   Nayebi M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P171, DOI 10.1109/ICSE-SEIP.2019.00026
   Nunez-Varela AS, 2017, J SYST SOFTWARE, V128, P164, DOI 10.1016/j.jss.2017.03.044
   Oyetoyan TD, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P241, DOI 10.1109/SANER.2015.7081834
   Page L., 1999, PAGERANK CITATION RA
   Palomba F, 2018, INFORM SOFTWARE TECH, V99, P1, DOI 10.1016/j.infsof.2018.02.004
   PARNAS DL, 1979, IEEE T SOFTWARE ENG, V5, P128, DOI 10.1109/TSE.1979.234169
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   Pruijt L, 2017, SOFTWARE PRACT EXPER, V47, P273, DOI 10.1002/spe.2421
   Roveda R, 2018, EUROMICRO CONF PROC, P408, DOI 10.1109/SEAA.2018.00073
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Samarthyam G., 2016, Proceedings of the 1st International Workshop on Software Refactoring, P1
   SANKOFF D, 1983, TIME WARPS STRING ED
   Sas D, 2019, PROC IEEE INT CONF S, P557, DOI 10.1109/ICSME.2019.00090
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   TIOBE, 2021, TIOBE PROGR COMM IND
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   van Solingen R., 2002, Encyclopedia of Software Engineering, DOI [DOI 10.1002/0471028959.SOF142, 10.1002/0471028959.sof142]
   van Vliet H., 2008, SOFTWARE ENG PRINCIP, P713
   Vaucher S, 2009, WORK CONF REVERSE EN, P145, DOI 10.1109/WCRE.2009.23
   Verdecchia R, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P11, DOI 10.1145/3194164.3194176
   Xiao L, 2016, PROC INT CONF SOFTW, P488, DOI 10.1145/2884781.2884822
NR 55
TC 5
Z9 5
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2022
VL 27
IS 4
AR 86
DI 10.1007/s10664-022-10132-7
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0L2VU
UT WOS:000781338300001
OA Green Submitted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Pan, RQ
   Bagherzadeh, M
   Ghaleb, TA
   Briand, L
AF Pan, Rongqi
   Bagherzadeh, Mojtaba
   Ghaleb, Taher A.
   Briand, Lionel
TI Test case selection and prioritization using machine learning: a
   systematic literature review
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Machine learning; Software testing; Test case prioritization; Test case
   selection; Continuous integration; Systematic literature review
ID REGRESSION
AB Regression testing is an essential activity to assure that software code changes do not adversely affect existing functionalities. With the wide adoption of Continuous Integration (CI) in software projects, which increases the frequency of running software builds, running all tests can be time-consuming and resource-intensive. To alleviate that problem, Test case Selection and Prioritization (TSP) techniques have been proposed to improve regression testing by selecting and prioritizing test cases in order to provide early feedback to developers. In recent years, researchers have relied on Machine Learning (ML) techniques to achieve effective TSP (ML-based TSP). Such techniques help combine information about test cases, from partial and imperfect sources, into accurate prediction models. This work conducts a systematic literature review focused on ML-based TSP techniques, aiming to perform an in-depth analysis of the state of the art, thus gaining insights regarding future avenues of research. To that end, we analyze 29 primary studies published from 2006 to 2020, which have been identified through a systematic and documented process. This paper addresses five research questions addressing variations in ML-based TSP techniques and feature sets for training and testing ML models, alternative metrics used for evaluating the techniques, the performance of techniques, and the reproducibility of the published studies. We summarize the results related to our research questions in a high-level summary that can be used as a taxonomy for classifying future TSP studies.
C1 [Pan, Rongqi; Bagherzadeh, Mojtaba; Ghaleb, Taher A.; Briand, Lionel] Univ Ottawa, Sch Elect Engn & Comp Sci EECS, Ottawa, ON, Canada.
   [Briand, Lionel] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
C3 University of Ottawa; University of Luxembourg
RP Ghaleb, TA (corresponding author), Univ Ottawa, Sch Elect Engn & Comp Sci EECS, Ottawa, ON, Canada.
EM rpan099@uottawa.ca; m.bagherzadeh@uottawa.ca; tghaleb@uottawa.ca;
   lbriand@uottawa.ca
RI Ghaleb, Taher A/I-9457-2018
OI Ghaleb, Taher A/0000-0001-9336-7298
FU Huawei Technologies Canada Co., Ltd; Mitacs Accelerate Program; Canada
   Research Chair and Discovery Grant programs of the Natural Sciences and
   Engineering Research Council of Canada (NSERC)
FX This work was supported by a research grant from Huawei Technologies
   Canada Co., Ltd, as well as by the Mitacs Accelerate Program, the Canada
   Research Chair and Discovery Grant programs of the Natural Sciences and
   Engineering Research Council of Canada (NSERC).
CR Almaghairbe R, 2017, SOFTWARE QUAL J, V25, P803, DOI 10.1007/s11219-016-9339-1
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Aman H, 2020, EUROMICRO CONF PROC, P80, DOI 10.1109/SEAA51224.2020.00023
   [Anonymous], Replication package of this study
   Ashima, 2020, 2020 International Conference on Intelligent Engineering and Management (ICIEM), P331, DOI 10.1109/ICIEM48762.2020.9160217
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   BERTOLINO A, 2020, 42 INT C SOFTW ENG I
   Busjaeger B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P975, DOI 10.1145/2950290.2983954
   Carlson Ryan, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P382, DOI 10.1109/ICSM.2011.6080805
   Chen JJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P656, DOI 10.1145/3236024.3236053
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Clover A, 2021, ATL CLOV
   Dang Van, 2020, RankLib
   Devlin J., 2018, BERT PRE TRAINING DE
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Durelli VHS, 2019, IEEE T RELIAB, V68, P1189, DOI 10.1109/TR.2019.2892517
   EclEmma team, 2021, JACOCO JAV COD COV L
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Feng Zhangyin, 2020, ARXIV200208155
   Fowler M., 2006, Continuous integration
   Freund Y, 2004, J MACH LEARN RES, V4, P933, DOI 10.1162/1532443041827916
   Hasnain M, 2019, ASIAPAC SIGN INFO PR, P96, DOI 10.1109/APSIPAASC47483.2019.9023052
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Jahan H, 2019, J INTELL FUZZY SYST, V36, P6181, DOI 10.3233/JIFS-181998
   James G, 2013, SPRINGER TEXTS STAT, V103, P1, DOI [10.1007/978-1-4614-7138-7, 10.1007/978-1-4614-7138-7_1]
   Joachims T, 2002, P 8 ACM SIGKDD INT C, P133, DOI [DOI 10.1145/775047.775067, 10.1145/775047.775067]
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kandil P, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1794
   Kazmi R, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3057269
   Khalid Z, 2019, 2019 IEEE 10TH ANNUAL INFORMATION TECHNOLOGY, ELECTRONICS AND MOBILE COMMUNICATION CONFERENCE (IEMCON), P1013, DOI [10.1109/IEMCON.2019.8936202, 10.1109/iemcon.2019.8936202]
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Lachmann R, 2016, 2016 15TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2016), P361, DOI [10.1109/ICMLA.2016.0065, 10.1109/ICMLA.2016.163]
   Liem C, 2020, ARXIV201208387
   Lima JAP, 2022, IEEE T SOFTWARE ENG, V48, P453, DOI 10.1109/TSE.2020.2992428
   Lima Jackson A. Prado, 2020, P INT SYST SOFTW PRO, P1, DOI [10.1145/3382025.3414967, DOI 10.1145/3382025.3414967]
   Liu TY, 2011, LEARNING TO RANK FOR INFORMATION RETRIEVAL, P1, DOI 10.1007/978-3-642-14267-3
   Liu WL, 2007, INT C COMP AID DES C, P252
   Luo Q, 2018, PROC IEEE INT CONF S, P240, DOI 10.1109/ICSME.2018.00033
   Mandieh M, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106269
   Manning C.D., 1999, FDN STAT NATURAL LAN
   Mattis T, 2020, IEEE WORK CONF MIN S, P385, DOI 10.1145/3379597.3387458
   McGuire N, 2006, GCOV TOOL ANAL
   Medhat N, 2020, IEEE ACCESS, V8, P215716, DOI 10.1109/ACCESS.2020.3039931
   Mirarab Siavash, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P278, DOI 10.1109/ICST.2008.57
   Noor T.B., 2017, P 13 INT C PREDICTIV, P2
   Nunez-Varela AS, 2017, J SYST SOFTWARE, V128, P164, DOI 10.1016/j.jss.2017.03.044
   Palma F, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P80, DOI 10.1145/3273934.3273944
   Lima JAP, 2020, PROCEEDINGS OF THE 5TH BRAZILIAN SYMPOSIUM ON SYSTEMATIC AND AUTOMATED SOFTWARE TESTING, SAST 2020, P21, DOI 10.1145/3425174.3425210
   Lima JAP, 2020, INFORM SOFTWARE TECH, V121, DOI 10.1016/j.infsof.2020.106268
   ROBBINS H, 1952, B AM MATH SOC, V58, P527, DOI 10.1090/S0002-9904-1952-09620-8
   Rosenbauer Lukas, 2020, GECCO'20. Proceedings of the 2020 Genetic and Evolutionary Computation Conference Companion, P1798, DOI 10.1145/3377929.3398128
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Shali Yan, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P147, DOI 10.1109/ICST.2010.47
   Sharma M. M., 2019, INT J ENG ADV TECHNO, V9, P2742
   Shi TT, 2020, PR INT CONF DATA SC, P663, DOI 10.1109/DSAA49011.2020.00076
   Singh A., 2019, INT J RECENT TECHNOL, V8, P700
   Songyu Chen, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P1, DOI 10.1109/ICST.2011.38
   Spieker H, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P12, DOI 10.1145/3092703.3092709
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   Sutton RS, 2018, ADAPT COMPUT MACH LE, P1
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Tonella P, 2006, PROC IEEE INT CONF S, P123
   Wilks D. S, 2011, International Geophysics Series, V100, DOI DOI 10.1002/MET.16
   Wilson SW, 1995, EVOL COMPUT, V3, P149, DOI 10.1162/evco.1995.3.2.149
   Yabin Wang, 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P138, DOI 10.1109/SERE.2012.18
   Yisong Yue, 2007, 30th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P271
   Yoo S, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P201
   Zhang CS, 2019, NEURAL PROCESS LETT, V50, P957, DOI 10.1007/s11063-019-09999-3
NR 72
TC 38
Z9 40
U1 4
U2 47
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 29
DI 10.1007/s10664-021-10066-6
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XO4RR
UT WOS:000730174900003
DA 2024-07-18
ER

PT J
AU Parra, E
   Alahmadi, M
   Ellis, A
   Haiduc, S
AF Parra, Esteban
   Alahmadi, Mohammad
   Ellis, Ashley
   Haiduc, Sonia
TI A comparative study and analysis of developer communications on Slack
   and Gitter
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Gitter; Dataset; Developer communications
AB Software developers are often using instant messaging platforms to communicate with each other and other stakeholders. Among these platforms, Gitter has emerged as a popular choice and the messages it contains can reveal important information to researchers studying open source software systems. Uncovering what developers are communicating about through Gitter is an essential first step towards successfully understanding and leveraging this information. In this paper, we first describe the largest manually labeled and curated dataset of Gitter developer messages, named GitterCom, obtained by manually analyzing and labeling 10,000 Gitter messages in 10 software projects. We then present a qualitative study to understand the extent to which the categories identified in previous work by Lin et al. (2016) found on Slack through surveys are applicable to developer messages exchanged on Gitter. Further, in an effort to automate the labeling process, we investigate the accuracy of 9 traditional machine learning and deep learning algorithms in predicting the intent of Gitter messages. We found that Decision Trees and Random Forest performed the best, achieving an accuracy of 88%, which is very promising for this multi-class classification task. Finally, we discuss the potential directions for future research enabled by labeled Gitter datasets such as GitterCom.
C1 [Parra, Esteban; Ellis, Ashley; Haiduc, Sonia] Florida State Univ, 600 W Coll Ave, Tallahassee, FL 32306 USA.
   [Alahmadi, Mohammad] Univ Jeddah, Coll Comp Sci & Engn, Dept Software Engn, Jeddah, Saudi Arabia.
C3 State University System of Florida; Florida State University; University
   of Jeddah
RP Parra, E (corresponding author), Florida State Univ, 600 W Coll Ave, Tallahassee, FL 32306 USA.
EM parrarod@cs.fsu.edu; malahmdi@uj.edu.sa; ake17@cs.fsu.edu;
   shaiduc@cs.fsu.edu
RI Alahmadi, Mohammad/GWQ-7213-2022
OI Alahmadi, Mohammad/0000-0002-3399-2996
FU National Science Foundation [CCF-1526929]
FX This work is supported in part by the National Science Foundation grant
   CCF-1526929.
CR Alkadhi R, 2017, INT SYMP EMP SOFTWAR, P175, DOI 10.1109/ESEM.2017.26
   Alkadhi R, 2017, IEEE WORK CONF MIN S, P436, DOI 10.1109/MSR.2017.43
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   Aly M., 2005, NEURAL NETWORKS, V19, P9
   Anders A, 2016, INT J BUS COMMUN, V53, P224, DOI 10.1177/2329488415627273
   [Anonymous], 2014, Proceedings of the 6th international workshop on social software engineering, DOI 10.1145/2661685.2661689
   [Anonymous], **DATA OBJECT**, DOI DOI 10.6084/M9.FIGSHARE.11626008
   Arora P, 2015, PROCEEDINGS OF THE 2015 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING (ASONAM 2015), P1232, DOI 10.1145/2808797.2809318
   Badashian AS, 2016, LECT NOTES COMPUT SC, V9633, P231, DOI 10.1007/978-3-662-49665-7_14
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Beyer S, 2018, INT C PROGRAM COMPRE, P211, DOI 10.1145/3196321.3196333
   Bottou L, 2010, COMPSTAT'2010: 19TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL STATISTICS, P177, DOI 10.1007/978-3-7908-2604-3_16
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Bruendl SA, 2020, 2020 IEEE 21ST INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION FOR DATA SCIENCE (IRI 2020), P325, DOI 10.1109/IRI49571.2020.00054
   Buda M, 2018, NEURAL NETWORKS, V106, P249, DOI 10.1016/j.neunet.2018.07.011
   Chatterjee P, 2020, IEEE WORK CONF MIN S, P588, DOI 10.1145/3379597.3387493
   Chatterjee Preetha, 2019, IEEE WORK CONF MIN S, P490, DOI [DOI 10.1109/MSR.2019.00075, 10.1109/MSR.2019.00075]
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chowdhury SA, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P422, DOI 10.1109/MSR.2015.54
   Constantino K, 2020, INT CONF GLOBAL SOFT, P55, DOI 10.1145/3372787.3390442
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   cuc, 2020, CUCUMBER
   Deng L, 2014, APSIPA TRANS SIGNAL, V3, DOI 10.1017/atsip.2013.9
   Efstathiou V, 2018, IEEE WORK CONF MIN S, P38, DOI 10.1145/3196398.3196448
   Ehsan O, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3412378
   Elsner M, 2011, P 49 ANN M ASS COMP, P1179
   Ford D, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174182
   fre, 2020, FREEZINGMOON
   Gers FA, 2003, J MACH LEARN RES, V3, P115, DOI 10.1162/153244303768966139
   Guzman E, 2017, INT REQUIR ENG CONF, P11, DOI 10.1109/RE.2017.88
   ima, 2020, IMAGEJ
   jhi, 2020, JHIPSTER
   Käfer V, 2018, PROC IEEE ACM INT C, P242, DOI 10.1145/3183440.3194951
   Keivanloo I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P664, DOI 10.1145/2568225.2568292
   Khan Aurangzeb, 2010, Journal of Advances in Information Technology, V1, P4, DOI 10.4304/jait.1.1.4-20
   Kim Y, 2014, IEEE ASME INT C ADV, P1747, DOI 10.1109/AIM.2014.6878336
   Lai SW, 2015, AAAI CONF ARTIF INTE, P2267
   Laurikkala J, 2001, LECT NOTES ARTIF INT, V2101, P63, DOI 10.1007/3-540-48229-6_9
   Lin B, 2016, PROCEEDINGS OF THE 19TH ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING COMPANION, P333, DOI 10.1145/2818052.2869117
   Linares-Vásquez M, 2013, IEEE WORK CONF MIN S, P93, DOI 10.1109/MSR.2013.6624014
   Liu F., 2008, short papers, P201
   mar, 2020, MARIONETTE
   McCallum A., 1998, AAAI 98 WORKSH LEARN, V752, P41, DOI DOI 10.1109/TSMC.1985.6313426
   Mikolov T., 2011, 2011 IEEE Workshop on Automatic Speech Recognition & Understanding (ASRU), P196, DOI 10.1109/ASRU.2011.6163930
   Murgia A., 2016, P CHI C EXT ABSTR HU, P1272, DOI [10.1145/2851581.2892311, DOI 10.1145/2851581.2892311]
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Novielli N, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P33, DOI 10.1145/2804381.2804387
   Paikari E, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P13, DOI 10.1145/3195836.3195859
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Parra E, 2021, REPLICATION PACKAGE
   Parra E, 2020, IEEE WORK CONF MIN S, P563, DOI 10.1145/3379597.3387494
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Pimentel MG, 2003, LECT NOTES ARTIF INT, V2680, P483
   Poche EH, 2017, THESIS
   Ponzanelli L, 2014, INT CONF QUAL SOFTW, P343, DOI 10.1109/QSIC.2014.27
   Rekha Smrithi, 2014, P 1 INT C INT ADV AP
   Russell S., 1995, Prentice Hall series in artificial intelligence, V25, P27
   SAFAVIAN SR, 1991, IEEE T SYST MAN CYB, V21, P660, DOI 10.1109/21.97458
   Sahar H, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110852
   Seiffert C, 2014, INFORM SCIENCES, V259, P571, DOI 10.1016/j.ins.2010.12.016
   Shi L, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P391, DOI 10.1145/3468264.3468562
   Shihab E, 2009, PROC IEEE INT CONF S, P147, DOI 10.1109/ICSM.2009.5306333
   Singh A, 2016, PROCEEDINGS OF THE 10TH INDIACOM - 2016 3RD INTERNATIONAL CONFERENCE ON COMPUTING FOR SUSTAINABLE GLOBAL DEVELOPMENT, P1310
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Storey MA, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P928, DOI 10.1145/2950290.2983989
   Storey Margaret-Anne, 2014, FUT SOFTW ENG P, P100, DOI 10.1145/2593882.2593887
   Stray V, 2019, INT CONF GLOBAL SOFT, P111, DOI 10.1109/ICGSE.2019.00031
   Subramanian S, 2013, IEEE WORK CONF MIN S, P85, DOI 10.1109/MSR.2013.6624012
   Tian Y, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P44, DOI 10.1109/CSMR-WCRE.2014.6747213
   TOMEK I, 1976, IEEE T SYST MAN CYB, V6, P769, DOI 10.1109/tsmc.1976.4309452
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Vassallo Carmine, 2014, Proceedings of the 22nd International Conference on Program Comprehension, P106
   West D, 2000, COMPUT OPER RES, V27, P1131, DOI 10.1016/S0305-0548(99)00149-5
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Zhu J, 2009, STAT INTERFACE, V2, P349
NR 75
TC 8
Z9 8
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
DI 10.1007/s10664-021-10095-1
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YG2VL
UT WOS:000742351200001
OA hybrid
DA 2024-07-18
ER

PT J
AU Shu, R
   Xia, TP
   Williams, L
   Menzies, T
AF Shu, Rui
   Xia, Tianpei
   Williams, Laurie
   Menzies, Tim
TI Omni: automated ensemble with unexpected models against adversarial
   evasion attack
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Hyperparameter optimization; Ensemble defense; Adversarial evasion
   attack
AB Context Machine learning-based security detection models have become prevalent in modern malware and intrusion detection systems. However, previous studies show that such models are susceptible to adversarial evasion attacks. In this type of attack, inputs (i.e., adversarial examples) are specially crafted by intelligent malicious adversaries, with the aim of being misclassified by existing state-of-the-art models (e.g., deep neural networks). Once the attackers can fool a classifier to think that a malicious input is actually benign, they can render a machine learning-based malware or intrusion detection system ineffective. Objective To help security practitioners and researchers build a more robust model against non-adaptive, white-box and non-targeted adversarial evasion attacks through the idea of ensemble model. Method We propose an approach called Omni, the main idea of which is to explore methods that create an ensemble of "unexpected models"; i.e., models whose control hyperparameters have a large distance to the hyperparameters of an adversary's target model, with which we then make an optimized weighted ensemble prediction. Results In studies with five types of adversarial evasion attacks (FGSM, BIM, JSMA, DeepFool and Carlini-Wagner) on five security datasets (NSL-KDD, CIC-IDS-2017, CSE-CIC-IDS2018, CICAndMal2017 and the Contagio PDF dataset), we show Omni is a promising approach as a defense strategy against adversarial attacks when compared with other baseline treatments. Conclusions When employing ensemble defense against adversarial evasion attacks, we suggest to create ensemble with unexpected models that are distant from the attacker's expected model (i.e., target model) through methods such as hyperparameter optimization.
C1 [Shu, Rui; Xia, Tianpei; Williams, Laurie; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Shu, R (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM rshu@ncsu.edu; txia4@ncsu.edu; lawilli3@ncsu.edu; timm@ieee.org
RI Menzies, Tim/X-7680-2019; Xia, Tianpei/HGC-8847-2022
OI Menzies, Tim/0000-0002-5040-3196; 
FU NSF [1909516]; Direct For Computer & Info Scie & Enginr; Division of
   Computing and Communication Foundations [1909516] Funding Source:
   National Science Foundation
FX This work was partially funded by NSF grant #1909516.
CR [Anonymous], 2005, CEAS
   [Anonymous], 2015, 3 INT C LEARN REPR I
   [Anonymous], P 11 ACM SIGKDD INT
   Arp D, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23247
   Athalye A, 2018, PR MACH LEARN RES, V80
   Barreno M., 2006, P 2006 ACM S INF COM, P16
   Bergstra J., 2011, Adv. Neural Inf. Process. Syst., V24
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bhat P, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3301285
   Biggio Battista, 2013, Machine Learning and Knowledge Discovery in Databases. European Conference, ECML PKDD 2013. Proceedings: LNCS 8190, P387, DOI 10.1007/978-3-642-40994-3_25
   Biggio B, 2014, P 2014 WORKSH ART IN, P27
   Biggio B., 2013, P ACM WORKSH ART INT, P87, DOI DOI 10.1145/2517312.2517321
   Biggio B, 2018, PATTERN RECOGN, V84, P317, DOI 10.1016/j.patcog.2018.07.023
   Biggio B, 2010, INT J MACH LEARN CYB, V1, P27, DOI 10.1007/s13042-010-0007-7
   Bissell K., 2019, The cost of cybercrime - ninth annual cost of cybercrime study
   Canadian Institute for Cybersecurity, 2009, NSL KDD DAT
   Canali D, 2011, P 20 INT C WORLD WID, P197, DOI DOI 10.1145/1963405.1963436
   Carlini N., 2016, ARXIV160704311
   Carlini N., 2019, ARXIV190206705
   Carlini N, 2017, P IEEE S SECUR PRIV, P39, DOI 10.1109/SP.2017.49
   Carlini Nicholas, 2017, ACM WORKSH ART INT S, P3
   Chang C, 2019, P INT ASS MAR U IAMU
   Chen S, 2018, COMPUT SECUR, V73, P326, DOI 10.1016/j.cose.2017.11.007
   Contagio, 2020, CONTAGIO MALWARE DUM
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Dalvi N. N., 2004, P 10 ACM SIGKDD INT, P99, DOI DOI 10.1145/1014052.1014066
   Dang H, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P119, DOI 10.1145/3133956.3133978
   Demontis A, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P321
   Eshete B., 2012, PROC INT C SECUR PRI, P149
   Farnia Farzan, 2019, ICLR
   Feurer M, 2019, SPRING SER CHALLENGE, P3, DOI 10.1007/978-3-030-05318-5_1
   GOWER JC, 1971, BIOMETRICS, V27, P857, DOI 10.2307/2528823
   Gross K.C., 2016, Agriculture Handbook Number 66: The Commercial Storage of Fruits, Vegetables, and Florist and Nursery Stocks, P1, DOI DOI 10.1111/IJFS.12415
   Grosse K., 2017, ARXIV
   Grosse K, 2017, LECT NOTES COMPUT SC, V10493, P62, DOI 10.1007/978-3-319-66399-9_4
   He Warren, 2017, P USENIX WORKSH OFF
   Hendler D, 2018, PROCEEDINGS OF THE 2018 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIACCS'18), P187, DOI 10.1145/3196494.3196511
   Hernández-Lobato D, 2013, PATTERN RECOGN, V46, P1323, DOI 10.1016/j.patcog.2012.10.021
   Hu W., 2017, Generating adversarial malware examples for black-box attacks based on gan
   Jang-Jaccard J, 2014, J COMPUT SYST SCI, V80, P973, DOI 10.1016/j.jcss.2014.02.005
   Juuti M, 2019, 2019 4TH IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P), P512, DOI 10.1109/EuroSP.2019.00044
   Kantchelian A, 2016, PR MACH LEARN RES, V48
   Kariyappa Sanjay, 2019, ARXIV190109981
   Khasawneh KN, 2017, 50TH ANNUAL IEEE/ACM INTERNATIONAL SYMPOSIUM ON MICROARCHITECTURE (MICRO), P315, DOI 10.1145/3123939.3123972
   Kurakin Alexey, 2017, INT C LEARN REPR
   Kwon H, 2018, IEEE ACCESS, V6, P46084, DOI 10.1109/ACCESS.2018.2866197
   Langner R, 2011, IEEE SECUR PRIV, V9, P49, DOI 10.1109/MSP.2011.67
   Lashkari AH, 2018, DEV SYSTEMATIC APPRO
   Liu CF, 2017, DES AUT TEST EUROPE, P91, DOI 10.23919/DATE.2017.7926964
   Madry A., 2018, ARXIV
   Maiorca Davide., 2013, P 8 ACM SIGSAC S INF, P119, DOI DOI 10.1145/2484313.2484327
   Monshizadeh M, 2014, INT CONF COMPUT INFO, P775, DOI 10.1109/CIT.2014.130
   Moosavi-Dezfooli SM, 2016, PROC CVPR IEEE, P2574, DOI 10.1109/CVPR.2016.282
   Morgan S., 2019, OFFICIAL ANN CYBERCR
   Munoz-Gonzalez L., 2017, PROC 10 ACMWORKSHOP, P27, DOI 10.1145/3128572.3140451
   Na T, 2018, ICLR
   North Carolina State University, 2020, ARC ROOT CLUST RES S
   Opderbeck D.W., 2015, MDLREV, V75, P935
   Pang TY, 2019, PR MACH LEARN RES, V97
   Papernot N, 2016, ARXIV161000768
   Papernot N., 2016, CORR
   Papernot N, 2018, 2018 3RD IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P 2018), P399, DOI 10.1109/EuroSP.2018.00035
   Papernot N, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P506, DOI 10.1145/3052973.3053009
   Papernot N, 2016, P IEEE S SECUR PRIV, P582, DOI 10.1109/SP.2016.41
   Papernot N, 2016, 1ST IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY, P372, DOI 10.1109/EuroSP.2016.36
   Paszke A, 2019, ADV NEUR IN, V32
   Polikar R, 2012, ENSEMBLE MACHINE LEARNING: METHODS AND APPLICATIONS, P1, DOI 10.1007/978-1-4419-9326-7_1
   Queenie Wong LH, 2018, FACEBOOK SAYS HACKER
   Rigaki M, 2020, ARXIV200707646
   Roskot Martin, 2021, Journal of Business Strategy, V42, P91, DOI 10.1108/JBS-12-2019-0235
   Sechel Sergiu, 2019, Informatica Economica, V23, P45, DOI 10.12948/issn14531305/23.2.2019.05
   Shahriari B, 2016, P IEEE, V104, P148, DOI 10.1109/JPROC.2015.2494218
   Sharafaldin I, 2018, ICISSP: PROCEEDINGS OF THE 4TH INTERNATIONAL CONFERENCE ON INFORMATION SYSTEMS SECURITY AND PRIVACY, P108, DOI 10.5220/0006639801080116
   Smith R, 2001, ADOBE PDF FILES CAN
   Smutz C, 2012, 28TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2012), P239
   Smutz C, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23078
   Snoek J., 2012, Advances in Neural Information Processing Systems, V25, DOI DOI 10.48550/ARXIV.1206.2944
   Srndic N, 2014, P IEEE S SECUR PRIV, P197, DOI 10.1109/SP.2014.20
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Strauss T, 2017, arXiv
   Szegedy C, 2014, INT C LEARN REPR
   Szegedy C, 2014, Arxiv, DOI [arXiv:1312.6199, DOI 10.1109/CVPR.2015.7298594]
   Tavallaee M., 2009, P 2009 IEEE S COMPUT, P1, DOI DOI 10.1109/CISDA.2009.5356528
   Tramèr F, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P601
   Tramonti F, 2019, PSYCHOL HEALTH MED, V24, P27, DOI 10.1080/13548506.2018.1510131
   VALIANT LG, 1984, COMMUN ACM, V27, P1134, DOI 10.1145/1968.1972
   Xiao H, 2015, PR MACH LEARN RES, V37, P1689
   Xu W, 2016, P 2016 NETWORK DISTR, V10
   Yin X., 2019, ARXIV190511475
   Young S. R., 2015, P WORKSH MACH LEARN, P1, DOI DOI 10.1145/2834892.2834896
   Zhang F, 2016, IEEE T CYBERNETICS, V46, P766, DOI 10.1109/TCYB.2015.2415032
   Zhang FY, 2020, WORLD WIDE WEB, V23, P2957, DOI 10.1007/s11280-020-00813-y
   Zhang FY, 2018, LECT NOTES COMPUT SC, V11233, P96, DOI 10.1007/978-3-030-02922-7_7
   Zhou Yan, 2012, KDD, P1059
NR 94
TC 5
Z9 6
U1 3
U2 18
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 26
DI 10.1007/s10664-021-10064-8
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XF3VG
UT WOS:000724001300001
DA 2024-07-18
ER

PT J
AU Cogo, FR
   Oliva, GA
   Bezemer, CP
   Hassan, AE
AF Cogo, Filipe R.
   Oliva, Gustavo A.
   Bezemer, Cor-Paul
   Hassan, Ahmed E.
TI An empirical study of same-day releases of popular packages in the npm
   ecosystem
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software ecosystem; Release management; Same-day release; Dependencies
ID SOFTWARE; MANAGEMENT
AB Within a software ecosystem, client packages can reuse provider packages as third-party libraries. The reuse relation between client and provider packages is called a dependency. When a client package depends on the code of a provider package, every change that is introduced in a release of the provider has the potential to impact the client package. Since a large number of dependencies exist within a software ecosystem, releases of a popular provider package can impact a large number of clients. Occasionally, multiple releases of a popular package need to be published on the same day, leading to a scenario in which the time available to revise, test, build, and document the release is restricted compared to releases published within a regular schedule. In this paper, our objective is to study the same-day releases that are published by popular packages in the npm ecosystem. We design an exploratory study to characterize the type of changes that are introduced in same-day releases, the prevalence of same-day releases in the npm ecosystem, and the adoption of same-day releases by client packages. A preliminary manual analysis of the existing release notes suggests that same-day releases introduce non-trivial changes (e.g., bug fixes). We then focus on three RQs. First, we study how often same-day releases are published. We found that the median proportion of regularly scheduled releases that are interrupted by a same-day release (per popular package) is 22%, suggesting the importance of having timely and systematic procedures to cope with same-day releases. Second, we study the performed code changes in same-day releases. We observe that 32% of the same-day releases have larger changes compared with their prior release, thus showing that some same-day releases can undergo significant maintenance activity despite their time-constrained nature. In our third RQ, we study how client packages react to same-day releases of their providers. We observe the vast majority of client packages that adopt the release preceding the same-day release would also adopt the latter without having to change their versioning statement (implicit updates). We also note that explicit adoptions of same-day releases (i.e., adoptions that require a change to the versioning statement of the provider in question) is significantly faster than the explicit adoption of regular releases. Based on our findings, we argue that (i) third-party tools that support the automation of dependency management (e.g., Dependabot) should consider explicitly flagging same-day releases, (ii) popular packages should strive for optimized release pipelines that can properly handle same-day releases, and (iii) future research should design scalable, ecosystem-ready tools that support provider packages in assessing the impact of their code changes on client packages.
C1 [Cogo, Filipe R.] Huawei Canada, Ctr Software Excellence CSE, Kingston, ON K7L 2V7, Canada.
   [Oliva, Gustavo A.; Hassan, Ahmed E.] Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
   [Bezemer, Cor-Paul] Univ Alberta, Analyt Software GAmes & Repository Data ASGAARD, Lab Dept Elect & Comp Engn, Edmonton, AB, Canada.
C3 Huawei Technologies; Queens University - Canada; University of Alberta
RP Cogo, FR (corresponding author), Huawei Canada, Ctr Software Excellence CSE, Kingston, ON K7L 2V7, Canada.; Oliva, GA (corresponding author), Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
EM filipe.roseiro.cogo1@huawei.com; gustavo@cs.queensu.ca;
   bezemer@ualberta.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Bezemer,
   Cor-Paul/0000-0002-0474-5718; Cogo, Filipe/0000-0002-5494-685X
CR Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   Adams B, 2015, IEEE SOFTWARE, V32, P41
   [Anonymous], 2003, P 3 WORKSH OP SOURC
   Arnold Robert S., 1996, SOFTWARE CHANGE IMPA
   BAUER DF, 1972, J AM STAT ASSOC, V67, P687, DOI 10.2307/2284469
   Castelluccio M, 2019, EMPIR SOFTW ENG, V24, P3008, DOI 10.1007/s10664-018-9665-y
   Chen LC, 2020, PROC INT CONF SOFTW, P112, DOI 10.1145/3377811.3380436
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Cox J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P109, DOI 10.1109/ICSE.2015.140
   Czerwonka Jacek, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P357, DOI 10.1109/ICST.2011.24
   Decan A, 2021, IEEE T SOFTWARE ENG, V47, P1226, DOI 10.1109/TSE.2019.2918315
   Decan A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P2, DOI 10.1109/SANER.2017.7884604
   Eski S., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P566, DOI 10.1109/ICSTW.2011.43
   Fox A., 2002, Proceedings of the Twenty-eighth International Conference on Very Large Data Bases, P873
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   HAMILTON J, 2007, P 21 LARG INST SYST
   Hassan S, 2017, EMPIR SOFTW ENG, V22, P505, DOI 10.1007/s10664-016-9435-7
   Jaspan C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P225, DOI 10.1145/3183519.3183550
   Kajko-Mattsson M, 2005, J INTEGR DES PROCESS, V9, P13
   Kerzazi N, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P574, DOI 10.1109/SANER.2016.114
   Kikas R, 2017, IEEE WORK CONF MIN S, P102, DOI 10.1109/MSR.2017.55
   Lahtela A., 2011, Proceedings 2011 IEEE 2nd International Conference on Software Engineering and Service Science (ICSESS 2011), P10, DOI 10.1109/ICSESS.2011.5982242
   Lex A, 2014, IEEE T VIS COMPUT GR, V20, P1983, DOI 10.1109/TVCG.2014.2346248
   Lin D, 2017, EMPIR SOFTW ENG, V22, P2095, DOI 10.1007/s10664-016-9480-2
   Louis M, 2014, DESIGNING CONDUCTING
   Mäntylä MV, 2015, EMPIR SOFTW ENG, V20, P1384, DOI 10.1007/s10664-014-9338-4
   Mezzetti G., 2018, 32 EUR C OBJ OR PROG
   Moreno L, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P484, DOI 10.1145/2635868.2635870
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Mujahid S, 2020, IEEE WORK CONF MIN S, P466, DOI 10.1145/3379597.3387476
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nierstrasz O., 2014, P 2014 EUR C SOFTW A
   Romano J., 2006, ANN M FLORIDA ASS IN
   Ruhe G., 2014, P 8 ACM IEEE INT S E
   Schober P, 2018, ANESTH ANALG, V126, P1763, DOI 10.1213/ANE.0000000000002864
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   van der Hoek A, 2003, SOFTWARE PRACT EXPER, V33, P77, DOI 10.1002/spe.496
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
   Zerouali A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2157
NR 39
TC 6
Z9 7
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 89
DI 10.1007/s10664-021-09980-6
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TD4NU
UT WOS:000669306000001
DA 2024-07-18
ER

PT J
AU Olsson, J
   Risfelt, E
   Besker, T
   Martini, A
   Torkar, R
AF Olsson, Jesper
   Risfelt, Erik
   Besker, Terese
   Martini, Antonio
   Torkar, Richard
TI Measuring affective states from technical debt A psychoempirical
   software engineering experiment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Technical Debt; Affective States; Software Development; Psychoempirical
   Software Engineering; Empirical Study; Bayesian statistical analysis
ID SELF-ASSESSMENT MANNEQUIN; MEDICAL STATISTICS; R PACKAGE;
   IDENTIFICATION; DEVELOPERS; PSYCHOLOGY; MODELS
AB Context Software engineering is a human activity. Despite this, human aspects are under-represented in technical debt research, perhaps because they are challenging to evaluate. Objective This study's objective was to investigate the relationship between technical debt and affective states (feelings, emotions, and moods) from software practitioners. Method Forty participants (N = 40) from twelve companies took part in a mixed-methods approach, consisting of a repeated-measures (r = 5) experiment (n = 200), a survey, and semi-structured interviews. From the qualitative data, it is clear that technical debt activates a substantial portion of the emotional spectrum and is psychologically taxing. Further, the practitioners' reactions to technical debt appear to fall in different levels of maturity. Results The statistical analysis shows that different design smells (strong indicators of technical debt) negatively or positively impact affective states. Conclusions We argue that human aspects in technical debt are important factors to consider, as they may result in, e.g., procrastination, apprehension, and burnout.
C1 [Olsson, Jesper; Risfelt, Erik; Besker, Terese; Torkar, Richard] Chalmers & Univ Gothenburg, Dept Comp Sci & Engn, S-41296 Gothenburg, Sweden.
   [Martini, Antonio] Univ Oslo, Dept Informat, N-0373 Oslo, Norway.
   [Torkar, Richard] Stellenbosch Univ, Stellenbosch Inst Adv Study STIAS, Wallenberg Res Ctr, Stellenbosch, South Africa.
C3 Chalmers University of Technology; University of Oslo; Stellenbosch
   University
RP Olsson, J (corresponding author), Chalmers & Univ Gothenburg, Dept Comp Sci & Engn, S-41296 Gothenburg, Sweden.
EM research@jesperolsson.se
OI Olsson, Jesper/0000-0002-0062-541X; Besker, Terese/0000-0002-9811-000X
FU Swedish Research Council [2018-05973]
FX We want to thank all the participating companies, the individual
   participants in our study, and all the students who participated in our
   pilot studies. The computations were enabled by resources provided by
   the Swedish National Infrastructure for Computing (SNIC), partially
   funded by the Swedish Research Council through grant agreement no.
   2018-05973.
CR Al-Mutawa HA, 2013, IEEE AUS SOFT ENGR, P48, DOI 10.1109/ASWEC.2014.15
   Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   [Anonymous], 2012, EXPT SOFTWARE ENG
   Avgeriou P., 2016, DAGSTUHL REP, DOI 10.4230/DagRep.6.4.110
   Besker T, 2020, J SYST SOFTWARE, V167, DOI 10.1016/j.jss.2020.110586
   Besker T, 2019, J SYST SOFTWARE, V156, P41, DOI 10.1016/j.jss.2019.06.004
   Besker T, 2018, PROC IEEE INT CONF S, P415, DOI 10.1109/ICSME.2018.00051
   Besker T, 2018, J SYST SOFTWARE, V135, P1, DOI 10.1016/j.jss.2017.09.025
   Besker T, 2017, PROC IEEE INT CONF S, P13, DOI 10.1109/ICSME.2017.42
   Betella A, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0148037
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   BRADLEY MM, 1994, J BEHAV THER EXP PSY, V25, P49, DOI 10.1016/0005-7916(94)90063-9
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Bürkner PC, 2019, ADV METH PRACT PSYCH, V2, P77, DOI 10.1177/2515245918823199
   Bürkner PC, 2018, R J, V10, P395
   Bürkner PC, 2017, J STAT SOFTW, V80, P1, DOI 10.18637/jss.v080.i01
   Colomo-Palacios R, 2010, COMM COM INF SC, V112, P1
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Fagerholm F, 2015, INFORM SOFTWARE TECH, V64, P132, DOI 10.1016/j.infsof.2015.01.010
   Feldt R, 2010, INFORM SOFTWARE TECH, V52, P611, DOI 10.1016/j.infsof.2010.01.001
   Fernández-Sánchez C, 2017, J SYST SOFTWARE, V124, P22, DOI 10.1016/j.jss.2016.10.018
   Fontana FA, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P282, DOI 10.1109/ICSAW.2017.16
   Furia CA, 2021, IEEE T SOFTWARE ENG, V47, P1786, DOI 10.1109/TSE.2019.2935974
   Ganesh SG, 2013, J OBJECT TECHNOL, V12, DOI 10.5381/jot.2013.12.2.a1
   Garcia J, 2009, LECT NOTES COMPUT SC, V5581, P146, DOI 10.1007/978-3-642-02351-4_10
   Gelman A, 2000, COMPUTATION STAT, V15, P373, DOI 10.1007/s001800000040
   Gelman A, 2018, PERS SOC PSYCHOL B, V44, P16, DOI 10.1177/0146167217729162
   Gelman A, 2012, J RES EDUC EFF, V5, P189, DOI 10.1080/19345747.2011.618213
   Goodman SN, 1999, ANN INTERN MED, V130, P1005, DOI 10.7326/0003-4819-130-12-199906150-00019
   Goodman SN, 1999, ANN INTERN MED, V130, P995, DOI 10.7326/0003-4819-130-12-199906150-00008
   Graziotin D., 2017, P 21 INT C EVALUATIO, P324, DOI [DOI 10.1145/3084226.3084242, 10.1145/3084226.3084242]
   Graziotin D, 2018, J SYST SOFTWARE, V140, P32, DOI 10.1016/j.jss.2018.02.041
   Graziotin D, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P25, DOI 10.1145/2804381.2804386
   Graziotin D, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P123, DOI 10.1109/CHASE.2015.23
   Graziotin D, 2015, J SOFTW-EVOL PROC, V27, P467, DOI 10.1002/smr.1673
   Graziotin D, 2014, PEERJ, V2, DOI 10.7717/peerj.289
   Gren L, 2017, J SYST SOFTWARE, V124, P104, DOI 10.1016/j.jss.2016.11.024
   Inglehart R, 2010, PERSPECT POLIT, V8, P551, DOI 10.1017/S1537592710001258
   Khan IA, 2011, COGN TECHNOL WORK, V13, P245, DOI 10.1007/s10111-010-0164-1
   Kruschke JK, 2010, TRENDS COGN SCI, V14, P293, DOI 10.1016/j.tics.2010.05.001
   Lang P. J., 1980, TECHNOLOGY MENTAL HL, P119, DOI DOI 10.1111/J.1469-8986.1993.TB03352.X
   Lang P. J., 1997, NIMH CTR STUDY EMOTI, V1, P39
   Leek J, 2017, NATURE, V551, P557
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Martini A, 2018, LECT NOTES COMPUT SC, V11048, P320, DOI 10.1007/978-3-030-00761-4_21
   Martini A, 2018, SCI COMPUT PROGRAM, V163, P42, DOI 10.1016/j.scico.2018.03.007
   Martini A, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1877
   Miller J, 2008, EMPIR SOFTW ENG, V13, P223, DOI 10.1007/s10664-008-9063-y
   Morris JD, 2002, J ADVERTISING RES, V42, P7, DOI 10.2501/JAR-42-3-7-17
   Morris JD, 1995, J ADVERTISING RES, V35, P63
   Peterson C, 2008, APPL PSYCHOL-INT REV, V57, P19, DOI 10.1111/j.1464-0597.2008.00352.x
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   RUSSELL JA, 1977, J RES PERS, V11, P273, DOI 10.1016/0092-6566(77)90037-X
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Spínola RO, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P1, DOI 10.1109/MTD.2013.6608671
   Stan Development Team, 2020, RStan: the R interface to Stan
   Suryanarayana G., 2014, Refactoring for Software Design Smells: Managing Technical Debt
   Tamburri DA, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P93, DOI 10.1109/CHASE.2013.6614739
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Vehtari A, 2017, STAT COMPUT, V27, P1413, DOI 10.1007/s11222-016-9696-4
   Weller SC, 2018, PLOS ONE, V13, DOI 10.1371/journal.pone.0198606
   Yli-Huumo J, 2014, LECT NOTES COMPUT SC, V8892, P93, DOI 10.1007/978-3-319-13835-0_7
   Yuepu Guo, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P528, DOI 10.1109/ICSM.2011.6080824
NR 71
TC 2
Z9 2
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 105
DI 10.1007/s10664-021-09998-w
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA UJ9JA
UT WOS:000691592800002
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Santos, A
   Vegas, S
   Dieste, O
   Uyaguari, F
   Tosun, A
   Fucci, D
   Turhan, B
   Scanniello, G
   Romano, S
   Karac, I
   Kuhrmann, M
   Mandic, V
   Ramac, R
   Pfahl, D
   Engblom, C
   Kyykka, J
   Rungi, K
   Palomeque, C
   Spisak, J
   Oivo, M
   Juristo, N
AF Santos, Adrian
   Vegas, Sira
   Dieste, Oscar
   Uyaguari, Fernando
   Tosun, Ayse
   Fucci, Davide
   Turhan, Burak
   Scanniello, Giuseppe
   Romano, Simone
   Karac, Itir
   Kuhrmann, Marco
   Mandic, Vladimir
   Ramac, Robert
   Pfahl, Dietmar
   Engblom, Christian
   Kyykka, Jarno
   Rungi, Kerli
   Palomeque, Carolina
   Spisak, Jaroslav
   Oivo, Markku
   Juristo, Natalia
TI A family of experiments on test-driven development
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Family of experiments; Test-driven development; Industry; Academia;
   Quality
ID INDIVIDUAL PARTICIPANT DATA; EXTERNAL QUALITY; METAANALYSIS;
   PRODUCTIVITY
AB Context: Test-driven development (TDD) is an agile software development approach that has been widely claimed to improve software quality. However, the extent to which TDD improves quality appears to be largely dependent upon the characteristics of the study in which it is evaluated (e.g., the research method, participant type, programming environment, etc.). The particularities of each study make the aggregation of results untenable. Objectives: The goal of this paper is to: increase the accuracy and generalizability of the results achieved in isolated experiments on TDD, provide joint conclusions on the performance of TDD across different industrial and academic settings, and assess the extent to which the characteristics of the experiments affect the quality-related performance of TDD. Method: We conduct a family of 12 experiments on TDD in academia and industry. We aggregate their results by means of meta-analysis. We perform exploratory analyses to identify variables impacting the quality-related performance of TDD. Results: TDD novices achieve a slightly higher code quality with iterative test-last development (i.e., ITL, the reverse approach of TDD) than with TDD. The task being developed largely determines quality. The programming environment, the order in which TDD and ITL are applied, or the learning effects from one development approach to another do not appear to affect quality. The quality-related performance of professionals using TDD drops more than for students. We hypothesize that this may be due to their being more resistant to change and potentially less motivated than students. Conclusion: Previous studies seem to provide conflicting results on TDD performance (i.e., positive vs. negative, respectively). We hypothesize that these conflicting results may be due to different study durations, experiment participants being unfamiliar with the TDD process, or case studies comparing the performance achieved by TDD vs. the control approach (e.g., the waterfall model), each applied to develop a different system. Further experiments with TDD experts are needed to validate these hypotheses.
C1 [Santos, Adrian; Turhan, Burak; Karac, Itir; Oivo, Markku] Univ Oulu, Oulu, Finland.
   [Vegas, Sira; Dieste, Oscar; Juristo, Natalia] Univ Politecn Madrid, Madrid, Spain.
   [Uyaguari, Fernando; Palomeque, Carolina] ETAPA, Cuenca, Ecuador.
   [Tosun, Ayse] Istanbul Tech Univ, Istanbul, Turkey.
   [Fucci, Davide] Blekinge Inst Technol, Karlskrona, Sweden.
   [Scanniello, Giuseppe] Univ Basilicata, Potenza, Italy.
   [Romano, Simone] Univ Bari, Bari, Italy.
   [Kuhrmann, Marco] Univ Passau, Passau, Germany.
   [Mandic, Vladimir; Ramac, Robert] Univ Novi Sad, Novi Sad, Serbia.
   [Pfahl, Dietmar] Univ Tartu, Tartu, Estonia.
   [Engblom, Christian; Kyykka, Jarno] Ericsson, Jorvas, Finland.
   [Rungi, Kerli] Testlio, Tartu, Estonia.
   [Spisak, Jaroslav] Paf, Helsinki, Finland.
C3 University of Oulu; Universidad Politecnica de Madrid; Istanbul
   Technical University; Blekinge Institute Technology; University of
   Basilicata; Universita degli Studi di Bari Aldo Moro; University of
   Passau; University of Novi Sad; University of Tartu; Ericsson
RP Vegas, S (corresponding author), Univ Politecn Madrid, Madrid, Spain.
EM adrian.santos.parrilla@oulu.fi; svegas@fi.upm.es; odieste@fi.upm.es;
   fuyaguar@etapa.net.ec; tosunay@itu.edu.tr; davide.fucci@bth.se;
   burak.turhan@oulu.fi; giuseppe.scanniello@unibas.it;
   simone.romano@uniba.it; itir.karac@oulu.fi; kuhrmann@fim.uni-passau.de;
   vladman@uns.ac.rs; ramac.robert@uns.ac.rs; dietmar.pfahl@ut.ee;
   cpalomeq@etapa.net.ec; markku.oivo@oulu.fi; natalia@fi.upm.es
RI Mandic, Vladimir/I-6306-2019; Fucci, Davide/C-1463-2015; Pfahl, Dietmar
   Alfred Paul Kurt/H-3084-2015; Turhan, Burak/G-7400-2011; Dieste,
   Oscar/K-6193-2014; Tosun, Ayse/B-4794-2014; Romano,
   Simone/JVZ-6529-2024; VEGAS, SIRA/R-6742-2018
OI Mandic, Vladimir/0000-0001-6996-2222; Fucci, Davide/0000-0002-0679-4361;
   Pfahl, Dietmar Alfred Paul Kurt/0000-0003-2400-501X; Turhan,
   Burak/0000-0003-1511-2163; Dieste, Oscar/0000-0002-3060-7853; Tosun,
   Ayse/0000-0003-1859-7872; VEGAS, SIRA/0000-0001-8535-9386; Romano,
   Simone/0000-0003-4880-3622
FU FEDER/Spanish Ministry of Science and Innovation-Research State Agency
   [PGC2018-097265-B-I00]
FX This research was developed with the support of project
   PGC2018-097265-B-I00, funded by: FEDER/Spanish Ministry of Science and
   Innovation-Research State Agency. We would like to thank the
   participants in the ESEIL experiments: this research would not have been
   possible without your help. We would also like to thank the anonymous
   reviewers for their valuable comments during the review of the
   manuscript.
CR [Anonymous], 2011, ISOIEC 250102011
   [Anonymous], 2002, Pair Programming Illuminated
   Astels Dave, 2003, Test-Driven Development: A Practical Guide
   Basili V.R., 1992, Software Modeling and Measurement: The Goal/Question/Metric Paradigm
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Beck Kent L., 2003, Test Driven Development By Example
   Bergersen G, 2018, ARXIV 181010791
   Bergersen GR, 2014, IEEE T SOFTWARE ENG, V40, P1163, DOI 10.1109/TSE.2014.2348997
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   Bissi W, 2016, INFORM SOFTWARE TECH, V74, P45, DOI 10.1016/j.infsof.2016.02.004
   Borenstein M., 2009, INTRO METAANALYSIS
   Brown H., 2014, Applied Mixed Models in Medicine
   Causevic A., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P337, DOI 10.1109/ICST.2011.19
   Cooper H, 2009, PSYCHOL METHODS, V14, P165, DOI 10.1037/a0015565
   Cumming G, 2014, PSYCHOL SCI, V25, P7, DOI 10.1177/0956797613504966
   de Winter J, 2013, PRACTICAL ASSESSMENT, V18, P12, DOI DOI 10.7275/E4R6-DJ05
   Diehl S, 2018, ARXIV180706087
   Dieste O, 2017, EMPIR SOFTW ENG, V22, P2457, DOI 10.1007/s10664-016-9471-3
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Feigenspan J., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P73
   Field A., 2013, DISCOVERING STAT USI
   Fisher DJ, 2011, J CLIN EPIDEMIOL, V64, P949, DOI 10.1016/j.jclinepi.2010.11.016
   Fucci D, 2017, IEEE T SOFTWARE ENG, V43, P597, DOI 10.1109/TSE.2016.2616877
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Gurevitch J, 2018, NATURE, V555, P175, DOI 10.1038/nature25753
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Higgins JP., 2008, Cochrane Handbook for Systematic Reviews of Interventions, P151, DOI DOI 10.1002/9780470712184.CH7
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Jung Jessica, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P223, DOI 10.1109/ESEM.2013.59
   Juristo N., 2013, BASICS SOFTWARE ENG
   Juristo N, IEEE T SOFTWARE ENG
   Juristo N, 2019, IEEE T SOFTWARE ENG
   Juristo N, 2009, INT SYMP EMP SOFTWAR, P357
   Karac I, 2018, IEEE SOFTWARE, V35, P81, DOI 10.1109/MS.2018.2801554
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   Kollanus S, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P403, DOI 10.1109/QUATIC.2010.73
   Kruger J, 1999, J PERS SOC PSYCHOL, V77, P1121, DOI 10.1037/0022-3514.77.6.1121
   Lau J, 1998, LANCET, V351, P123, DOI 10.1016/S0140-6736(97)08468-7
   Lumley T, 2002, ANNU REV PUBL HEALTH, V23, P151, DOI 10.1146/annurev.publhealth.23.100901.140546
   Mäkinen S, 2014, LECT NOTES BUS INF P, V166, P155
   Martin C., 2001, ADV PRINCIPLES PATTE
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Myers Glenford J., 2011, The Art of Software Testing
   Norman G, 2010, ADV HEALTH SCI EDUC, V15, P625, DOI 10.1007/s10459-010-9222-y
   Offutt J, 2018, SOFTW TEST VERIF REL, V28, DOI 10.1002/stvr.1670
   Quinn G, 2002, EXPT DESIGN DATA ANA
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   Riley RD, 2010, BMJ-BRIT MED J, V340, DOI 10.1136/bmj.c221
   Rosenthal R., 1991, METAANALYTIC PROCEDU
   Santos A., 2018, IEEE T SOFTWARE ENG
   Santos A, 2018, LECT NOTES COMPUT SC, V11271, P227, DOI 10.1007/978-3-030-03673-7_17
   Santos A, 2020, IEEE T SOFTWARE ENG, V46, P566, DOI 10.1109/TSE.2018.2864633
   Schmider E, 2010, METHODOLOGY-EUR, V6, P147, DOI 10.1027/1614-2241/a000016
   Shull F, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.152
   Thorlund K, 2012, PLOS ONE, V7, DOI 10.1371/journal.pone.0039471
   Tosun A, 2017, EMPIR SOFTW ENG, V22, P2763, DOI 10.1007/s10664-016-9490-0
   Vegas S, 2015, IEEE-ACM INT WKSP CO, P3, DOI 10.1109/CESI.2015.8
   Vickers Andrew J, 2005, BMC Med Res Methodol, V5, P35, DOI 10.1186/1471-2288-5-35
NR 58
TC 9
Z9 10
U1 5
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2021
VL 26
IS 3
AR 42
DI 10.1007/s10664-020-09895-8
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA RB4BR
UT WOS:000632058500001
DA 2024-07-18
ER

PT J
AU Catolino, G
   Palomba, F
   Fontana, FA
   De Lucia, A
   Zaidman, A
   Ferrucci, F
AF Catolino, Gemma
   Palomba, Fabio
   Fontana, Francesca Arcelli
   De Lucia, Andrea
   Zaidman, Andy
   Ferrucci, Filomena
TI Improving change prediction models with code smell-related information
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Change prediction; Code smells; Empirical study
ID METRIC THRESHOLDS; RESEARCHER BIAS; SOFTWARE; IMPACT; QUALITY;
   VALIDATION; CHALLENGES; WHETHER; BAD
AB Code smells are sub-optimal implementation choices applied by developers that have the effect of negatively impacting, among others, the change-proneness of the affected classes. Based on this consideration, in this paper we conjecture that code smell-related information can be effectively exploited to improve the performance of change prediction models, i.e., models having the goal of indicating which classes are more likely to change in the future. We exploit the so-called intensity index-a previously defined metric that captures the severity of a code smell-and evaluate its contribution when added as additional feature in the context of three state of the art change prediction models based on product, process, and developer-based features. We also compare the performance achieved by the proposed model with a model based on previously defined antipattern metrics, a set of indicators computed considering the history of code smells in files. Our results report that (i) the prediction performance of the intensity-including models is statistically better than the baselines and, (ii) the intensity is a better predictor than antipattern metrics. We observed some orthogonality between the set of change-prone and non-change-prone classes correctly classified by the models relying on intensity and antipattern metrics: for this reason, we also devise and evaluate a smell-aware combined change prediction model including product, process, developer-based, and smell-related features. We show that the F-Measure of this model is notably higher than other models.
C1 [Catolino, Gemma; De Lucia, Andrea; Ferrucci, Filomena] Univ Salerno, Fisciano, Italy.
   [Palomba, Fabio] Univ Zurich, Zurich, Switzerland.
   [Fontana, Francesca Arcelli] Univ Milan, Bicocca, Milan, Italy.
   [Zaidman, Andy] Delft Univ Technol, Delft, Netherlands.
C3 University of Salerno; University of Zurich; University of Milan; Delft
   University of Technology
RP Catolino, G (corresponding author), Univ Salerno, Fisciano, Italy.
EM gcatolino@unisa.it
RI De Lucia, Andrea/AAG-6781-2020; Catolino, Gemma/AAD-3209-2020
OI Catolino, Gemma/0000-0002-4689-3401; FERRUCCI,
   Filomena/0000-0002-0975-8972; Palomba, Fabio/0000-0001-9337-5116
FU Swiss National Science Foundation (SNSF) [PP00P2_170529]; Swiss National
   Science Foundation (SNF) [PP00P2_170529] Funding Source: Swiss National
   Science Foundation (SNF)
FX The authors would like to thank the anonymous reviewers for the detailed
   and constructive comments on the preliminary version of this paper,
   which were instrumental to improving the quality of the work. Fabio
   Palomba was partially supported by the Swiss National Science Foundation
   (SNSF) through the Project no. PP00P2_170529.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Abdi MK, 2006, EUROMICRO CONF PROC, P310, DOI 10.1109/EUROMICRO.2006.20
   Ah-Rim Han, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P76, DOI 10.1109/COMPSAC.2008.80
   Ammerlaan E, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P504, DOI 10.1109/SANER.2015.7081865
   Aniche M, 2016, IEEE INT WORK C SO, P41, DOI 10.1109/SCAM.2016.19
   [Anonymous], 2018, EMPIR SOFTW ENG
   [Anonymous], 1995, 11 C UNC ART INT SAN, DOI DOI 10.1109/TGRS.2004.834800
   [Anonymous], 2010, 2010 IEEE International Conference on Software Maintenance, DOI [10.1109/ICSM.2010.5609564, DOI 10.1109/ICSM.2010.5609564]
   [Anonymous], 2016, 2016 IEEE 24th International Conference on Program Comprehension (ICPC)
   [Anonymous], 2014, P 5 INT WORKSH EM TR
   [Anonymous], 2017, ACM SIGSOFT SOFTWARE
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Baeza-Yates R., 1999, Modern information retrieval
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Bell RM, 2013, EMPIR SOFTW ENG, V18, P478, DOI 10.1007/s10664-011-9178-4
   Beller M, 2017, TRAVISTORRENT SYNTHE
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   Bieman JM, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P40, DOI 10.1109/METRIC.2003.1232454
   BOTTOU L, 1992, NEURAL COMPUT, V4, P888, DOI 10.1162/neco.1992.4.6.888
   Boussaa Mohamed, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P50, DOI 10.1007/978-3-642-39742-4_6
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Catolino G, 2018, IMPROVING CHANGE PRE
   Catolino G, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2156
   Catolino G, 2018, J SYST SOFTWARE, V143, P14, DOI 10.1016/j.jss.2018.05.003
   Catolino G, 2018, 2018 IEEE WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE), P25, DOI 10.1109/MALTESQUE.2018.8368455
   D'Ambros Marco, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P23, DOI 10.1109/QSIC.2010.58
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Di Penta M, 2008, PROC IEEE INT CONF S, P217, DOI 10.1109/ICSM.2008.4658070
   Eisenlohr PV, 2014, BRAZ J BOT, V37, P365, DOI 10.1007/s40415-014-0064-3
   Elish MO, 2013, J SOFTW-EVOL PROC, V25, P407, DOI 10.1002/smr.1549
   Eski S., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P566, DOI 10.1109/ICSTW.2011.43
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2017, KNOWL-BASED SYST, V128, P43, DOI 10.1016/j.knosys.2017.04.014
   Fontana FA, 2015, INT WORKS EMERG TREN, P44, DOI 10.1109/WETSoM.2015.14
   Fontana FA, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P609, DOI 10.1109/SANER.2016.84
   Fontana FA, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P16, DOI 10.1109/MTD.2015.7332620
   Fontana FA, 2013, PROC IEEE INT CONF S, P396, DOI 10.1109/ICSM.2013.56
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Fregnan E, 2018, INFORM SOFTWARE TECH
   Freund Y, 1999, MACHINE LEARNING, PROCEEDINGS, P124
   Gatrell M, 2015, SCI COMPUT PROGRAM, V102, P44, DOI 10.1016/j.scico.2014.12.002
   Girba T, 2004, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2004.1357788
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall T, 2011, IEEE SOFTWARE, V28, P96, DOI 10.1109/MS.2011.138
   Han AR, 2010, J SYST SOFTWARE, V83, P222, DOI 10.1016/j.jss.2009.09.038
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herbold S, 2017, IEEE T SOFTWARE ENG, V43, P1091, DOI 10.1109/TSE.2017.2748129
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kennedy J, 1995, 1995 IEEE INTERNATIONAL CONFERENCE ON NEURAL NETWORKS PROCEEDINGS, VOLS 1-6, P1942, DOI 10.1109/icnn.1995.488968
   Kessentini M., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P113
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Kohavi R, 1995, LECT NOTES ARTIF INT, V912, P174
   Kumar L, 2017, PROCEEDINGS OF THE 10TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, P4, DOI 10.1145/3021460.3021461
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   LECESSIE S, 1992, APPL STAT-J ROY ST C, V41, P191
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Lu HM, 2012, EMPIR SOFTW ENG, V17, P200, DOI 10.1007/s10664-011-9170-z
   Malhotra Ruchika, 2015, 2015 4th International Conference on Reliability, Infocom Technologies and Optimization (ICRITO) (Trends and Future Directions), P1, DOI 10.1109/ICRITO.2015.7359253
   Malhotra R, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P311, DOI 10.1145/3067695.3076007
   Malhotra R, 2013, INT J MACH LEARN CYB, V4, P273, DOI 10.1007/s13042-012-0095-7
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Marinescu C, 2014, INT SYMP SYMB NUMERI, P544, DOI 10.1109/SYNASC.2014.78
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Marinescu R, 2012, IBM J RES DEV, V56, DOI 10.1147/JRD.2012.2204512
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Mkaouer MW, 2014, LECT NOTES COMPUT SC, V8636, P168
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Morales R, 2016, J SYSTEMS SOFTWARE J
   Munro MJ, 2005, 2005 11th International Symposium on Software Metrics (METRICS), P124
   Murphy-Hill E, 2010, SOFTVIS 2010: PROCEEDINGS OF THE 2010 INTERNATIONAL SYMPOSIUM ON SOFTWARE VISUALIZATION, P5
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Oliveto R, 2010, EUR CON SFTWR MTNCE, P248, DOI 10.1109/CSMR.2010.47
   Palomba F, 2018, IEEE T SOFTWARE ENG
   Palomba F, 2019, EMPIRICAL SOFTWARE E
   Palomba F, 2019, IEEE T SOFTWARE ENG, V45, P194, DOI 10.1109/TSE.2017.2770122
   Palomba F, 2018, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSME.2018.00040
   Palomba F, 2018, IEEE T SOFTWARE ENG, V44, P977, DOI 10.1109/TSE.2017.2752171
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2018, INFORM SOFTWARE TECH, V99, P1, DOI 10.1016/j.infsof.2018.02.004
   Palomba F, 2017, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2017.12
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Palomba F, 2014, ADV COMPUT, V95, P201, DOI 10.1016/B978-0-12-800160-8.00004-8
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Pascarella L, 2019, J SYSTEMS SOFTWARE
   Peer A, 2013, 2013 INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATIONS AND INFORMATICS (ICACCI), P2026, DOI 10.1109/ICACCI.2013.6637493
   Peng CYJ, 2002, J EDUC RES, V96, P3, DOI 10.1080/00220670209598786
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Romano D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P303, DOI 10.1109/ICSM.2011.6080797
   Rosenblatt F., 1961, PRINCIPLES NEURODYNA
   Rumbaugh J., 2004, UNIFIED MODELING LAN, V2nd
   Sahin D, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2675067
   SCHWARTZ J, 1988, J PEDIATR-US, V112, P12, DOI 10.1016/S0022-3476(88)80111-2
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sharafat Ali R., 2008, Journal of Software, V3, P26, DOI 10.4304/jsw.3.5.26-39
   Sharafat AR, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P27
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shihab Emad., 2010, P 2010 ACM IEEE INT, P4
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Soetens QD, 2015, 14TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE 2015), P9, DOI 10.1145/2804360.2804362
   Soetens QD, 2016, EMPIR SOFTW ENG, V21, P1990, DOI 10.1007/s10664-015-9405-5
   Spadini D, 2018, RELATION TEST SMELLS
   Spinellis D, 2005, IEEE SOFTWARE, V22, P9, DOI 10.1109/MS.2005.111
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   Taba SES, 2013, PROC IEEE INT CONF S, P270, DOI 10.1109/ICSM.2013.38
   Taibi D, 2017, INFORM SOFTWARE TECH, V92, P223, DOI 10.1016/j.infsof.2017.08.008
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Theodoridis S., 2008, IEEE Transactions on Neural Networks, V19, P376, DOI DOI 10.1109/TNN.2008.929642
   Tsantalis N, 2005, IEEE T SOFTWARE ENG, V31, P601, DOI 10.1109/TSE.2005.83
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Vassallo C, 2018, PROC IEEE INT CONF S, P564, DOI 10.1109/ICSME.2018.00068
   Vassallo C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P38, DOI 10.1109/SANER.2018.8330195
   Vidal S., 2016, P 31 ANN ACM S APPL, P1812, DOI [10.1145/2851613.2851941, DOI 10.1145/2851613.2851941]
   Vidal SA, 2016, AUTOMAT SOFTW ENG, V23, P501, DOI 10.1007/s10515-014-0175-x
   Vonken F., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P29, DOI 10.1109/WCRE.2012.13
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Yu C.H., 2000, P 2000 W USERS SAS S, P196
   Zhao L, 2011, INNOV SYST SOFTW ENG, V7, P171, DOI 10.1007/s11334-011-0154-3
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
   Zogaan W, 2017, INT REQUIR ENG CONF, P110, DOI 10.1109/RE.2017.80
NR 150
TC 23
Z9 24
U1 1
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 49
EP 95
DI 10.1007/s10664-019-09739-0
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP0WS
UT WOS:000515965100002
OA Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Li, H
   Chen, TH
   Shang, WY
   Hassan, AE
AF Li, Heng
   Chen, Tse-Hsun (Peter)
   Shang, Weiyi
   Hassan, Ahmed E.
TI Studying software logging using topic models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software logging; Topic model; Mining software repositories
ID REGULARIZATION PATHS; INFORMATION; EXECUTION; SELECTION; EVOLUTION
AB Software developers insert logging statements in their source code to record important runtime information; such logged information is valuable for understanding system usage in production and debugging system failures. However, providing proper logging statements remains a manual and challenging task. Missing an important logging statement may increase the difficulty of debugging a system failure, while too much logging can increase system overhead and mask the truly important information. Intuitively, the actual functionality of a software component is one of the major drivers behind logging decisions. For instance, a method maintaining network communications is more likely to be logged than getters and setters. In this paper, we used automatically-computed topics of a code snippet to approximate the functionality of a code snippet. We studied the relationship between the topics of a code snippet and the likelihood of a code snippet being logged (i.e., to contain a logging statement). Our driving intuition is that certain topics in the source code are more likely to be logged than others. To validate our intuition, we conducted a case study on six open source systems, and we found that i) there exists a small number of "log-intensive" topics that are more likely to be logged than other topics; ii) each pair of the studied systems share 12% to 62% common topics, and the likelihood of logging such common topics has a statistically significant correlation of 0.35 to 0.62 among all the studied systems; and iii) our topic-based metrics help explain the likelihood of a code snippet being logged, providing an improvement of 3% to 13% on AUC and 6% to 16% on balanced accuracy over a set of baseline metrics that capture the structural information of a code snippet. Our findings highlight that topics contain valuable information that can help guide and drive developers' logging decisions.
C1 [Li, Heng; Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON, Canada.
   [Chen, Tse-Hsun (Peter); Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
C3 Queens University - Canada; Concordia University - Canada
RP Li, H (corresponding author), Queens Univ, SAIL, Kingston, ON, Canada.
EM hengli@cs.queensu.ca; peterc@encs.concordia.ca; shang@encs.concordia.ca;
   ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan, Ahmed/AAB-7241-2019; Ali,
   Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Chen,
   Tse-Hsun/0000-0003-4027-0905
CR [Anonymous], 2007, Latent Semantic Analysis: A Road to Meaning. Ed. by
   Apache-Commons, 2016, BEST PRACTICES LOGGI
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Baldi PF, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P543, DOI 10.1145/1449955.1449807
   Baldi PF, 2008, ACM SIGPLAN NOTICES, V43, P543, DOI 10.1145/1449955.1449807
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Binkley D., 2014, 22nd International Conference on Program Comprehension (Hyderabad, India, 2014), P26, DOI [DOI 10.1145/2597008.2597150, 10.1145/2597008.2597150]
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   BRING J, 1994, AM STAT, V48, P209, DOI 10.2307/2684719
   Brown P. F., 1992, Computational Linguistics, V18, P467
   Chang J., 2009, Advances in neural information processing systems, P22, DOI DOI 10.5555/2984093.2984126
   Chen BY, 2017, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.2017.15
   Chen TH, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P243, DOI 10.1109/ICSE-SEIP.2017.26
   Chen TH, 2017, J SYST SOFTWARE, V129, P79, DOI 10.1016/j.jss.2016.05.015
   Chen TH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P666, DOI 10.1145/2950290.2950303
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Cleary B, 2009, EMPIR SOFTW ENG, V14, P93, DOI 10.1007/s10664-008-9095-3
   Cohen I., 2004, P USENIX OSDI, V6, P16
   De Lucia A., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P193
   De Lucia A, 2014, EMPIR SOFTW ENG, V19, P1383, DOI 10.1007/s10664-013-9285-5
   Friedman J, 2010, J STAT SOFTW, V33, P1, DOI 10.18637/jss.v033.i01
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Goshtasby A. A., 2012, Similarity and Dissimilarity Measures, P7, DOI [DOI 10.1007/978-1-4471-2458-0_2, 10.1007/978-1-4471-2458-02, DOI 10.1007/978-1-4471-2458-02, 10.1007/978-1-4471-2458-0_2, DOI 10.1007/978-1-4471-2458-0{_}2]
   GROENEVELD RA, 1984, STATISTICIAN, V33, P391, DOI 10.2307/2987742
   Hall D. D., 2008, P C EMP METH NAT LAN, DOI DOI 10.3115/1613715.1613763
   Hindle A, 2014, EMPIR SOFTW ENG
   Hu JJ, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P3, DOI 10.1109/SANER.2015.7081810
   Kabacoff R., 2011, R IN ACTION
   Kabinna S, 2016, P 23 IEEE INT C SOFT
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Kuhn M., 2018, APPL PREDICTIVE MODE
   Lal S, 2016, PROCEEDINGS OF THE 9TH INDIA SOFTWARE ENGINEERING CONFERENCE, P151, DOI 10.1145/2856636.2856637
   Li H, 2017, EMPIR SOFTW ENG, V22, P1684, DOI 10.1007/s10664-016-9456-2
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Linstead E, 2008, SEVENTH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS, PROCEEDINGS, P813, DOI 10.1109/ICMLA.2008.47
   Liu YX, 2009, PROC IEEE INT CONF S, P233, DOI 10.1109/ICSM.2009.5306318
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Mariani Leonardo, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P117, DOI 10.1109/ISSRE.2008.48
   Martin TM, 2012, J CHEM INF MODEL, V52, P2570, DOI 10.1021/ci300338w
   Maskeri Girish, 2008, 1st India Software Engineering Conference. ISEC 2008, P113
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McCallum A.K., 2002, MALLET MACHINE LEARN
   Microsoft-MSDN, 2016, LOGG EXC
   Misra H., 2008, P 12 C COMPUTATIONAL, P41, DOI 10.3115/1596324.1596332
   Nguyen TT, 2011, P 33 INT C SOFTW ENG, P932
   Oliner A, 2012, COMMUN ACM, V55, P63, DOI 10.1145/2076450.2076466
   Panichella A, 2016, P 23 IEEE INT C SOFT
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Pecchia A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P169, DOI 10.1109/ICSE.2015.145
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Shang WY, 2015, EMPIR SOFTW ENG, V20, P1, DOI 10.1007/s10664-013-9274-8
   Shang WY, 2014, J SOFTW-EVOL PROC, V26, P3, DOI 10.1002/smr.1579
   Simon N, 2011, J STAT SOFTW, V39, P1
   Sun X., 2015, COMPUTER INFORM SCI, P27, DOI DOI 10.1007/978-3-319-10509-3_3
   Sun XB, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P357, DOI 10.1109/SNPD.2016.7515925
   Sun XB, 2015, INFORM SOFTWARE TECH, V66, P1, DOI 10.1016/j.infsof.2015.05.003
   Swinscow, 2002, STAT SQUARE ONE
   Syer MD, 2013, PROC IEEE INT CONF S, P110, DOI 10.1109/ICSM.2013.22
   Thomas SW, 2014, SCI COMPUT PROGRAM, V80, P457, DOI 10.1016/j.scico.2012.08.003
   Thomas SW, 2010, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2010.13
   Thomas SW, 2011, 8 WORK C MIN SOFTW R, P173
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Tibshirani R, 1996, J ROY STAT SOC B, V58, P267, DOI 10.1111/j.2517-6161.1996.tb02080.x
   Tse-Hsun Chen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P189, DOI 10.1109/MSR.2012.6224280
   Wallach Hanna M., 2009, Advances in neural information processing systems, P1973, DOI DOI 10.1007/S10708-008-9161-9
   Witten I. H., 2005, DATA MINING PRACTICA
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yuan D., 2012, P 2012 USENIX S OP S, P293
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P143
   Yuan D, 2011, ACM SIGPLAN NOTICES, V46, P3, DOI 10.1145/1961296.1950369
   Yuan Ding, 2014, 11 USENIX S OPERATIN, P249
   Zeng L, 2015, IEEE ICC, P7168, DOI 10.1109/ICC.2015.7249470
   Zhang S, 2005, I C DEPEND SYS NETWO, P644, DOI 10.1109/DSN.2005.44
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 77
TC 54
Z9 56
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2018
VL 23
IS 5
BP 2655
EP 2694
DI 10.1007/s10664-018-9595-8
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO5AW
UT WOS:000440031100005
DA 2024-07-18
ER

PT J
AU Zhong, H
   Meng, N
AF Zhong, Hao
   Meng, Na
TI Towards reusing hints from past fixes An exploratory study on thousands
   of real samples
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
ID CODE; ASSIGNMENT; TOOL
AB With the usage of version control systems, many bug fixes have accumulated over the years. Researchers have proposed various automatic program repair (APR) approaches that reuse past fixes to fix new bugs. However, some fundamental questions, such as how new fixes overlap with old fixes, have not been investigated. Intuitively, the overlap between old and new fixes decides how APR approaches can construct new fixes with old ones. Based on this intuition, we systematically designed six overlap metrics, and performed an empirical study on 5,735 bug fixes to investigate the usefulness of past fixes when composing new fixes. For each bug fix, we created delta graphs (i.e., program dependency graphs for code changes), and identified how bug fixes overlap with each other in terms of the content, code structures, and identifier names of fixes. Our results show that if an APR approach knows all code name changes and composes new fixes by fully or partially reusing the content of past fixes, only 2.1% and 3.2% new fixes can be created from single or multiple past fixes in the same project, compared with 0.9% and 1.2% fixes created from past fixes across projects. However, if an APR approach knows all code name changes and composes new fixes by fully or partially reusing the code structures of past fixes, up to 41.3% and 29.7% new fixes can be created. By making the above observations and revealing other ten findings, we investigated the upper bound of reusable past fixes and composable new fixes, exploring the potential of existing and future APR approaches.
C1 [Zhong, Hao] Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai, Peoples R China.
   [Meng, Na] Virginia Tech, Dept Comp Sci, Blacksburg, VA USA.
C3 Shanghai Jiao Tong University; Virginia Polytechnic Institute & State
   University
RP Zhong, H (corresponding author), Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai, Peoples R China.
EM zhonghao@sjtu.edu.cn; nm8247@cs.vt.edu
RI Zhong, Hao/B-2435-2015
OI Zhong, Hao/0000-0002-4302-9183
FU 973 Program in China [2015CB352203]; National Nature Science Foundation
   of China [61572313]; Science and Technology Commission of Shanghai
   Municipality [15DZ1100305]; NSF CCF [1565827, ONR-450487]; Direct For
   Computer & Info Scie & Enginr; Division of Computing and Communication
   Foundations [1565827] Funding Source: National Science Foundation
FX Hao Zhong is sponsored by the 973 Program in China (No. 2015CB352203),
   the National Nature Science Foundation of China No. 61572313, and the
   grant of Science and Technology Commission of Shanghai Municipality No.
   15DZ1100305. Na Meng is sponsored by the NSF CCF No. 1565827 and
   ONR-450487.
CR [Anonymous], P ESEC FSE
   [Anonymous], P 33 PLDI
   [Anonymous], P 13 ASPLOS
   [Anonymous], 2007, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, DOI [DOI 10.1145/2025113.2025185, 10.1145/2025113.2025185]
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Dagenais B, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P313
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Gabel M, 2010, 18 ACM SIGSOFT INT S, P147
   Gao Q, 2015, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2015.81
   GOLUB GH, 1979, TECHNOMETRICS, V21, P215, DOI 10.1080/00401706.1979.10489751
   Higo Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P372, DOI 10.1109/MSR.2015.43
   Nguyen HA, 2013, IEEE INT CONF AUTOM, P180, DOI 10.1109/ASE.2013.6693078
   Jeffrey D, 2009, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2009.5090029
   Kaleeswaran S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P266, DOI 10.1145/2568225.2568258
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kuhn HW, 2005, NAV RES LOG, V52, P7, DOI 10.1002/nav.20053
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Liang G., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, P565
   Liu C, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P282, DOI 10.1109/ICST.2013.24
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Martinez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P492, DOI 10.1145/2591062.2591114
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   MUNKRES J, 1957, J SOC IND APPL MATH, V5, P32, DOI 10.1137/0105003
   Myers EW, 1986, ALGORITHMICA, V1, P251, DOI 10.1007/BF01840446
   Negara S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P803, DOI 10.1145/2568225.2568317
   Nguyen Tien N, 2010, Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering-Volume 1, ICSE '10, P315
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Rolim R, 2017, PROC INT CONF SOFTW, P404, DOI 10.1109/ICSE.2017.44
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Yin ZN, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P159
   Yue RR, 2017, PROC IEEE INT CONF S, P422, DOI 10.1109/ICSME.2017.16
   Zhang Jie, 2016, P 25 INT S SOFTWARE, P342, DOI [10.1145/2931037, DOI 10.1145/2931037]
   Zhong H, 2017, PROC IEEE ACM INT C, P144, DOI 10.1109/ICSE-C.2017.88
   Zhong H, 2017, IEEE INT CONF AUTOM, P671, DOI 10.1109/ASE.2017.8115677
   Zhong H, 2009, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2009.94
NR 45
TC 8
Z9 8
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2018
VL 23
IS 5
BP 2521
EP 2549
DI 10.1007/s10664-017-9584-3
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO5AW
UT WOS:000440031100001
DA 2024-07-18
ER

PT J
AU Bagherzadeh, M
   Kahani, N
   Bezemer, CP
   Hassan, AE
   Dingel, J
   Cordy, JR
AF Bagherzadeh, Mojtaba
   Kahani, Nafiseh
   Bezemer, Cor-Paul
   Hassan, Ahmed E.
   Dingel, Juergen
   Cordy, James R.
TI Analyzing a decade of Linux system calls
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Linux kernel; System calls; Empirical software engineering; API
   evolution; Software evolution
ID EVOLUTION; SOFTWARE; SUPPORT; FAULTS
AB Over the past 25 years, thousands of developers have contributed more than 18 million lines of code (LOC) to the Linux kernel. As the Linux kernel forms the central part of various operating systems that are used by millions of users, the kernel must be continuously adapted to the changing demands and expectations of these users. The Linux kernel provides its services to an application through system calls. The combined set of all system calls forms the essential Application Programming Interface (API) through which an application interacts with the kernel. In this paper, we conduct an empirical study of 8,770 changes that were made to Linux system calls during the last decade (i.e., from April 2005 to December 2014). In particular, we study the size of the changes, and we manually identify the type of changes and bug fixes that were made. Our analysis provides an overview of the evolution of the Linux system calls over the last decade. We find that there was a considerable amount of technical debt in the kernel, that was addressed by adding a number of sibling calls (i.e., 26% of all system calls). In addition, we find that by far, the ptrace() and signal handling system calls are the most challenging to maintain. Our study can be used by developers who want to improve the design and ensure the successful evolution of their own kernel APIs.
C1 [Bagherzadeh, Mojtaba; Kahani, Nafiseh; Bezemer, Cor-Paul; Hassan, Ahmed E.; Dingel, Juergen; Cordy, James R.] Queens Univ, Sch Comp, Kingston, ON, Canada.
C3 Queens University - Canada
RP Bezemer, CP (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM mojtaba@cs.queensu.ca; kahani@cs.queensu.ca; bezemer@cs.queensu.ca;
   ahmed@cs.queensu.ca; dingel@cs.queensu.ca; cordy@cs.queensu.ca
RI Hassan, Ahmed/AAB-7241-2019; KHALIFA, AHMED khalifa/HKF-2246-2023; Ali,
   Ahmed/HOF-4672-2023; Cordy, James R/G-9736-2011
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; BAGHERZADEH,
   MOJTABA/0000-0002-0253-671X; Bezemer, Cor-Paul/0000-0002-0474-5718
CR [Anonymous], SYZK LIN SYSC FUZZ
   [Anonymous], 2016, INT 64 IA 32 ARCH SO
   Antoniol G, 2002, INFORM SOFTWARE TECH, V44, P755, DOI 10.1016/S0950-5849(02)00123-4
   Atlidakis V, 2016, PROCEEDINGS OF THE ELEVENTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS, (EUROSYS 2016), DOI 10.1145/2901318.2901350
   Bagherzadeh M, 2017, ANAL DECADE LINUX SY
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Corbet J, 2002, NEW SYSTEM CALL REST
   Corbet J, 2014, POSSIBLE DEMISE REMA
   Davis M, 2012, CREATING VDSO COLONE
   de Melo CA, 2009, NET INTRO RECVMMSG S
   Deller H, 2014, FIX EPOLL PWAIT SYSC
   Deller H, 2013, CORRECTLY WIRE MQ FU
   Dig D, 2005, PROC IEEE INT CONF S, P389
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Douglas Chase, 2009, ADD COMPAT TRUNCATE
   Drepper U, 2006, PATCH IMPLEMENT AT S
   Drepper U, 2005, AT SYSCALLS INTRO
   Drysdale D, 2015, DOCUMENTATION DESCRI
   Filippov M, 2014, XTENSA DEPRECATE FAS
   Fox J., 2010, Nonparametric Regression in R
   Free Software Foundation, 2016, THE GNU C LIB
   Gartner, 2015, GARTN SAYS TABL SAL
   Gillen A, 2013, RUNNING MISSION CRIT
   Godfrey Michael, 2001, P INT WORKSH PRINC S, P103, DOI [10.1145/602461.602482, DOI 10.1145/602461.602482]
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Han S, 2012, SCALABLE EVENT MULTI
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hayward M, 2002, LKML M HAYWARD INTEL
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   Hora A, 2015, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSM.2015.7332471
   Hunt A., 2000, PRAGMATIC PROGRAMMER
   Israeli A, 2010, J SYST SOFTWARE, V83, P485, DOI 10.1016/j.jss.2009.09.042
   Izurieta C., 2006, ISESE 06, P204, DOI DOI 10.1145/1159733.1159765
   Jones Dave, 2016, TRINITY LINUX SYSTEM
   Kerrisk M, 2015, LINUX PROGRAMMERS MA
   Kerrisk Michael, 2017, LINUX PROGRAMMERS MA
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Li Z, 2006, Electronic Journal of Differential equations, V2006, P1
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Linux Kernel Documentation, 2016, SUBM PATCH ESS GUID
   Linux Kernel Documentation, 2005, ADD NEW SYST CALL
   Livieri Simone., 2007, MSR 07, P22
   Long JD, 2003, HANDPR PSYCH
   Lotufo R, 2010, LECT NOTES COMPUT SC, V6287, P136, DOI 10.1007/978-3-642-15579-6_10
   Lu LY, 2014, ACM T STORAGE, V10, DOI 10.1145/2560012
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Mauerer W., 2010, Professional Linux kernel architecture
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   McMartin K, 2007, REORDER SYSCALLS MAT
   Merlo E, 2002, P INT COMP SOFTW APP, P421, DOI 10.1109/CMPSAC.2002.1045038
   National Institute of Standards and Technology, 2009, NAT VULN DAT CVE 200
   Padioleau Y, 2006, ACM, V40, P59
   Palix N, 2011, ACM SIGPLAN NOTICES, V46, P305, DOI 10.1145/1961296.1950401
   Passos L., 2012, 4 INT WORKSHOP FEATU, P62, DOI [10.1145/2377816.2377825, DOI 10.1145/2377816.2377825]
   Perkins Jeff H., 2005, PASTE 05, P111, DOI DOI 10.1145/1108768.1108818
   Pingdom, 2012, LIN KERN DEV NUMB
   Robbes R., 2012, P ACM SIGSOFT 20 INT
   Romano J., 2006, P ANN M SO ASS I RES
   Sandeep S, 2002, PROCESS TRACING USIN
   Skinnemoen H, 2008, FIX TIMERFD BREAKAGE
   Skinnemoen H, 2008, FIX SYS SYNC FILE RA
   Spinellis D, 2016, EMPIRICAL SOFTWARE E
   Spinellis D, 2016, PROC INT CONF SOFTW, P748, DOI 10.1145/2884781.2884799
   Spinellis D, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P462, DOI 10.1109/MSR.2015.64
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Torvalds L, 2014, RENAMEAT2 DOES NOT N
   Torvalds L, 2002, COMPATIBILITY SYSCAL
   Torvalds Linus, 2017, LINUX GIT REPOSITORY
   Tsai CC, 2016, PROCEEDINGS OF THE ELEVENTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS, (EUROSYS 2016), DOI 10.1145/2901318.2901341
   Viro A, 2012, BRAINDUMP RFC SIGNAL
   Xavier L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P138, DOI 10.1109/SANER.2017.7884616
   Xing ZC, 2007, IEEE T SOFTWARE ENG, V33, P818, DOI 10.1109/TSE.2007.70747
   Zankel C, 2005, PATCH XTENSA ARCHI 1
NR 73
TC 17
Z9 21
U1 2
U2 21
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2018
VL 23
IS 3
BP 1519
EP 1551
DI 10.1007/s10664-017-9551-z
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GH6DH
UT WOS:000433532300011
DA 2024-07-18
ER

PT J
AU Datta, S
AF Datta, Subhajit
TI How does developer interaction relate to software quality? an
   examination of product development data
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software teams; Interaction; Connection; Clustering; Software quality;
   Defect count; Jazz
ID SOCIAL NETWORK; PERFORMANCE; COMMUNICATION; COORDINATION; FAMILIARITY;
   EXPERIENCE; EVOLUTION; PARADIGM; PROJECTS; SUCCESS
AB Industrial software systems are being increasingly developed by large and distributed teams. Tools like collaborative development environments (CDE) are used to facilitate interaction between members of such teams, with the expectation that social factors around the interaction would facilitate team functioning. In this paper, we first identify typically social characteristics of interaction in a software development team: reachability, connection, association, and clustering. We then examine how these factors relate to the quality of software produced by a team, in terms of the number of defects, through an empirical study of 70+ teams, involving 900+ developers in total, spread across 30+ locations and 19 time-zones, working on 40,000+ units of work in the multi-version development of a major industrial product, spreading across more than five years. After controlling for known factors affecting large scale distributed development such as dependency, system age, developer expertise and experience, geographic dispersion, socio-technical congruence, and the number of files changed, we find statistically significant effects of connection and clustering on software quality. Higher levels of intra-team connection are found to relate to higher defect count, whereas more clustering relates to fewer defects. We examine the implications of these results for individual developers, project managers, and organizations.
C1 [Datta, Subhajit] Singapore Univ Technol & Design, 8 Somapah Rd, Singapore 487372, Singapore.
C3 Singapore University of Technology & Design
RP Datta, S (corresponding author), Singapore Univ Technol & Design, 8 Somapah Rd, Singapore 487372, Singapore.
EM subhajit.datta@acm.org
OI Datta, Subhajit/0000-0001-9161-7951
CR Agerfalk P.J., 2006, COMMUN ACM, V49, P27
   AKAIKE H, 1974, IEEE T AUTOMAT CONTR, VAC19, P716, DOI 10.1109/TAC.1974.1100705
   Albert R, 2002, REV MOD PHYS, V74, P47, DOI 10.1103/RevModPhys.74.47
   [Anonymous], PROBLEM PROGRAMMING
   [Anonymous], 1999, SEI SERIES SOFTWARE
   [Anonymous], 1992, Sociological Methodology
   [Anonymous], 1539592 NY SSRN ID
   [Anonymous], 1971, The Psychology of Computer Programming
   [Anonymous], AM J SOC
   [Anonymous], 1987, Peopleware: Productive Projects and Teams
   [Anonymous], 2002, EC INNOVA NEW TECH
   [Anonymous], P 17 INT S SOFTW REL
   [Anonymous], 2010, SOCIAL EC NETWORKS
   [Anonymous], ADV SOCIAL NETWORK A
   [Anonymous], ISO 9000 ROADM UNPUB
   [Anonymous], INT J COMMUN
   Barabási AL, 2002, PHYSICA A, V311, P590, DOI 10.1016/S0378-4371(02)00736-7
   Bird C, 2009, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2009.5070550
   Boh WF, 2007, MANAGE SCI, V53, P1315, DOI 10.1287/mnsc.1060.0687
   Booch G, 2008, IEEE SOFTWARE, V25, P16, DOI 10.1109/MS.2008.52
   Borgatti SP, 2003, J MANAGE, V29, P991, DOI 10.1016/S0149-2063(03)00087-4
   Brooks F.P., 2010, Design of Design: Essays from a Computer Scientist
   Brooks Frederick P., 1995, The mythical man-month
   BROWN SL, 1995, ACAD MANAGE REV, V20, P343, DOI 10.2307/258850
   Cataldo M., 2006, ACM C COMPUTER SUPPO, P353, DOI DOI 10.1145/1180875.1180929
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Cataldo M, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P281
   Cataldo M, 2009, INT CONF GLOBAL SOFT, P163, DOI 10.1109/ICGSE.2009.24
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Coleman James S, 1994, FDN SOCIAL THEORY
   CONWAY ME, 1968, DATAMATION, V14, P28
   Cringely RobertX., 1996, ACCIDENTAL EMPIRES B
   Crowston K., 2002, IEE Proceedings-Software, V149, P3, DOI 10.1049/ip-sen:20020197
   Crowston K., 1998, A coordination theory approach to process description and redesign
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Datta S, 2012, ACM SIGPLAN NOTICES, V47, P655, DOI 10.1145/2398857.2384664
   de Souza CRB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1145/1368088.1368122
   Dorogovtsev SN, 2002, PHYS REV E, V65, DOI 10.1103/PhysRevE.65.066122
   Ehrlich K., 2012, P ACM 2012 C COMPUTE, P945, DOI DOI 10.1145/2145204.2145345
   Espinosa JA, 2007, ORGAN SCI, V18, P613, DOI 10.1287/orsc.1070.0297
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   FELD SL, 1991, AM J SOCIOL, V96, P1464, DOI 10.1086/229693
   Frost R, 2007, IEEE SOFTWARE, V24, P114, DOI 10.1109/MS.2007.170
   Grewal R, 2006, MANAGE SCI, V52, P1043, DOI 10.1287/mnsc.1060.0550
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Herzig K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P159, DOI 10.1109/MSR.2009.5069495
   Huckman RS, 2009, MANAGE SCI, V55, P85, DOI 10.1287/mnsc.1080.0921
   Kilduff M, 2006, ACAD MANAGE REV, V31, P1031, DOI 10.5465/AMR.2006.22528168
   Kleinberg J., 2000, Proceedings of the Thirty Second Annual ACM Symposium on Theory of Computing, P163, DOI 10.1145/335305.335325
   Koru AG, 2005, IEEE SOFTWARE, V22, P23, DOI 10.1109/MS.2005.149
   Kwan I, 2011, IEEE T SOFTWARE ENG, V37, P307, DOI 10.1109/TSE.2011.29
   McDonough EF, 2001, J PROD INNOVAT MANAG, V18, P110, DOI 10.1016/S0737-6782(00)00073-4
   Meneely A., 2011, P 19 ACM SIGSOFT S 1, P81
   Meneely A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P281, DOI 10.1145/1985793.1985832
   MILGRAM S, 1967, PSYCHOL TODAY, V1, P61
   Monge P, 2008, COMMUN THEOR, V18, P449, DOI 10.1111/j.1468-2885.2008.00330.x
   Newman MEJ, 2003, PHYS REV E, V68, DOI 10.1103/PhysRevE.68.036122
   Newman MEJ, 2003, PHYS REV E, V67, DOI 10.1103/PhysRevE.67.026126
   Newman MEJ, 2003, SIAM REV, V45, P167, DOI 10.1137/S003614450342480
   Newman MEJ, 2002, PHYS REV LETT, V89, DOI 10.1103/PhysRevLett.89.208701
   Olson GM, 2000, HUM-COMPUT INTERACT, V15, P139, DOI 10.1207/S15327051HCI1523_4
   Perlow L, 2002, J ORGAN BEHAV, V23, P345, DOI 10.1002/job.150
   Ravasz E, 2003, PHYS REV E, V67, DOI 10.1103/PhysRevE.67.026112
   Raymond Eric Steven, 2001, The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary
   Sawyer S, 2010, INFORM SYST J, V20, P81, DOI 10.1111/j.1365-2575.2008.00311.x
   Scacchi W, 2004, IEEE SOFTWARE, V21, P59, DOI 10.1109/MS.2004.1259221
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Sosa ME, 2008, RES ENG DES, V19, P47, DOI 10.1007/s00163-007-0039-5
   Tabachnick, 2007, USING MULTIVARIATE S, V5th
   TRAVERS J, 1969, SOCIOMETRY, V32, P425, DOI 10.2307/2786545
   Wagstrom P., 2010, Academy of Management Annual Meeting Proceedings, P1, DOI [DOI 10.5465/AMBPP.2010.54500789, 10.5465/AMBPP.2010.54500789]
   Wagstrom P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P199, DOI 10.1145/2568225.2568279
   Watts DJ, 1998, NATURE, V393, P440, DOI 10.1038/30918
   Wolf Timo, 2008, Software Process: Improvement and Practice, V13, P493, DOI 10.1002/spip.401
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Zimmermann Thomas, 2009, 2009 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM), P435, DOI 10.1109/ESEM.2009.5316024
NR 77
TC 12
Z9 14
U1 0
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2018
VL 23
IS 3
BP 1153
EP 1187
DI 10.1007/s10664-017-9534-0
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GH6DH
UT WOS:000433532300001
DA 2024-07-18
ER

PT J
AU Bano, M
   Zowghi, D
   da Rimini, F
AF Bano, Muneera
   Zowghi, Didar
   da Rimini, Francesca
TI User satisfaction and system success: an empirical exploration of user
   involvement in software development
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE User Involvement; User Satisfaction; System Success; Software
   Development
ID MCLEAN MODEL; INFORMATION; PARTICIPATION; IMPLEMENTATION; EXPECTATION;
   EXPERIENCES; INTEGRATION; VALIDATION; DELONE
AB For over four decades user involvement has been considered intuitively to lead to user satisfaction, which plays a pivotal role in successful outcome of a software project. The objective of this paper is to explore the notion of user satisfaction within the context of the user involvement and system success relationship. We have conducted a longitudinal case study of a software development project and collected qualitative data by means of interviews, observations and document analysis over a period of 3 years. The analysis of our case study data revealed that user satisfaction significantly contributes to the system success even when schedule and budget goals are not met. The case study data analysis also presented additional factors that contribute to the evolution of user satisfaction throughout the project. Users' satisfaction with their involvement and the resulting system are mutually constituted while the level of user satisfaction evolves throughout the stages of software development process. Effective management strategies and user representation are essential elements of maintaining an acceptable level of user satisfaction throughout software development process.
C1 [Bano, Muneera; Zowghi, Didar; da Rimini, Francesca] Univ Technol Sydney, Fac Engn & Informat Technol, Ultimo, Australia.
C3 University of Technology Sydney
RP Bano, M (corresponding author), Univ Technol Sydney, Fac Engn & Informat Technol, Ultimo, Australia.
EM Muneera.Bano@uts.edu.au; Didar.Zowghi@uts.edu.au;
   Francesca.daRimini-1@uts.edu.au
RI Bano, Muneera/AAP-7064-2021; Bano, Muneera/O-8419-2017; Zowghi,
   Didar/AAF-2345-2019
OI Bano, Muneera/0000-0002-1447-9521; Bano, Muneera/0000-0002-1447-9521;
   Zowghi, Didar/0000-0002-6051-0155; da Rimini,
   Francesca/0000-0003-2080-0198
FU University of Technology Sydney; Schlumberger award of the Faculty For
   The Future (FFTF)
FX We would like to express our gratitude to the ASG management and staff
   for allowing us to conduct this study. We also acknowledge the funding
   provided to Muneera Bano by the University of Technology Sydney, and
   Schlumberger award of the Faculty For The Future (FFTF).
CR Abelein U, 2015, EMPIR SOFTW ENG, V20, P28, DOI 10.1007/s10664-013-9278-4
   Au N, 2008, MIS QUART, V32, P43
   BAILEY JE, 1983, MANAGE SCI, V29, P530, DOI 10.1287/mnsc.29.5.530
   Ballantine J., 1996, Information Resources Management Journal, V9, P5
   Bano M, 2015, INFORM SOFTWARE TECH, V58, P148, DOI 10.1016/j.infsof.2014.06.011
   Bano M, 2013, IEEE INT WORKS EMPIR, P24, DOI 10.1109/EmpiRE.2013.6615212
   BARKI H, 1989, MIS QUART, V13, P53, DOI 10.2307/248700
   BARONAS AMK, 1988, MIS QUART, V12, P111, DOI 10.2307/248811
   Bhattacherjee A, 2001, MIS QUART, V25, P351, DOI 10.2307/3250921
   Briggs RO, 2012, YIELD SHIFT THEORY S, P185
   Briggs RO, 2006, SMALL GR RES, V37, P585, DOI 10.1177/1046496406294320
   Burt R. S., 2005, BROKERAGE CLOSURE IN
   CAVAYE ALM, 1995, INFORM MANAGE, V28, P311, DOI 10.1016/0378-7206(94)00053-L
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dalcher D., 2009, CEPIS Upgrade, VX, P42
   DeLone WH, 2003, J MANAGE INFORM SYST, V19, P9, DOI 10.1080/07421222.2003.11045748
   DeLone WH, 1992, INFORM SYST RES, V3, P60, DOI 10.1287/isre.3.1.60
   DOLL WJ, 1994, MIS QUART, V18, P453, DOI 10.2307/249524
   DOLL WJ, 1988, MIS QUART, V12, P259, DOI 10.2307/248851
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Eason K., 1989, INFORM TECHNOLOGY OR
   El Emam K, 2008, IEEE SOFTWARE, V25, P84, DOI 10.1109/MS.2008.107
   Gregor S, 2006, MIS QUART, V30, P611
   Harris MA, 2009, COMMUN ASSOC INF SYS, V24, P739
   HARTWICK J, 1994, MANAGE SCI, V40, P440, DOI 10.1287/mnsc.40.4.440
   He J, 2008, J MANAGE INFORM SYST, V25, P301, DOI 10.2753/MIS0742-1222250111
   HIRSCHHEIM R, 1989, COMMUN ACM, V32, P1199, DOI 10.1145/67933.67937
   Hirschheim R. A., 1989, PARTICIPATION SYSTEM, P194
   Hwang MI, 1999, INFORM MANAGE-AMSTER, V35, P229, DOI 10.1016/S0378-7206(98)00092-5
   IGBARIA M, 1992, MIS QUART, V16, P507, DOI 10.2307/249734
   Iivari J, 2010, INFORM SYST J, V20, P109, DOI 10.1111/j.1365-2575.2009.00336.x
   Iivari N, 2006, INTERACT COMPUT, V18, P635, DOI 10.1016/j.intcom.2005.10.002
   IVES B, 1984, MANAGE SCI, V30, P586, DOI 10.1287/mnsc.30.5.586
   IVES B, 1983, COMMUN ACM, V26, P785, DOI 10.1145/358413.358430
   Khalifa M., 2003, Journal of the Association for Information Systems, V4, P12
   Klobas JE, 2010, J COMPUT HIGH EDUC, V22, P114, DOI 10.1007/s12528-010-9032-5
   Kujala S, 2003, BEHAV INFORM TECHNOL, V22, P1, DOI 10.1080/0144929021000055530
   Kunsoo Suh, 1994, Information Resources Management Journal, V7, P30
   LAWRENCE M, 1993, MIS QUART, V17, P195, DOI 10.2307/249801
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   McHaney R, 2002, INFORM MANAGE-AMSTER, V39, P503, DOI 10.1016/S0378-7206(01)00119-7
   McKeen J. D., 1997, Journal of Management Information Systems, V14, P133
   MCKEEN JD, 1994, MIS QUART, V18, P427, DOI 10.2307/249523
   McKinney V, 2002, INFORM SYST RES, V13, P296, DOI 10.1287/isre.13.3.296.76
   MELONE NP, 1990, MANAGE SCI, V36, P76, DOI 10.1287/mnsc.36.1.76
   Muller M.J., 1997, Handbook of human-computer interaction
   Myers MD, 1997, MIS QUART, V21, P241, DOI 10.2307/249422
   Oliver RL, 1996, ADV CONSUM RES, V23, P143
   PALANISAMY R, 2001, J SERV RES, V1, P125
   Palmer JW, 1998, COMMUN ACM, V41, P44, DOI 10.1145/272287.272296
   Petter S, 2008, EUR J INFORM SYST, V17, P236, DOI 10.1057/ejis.2008.15
   Procaccino JD, 2006, COMMUN ACM, V49, P79, DOI 10.1145/1145287.1145291
   Procaccino JD, 2002, INFORM SOFTWARE TECH, V44, P53, DOI 10.1016/S0950-5849(01)00217-8
   Ralph P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P24, DOI 10.1145/2568225.2568261
   Reinig BA, 2003, J MANAGE INFORM SYST, V19, P65
   ROBEY D, 1982, MANAGE SCI, V28, P73, DOI 10.1287/mnsc.28.1.73
   Rouibah K, 2009, IND MANAGE DATA SYST, V109, P338, DOI 10.1108/02635570910939371
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   RUSHINEK A, 1986, COMMUN ACM, V29, P594, DOI 10.1145/6138.6140
   Savolainen P, 2012, INT J PROJ MANAG, V30, P458, DOI 10.1016/j.ijproman.2011.07.002
   Seddon PB, 1997, INFORM SYST RES, V8, P240, DOI 10.1287/isre.8.3.240
   Srijumpa R., 2002, Journal of Financial Services Marketing, V6, P240
   Susarla A, 2003, MIS QUART, V27, P91
   Wagner EL, 2007, COMMUN ACM, V50, P51, DOI 10.1145/1323688.1323694
   Walsham G, 1995, INFORM SYST RES, V6, P376, DOI 10.1287/isre.6.4.376
   Walsham G, 2006, EUR J INFORM SYST, V15, P320, DOI 10.1057/palgrave.ejis.3000589
   Wixom BH, 2005, INFORM SYST RES, V16, P85, DOI 10.1287/isre.1050.0042
   Wu JTB, 2006, J COMPUT INFORM SYST, V46, P127, DOI 10.1080/08874417.2006.11645930
   Yin D.R. K., 2017, Case Study Research and Applications: Design and Methods
   Yoon Y, 1995, MIS Q
   Montesdioca GPZ, 2015, COMPUT SECUR, V48, P267, DOI 10.1016/j.cose.2014.10.015
   Zowghi D, 2015, P 19 ACM  INT C EV A
NR 72
TC 29
Z9 38
U1 4
U2 50
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2017
VL 22
IS 5
BP 2339
EP 2372
DI 10.1007/s10664-016-9465-1
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FE0PC
UT WOS:000407921200003
DA 2024-07-18
ER

PT J
AU Jongeling, R
   Sarkar, P
   Datta, S
   Serebrenik, A
AF Jongeling, Robbert
   Sarkar, Proshanta
   Datta, Subhajit
   Serebrenik, Alexander
TI On negative results when using sentiment analysis tools for software
   engineering research
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Sentiment analysis tools; Replication study; Negative results
ID STRENGTH DETECTION; USER REVIEWS; RECOMMENDATION; AGREEMENT; KAPPA
AB Recent years have seen an increasing attention to social aspects of software engineering, including studies of emotions and sentiments experienced and expressed by the software developers. Most of these studies reuse existing sentiment analysis tools such as SentiStrength and NLTK. However, these tools have been trained on product reviews and movie reviews and, therefore, their results might not be applicable in the software engineering domain. In this paper we study whether the sentiment analysis tools agree with the sentiment recognized by human evaluators (as reported in an earlier study) as well as with each other. Furthermore, we evaluate the impact of the choice of a sentiment analysis tool on software engineering studies by conducting a simple study of differences in issue resolution times for positive, negative and neutral texts. We repeat the study for seven datasets (issue trackers and Stack Overflow questions) and different sentiment analysis tools and observe that the disagreement between the tools can lead to diverging conclusions. Finally, we perform two replications of previously published studies and observe that the results of those studies cannot be confirmed when a different sentiment analysis tool is used.
C1 [Jongeling, Robbert] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Serebrenik, Alexander] Eindhoven Univ Technol, Software Evolut, Eindhoven, Netherlands.
   [Sarkar, Proshanta] IBM India Private Ltd, Kolkata, India.
   [Datta, Subhajit] Singapore Univ Technol & Design, Singapore, Singapore.
C3 Eindhoven University of Technology; Eindhoven University of Technology;
   Singapore University of Technology & Design
RP Serebrenik, A (corresponding author), Eindhoven Univ Technol, Software Evolut, Eindhoven, Netherlands.
EM r.m.jongeling@alumnus.tue.nl; proshant.cse@gmail.com;
   subhajit.datta@acm.org; a.serebrenik@tue.nl
OI Serebrenik, Alexander/0000-0002-1418-0095; Datta,
   Subhajit/0000-0001-9161-7951
CR Abbasi A, 2014, LREC 2014 - NINTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION, P823
   [Anonymous], 2010, P 6 INT C PRED MOD S, DOI DOI 10.1145/1868328.1868336
   [Anonymous], 2013, P INT C QUAL SOFTW A
   [Anonymous], 2006, AAAI Symposium on Computational Approaches to Analysing Weblogs (AAAI-CAAW)
   Asaduzzaman M, SCHNEIDER KA BUG INT, P116, DOI [10.1109/MSR.2012.6224267, DOI 10.1109/MSR.2012.6224267]
   Baccianella S, 2010, LREC 2010 - SEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION
   Bakeman R., 1997, Observing interaction: An introduction to sequential analysis
   Barkmann H, 2009, 2009 INTERNATIONAL CONFERENCE ON ADVANCED INFORMATION NETWORKING AND APPLICATIONS WORKSHOPS: WAINA, VOLS 1 AND 2, P1067, DOI 10.1109/WAINA.2009.190
   Batista GEAPA, 2000, LECT NOTES ARTIF INT, V1793, P315
   Bird S., 2009, NATURAL LANGUAGE PRO
   Brunner E, 2000, BIOMETRICAL J, V42, P17, DOI 10.1002/(SICI)1521-4036(200001)42:1<17::AID-BIMJ17>3.0.CO;2-U
   Capiluppi A, 2013, IEEE SOFTWARE, V30, P45, DOI 10.1109/MS.2012.169
   Cataldo M, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P579
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Costa JMR, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3151
   Danescu-Niculescu-Mizil C., 2013, Long Papers, V1, P250
   Datta S, 2012, ACM SIGPLAN NOTICES, V47, P655, DOI 10.1145/2398857.2384664
   Davidov D., 2010, P 14 C COMP NAT LANG, P107
   de Magalhaes CVC, 2014, P 18 INT C EV ASS SO, DOI 10.1145/2601248.2601289
   Destefanis G, 2016, PEERJ COMPUT SCI, V2, P1, DOI [10.7717/peerj-cs.73, DOI 10.7717/PEERJ-CS.73]
   Dewan P, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P109, DOI 10.1109/CHASE.2015.32
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   El Rahman SA, 2019, 2019 INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCES (ICCIS), P336, DOI 10.1109/iccisci.2019.8716464
   Fleiss J.L., 2004, Statistical Methods for Rates and Proportions, VThird, P1, DOI [10.1002/0471445428, DOI 10.1002/0471445428]
   Fontana F. A., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P450, DOI 10.1109/ICSTW.2011.12
   Fowler M., 2001, Software Development, V9, P28
   Fuhr N., 1987, Proceedings of the Tenth Annual International ACMSIGIR Conference on Research and Development in Information Retrieval, P13, DOI 10.1145/42005.42007
   GABRIEL KR, 1969, ANN MATH STAT, V40, P224, DOI 10.1214/aoms/1177697819
   Gamon M, 2005, LECT NOTES COMPUT SC, V3646, P121
   Garcia D, 2013, 2013 IEEE THIRD INTERNATIONAL CONFERENCE ON CLOUD AND GREEN COMPUTING (CGC 2013), P410, DOI 10.1109/CGC.2013.71
   Giraud-Carrier C, 2011, SIGKDD EXPLOR NEWSL, V12, P3, DOI DOI 10.1145/1964897.1964899
   Goul M., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P4168, DOI 10.1109/HICSS.2012.421
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Greiler M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P2, DOI 10.1109/MSR.2015.8
   Guzman E., 2014, Association for Computing Machinery, P352
   Guzman E, 2013, P 2013 9 JOINT M FDN, P671, DOI 10.1145/2491411.2494578
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Honkela Timo, 2012, Artificial Neural Networks and Machine Learning - ICANN 2012. 22nd International Conference on Artificial Neural Networks, P467, DOI 10.1007/978-3-642-33266-1_58
   Howard MJ, 2013, IEEE WORK CONF MIN S, P377, DOI 10.1109/MSR.2013.6624052
   HUBERT L, 1985, J CLASSIF, V2, P193, DOI 10.1007/BF01908075
   Islam MR, 2016, 2016 IEEE/ACIS 14TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS (SERA), P185, DOI 10.1109/SERA.2016.7516145
   Jongeling R, 2015, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSM.2015.7332508
   Konietschke F, 2012, ELECTRON J STAT, V6, P738, DOI 10.1214/12-EJS691
   Kucuktunc O., 2012, Proceedings of the Fifth ACM International Conference on Web Search and Data Mining, P633, DOI [DOI 10.1145/2124295.2124371, 10.1145/2124295.2124371]
   Lanza M, 2012, 9 IEEE WORKSH C MIN
   Leopairote W, 2013, INT JOINT CONF COMP, P257
   Lewis D. D., 1994, SIGIR '94. Proceedings of the Seventeenth Annual International ACM-SIGIR Conference on Research and Development in Information Retrieval, P3
   Li TH, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON SERVICES COMPUTING (SCC 2014), P568, DOI 10.1109/SCC.2014.80
   Lindsey MR, 2011, P 5 INT C PRINC SYST, DOI 10.1145/2124436.2124453
   Linstead E, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P99, DOI 10.1109/MSR.2009.5069486
   Martie L, LOPES CV TRENDY BUGS, P120, DOI [10.1109/MSR.2012.6224268, DOI 10.1109/MSR.2012.6224268]
   Mohammad SM, 2013, ARXIV13086242CS
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Novielli N, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P33, DOI 10.1145/2804381.2804387
   Ortu M, 2015, Proceedings of the 11th International Conference on Predictive Models and Data Analytics in Software Engineering, PROMISE'15, P1, DOI DOI 10.1145/2810146.2810147
   Ortu M, 2015, ISSUE FIXING TIME
   Ortu M, 2015, LECT NOTES BUS INF P, V212, P129, DOI 10.1007/978-3-319-18612-2_11
   Pak A, 2010, P 5 INT WORKSHOP SEM, V5, P436
   Pang B, 2002, PROCEEDINGS OF THE 2002 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING, P79, DOI 10.3115/1118693.1118704
   Pang B., 2007, INFORM RETRIEVAL, V2, P1, DOI DOI 10.1561/1500000011
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   PRITCHARD P, 1984, COMMUN ACM, V27, P53, DOI 10.1145/69605.357970
   RAND WM, 1971, J AM STAT ASSOC, V66, P846, DOI 10.2307/2284239
   Rousinopoulos AI, 2014, VISTA ELETRONICA SIS, V13
   Santos JM, 2009, LECT NOTES COMPUT SC, V5769, P175, DOI 10.1007/978-3-642-04277-5_18
   Schroter A., 2012, Proc. Conf. Computer Supported Cooperative Work (CSCW 12), P1317, DOI DOI 10.1145/2145204.2145401
   Sfetsos P, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P57, DOI 10.1109/QUATIC.2012.36
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Shihab E., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P112, DOI 10.1109/MSR.2012.6224307
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Socher R., 2013, P 2013 C EMP METH NA, V2013, P1631, DOI DOI 10.1371/JOURNAL.PONE.0073791
   Sun XB, 2015, INFORM SOFTWARE TECH, V66, P1, DOI 10.1016/j.infsof.2015.05.003
   Taht D, 2014, P 2014 ACM SIGCOMM W, P1, DOI [10.1145/2630088.2652480, DOI 10.1145/2630088.2652480]
   Thelwall M, 2012, J AM SOC INF SCI TEC, V63, P163, DOI 10.1002/asi.21662
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P2544, DOI 10.1002/asi.21416
   Tonella P, 2007, EMPIR SOFTW ENG, V12, P551, DOI 10.1007/s10664-007-9037-5
   Tourani P., 2014, CASCON, P34
   Tukey J.W., 1951, Quick and dirty methods in statistics. Part II. Simple analyses for standard designs, P189
   Tumasjan A, 2010, 4 INT AAAI C WEBL SO, V10, P178, DOI 10.1074/jbc.M501708200
   Van Rijsbergen C. J., 1979, Information Retrieval, V2nd
   Vasilescu B, 2014, EMPIR SOFTW ENG, V19, P955, DOI 10.1007/s10664-013-9244-1
   Vasilescu B, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P188, DOI 10.1109/SocialCom.2013.35
   Vasilescu Bogdan., 2011, Proceedings of the 2Nd International Workshop on Emerging Trends in Software Metrics, WETSoM '11, P23
   Viera AJ, 2005, FAM MED, V37, P360
   Vivian R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P380, DOI 10.1109/ICSE.2015.170
   Wang SW, 2014, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2014.51
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wilson T., 2005, P C HUM LANG TECHN E, P347, DOI [10.3115/1220575.1220619, DOI 10.3115/1220575.1220619]
   Yu H.-F., 2013, LIBSHORTTEXT LIB SHO
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   ZIMMERMAN DW, 1992, PERCEPT MOTOR SKILL, V74, P835, DOI 10.2466/PMS.74.3.835-844
NR 93
TC 98
Z9 106
U1 3
U2 18
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2017
VL 22
IS 5
BP 2543
EP 2584
DI 10.1007/s10664-016-9493-x
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FE0PC
UT WOS:000407921200008
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Behnamghader, P
   Le, DM
   Garcia, J
   Link, D
   Shahbazian, A
   Medvidovic, N
AF Behnamghader, Pooyan
   Duc Minh Le
   Garcia, Joshua
   Link, Daniel
   Shahbazian, Arman
   Medvidovic, Nenad
TI A large-scale study of architectural evolution in open-source software
   systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture; Architectural change; Software evolution;
   Open-source software; Architecture recovery
AB From its very inception, the study of software architecture has recognized architectural decay as a regularly occurring phenomenon in long-lived systems. Architectural decay is caused by repeated, sometimes careless changes to a system during its lifespan. Despite decay's prevalence, there is a relative dearth of empirical data regarding the nature of architectural changes that may lead to decay, and of developers' understanding of those changes. In this paper, we take a step toward addressing that scarcity by introducing an architecture recovery framework, ARCADE, for conducting large-scale replicable empirical studies of architectural change across different versions of a software system. ARCADE includes two novel architectural change metrics, which are the key to enabling large-scale empirical studies of architectural change. We utilize ARCADE to conduct an empirical study of changes found in software architectures spanning several hundred versions of 23 open-source systems. Our study reveals several new findings regarding the frequency of architectural changes in software systems, the common points of departure in a system's architecture during the system's maintenance and evolution, the difference between system-level and component-level architectural change, and the suitability of a system's implementation-level structure as a proxy for its architecture.
C1 [Behnamghader, Pooyan; Duc Minh Le; Link, Daniel; Shahbazian, Arman; Medvidovic, Nenad] Univ Southern Calif, Dept Comp Sci, Los Angeles, CA 90007 USA.
   [Garcia, Joshua] Univ Calif Irvine, Inst Software Res, Irvine, CA USA.
C3 University of Southern California; University of California System;
   University of California Irvine
RP Behnamghader, P (corresponding author), Univ Southern Calif, Dept Comp Sci, Los Angeles, CA 90007 USA.
EM pbehnamg@usc.edu; ducmle@usc.edu; joshua.garcia@uci.edu; dlink@usc.edu;
   armansha@usc.edu; neno@usc.edu
RI Le, Duc/AAU-1626-2021; Garcia, Joshua/AAO-4575-2021
OI Garcia, Joshua/0000-0002-1696-8783
CR Agnew B., 1994, Distributed Systems Engineering, V1, P313, DOI 10.1088/0967-1846/1/5/006
   Amazon, 2015, AM COMM LIN INT
   [Anonymous], 2014, Git log
   Apache, 2014, AP PORT RUNT VERS
   Apache, 2014, LUC WIK
   Apache, 2015, AP MAV
   Apache, 2015, AP ANT
   Apache, 2014, HAD REL
   ARCADE, 2015, ARC START USC SOFTAR
   Blei DM, 2012, COMMUN ACM, V55, P77, DOI 10.1145/2133806.2133826
   Bouwers Eric, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P540, DOI 10.1109/ICSM.2011.6080827
   Bouwers E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P921, DOI 10.1109/ICSE.2013.6606641
   Bouwers E, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P83, DOI 10.1109/WICSA.2011.20
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   DAmbros M., 2008, Software Evolution, P37
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Garcia J., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P292, DOI 10.1109/WICSA-ECSA.212.48
   Garcia J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P552, DOI 10.1109/ASE.2011.6100123
   Garcia J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P901, DOI 10.1109/ICSE.2013.6606639
   Garcia J, 2013, IEEE INT CONF AUTOM, P486, DOI 10.1109/ASE.2013.6693106
   Ghezzi G, 2013, IEEE WORK CONF MIN S, P363, DOI 10.1109/MSR.2013.6624050
   Git, 2015, GITH
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Google, 2015, GOOGL CLOUD PLATF
   Google, 2015, GUAV
   Holt R, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P163, DOI 10.1109/WCRE.1996.558900
   Kaur T, 2016, PROCEEDINGS OF THE FIRST IEEE INTERNATIONAL CONFERENCE ON POWER ELECTRONICS, INTELLIGENT CONTROL AND ENERGY SYSTEMS (ICPEICES 2016)
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Koschke R., 2009, Software Engineering, P140, DOI DOI 10.1007/978-3-540-95888-8
   Koschke R, 2005, NULL, P4
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Langhammer M., 2016, P 13 WORK IEEE IFIP
   Le D. M., 2016, P 13 WORK IEEE IFIP
   Le D. M., 2015, P 12 WORK C MIN SOFT
   Lehman M. M., 1980, P IEEE
   Lutellier T, 2015, P 37 INT C SOFTW ENG
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   McCallum A.K., 2002, MALLET MACHINE LEARN
   MEDVIDOVIC N, 1996, JOINT P 2 INT SOFTW, P24, DOI [10.1145/243327.243340, DOI 10.1145/243327.243340]
   Mengue Olivier., 2014, Svn graph branches
   MUNKRES J, 1957, J SOC IND APPL MATH, V5, P32, DOI 10.1137/0105003
   Murgia A, 2009, P 1 INT S EM TRENDS
   Nakamura T, 2005, 11 IEEE INT S SOFTW, P24
   Ng A. Y., 2002, Advances in Neural Information Processing Systems, P1473
   Oreizy P, 1998, PROC INT CONF SOFTW, P177, DOI 10.1109/ICSE.1998.671114
   Perry D. E., 1992, SIGSOFT Software Engineering Notes, V17, P40, DOI 10.1145/141874.141884
   PMD, 2015, PMD DOC
   Robles Gregorio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P171, DOI 10.1109/MSR.2010.5463348
   Shahbazian A, 2016, IEEE ACM 38 IEEE INT
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   Tu Q, 2002, PROG COMPREHEN, P127, DOI 10.1109/WPC.2002.1021334
   Tzerpos V., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P187, DOI 10.1109/WCRE.1999.806959
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
   van Deursen A, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P122, DOI 10.1109/WICSA.2004.1310696
   Vasudeva HL, 2005, METRIC SPACES
   Wen Z, 2004, PROG COMPREHEN, P194, DOI 10.1109/WPC.2004.1311061
   Wettel R, 2008, WORK CONF REVERSE EN, P219, DOI 10.1109/WCRE.2008.55
NR 58
TC 30
Z9 34
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2017
VL 22
IS 3
BP 1146
EP 1193
DI 10.1007/s10664-016-9466-0
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW4GE
UT WOS:000402459200008
DA 2024-07-18
ER

PT J
AU Chen, X
   Slowinska, A
   Bos, H
AF Chen, Xi
   Slowinska, Asia
   Bos, Herbert
TI On the detection of custom memory allocators in C binaries
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Custom memory allocation; Dynamic binary analysis
AB Many reverse engineering techniques for data structures rely on the knowledge of memory allocation routines. Typically, they interpose on the system's malloc and free functions, and track each chunk of memory thus allocated as a data structure. However, many performance-critical applications implement their own custom memory allocators. Examples include webservers, database management systems, and compilers like gcc and clang. As a result, current binary analysis techniques for tracking data structures fail on such binaries. We present MemBrush, a new tool to detect memory allocation and deallocation functions in stripped binaries with high accuracy. We evaluated the technique on a large number of real world applications that use custom memory allocators. We demonstrate that MemBrush can detect allocators/deallocators with a high accuracy which is 52 out of 59 for allocators, and 29 out of 31 for deallocators in SPECINT 2006. As we show, we can furnish existing reverse engineering tools with detailed information about the memory management API, and as a result perform an analysis of the actual application specific data structures designed by the programmer. Our system uses dynamic analysis and detects memory allocation and deallocation routines by searching for functions that comply with a set of generic characteristics of allocators and deallocators.
C1 [Chen, Xi] Vrije Univ Amsterdam, Network & Syst Secur Grp, Amsterdam, Netherlands.
   [Slowinska, Asia] Vrije Univ Amsterdam, Syst & Network Secur Grp, Amsterdam, Netherlands.
   [Bos, Herbert] Vrije Univ Amsterdam, Syst & Network Secur, Amsterdam, Netherlands.
C3 Vrije Universiteit Amsterdam; Vrije Universiteit Amsterdam; Vrije
   Universiteit Amsterdam
RP Slowinska, A (corresponding author), Vrije Univ Amsterdam, Syst & Network Secur Grp, Amsterdam, Netherlands.
EM x.chen@vu.nl; asia@few.vu.nl; herbertb@few.vu.nl
RI Slowinska, Asia/GWC-8493-2022; Bos, Herbert/KGK-6775-2024
OI Bos, Herbert/0000-0001-6179-1510
FU European Research Council [ERC-2010-StG 259108-ROSETTA]; EU FP7 SysSec
   Network of Excellence
FX This work is supported by the European Research Council through project
   ERC-2010-StG 259108-ROSETTA, and the EU FP7 SysSec Network of
   Excellence.
CR Akritidis P, 2010, P 19 USENIX C SEC SS
   [Anonymous], 2011, P NETW DISTR SYST SE
   [Anonymous], P C COMP CONSTR CC 0
   [Anonymous], 2010, P 17 ANN NETW DISTR
   [Anonymous], 2011, P 16 INT C ARCH SUPP
   [Anonymous], P JOINT EUR C THEOR
   [Anonymous], **NON-TRADITIONAL**
   [Anonymous], THESIS
   Balakrishnan G, 2010, ACM T PROGR LANG SYS, V32, DOI 10.1145/1749608.1749612
   Berger E. D., 2002, SIGPLAN Notices, V37, P1, DOI 10.1145/583854.582421
   Berger ED, 2006, ACM SIGPLAN NOTICES, V41, P158, DOI 10.1145/1133981.1134000
   Caballero J, 2012, P 2012 INT S SOFTW T, DOI [10.1145/04000800.2336769, DOI 10.1145/04000800.2336769]
   Calvet J., 2012, P 2012 ACM C COMP CO, P169, DOI DOI 10.1145/2382196.2382217
   Chandler J, 2009, TPM-PHILOS MAG, P56, DOI 10.5840/tpm20094713
   Chen X, 2013, WORK CONF REVERSE EN, P22, DOI 10.1109/WCRE.2013.6671277
   Dhurjati Dinakar., 2006, INT C DEPENDABLE SYS, P269, DOI DOI 10.1109/DSN.2006.31
   ElWazeer K., 2013, P 34 ACM SIGPLAN C P
   Gröbert F, 2011, LECT NOTES COMPUT SC, V6961, P41, DOI 10.1007/978-3-642-23644-0_3
   Guo Z., 2008, OSDI
   HANSON DR, 1990, SOFTWARE PRACT EXPER, V20, P5, DOI 10.1002/spe.4380200104
   Hastings R., 1992, WINT USENIX C
   Honarmand N, 2013, P 18 INT C ARCH SUPP
   Jones MT, 2007, ANATOMY LINUX SLAB A
   Jula A, 2009, P 2009 INT S MEM MAN, DOI [10.1145/1542431.1542447, DOI 10.1145/1542431.1542447]
   Jula A, 2007, P 19 INT C LANG COMP
   Kemerlis VP, 2012, P 8 ANN INT C VIRT E
   Liu R, 2012, P 3 ACM SIGOPS AS PA
   Lvin VB, 2008, ACM SIGPLAN NOTICES, V43, P115, DOI 10.1145/1353536.1346296
   Lyberis S, 2012, P 2012 INT S MEM MAN, DOI [10.1145/2258996.2259001, DOI 10.1145/2258996.2259001]
   Novark G, 2010, PROCEEDINGS OF THE 17TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'10), P573, DOI 10.1145/1866307.1866371
   Novark G, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P397, DOI 10.1145/1542476.1542521
   Portokalidis G, 2006, P 1 ACM EUR C COMP S, DOI [10.1145/1218063.1217938, DOI 10.1145/1218063.1217938]
   ROSS DT, 1967, COMMUN ACM, V10, P481, DOI 10.1145/363534.363546
   Schneider Scott., 2006, ISMM, P84, DOI [DOI 10.1145/1133956.1133968, DOI 10.1145/1218063.1217938]
   Serebryany K., 2012, 2012 USENIX ANN TECH
   Slowinska Asia, 2012, P USENIX ANN TECHN C
   Wilson PR, 1995, DYNAMIC STORAGE ALLO
NR 37
TC 8
Z9 8
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2016
VL 21
IS 3
BP 753
EP 777
DI 10.1007/s10664-015-9362-z
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VO
UT WOS:000379061700002
OA hybrid
DA 2024-07-18
ER

PT J
AU Haller, I
   Slowinska, A
   Bos, H
AF Haller, Istvan
   Slowinska, Asia
   Bos, Herbert
TI Scalable data structure detection and classification for C/C plus plus
   binaries
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Data structures; Dynamic binary analysis
AB Many existing techniques for reversing data structures in C/C++ binaries are limited to low-level programming constructs, such as individual variables or structs. Unfortunately, without detailed information about a program's pointer structures, forensics and reverse engineering are exceedingly hard. To fill this gap, we propose MemPick, a tool that detects and classifies high-level data structures used in stripped binaries. By analyzing how links between memory objects evolve throughout the program execution, it distinguishes between many commonly used data structures, such as singly-or doubly-linked lists, many types of trees (e.g., AVL, red-black trees, B-trees), and graphs. We evaluate the technique on 10 real world applications, 4 file system implementations and 16 popular libraries. The results show that MemPick can identify the data structures with high accuracy.
C1 [Haller, Istvan; Slowinska, Asia] Vrije Univ Amsterdam, Syst & Network Secur Grp, Amsterdam, Netherlands.
   [Bos, Herbert] Vrije Univ Amsterdam, Syst & Network Secur, Amsterdam, Netherlands.
C3 Vrije Universiteit Amsterdam; Vrije Universiteit Amsterdam
RP Haller, I (corresponding author), Vrije Univ Amsterdam, Syst & Network Secur Grp, Amsterdam, Netherlands.
EM i.haller@student.vu.nl; asia@few.vu.nl; herbertb@few.vu.nl
RI Bos, Herbert/KGK-6775-2024; Slowinska, Asia/GWC-8493-2022
OI Bos, Herbert/0000-0001-6179-1510
FU European Research Council [ERC-2010-StG 259108-ROSETTA]; EU FP7 SysSec
   Network of Excellence; Microsoft Research PhD Scholarship Programme [MRL
   2011-049]
FX This work is supported by the European Research Council through project
   ERC-2010-StG 259108-ROSETTA, the EU FP7 SysSec Network of Excellence and
   by the Microsoft Research PhD Scholarship Programme through the project
   MRL 2011-049.
CR [Anonymous], 2013, P 34 IEEE S SEC PRIV
   [Anonymous], P 21 USENIX C SEC S
   [Anonymous], P USENIX S OP SYST D
   [Anonymous], 2011, P NETW DISTR SYST SE
   [Anonymous], P 18 ANN NETW DISTR
   [Anonymous], LECT NOTES COMPUTER
   [Anonymous], P C COMP CONSTR CC 0
   [Anonymous], P 20 WORK C REV ENG
   [Anonymous], P 26 ACM SIGPLAN SIG
   [Anonymous], P 2008 ACM SIGPLAN C
   [Anonymous], 2010, P 17 ANN NETW DISTR
   [Anonymous], P 19 INT C COMP AID
   [Anonymous], P 26 ACM SIGPLAN SIG
   [Anonymous], 2011, P 16 INT C ARCH SUPP
   [Anonymous], P JOINT EUR C THEOR
   [Anonymous], P 34 ANN ACM SIGPLAN
   [Anonymous], P 19 INT C TOOLS ALG
   [Anonymous], **NON-TRADITIONAL**
   [Anonymous], J ED PSYCH
   [Anonymous], P 42 ANN IEEE ACM IN
   [Anonymous], ADDISON WESLEY SERIE
   [Anonymous], DETECTING CUSTOM MEM
   Aydin B, 2009, ANN APPL STAT, V3, P1597, DOI 10.1214/09-AOAS263
   Cadar Cristian., 2008, P 8 USENIX S OPERATI
   Cormen Thomas H., 2001, INTRO ALGORITHMS
   Engler D, 2004, LECT NOTES COMPUT SC, V2937, P191
   Ernst MD, 2007, SCI COMPUT PROGRAM, V69, P35, DOI 10.1016/j.scico.2007.01.015
   Ghiya Rakesh., 1996, POPL 96, P1
   GODEFROID P., 2008, AUTOMATED WHITEBOX F
   Guo PhilipJ., 2006, P 2006 INT S SOFTWAR, P255
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Jung C, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P86
   Kuncak V, 2006, IEEE T SOFTWARE ENG, V32, P988, DOI 10.1109/TSE.2006.125
   Lin Zhiqiang., 2011, Ndss
   Marinescu PD, 2012, PROC INT CONF SOFTW, P716, DOI 10.1109/ICSE.2012.6227146
   Marinescu Paul Dan, 2013, ACM Symposium on the Foundations of Software Engineering, P235, DOI [10.1145/2491411.2491438, DOI 10.1145/2491411.2491438]
   Ramasso E., 2005, Proceedings of the IEEE Instrumentation and Measurement Technology Conference (IEEE Cat. No.05CH37627C), DOI 10.1145/1111583.1111585
   Slowinska Asia, 2012, P USENIX ANN TECHN C
   Wang H, 2007, ANN STAT, V35, P1849, DOI 10.1214/009053607000000217
   Yang H, 2008, LECT NOTES COMPUT SC, V5123, P385
   ZHANG M, 2013, P 22 US SEC S, P337
NR 41
TC 9
Z9 11
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2016
VL 21
IS 3
BP 778
EP 810
DI 10.1007/s10664-015-9363-y
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VO
UT WOS:000379061700003
OA hybrid
DA 2024-07-18
ER

PT J
AU Moreno-Lizaranzu, MJ
   Cuesta, F
AF Moreno-Lizaranzu, Manuel J.
   Cuesta, Federico
TI A framework and architecture for rapid software development: a success
   story
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Rapid software development; Model Driven Architecture; Semiconductor
   industry; Empirical Software
ID RELIABILITY
AB In this paper, we present the experience of applying Empirical Software Engineering to create a new improved global architecture and framework for Computer Integrated Manufacturing in FreescaleA (R) Semiconductor Inc. The architecture and framework described in this paper have been utilized to create three software applications that run in all the interconnected probe and final test floors in Freescale around the world. These applications successfully and efficiently have increased automation and have significantly enhanced manufacturing processes, specifically in the fields of latent defects detection and equipment utilization improvement.
C1 [Moreno-Lizaranzu, Manuel J.] Freescale Semicond Inc, Austin, TX 78735 USA.
   [Cuesta, Federico] Univ Seville, Escuela Tecn Super Ingn, E-41092 Seville, Spain.
C3 NXP Semiconductors; Freescale Semiconductor; University of Sevilla
RP Cuesta, F (corresponding author), Univ Seville, Escuela Tecn Super Ingn, Camino Descubrimientos, E-41092 Seville, Spain.
EM Manuel.J.Moreno@freescale.com; fede@cartuja.us.es
RI Cuesta, Federico/AAA-2179-2019
OI Cuesta, Federico/0000-0003-0231-3396
FU Freescale(R) Semiconductor Inc.
FX This work has been supported by Freescale (R) Semiconductor Inc.
CR Basham B., 2008, HEAD 1 SERVLETS JSP, V2nd
   Cade M., 2010, SUN CERTIFIED ENTERP
   Cocheteux P, 2010, P 1 IFAC WORKSH ADV, P134
   Daasch WR, 2009, IEEE DES TEST COMPUT, V26, P64, DOI 10.1109/MDT.2009.123
   Fumagalli L, 2010, P 1 IFAC WORKSH ADV, P18
   Ganguly A, 2009, INT J PROD ECON, V118, P410, DOI 10.1016/j.ijpe.2008.12.009
   Ho C, 2012, PROSPRING 3 COMPREHE
   Ihme T, 2013, EMPIRICAL SOFTWARE E
   Komi-Sirvio S., 2003, 15 INT C SOFTW ENG K, P489
   Kommeren R, 2007, EMPIR SOFTW ENG, V12, P647, DOI 10.1007/s10664-007-9047-3
   Mann WR, 2008, IEEE DES TEST COMPUT, V25, P528, DOI 10.1109/MDT.2008.174
   Migl D, 2006, INT TEST CONF P, P1072
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Moreno-Lizaranzu MJ, 2013, SENSORS-BASEL, V13, P13521, DOI 10.3390/s131013521
   Moreno-Lizaranzu MJ, 2012, P 2 IFAC IMS WORKSH, P127
   Ohletz MJ, 2009, MICROELECTRON J, V40, P1350, DOI 10.1016/j.mejo.2008.08.018
   Osaiweran A, 2013, EMPIRICAL SOFTWARE E
   Moreno MDS, 2012, PRISM SOC, P1
NR 19
TC 1
Z9 1
U1 0
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2015
VL 20
IS 6
BP 1456
EP 1485
DI 10.1007/s10664-014-9320-1
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT7YX
UT WOS:000363032900002
DA 2024-07-18
ER

PT J
AU Ko, AJ
   LaToza, TD
   Burnett, MM
AF Ko, Andrew J.
   LaToza, Thomas D.
   Burnett, Margaret M.
TI A practical guide to controlled experiments of software engineering
   tools with human participants
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Research methodology; Tools; Human participants; Human subjects;
   Experiments
ID COMPUTER-SCIENCE; EFFECT SIZE; IMPACT
AB Empirical studies, often in the form of controlled experiments, have been widely adopted in software engineering research as a way to evaluate the merits of new software engineering tools. However, controlled experiments involving human participants actually using new tools are still rare, and when they are conducted, some have serious validity concerns. Recent research has also shown that many software engineering researchers view this form of tool evaluation as too risky and too difficult to conduct, as they might ultimately lead to inconclusive or negative results. In this paper, we aim both to help researchers minimize the risks of this form of tool evaluation, and to increase their quality, by offering practical methodological guidance on designing and running controlled experiments with developers. Our guidance fills gaps in the empirical literature by explaining, from a practical perspective, options in the recruitment and selection of human participants, informed consent, experimental procedures, demographic measurements, group assignment, training, the selecting and design of tasks, the measurement of common outcome variables such as success and time on task, and study debriefing. Throughout, we situate this guidance in the results of a new systematic review of the tool evaluations that were published in over 1,700 software engineering papers published from 2001 to 2011.
C1 [Ko, Andrew J.] Univ Washington, Informat Sch, Seattle, WA 98195 USA.
   [LaToza, Thomas D.] Univ Calif Irvine, Dept Informat, Irvine, CA USA.
   [Burnett, Margaret M.] Oregon State Univ, Sch Elect Engn & Comp Sci, Corvallis, OR 97331 USA.
C3 University of Washington; University of Washington Seattle; University
   of California System; University of California Irvine; Oregon State
   University
RP Ko, AJ (corresponding author), Univ Washington, Informat Sch, Seattle, WA 98195 USA.
EM ajko@uw.edu; tlatoza@ics.uci.edu; burnett@eecs.oregonstate.edu
OI Burnett, Margaret/0000-0001-6536-7629
FU NSF [CCF-0952733]; AFOSR [FA9550-0910213, FA9550-10-1-0326]; Direct For
   Computer & Info Scie & Enginr; Division Of Computer and Network Systems
   [1240786] Funding Source: National Science Foundation; Direct For
   Computer & Info Scie & Enginr; Division Of Computer and Network Systems
   [1240957] Funding Source: National Science Foundation; Direct For
   Computer & Info Scie & Enginr; Division of Computing and Communication
   Foundations [1302113] Funding Source: National Science Foundation;
   Division of Computing and Communication Foundations; Direct For Computer
   & Info Scie & Enginr [0952733] Funding Source: National Science
   Foundation; Div Of Information & Intelligent Systems; Direct For
   Computer & Info Scie & Enginr [1314384] Funding Source: National Science
   Foundation
FX We thank Bonnie E. John for her early contributions to this work. This
   material is based in part upon work supported by the NSF Grant
   CCF-0952733 and AFOSR FA9550-0910213 and FA9550-10-1-0326. Any opinions,
   findings, and conclusions or recommendations expressed in this material
   are those of the author(s) and do not necessarily reflect the views of
   the sponsors.
CR ANDERSON JR, 1985, BYTE, V10, P159
   [Anonymous], 2007, ESSENTIALS BEHAV RES
   [Anonymous], 1973, VISUAL INFORM PROCES
   [Anonymous], 1982, Design and Analysis: A Researcher's Handbook
   [Anonymous], 2012, P SIGCHI C HUMAN FAC
   [Anonymous], 2005, Proc. SIGCHI
   Aranda J, 2011, DO PRACTITIONERS PER
   Atkins DL, 2002, IEEE T SOFTWARE ENG, V28, P625, DOI 10.1109/TSE.2002.1019478
   Bangor A, 2008, INT J HUM-COMPUT INT, V24, P574, DOI 10.1080/10447310802205776
   Basili V. R., 1993, Experimental Software Engineering Issues: Critical Assessment and Future Directions. International Workshop Proceedings, P3
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Basili VR, 2007, LECT NOTES COMPUT SC, V4336, P33
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   Berander P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P167
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   Breaugh JA, 2003, J MANAGE, V29, P79, DOI 10.1016/S0149-2063(02)00221-0
   Bruun A, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1619
   Buse RPL, 2011, ACM C SYST PROGR LAN
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Chisnell D., 2008, Handbook of usability testing: How to plan, design, and conduct effective tests, V2nd
   Chuttur M.Y., 2009, Working papers on information systems
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Dell N, 2012, ACM C HUM FACT COMP, P1321
   Dieste O, 2011, INT SYMP EMP SOFTWAR, P285, DOI 10.1109/ESEM.2011.37
   Dig D, 2008, IEEE T SOFTWARE ENG, V34, P321, DOI 10.1109/TSE.2008.29
   Dittrich Y, 2007, INFORM SOFTWARE TECH, V49, P531, DOI 10.1016/j.infsof.2007.02.009
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Dybå T, 2011, EMPIR SOFTW ENG, V16, P425, DOI 10.1007/s10664-011-9163-y
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Feigenspan J., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P73
   FENTON N, 1993, J SYST SOFTWARE, V22, P141, DOI 10.1016/0164-1212(93)90092-C
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Golden E, 2005, ACM IEEE INT C SOFTW
   Greenberg S, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P111
   Gwet K. L., 2010, Handbook of inter-rater reliability
   Hanenberg S, 2010, ACM SIGPLAN NOTICES, V45, P22, DOI 10.1145/1932682.1869462
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Holmes R, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377657
   John B. E., 1995, Human Factors in Computing Systems. CHI'95 Conference Proceedings, P429
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   KELLER FS, 1968, J APPL BEHAV ANAL, V1, P79, DOI 10.1901/jaba.1968.1-79
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2010, EMPIR SOFTW ENG, V15, P618, DOI 10.1007/s10664-010-9134-8
   Kittur A, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P453
   Ko A. J., 2010, Proceedings 2010 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2010), P7, DOI 10.1109/VLHCC.2010.11
   Ko AJ, 2002, J VISUAL LANG COMPUT, V13, P517, DOI 10.1006/S1045-926X(02)00042-3
   Ko AJ, 2007, INT C SOFTW ENG ICSE
   Ko A, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1569
   LaToza TD, 2011, IEEE VISUAL LANGUAGE
   LaToza Thomas D., 2010, P 32 ACM IEEE INT C, P185, DOI DOI 10.1145/1806799.1806829
   LaToza ThomasD., 2011, Proceedings of the 3rd ACM SIGPLAN workshop on Evaluation and usability of programming languages and tools, PLATEAU '11, P45
   Lazar J., 2010, Research Methods in Human-Computer Interaction
   Lott C. M., 1996, Empirical Software Engineering, V1, P241, DOI 10.1007/BF00127447
   Martin D.W., 1996, DOING PSYCHOL EXPT, VFourth
   McDowall David., 1980, INTERRUPTED TIME SER
   Murphy GC, 1999, IEEE T SOFTWARE ENG, V25, P438, DOI 10.1109/32.799936
   Murphy-Hill E, 2010, FSE SDP WORKSH FUT S
   Nickerson R. S., 1998, REV GEN PSYCHOL, V2, P175, DOI DOI 10.1037/1089-2680.2.2.175
   Nimmer J. W., 2002, Software Engineering Notes, V27, P11, DOI 10.1145/605466.605469
   Olsen DR, 2007, UIST 2007: PROCEEDINGS OF THE 20TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P251
   POLSON PG, 1992, INT J MAN MACH STUD, V36, P741, DOI 10.1016/0020-7373(92)90039-N
   Ramesh V, 2004, J SYST SOFTWARE, V70, P165, DOI [10.1016/S0164-1212(03)00015-3, 10.1016/S0164-1212(03)00014-1]
   Rombach HD, 1992, INT WORKSH DAGST CAS
   ROSENTHAL R, 1978, BEHAV BRAIN SCI, V1, P377, DOI 10.1017/S0140525X00075506
   Rosenthal R., 1966, Experimenter effects in behavioral research
   Ross Joel, 2010, CHI 10 EXTENDED ABST, DOI [DOI 10.1145/1753846.1753873, 10.1145/1753846.1753873]
   Rothermel K. J., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P230, DOI 10.1109/ICSE.2000.870414
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Shull F, 2006, GUIDE ADV EMPIRICAL
   Sillito J., 2006, Proc. of the ACM SIGSOFT Int'l Symp. on Foundations of Software Engineering, P23, DOI DOI 10.1145/1181775.1181779
   Sjoberg D, 2003, EMPIRICAL SOFTWARE E
   Sjoberg DIK, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P358, DOI 10.1109/FOSE.2007.30
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   STEELE CM, 1995, J PERS SOC PSYCHOL, V69, P797, DOI 10.1037/0022-3514.69.5.797
   Tichy WF, 1998, COMPUTER, V31, P32, DOI 10.1109/2.675631
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   Walther Joseph B, 2002, Ethics Inf Technol, V4, P205, DOI 10.1023/A:1021368426115
   WICKELGREN WA, 1977, ACTA PSYCHOL, V41, P67, DOI 10.1016/0001-6918(77)90012-9
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yin R.K., 2011, Qualitative research from start to finish
   Zannier C., 2006, 28th International Conference on Software Engineering Proceedings, P341, DOI 10.1145/1134285.1134333
NR 85
TC 109
Z9 120
U1 0
U2 21
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2015
VL 20
IS 1
BP 110
EP 141
DI 10.1007/s10664-013-9279-3
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AZ7EN
UT WOS:000348381800004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Moe, NB
   Smite, D
   Hanssen, GK
   Barney, H
AF Moe, Nils Brede
   Smite, Darja
   Hanssen, Geir Kjetil
   Barney, Hamish
TI From offshore outsourcing to insourcing and partnerships: four failed
   outsourcing attempts
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Global software engineering; Global software development; Distributed
   software development; Offshoring; Insourcing; Backsouring; Outsourcing;
   Single-loop and double-loop learning; Escalating commitment;
   Intellectual capital; Human capital; Social capital; Organizational
   capital; SME; Multiple-Case Study
ID GLOBAL SOFTWARE-DEVELOPMENT
AB Most large software companies are involved in offshore development, now small- and medium-sized companies are starting to undertake global sourcing too. Empirical research suggests that offshoring is not always successful; however, only a few comprehensive failure stories have been reported. The objective of our study has been to understand why small and medium-sized companies terminate their offshore outsourcing relationships and what alternative arrangements they undertake afterwards. Therefore, we designed a multiple case study of four medium-sized Scandinavian software companies that have terminated their offshore outsourcing relationships. Our results are based on data collected through semi-structured interviews, informal dialogues and analysis of company documents. We found that all companies terminated their offshore contracts because of low quality of the software being developed. This was caused by an inability to build the necessary human and social capital. The companies reported challenges with domain knowledge, a lack of commitment of external developers, cultural clashes, poor communication and high turnover, which only amplified the problems. After termination all four companies changed their sourcing strategy from offshore outsourcing to offshore insourcing and partnerships. We conclude that successful offshore software development requires a change from a cost-driven focus to an intellectual capital-driven focus. To prevent continuous investments into contracts that are destined to fail, companies should look for signs of escalating commitments and terminate relationships that cannot be corrected. Those companies that choose outsourcing shall also take into account that mismatch between the size of the offshore contract relative to the vendor may have a negative effect on a relationship.
C1 [Moe, Nils Brede; Hanssen, Geir Kjetil] SINTEF, N-7034 Trondheim, Norway.
   [Smite, Darja] Blekinge Inst Technol, Karlskrona, Sweden.
   [Smite, Darja] Blekinge Inst Technol, Area Global Software Dev & Studies Effects Offsho, Karlskrona, Sweden.
   [Smite, Darja] Univ Latvia, Riga, Latvia.
   [Smite, Darja] Univ Latvia, Area Software Engn, Riga, Latvia.
   [Barney, Hamish] Univ New S Wales, Sydney, NSW, Australia.
C3 SINTEF; Blekinge Institute Technology; Blekinge Institute Technology;
   University of Latvia; University of Latvia; University of New South
   Wales Sydney
RP Moe, NB (corresponding author), SINTEF, N-7034 Trondheim, Norway.
EM nils.b.moe@sintef.no; darja.smite@bth.se; ghanssen@sintef.no;
   hamish.barney@gmail.com
RI Moe, Nils Brede/AAD-8183-2021
OI Moe, Nils Brede/0000-0003-2669-0778; Hanssen, Geir
   Kjetil/0000-0003-2718-6637
FU SINTEF ICT; Swedish Knowledge Foundation under KK-Hog grant [2009/0249];
   project BESQ+ [2010/0311]
FX This research is funded partly by SINTEF ICT, and the Swedish Knowledge
   Foundation under the KK-Hog grant 2009/0249 and project BESQ+ under
   grant 2010/0311. We are grateful to the reviewers and Torgeir Dingsoyr
   who gave us valuable feedback.
CR [Anonymous], 2012, Journal of Information Technology Teaching Cases, DOI [DOI 10.1057/JITTC.2012.7, 10.1057/jittc.2012.7.]
   Aron R, 2005, HARVARD BUS REV, V83, P135
   Barney H. T., 2009, 3 GLOB SOURC WORKSH
   Battin RD, 2001, IEEE SOFTWARE, V18, P70, DOI 10.1109/52.914750
   Boden A, 2007, 2 IEEE INT C GLOB SO
   Boden A, 2010, IEEE SOFTWARE, V27, P58, DOI 10.1109/MS.2009.113
   Bontis N., 1998, Management Decision, V36, P63, DOI [DOI 10.13189/UJAF.2021.090610, 10.1108/00251749810204142, DOI 10.1108/00251749810204142]
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Bush AA, 2008, INFORM SOFTWARE TECH, V50, P499, DOI 10.1016/j.infsof.2007.08.006
   Carmel E., 2005, Offshoring Information Technology: Sourcing and Outsourcing to a Global Workforce
   Carmel E, 2007, COMMUN ACM, V50, P40, DOI 10.1145/1290958.1290959
   Conchúir EO, 2009, COMMUN ACM, V52, P127, DOI 10.1145/1536616.1536648
   Damian D, 2006, IEEE SOFTWARE, V23, P17, DOI 10.1109/MS.2006.126
   DEDENE G, 1995, IEEE SOFTWARE, V12, P35, DOI 10.1109/52.363167
   DeLone W, 2005, P P 38 ANN HAW INT C
   Ebert C, 2007, 2 IEEE INT C GLOB SO
   Fayad ME, 2000, COMMUN ACM, V43, P115, DOI 10.1145/330534.330555
   Gongla P, 2001, IBM SYST J, V40, P842, DOI 10.1147/sj.404.0842
   Hall T, 2009, ACM T SOFTW ENG METH, V18, DOI 10.1145/1525880.1525883
   Hanssen GK, 2006, 5 INT S EMP SOFTW EN
   Hanssen GK, 2012, J SYST SOFTW, V85, P12
   Heeks R, 2001, IEEE SOFTWARE, V18, P54, DOI 10.1109/52.914744
   Hirschheim R, 1998, P ANN HICSS, P644, DOI 10.1109/HICSS.1998.654826
   Hole S, 2008, COMM COM INF SC, V16, P189
   Keil M, 2000, MIS QUART, V24, P631, DOI 10.2307/3250950
   Lacity Mary C., 2008, Strategic Outsourcing, V1, P13, DOI 10.1108/17538290810857457
   Langley A, 1999, ACAD MANAGE REV, V24, P691, DOI 10.2307/259349
   Laporte CY, 2008, COMPUTER, V41, P98, DOI 10.1109/MC.2008.86
   Lee AS, 2003, INFORM SYST RES, V14, P221, DOI 10.1287/isre.14.3.221.16560
   Lunenburg F.C., 2010, INT J MANAGEMENT BUS, V13, P1, DOI DOI 10.13189/UJM.2021.090102
   McLaughlin D, 2006, ECIS
   Moe N. B., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P1, DOI 10.1109/ICGSE.2012.33
   Nahapiet J, 1998, ACAD MANAGE REV, V23, P242, DOI 10.2307/259373
   Oshri I., 2011, HDB GLOBAL OUTSOURCI, VSecond
   Paulk MC, 1999, ELEMENTS SOFTWARE PR, P3
   Prikladnicki R, 2007, 2 IEEE INT C GLOB SO
   Prikladnicki R, 2010, INFORM SOFTWARE TECH, V52, P779, DOI 10.1016/j.infsof.2010.03.009
   Rottman JW, 2008, J INF TECHNOL, V23, P31, DOI 10.1057/palgrave.jit.2000127
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Sabherwal R., 2003, Information and Organization, V13, P153, DOI 10.1016/S1471-7727(02)00026-X
   Sahay S., 2003, GLOBAL IT OUTSOURCIN
   Sato DT, 2008, AG TOR CAN
   Schon Donald., 1996, READING ADDISON WESL, V305
   SCHULTZ TW, 1961, AM ECON REV, V51, P1
   Schwaber K., 2001, Agile software development with scrum
   Smite D, 2014, EMPIR SOFTW ENG, V19, P105, DOI 10.1007/s10664-012-9217-9
   Smite D, 2013, J SYST SOFTWARE, V86, P1054, DOI 10.1016/j.jss.2012.10.003
   Smite D, 2011, IEEE SOFTWARE, V28, P15, DOI 10.1109/MS.2011.70
   Smite D, 2010, AGILITY ACROSS TIME AND SPACE: IMPLEMENTING AGILE METHODS IN GLOBAL SOFTWARE PROJECTS, P333, DOI 10.1007/978-3-642-12442-6_23
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   STAW BM, 1976, ORGAN BEHAV HUM PERF, V16, P27, DOI 10.1016/0030-5073(76)90005-2
   Stewart T., 2001, WEALTH KNOWLEDGE INT
   Tiwana A, 2004, INFORM SOFTWARE TECH, V46, P899, DOI 10.1016/j.infsof.2004.03.006
   Tobin J., 1969, Journal of Money Credit Banking, V1, P15, DOI [DOI 10.2307/1991374, 10.2307/1991374]
   Whitten D, 2006, DECISION SCI, V37, P605, DOI 10.1111/j.1540-5414.2006.00140.x
   Willcocks L, 2004, INFORM SYST MANAGE, V21, P7, DOI 10.1201/1078/44432.21.3.20040601/82471.2
   Yin RK, 2002, Applied Social Research Methods Series, V34
   Youndt MA, 2004, J MANAGE STUD, V41, P335, DOI 10.1111/j.1467-6486.2004.00435.x
NR 58
TC 41
Z9 48
U1 1
U2 46
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2014
VL 19
IS 5
BP 1225
EP 1258
DI 10.1007/s10664-013-9272-x
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AP9VT
UT WOS:000342429900003
DA 2024-07-18
ER

PT J
AU Revelle, M
   Gethers, M
   Poshyvanyk, D
AF Revelle, Meghan
   Gethers, Malcom
   Poshyvanyk, Denys
TI Using structural and textual information to capture feature coupling in
   object-oriented software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Feature coupling; Information retrieval; Latent Semantic Indexing;
   Program comprehension; Open source software; Fault-proneness
ID EMPIRICAL VALIDATION; FAULT-PRONENESS; METRICS; QUALITY; COHESION;
   SYSTEMS
AB Previous studies have demonstrated the relationship between coupling and external software quality attributes, such as fault-proneness, and the application of coupling to software maintenance tasks, such as impact analysis. These previous studies concentrate on class coupling. However, there is a growing focus on the study of features in software, and features are often implemented across multiple classes, meaning class-level coupling measures are not applicable. We ask the pertinent question, "Is measuring coupling at the feature-level also useful?" We define new feature coupling metrics based on structural and textual source code information and extend the unified framework for coupling measurement to include these new metrics. We also conduct three extensive case studies to evaluate these new metrics and answer this research question. The first study examines the relationship between feature coupling and fault-proneness, the second assesses feature coupling in the context of impact analysis, and the third study surveys developers to determine if the metrics align with what they consider to be coupled features. All three studies provide evidence that feature coupling metrics are indeed useful new measures that capture coupling at a higher level of abstraction than classes and can be useful for finding bugs, guiding testing effort, and assessing change impact.
C1 [Revelle, Meghan; Gethers, Malcom; Poshyvanyk, Denys] Coll William & Mary, Williamsburg, VA 23187 USA.
C3 William & Mary
RP Poshyvanyk, D (corresponding author), Coll William & Mary, Williamsburg, VA 23187 USA.
EM meghan@cs.wm.edu; mgethers@cs.wm.edu; denys@cs.wm.edu
OI Poshyvanyk, Denys/0000-0002-5626-7586
FU NSF [CCF-1016868, CCF-0916260]; AFOSR [FA9550-07-1-0030]; Direct For
   Computer & Info Scie & Enginr; Division of Computing and Communication
   Foundations [1156401, 1016868] Funding Source: National Science
   Foundation; Direct For Computer & Info Scie & Enginr; Division of
   Computing and Communication Foundations [0916260] Funding Source:
   National Science Foundation
FX We are grateful to the anonymous reviewers for their relevant and useful
   comments and suggestions, which helped us in significantly improving the
   initial version of this paper. We thank Trevor Savage for developing
   FLAT<SUP>3</SUP> tool, which incorporates source code from the open
   source projects ConcernMapper and ConcernTagger. FLAT<SUP>3</SUP> also
   uses visualization ideas from AspectBrowser. We also acknowledge Maksym
   Petrenko for his help with JRipples, Bogdan Dit for collecting execution
   traces for Rhino, and thank many academic researchers and industrial
   practitioners who responded to our survey. This work was supported in
   part by NSF CCF-1016868, NSF CCF-0916260, and AFOSR FA9550-07-1-0030
   grants and the start-up package provided by the College of William and
   Mary in Virginia. Any opinions, findings, and conclusions expressed
   herein are the authors' and do not necessarily reflect those of the
   sponsors.
CR ABREU F, 2000, CSMR, P13
   AHO AV, 1995, 3 ACM SIGSOFT S FDN, P2
   [Anonymous], 1983, INTRO MODERN INFORM
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Briand L, 1997, PROC INT CONF SOFTW, P412, DOI 10.1145/253228.253367
   BRIAND L, 1999, IEEE INT C SOFTW MAI, P475, DOI DOI 10.1109/ICSM.1999.792645
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   BUCKNER J, 2005, 13 IEEE INT WORKSH P, V5, P149
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   CHURCHER NI, 1995, SOFTWARE ENG NOTES, V20, P69
   Cleary B, 2009, EMPIR SOFTW ENG, V14, P93, DOI 10.1007/s10664-008-9095-3
   Cohen J., 1988, STAT POWER ANAL BEHA
   Darcy DP, 2005, IEEE SOFTWARE, V22, P17, DOI 10.1109/MS.2005.160
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   EADDY M, 2008, EMPIRICAL ASSESSMENT, P196
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Eder J., 1994, Coupling and cohesion in objectoriented systems
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Fluri B, 2009, SOFTWARE QUAL J, V17, P367, DOI 10.1007/s11219-009-9075-x
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   GEIGER R, 2006, 9 INT C FUND APPR SO
   Geipel MM, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P269, DOI 10.1145/1595696.1595739
   GETHERS M, 2010, 26 IEEE INT C SOFTW
   GIROUX O, 2006, 14 ACM SIGSOFT INT S, P163
   Greevy O, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P314, DOI 10.1109/CSMR.2005.21
   Greevy O, 2006, J SOFTW MAINT EVOL-R, V18, P425, DOI 10.1002/smr.340
   GRIFFETH ND, 1993, COMPUTER, V26, P14, DOI 10.1109/2.223538
   Griss ML, 2000, SPRINGER INT SER ENG, V576, P271
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hill E., 2007, Proceedings of the 22nd International Conference on Automated Software Engineering, P14
   Hitz Martin, 1995, P INT S APPL CORP CO
   JIANG H, 2008, 23 IEEE ACM INT C AU
   Jin ZY, 1996, SECOND IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS, P10, DOI 10.1109/ICECCS.1996.558321
   Kagdi H., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P119, DOI 10.1109/WCRE.2010.21
   Kan S. H., 2003, METRICS MODELS SOFTW
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   KOSCHKE R, 2005, 20 IEEE ACM INT C AU, P86
   KOTHARI J, 2008, IEEE INT C SOFTW MAI, V8, P7
   KOTHARI J, 2006, 13 IEEE WORK C REV E
   KOTHARI J, 2007, IEEE INT C PROGRM CO
   Kramer S, 2004, ACM T SOFTW ENG METH, V13, P332, DOI 10.1145/1027092.1027094
   LEE YS, 1995, INT C SOFTW QUAL ICS
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Lienhard A, 2007, INT C PROGRAM COMPRE, P59
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Lormans M, 2008, EMPIR SOFTW ENG, V13, P727, DOI 10.1007/s10664-008-9078-4
   Marcus A, 2005, PROC IEEE INT CONF S, P133
   Marcus A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P107, DOI 10.1109/ASE.2001.989796
   Marcus A, 2005, INT J SOFTW ENG KNOW, V15, P811, DOI 10.1142/S0218194005002543
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Marin M, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P31, DOI 10.1109/WCRE.2007.22
   Martin R., 1994, WORKSH PRAGM THEOR D
   McGraw KO, 1996, PSYCHOL METHODS, V1, P30, DOI 10.1037/1082-989X.1.1.30
   Mende T, 2009, J SOFTW MAINT EVOL-R, V21, P143, DOI 10.1002/smr.402
   Meyers TM, 2007, ACM T SOFTW ENG METH, V17, DOI 10.1145/1314493.1314495
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   ORSO A, 2004, IEEE ACM INT C SOFTW, P776
   Petrenko M, 2009, INT C PROGRAM COMPRE, P10, DOI 10.1109/ICPC.2009.5090023
   Porter MF, 2006, PROGRAM-ELECTRON LIB, V40, P211, DOI [10.1108/00330330610681286, 10.1108/eb046814]
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Poshyvanyk D, 2006, PROC IEEE INT CONF S, P469
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Ratiu D, 2006, WORK CONF REVERSE EN, P83
   Ratiu D, 2007, INT C PROGRAM COMPRE, P91
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Revelle M, 2005, PROG COMPREHEN, P23, DOI 10.1109/WPC.2005.43
   Revelle Meghan, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P14, DOI 10.1109/ICPC.2010.10
   Revelle M, 2009, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2009.5090045
   Robillard M.P., 2007, EMPIRICAL STUDY CONC
   Robillard MP, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1189748.1189751
   Salah M, 2005, PROC IEEE INT CONF S, P639
   Savage T., 2010, 32nd ACM/IEEE International Conference on Software Engineering (ICSE'10), Cape Town, South Africa, P255
   Sherriff Mark, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P268, DOI 10.1109/ICST.2008.25
   Sirkin R., 2005, STAT SOCIAL SCI
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Tairas R, 2009, EMPIR SOFTW ENG, V14, P33, DOI 10.1007/s10664-008-9089-1
   Tarr P., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P107, DOI 10.1109/ICSE.1999.841000
   Ujházi B, 2010, IEEE INT WORK C SO, P33, DOI 10.1109/SCAM.2010.14
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   Wilkie FG, 2000, J SYST SOFTWARE, V52, P157, DOI 10.1016/S0164-1212(99)00142-9
   Wong WE, 2005, J SYST SOFTWARE, V74, P283, DOI 10.1016/j.jss.2004.02.029
   Ye Y., 2005, Automated Software Engineering, V12, P199, DOI 10.1007/s10515-005-6206-x
   Yin R.K., 2011, Qualitative research from start to finish
   Yu ZF, 2001, PROG COMPREHEN, P293, DOI 10.1109/WPC.2001.921739
   Zaidman A, 2006, INT C PROGRAM COMPRE, P74, DOI 10.1109/ICPC.2006.26
   ZAVE P, 1993, COMPUTER, V26, P20, DOI 10.1109/2.223539
   ZHAO J, 2004, 10 IEEE INT SOFTW ME
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
   ZOO L, 2007, 15 IEEE INT C PROGR, P135
NR 106
TC 38
Z9 42
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2011
VL 16
IS 6
BP 773
EP 811
DI 10.1007/s10664-011-9159-7
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 819IX
UT WOS:000294819700003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Durillo, JJ
   Zhang, YY
   Alba, E
   Harman, M
   Nebro, AJ
AF Durillo, Juan J.
   Zhang, Yuanyuan
   Alba, Enrique
   Harman, Mark
   Nebro, Antonio J.
TI A study of the bi-objective next release problem
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Search based software engineering; Multi-objective optimization; Next
   release; Requirements engineering
ID AUTOMATED SELECTION; GENETIC ALGORITHM; SOFTWARE; EVOLUTIONARY;
   OPTIMIZATION; COST
AB One important issue addressed by software companies is to determine which features should be included in the next release of their products, in such a way that the highest possible number of customers get satisfied while entailing the minimum cost for the company. This problem is known as the Next Release Problem (NRP). Since minimizing the total cost of including new features into a software package and maximizing the total satisfaction of customers are contradictory objectives, the problem has a multi-objective nature. In this work, we apply three state-of-the-art multi-objective metaheuristics (two genetic algorithms, NSGA-II and MOCell, and one evolutionary strategy, PAES) for solving NRP. Our goal is twofold: on the one hand, we are interested in analyzing the results obtained by these metaheuristics over a benchmark composed of six academic problems plus a real world data set provided by Motorola; on the other hand, we want to provide insight about the solution to the problem. The obtained results show three different kinds of conclusions: NSGA-II is the technique computing the highest number of optimal solutions, MOCell provides the product manager with the widest range of different solutions, and PAES is the fastest technique (but with the least accurate results). Furthermore, we have observed that the best solutions found so far are composed of a high percentage of low-cost requirements and of those requirements that produce the largest satisfaction on the customers as well.
C1 [Durillo, Juan J.; Alba, Enrique; Nebro, Antonio J.] Univ Malaga, Dept Comp Sci, E-29071 Malaga, Spain.
   [Zhang, Yuanyuan; Harman, Mark] UCL, CREST Ctr, London, England.
C3 Universidad de Malaga; University of London; University College London
RP Durillo, JJ (corresponding author), Univ Malaga, Dept Comp Sci, E-29071 Malaga, Spain.
EM durillo@lcc.uma.es; yuanyuan.zhang@cs.ucl.ac.uk; eat@lcc.uma.es;
   m.harman@cs.ucl.ac.uk; antonio@lcc.uma.es
RI Nebro, Antonio J./AAI-1976-2019; Alba, Enrique/KCZ-2486-2024; Durillo,
   Juan J./L-3071-2014; Alba, Enrique/L-8604-2014
OI Nebro, Antonio J./0000-0001-5580-0484; Durillo, Juan
   J./0000-0002-8023-6392; Harman, Mark/0000-0002-5864-4488; Alba,
   Enrique/0000-0002-5520-8875
FU "Consejeria de Innovacion, Ciencia y Empresa", Junta de Andalucia
   [P07-TIC-03044]; Spanish Ministry of Science and Innovation; FEDER
   [TIN2008-06491-C04-01]; Spanish Ministry of Education and Science
   [AP-2006-03349]; EPSRC [EP/G060525, EP/D050863]
FX J. J. Durillo, A. Nebro, and E. Alba acknowledge founds from the
   "Consejeria de Innovacion, Ciencia y Empresa", Junta de Andalucia under
   contract P07-TIC-03044 DIRICOM project (http://diricom.lcc.uma.es), and
   the Spanish Ministry of Science and Innovation and FEDER under contract
   TIN2008-06491-C04-01 (the M* project). J. J. Durillo is also supported
   by grant AP-2006-03349 from the Spanish Ministry of Education and
   Science. Mark Harman is partly supported by EPSRC grants EP/G060525
   (CREST: Centre for Research on Evolution, Search and Testing, Platform
   Grant), and EP/D050863 (SEBASE: Software Engineering By Automated
   SEarch), which also fully supports Yuanyuan Zhang.
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Alba E, 2007, INFORM SCIENCES, V177, P2380, DOI 10.1016/j.ins.2006.12.020
   Alba E, 2008, OPER RES COMPUT SCI, V42, pVII
   AlBourae T., 2006, 2006 International Workshop on Software Product Management (IWSPM'06 - RE'06 Workshop), P27, DOI DOI 10.1109/IWSPM.2006.5
   [Anonymous], 2006, 214 TIK ETH ZUR
   [Anonymous], TR0903
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   Baker P, 2006, PROC IEEE INT CONF S, P176
   Cortellessa V, 2008, J UNIVERS COMPUT SCI, V14, P1228
   Cortellessa V, 2008, COMPUT OPER RES, V35, P3090, DOI 10.1016/j.cor.2007.01.011
   Cortellessa V, 2006, LECT NOTES COMPUT SC, V4344, P66
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2001, WIL INT S SYS OPT
   Del Grosso C, 2005, GECCO 2005: Genetic and Evolutionary Computation Conference, Vols 1 and 2, P1037
   Durillo JJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P49, DOI 10.1109/SSBSE.2009.21
   DURILLO JJ, 2006, ITI200610 ETSI U MAL
   Everson RM, 2006, IEEE T EVOLUT COMPUT, V10, P187, DOI 10.1109/TEVC.2005.856067
   Feather MS, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P263, DOI 10.1109/ICRE.2002.1048537
   Finkelstein A, 2009, REQUIR ENG, V14, P231, DOI 10.1007/s00766-009-0075-y
   Finkelstein A, 2008, INT REQUIR ENG CONF, P115, DOI 10.1109/RE.2008.61
   Greer D, 2004, INFORM SOFTWARE TECH, V46, P243, DOI 10.1016/j.infsof.2003.07.002
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1951
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1098
   Karlsson J, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P110, DOI 10.1109/ICRE.1996.491435
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   Kendall M., 1990, Correlation methods
   Khoshgoftaar TM, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P159, DOI 10.1109/METRIC.2004.1357900
   Knowles J, 1999, P 1999 C EV COMP CEC, P98, DOI [DOI 10.1109/CEC.1999.781913, 10.1109/cec.1999.781913]
   KOREL B, 1990, IEEE T SOFTWARE ENG, V16, P870, DOI 10.1109/32.57624
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Miller W., 1976, IEEE Transactions on Software Engineering, VSE-2, P223, DOI 10.1109/TSE.1976.233818
   Nebro AJ, 2007, LECT NOTES COMPUT SC, V4403, P126
   Nebro AJ, 2009, INT J INTELL SYST, V24, P726, DOI 10.1002/int.20358
   Ruhe G, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P262, DOI 10.1109/ISESE.2003.1237987
   Ruhe G., 2004, International Journal of Hybrid Intelligent Systems, V1, P99
   Saaty T.L., 1980, ANAL HIERARCHY PROCE
   Saliu M.O., 2007, P 6 JOINT M EUROPEAN, P105, DOI DOI 10.1145/1287624.1287641
   SULLIVAN LP, 1986, QUAL PROG, V19, P39
   WALCOTT KR, 2006, INT S SOFTW TEST AN, P1
   Xanthakis S., 1992, 5 INT C SOFTWARE ENG, P625
   YEH R, 1990, SYSTEM SOFTWARE REQU, P450
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
   Zhang Y, 2008, LECT NOTES COMPUT SC, V5025, P88, DOI 10.1007/978-3-540-69062-7_8
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
NR 48
TC 50
Z9 55
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2011
VL 16
IS 1
BP 29
EP 60
DI 10.1007/s10664-010-9147-3
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 718CJ
UT WOS:000287097200003
DA 2024-07-18
ER

PT J
AU Zou, XC
   Settimi, R
   Cleland-Huang, J
AF Zou, Xuchang
   Settimi, Raffaella
   Cleland-Huang, Jane
TI Improving automated requirements trace retrieval: a study of term-based
   enhancement methods
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements traceability; Requirements management; Information
   retrieval models
ID TRACEABILITY; MODEL
AB Automated requirements traceability methods that utilize Information Retrieval (IR) methods to generate and maintain traceability links are often more efficient than traditional manual approaches, however the traces they generate are imprecise and significant human effort is needed to evaluate and filter the results. This paper investigates and compares three term-based enhancement methods that are designed to improve the performance of a probabilistic automated tracing tool. Empirical studies show that the enhancement methods can be effective in increasing the accuracy of the retrieved traces; however the effectiveness of each method varies according to specific project characteristics. The analysis of such characteristics has lead to the development of two new project-level metrics which can be used to predict the effectiveness of each enhancement method for a given data set. A procedure to automatically extract critical keywords and phrases from a set of traceable artifacts is also presented to enhance the automated trace retrieval algorithm. The procedure is tested on two new datasets.
C1 [Settimi, Raffaella; Cleland-Huang, Jane] Depaul Univ, Sch Comp, Syst & Requirements Engn Ctr, Chicago, IL 60604 USA.
C3 DePaul University
RP Settimi, R (corresponding author), Depaul Univ, Sch Comp, Syst & Requirements Engn Ctr, Chicago, IL 60604 USA.
EM xzou@cdm.depaul.edu; rsettimi@cdm.depaul.edu; jhuang@cdm.depaul.edu
FU NSF [CCR-0306303, CCF0810924]
FX The work described in this paper was partially funded by NSF grants
   CCR-0306303 and CCF0810924.
CR [Anonymous], P 11 ANN INT ACM SIG
   Antoniol G, 2000, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2000.883003
   Borger E., 2000, Journal of Universal Computer Science, V6, P580
   Burke R., 1997, AAAI SPRING S NATURA, P17
   Church K.W., 1990, WORD ASS NORMS MUTUA, V16, P22
   Cleland-Huang J, 2005, PROC INT CONF SOFTW, P362
   Cleland-Huang J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P135, DOI 10.1109/RE.2005.78
   CROFT WB, 1991, P 14 ANN INT ACM SIG, P32, DOI DOI 10.1145/122860.122864
   Cronen-Townsend S., 2002, Proceedings of SIGIR 2002. Twenty-Fifth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P299
   Davis A.M., 1990, SOFTWARE REQUIREMENT
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2009, EMPIR SOFTW ENG, V14, P57, DOI 10.1007/s10664-008-9090-8
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dekhtyar A, 2007, INT REQUIR ENG CONF, P141, DOI 10.1109/RE.2007.17
   Evans M., 1989, SOFTWARE FACTORY
   Fagan J., 1987, Technical Report, P87
   Fellbaum C., 1998, WORDNET ELECT LEXICA, DOI DOI 10.7551/MITPRESS/7287.001.0001
   FORSYTHE GE, 1977, COMPUTER METHODS MAT, pCH9
   Frakes WB., 1992, Information retrieval: Data structures and algorithms
   GAY LS, 1990, INFORM PROCESS MANAG, V26, P21, DOI 10.1016/0306-4573(90)90007-O
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Guan LM, 2006, PROCEEDINGS OF THE 2006 IEEE/ASME INTERNATIONAL CONFERENCE ON MECHATRONIC AND EMBEDDED SYSTEMS AND APPLICATIONS, P11
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   *INT DEV ENV, 1991, SOFTW PICT PROD SERV
   JOHO H, 2007, P 8 RECH INF ASS ORD
   KAINDL H, 1993, ACM SOFTWARE ENG NOT, V18, P30
   Maletic J.I., 2003, 2nd International Workshop on Traceability in Emerging Forms of Software Engineering (TEFSE'03), P47
   Marchal D, 2003, J STRUCT GEOL, V25, P135, DOI 10.1016/S0191-8141(02)00011-1
   Matsuo Y., 2004, International Journal on Artificial Intelligence Tools (Architectures, Languages, Algorithms), V13, P157, DOI 10.1142/S0218213004001466
   *PROMISE, 2008, SOFTW ENG REP
   Robertson S, 2012, Mastering the requirements process: getting requirements right
   Rocchio J., 1971, SMART RETRIEVAL SYST, P313
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   SALTON G, 1975, J AM SOC INFORM SCI, V26, P33, DOI 10.1002/asi.4630260106
   Settimi R, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P49, DOI 10.1109/IWPSE.2004.1334768
   SINGH AP, 1999, P INT C INTELL SYST, V7, P252
   Sparck Jones K., 1976, Journal of Documentation, V32, P59, DOI 10.1108/eb026616
   TUFIS D, 1998, P 1 INT C LANG RES E, P589
   WONG SKM, 1991, INFORM SYST, V16, P301, DOI 10.1016/0306-4379(91)90003-R
   Xuchang Zou, 2008, Proceedings of the 2008 International Conference on Software Engineering Research & Practice, P157
   ZOU X, 2007, P INT S GRAND CHALL, P40
   ZOU X, 2009, THESIS DEPAUL U CHIC
   Zou XC, 2006, P INT COMP SOFTW APP, P265
NR 45
TC 53
Z9 72
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2010
VL 15
IS 2
BP 119
EP 146
DI 10.1007/s10664-009-9114-z
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 570VH
UT WOS:000275705900001
DA 2024-07-18
ER

PT J
AU Hewett, R
   Kijsanayothin, P
AF Hewett, Rattikorn
   Kijsanayothin, Phongphun
TI On modeling software defect repair time
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Quality assurance; Software testing; Testing management; Defect report
   analysis; Data mining
AB The ability to predict the time required to repair software defects is important for both software quality management and maintenance. Estimated repair times can be used to improve the reliability and time-to-market of software under development. This paper presents an empirical approach to predicting defect repair times by constructing models that use well-established machine learning algorithms and defect data from past software defect reports. We describe, as a case study, the analysis of defect reports collected during the development of a large medical software system. Our predictive models give accuracies as high as 93.44%, despite the limitations of the available data. We present the proposed methodology along with detailed experimental results, which include comparisons with other analytical modeling approaches.
C1 [Hewett, Rattikorn; Kijsanayothin, Phongphun] Texas Tech Univ, Dept Comp Sci, Abilene, TX 79601 USA.
C3 Texas Tech University System; Texas Tech University
RP Hewett, R (corresponding author), Texas Tech Univ, Dept Comp Sci, 302 Pine St, Abilene, TX 79601 USA.
EM Rattikorn.Hewett@ttu.edu; pkijsana@cs.ttu.edu
CR Andrews A, 2001, SOFTWARE QUAL J, V9, P195, DOI 10.1023/A:1013353520454
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 1998, STAT LEARNING THEORY
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Challagulla V. U. B., 2005, P 10 IEEE INT WORKSH
   Cristianini N., 2000, INTRO SUPPORT VECTOR
   Culbertson R., 2001, RAPID TESTING
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Furey TS, 2000, BIOINFORMATICS, V16, P906, DOI 10.1093/bioinformatics/16.10.906
   GALEN R, 2005, SOFTWARE ENDGAMES EL
   GOKHALE S, 2006, P 17 IEEE INT S SOFT
   Han J., 2006, DATA MINING CONCEPTS
   Haykin S.S., 1995, Neural networks. A comprehensive foundation
   HEWETT R, 2006, P 15 INT C SOFTW ENG
   HEWETT R, 2006, P 18 INT C SOFTW ENG
   Huang J, 2005, IEEE T KNOWL DATA EN, V17, P299, DOI 10.1109/TKDE.2005.50
   JOHNSONGENTILE K, 1994, J EDUC COMPUT RES, V11, P121, DOI 10.2190/49EE-8PXL-YY8C-A923
   KHOSHGOFTAAR TM, 1994, SOFTWARE QUAL J, V3, P137, DOI 10.1007/BF00402294
   Kleinrock L, 1976, Queueing Systems, V2
   Kohavi R, 1995, P EUR C MACH LEARN
   Lapin L.L., 1973, Statistics for Modern Business Decisions
   Larson R., 2007, URBAN OPERATIONS RES
   LI P, 2003, P 5 WORKSH EC DRIV S, P32
   MALAIYA YK, 1992, IEEE T RELIAB, V41, P539, DOI 10.1109/24.249581
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Mitchell T. M., 1997, MACHINE LEARNING
   MULLEN R, 2006, P 17 IEEE INT S SOFT
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   Quinlan J.R., 1993, C4.5 : programs for machine learning
   Ramaswamy S, 2001, P NATL ACAD SCI USA, V98, P15149, DOI 10.1073/pnas.211566398
   Schach SR, 1996, ACM COMPUT SURV, V28, P277, DOI 10.1145/234313.234422
   Schneidewind NF, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P185, DOI 10.1109/ISSRE.2001.989472
   Stringfellow C., 2002, Empirical Software Engineering, V7, P319, DOI 10.1023/A:1020515105175
   Witten I. H., 2005, DATA MINING PRACTICA
   YAMADA S, 1983, IEEE T RELIAB, V32, P475, DOI 10.1109/TR.1983.5221735
NR 36
TC 16
Z9 20
U1 1
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2009
VL 14
IS 2
BP 165
EP 186
DI 10.1007/s10664-008-9064-x
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 414VA
UT WOS:000263892100002
DA 2024-07-18
ER

PT J
AU Acuña, ST
   Gómez, M
   Juristo, N
AF Acuna, Silvia T.
   Gomez, Marta
   Juristo, Natalia
TI Towards understanding the relationship between team climate and software
   quality -: a quasi-experimental study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE work climate preferences; work climate perceptions; work climate
   preferences-perceptions fit; team climate; software quality
ID JOB-SATISFACTION; ORGANIZATIONAL-CLIMATE; PERFORMANCE; PERCEPTIONS;
   INNOVATION; MODELS
AB This paper describes an empirical study that examined the work climate within software development teams. The question was whether the team climate in software developer teams has any relation to software product quality. We define team climate as the shared perceptions of the team's work procedures and practices. The team climate factors examined were West and Anderson's participative safety, support for innovation, team vision and task orientation. These four factors were measured before the project using the Team Selection Inventory (TSI) test to establish subject climate preferences, as well as during and after the project using the Team Climate Inventory (TCI) test, which establishes the subject's perceptions of the climate. In this quasi-experimental study, data were collected from a sample of 35 three-member developer teams in an academic setting. These teams were formed at random and their members were blind to the quasi-experimental conditions and hypotheses. All teams used an adaptation of extreme programming (XP) to the students' environment to develop the same software system. We found that high team vision preferences and high participative safety perceptions of the team were significantly related to better software. Additionally, the results show that there is a positive relationship between the categorization of better than preferred, as preferred and worse than preferred climate and software quality for two of the teamwork climate factors: participative safety and team vision. So it seems important to track team climate in an organization and team as one (of many) indicators of the quality of the software to be delivered.
C1 [Acuna, Silvia T.] Univ Autonoma Madrid, E-28049 Madrid, Spain.
   [Gomez, Marta] Univ San Pablo CEU, Madrid 28668, Spain.
   [Juristo, Natalia] Univ Politecn Madrid, E-28660 Madrid, Spain.
C3 Autonomous University of Madrid; San Pablo CEU University; Universidad
   Politecnica de Madrid
RP Acuña, ST (corresponding author), Univ Autonoma Madrid, Calle Tomas & Valiente 11, E-28049 Madrid, Spain.
EM silvia.acunna@uam.es; mgomez.eps@ceu.es; natalia@fi.upm.es
RI Acuna, Silvia/A-7395-2008
OI Acuna, Silvia/0000-0003-2135-6113
CR Acuña ST, 2004, SOFTWARE PRACT EXPER, V34, P675, DOI 10.1002/spe.586
   Anderson N., 2003, TEAM SELECTION INVEN
   Anderson N.R., 1994, The team climate inventory: Manual and user's guide
   Anderson Neil., 1999, Team climate inventory : starter set
   Anderson NR, 1998, J ORGAN BEHAV, V19, P235, DOI 10.1002/(SICI)1099-1379(199805)19:3<235::AID-JOB837>3.0.CO;2-C
   [Anonymous], P C SIGCPR
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2002, Software Design-Cognitive Aspects
   [Anonymous], 1990, INNOVATION CREATIVIT
   [Anonymous], 1998, MANAGING TECHNICAL P
   [Anonymous], 2001, AGILE MANIFESTO
   [Anonymous], WORK GROUP CLIMATE D
   Barry B, 1997, J APPL PSYCHOL, V82, P62, DOI 10.1037/0021-9010.82.1.62
   BECK K, 1989, SIGPLAN NOTICES, V24, P1, DOI 10.1145/74878.74879
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Bentley JL, 2000, PROGRAMMING PEARLS
   Bostrom R. P., 1981, Proceedings of the Eighteenth Annual Computer Personnel Research Conference, P248, DOI 10.1145/800051.801855
   Brown SP, 1996, J APPL PSYCHOL, V81, P358, DOI 10.1037/0021-9010.81.4.358
   Burch G.S.J., 2004, Journal of Managerial Psychology, V19, P406
   Burdett G., 1995, Proceedings of the 1995 ACM SIGCPR Conference, P202, DOI 10.1145/212490.212599
   Chan D, 1998, J APPL PSYCHOL, V83, P234, DOI 10.1037/0021-9010.83.2.234
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Curral L.A., 2001, EUR J WORK ORGAN PSY, V10, P187, DOI [10.1080/13594320143000627, DOI 10.1080/13594320143000627]
   CURTIS B, 2001, CMUSEI2001MM001
   DeMarco T, 1999, PEOPLEWARE PRODUCTIV
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Fay D., 2004, Eur. J. Work Organ. Psychol., V13, P241, DOI DOI 10.1080/13594320444000083
   Hackman J., 1987, WORK REDESIGN
   Hardiman LT, 1997, COMPUTER, V30, P10, DOI 10.1109/MC.1997.625290
   Hoc J.-M., 1990, PSYCHOL PROGRAMMING
   HUMPHREY WS, 2005, SOFTWARE PROCESS MOD
   IEEE - Institute of Electrical and Electronics Engineers, 2004, GUID SOFTW ENG BOD K
   JAMES LR, 1980, PERS PSYCHOL, V33, P97, DOI 10.1111/j.1744-6570.1980.tb02167.x
   JAMES LR, 1986, J APPL PSYCHOL, V71, P77, DOI 10.1037/0021-9010.71.1.77
   Jarvenpaa SL, 1999, ORGAN SCI, V10, P791, DOI 10.1287/orsc.10.6.791
   Jedlitschka A., 2005, REPORTING GUIDELINES
   Jehn KA, 1997, ADMIN SCI QUART, V42, P530, DOI 10.2307/2393737
   Juristo N., 2013, BASICS SOFTWARE ENG
   Katzenbach J., 2001, DISCIPLINE TEAMS MIN
   Kellner MI, 1999, J SYST SOFTWARE, V46, P91, DOI 10.1016/S0164-1212(99)00003-5
   KENNY DA, 1985, J PERS SOC PSYCHOL, V48, P339, DOI 10.1037/0022-3514.48.2.339
   LAWLER EE, 1974, ORGAN BEHAV HUM PERF, V11, P139, DOI 10.1016/0030-5073(74)90010-5
   Litwin G.H., 1968, MOTIVATION ORG CLIMA
   MARTIN RC, 2000, EXTREME PROGRAMMING
   MATHIEU JE, 1993, ORGAN BEHAV HUM DEC, V56, P370, DOI 10.1006/obhd.1993.1060
   McDowell C, 2006, COMMUN ACM, V49, P90, DOI 10.1145/1145287.1145293
   Molleman E, 2004, SMALL GR RES, V35, P515, DOI 10.1177/1046496404264361
   Patterson M, 2004, J OCCUP ORGAN PSYCH, V77, P193, DOI 10.1348/096317904774202144
   Pfleeger S.L., 2001, SOFTWARE ENG THEORY, V2nd
   PRITCHARD RD, 1973, ORGAN BEHAV HUM PERF, V9, P126, DOI 10.1016/0030-5073(73)90042-1
   Reichers A.E., 1990, ORG CLIMATE CULTURE
   Rutherfoord R. H., 2001, SIGCSE Bulletin, V33, P73, DOI 10.1145/507758.377486
   Schneider B, 1998, J APPL PSYCHOL, V83, P150, DOI 10.1037/0021-9010.83.2.150
   SHAW ME, 1976, J PERS SOC PSYCHOL, V34, P412, DOI 10.1037/0022-3514.34.3.412
   Teague J., 1998, Proceedings of the Third Australasian Conference on Computer Science Education, P155, DOI 10.1145/289393.289416
   TUCKMAN BW, 1965, PSYCHOL BULL, V63, P384, DOI 10.1037/h0022100
   TURLEY RT, 1995, J SYST SOFTWARE, V28, P19, DOI 10.1016/0164-1212(94)00078-2
   UMPHRESS DA, 2002, SOFTWARE PROCESS CLA, P78
   West MA, 1996, J APPL PSYCHOL, V81, P680, DOI 10.1037/0021-9010.81.6.680
   WHITE KB, 1986, MIS QUART, V10, P215, DOI 10.2307/249253
   Wynekoop J. L., 2000, Information Technology & People, V13, P186, DOI 10.1108/09593840010377626
   Yang HL, 2004, INFORM MANAGE-AMSTER, V41, P335, DOI 10.1016/S0378-7206(03)00078-8
   Zakarian A, 1999, IIE TRANS, V31, P85, DOI 10.1080/07408179908969808
   Zander A., 1993, Making groups effective, V2nd
   Zuser W, 2003, 16TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P234, DOI 10.1109/CSEE.2003.1191382
NR 65
TC 43
Z9 44
U1 1
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2008
VL 13
IS 4
BP 401
EP 434
DI 10.1007/s10664-008-9074-8
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 343FK
UT WOS:000258838200003
DA 2024-07-18
ER

PT J
AU Molokken-Ostvold, K
   Jorgensen, M
AF Molokken-Ostvold, K
   Jorgensen, M
TI Expert estimation of web-development projects: Are software
   professionals in technical roles more optimistic than those in
   non-technical roles?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE effort estimation; web development; bidding process; individual
   differences
AB Estimating the effort required to complete web-development projects involves input from people in both technical (e.g., programming) and non-technical (e.g., user interaction design) roles. This paper examines how the employees' role and type of competence may affect their estimation strategy and performance. An analysis of actual web-development project data and results from an experiment suggest that people with technical competence provided less realistic project effort estimates than those with less technical competence. This means that more knowledge about how to implement a requirement specification does not always lead to better estimation performance. We discuss, amongst others, two possible reasons for this observation: (1) Technical competence induces a bottom-up, construction-based estimation strategy, while lack of this competence induces a more "outside" view of the project, using a top-down estimation strategy. An "outside" view may encourage greater use of the history of previous projects and reduce the bias towards over-optimism. (2) Software professionals in technical roles perceive that they are evaluated as more skilled when providing low effort estimates. A consequence of our findings is that the choice of estimation strategy, estimation evaluation criteria and feedback are important aspects to consider when seeking to improve estimation accuracy.
C1 Software Engn Dept, Simula Res Lab, N-1325 Lysaker, Norway.
RP Software Engn Dept, Simula Res Lab, N-1325 Lysaker, Norway.
EM kjetilmo@simula.no; magnej@simula.no
RI Jorgensen, Magne/H-4402-2016
CR [Anonymous], EUR J INF SYST
   Aronson E., 1999, Social psychology, V3rd
   ATKINSON K, 1994, EUR SOFTW COST MOD M
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Bowden P, 2000, J SYST SOFTWARE, V51, P87, DOI 10.1016/S0164-1212(99)00114-4
   BUEHLER R, 1994, J PERS SOC PSYCHOL, V67, P366, DOI 10.1037/0022-3514.67.3.366
   Christensen R., 1998, Analysis of variance, design and regression: applied statistical methods
   COHEN J., 1969, Statistical power analysis
   HENRY RA, 1994, ORGAN BEHAV HUM DEC, V57, P210, DOI 10.1006/obhd.1994.1012
   Hughes RT, 1996, INFORM SOFTWARE TECH, V38, P67, DOI 10.1016/0950-5849(95)01045-9
   Jorgensen M, 2004, INFORM SOFTWARE TECH, V46, P3, DOI 10.1016/S0950-5349(03)00093-4
   Jorgensen M, 2002, J SOFTW MAINT EVOL-R, V14, P123, DOI 10.1002/smr.248
   Jorgensen M, 2001, INFORM SOFTWARE TECH, V43, P939, DOI 10.1016/S0950-5849(01)00203-8
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M., 1997, NORW INF C VOSS NORW
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   KUSTERS RJ, 1990, INFORM SOFTWARE TECH, V32, P187, DOI 10.1016/0950-5849(90)90176-R
   Lederer AL, 2000, J SYST SOFTWARE, V50, P33, DOI 10.1016/S0164-1212(99)00074-6
   LICHTENSTEIN S, 1977, ORGAN BEHAV HUM PERF, V20, P159, DOI 10.1016/0030-5073(77)90001-0
   MCDONALD A, 2001, P 4 WWW10 WORKSH WEB
   Molokken-Ostvold K, 2004, EMPIR SOFTW ENG, V9, P315, DOI 10.1023/B:EMSE.0000039882.39206.5a
   MOLOKKENOSTVOLD K, 2003, P ISESE 2003 IEEE
   MOSES J, 2000, 24 ANN INT COMP SOFT
   MUKHOPADHYAY T, 1992, MIS QUART, V16, P155, DOI 10.2307/249573
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   Ohlsson MC, 1998, INFORM SOFTWARE TECH, V40, P831, DOI 10.1016/S0950-5849(98)00097-4
   PENGELLY A, 1995, SOFTWARE ENG J, V10, P162, DOI 10.1049/sej.1995.0022
   Reifer DJ, 2000, IEEE SOFTWARE, V17, P57, DOI 10.1109/52.895169
   ROSENFELD L, 1998, INFORMATION ARCHITEC
   Siegel S., 1988, NON PARAMETRIC STAT
   Vicinanza SS, 1991, INFORM SYST RES, V2, P243, DOI 10.1287/isre.2.4.243
   WALKERDEN F, 1999, J EMPIRICAL SOFTWARE, V4, P135
   Walkerden F., 1997, ADV COMPUT, V44, P59, DOI DOI 10.1016/S0065-2458(08)60337-X
   Whyte G, 1997, ORGAN BEHAV HUM DEC, V69, P75, DOI 10.1006/obhd.1996.2674
   Wiegers K, 1999, IEEE SOFTWARE, V16, P78, DOI 10.1109/52.776953
   Wonnacott TH., 1990, INTRO STAT
NR 36
TC 28
Z9 28
U1 1
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2005
VL 10
IS 1
BP 7
EP 29
DI 10.1023/B:EMSE.0000048321.46871.2e
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 895IY
UT WOS:000226855600001
DA 2024-07-18
ER

PT J
AU Piskachev, G
   Becker, M
   Bodden, E
AF Piskachev, Goran
   Becker, Matthias
   Bodden, Eric
TI Can the configuration of static analyses make resolving security
   vulnerabilities more effective? - A user study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Static analysis; Security; User study; Empirical research; SAST
AB The use of static analysis security testing (SAST) tools has been increasing in recent years. However, previous studies have shown that, when shipped to end users such as development or security teams, the findings of these tools are often unsatisfying. Users report high numbers of false positives or long analysis times, making the tools unusable in the daily workflow. To address this, SAST tool creators provide a wide range of configuration options, such as customization of rules through domain-specific languages or specification of the application-specific analysis scope. In this paper, we study the configuration space of selected existing SAST tools when used within the integrated development environment (IDE). We focus on the configuration options that impact three dimensions, for which a trade-off is unavoidable, i.e., precision, recall, and analysis runtime. We perform a between-subjects user study with 40 users from multiple development and security teams - to our knowledge, the largest population for this kind of user study in the software engineering community. The results show that users who configure SAST tools are more effective in resolving security vulnerabilities detected by the tools than those using the default configuration. Based on post-study interviews, we identify common strategies that users have while configuring the SAST tools to provide further insights for tool creators. Finally, an evaluation of the configuration options of two commercial SAST tools, Fortify and CheckMarx, reveals that a quarter of the users do not understand the configuration options provided. The configuration options that are found most useful relate to the analysis scope.
C1 [Piskachev, Goran; Becker, Matthias; Bodden, Eric] Fraunhofer IEM, Paderborn, Germany.
   [Piskachev, Goran] Amazon Web Serv, Berlin, Germany.
   [Bodden, Eric] Paderborn Univ, Dept Comp Sci, Paderborn, Germany.
C3 University of Paderborn
RP Piskachev, G (corresponding author), Fraunhofer IEM, Paderborn, Germany.; Piskachev, G (corresponding author), Amazon Web Serv, Berlin, Germany.
EM gpiskach@amazon.de
RI Bodden, Eric/AAE-1365-2021
OI Bodden, Eric/0000-0003-3470-3647; Piskachev, Goran/0000-0003-4424-5838
FU project "AppSecure.nrw - Security-byDesign of Java-based Applications"
   of the European RegionalDevelopment Fund [ERDF-0801379]
FX We gratefully acknowledge the funding by the project "AppSecure.nrw -
   Security-byDesign of Java-based Applications" of the European
   RegionalDevelopment Fund (ERDF-0801379). We thank Ranjith Krishnamurthy
   and Oshando Johnson for their work on the user study
CR Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Benchmark O, 2021, BENCHM O
   Charness G, 2012, J ECON BEHAV ORGAN, V81, P1, DOI 10.1016/j.jebo.2011.08.009
   Checkmarx, 2021, CHECKMARX
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Cook T. D., 1979, QUASIEXPERIMENTATION
   Do LNQ, 2022, IEEE T SOFTWARE ENG, V48, P835, DOI 10.1109/TSE.2020.3004525
   Do LNQ, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P307, DOI 10.1145/3092703.3092705
   Github S, 2021, LGTM ONL
   Gordon MI, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23089
   Grammatech, 2021, COD
   Habib A, 2018, IEEE INT CONF AUTOM, P317, DOI 10.1145/3238147.3238213
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kruger Stefan, 2018, EUR C OBJ OR PROGR E, V10, P1
   Lee W, 2017, ACM T PROGR LANG SYS, V39, DOI 10.1145/3095021
   Luo LH, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P102, DOI 10.1109/ASE.2019.00020
   Luo Linghui, 2019, 33 EUROPEAN C OBJECT, V21, P1, DOI DOI 10.4230/LIPICS.ECOOP.2019.21,HTTP://DROPS.DAGSTUHL.DE/OPUS/VOLLTEXTE/2019/10813
   Microfocus, 2021, FORT
   Mitre CWE, 2021, 2011 CWE SANS TOP 25
   Mitre CWE, IMPR NEUTR SPEC EL U
   Murphy -Hill Emerson, 2016, 12 S US PRIV SEC SOU
   Naiakshina A, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376791
   Naiakshina A, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300370
   Naiakshina A, 2018, PROCEEDINGS OF THE FOURTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, P297
   Naiakshina A, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P311, DOI 10.1145/3133956.3134082
   Nguyen Quang Do L, 2020, IEEE T SOFTWARE ENG, P1, DOI DOI 10.1109/TSE.2020.3004525
   Patnaik N, 2019, PROCEEDINGS OF THE FIFTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2019), P245
   Piskachev G, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10165-y
   Piskachev G, 2021, IEEE INT WORK C SO, P24, DOI 10.1109/SCAM52516.2021.00012
   Piskachev G, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P181, DOI 10.1145/3293882.3330556
   Qiu LN, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P176, DOI 10.1145/3213846.3213873
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Smith J, 2020, P 16 S US PRIV SEC S
   Smith J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P248, DOI 10.1145/2786805.2786812
   Snyk, 2021, DEEPC
   SonarSource, 2021, SON
   Vassallo C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P38, DOI 10.1109/SANER.2018.8330195
   Veracode, 2021, VERACODE
   WebGoat, 2021, OW WEBG
   Wei FS, 2018, ANALYTICAL METHODS FOR FOOD SAFETY BY MASS SPECTROMETRY, VOL II VETERINARY DRUGS, P1, DOI [10.1016/B978-0-12-814165-6.00001-4, 10.1145/3183575]
   Witschey J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P260, DOI 10.1145/2786805.2786816
   Zampetti F, 2017, IEEE WORK CONF MIN S, P334, DOI 10.1109/MSR.2017.2
   Zhang X, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133881
NR 44
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2023
VL 28
IS 5
AR 118
DI 10.1007/s10664-023-10354-3
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R5IV5
UT WOS:001064695600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Malik, J
   Pastore, F
AF Malik, Jahanzaib
   Pastore, Fabrizio
TI An empirical study of vulnerabilities in edge frameworks to support
   security testing improvement
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Security testing; Edge computing; Empirical study
AB Edge computing is a distributed computing paradigm aiming at ensuring low latency in modern data intensive applications (e.g., video streaming and IoT). It consists of deploying computation and storage nodes close to the end-users. Unfortunately, being distributed and close to end-users, Edge systems have a wider attack surface (e.g., they may be physically reachable) and are more complex to update than other types of systems (e.g., Cloud systems) thus requiring thorough security testing activities, possibly tailored to be cost-effective. To support the development of effective and automated Edge security testing solutions, we conducted an empirical study of vulnerabilities affecting Edge frameworks. The study is driven by eight research questions that aim to determine what test triggers, test harnesses, test oracles, and input types should be considered when defining new security testing approaches dedicated to Edge systems. preconditions and inputs leading to a successful exploit, the security properties being violated, the most frequent vulnerability types, the software behaviours and developer mistakes associated to these vulnerabilities, and the severity of Edge vulnerabilities. We have inspected 147 vulnerabilities of four popular Edge frameworks. Our findings indicate that vulnerabilities slip through the testing process because of the complexity of the Edge features. Indeed, they can't be exhaustively tested in-house because of the large number of combinations of inputs, outputs, and interfaces to be tested. Since we observed that most of the vulnerabilities do not affect the system integrity and, further, only one action (e.g., requesting a URL) is sufficient to exploit a vulnerability
C1 [Malik, Jahanzaib; Pastore, Fabrizio] Univ Luxembourg, SnT Ctr, 29 Ave John F Kennedy, Luxembourg, Luxembourg.
C3 University of Luxembourg
RP Pastore, F (corresponding author), Univ Luxembourg, SnT Ctr, 29 Ave John F Kennedy, Luxembourg, Luxembourg.
EM jahanzaib.malik@uni.lu; fabrizio.pastore@uni.lu
RI Pastore, Fabrizio/ABY-9262-2022
OI Pastore, Fabrizio/0000-0003-3541-3641; Malik,
   Jahanzaib/0000-0001-6570-9529
FU SES Luxembourg; Luxembourg National Research Fund (FNR) under the
   project INSTRUCT (Luxembourg National Research Fund)
FX This work has been supported by SES Luxembourg (2023) and the Luxembourg
   National Research Fund (FNR) under the project INSTRUCT (Luxembourg
   National Research Fund 2022).
CR Alwarafy A, 2021, IEEE INTERNET THINGS, V8, P4004, DOI 10.1109/JIOT.2020.3015432
   Ammann P., 2016, Introduction to software testing, DOI DOI 10.1017/9781316771273
   Analysis Tools team, 2022, STAT AN TOOLS GO
   Apache foundation, 2022, US
   Ardagna CA, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2767005
   ARM, 2022, MICR INFR MAN
   Austin A, 2013, INFORM SOFTWARE TECH, V55, P1279, DOI 10.1016/j.infsof.2012.11.007
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Aysan Huseyin, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P1309, DOI 10.1109/COMPSAC.2008.99
   Bai T, 2020, IEEE J SEL AREA COMM, V38, P2666, DOI 10.1109/JSAC.2020.3007035
   Barr ET, 2015, IEEE T SOFTWARE ENG, V41, P507, DOI 10.1109/TSE.2014.2372785
   Bertolino A, 2007, SOFTWARE ENG, P106
   Bertolino A, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3447240
   Bertolino A, 2012, COMPUTER, V45, P66, DOI 10.1109/MC.2011.227
   Blessing J., 2021, arXiv, DOI [10.48550/arXiv.2107.04940,arXiv., DOI 10.48550/ARXIV.2107.04940,ARXIV]
   Bondavalli A., 1990, Proceedings. Second IEEE Workshop on Future Trends of Distributed Computing Systems, P47, DOI 10.1109/FTDCS.1990.138293
   Catolino G, 2019, J SYST SOFTWARE, V152, P165, DOI 10.1016/j.jss.2019.03.002
   Chaleshtari NB, 2023, Arxiv, DOI arXiv:2208.09505
   Chen E, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P892, DOI 10.1145/2660267.2660323
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   ci4rail, 2022, COMP INT RAIL PUBL T
   Cinque M, 2007, I C DEPEND SYS NETWO, P585, DOI 10.1109/DSN.2007.54
   Cloud Native Computing Foundation, 2023, US
   Clound Native Computing Foundation, 2022, US
   Cottrell K, 2021, P INT COMP SOFTW APP, P735, DOI 10.1109/COMPSAC51774.2021.00105
   cve.mitre.org, 2022, MITRECVE202128448
   cve.mitre.org, 2023, MITRECVE20208557
   cve.mitre.org, 2022, MITRECVE202121251
   cve.mitre.org, 2022, MITRECVE20208563
   cve.mitre.org, 2022, MITRECVE20208559
   cve.mitre.org, 2022, MITRECVE20213499
   cve.mitre.org, 2022, MITRECVE20202211
   cve.mitre.org, 2022, MITRECVE202138545
   cve.mitre.org, 2022, MITRECVE20208566
   cve.mitre.org, 2022, MITRECVE202132783
   cve.mitre.org, 2022, MITRECVE202013597
   cve.mitre.org, 2022, MITRECVE202121334
   cve.mitre.org, 2022, MITRECVE201911252
   cve.mitre.org, 2023, MITRECVE20208558
   cve.mitre.org, 2022, MITRECVE20208565
   cve.mitre.org, 2022, MITRECVE202015157
   cve.mitre.org, 2002, MITRECVE202134431
   cve.mitre.org, 2023, MITRECVE202035514
   cve.mitre.org, 2022, MITRECVE20145278
   cve.mitre.org, 2022, MITRECVE202131938
   cve.mitre.org, 2022, MITRECVE202128166
   cve.mitre.org, 2022, MITRECVE202120218
   cve.mitre.org, 2022, MITRECVE202125737
   cve.mitre.org, 2022, MITREVE202139159
   cve.mitre.org, 2023, MITRECVE202028914
   CVE Numbering Authorities (CNA), 2022, US
   Dai H, 2012, SECURITY AWARE SYSTE, P152
   Dai HN, 2010, FIFTH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY, AND SECURITY: ARES 2010, PROCEEDINGS, P525, DOI 10.1109/ARES.2010.22
   De Angelis Guglielmo, 2011, Proceedings of the 7th International Conference on Web Information Systems and Technologies. WEBIST 2011, P13
   Dempsey K, 2022, NIST SPECIAL PUBLICA
   Elder S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10179-6
   Erdley Todd, 2023, EDG COMP UNL INN LIV
   Fayad ME, 1997, COMMUN ACM, V40, P32, DOI 10.1145/262793.262798
   Felderer M, 2016, ADV COMPUT, V101, P1, DOI 10.1016/bs.adcom.2015.11.003
   Fink G., 1997, Software Engineering Notes, V22, P74, DOI 10.1145/263244.263267
   first.org, 2022, COMMON VULNERABILITY
   Fisher RA, 1922, J R STAT SOC, V85, P87, DOI 10.2307/2340521
   Gazzola L, 2017, PROC INT SYMP SOFTW, P67, DOI 10.1109/ISSRE.2017.10
   Google, 2022, GO LANG
   Gopalakrishna NK, 2022, 2022 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING RESEARCH AND PRACTICES FOR THE IOT (SERP4IOT 2022), P1, DOI 10.1145/3528227.3528565
   Hagar JD, 2002, IOT SYSTEM TESTING I
   Honnef D, 2022, STATICCHECK STATIC A
   Huawei, 2022, ABOUT US
   Hui ZW, 2016, J INTELL FUZZY SYST, V31, P2349, DOI 10.3233/JIFS-169076
   Invicti, 2022, AC
   ISO/IEC/IEEE, 2017, INT STANDARD SYSTEMS, P1, DOI [10.1109/IEEESTD.2017.8016712, DOI 10.1109/IEEESTD.2017.8016712]
   Jin X, 2022, ARXIV
   Jude A, 2023, WILL 5G EDGE COMPUTI
   K3OS, 2022, K3OS EDG COMP FRAM
   K3OS, 2022, K3OS AUT TEST SUIT
   Koziol J, 2010, C MILLER REVEALS HIS
   Kube-score, 2022, STAT COD AN KUB OBJ
   KubeEdge, 2023, KUBEEDGE ISS 1736
   KubeEdge, 2023, KUBEEDGE ISS 1017
   KubeEdge, 2023, KUBEEDGE SEC TEAM
   KubeEdge, 2023, KUBEEDGE GITHUB ISS
   KubeEdge, 2023, KUBEEDGE INT TEST SU
   KubeEdge, 2022, KUBEEDGE END TO END
   KubeEdge, 2022, KUBEEDGE DEV PROC
   KubeEdge, 2023, KUBEEDGE SIG SEC TEA
   KubeEdge, KUBEEDGE EDG COMP FR
   KubeEdge, 2022, KUBEEDGE DEPL US KEA
   KubeEdge Edge framework examples, 2022, KUBEEDGE EDG FRAM EX
   Kubernetes, LOGG KUB
   Kubernetes, 2022, OP SOURC SYST AUT DE
   Kubernetes, 2023, TEST REP KUBEEDGE SU
   Kubernetes, 2022, KUB PODS
   Kubernetes, 2022, KUB SEC SPEC INT GRO
   Linares-Vásquez M, 2017, IEEE WORK CONF MIN S, P2, DOI 10.1109/MSR.2017.60
   Luxembourg National Research Fund, 2022, INSTRUCT INTEGRATED
   Mai PX, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P55, DOI 10.1109/ICSE-Companion.2019.00037
   Mai PX, 2018, INFORM SOFTWARE TECH, V100, P165, DOI 10.1016/j.infsof.2018.04.007
   MainFlux, 2022, US
   MainFlux, 2022, CONS SEC AUD
   Mainflux, 2022, US
   Mainflux Framework, 2022, MAINFL FRAM
   Malik Jahanzaib, 2023, Zenodo, DOI 10.5281/ZENODO.7826981
   Manès VJM, 2021, IEEE T SOFTWARE ENG, V47, P2312, DOI 10.1109/TSE.2019.2946563
   maven, 2022, FABRIC8 MAVEN PLUGIN
   Mazuera-Rozo A, 2019, EMPIR SOFTW ENG, V24, P2056, DOI 10.1007/s10664-019-09689-7
   Metasploit, 2022, MET EDG COMP FRAM
   Microsoft, 2022, ACC IOT SOL DEV TEST
   Microsoft, 2022, VIS STUD CCOD KUB TO
   MITRE, 2022, COMM WEAKN EN PROJ
   MITRE, 2022, COMM VULN EXP PROJ
   MITRE, 2022, US
   MITRE Corporation, 2022, US
   Mosenia A, 2017, IEEE T EMERG TOP COM, V5, P586, DOI 10.1109/TETC.2016.2606384
   Mosquitto, 2022, US
   Mozilla foundation, 2022, US
   MQTT, 2022, US
   Murphy G, 2023, ASSET TRACKING LIVIN
   Nassi B, 2021, CCS '21: PROCEEDINGS OF THE 2021 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1900, DOI 10.1145/3460120.3484775
   nvd.nist.gov, 2022, NATL VULNERABILITY D
   OWASP, 2022, Ten
   Rancher, 2022, RANCH CONT MAN
   SES Luxembourg, 2022, SES BROADC SERV
   SES Luxembourg, 2022, SES CONN COMM AV
   SES Luxembourg, 2023, SES LEAD SAT OP
   Shabtai A, 2012, SPRINGERBRIEF COMPUT, P1, DOI 10.1007/978-1-4614-2053-8
   SonarQube, 2022, About us
   Sonarsource, 2022, SON TOOLS GO
   Stankovic JA, 2014, IEEE INTERNET THINGS, V1, P3, DOI 10.1109/JIOT.2014.2312291
   Suse, 2022, SUS SOFTW
   Tabrizchi H, 2020, J SUPERCOMPUT, V76, P9493, DOI 10.1007/s11227-020-03213-1
   The Chief I/O, 2022, 7 STAT AN TOOLS SEC
   The Linux Foundation, 2022, About us
   VerneMQ Broker, 2022, VERNEMQ BROK
   Xiao Y, 2019, 2019 IEEE CONFERENCE ON DEPENDABLE AND SECURE COMPUTING (DSC), P203, DOI [10.1109/JPROC.2019.2918437, 10.1109/dsc47296.2019.8937659]
   Yomo Framework, 2022, YOMO FRAM
   Zadov B, 2022, US
   Zahid M, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2346
   Zalewski M., 2020, American Fuzzy Lop: a security-oriented fuzzer
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
   Zetta, 2022, ZETT AUT TEST SUIT
   Zetta, 2023, ZETT ISS 335
   Zetta, 2022, ZETT GITHUB BUG REP
   Zetta, 2022, ZETT EDG COMP FRAM
   zettajs, 2022, ZETTA EDGE FRAMEWORK
   Zhang J, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P210, DOI 10.1109/ISSRE.2004.4
NR 145
TC 3
Z9 3
U1 2
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 99
DI 10.1007/s10664-023-10330-x
PG 65
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L4IV3
UT WOS:001022921000002
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Lopes, M
   Hora, A
AF Lopes, Mateus
   Hora, Andre
TI How and why we end up with complex methods: a multi-language study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code complexity; Code smells; Software maintenance; Software evolution;
   Empirical study
ID CODE SMELLS; EVOLUTION; IMPACT; TESTS; BAD
AB Over time, software systems tend to increase in complexity and become harder to maintain. While the drawbacks of code complexity are well-known, complex code is present in most real software projects. Here, an important question arises: why, with all the advice out there against it, do we continue to end up with complex methods? Unfortunately, code complexity is typically assessed for a single programming language (often Java), reducing the generality of findings. Thus, assessing how and why complex code evolves in multiple programming languages is fundamental to address this limitation. In this paper, we provide a multi-language empirical study to assess the evolution of complex methods and a survey to understand developers' perceptions. We analyze 1,000 complex methods (according to cyclomatic complexity) of 50 popular projects written in JavaScript, Python, Java, C++, and C# and we perform a survey with over 70 developers. We find that programming language plays an important role in the study of code complexity. For example, C++ and Python projects have more methods that increase complexity over time, whereas Java and C# present more efforts to reduce it. Moreover, the developers' perception of complexity is subjective and varies per programming language: many analyzed methods are not considered complex by developers, while others are considered well-written or harmless. Furthermore, developers may deliberately avoid refactoring complex code due to several reasons, including code stability and lack of refactoring priority. In some cases, developers are satisfied with complexity or even want to purposely expose it. Finally, based on our findings, we discuss insights for researchers and practitioners.
C1 [Lopes, Mateus; Hora, Andre] Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, MG, Brazil.
C3 Universidade Federal de Minas Gerais
RP Hora, A (corresponding author), Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, MG, Brazil.
EM mateusalveslopes@dcc.ufmg.br; andrehora@dcc.ufmg.br
RI Hora, Andre/HTP-0699-2023
OI Hora, Andre/0000-0003-4900-1330
FU CAPES; CNPq; FAPEMIG
FX This research is supported by CAPES, CNPq, and FAPEMIG.
CR Aniche M, 2018, EMPIR SOFTW ENG, V23, P2121, DOI 10.1007/s10664-017-9540-2
   [Anonymous], 2021, IBM RAT ASS AN
   [Anonymous], 2021, MICROSOFT VISUAL STU
   [Anonymous], 2021, COD CLIM
   [Anonymous], 2021, PERFORCE
   Avelino G, 2016, 24 INT C PROGR COMPR, P110
   Avelino G, 2019, SCI COMPUT PROGRAM, V176, P14, DOI 10.1016/j.scico.2019.03.001
   Ayalew Y., 2013, COMPUTER INFORM SCI, V6, P68, DOI [10.5539/cis.v6n3p68, DOI 10.5539/CIS.V6N3P68]
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Bray MW, 1997, C4 SOFTWARE TECHNOLO
   Brito A, 2020, EMPIR SOFTW ENG, V25, P1458, DOI 10.1007/s10664-019-09756-z
   Chatzigeorgiou A, 2014, INNOV SYST SOFTW ENG, V10, P3, DOI 10.1007/s11334-013-0205-z
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Chen ZF, 2016, 2016 INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2016), P18, DOI 10.1109/SATE.2016.10
   Chi-Square-College of Education-NIU, 2021, US
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Dias M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P341, DOI 10.1109/SANER.2015.7081844
   Fard AM, 2013, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM.2013.6648192
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Grund F, 2021, PROC INT CONF SOFTW, P1510, DOI 10.1109/ICSE43902.2021.00135
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hora A, 2020, EMPIR SOFTW ENG, V25, P1798, DOI 10.1007/s10664-020-09809-8
   Hora A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P441, DOI 10.1109/ICSM.2012.6405305
   Host EW, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P193, DOI 10.1109/SCAM.2007.18
   Jbara A, 2014, EMPIR SOFTW ENG, V19, P1261, DOI 10.1007/s10664-013-9275-7
   Johannes D, 2019, SOFTWARE QUAL J, V27, P1271, DOI 10.1007/s11219-019-09442-9
   Kendall M. G., 1948, Rank correlation methods.
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Lanza M, 2001, INT WORKSH PRINC SOF, P09
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   LEHMAN MM, 1996, EUR WORKSH SOFTW PRO
   Liao L, 2018, V02
   Maneerat N., 2011, Proceedings of the Eighth International Joint Conference on Computer Science and Software Engineering (JCSSE 2011), P331, DOI 10.1109/JCSSE.2011.5930143
   Mann HB, 1945, ECONOMETRICA, V13, P245, DOI 10.2307/1907187
   Martin Robert C, 2009, Clean Code: a Handbook of Agile Software Craftsmanship
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Olbrich SM, 2010, PROC IEEE INT CONF S
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Palomba F, 2013, IEEE INT CONF AUTOM, P268, DOI 10.1109/ASE.2013.6693086
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Ratzinger J., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P35, DOI [10.1145/1370750.1370759, DOI 10.1145/1370750.1370759]
   Robles G., 2012, 2012 3rd International Workshop on Emerging Trends in Software Metrics (WETSoM), P49, DOI 10.1109/WETSoM.2012.6226993
   Saboury A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P294, DOI 10.1109/SANER.2017.7884630
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Silva DS, 2020, INT J ENTREP BEHAV R, V26, P595, DOI [10.1108/IJEBR-07-2019-0425, 10.1109/TSE.2020.2968072]
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Skolka P, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P1735, DOI 10.1145/3308558.3313752
   SonarQube, 2021, US
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Stroggylos K, 2007, INT WORKSH SOFTW QUA, P1010
   Taibi D, 2017, INFORM SOFTWARE TECH, V92, P223, DOI 10.1016/j.infsof.2017.08.008
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Vavrov N, 2017, ABS170310882
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Yue S, 2002, J HYDROL, V259, P254, DOI 10.1016/S0022-1694(01)00594-7
   Zimmermann T., 2007, P ICSE 2007 WORK 3 I, DOI [10.1109/PROMISE.2007.10, DOI 10.1109/PROMISE.2007.10]
NR 71
TC 4
Z9 4
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2022
VL 27
IS 5
AR 115
DI 10.1007/s10664-022-10144-3
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1U7GT
UT WOS:000805577100003
DA 2024-07-18
ER

PT J
AU Gonçalves, PW
   Fregnan, E
   Baum, T
   Schneider, K
   Bacchelli, A
AF Goncalves, Pavlina Wurzel
   Fregnan, Enrico
   Baum, Tobias
   Schneider, Kurt
   Bacchelli, Alberto
TI Do explicit review strategies improve code review performance? Towards
   understanding the role of cognitive load
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Code review; Reviewing strategies; Checklist-based reading; Cognitive
   load
ID CHECKLIST
AB Code review is an important process in software engineering - yet, a very expensive one. Therefore, understanding code review and how to improve reviewers' performance is paramount. In the study presented in this work, we test whether providing developers with explicit reviewing strategies improves their review effectiveness and efficiency. Moreover, we verify if review guidance lowers developers' cognitive load. We employ an experimental design where professional developers have to perform three code review tasks. Participants are assigned to one of three treatments: ad hoc reviewing, checklist, and guided checklist. The guided checklist was developed to provide an explicit reviewing strategy to developers. While the checklist is a simple form of signaling (a method to reduce cognitive load), the guided checklist incorporates further methods to lower cognitive demands of the task such as segmenting and weeding. The majority of the participants are novice reviewers with low or no code review experience. Our results indicate that the guided checklist is a more effective aid for a simple review,while the checklist supports reviewers' efficiency and effectiveness in a complex task. However, we did not identify a strong relationship between the guidance provided and code review performance. The checklist has the potential to lower developers' cognitive load, but higher cognitive load led to better performance possibly due to the generally low effectiveness and efficiency of the study participants.
C1 [Goncalves, Pavlina Wurzel; Fregnan, Enrico; Bacchelli, Alberto] Univ Zurich, Zurich, Switzerland.
   [Baum, Tobias; Schneider, Kurt] Leibniz Univ Hannover, Hannover, Germany.
C3 University of Zurich; Leibniz University Hannover
RP Gonçalves, PW (corresponding author), Univ Zurich, Zurich, Switzerland.
EM p.goncalves@ifi.uzh.ch; fregnan@ifi.uzh.ch;
   tobias.baum@inf.uni-hannover.de; kurt.schneider@inf.uni-hannover.de;
   bacchelli@ifi.uzh.ch
RI Bacchelli, Alberto/ABG-5379-2020
OI Bacchelli, Alberto/0000-0003-0193-6823; Fregnan,
   Enrico/0000-0002-6897-7665
FU University of Zurich; Swiss National Science Foundation through the SNF
   [PP00P2 170529]
FX Open access funding provided by University of Zurich. P. Wurzel
   Goncalves, E. Fregnan, and A. Bacchelli gratefully acknowledge the
   support of the Swiss National Science Foundation through the SNF
   Projects No. PP00P2 170529.
CR Abdelnabi Z, 2004, P 2004 INT S EMP SOF, P39248
   [Anonymous], 1996, P 21 ANN SOFTW ENG W
   Bacchelli A, 2013, P 2013 INT C SOFTWAR
   Bannert M, 2002, LEARN INSTR, V12, P139, DOI 10.1016/S0959-4752(01)00021-4
   Barnett M, 2015, 2015 IEEEACM 37 IEEE, V1
   Baum T, 2017, PRODUCT FOCUSED SOFT
   Baum T, 2016, INT C PROD FOC SOFTW, P1308
   Baum T, 2017, 2017 IEEE INT C SOFT
   Baum T, 2018, ONLINE MAT ASSOCIATI
   Baum T, 2019, EMPIR SOFTW ENG, V24, P1762, DOI 10.1007/s10664-018-9676-8
   Baum Tobias, 2019, THESIS INSTITUTIONEL
   Biffl S, 2000, SOFTWARE ENG C 2000
   Brooke John., 1996, Usability evaluation in industry, V189, P4, DOI DOI 10.1201/9781498710411
   Carver Jeffrey C, 2003, THESIS U MARYLAND
   Chernak Y, 1996, IEEE T SOFTWARE ENG, V22, P866, DOI 10.1109/32.553635
   Ciurumelea A, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P456, DOI [10.1109/SANER48275.2020.9054866, 10.1109/saner48275.2020.9054866]
   Cohen J, 2010, MODERN CODE REV, V18
   Cohen J., 1992, Current Directions in Psychological Science, V1, P98, DOI [DOI 10.1111/1467-8721.EP10768783, 10.1111/1467-8721.ep10768783]
   Degani A., 1991, Human factors of flight-deck checklists: the normal checklist
   DeLeeuw KE, 2008, J EDUC PSYCHOL, V100, P223, DOI 10.1037/0022-0663.100.1.223
   Denger C, 2004, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P408
   Dias M, 2015, 2015 IEEE 22 INT C S
   DOBBS AR, 1989, PSYCHOL AGING, V4, P500, DOI 10.1037/0882-7974.4.4.500
   Dunsmore A, 2003, IEEE SOFTWARE, V20, P21, DOI 10.1109/MS.2003.1207450
   Dunsmore A, 2001, PROC INT CONF SOFTW, P135, DOI 10.1109/ICSE.2001.919088
   Ebad SA, 2017, COMPUT SYST SCI ENG, V32, P213
   Fagan M, 2002, SOFTWARE PIONEERS, P75607
   Gonalves PW, 2020, P 17 INT C MIN SOFTW, P6610
   Gousios G, 2014, P 36 INT C SOFTWARE
   Greiler M, 2021, CODE REV WORK MICROS
   Gridnev A., 2017, EXAMPLES CODE REV CH
   Gutha SR., 2015, CODE REV CHECKLIST P
   Imai K, 2010, PSYCHOL METHODS, V15, P309, DOI 10.1037/a0020761
   Jedlitschka A, 2008, GUIDE ADV EMPIRICAL, P1228
   Kamsties E, 1995, EUR SOFTW ENG C, P62383
   Khandelwal S, 2017, PROCEEDINGS OF THE 10TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, P122, DOI 10.1145/3021460.3021474
   Ko AJ, 2019, SIGCSE '19: PROCEEDINGS OF THE 50TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P469, DOI 10.1145/3287324.3287371
   Krell M, 2017, COGENT EDUC, V4, DOI 10.1080/2331186X.2017.1280256
   KVALSETH TO, 1989, PSYCHOL REP, V65, P223, DOI 10.2466/pr0.1989.65.1.223
   Lanubile F, 2004, 10 INT S SOFTWARE ME
   LaToza TD, 2020, EMPIR SOFTW ENG, V25, P2416, DOI 10.1007/s10664-020-09810-1
   MacKinnon DP, 2007, ANNU REV PSYCHOL, V58, P593, DOI 10.1146/annurev.psych.58.110405.085542
   MacKinnon DP, 2009, CURR DIR PSYCHOL SCI, V18, P16, DOI 10.1111/j.1467-8721.2009.01598.x
   MacLeod L, 2018, IEEE SOFTWARE, V35, P34, DOI 10.1109/MS.2017.265100500
   Matthews G, 2019, OXFORD HDB EXPERTISE, V139
   Mayer RE, 2003, WEB-BASED LEARNING: WHAT DO WE KNOW? WHERE DO WE GO?, P23
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McConnell Steve., 2004, Code Complete, V2nd ed
   McMeekin DA, 2009, IEEE AUS SOFT ENGR, P200, DOI 10.1109/ASWEC.2009.13
   Oosterwaal S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1038, DOI 10.1145/2950290.2983929
   Paas F, 2003, EDUC PSYCHOL-US, V38, P63, DOI 10.1207/S15326985EP3801_8
   PAAS FGWC, 1994, EDUC PSYCHOL REV, V6, P351, DOI 10.1007/BF02213420
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Rafi DM, 2012, 2012 7 INT WORKSH AU, P3642
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P2212
   Röthlisberger D, 2012, IEEE T SOFTWARE ENG, V38, P579, DOI 10.1109/TSE.2011.42
   Rong GP, 2012, CONF SOFTW ENG EDUC, P120, DOI 10.1109/CSEET.2012.22
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Spencer SJ, 2005, J PERS SOC PSYCHOL, V89, P845, DOI 10.1037/0022-3514.89.6.845
   Tao Y, 2012, P ACM SIGSOFT 20 INT, P111
   Tao Y, 2015, 2015 IEEEACM 12 WORK
   Thelin T, 2003, IEEE T SOFTWARE ENG, V29, P687, DOI 10.1109/TSE.2003.1223644
   Tingley D, 2014, J STAT SOFTW, V59
   Tymchuk Y, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P151, DOI 10.1109/SANER.2015.7081825
   Unkelos-Shpigel N, 2015, 2015 IEEEACM 8 INT W
   UsabiliTEST, 2020, SYST US SCAL SUS PLU
   Uwano H, 2006, P 2006 S EYE TRACK R, P33140
   van Bruggen JM, 2002, LEARN INSTR, V12, P121, DOI 10.1016/S0959-4752(01)00019-6
   Zhang TY, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P111, DOI 10.1109/ICSE.2015.33
NR 69
TC 4
Z9 4
U1 8
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2022
VL 27
IS 4
AR 99
DI 10.1007/s10664-022-10123-8
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1A7GD
UT WOS:000791919600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Hanenberg, S
   Mehlhorn, N
AF Hanenberg, Stefan
   Mehlhorn, Nils
TI Two N-of-1 self-trials on readability differences between anonymous
   inner classes (AICs) and lambda expressions (LEs) on Java code snippets
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Programming; Programming language; Readability; Lambda expressions
ID EXPERIMENTAL-MODELS; PSYCHOLOGY; POWERFUL; SYSTEMS; DESIGNS
AB In Java, lambda expressions (LEs) were introduced at a time where the similar language construct anonymous inner class (AIC) already existed for years. But while LEs became quite popular in mainstream programming languages in general, their usability is hardly studied. From the Java perspective the need to study the relationship between LEs and AICs was and is quite obvious, because both language constructs co-exist. However, it is quite usual that new language constructs are introduced although they are not or hardly studied using scientific methods - and an often heard argument from programming language designers is that the effort or the costs for the application of the scientific method on language constructs is too high. The present paper contributes in two different ways. First, with respect to LEs in comparison to AICs, this paper presents two N-of-1 studies (i.e. randomized control trials executed on a single subject) where LEs and AICs are used as listeners in Java code. Both experiments had two similar and rather simple tasks ("count the number of parameters", respectively "count the number of used parameters") with the dependent variable being reaction time. The first experiment used the number of parameters, the second the number of used parameters as the controlled, independent variable (in addition to the technique LE and AIC). Other variables (LOC, etc.) were randomly generated within given boundaries. The main result of both experiments is that LEs without type annotations require less reading time (p hs .2, reduction of reaction time of at most 35%). The results are based on 9,600 observations (one N-of-1 trial with eight replications). This gives evidence that the readability of LEs without type annotations improves the readability of code. However, the effect seems to be so small, that we do not expect this to have a larger impact on daily programming. Second, we see the contribution of this paper in the application of N-of-1 trials. Such experiments require relatively low effort in the data selection but still permit to analyze results in a non-subjective way using commonly accepted analysis techniques. Additionally, they permit to increase the number of selected data points in comparison to traditional multi-subject experiments. We think that researchers should take such experiments into account before planning and executing larger experiments.
C1 [Hanenberg, Stefan] Univ Duisburg Essen, Paluno Ruhr Inst Software Technol, Essen, Germany.
C3 University of Duisburg Essen
RP Hanenberg, S (corresponding author), Univ Duisburg Essen, Paluno Ruhr Inst Software Technol, Essen, Germany.
EM stefan.hanenberg@uni-due.de; mail@nils-mehlhorn.de
OI Hanenberg, Stefan Udo/0000-0001-5936-2143
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Aczel B, 2018, ADV METH PRACT PSYCH, V1, P357, DOI 10.1177/2515245918773742
   [Anonymous], 2014, The Java Language Specification, Java SE
   Appelbaum M, 2018, AM PSYCHOL, V73, P3, DOI 10.1037/amp0000191
   Baltes Sebastian, 2020, ARXIV200207764
   Binkley D, 2009, INT C PROGRAM COMPRE, P158, DOI 10.1109/ICPC.2009.5090039
   Bossavit L, 2015, LEPRECHAUNS SOFTWARE
   Buse RPL, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P643
   Dantas R, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P497, DOI 10.1109/SANER.2018.8330247
   DONY C, 1992, SIGPLAN NOTICES, V27, P201, DOI 10.1145/141937.141954
   Endrikat S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P632, DOI 10.1145/2568225.2568299
   Evans Scott R, 2010, J Exp Stroke Transl Med, V3, P8
   Fakhoury S, 2019, INT C PROGRAM COMPRE, P2, DOI 10.1109/ICPC.2019.00014
   Fischer L, 2016, ACM SIGPLAN NOTICES, V51, P154, DOI [10.1145/2816707.2816720, 10.1145/2936313.2816720]
   Forbes Dorothy, 2013, Evid Based Nurs, V16, P70, DOI 10.1136/eb-2013-101382
   Franklin L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1287, DOI 10.1109/ICSE.2013.6606699
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Goodman S, 2008, SEMIN HEMATOL, V45, P135, DOI 10.1053/j.seminhematol.2008.04.003
   Gosling J., 2000, The Java Language Specification
   Gosling James, 1996, The Java Language Specification
   GOULD JD, 1986, HUM FACTORS, V28, P165, DOI 10.1177/001872088602800205
   Hanenberg S, 2010, ACM SIGPLAN NOTICES, V45, P933, DOI 10.1145/1932682.1869536
   Hofmeister JC, 2019, EMPIR SOFTW ENG, V24, P417, DOI 10.1007/s10664-018-9621-x
   Hollmann N, 2017, 2017 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2017), P74, DOI 10.1109/VISSOFT.2017.27
   Hoppe M, 2013, ACM SIGPLAN NOTICES, V48, P457, DOI [10.1145/2509136.2509528, 10.1145/2544173.2509528]
   Institute of E. S, 2020, WHAT WORKS CLEARINGH
   Jemielniak D, 2019, J MED INTERNET RES, V21, DOI 10.2196/11429
   Kaijanaho A.-J., 2015, Evidence-Based Programming Language Design: A Philosophical and Methodological Exploration
   Kam-Hansen S, 2014, SCI TRANSL MED, V6, DOI 10.1126/scitranslmed.3006175
   Kaptchuk TJ, 1998, LANCET, V351, P1722, DOI 10.1016/S0140-6736(97)10111-8
   Katzmarski Bernhard, 2012, 2012 IEEE 20th International Conference on Program Comprehension, P17
   Kitchenham B, 2004, ELEVENTH ANNUAL INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P65
   Ko AJ, 2015, EMPIR SOFTW ENG, V20, P110, DOI 10.1007/s10664-013-9279-3
   Kratochwill T. R., 2010, What works Clearinghouse, DOI [DOI 10.1037/E578392011-004, DOI 10.1177/0741932512452794]
   LAMMERS WILLIAMJ., 2004, FUNDAMENTALS BEHAV R
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lucas W, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P187, DOI 10.1145/3350768.3350791
   Madeyski L, 2018, EMPIR SOFTW ENG, V23, P1982, DOI 10.1007/s10664-017-9574-5
   Mazinanian D, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133909
   McConnell Steve, 2011, Making Software, P567
   Microsoft, 2007, C LANG SPEC VERS 3 0
   Mirza RD, 2017, J ROY SOC MED, V110, P330, DOI 10.1177/0141076817721131
   Nielebock S, 2019, EMPIR SOFTW ENG, V24, P103, DOI 10.1007/s10664-018-9622-9
   Ortin F, 2014, IEEE SOFTWARE, V31, P81, DOI 10.1109/MS.2013.46
   Parnin C, 2013, EMPIR SOFTW ENG, V18, P1047, DOI 10.1007/s10664-012-9236-6
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Perdices M., 2006, Brain Impairment, V7, P119, DOI DOI 10.1375/BRIM.7.2.119
   Petersen Pujan., 2014, 22nd International Conference on Program Comprehension, ICPC 2014, Hyderabad, India, June 2-3, 2014, P212, DOI DOI 10.1145/2597008.2597152
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Qin XL, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON PROGNOSTICS AND HEALTH MANAGEMENT (ICPHM), P1, DOI [10.1109/ATNAC.2017.8215431, 10.1109/ICPHM.2017.7998297]
   Rennie D, 2004, JAMA-J AM MED ASSOC, V292, P1359, DOI 10.1001/jama.292.11.1359
   Rudell AP, 2010, INT J PSYCHOPHYSIOL, V76, P158, DOI 10.1016/j.ijpsycho.2010.03.006
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
   Senn S., 2002, CROSS OVER TRIALS CL, V156, P512, DOI DOI 10.1002/0470854596
   Shadish WR, 2011, BEHAV RES METHODS, V43, P971, DOI 10.3758/s13428-011-0111-y
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Stefik A., 2014, P 2014 ACM INT S NEW, P283
   Stefik A, 2017, COMPUTER, V50, P60, DOI 10.1109/MC.2017.3001257
   Stroustrup Bjarne, 2013, The C++ programming language
   Stuchlik A, 2012, ACM SIGPLAN NOTICES, V47, P97, DOI 10.1145/2168696.2047861
   Tate RL, 2019, PRAT PSYCHOL, V25, P119, DOI 10.1016/j.prps.2019.03.001
   Tichy WF, 1998, COMPUTER, V31, P32, DOI 10.1109/2.675631
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   Tsantalis N, 2017, PROC INT CONF SOFTW, P60, DOI 10.1109/ICSE.2017.14
   Uesbeck PM, 2016, PROC INT CONF SOFTW, P760, DOI 10.1145/2884781.2884849
   Van Rossum G, 1991, DOCUMENTATION PYTHON
   Vegas S, 2016, IEEE T SOFTWARE ENG, V42, P120, DOI 10.1109/TSE.2015.2467378
   Vieira R, 2017, HEALTH PSYCHOL REV, V11, P222, DOI 10.1080/17437199.2017.1343680
   Vohra S, 2015, BMJ-BRIT MED J, V350, DOI 10.1136/bmj.h1738
   Wellek S, 2012, DTSCH ARZTEBL INT, V109, P276, DOI 10.3238/arztebl.2012.0276
   Zelkowitz MV, 2009, J SYST SOFTWARE, V82, P373, DOI 10.1016/j.jss.2008.06.040
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
NR 72
TC 3
Z9 3
U1 1
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 33
DI 10.1007/s10664-021-10077-3
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA XS5IZ
UT WOS:000732943800002
OA hybrid
DA 2024-07-18
ER

PT J
AU Yang, AZH
   Hassan, S
   Zou, Y
   Hassan, AE
AF Yang, Aidan Z. H.
   Hassan, Safwat
   Zou, Ying
   Hassan, Ahmed E.
TI An empirical study on release notes patterns of popular apps in the
   Google Play Store
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Android mobile apps; Release notes; Google Play Store; Longitudinal
   study
ID VALIDATION; AGREEMENT; SOFTWARE
AB Release notes of a new mobile release provide valuable information for app users about the updated functionality of an app. Moreover, app developers can use the release notes to inform users about the resolution of a previously reported issue in user reviews. Prior work shows that release notes are an essential artifact for app developers to announce the emergency fixes and the newly adopted features. However, little is known about the common practices adapted by app developers in preparing their release notes. In this paper, we are interested in capturing the common practices as release notes patterns. First, we conduct an online survey with 102 respondents to investigate their views on mobile release notes. Our results show that most developers find release notes to be useful for notifying their user-base. Then, we study release notes patterns by analyzing 69,851 releases and 67.7 million user reviews of 2,232 top free-to-download apps in the Google Play Store over three years (from April 2016 until April 2019). We observe that app developers tend to write either long release notes (over 50 words) or short release notes (less than 7 words). We use the characteristics of release notes, such as the number of words, to identify six patterns of release notes in mobile apps. We manually investigate the release notes from each of the six patterns, and find 17 release drivers for the release notes. We also find that apps with longer release notes tend to have higher average user ratings. Furthermore, we observe that a shift from rarely updated patterns to frequently updated patterns tend to have higher average user ratings. Our work shows potential directions for developers to improve the release note mechanisms in app stores.
C1 [Yang, Aidan Z. H.] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
   [Hassan, Safwat] Thompson Rivers Univ, Dept Engn, Kamloops, BC, Canada.
   [Zou, Ying] Queens Univ, Software Evolut & Analyt Lab SEAL, Kingston, ON, Canada.
   [Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
C3 Carnegie Mellon University; Queens University - Canada; Queens
   University - Canada
RP Hassan, S (corresponding author), Thompson Rivers Univ, Dept Engn, Kamloops, BC, Canada.
EM aidan@cmu.edu; shassan@tru.ca; yingzou@queensu.ca; ahmed@cs.queensu.ca
RI Hassan, Safwat/JWP-1498-2024; KHALIFA, AHMED khalifa/HKF-2246-2023; Zou,
   Ying/KLC-9380-2024
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; 
CR Abebe SL, 2016, EMPIR SOFTW ENG, V21, P1107, DOI 10.1007/s10664-015-9377-5
   Ahasanuzzaman M, 2020, EMPIR SOFTW ENG, V25, P824, DOI 10.1007/s10664-019-09766-x
   Akdeniz, 2014, GOOGL PLAY CRAWL
   App annie, 2019, APP AN APP DAT IND S
   Appcues, 2020, 5 EXC PROD REL NOT E
   Bi T, 2020, IEEE T SOFTW ENG
   Brockwell PJ, 2016, SPRINGER TEXTS STAT, P1, DOI 10.1007/978-3-319-29854-2
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   CUZICK J, 1985, STAT MED, V4, P87, DOI 10.1002/sim.4780040112
   Gao CY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P163, DOI 10.1109/ASE.2019.00025
   Gao CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P48, DOI 10.1145/3180155.3180218
   Gao Cuiyun, 2020, ARXIV201006301
   Goldberg Y., 2014, ARXIV PREPRINT ARXIV, V1402, P3722
   Google, 2020, PREP ROLL OUT REL PL
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hartigan J. A., 1979, Applied Statistics, V28, P100, DOI 10.2307/2346830
   Hassan S, 2020, IEEE T SOFTWARE ENG, V46, P773, DOI 10.1109/TSE.2018.2869395
   Hassan S, 2018, EMPIR SOFTW ENG, V23, P1275, DOI 10.1007/s10664-017-9538-9
   Hassan S, 2017, EMPIR SOFTW ENG, V22, P505, DOI 10.1007/s10664-016-9435-7
   Huang J, 2005, IEEE T KNOWL DATA EN, V17, P299, DOI 10.1109/TKDE.2005.50
   Khalfallah Malik, 2019, COMPLEX SYSTEMS DESI, P133
   Khoshgoftaar T., 1999, International Journal of Reliability, Quality and Safety Engineering, V6, P303
   Klepper S, 2016, INTERNATIONAL WORKSHOP ON CONTINUOUS SOFTWARE EVOLUTION AND DELIVERY, CSED 2016, P19, DOI [10.1109/CSED.2016.012, 10.1145/2896941.2896953]
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Marschner I., 2018, J VOL, V3, P12
   Martin W, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P435, DOI 10.1145/2950290.2950320
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1346, DOI 10.1007/s10664-015-9388-2
   MENG XL, 1992, PSYCHOL BULL, V111, P172, DOI 10.1037/0033-2909.111.1.172
   MOORE DS, 1977, J AM STAT ASSOC, V72, P131, DOI 10.2307/2286920
   Moreno L, 2017, IEEE T SOFTWARE ENG, V43, P106, DOI 10.1109/TSE.2016.2591536
   Moreno L, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P484, DOI 10.1145/2635868.2635870
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Noei E, 2021, IEEE T SOFTWARE ENG, V47, P367, DOI 10.1109/TSE.2019.2893171
   Noei E, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P283, DOI 10.1145/3236024.3236044
   Noei E, 2017, EMPIR SOFTW ENG, V22, P3088, DOI 10.1007/s10664-017-9507-3
   Plisson Jol., 2004, Proceedings of IS, Vvolume 3, P83
   Preston-Werner Tom, 2019, Semantic versioning 2.0
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   SOWELL F, 1992, J ECONOMETRICS, V53, P165, DOI 10.1016/0304-4076(92)90084-5
   Statista, 2020, AV NUMB NEW ANDR APP
   Tibshirani R, 2001, J ROY STAT SOC B, V63, P411, DOI 10.1111/1467-9868.00293
   TODA HY, 1995, J ECONOMETRICS, V66, P225, DOI 10.1016/0304-4076(94)01616-8
   Wang C, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P207, DOI 10.1109/REW.2019.00042
   Yuan WX, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P73, DOI 10.1109/ICWS.2017.18
NR 46
TC 8
Z9 8
U1 1
U2 19
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 55
DI 10.1007/s10664-021-10086-2
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA ZN0BC
UT WOS:000764709800001
DA 2024-07-18
ER

PT J
AU Escobar-Velásquez, C
   Mazuera-Rozo, A
   Bedoya, C
   Osorio-Riaño, M
   Linares-Vásquez, M
   Bavota, G
AF Escobar-Velasquez, Camilo
   Mazuera-Rozo, Alejandro
   Bedoya, Claudia
   Osorio-Riano, Michael
   Linares-Vasquez, Mario
   Bavota, Gabriele
TI Studying eventual connectivity issues in Android apps
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Eventual connectivity; Bugs; Android; Mobile app; Practices
ID MOBILE; VULNERABILITIES; USABILITY
AB Mobile apps have become indispensable for daily life, not only for individuals but also for companies/organizations that offer their services digitally. Inherited by the mobility of devices, there are no limitations regarding the locations or conditions in which apps are being used. For example, apps can be used where no internet connection is available. Therefore, offline-first is a highly desired quality of mobile apps. Accordingly, inappropriate handling of connectivity issues and miss-implementation of good practices lead to bugs and crashes occurrences that reduce the confidence of users on the apps' quality. In this paper, we present the first study on Eventual Connectivity (ECn) issues exhibited by Android apps, by manually inspecting 971 scenarios related to 50 open-source apps. We found 304 instances of ECn issues (6 issues per app, on average) that we organized in a taxonomy of 10 categories. We found that the majority of ECn issues are related to the use of messages not providing correct information to the user about the connectivity status and to the improper use of external libraries/apps to which the check of the connectivity status is delegated. Based on our findings, we distill a list of lessons learned for both practitioners and researchers, indicating directions for future work.
C1 [Escobar-Velasquez, Camilo; Mazuera-Rozo, Alejandro; Bedoya, Claudia; Osorio-Riano, Michael; Linares-Vasquez, Mario] Univ Los Andes, Bogota, Colombia.
   [Mazuera-Rozo, Alejandro; Bavota, Gabriele] Univ Svizzera Italiana, Lugano, Switzerland.
C3 Universidad de los Andes (Colombia); Universita della Svizzera Italiana
RP Escobar-Velásquez, C (corresponding author), Univ Los Andes, Bogota, Colombia.
EM ca.escobar2434@uniandes.edu.co; alejandro.mazuera.rozo@usi.ch;
   cd.bedoya212@uniandes.edu.co; ms.osorio@uniandes.edu.co;
   m.linaresv@uniandes.edu.co; gabriele.bavota@usi.ch
RI Escobar-Velásquez, Camilo/JVD-5595-2023
OI Escobar-Velásquez, Camilo/0000-0001-8414-9301; BAVOTA,
   Gabriele/0000-0002-2216-3148
FU Google Latin America Research Award 2018-2021; ESKAS scholarship
   [2020.0820]; Swiss National Science Foundation [175513]
FX Escobar-Velasquez and Linares-Vasquez were partially funded by a Google
   Latin America Research Award 2018-2021. Escobar-Velasquez was supported
   by a ESKAS scholarship, No. 2020.0820. Mazuera-Rozo and Bavota
   gratefully acknowledge the financial support of the Swiss National
   Science Foundation for the CCQR project (SNF Project No. 175513).
CR Agrawal A, 2013, QOSA 13, P63, DOI [10.1145/2465478.2465497, DOI 10.1145/2465478.2465497]
   Ali Mohamed, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P79, DOI 10.1109/MOBILESoft.2017.3
   Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Android, 2021, MAN NETW US
   Android, 2021, MON NETW CONN WHIL A
   Android, 2021, JITPACK PUBLISH JVM
   Android, IMPR APP PERF KOT CO
   Android, 2021, GUID APP ARCH CACH D
   Android, 2021, AS CLASS
   Android, 2021, LRUC
   Android, 2021, SCHED TASKS WORKM
   Android, 2021, RUNN ANDR TASK BACKG
   Android, 2021, KOTL IO
   Android, 2021, VOLL
   [Anonymous], 2015, P 2015 INT S SOFTWAR, P83
   [Anonymous], 2010, P USENIX ANN TECH C
   [Anonymous], 2021, MONKEY
   [Anonymous], 2017, OPEN SOURCE ANDROID
   [Anonymous], 2012, 2012 14 AS PAC NETW
   [Anonymous], 2020, CVE20126636
   Archibald, 2021, OFFLINE COOKBOOK
   Azim Md.Tanzirul., 2014, P 29 ACMIEEE INT C A, P623
   BABAKOL T, 2020, ESEC FSE, V2020, P976, DOI DOI 10.1145/3368089.3409703
   Bagheri SC., 2012, Current Therapy in Oral and Maxillofacial Surgery, V1st, P1, DOI DOI 10.1109/NCC.2012.6176903
   Bessghaier N, 2017, I C COMP SYST APPLIC, P895, DOI 10.1109/AICCSA.2017.10
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Cheng ZY, 2017, 2017 INTERNATIONAL CONFERENCE ON NETWORKING, ARCHITECTURE, AND STORAGE (NAS), P81
   Conti M, 2018, IEEE COMMUN SURV TUT, V20, P2658, DOI 10.1109/COMST.2018.2843533
   Continella A, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23465
   Coppola R, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON APP MARKET ANALYTICS (WAMA '19), P8, DOI 10.1145/3340496.3342759
   Crussell J, 2014, MOBISYS'14: PROCEEDINGS OF THE 12TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE SYSTEMS, APPLICATIONS, AND SERVICES, P123, DOI 10.1145/2594368.2594391
   Cruz L, 2019, EMPIR SOFTW ENG, V24, P2209, DOI 10.1007/s10664-019-09682-0
   Da Costa RP, 2019, IEEE ACCESS, V7, P116145, DOI 10.1109/ACCESS.2019.2910778
   Escobar-Velasquez C, 2020, PROC IEEE INT CONF S, P581, DOI 10.1109/ICSME46990.2020.00061
   Falaki H., 2010, P 10 ANN C INTERNET, P281, DOI DOI 10.1145/1879141.1879176
   Fazzini M, 2017, IEEE INT CONF AUTOM, P308, DOI 10.1109/ASE.2017.8115644
   Firebase, 2021, FIR ACC DAT OFFL
   Frank M, 2012, IEEE DATA MINING, P870, DOI 10.1109/ICDM.2012.86
   Fukuda K, 2015, IMC'15: PROCEEDINGS OF THE 2015 ACM CONFERENCE ON INTERNET MEASUREMENT CONFERENCE, P253, DOI 10.1145/2815675.2815697
   Gadient P, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P13, DOI [10.48350/154500, 10.1109/SANER48275.2020.9054850]
   GEIGER FX, 2018, MSR 18
   Ghazizadeh FZ, 2017, 2017 18TH CSI INTERNATIONAL SYMPOSIUM ON COMPUTER SCIENCE AND SOFTWARE ENGINEERING CONFERENCE (CSSE), P1, DOI 10.1109/CSICSSE.2017.8320120
   Google, 2021, NETW BATT BEST PRACT
   Google, 2021, CONN MAN
   Guo CR, 2013, IEEE INT CONF AUTOM, P389, DOI 10.1109/ASE.2013.6693097
   Hao S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P92, DOI 10.1109/ICSE.2013.6606555
   Huang XY, 2019, IEEE ACCESS, V7, P59951, DOI 10.1109/ACCESS.2019.2915339
   Joorabchi ME, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P450, DOI 10.1109/ISSRE.2015.7381838
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Kuzuno H, 2013, I C DATA ENGIN WORKS, P112, DOI 10.1109/ICDEW.2013.6547438
   Lelli V., 2015, 2015 IEEE Eighth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P1, DOI DOI 10.1109/ICSTW.2015.7107403
   Li D., 2014, P 2014 INT S SOFTWAR, P339
   Li D, 2013, P 2013 INT S SOFTW T, P78, DOI DOI 10.1145/2483760.2483780
   Li D, 2016, PROC INT CONF SOFTW, P249, DOI 10.1145/2884781.2884867
   Li D, 2014, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSME.2014.34
   Li L, 2017, INFORM SOFTWARE TECH, V88, P67, DOI 10.1016/j.infsof.2017.04.001
   Liang CJM, 2014, PROCEEDINGS OF THE 20TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING (MOBICOM '14), P519, DOI 10.1145/2639108.2639131
   Lin Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P341, DOI 10.1145/2635868.2635903
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Linares-Vásquez M, 2017, IEEE WORK CONF MIN S, P2, DOI 10.1109/MSR.2017.60
   Linares-Vásquez M, 2015, PROC IEEE INT CONF S, P352, DOI 10.1109/ICSM.2015.7332486
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Liu YP, 2013, INT CONF PERVAS COMP, P2, DOI 10.1109/PerCom.2013.6526708
   Machado, 2015, MOBILE APPS OFFLINE
   Mazuera-Rozo A, 2020, EMPIR SOFTW ENG, V25, P1644, DOI 10.1007/s10664-019-09795-6
   Mazuera-Rozo A, 2019, EMPIR SOFTW ENG, V24, P2056, DOI 10.1007/s10664-019-09689-7
   Mercado I.T., 2016, P INT WORKSHOP APP M, P43, DOI DOI 10.1145/2993259.2993268
   MITRE, 2020, COMM WEAKN EN
   MITRE, 2020, CVE DET
   Moran K, 2017, PROC IEEE ACM INT C, P15, DOI 10.1109/ICSE-C.2017.16
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Mostafa S, 2017, INT C PROGRAM COMPRE, P165, DOI 10.1109/ICPC.2017.3
   Munaiah Nuthan., 2016, Proceedings of the International Workshop on App Market Analytics, P26
   Nayam W, 2016, ASIAN INTERNET ENGINEERING CONFERENCE (AINTEC 2016), P9, DOI 10.1145/3012695.3012697
   Nielsen J., 1990, SIGCHI Bulletin, P249
   Palomba F, 2018, J SYST SOFTWARE, V137, P143, DOI 10.1016/j.jss.2017.11.043
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panizo L, 2020, INT J SOFTW TOOLS TE, V22, P105, DOI 10.1007/s10009-019-00518-2
   Pathak A., 2011, P 10 ACM WORKSH HOT, P1
   Pathak A., 2012, Mobisys, DOI DOI 10.1145/2307636.2307661
   Pathak Abhijit D., 2012, Proceedings of the PCIM ASIA 2012. International Conference and Exhibition for Power Electronics, Intelligent Motion, Renewable Energy and Energy Management, P29
   Pathak A, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P153
   Rao A., 2011, Em: Proceedings of the Seventh COnference on emerging Networking EXperiments and Technologies, P1, DOI DOI 10.1145/2079296.2079321
   Rapoport M, 2017, IEEE WORK CONF MIN S, P80, DOI 10.1109/MSR.2017.11
   Realm, 2021, REALM ANDR
   Ren J., 2016, P 14 ANN INT C MOBIL, P361, DOI DOI 10.1145/2906388.2906392
   Ruth, 2021, GLIDE
   Sadeghi A, 2017, IEEE T SOFTWARE ENG, V43, P492, DOI 10.1109/TSE.2016.2615307
   Sahin C, 2016, J SOFTW-EVOL PROC, V28, P565, DOI 10.1002/smr.1762
   Shabtai A, 2012, J INTELL INF SYST, V38, P161, DOI 10.1007/s10844-010-0148-x
   Shuai Hao, 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P1, DOI 10.1109/GREENS.2012.6224263
   Song Yihang, 2015, P 5 ANN ACM CCS WORK, P15, DOI [DOI 10.1145/2808117.2808120, 10.1145/2808117.2808120]
   Square, 2021, RETR
   Square, 2021, PICASSO
   Te-En Wei, 2012, 2012 IEEE 11th International Conference on Trust, Security and Privacy in Computing and Communications (TrustCom), P1251, DOI 10.1109/TrustCom.2012.91
   Thomas D.R., 2015, P 5 ANN ACM CCS WORK, P87
   Thomas DR, 2015, LECT NOTES COMPUT SC, V9379, P139, DOI 10.1007/978-3-319-26096-9_14
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wan M, 2015, IEEE ICST WORKSHOP
   Wei XT, 2012, MOBICOM 12: PROCEEDINGS OF THE 18TH ANNUAL INTERNATIONAL CONFERENCE ON MOBILE COMPUTING AND NETWORKING, P137
   Weichbroth P, 2020, IEEE ACCESS, V8, P55563, DOI 10.1109/ACCESS.2020.2981892
   Wikipedia, 2017, LIST FREE OP SOURC A
   Xiong WL, 2018, PROC IEEE INT CONF S, P36, DOI 10.1109/ICSME.2018.00013
   Yang SQ, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON THE ENGINEERING OF MOBILE-ENABLED SYSTEMS (MOBS), P1, DOI 10.1109/MOBS.2013.6614215
   Zhang J, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON THE ENGINEERING OF MOBILE-ENABLED SYSTEMS (MOBS), P25, DOI 10.1109/MOBS.2013.6614219
   Zhao WH, 2019, PROC IEEE INT CONF S, P449, DOI 10.1109/ICSME.2019.00077
   Zhou YJ, 2012, P IEEE S SECUR PRIV, P95, DOI 10.1109/SP.2012.16
NR 108
TC 2
Z9 2
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 22
DI 10.1007/s10664-021-10020-6
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XD8YP
UT WOS:000722987800001
DA 2024-07-18
ER

PT J
AU ter Beek, MH
   Damiani, F
   Lienhardt, M
   Mazzanti, F
   Paolini, L
AF ter Beek, Maurice H.
   Damiani, Ferruccio
   Lienhardt, Michael
   Mazzanti, Franco
   Paolini, Luca
TI Efficient static analysis and verification of featured transition
   systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software product lines; Formal specification; Behavioural model;
   Featured transition systems; Static analysis; Formal verification
ID SOFTWARE PRODUCT LINES; BASIC BEHAVIORAL-MODELS; CHECKING
AB A Featured Transition System (FTS) models the behaviour of all products of a Software Product Line (SPL) in a single compact structure, by associating action-labelled transitions with features that condition their presence in product behaviour. It may however be the case that the resulting featured transitions of an FTS cannot be executed in any product (so called dead transitions) or, on the contrary, can be executed in all products (so called false optional transitions). Moreover, an FTS may contain states from which a transition can be executed only in some products (so called hidden deadlock states). It is useful to detect such ambiguities and signal them to the modeller, because dead transitions indicate an anomaly in the FTS that must be corrected, false optional transitions indicate a redundancy that may be removed, and hidden deadlocks should be made explicit in the FTS to improve the understanding of the model and to enable efficient verification-if the deadlocks in the products should not be remedied in the first place. We provide an algorithm to analyse an FTS for ambiguities and a means to transform an ambiguous FTS into an unambiguous one. The scope is twofold: an ambiguous model is typically undesired as it gives an unclear idea of the SPL and, moreover, an unambiguous FTS can efficiently be model checked. We empirically show the suitability of the algorithm by applying it to a number of benchmark SPL examples from the literature, and we show how this facilitates a kind of family-based model checking of a wide range of properties on FTSs.
C1 [ter Beek, Maurice H.; Mazzanti, Franco] ISTI CNR, Via Giuseppe Moruzzi 1, I-56124 Pisa, Italy.
   [Damiani, Ferruccio; Paolini, Luca] Univ Turin, Corso Svizzera 185, I-10149 Turin, Italy.
   [Lienhardt, Michael] Off Natl Etud & Rech Aerosp, Chemin Vauve Granges 6, F-91123 Palaiseau, France.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Scienza e
   Tecnologie dell'Informazione "Alessandro Faedo" (ISTI-CNR); University
   of Turin; Universite Paris Saclay; National Office for Aerospace Studies
   & Research (ONERA)
RP Damiani, F (corresponding author), Univ Turin, Corso Svizzera 185, I-10149 Turin, Italy.
EM maurice.terbeek@isti.cnr.it; ferruccio.damiani@unito.it;
   michael.lienhardt@oncra.fr; franco.mazzanti@isti.cnr.it;
   luca.paolini@unito.it
RI Paolini, Luca/M-8924-2019; Ferruccio, Damiani/D-2383-2011
OI Paolini, Luca/0000-0002-4126-0170; Ferruccio,
   Damiani/0000-0001-8109-1706; Mazzanti, Franco/0000-0003-4562-8777
FU Universita degli Studi di Torino within the CRUI-CARE Agreement
FX Open access funding provided by Universita degli Studi di Torino within
   the CRUI-CARE Agreement.
CR ALPERN B, 1985, INFORM PROCESS LETT, V21, P181, DOI 10.1016/0020-0190(85)90056-0
   Apel S., 2013, Feature-Oriented Software Development: Concepts and Implementation
   Asirelli Patrizia, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P130, DOI 10.1109/SPLC.2011.34
   Asirelli P., 2009, VAMOS, P71
   Asirelli P, 2010, LECT NOTES COMPUT SC, V6396, P43, DOI 10.1007/978-3-642-16265-7_5
   Audemard G, 2016, LECT NOTES COMPUT SC, V9892, P30, DOI 10.1007/978-3-319-44953-1_3
   Beek MH, 2019, SUPPLEMENTARY MAT ST, DOI [10.5281/zenodo.2616646, DOI 10.5281/ZENODO.2616646]
   Beek MH, LNCS, V2076, P245, DOI [10.1007/978-3-030-45234-6_12, DOI 10.1007/978-3-030-45234-6_12]
   Belder T, 2015, ELECTRON P THEOR COM, P14, DOI 10.4204/EPTCS.182.2
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Beohar H, 2016, SCI COMPUT PROGRAM, V123, P42, DOI 10.1016/j.scico.2015.06.005
   Bertot Y., 2004, TEXT THEORET COMP S
   Bjorner N., 2015, Tools and Algorithms for the Construction and Analysis of Systems, V9035, P194, DOI DOI 10.1007/978-3-662-46681-0
   Bodden E, 2013, ACM SIGPLAN NOTICES, V48, P355, DOI 10.1145/2499370.2491976
   Bunte O, 2019, LECT NOTES COMPUT SC, V11428, P21, DOI 10.1007/978-3-030-17465-1_2
   Castro T, 2018, SCI COMPUT PROGRAM, V152, P116, DOI 10.1016/j.scico.2017.10.013
   Chess B., 2007, Secure programming with static analysis
   Chrszon P, 2018, FORM ASP COMPUT, V30, P45, DOI 10.1007/s00165-017-0432-4
   Classen Andreas, 2012, International Journal on Software Tools for Technology Transfer, V14, P589, DOI 10.1007/s10009-012-0234-1
   Classen A, 2010, PCSTRSPLMC00000001 U
   Classen A, 2011, THESIS U NAMUR
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Classen A, 2014, SCI COMPUT PROGRAM, V80, P416, DOI 10.1016/j.scico.2013.09.019
   Classen A, 2013, IEEE T SOFTWARE ENG, V39, P1069, DOI 10.1109/TSE.2012.86
   Cook S. A., 1971, Proceedings of the 3rd annual ACM symposium on theory of computing, P151
   Cordy Maxime, 2019, From Software Engineering to Formal Methods and Tools, and Back: Essays Dedicated to Stefania Gnesi on the Occasion of Her 65th Birthday. Lecture Notes in Computer Science (LNCS 11865), P285, DOI 10.1007/978-3-030-30985-5_18
   Cordy M, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P141
   Cordy M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P472, DOI 10.1109/ICSE.2013.6606593
   Cordy M, 2012, PROC INT CONF SOFTW, P672, DOI 10.1109/ICSE.2012.6227150
   Cranen S, 2013, LECT NOTES COMPUT SC, V7795, P199, DOI 10.1007/978-3-642-36742-7_15
   Damiani F, 2019, SCI COMPUT PROGRAM, V172, P203, DOI 10.1016/j.scico.2018.11.005
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Delaware B, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P243, DOI 10.1145/1595696.1595733
   Devroey X., 2014, SOFTW PROD LIN C, P86, DOI DOI 10.1145/2647908.2655971
   Devroey X, 2014, 8 INT WORKSH VAR MOD, p10:1, DOI [10.1145/2556624.2556635, DOI 10.1145/2556624.2556635]
   Devroey X, 2018, J SYST SOFTWARE, V141, P1, DOI 10.1016/j.jss.2018.03.010
   Devroey X, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P89, DOI 10.1145/2866614.2866627
   Devroey X, 2016, PROC INT CONF SOFTW, P655, DOI 10.1145/2884781.2884821
   Devroey X, 2017, SOFTW SYST MODEL, V16, P153, DOI 10.1007/s10270-015-0479-8
   Devroey X, 2014, LECT NOTES COMPUT SC, V8802, P336, DOI 10.1007/978-3-662-45234-9_24
   Devroey Xavier, 2015, P INT WORKSH VAR MOD
   Dimovski AS, 2020, INT J SOFTW TOOLS TE, V22, P35, DOI 10.1007/s10009-019-00528-0
   Dimovski AS, 2019, LECT NOTES COMPUT SC, V11424, P192, DOI 10.1007/978-3-030-16722-6_11
   Dimovski AS, 2018, LECT NOTES COMPUT SC, V10802, P301, DOI 10.1007/978-3-319-89363-1_17
   Dimovski A, 2017, INT J SOFTW TOOLS TE, V19, P585, DOI 10.1007/s10009-016-0425-2
   Dimovski AS, 2017, LECT NOTES COMPUT SC, V10202, P406, DOI 10.1007/978-3-662-54494-5_24
   Dimovski AS, 2015, LECT NOTES COMPUT SC, V9232, P282, DOI 10.1007/978-3-319-23404-5_18
   Dubslaff C, 2019, LECT NOTES COMPUT SC, V11724, P162, DOI 10.1007/978-3-030-30446-1_9
   Dubslaff C, 2015, LECT NOTES COMPUT SC, V8989, P180, DOI 10.1007/978-3-662-46734-3_5
   Fantechi A, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P193, DOI 10.1109/SPLC.2008.45
   Fantechi A., 2007, ESEC FSE 07, P521
   Fischbein D., 2006, ROSATEA 06, P39
   Gruler A, 2008, LECT NOTES COMPUT SC, V5051, P113, DOI 10.1007/978-3-540-68863-1_8
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Heule Marijn., INT SAT COMPETITIONS
   Holl G, 2012, INFORM SOFTWARE TECH, V54, P828, DOI 10.1016/j.infsof.2012.02.002
   Hutter F, 2017, ARTIF INTELL, V243, P1, DOI 10.1016/j.artint.2016.09.006
   Kastner Christian, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P258, DOI 10.1109/ASE.2008.36
   Kim C.H. P., 2011, Proceedings of the Tenth International Conference on Aspect-oriented Software Development, P57
   Kretínsky J, 2017, LECT NOTES COMPUT SC, V10460, P36, DOI 10.1007/978-3-319-63121-9_3
   Larsen U, 1988, Eur J Popul, V3, P203, DOI 10.1109/LICS.1988.5119
   Lauenroth K, 2009, IEEE INT CONF AUTOM, P269, DOI 10.1109/ASE.2009.16
   Liang Jia Hui, 2015, P 19 INT C SOFTW PRO, P91, DOI [10.1145/2791060, DOI 10.1145/2791060]
   Lienhardt M, 2017, ACM INT CONF PR SER, P89, DOI 10.1145/3168365.3170425
   Lienhardt M, 2018, SCI COMPUT PROGRAM, V166, P3, DOI 10.1016/j.scico.2018.05.007
   Lochau M, 2016, J LOG ALGEBR METHODS, V85, P245, DOI 10.1016/j.jlamp.2015.09.004
   Manna Z., 1995, Temporal verification of reactive systems: safety, DOI DOI 10.1007/978-1-4612-4222-2
   Mendonca Marcilio, 2009, SPLC' 09, P231
   Nielson Flemming, 2015, Principles of Program Analysis, DOI [10.1007/978-3-662-03811-6, DOI 10.1007/978-3-662-03811-6]
   Nyman U, 2007, LECT NOTES COMPUT SC, V4421, P64
   ter Beek Maurice H., 2019, Models, Mindsets, Meta. The What, the How, and the Why Not? Essays Dedicated to Bernhard Steffen on the Occasion of His 60th Birthday. Lecture Notes in Computer Science (LNCS 11200), P110, DOI 10.1007/978-3-030-22348-9_8
   ter Beek Maurice H., 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P450, DOI 10.1007/978-3-642-32759-9_36
   ter Beek M. H., 2015, SPLC, P432, DOI DOI 10.1145/2791060.2791118
   ter Beek M.H., 2014, P 2 FME WORKSHOP FOR, P31, DOI [10.1145/2593489.2593493, DOI 10.1145/2593489.2593493]
   ter Beek M. H., 2014, SPLC 14, V2, P70, DOI DOI 10.1145/2647908.2655969
   ter Beek MH, 2021, SPLC '21 - PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL B, P24, DOI 10.1145/3461002.3473071
   ter Beek MH, 2020, IEEE T SOFTWARE ENG, V46, P321, DOI 10.1109/TSE.2018.2853726
   ter Beek MH, 2019, SCI COMPUT PROGRAM, V169, P1, DOI 10.1016/j.scico.2018.09.006
   ter Beek MH, 2017, LECT NOTES COMPUT SC, V10202, P387, DOI 10.1007/978-3-662-54494-5_23
   ter Beek MH, 2016, LECT NOTES COMPUT SC, V9952, P856, DOI 10.1007/978-3-319-47166-2_59
   ter Beek MH, 2016, J LOG ALGEBR METHODS, V85, P287, DOI 10.1016/j.jlamp.2015.11.006
   ter Beek MH, 2015, ELECTRON P THEOR COM, P56, DOI 10.4204/EPTCS.182.5
   ter Beek MH, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P10
   ter Beek MH, 2015, LECT NOTES COMPUT SC, V9276, P344, DOI 10.1007/978-3-319-22969-0_24
   ter Beek MH, 2014, LECT NOTES COMPUT SC, V8802, P368, DOI 10.1007/978-3-662-45234-9_26
   ter Beek MH, 2019, P 23 INT SYST SOFTW, P39
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Vandin A, 2018, LECT NOTES COMPUT SC, V10951, P329, DOI 10.1007/978-3-319-95582-7_19
   Varshosaz M, 2018, SCI COMPUT PROGRAM, V168, P171, DOI 10.1016/j.scico.2018.09.001
   Von Rhein A, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3280986
NR 91
TC 9
Z9 9
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 10
DI 10.1007/s10664-020-09930-8
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WL2BB
UT WOS:000710216100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Macho, C
   Beyer, S
   McIntosh, S
   Pinzger, M
AF Macho, Christian
   Beyer, Stefanie
   McIntosh, Shane
   Pinzger, Martin
TI The nature of build changes An empirical study of Maven-based build
   systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Maintenance; Build systems; Software quality
AB Build systems are an essential part of modern software projects. As software projects change continuously, it is crucial to understand how the build system changes because neglecting its maintenance can, at best, lead to expensive build breakage, or at worst, introduce user-reported defects due to incorrectly compiled, linked, packaged, or deployed official releases. Recent studies have investigated the (co-)evolution of build configurations and reasons for build breakage; however, the prior analysis focused on a coarse-grained outcome (i.e., either build changing or not). In this paper, we present BuildDiff, an approach to extract detailed build changes from Maven build files and classify them into 143 change types. In a manual evaluation of 400 build-changing commits, we show that BuildDiff can extract and classify build changes with average precision, recall, and f1-scores of 0.97, 0.98, and 0.97, respectively. We then present two studies using the build changes extracted from 144 open source Java projects to study the frequency and time of build changes. The results show that the top-10 most frequent change types account for 51% of the build changes. Among them, changes to version numbers and changes to dependencies of the projects occur most frequently. We also observe frequently co-occurring changes, such as changes to the source code management definitions, and corresponding changes to the dependency management system and the dependency declaration. Furthermore, our results show that build changes frequently occur around release days. In particular, critical changes, such as updates to plugin configuration parts and dependency insertions, are performed before a release day. The contributions of this paper lay in the foundation for future research, such as for analyzing the (co-)evolution of build files with other artifacts, improving effort estimation approaches by incorporating necessary modifications to the build system specification, or automatic repair approaches for configuration code. Furthermore, our detailed change information enables improvements of refactoring approaches for build configurations and improvements of prediction models to identify error-prone build files.
C1 [Macho, Christian; Beyer, Stefanie; Pinzger, Martin] Univ Klagenfurt, Klagenfurt, Austria.
   [McIntosh, Shane] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON, Canada.
C3 University of Klagenfurt; University of Waterloo
RP Macho, C (corresponding author), Univ Klagenfurt, Klagenfurt, Austria.
EM christian.macho@aau.at; stefanie.beyer@aau.at;
   shane.mcintosh@uwaterloo.ca; martin.pinzger@aau.at
RI Macho, Christian/AAS-4725-2020
OI Macho, Christian/0000-0001-8182-7277; Pinzger,
   Martin/0000-0002-5536-3859
FU University of Klagenfurt
FX Open Access funding provided by University of Klagenfurt.
CR Adams B., 2008, ELECT COMMUN EUR ASS, V8, DOI [10.14279/tuj.eceasst.8.115, DOI 10.14279/TUJ.ECEASST.8.115]
   Adams B, 2007, PROC IEEE INT CONF S, P214
   Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Agrawal R., P 20 INT C VERY LARG
   Benelallam Amine, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P344, DOI 10.1109/MSR.2019.00060
   Bezemer CP, 2017, EMPIR SOFTW ENG, V22, P3117, DOI 10.1007/s10664-017-9510-8
   Brin S., 1997, SIGMOD Record, V26, P255, DOI [10.1145/253262.253327, 10.1145/253262.253325]
   Call HC, 2009, IEEE SOFTWARE, V26, P26, DOI 10.1109/MS.2009.6
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Corazza A, 2013, EMPIR SOFTW ENG, V18, P506, DOI 10.1007/s10664-011-9187-3
   Corazza A., 2010, Proceedings of the 6th international conference on predictive models in software engineering, P4
   Désarmeaux C, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P492, DOI [10.1145/2901739.2903498, 10.1109/MSR.2016.062]
   Dintzner N, 2014, INT WORKSH VAR MOD S
   Dotzler G, 2016, IEEE INT CONF AUTOM, P660, DOI 10.1145/2970276.2970315
   Espinha T, 2015, J SYST SOFTWARE, V100, P27, DOI 10.1016/j.jss.2014.10.014
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Ferrucci F., 2014, Softw. Proj. Manag. Chang. World, P373
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fluri B, 2009, SOFTWARE QUAL J, V17, P367, DOI 10.1007/s11219-009-9075-x
   Fluri B, 2006, INT C PROGRAM COMPRE, P35, DOI 10.1109/ICPC.2006.16
   Giger E., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P217, DOI 10.1109/MSR.2012.6224284
   Giger E, 2011, P 8 WORK C MIN SOFTW, P83, DOI [10.1145/1985441.1985456, DOI 10.1145/1985441.1985456]
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Hahsler M, 2005, J STAT SOFTW, V14
   Hardt R, 2015, PROC IEEE INT CONF S, P201, DOI 10.1109/ICSM.2015.7332466
   Hardt R, 2013, 2013 1ST INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING (RELENG), P13, DOI 10.1109/RELENG.2013.6607690
   Hashimoto M, 2008, WORK CONF REVERSE EN, P279, DOI 10.1109/WCRE.2008.44
   Hattori Lile P., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P63, DOI 10.1109/ASEW.2008.4686322
   Kerzazi N, 2014, PROC IEEE INT CONF S, P41, DOI 10.1109/ICSME.2014.26
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kocaguneli E, 2010, EUROMICRO CONF PROC, P323, DOI 10.1109/SEAA.2010.19
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Le TDB, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P331, DOI 10.1109/SANER.2015.7081843
   Lebeuf C, 2018, PROC IEEE INT CONF S, P496, DOI 10.1109/ICSME.2018.00060
   Livshits V.B., 2005, ESEC SIGSOFT FSE, P296, DOI [DOI 10.1145/1095430.1081754, DOI 10.1145/1081706.1081754]
   Lubsen Z, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P151, DOI 10.1109/MSR.2009.5069493
   MAAREK YS, 1991, IEEE T SOFTWARE ENG, V17, P800, DOI 10.1109/32.83915
   Macho C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P106, DOI 10.1109/SANER.2018.8330201
   Macho C, 2017, IEEE WORK CONF MIN S, P368, DOI 10.1109/MSR.2017.65
   Macho C, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P541, DOI 10.1109/SANER.2016.22
   Marsavina C, 2014, IEEE INT WORK C SO, P195, DOI 10.1109/SCAM.2014.28
   McIntosh S., 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P42, DOI 10.1109/MSR.2010.5463341
   McIntosh S, 2015, EMPIR SOFTW ENG, V20, P1587, DOI 10.1007/s10664-014-9324-x
   McIntosh S, 2014, PROC IEEE INT CONF S, P241, DOI 10.1109/ICSME.2014.46
   McIntosh S, 2012, EMPIR SOFTW ENG, V17, P578, DOI 10.1007/s10664-011-9169-5
   McIntosh S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P141, DOI 10.1145/1985793.1985813
   MILLER W, 1985, SOFTWARE PRACT EXPER, V15, P1025, DOI 10.1002/spe.4380151102
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Myers EW, 1986, ALGORITHMICA, V1, P251, DOI 10.1007/BF01840446
   Nielsen Jakob., 1995, Card Sorting to Discover the Users' Model of the Information Space
   Piatetsky-Shapiro G., 1991, Knowledge discovery in databases, P229
   Raemaekers S, 2014, IEEE INT WORK C SO, P215, DOI 10.1109/SCAM.2014.30
   Ren Z, 2018, ARXIV180306766
   Romano D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P303, DOI 10.1109/ICSM.2011.6080797
   Seo H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P724, DOI 10.1145/2568225.2568255
   Shridhar M., 2014, P EL OV EL DISCH S T, P1
   Soto-Valero Cesar, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P333, DOI 10.1109/MSR.2019.00059
   Soto-Valero C, 2020, ARXIV200107808
   Tamrawi A, 2012, PROC INT CONF SOFTW, P650, DOI 10.1109/ICSE.2012.6227152
   Tan PN, 2004, INFORM SYST, V29, P293, DOI 10.1016/S0306-4379(03)00072-3
   Vassallo C, 2018, INT C PROGRAM COMPRE, P41, DOI 10.1145/3196321.3196350
   Wang Y, 2019, PROC INT CONF SOFTW, P572, DOI 10.1109/ICSE.2019.00068
   Wang Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P319, DOI 10.1145/3236024.3236056
   Wen RY, 2018, PROC IEEE INT CONF S, P685, DOI 10.1109/ICSME.2018.00078
   Xia X, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P311, DOI 10.1109/SANER.2015.7081841
   Xia Xin, 2014, S APPL COMP SAC 2014, P1184, DOI [10.1145/2554850.2555134, DOI 10.1145/2554850.2555134]
   Zaki MJ, 2001, MACH LEARN, V42, P31, DOI 10.1023/A:1007652502315
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 70
TC 3
Z9 3
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR 16
PY 2021
VL 26
IS 3
AR 32
DI 10.1007/s10664-020-09926-4
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QY3GY
UT WOS:000629933000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Grebhahn, A
   Kaltenecker, C
   Engwer, C
   Siegmund, N
   Apel, S
AF Grebhahn, Alexander
   Kaltenecker, Christian
   Engwer, Christian
   Siegmund, Norbert
   Apel, Sven
TI Lightweight, semi-automatic variability extraction: a case study on
   scientific computing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software variability; Configuration; Variability extraction; Variability
   analysis
AB In scientific computing, researchers often use feature-rich software frameworks to simulate physical, chemical, and biological processes. Commonly, researchers follow a clone-and-own approach: Copying the code of an existing, similar simulation and adapting it to the new simulation scenario. In this process, a user has to select suitable artifacts (e.g., classes) from the given framework and replaces the existing artifacts from the cloned simulation. This manual process incurs substantial effort and cost as scientific frameworks are complex and provide large numbers of artifacts. To support researchers in this area, we propose a lightweight API-based analysis approach, called VORM, that recommends appropriate artifacts as possible alternatives for replacing given artifacts. Such alternative artifacts can speed up performance of the simulation or make it amenable to other use cases, without modifying the overall structure of the simulation. We evaluate the practicality of VORM-especially, as it is very lightweight but possibly imprecise-by means of a case study on the DUNE numerics framework and two simulations from the realm of physical simulations. Specifically, we compare the recommendations by VORM with recommendations by a domain expert (a developer of DUNE). VORM recommended 34 out of the 37 artifacts proposed by the expert. In addition, it recommended 2 artifacts that are applicable but have been missed by the expert and 32 artifacts not recommended by the expert, which however are still applicable in the simulation scenario with slight modifications. Diving deeper into the results, we identified an undiscovered bug and an inconsistency in DUNE, which corroborates the usefulness of VORM.
C1 [Grebhahn, Alexander] ADESSO SE, Dortmund, Germany.
   [Kaltenecker, Christian; Apel, Sven] Saarland Univ, Saarland Informatics Campus, Saarbrucken, Germany.
   [Engwer, Christian] Univ Munster, Appl Math, Munster, Germany.
   [Siegmund, Norbert] Univ Leipzig, Leipzig, Germany.
C3 Saarland University; University of Munster; Leipzig University
RP Grebhahn, A (corresponding author), ADESSO SE, Dortmund, Germany.
EM Alexander.Grebhahn@adesso.de; kaltenec@cs.uni-saarland.de;
   christian.engwer@uni-muenster.de; norbert.siegmund@uni-leipzig.de;
   apel@cs.uni-saarland.de
RI Kaltenecker, Christian/ABE-1240-2021
OI Apel, Sven/0000-0003-3687-2233
FU German Research Foundation (DFG) as part of the Priority Programme 1648
   "Software for Exascale Computing" [AP 206/7]; German Research Foundation
   (DFG) as part of Pervolution [AP 206/11-1, SI 2171/2-1]; DFG [AP 206/4,
   AP 206/6]; German Research Foundation under Germany's Excellence
   Strategy [EXC 2044 -390685587]; German Federal Ministry of Education and
   Research (BMBF) [01IS19059A, 01IS18026B]; German Research Foundation
   (DFG) [SI 2171/2, SI 2171/3-1]
FX This work has been supported by the German Research Foundation (DFG), as
   part of the Priority Programme 1648 "Software for Exascale Computing",
   under the contract AP 206/7 and Pervolution, under the contracts AP
   206/11-1 and SI 2171/2-1. Sven Apel's work has been further supported by
   the DFG under the contracts AP 206/4 and AP 206/6. Engwer's work is
   supported by the German Research Foundation under Germany's Excellence
   Strategy EXC 2044 -390685587, Mathematics Munster:
   Dynamics-Geometry-Structure. Siegmund's work is supported by the German
   Federal Ministry of Education and Research (BMBF, 01IS19059A and
   01IS18026B) by funding the competence center for Big Data and AI
   "ScaDS.AI Dresden/Leipzig". Siegmund's work is also funded by the German
   Research Foundation (DFG, SI 2171/2 and SI 2171/3-1).
CR ALN M., 2015, ARCH NUMER SOFTW, V3, DOI [10.11588/ans.2015.100.20553, DOI 10.11588/ANS.2015.100.20553]
   Nguyen AT, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P511, DOI 10.1145/2950290.2950333
   [Anonymous], 2007, GUIDE ADV EMPIRICAL
   Bastian P, 2008, COMPUTING, V82, P121, DOI 10.1007/s00607-008-0004-9
   Bastian P, 2008, COMPUTING, V82, P103, DOI 10.1007/s00607-008-0003-x
   Bastian P, 2010, KYBERNETIKA, V46, P294
   Braess D., 2007, Finite elements: Theory, fast solvers, and applications in solid mechanics, DOI DOI 10.1017/CBO9780511618635
   Dietrich C., 2012, Em: Proceedings of the 16th International Software Product Line Conference-Volume, V1, P21
   Falgout RD, 2002, LECT NOTES COMPUT SC, V2331, P632
   Grebhahn A., 2017, CONCURRENCY COMPUTAT, V29
   Kawrykow D, 2009, IEEE INT CONF AUTOM, P111, DOI 10.1109/ASE.2009.62
   Knabner Peter, 2003, Numerical methods for elliptic and parabolic partial differential equations
   Lengauer C., 2020, Software for Exascale Computing-SPPEXA 2016-2019
   Li Y, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P133, DOI 10.1145/3106195.3106207
   Mefteh M, 2016, COMPUT J, V59, P1784, DOI 10.1093/comjnl/bxw027
   Negara S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P803, DOI 10.1145/2568225.2568317
   Püschel M, 2004, INT J HIGH PERFORM C, V18, P21, DOI 10.1177/1094342004041291
   Remmel H., 2014, THESIS U HEIDELBERG
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Vogel A, 2013, COMPUT VIS SCI, V16, P165, DOI 10.1007/s00791-014-0232-9
   Yang Li, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P90, DOI 10.1145/3383219.3383229
   Zhang Bo, 2012, 16 INT SOFTWARE PROD, V2, P91
   Zhang C, 2012, PROC INT CONF SOFTW, P826, DOI 10.1109/ICSE.2012.6227136
NR 23
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2021
VL 26
IS 2
AR 23
DI 10.1007/s10664-020-09922-8
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QN8ZF
UT WOS:000622739400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Choetkiertikul, M
   Dam, HK
   Tran, T
   Pham, T
   Ragkhitwetsagul, C
   Ghose, A
AF Choetkiertikul, Morakot
   Dam, Hoa Khanh
   Tran, Truyen
   Pham, Trang
   Ragkhitwetsagul, Chaiyong
   Ghose, Aditya
TI Automatically recommending components for issue reports using deep
   learning
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering analytics; Component recommendation; Recommendation
   systems for software engineering; Mining software repositories; Deep
   learning
ID DUPLICATE BUG REPORTS; NEURAL-NETWORKS; NATURAL-LANGUAGE; SEVERITY;
   INFORMATION; PREDICTION
AB Today's software development is typically driven by incremental changes made to software to implement a new functionality, fix a bug, or improve its performance and security. Each change request is often described as an issue. Recent studies suggest that a set of components (e.g., software modules) relevant to the resolution of an issue is one of the most important information provided with the issue that software engineers often rely on. However, assigning an issue to the correct component(s) is challenging, especially for large-scale projects which have up to hundreds of components. In this paper, we propose a predictive model which learns from historical issue reports and recommends the most relevant components for new issues. Our model uses Long Short-Term Memory, a deep learning technique, to automatically learn semantic features representing an issue report, and combines them with the traditional textual similarity features. An extensive evaluation on 142,025 issues from 11 large projects shows that our approach outperforms one common baseline, two state-of-the-art techniques, and six alternative techniques with an improvement of 16.70%-66.31% on average across all projects in predictive performance.
C1 [Choetkiertikul, Morakot; Ragkhitwetsagul, Chaiyong] Mahidol Univ, Software Engn Res Unit SERU, Fac Informat & Commun Technol ICT, Salaya, Nakhon Pathom, Thailand.
   [Dam, Hoa Khanh; Ghose, Aditya] Univ Wollongong, Sch Comp & Informat Technol, Fac Engn & Informat Sci, Wollongong, NSW, Australia.
   [Tran, Truyen; Pham, Trang] Deakin Univ, Sch Informat Technol, Geelong, Vic, Australia.
C3 Mahidol University; University of Wollongong; Deakin University
RP Choetkiertikul, M (corresponding author), Mahidol Univ, Software Engn Res Unit SERU, Fac Informat & Commun Technol ICT, Salaya, Nakhon Pathom, Thailand.
EM morakot.cho@mahidol.ac.th; hoa@uow.edu.au; truyen.tran@deakin.edu.au;
   phtra@deakin.edu.au; chaiyong.rag@mahidol.ac.th; aditya@uow.edu.au
RI Ragkhitwetsagul, Chaiyong/GSN-1156-2022; Ragkhitwetsagul,
   Chaiyong/JOZ-6943-2023; Dam, Hoa Khanh/C-6058-2014; Pham, Trang
   Ngoc/KRP-7874-2024
OI Choetkiertikul, Morakot/0000-0001-8188-4749; Tran,
   Truyen/0000-0001-6531-8907
CR Al-Kofahi J., 2010, Proc. Int'l Conf. Software Maintenance (ICSM 10), P1
   Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   Lam AN, 2015, IEEE INT CONF AUTOM, P476, DOI 10.1109/ASE.2015.73
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], 2004, Software Engineering and Knowledge Engineering
   [Anonymous], 2017, CORR
   [Anonymous], 2001, GRADIENT FLOW RECURR, DOI DOI 10.1109/9780470544037.CH14
   [Anonymous], 1997, NEURAL COMPUT
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Atzmueller M, 2015, LECT NOTES COMPUT SC, V8940, P55, DOI [10.1007/978-3-319-14723-9_4, DOI 10.1007/978-3-319-14723-9_4]
   Baroni M, 2014, PROCEEDINGS OF THE 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P238
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Cherman E.A., 2011, CLEI ELECT J, V14, P4, DOI [10.19153/cleiej.14.1.4, DOI 10.19153/CLEIEJ.14.1.4]
   Choetkiertikul M, 2018, PROC IEEE ACM INT C, P244, DOI 10.1145/3183440.3194952
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cottrell Rylan., 2008, P INT S FDN SOFTWARE, P214, DOI [DOI 10.1145/1453101.1453130, 10.1145/1453101.1453130]
   da Costa DA, 2014, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSME.2014.50
   Dam H. K., 2016, FSE 2016, P1
   Denninger O., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P78, DOI 10.1109/RSSE.2012.6233416
   Elisseeff A, 2002, ADV NEUR IN, V14, P681
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Gasparic M, 2016, J SYST SOFTWARE, V113, P101, DOI 10.1016/j.jss.2015.11.036
   Gers FA, 2000, NEURAL COMPUT, V12, P2451, DOI 10.1162/089976600300015015
   Glasmachers T., 2017, P 9 ASIAN C MACHINE, P17
   Graves A, 2013, INT CONF ACOUST SPEE, P6645, DOI 10.1109/ICASSP.2013.6638947
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Gutmann MU, 2012, J MACH LEARN RES, V13, P307
   Iqbal Azhar, 2014, ISRN Dent, V2014, P865780, DOI 10.1155/2014/865780
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   James ER, 1913, AM J SOCIOL, V18, P769, DOI 10.1086/212157
   Jindal R, 2017, INT J SYST ASSUR ENG, V8, P334, DOI 10.1007/s13198-016-0438-y
   Johnson R., 2015, P 2015 C N AM CHAPT, P103, DOI DOI 10.3115/V1/N15-1011
   Jones C., 2004, CrossTalk:The Journal of Defense Software Engineering, P5
   Kakarontzas G, 2012, EUROMICRO CONF PROC, P192, DOI 10.1109/SEAA.2012.39
   Kerzner H., 2017, PROJECT MANAGEMENT S
   Kochhar PS, 2014, IEEE INT C ENG COMP, P126, DOI 10.1109/ICECCS.2014.25
   KULLBACK S, 1951, ANN MATH STAT, V22, P79, DOI 10.1214/aoms/1177729694
   Kumari Madhu, 2020, Intelligent Systems Design and Applications. Proceedings of 18th International Conference on Intelligent Systems Design and Applications (ISDA 2018). Advances in Intelligent Systems and Computing (AISC 940), P571, DOI 10.1007/978-3-030-16657-1_53
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lamkanfi A, 2013, EUR CON SFTWR MTNCE, P327, DOI 10.1109/CSMR.2013.42
   Lamkanfi A, 2011, EUR CON SFTWR MTNCE, P249, DOI 10.1109/CSMR.2011.31
   Le Quoc V., 2014, P INT C MACH LEARN I
   LEDERER AL, 1992, COMMUN ACM, V35, P50
   Lee SR, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P926, DOI 10.1145/3106237.3117776
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Linares-Vasquez M, 2014, EMPIR SOFTW ENG, V19, P582, DOI 10.1007/s10664-012-9230-z
   Mani S, 2019, PROCEEDINGS OF THE 6TH ACM IKDD CODS AND 24TH COMAD, P171, DOI 10.1145/3297001.3297023
   McCallum A., 1998, AAAI 98 WORKSH LEARN, V752, P41, DOI DOI 10.1109/TSMC.1985.6313426
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Mohammad F., 2018, 2018, P447
   Nam Jinseok, 2014, Machine Learning and Knowledge Discovery in Databases. European Conference, ECML PKDD 2014. Proceedings: LNCS 8725, P437, DOI 10.1007/978-3-662-44851-9_28
   Navarro-Almanza R, 2017, 2017 5TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2017), P116, DOI 10.1109/CONISOFT.2017.00021
   Ng JYH, 2015, PROC CVPR IEEE, P4694, DOI 10.1109/CVPR.2015.7299101
   Otoom AF, 2016, INT CONF INFORM COMM, P92, DOI 10.1109/IACS.2016.7476092
   Pandey N, 2017, INNOV SYST SOFTW ENG, V13, P279, DOI 10.1007/s11334-017-0294-1
   Park YJ, 2008, RECSYS'08: PROCEEDINGS OF THE 2008 ACM CONFERENCE ON RECOMMENDER SYSTEMS, P11
   Project Management Institute Inc, 2000, GUID PROJ MAN BOD KN, DOI [10.5860/CHOICE.34-1636,978-1-933890-51-7, DOI 10.5860/CHOICE.34-1636,978-1-933890-51-7]
   Rahman MM, 2009, INT SYMP EMP SOFTWAR, P440
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   SAHA RK, 2013, P 2013 9 JOINT M FDN, P663, DOI DOI 10.1145/2491411.2494585
   Saini V, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P354, DOI 10.1145/3236024.3236026
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Schmidhuber J, 2015, NEURAL NETWORKS, V61, P85, DOI 10.1016/j.neunet.2014.09.003
   Somasundaram K., 2012, Proceedings of the 5th India Software Engineering Conference, ISEC '12, P125, DOI DOI 10.1145/2134254.2134276
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Steck H., 2010, TRAINING TESTING REC, P713, DOI 10.1145/1835804.1835895
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Sundermeyer M, 2012, 13TH ANNUAL CONFERENCE OF THE INTERNATIONAL SPEECH COMMUNICATION ASSOCIATION 2012 (INTERSPEECH 2012), VOLS 1-3, P194
   Sureka A, 2012, LECT NOTES COMPUT SC, V7304, P288, DOI 10.1007/978-3-642-30561-0_20
   Team T.T. D., 2016, Theano: A Python framework for fast computation of mathematical expressions
   Thung F., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P205, DOI 10.1109/WCRE.2012.30
   Tian Y, 2015, EMPIR SOFTW ENG, V20, P1354, DOI 10.1007/s10664-014-9331-y
   Vargas-Baldrich S, 2015, IEEE INT CONF AUTOM, P289, DOI 10.1109/ASE.2015.38
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang SW, 2014, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2014.51
   Wang SW, 2014, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSME.2014.39
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Wang T, 2014, FRONT COMPUT SCI-CHI, V8, P69, DOI 10.1007/s11704-013-2394-x
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Xi SQ, 2019, J COMPUT SCI TECH-CH, V34, P942, DOI 10.1007/s11390-019-1953-5
   Xi SQ, 2018, INTERNETWARE'18: PROCEEDINGS OF THE TENTH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, DOI 10.1145/3275219.3275228
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Xia X, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P174, DOI 10.1109/CSMR-WCRE.2014.6747167
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Yan M, 2016, INFORM SOFTWARE TECH, V73, P37, DOI 10.1016/j.infsof.2016.01.005
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yin HZ, 2012, PROC VLDB ENDOW, V5, P896, DOI 10.14778/2311906.2311916
   Zanoni M, 2014, J SOFTW-EVOL PROC, V26, P1172, DOI 10.1002/smr.1656
   Zhang ML, 2006, IEEE T KNOWL DATA EN, V18, P1338, DOI 10.1109/TKDE.2006.162
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zhou PY, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P272, DOI 10.1109/SANER.2017.7884628
NR 99
TC 11
Z9 12
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB 2
PY 2021
VL 26
IS 2
AR 14
DI 10.1007/s10664-020-09898-5
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QE8AJ
UT WOS:000616428300002
DA 2024-07-18
ER

PT J
AU Damasceno, CDN
   Mousavi, MR
   Simao, AD
AF Nascimento Damasceno, Carlos Diego
   Mousavi, Mohammad Reza
   Simao, Adenilso da Silva
TI Learning by sampling: learning behavioral family models from software
   product lines
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software product lines; Model learning; Family model; T-wise sampling
ID EFFECT SIZE; AUTOMATA; EVOLUTION; FRAMEWORK; INFERENCE; SELECTION;
   LEARNLIB; SYSTEMS
AB Family-based behavioral analysis operates on a single specification artifact, referred to as family model, annotated with feature constraints to express behavioral variability in terms of conditional states and transitions. Family-based behavioral modeling paves the way for efficient model-based analysis of software product lines. Family-based behavioral model learning incorporates feature model analysis and model learning principles to efficiently unify product models into a family model and integrate the behavior of various products into a behavioral family model. Albeit reasonably effective, the exhaustive analysis of product lines is often infeasible due to the potentially exponential number of valid configurations. In this paper, we first present a family-based behavioral model learning techniques, called FFSMDiff. Subsequently, we report on our experience on learning family models by employing product sampling. Using 105 products of six product lines expressed in terms of Mealy machines, we evaluate the precision of family models learned from products selected from different settings of the T-wise product sampling criterion. We show that product sampling can lead to models as precise as those learned by exhaustive analysis and hence, reduce the costs for family model learning.
C1 [Nascimento Damasceno, Carlos Diego; Simao, Adenilso da Silva] Univ Sao Paulo, Inst Ciencias Matemat & Comp, Av Trab Sao Carlense 400, BR-13566590 Sao Carlos, SP, Brazil.
   [Mousavi, Mohammad Reza] Univ Leicester, Dept Informat, Univ Rd, Leicester LE1 7RH, Leics, England.
C3 Universidade de Sao Paulo; University of Leicester
RP Damasceno, CDN (corresponding author), Univ Sao Paulo, Inst Ciencias Matemat & Comp, Av Trab Sao Carlense 400, BR-13566590 Sao Carlos, SP, Brazil.
EM damascenodiego@alumni.usp.br; mm789@leicester.ac.uk;
   adenilso@icmc.usp.br
RI Simao, Adenilso S/E-9620-2011; Mousavi, Mohammad Reza/A-3410-2013;
   Nascimento Damasceno, Carlos Diego/AAH-6048-2019
OI Nascimento Damasceno, Carlos Diego/0000-0001-8492-7484; Mousavi,
   Mohammad Reza/0000-0002-4869-6794
FU Coordenac ao de Aperfeicoamento de Pessoal 1167 de Nivel Superior -
   Brasil (CAPES) [001]; FAPESP [2019/06937-0, 2013/07375- 1170 0];
   University of 1168 Leicester (UK), College of Science Engineering; UKRI
   Trustworthy Autonomous Systems Node in Verifiability [EP/V026801/1]
FX This study was financed in part by the Coordenac ao de Aperfeicoamento
   de Pessoal 1167 de Nivel Superior - Brasil (CAPES) - Finance Code 001,
   FAPESP (grant 2019/06937-0), and University of 1168 Leicester (UK),
   College of Science & Engineering. Research carried out using the
   computational resources of 1169 the Center for Mathematical Sciences
   Applied to Industry (CeMEAI) funded by FAPESP (grant 2013/07375- 1170
   0). We have also been partially supported by the UKRI Trustworthy
   Autonomous Systems Node in Verifiability, Grant Award Reference
   EP/V026801/1. The authors are grateful to the anonymous reviewers, the
   VALidation and VErification (VALVE) group of 1171 the University of
   Leicester and Laboratory of Software Engineering (LabES) at the
   University of Sao Paulo 1172 for their insightful comments.
CR Aarts Fides, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P10, DOI 10.1007/978-3-642-32759-9_4
   Aichernig BK, 2018, LECT NOTES COMPUT SC, V11026, P74, DOI 10.1007/978-3-319-96562-8_3
   Al-Hajjaji Mustafa, 2017, 2017 IEEE/ACM 2nd International Workshop on Variability and Complexity in Software Design (VACE). Proceedings, P34, DOI 10.1109/VACE.2017.8
   Al-Hajjaji M, 2017, ACM SIGPLAN NOTICES, V52, P144, DOI [10.1145/2993236.2993253, 10.1145/3093335.2993253]
   Al-Khiaty MA, 2017, PROCEEDINGS OF THE 2017 12TH INTERNATIONAL SCIENTIFIC AND TECHNICAL CONFERENCE ON COMPUTER SCIENCES AND INFORMATION TECHNOLOGIES (CSIT 2017), VOL. 1, P161, DOI 10.1109/STC-CSIT.2017.8098759
   Al-Msie'deen R., 2014, P 11 INT C CONCEPT L, P95
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   [Anonymous], 2010, Journal on Satisfiability, Boolean Modeling and Computation, DOI DOI 10.3233/SAT190075
   [Anonymous], 2017, R PACKAGE VERSION
   [Anonymous], 2012, EXPT SOFTWARE ENG
   [Anonymous], 2012, P 6 INT WORKSH VAMOS
   Apache, 2016, COMM MATH AP COMM MA
   Apel Sven., 2013, P 5 INT WORKSHOP FEA, P1, DOI [10.1145/2528265.2528267, DOI 10.1145/2528265.2528267]
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Asirelli Patrizia, 2012, Leveraging Applications of Formal Methods, Verification and Validation. Technologies for Mastering Change. Technologies for Mastering Change. Proceedings of the 5th International Symposium, ISoLA 2012, P146, DOI 10.1007/978-3-642-34026-0_12
   ASIRELLI P, 2011, 2011 15 INT SOFTW PR, P130, DOI DOI 10.1109/SPLC.2011.34
   Atlee Joanne M., 2015, P 12 WORKSH MOD DRIV, V1514, P38
   Baier C., 2008, REPRESENTATION MIND
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Bauer O, 2014, INT J SOFTW TOOLS TE, V16, P531, DOI 10.1007/s10009-014-0333-2
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Benduhn Fabian., 2015, Proceedings of the 9th International Workshop on Variability Modelling of Software-intensive Systems (VaMoS'15), page, P80
   Beohar H, 2016, J LOG ALGEBR METHODS, V85, P1131, DOI 10.1016/j.jlamp.2016.09.007
   Beohar H, 2016, SCI COMPUT PROGRAM, V123, P42, DOI 10.1016/j.scico.2015.06.005
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Bertolino A, 2015, INFORM SOFTWARE TECH, V58, P355, DOI 10.1016/j.infsof.2014.07.003
   Beuche D., 2016, SPLC, P262
   Brabrand C., 2012, Proceedings of the 11th Annual International Conference on Aspect-oriented Software Development, AOSD '12, P13, DOI DOI 10.1145/2162049.2162052
   BROY M, 2005, MODEL BASED TESTING, P1, DOI DOI 10.1007/11498490_1
   Cartaxo EG, 2011, SOFTW TEST VERIF REL, V21, P75, DOI 10.1002/stvr.413
   Chapman M, 2015, LECT NOTES COMPUT SC, V9364, P114, DOI 10.1007/978-3-319-24953-7_9
   CHOW TS, 1978, IEEE T SOFTWARE ENG, V4, P178, DOI 10.1109/TSE.1978.231496
   Chrszon P, 2018, FORM ASP COMPUT, V30, P45, DOI 10.1007/s00165-017-0432-4
   Chvatal V., 1979, Mathematics of Operations Research, V4, P233, DOI 10.1287/moor.4.3.233
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Classen A, 2013, IEEE T SOFTWARE ENG, V39, P1069, DOI 10.1109/TSE.2012.86
   Classen Andreas, 2010, MODELLING FTS COLLEC
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Czarnecki K, 2002, LECT NOTES COMPUT SC, V2487, P156
   Czarnecki Krzysztof., 2005, Software Process: Improvement and Practice, P2005
   Damasceno Carlos Diego N., 2018, Journal of Software Engineering Research and Development, V6, DOI 10.1186/s40411-017-0045-x
   Damasceno CDN, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P52, DOI 10.1145/3336294.3336307
   Damasceno CDN, 2019, LECT NOTES COMPUT SC, V11918, P138, DOI 10.1007/978-3-030-34968-4_8
   de Ruiter J, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P193
   DEVROEY X, 2014, VIBES VARIABILITY IN
   Devroey X., 2015, P WORKSH VAR MOD SOF
   Devroey X, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P89, DOI 10.1145/2866614.2866627
   Deza M.M., 2013, ENCY DISTANCES, P291
   Ensan Faezeh, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P613, DOI 10.1007/978-3-642-31095-9_40
   *FEATUREIDE, 2020, FEAT EXT FRAM FEAT O
   FENSKE W, 2014, P 8 INT WORKSH VAR M, DOI DOI 10.1145/2556624.2556643
   Fischbein D., 2006, ROSATEA 06, P39
   FITERUBROTEAN P, 2017, CRITICAL SYSTEMS FOR, DOI DOI 10.1007/978-3-319-67113-0_12
   Fragal VH, 2019, COMPUT J, V62, P109, DOI 10.1093/comjnl/bxy046
   Fragal VH, 2019, SCI COMPUT PROGRAM, V171, P67, DOI 10.1016/j.scico.2018.10.001
   Fragal VH, 2017, LECT NOTES COMPUT SC, V10231, P210, DOI 10.1007/978-3-319-57666-4_13
   FRAGAL VH, 2017, THESIS
   Gill A., 1962, Introduction to the Theory of Finite-State Machines
   HAREL D, 1987, SCI COMPUT PROGRAM, V8, P231, DOI 10.1016/0167-6423(87)90035-9
   Haslinger E. N., 2011, 2011 18th Working Conference on Reverse Engineering, P308, DOI 10.1109/WCRE.2011.45
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Hess M. R., 2004, ANN M AM ED RES ASS, P1
   Holthusen, 2014, P 18 INT SOFTW PROD, V2, P36, DOI DOI 10.1145/2647908.2655965
   HOWAR BJS, 2015, DIFTS 2015
   Huistra D, 2018, LECT NOTES COMPUT SC, V11119, P162, DOI 10.1007/978-3-030-00244-2_11
   Hungar H, 2003, LECT NOTES COMPUT SC, V2725, P315
   Irfan MN, 2013, ADV COMPUT, V89, P89, DOI 10.1016/B978-0-12-408094-2.00003-5
   Isberner M, 2015, LECT NOTES COMPUT SC, V9206, P487, DOI 10.1007/978-3-319-21690-4_32
   Johansen MF, 2011, LECT NOTES COMPUT SC, V6981, P638, DOI 10.1007/978-3-642-24485-8_47
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kang K.C., 1990, CMUSEI90TR021
   KELLER RM, 1976, COMMUN ACM, V19, P371, DOI 10.1145/360248.360251
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Kunze S, 2016, 2016 WORKSHOP ON AUTOMOTIVE SYSTEMS/SOFTWARE ARCHITECTURES (WASA), P22, DOI 10.1109/WASA.2016.7
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   LANGAAS K, 1998, P 6 EUR C MATH OIL R, P1
   Larsen U, 1988, Eur J Popul, V3, P203, DOI 10.1109/LICS.1988.5119
   LINDEN FJV, 2007, SOFTWARE PRODUCT LIN, DOI DOI 10.1007/978-3-540-71437-8
   Lopez-Herrejon RE, 2014, 2014 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P387, DOI 10.1109/CEC.2014.6900473
   Luthmann L, 2019, J SYST SOFTWARE, V149, P535, DOI 10.1016/j.jss.2018.12.028
   Luthmann L, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P104, DOI 10.1145/3106195.3106204
   Mariani L, 2015, ADV COMPUT, V99, P157, DOI 10.1016/bs.adcom.2015.04.002
   Marques M, 2019, INFORM SOFTWARE TECH, V105, P190, DOI 10.1016/j.infsof.2018.08.014
   Mendez D., 2020, CONT EMPIRICAL METHO, P477
   Damasceno CDN, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P83, DOI 10.1145/2973839.2973849
   Neider Daniel, 2019, Models, Mindsets, Meta. The What, the How, and the Why Not? Essays Dedicated to Bernhard Steffen on the Occasion of His 60th Birthday. Lecture Notes in Computer Science (LNCS 11200), P390, DOI 10.1007/978-3-030-22348-9_23
   Nejati S, 2012, IEEE T SOFTWARE ENG, V38, P1355, DOI 10.1109/TSE.2011.112
   Neubauer J., 2012, 2012 Proceedings of First International Workshop on Formal Methods in Software Engineering: Rigorous and Agile Approaches (FormSERA 2012), P37, DOI 10.1109/FormSERA.2012.6229787
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Nyman U, 2007, LECT NOTES COMPUT SC, V4421, P64
   OSTER S, 2012, THESIS
   Peled D, 1999, INT FED INFO PROC, V28, P225
   PERROUIN G, 2010, 2010 3 INT C SOFTW T, P459, DOI DOI 10.1109/ICST.2010.43
   Petke Justyna, 2013, P ESEC FSE 2013, DOI [DOI 10.1145/2491411.2491436, 10.1145/2491411.2491436]
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Raffelt H, 2006, LECT NOTES COMPUT SC, V3922, P377
   Raffelt Harald, 2009, International Journal on Software Tools for Technology Transfer, V11, P307, DOI 10.1007/s10009-009-0120-7
   Richard Kuhn D., 2013, Introduction to combinatorial testing
   *RSTUDIO, 2019, RSTUDIO OP SOURC ENT
   Runeson P, 2012, ADV COMPUT, V86, P223, DOI 10.1016/B978-0-12-396535-6.00007-7
   Ryssel U., 2011, P INT SOFTW PROD LIN, V2, P1, DOI [DOI 10.1145/2019136.2019141, 10.1145/2019136.2019141]
   Sabouri H, 2013, LECT NOTES COMPUT SC, V8161, P51, DOI 10.1007/978-3-642-40213-5_4
   Samih H, 2014, IEEE INT C ENG COMP, P77, DOI 10.1109/ICECCS.2014.19
   Schaefer I., 2012, International Journal on Software Tools for Technology Transfer (STTT), V14, P477, DOI [DOI 10.1007/S10009-012-0253-Y, 10.1007/s10009-012-0253-y]
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Schuts M, 2016, LECT NOTES COMPUT SC, V9681, P311, DOI 10.1007/978-3-319-33693-0_20
   Sery O., 2015, Validation of Evolving Software, P55, DOI DOI 10.1007/978-3-319-10623-6_6
   Shahbaz M, 2009, LECT NOTES COMPUT SC, V5850, P207, DOI 10.1007/978-3-642-05089-3_14
   Sharp DC, 2000, KLUWER INT SER ENG C, V576, P353
   Sokolova M, 2009, INFORM PROCESS MANAG, V45, P427, DOI 10.1016/j.ipm.2009.03.002
   *SPLC, 2020, HALL FAM SPLC
   Stevenson A, 2014, SCI COMPUT PROGRAM, V96, P444, DOI 10.1016/j.scico.2014.05.008
   Svendsen A, 2010, LECT NOTES COMPUT SC, V6287, P106, DOI 10.1007/978-3-642-15579-6_8
   ter Beek MH, 2019, SCI COMPUT PROGRAM, V169, P1, DOI 10.1016/j.scico.2018.09.006
   ter Beek MH, 2017, LECT NOTES COMPUT SC, V10202, P387, DOI 10.1007/978-3-662-54494-5_23
   ter Beek MH, 2016, J LOG ALGEBR METHODS, V85, P287, DOI 10.1016/j.jlamp.2015.11.006
   TERBEEK MH, 2019, P 23 INT SYST SOFTW, P1, DOI DOI 10.1145/3336294.3336295
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Thum T., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P191, DOI 10.1109/SPLC.2011.53
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Vaandrager F, 2017, COMMUN ACM, V60, P85, DOI 10.1145/2967606
   van der Linden F., 2007, SOFTWARE PRODUCT LIN, P219
   VANDERLINDEN F, 2007, SOFTWARE PRODUCT LIN, P233, DOI DOI 10.1007/978-3-540-71437-8_15
   VANDERLINDEN F, 2007, SOFTWARE PRODUCT LIN, P249, DOI DOI 10.1007/978-3-540-71437-8_16
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Varshosaz M, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P1, DOI 10.1145/3233027.3233035
   Varshosaz M, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P34
   Vasilevskii M.P., 1973, CYBERNETICS, V4, P653
   *VIBES, 2016, VIBES VAR INT SYST B
   von Rhein A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P178, DOI 10.1109/ICSE.2015.39
   Walkinshaw N, 2013, ADV COMPUT, V91, P1, DOI 10.1016/B978-0-12-408089-8.00001-X
   Walkinshaw N, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430545.2430549
   Wohlin C., 2012, EXPT SOFTWARE ENG, P45, DOI DOI 10.1007/978-3-642-29044-2_4
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
NR 135
TC 4
Z9 4
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN 8
PY 2021
VL 26
IS 1
AR 4
DI 10.1007/s10664-020-09912-w
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PW0HJ
UT WOS:000610357500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rios, N
   Spínola, RO
   Mendonça, M
   Seaman, C
AF Rios, Nicolli
   Spinola, Rodrigo Oliveira
   Mendonca, Manoel
   Seaman, Carolyn
TI The practitioners' point of view on the concept of technical debt and
   its causes and consequences: a design for a global family of industrial
   surveys and its first results from Brazil
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Technical debt; Technical debt causes; Technical debt effects; Survey;
   Family of surveys; InsighTD
ID MANAGEMENT
AB Context Studying the causes of technical debt (TD) could aid in TD prevention, thus easing the job of TD management. On the other hand, better understanding of the effects of TD could also aid in TD management by facilitating more informed decisions about incurring and paying off debt. Objective Create a deeper understanding, and confirming existing evidence, of the causes and effects of TD by collecting new evidence from real-world TD examples. Method InsighTD is a globally distributed family of industrial surveys on the causes and effects of TD. It is designed to run as a large-scale study based on continuous and independent replications in different countries. The survey instrument asks practitioners to describe in detail a real example of TD from their experience. We present in this paper the design of InsighTD, which has the primary goal of replication at a large-scale, with the results of the study in Brazil as a small part of the larger puzzle. Results The first iteration of the InsighTD survey, carried out in Brazil, yielded 107 responses. We identified a total of 78 causes and 66 effects, which confirm and also extend the current knowledge on causes and effects of TD. Then, we organized the identified set of causes and effects in probabilistic cause-effect diagrams. The proposed diagrams highlight the causes that can most contribute to the occurrence of TD as well as the most common effects that occur as a result of debt. Conclusion We intend to reduce the problem of isolated TD investigations that are not yet representative and build a continuous and generalizable empirical basis for understanding practical problems and challenges of TD.
C1 [Rios, Nicolli] Univ Fed Bahia, Dept Comp Sci, Salvador, BA, Brazil.
   [Spinola, Rodrigo Oliveira] Salvador Univ State Univ Bahia, Grad Program Syst & Comp, Salvador, BA, Brazil.
   [Mendonca, Manoel] Univ Fed Bahia, Dept Comp Sci, Salvador, BA, Brazil.
   [Seaman, Carolyn] Univ Maryland Baltimore Cty, Dept Informat Syst, Baltimore, MD 21228 USA.
C3 Universidade Federal da Bahia; Universidade Federal da Bahia; University
   System of Maryland; University of Maryland Baltimore County
RP Rios, N (corresponding author), Univ Fed Bahia, Dept Comp Sci, Salvador, BA, Brazil.
EM nicollirioss@gmail.com; rodrigo.spinola@unifacs.br;
   manoel.mendonca@ufba.br; cseaman@umbc.edu
RI Mendonca, Manoel/A-1579-2011
OI Mendonca, Manoel/0000-0002-0874-7665
FU Coordination for the Improvement of Higher Education Personnel - Brazil
   (Capes), under the Capes/IIASA Sandwich Doctoral Program
   [88881.189667/2018-01]; David A. Wilson Award for Excellence in Teaching
   and Learning
FX This work was partially supported by the Coordination for the
   Improvement of Higher Education Personnel - Brazil (Capes), under the
   Capes/IIASA Sandwich Doctoral Program, process no 88881.189667/2018-01.
   This research was also supported in part by funds received from the
   David A. Wilson Award for Excellence in Teaching and Learning, which was
   created by the Laureate International Universities network to support
   research focused on teaching and learning. For more information on the
   award or Laureate, please visit www.laureate.net.
CR Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   [Anonymous], P 26 WORK C REQ ENG
   [Anonymous], 30 INT C SOFTW ENG K
   [Anonymous], WICSA ECSA 2012
   [Anonymous], WHAT IS HYBRID AGILE
   [Anonymous], 2001, Using Grounded Theory in Nursing
   [Anonymous], 10X SOFTWARE DEV BLO
   [Anonymous], 2016, DAGSTUHL REPORTS
   [Anonymous], P 2014 WINT SIM C PI
   [Anonymous], 38 INT C CHIL COMP S
   [Anonymous], 2019, P 2019 AMERICAS C IN
   Beck K., 2011, MANIFESTO AGILE SOFT
   Besker T., 2018, INT C TECHN DEBT TEC
   Besker T, 2018, J SYST SOFTWARE, V135, P1, DOI 10.1016/j.jss.2017.09.025
   Besker T, 2017, PROC IEEE INT CONF S, P13, DOI 10.1109/ICSME.2017.42
   Besker T, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P278, DOI 10.1109/SEAA.2017.16
   Buzan T., 1974, Using both sides of the brain
   Buzan Tony., 1995, The Mind Map Book, V2
   CARD DN, 1993, IEEE SOFTWARE, V10, P98, DOI 10.1109/52.219639
   Codabux Z, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P8, DOI 10.1109/MTD.2013.6608672
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Fernandez DM, 2015, IEEE SOFTWARE, V32, P16, DOI 10.1109/MS.2015.122
   Freire S, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1548, DOI 10.1145/3341105.3373912
   Guo Y., 2011, 2 WORKSH MAN TECHN D, P31, DOI [10.1145/1985362.1985370, DOI 10.1145/1985362.1985370]
   Guo YP, 2016, EMPIR SOFTW ENG, V21, P159, DOI 10.1007/s10664-014-9351-7
   Ishikawa K., 1976, Guide to Quality Control
   Kalinowski M, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P199, DOI 10.1109/SEAA.2008.47
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Martini A, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1877
   Martini A, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P422, DOI 10.1109/SEAA.2015.78
   Martini A, 2014, EUROMICRO CONF PROC, P85, DOI 10.1109/SEAA.2014.65
   Pacheco A, 2019, LECT NOTES COMPUT SC, V11915, P236, DOI 10.1007/978-3-030-35333-9_17
   Pressman R. S., 2014, SOFTWARE ENG, V8th
   Rios N, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P3, DOI 10.1109/TechDebt.2019.00009
   Rios N, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268917
   Rios N, 2018, EUROMICRO CONF PROC, P429, DOI 10.1109/SEAA.2018.00076
   Rios N, 2018, INFORM SOFTWARE TECH, V102, P117, DOI 10.1016/j.infsof.2018.05.010
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Wohlin C., 2012, EXPT SOFTWARE ENG IN
   Yli-Huumo J, 2016, J SYST SOFTWARE, V120, P195, DOI 10.1016/j.jss.2016.05.018
   Yli-Huumo J, 2015, LECT NOTES BUS INF P, V210, P1, DOI 10.1007/978-3-319-19593-3_1
   Yli-Huumo J, 2014, LECT NOTES COMPUT SC, V8892, P93, DOI 10.1007/978-3-319-13835-0_7
NR 45
TC 44
Z9 46
U1 1
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3216
EP 3287
DI 10.1007/s10664-020-09832-9
EA JUN 2020
PG 72
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000539983400002
DA 2024-07-18
ER

PT J
AU Zampetti, F
   Vassallo, C
   Panichella, S
   Canfora, G
   Gall, H
   Di Penta, M
AF Zampetti, Fiorella
   Vassallo, Carmine
   Panichella, Sebastiano
   Canfora, Gerardo
   Gall, Harald
   Di Penta, Massimiliano
TI An empirical characterization of bad practices in continuous integration
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Continuous integration; Empirical study; Bad practices; Survey;
   Interview
AB Continuous Integration (CI) has been claimed to introduce several benefits in software development, including high software quality and reliability. However, recent work pointed out challenges, barriers and bad practices characterizing its adoption. This paper empirically investigates what are the bad practices experienced by developers applying CI. The investigation has been conducted by leveraging semi-structured interviews of 13 experts and mining more than 2,300 Stack Overflow posts. As a result, we compiled a catalog of 79 CI bad smells belonging to 7 categories related to different dimensions of a CI pipeline management and process. We have also investigated the perceived importance of the identified bad smells through a survey involving 26 professional developers, and discussed how the results of our study relate to existing knowledge about CI bad practices. Whilst some results, such as the poor usage of branches, confirm existing literature, the study also highlights uncovered bad practices, e.g., related to static analysis tools or the abuse of shell scripts, and contradict knowledge from existing literature, e.g., about avoiding nightly builds. We discuss the implications of our catalog of CI bad smells for (i) practitioners, e.g., favor specific, portable tools over hacking, and do not ignore nor hide build failures, (ii) educators, e.g., teach CI culture, not just technology, and teach CI by providing examples of what not to do, and (iii) researchers, e.g., developing support for failure analysis, as well as automated CI bad smell detectors.
C1 [Zampetti, Fiorella] Univ Sannio, Dept Engn, Via Traiano 9, Benevento, Italy.
   [Canfora, Gerardo] Univ Sannio, Comp Sci, Sch Engn, Via Traiano 9, Benevento, Italy.
   [Di Penta, Massimiliano] Univ Sannio, Via Traiano 9, Benevento, Italy.
   [Vassallo, Carmine] Univ Zurich, Binzmuehlestr 14, Zurich, Switzerland.
   [Gall, Harald] Univ Zurich, Dept Informat, Software Engn, Binzmuehlestr 14, Zurich, Switzerland.
   [Panichella, Sebastiano] Zurich Univ Appl Sci, Obere Kirchgasse 2 Steinberggasse 12-14, CH-8400 Winterthur, Switzerland.
C3 University of Sannio; University of Sannio; University of Sannio;
   University of Zurich; University of Zurich; Zurich University of Applied
   Sciences
RP Zampetti, F (corresponding author), Univ Sannio, Dept Engn, Via Traiano 9, Benevento, Italy.; Zampetti, F (corresponding author), Univ Sannio, Comp Sci, Sch Engn, Via Traiano 9, Benevento, Italy.; Zampetti, F (corresponding author), Univ Sannio, Via Traiano 9, Benevento, Italy.
EM fiorella.zampetti@unisannio.it; vassallo@ifi.uzh.ch; panc@zhaw.ch;
   canfora@unisannio.it; gall@ifi.uzh.ch; dipenta@unisannio.it
RI Di Penta, Massimiliano/AAF-9656-2021
OI Panichella, Sebastiano/0000-0003-4120-626X; Gall,
   Harald/0000-0002-3874-5628; Di Penta, Massimiliano/0000-0002-0340-9747
CR Abdalkareem R, 2021, IEEE T SOFTWARE ENG, V47, P448, DOI 10.1109/TSE.2019.2897300
   Amazon, 2017, WHAT IS CONT DEL
   [Anonymous], 30 IEEE INT C SOFTW
   [Anonymous], QUESTIONNAIRE DESIGN
   [Anonymous], P 14 INT C MIN SOFTW
   [Anonymous], P 2015 10 JOINT M FD
   [Anonymous], P INT C SOFTW ENG IC
   [Anonymous], P 31 IEEE ACM INT C
   [Anonymous], 2017 IEEE INT C SOFT
   Basili Victor R., 1992, TECH REP
   Beck K., 2000, EXTREME PROGRAMMING
   Bell J, 2008, CONTINUOUS INTEGRATI
   Bell J, 2017, J SYSTEMS SOFTWARE
   Bell J, 1960, COEFFICIENT AGREEMEN
   Bell J, 2017, P 14 INT C MIN SOFTW
   Bell J, 1991, OBJECT ORIENTED DESI
   Bell J, 2016, IEEE 23 INT C SOFTW
   Bell J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P433, DOI 10.1145/3180155.3180164
   Thorve S, 2018, PROC IEEE INT CONF S, P534, DOI 10.1109/ICSME.2018.00062
   Duvall Paul, 2011, Continuous delivery: patterns and antipatterns in the software lifecycle
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Duvall Paul M., 2010, CONTINUOUS INTEGRATI
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gallaba K, 2020, IEEE T SOFTWARE ENG, V46, P33, DOI 10.1109/TSE.2018.2838131
   Ghaleb TA, 2019, EMPIR SOFTW ENG, V24, P2102, DOI 10.1007/s10664-019-09695-9
   Goodman L., 1961, Snowball Sampling
   Hilton Michael, 2017, P 25 ACM SIGSOFT INT
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Islam SMM, 2019, IEEE RADIO WIRELESS, P164, DOI 10.1109/rws.2019.8714272
   Johnson B., 2013, 2013 35 INT C SOFTW
   Krippendorff K., 1980, Content Analysis
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   McIntosh S, 2011, P INT C SOFTW ENG IC
   Moreno L, 2017, IEEE T SOFTWARE ENG, V43, P106, DOI 10.1109/TSE.2016.2591536
   Olsson HH, 2012, P 2012 38 EUR C SOFT
   Orellana MG, 2017, P 14 WORK C MIN SOFT
   Palomba F, 2017, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2017.12
   Potdar A, 2014, 30 IEEE INT C SOFTW
   Rahman MT, 2016, 2016 IEEE ACM 13 WOR
   Rastkar S, 2014, IEEE T SOFTWARE ENG, V40, P366, DOI 10.1109/TSE.2013.2297712
   Savor T, 2016, COMP P 38 INT C SOFT
   Spencer D., 2009, CARD SORTING DESIGNI
   Stahl D, 2014, COMP P 36 INT C SOFT
   Stahl Daniel, 2014, J SYST SOFTW
   Van Deursen Arie, 2001, INT C EXTR PROGR FLE, P92
   Vassallo C, 2019, EVERY BUILD YOU BREA
   Vassallo C, 2016, 32 IEEE INT C SOFTW
   Vassallo Carmine, 2019, P 41 INT C SOFTW ENG
   Wedyan F, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P141, DOI 10.1109/ICST.2009.21
   Zampetti F, 2019, TECHNICAL REPORT
NR 50
TC 31
Z9 33
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2020
VL 25
IS 2
SI SI
BP 1095
EP 1135
DI 10.1007/s10664-019-09785-8
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT0VU
UT WOS:000518729800003
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Nayebi, M
   Dicke, L
   Ittyipe, R
   Carlson, C
   Ruhe, G
AF Nayebi, Maleknaz
   Dicke, Liam
   Ittyipe, Ron
   Carlson, Chris
   Ruhe, Guenther
TI ESSMArT way to manage customer requests
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automation; customer request management; Text summarization; Ticket
   escalation; Ticket assignment; Mining software repositories; Case study
   evaluation
AB Quality and market acceptance of software products is strongly influenced by responsiveness to customer requests. Once a customer request is received, a decision must be made whether to escalate it to the development team. Once escalated, the ticket must be formulated as a development task and assigned to a developer. To make the process more efficient and reduce the time between receiving and escalating the customer request, we aim to automate the complete customer request management process. We propose a holistic method called ESSMArT. The method performs text summarization, predicts ticket escalation, creates the ticket's title and content, and ultimately assigns the ticket to an available developer. We began evaluating the method through an internal assessment of 4114 customer tickets from Brightsquid's secure health care communication platform - Secure-Mail. Next, we conducted an external evaluation of the usefulness of the approach and concluded that: i) supervised learning based on context specific data performs best for extractive summarization; ii) Random Forest trained on a combination of conversation and extractive summarization works best for predicting escalation of tickets, with the highest precision (of 0.9) and recall (of 0.55). Through external evaluation, we furthermore found that ESSMArT provides suggestions that are 71% aligned with human ones. Applying the prototype implementation to 315 customer requests resulted in an average time reduction of 9.2 min per request. ESSMArT helps to make ticket management faster and with reduced effort for human experts. We conclude that ESSMArT not only expedites ticket management, but furthermore reduces human effort. ESSMArT can help Brightsquid to (i) minimize the impact of staff turnover and (ii) shorten the cycle from an issue being reported to a developer being assigned to fix it.
C1 [Nayebi, Maleknaz] Ecole Polytech Montreal, Montreal, PQ, Canada.
   [Dicke, Liam] Univ Alberta, Engn Phys, Edmonton, AB, Canada.
   [Ittyipe, Ron; Ruhe, Guenther] Univ Calgary, SEDS Lab, Calgary, AB, Canada.
   [Carlson, Chris] Brightsquid Inc, Calgary, AB, Canada.
C3 Universite de Montreal; Polytechnique Montreal; University of Alberta;
   University of Calgary
RP Nayebi, M (corresponding author), Ecole Polytech Montreal, Montreal, PQ, Canada.
EM mnayebi@polymtl.ca; dickc@ualberta.ca; ron.ittyipe@ucalgary.ca;
   chris.carlson@Brightsquid.com; ruhe@ucalgary.ca
OI Dicke, Liam/0000-0001-9151-1559
CR [Anonymous], 2014, RECOMMENDATION SYSTE, DOI DOI 10.1007/978-3-642-45135-5_4
   [Anonymous], 2004, TSBO
   [Anonymous], 2017, ARXIV170702268
   [Anonymous], 2004, P 2004 C EMP METH NA
   [Anonymous], 2007, Literature Survey for the Language and Statistics II course
   Anvik J, 2016, EVALUATING ASSISTANT, P26
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Auffarth B, 2010, LECT NOTES ARTIF INT, V6171, P248, DOI 10.1007/978-3-642-14400-4_20
   Bandera H, 2018, Patent No. [15/293,988, 15293988]
   Banerjee S, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P1208
   Batista Jamilson., 2015, Proceedings of the 2015 ACM Symposium on Document Engineering, P65
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   CARENINI G, 2007, P 16 INT C WORLD WID, P91, DOI DOI 10.1145/1242572.1242586
   Cerpa N, 2016, J SYST SOFTWARE, V112, P48, DOI 10.1016/j.jss.2015.10.011
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Du GS, 2009, INT SYMP EMP SOFTWAR, P56, DOI 10.1109/ESEM.2009.5316049
   EDMUNDSON HP, 1969, J ACM, V16, P264, DOI 10.1145/321510.321519
   Galar M, 2012, IEEE T SYST MAN CY C, V42, P463, DOI 10.1109/TSMCC.2011.2161285
   Gambhir M, 2017, ARTIF INTELL REV, V47, P1, DOI 10.1007/s10462-016-9475-9
   Gupta Vishal, 2010, Journal of Emerging Technologies in Web Intelligence, V2, P258, DOI 10.4304/jetwi.2.3.258-268
   Hearst MA, 1998, IEEE INTELL SYST APP, V13, P18, DOI 10.1109/5254.708428
   Hyvarinen JK, 2004, INDEPENDENT COMPONEN, V46
   Jha N, 2018, EMPIR SOFTW ENG, P1
   Jonsson L, 2016, EMPIR SOFTW ENG, V21, P1533, DOI 10.1007/s10664-015-9401-9
   Kabeer SJ, 2017, INT SYMP EMP SOFTWAR, P131, DOI 10.1109/ESEM.2017.20
   Kim S., 2007, EUROPEAN SOFTWARE EN, P45
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Lemberger PP, 2013, MANAGING COMPLEXITY
   Ling C. X, 2005, 5 IEEE INT C DAT MIN, P4
   Maalej W, 2016, IEEE SOFTWARE, V33, P48, DOI 10.1109/MS.2015.153
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Mani S., 2012, P ACM SIGSOFT 20 INT, P1, DOI DOI 10.1145/2393596.2393607
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Menzies T., 2011, Proceedings of the International Workshop on Machine Learning Technologies in Software Engineering, P19
   Mohit B., 2014, Natural language processing of semitic languages, P221
   Montgomery L, 2017, INT REQUIR ENG CONF, P362, DOI 10.1109/RE.2017.61
   Montgomery L, 2017, INT REQUIR ENG CONF, P452, DOI 10.1109/RE.2017.62
   Moreno L, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P484, DOI 10.1145/2635868.2635870
   Murray Gabriel, 2008, Proceedings of EMNLP, P773
   Nayebi M, 2018, IEEE SOFTWARE, V35, P54, DOI 10.1109/MS.2017.4541048
   Nayebi M, 2017, PROC INT CONF SOFTW, P57, DOI 10.1109/ICSE-SEIS.2017.8
   Nayebi M, 2015, 2015 30TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOP (ASEW), P18, DOI 10.1109/ASEW.2015.28
   Nayebi M, 2014, LECT NOTES BUS INF P, V182, P273
   Nazar N, 2016, J COMPUT SCI TECH-CH, V31, P883, DOI 10.1007/s11390-016-1671-1
   Peng HC, 2005, IEEE T PATTERN ANAL, V27, P1226, DOI 10.1109/TPAMI.2005.159
   Ramos Juan., 2003, USING TF IDF DETERMI, V242, P29
   Rastkar S, 2014, IEEE T SOFTWARE ENG, V40, P366, DOI 10.1109/TSE.2013.2297712
   Rastkar Sarah, 2010, P 32 ACM IEEE INT C, V1, P505, DOI DOI 10.1145/1806799.1806872
   Rish I., 2001, IJCAI 2001 WORKSH EM, P41
   Schutze H, 1998, COMPUT LINGUIST, V24, P97
   Sheng VS, 2014, KNOWL-BASED SYST, V66, P146, DOI 10.1016/j.knosys.2014.04.033
   Singhal S, 2019, ABSTRACTIVE TEXT SUM
   Steinberger J., 2004, Proc. ISIM, V4, P93
   Vanderwende L, 2007, INFORM PROCESS MANAG, V43, P1606, DOI 10.1016/j.ipm.2007.01.023
   Wallach H.M., 2006, Proc. 23rd Int. Conf. Mach. Learn, P977984
   Williams G, 2017, INT REQUIR ENG CONF, P1, DOI 10.1109/RE.2017.14
   WOLD S, 1987, CHEMOMETR INTELL LAB, V2, P37, DOI 10.1016/0169-7439(87)80084-9
   WOLPERT DH, 1992, NEURAL NETWORKS, V5, P241, DOI 10.1016/S0893-6080(05)80023-1
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Young T, 2018, IEEE COMPUT INTELL M, V13, P55, DOI 10.1109/MCI.2018.2840738
   Yu L, 2004, J MACH LEARN RES, V5, P1205
   [No title captured]
NR 63
TC 2
Z9 2
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3755
EP 3789
DI 10.1007/s10664-019-09721-w
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JT6XW
UT WOS:000501131100017
DA 2024-07-18
ER

PT J
AU Garousi, V
   Pfahl, D
   Fernandes, JM
   Felderer, M
   Mantyla, MV
   Shepherd, D
   Arcuri, A
   Coskunçay, A
   Tekinerdogan, B
AF Garousi, Vahid
   Pfahl, Dietmar
   Fernandes, Joao M.
   Felderer, Michael
   Mantyla, Mika, V
   Shepherd, David
   Arcuri, Andrea
   Coskuncay, Ahmet
   Tekinerdogan, Bedir
TI Characterizing industry-academia collaborations in software engineering:
   evidence from 101 projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Industry-academia collaborations; Challenges;
   Patterns; Best practices; Anti-patterns; Empirical study; Evidence
ID IMPACT
AB Research collaboration between industry and academia supports improvement and innovation in industry and helps ensure the industrial relevance of academic research. However, many researchers and practitioners in the community believe that the level of joint industry-academia collaboration (IAC) projects in Software Engineering (SE) research is relatively low, creating a barrier between research and practice. The goal of the empirical study reported in this paper is to explore and characterize the state of IAC with respect to industrial needs, developed solutions, impacts of the projects and also a set of challenges, patterns and anti-patterns identified by a recent Systematic Literature Review (SLR) study. To address the above goal, we conducted an opinion survey among researchers and practitioners with respect to their experience in IAC. Our dataset includes 101 data points from IAC projects conducted in 21 different countries. Our findings include: (1) the most popular topics of the IAC projects, in the dataset, are: software testing, quality, process, and project managements; (2) over 90% of IAC projects result in at least one publication; (3) almost 50% of IACs are initiated by industry, busting the myth that industry tends to avoid IACs; and (4) 61% of the IAC projects report having a positive impact on their industrial context, while 31% report no noticeable impacts or were not sure. To improve this situation, we present evidence-based recommendations to increase the success of IAC projects, such as the importance of testing pilot solutions before using them in industry. This study aims to contribute to the body of evidence in the area of IAC, and benefit researchers and practitioners. Using the data and evidence presented in this paper, they can conduct more successful IAC projects in SE by being aware of the challenges and how to overcome them, by applying best practices (patterns), and by preventing anti-patterns.
C1 [Garousi, Vahid; Tekinerdogan, Bedir] Wageningen Univ, Informat Technol Grp, Wageningen, Netherlands.
   [Pfahl, Dietmar] Univ Tartu, Inst Comp Sci, Tartu, Estonia.
   [Pfahl, Dietmar] Univ Calgary, Dept Elect & Comp Engn, Calgary, AB, Canada.
   [Fernandes, Joao M.] Univ Minho, Dept Informat, ALGORITMI Ctr, Braga, Portugal.
   [Felderer, Michael] Univ Innsbruck, Dept Comp Sci, Innsbruck, Austria.
   [Felderer, Michael] Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
   [Mantyla, Mika, V] Univ Oulu, Fac Informat Technol & Elect Engn, M3S, Oulu, Finland.
   [Shepherd, David] ABB Corp Res, Raleigh, NC USA.
   [Arcuri, Andrea] Kristiania Univ Coll, Software Engn, Oslo, Norway.
   [Coskuncay, Ahmet] Ataturk Univ, Comp Engn Dept, Erzurum, Turkey.
C3 Wageningen University & Research; University of Tartu; University of
   Calgary; Universidade do Minho; University of Innsbruck; Blekinge
   Institute Technology; University of Oulu; ABB; Kristiania University
   College; Ataturk University
RP Garousi, V (corresponding author), Wageningen Univ, Informat Technol Grp, Wageningen, Netherlands.
EM vahid.garousi@wur.nl; dietmar.pfahl@ut.ee; jmf@di.uminho.pt;
   michael.felderer@uibk.ac.at; mika.mantyla@oulu.fi;
   david.shepherd@us.abb.com; andrea.arcuri@kristiania.no;
   ahmet.coskuncay@atauni.edu.tr; bedir.tekinerdogan@wur.nl
RI Fernandes, João/IUN-2117-2023; Pfahl, Dietmar Alfred Paul
   Kurt/H-3084-2015; Coskuncay, Ahmet/M-5099-2019; Felderer,
   Michael/AAF-4909-2020; Fernandes, João M/B-3942-2013; Mäntylä, Mika
   V/E-7644-2012; Tekinerdogan, Bedir/K-3639-2019
OI Pfahl, Dietmar Alfred Paul Kurt/0000-0003-2400-501X; Coskuncay,
   Ahmet/0000-0002-7411-310X; Fernandes, João M/0000-0003-1174-1966;
   Tekinerdogan, Bedir/0000-0002-8538-7261; Garousi,
   Vahid/0000-0001-6590-7576; Shepherd, David C./0000-0003-2017-7842
FU FCT (Fundacao para a Ciencia e Tecnologia) [UID/CEC/00319/2013];
   Estonian Research Council [IUT20-55]; Research Council of Norway
   [274385]; Academy of Finland; ITEA3/TEKES
FX The authors would like to thank the researchers and practitioners who
   participated in this survey. Joao M. Fernandes was supported by FCT
   (Fundacao para a Ciencia e Tecnologia) within the Project Scope
   UID/CEC/00319/2013. Dietmar Pfahl was supported by the institutional
   research grant IUT20-55 of the Estonian Research Council. Andrea Arcuri
   was supported by the Research Council of Norway (grant agreement No
   274385). Mika Mantyla was partially supported by Academy of Finland
   grant and ITEA3/TEKES grant.
CR Al-Tabbaa O, 2016, TECHNOL FORECAST SOC, V104, P1, DOI 10.1016/j.techfore.2015.11.027
   Ankrah S, 2015, SCAND J MANAG, V31, P387, DOI 10.1016/j.scaman.2015.02.003
   [Anonymous], J ENG ED TRANSFORM
   [Anonymous], COMMUN ASS INF SYST
   [Anonymous], TMMI SPEC REF MOD RE
   [Anonymous], 2014, BASICS QUALITATIVE R
   [Anonymous], RELATIONAL READING D
   [Anonymous], P INT S EMP SOFTW EN
   [Anonymous], 2003, HDB MIXED METHODS SO
   [Anonymous], PANEL STATE SOFTWARE
   [Anonymous], IMPACT DESIGN RES IN
   [Anonymous], IEEE SOFTWARE
   [Anonymous], 2012, MAKING U IND PARTNER
   [Anonymous], DATASET SURVEY IND A
   [Anonymous], P SOFTWARE ENG C
   [Anonymous], SIGSOFT IMP PROJ
   [Anonymous], P ACM IEEE INT S EMP
   [Anonymous], JAP INT WORKSH SCI S
   [Anonymous], P ACM IEEE INT S EMP
   [Anonymous], 2013, ICSOFT 2013
   [Anonymous], TECHNICAL REPORT
   [Anonymous], ENDOGENOUS MATCHING
   Banal-Estañol A, 2013, ECON DEV Q, V27, P71, DOI 10.1177/0891242412472535
   Barnes T, 2002, Eur Manag J, V20, P272, DOI [DOI 10.1016/S0263-2373(02)00044-0, 10.1016/S0263-2373, DOI 10.1016/S0263-2373]
   Basili V, 2018, IEEE SOFTWARE, V35, P44, DOI 10.1109/MS.2018.290110216
   Barbolla AMB, 2009, TECHNOL ANAL STRATEG, V21, P599, DOI 10.1080/09537320902969133
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Briand L. C., 2011, 2011 IEEE 27th International Conference on Software Maintenance, DOI 10.1109/ICSM.2011.6080766
   Briand L, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.3571562
   Briand L, 2012, IEEE SOFTWARE, V29, P96, DOI 10.1109/MS.2012.86
   Broy M, 2018, IEEE SOFTWARE, V35, P38, DOI 10.1109/MS.2018.290111138
   Carayol N, 2003, RES POLICY, V32, P887, DOI 10.1016/S0048-7333(02)00108-7
   Carver JC, 2018, IEEE SOFTWARE, V35, P120, DOI 10.1109/MS.2018.3571250
   Christensen HB, 2008, SEVENTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P257, DOI 10.1109/WICSA.2008.36
   Cohn Mike, 2009, Succeeding with Agile: Software Development Using Scrum, V1st
   Cruzes D.S., 2010, P ACM IEEE INT S EMP
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Dolezel M, 2015, INFORM SOFTWARE TECH, V65, P69, DOI 10.1016/j.infsof.2015.03.003
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ebert C, 2018, IEEE SOFTWARE, V35, P94, DOI 10.1109/MS.2018.3571228
   Emmerich W., 2007, Software Engineering Notes, V32, P21, DOI 10.1145/1226816.1226829
   Farhoodi R, 2013, INT J SOFTW ENG KNOW, V23, P463, DOI 10.1142/S0218194013500137
   FERBER R, 1977, J CONSUM RES, V4, P57, DOI 10.1086/208679
   Fox S, 2016, EUR MANAG J, V34, P457, DOI 10.1016/j.emj.2016.07.005
   Garousi Vahid, 2017, Software Quality Journal, V25, P1091, DOI 10.1007/s11219-016-9319-5
   Garousi V., 2017, Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering - EASE'17, P224, DOI [DOI 10.1145/3084226.3084279, 10.1145/3084226, DOI 10.1145/3084226]
   Garousi V., 2017, Proc. 2017 ACM SIGSOFT, P21, DOI DOI 10.1145/3121245.3121250
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Garousi V, 2016, IEEE INT CONF SOFTW, P213, DOI 10.1109/ICST.2016.7
   Glass R.L., 2006, SOFTWARE CREATIVITY
   GLASS RL, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.329400
   Gobo G., 2004, QUALITATIVE RES PRAC, P327
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Gregor S, 2006, MIS QUART, V30, P611
   Griswold WG, 2015, IEEE SOFTWARE, V32, P30, DOI 10.1109/MS.2015.107
   Hicks M, 2010, COMMUN ACM, V53, P30, DOI 10.1145/1831407.1831421
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Huang MH, 2017, TECHNOL FORECAST SOC, V123, P210, DOI 10.1016/j.techfore.2016.03.024
   Ivanov V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P890, DOI 10.1145/3106237.3117778
   Jain S, 2013, IEEE-ACM INT WKSP CO, P9, DOI 10.1109/CESI.2013.6618463
   Johnson P., 2012, IEEE Software, V29, P94, DOI 10.1109/MS.2012.127
   Kline P, 2013, Handbook of psychological testing, DOI DOI 10.4324/9781315812274
   Koomen T., 1999, TEST PROCESS IMPROVE
   Lin JY, 2017, TECHNOL FORECAST SOC, V123, P216, DOI 10.1016/j.techfore.2016.03.016
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   McGauran N, 2010, TRIALS, V11, DOI 10.1186/1745-6215-11-37
   Miles M.B., 2014, Qualitative data analysis: A methods sourcebook, V3rd
   Mindruta D, 2013, STRATEGIC MANAGE J, V34, P644, DOI 10.1002/smj.2036
   Olson JudithS., 2008, Scientific Collaboration on the Internet
   Osterweil LJ, 2008, COMPUTER, V41, P39, DOI 10.1109/MC.2008.85
   Panda A, 2014, IIMB MANAG REV, V26, P156, DOI 10.1016/j.iimb.2014.07.008
   Petersen K., 2014, P 2014 INT WORKSH LO, P55
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Philbin S, 2008, EUR J INNOV MANAG, V11, P488, DOI 10.1108/14601060810911138
   POTTS C, 1993, IEEE SOFTWARE, V10, P19, DOI 10.1109/52.232392
   Poulding S, 2015, INT SYMP EMP SOFTWAR, P140, DOI 10.1109/ESEM.2015.7321216
   Rombach D, 2008, ACM SIGSOFT SOFTW EN, V33, P26
   Rombach DH, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P29, DOI 10.1109/FOSE.2007.16
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sackett P.R., 1990, Handbook of Industrial and Organizational Psychology, V2nd
   Sandberg AB, 2011, IEEE SOFTWARE, V28, P74, DOI 10.1109/MS.2011.49
   Santos Paulo, 2009, 2009 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM), P414, DOI 10.1109/ESEM.2009.5316013
   Segal J, 2008, IEEE SOFTWARE, V25, P18, DOI 10.1109/MS.2008.85
   Shimer R, 2000, ECONOMETRICA, V68, P343, DOI 10.1111/1468-0262.00112
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Solingen R. V., 1999, GOAL QUESTION METRIC
   Stringer E. T., 2013, Action research, V4th
   Tichy WalterF., 1993, SIGSOFT Softw. Eng. Notes, V18, P35
   Viikki K, 2011, EUROMICRO CONF PROC, P313, DOI 10.1109/SEAA.2011.54
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C, 2013, IEEE-ACM INT WKSP CO, P43, DOI 10.1109/CESI.2013.6618469
   Wohlin C, 2012, IEEE SOFTWARE, V29, P67, DOI 10.1109/MS.2011.92
   Yusifoglu VG, 2015, INFORM SOFTWARE TECH, V58, P123, DOI 10.1016/j.infsof.2014.06.009
   Zhi JJ, 2015, J SYST SOFTWARE, V99, P175, DOI 10.1016/j.jss.2014.09.042
NR 95
TC 27
Z9 29
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 2540
EP 2602
DI 10.1007/s10664-019-09711-y
PG 63
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA IL9CL
UT WOS:000477582700024
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Saborido, R
   Morales, R
   Khomh, F
   Guéhéneuc, YG
   Antoniol, G
AF Saborido, Ruben
   Morales, Rodrigo
   Khomh, Foutse
   Gueheneuc, Yann-Gael
   Antoniol, Giuliano
TI Getting the most from map data structures in Android
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Android; Map data structure; Map implementations; CPU usage; Memory
   usage; Energy consumption
ID IMPACT
AB A map is a data structure that is commonly used to store data as key-value pairs and retrieve data as keys, values, or key-value pairs. Although Java offers different map implementation classes, Android SDK offers other implementations supposed to be more efficient than HashMap: ArrayMap and SparseArray variants (SparseArray, LongSparseArray, SparseIntArray, SparseLongArray, and SparseBooleanArray). Yet, the performance of these implementations in terms of CPU time, memory usage, and energy consumption is lacking in the official Android documentation; although saving CPU, memory, and energy is a major concern of users wanting to increase battery life. Consequently, we study the use of map implementations by Android developers in two ways. First, we perform an observational study of 5713 Android apps in GitHub. Second, we conduct a survey to assess developers' perspective on Java and Android map implementations. Then, we perform an experimental study comparing HashMap, ArrayMap, and SparseArray variants map implementations in terms of CPU time, memory usage, and energy consumption. We conclude with guidelines for choosing among the map implementations: HashMap is preferable over ArrayMap to improve energy efficiency of apps, and SparseArray variants should be used instead of HashMap and ArrayMap when keys are primitive types.
C1 [Saborido, Ruben; Morales, Rodrigo; Khomh, Foutse; Gueheneuc, Yann-Gael; Antoniol, Giuliano] Ecole Polytech Montreal, Dept Genie Informat & Genie Logiciel, Pavillon Lassonde,Succ Ctr Ville 2700,Chemin Tour, Montreal, PQ H3T 1J4, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Saborido, R (corresponding author), Ecole Polytech Montreal, Dept Genie Informat & Genie Logiciel, Pavillon Lassonde,Succ Ctr Ville 2700,Chemin Tour, Montreal, PQ H3T 1J4, Canada.
EM ruben.saborido-infantes@polymtl.ca; rodrigo.morales@polymtl.ca;
   foutse.khomh@polymtl.ca; yann-gael.gueheneuc@polymtl.ca;
   giulio.antoniol@polymtl.ca
RI Guéhéneuc, Yann-Gaël/K-9371-2019; Alvarado, Rodrigo
   Morales/AAR-2780-2021; Saborido, Rubén/I-7001-2019
OI Alvarado, Rodrigo Morales/0000-0002-1350-0560; Saborido,
   Rubén/0000-0002-0944-5941
CR [Anonymous], 2010, PROC 8 INT C MOBILE, DOI [DOI 10.1145/1814433, 10.1145/1814433.1814441, DOI 10.1145/1814433.1814441]
   Banerjee A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P588, DOI 10.1145/2635868.2635871
   Chen XS, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON ROBOTICS AND BIOMIMETICS (ROBIO), P485, DOI 10.1109/ROBIO.2016.7866369
   Gui J., 2015, P 37 INT C SOFTW ENG
   Hasan S, 2016, PROC INT CONF SOFTW, P225, DOI 10.1145/2884781.2884869
   Huang Peng., 2016, Proceedings of the 14th Annual International Conference on Mobile Systems, Applications, and Services, P221
   Li D., 2014, P INT C SOFTW MAINT
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Liu KN, 2015, LECT NOTES COMPUT SC, V9033, P316, DOI 10.1007/978-3-662-46675-9_21
   Manotas I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P503, DOI 10.11455/2568225.2568297
   Morales R, 2018, IEEE T SOFTWARE ENG, V44, P1176, DOI 10.1109/TSE.2017.2757486
   Saborido R., 2016, P 23 IEEE INT C SOFT
   Saborido R, 2017, INT C PROGRAM COMPRE, P143, DOI 10.1109/ICPC.2017.25
   Sahin C, 2016, J SYST SOFTW, DOI [10.1016/j.jss.2016.03.031.http://www.sciencedirect.com/science/article/pii/S0164121216000893, DOI 10.1016/J.JSS.2016.03.031.HTTP://WWW.SCIENCEDIRECT.C0M/SCIENCE/ARTICLE/PII/S0164121216000893]
   Sahin C, 2014, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSME.2014.35
   Shacham Ohad, 2009, SIGPLAN Notices, V44, P408, DOI 10.1145/1543135.1542522
   Singer Janice, 2008, Guide to Advanced Empirical Software Engineering, P9
   Tyagi Pradeep K., 1989, Journal of the Academy of Marketing Science, V17, P235
   Zhang CL, 2014, IEEE SOFTWARE, V31, P69, DOI 10.1109/MS.2014.27
NR 19
TC 10
Z9 10
U1 1
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2018
VL 23
IS 5
BP 2829
EP 2864
DI 10.1007/s10664-018-9607-8
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO5AW
UT WOS:000440031100010
DA 2024-07-18
ER

PT J
AU Arif, MM
   Shang, WY
   Shihab, E
AF Arif, Muhammad Moiz
   Shang, Weiyi
   Shihab, Emad
TI Empirical study on the discrepancy between performance testing results
   from virtual and physical environments
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software performance engineering; Software performance analysis and
   testing on virtual environments
AB Large software systems often undergo performance tests to ensure their capability to handle expected loads. These performance tests often consume large amounts of computing resources and time since heavy loads need to be generated. Making it worse, the ever evolving field requires frequent updates to the performance testing environment. In practice, virtual machines (VMs) are widely exploited to provide flexible and less costly environments for performance tests. However, the use of VMs may introduce confounding overhead (e.g., a higher than expected memory utilization with unstable I/O traffic) to the testing environment and lead to unrealistic performance testing results. Yet, little research has studied the impact on test results of using VMs in performance testing activities. To evaluate the discrepancy between the performance testing results from virtual and physical environments, we perform a case study on two open source systems - namely Dell DVD Store (DS2) and CloudStore. We conduct the same performance tests in both virtual and physical environments and compare the performance testing results based on the three aspects that are typically examined for performance testing results: 1) single performance metric (e.g. CPU Time from virtual environment vs. CPU Time from physical environment), 2) the relationship among performance metrics (e.g. correlation between CPU and I/O) and 3) performance models that are built to predict system performance. Our results show that 1) A single metric from virtual and physical environments do not follow the same distribution, hence practitioners cannot simply use a scaling factor to compare the performance between environments, 2) correlations among performance metrics in virtual environments are different from those in physical environments 3) statistical models built based on the performance metrics from virtual environments are different from the models built from physical environments suggesting that practitioners cannot use the performance testing results across virtual and physical environments. In order to assist the practitioners leverage performance testing results in both environments, we investigate ways to reduce the discrepancy. We find that such discrepancy can be reduced by normalizing performance metrics based on deviance. Overall, we suggest that practitioners should not use the performance testing results from virtual environment with the simple assumption of straightforward performance overhead. Instead, practitioners should consider leveraging normalization techniques to reduce the discrepancy before examining performance testing results from virtual and physical environments.
C1 [Arif, Muhammad Moiz; Shang, Weiyi; Shihab, Emad] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
C3 Concordia University - Canada
RP Arif, MM (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
EM mo_ari@encs.concordia.ca; shang@encs.concordia.ca;
   eshihab@encs.concordia.ca
CR Ahmed TM, 2016, MSR 2016 P 13 WORK C
   Andale, 2012, STAT COEFFICIENT DET
   [Anonymous], E HDB STAT METH
   [Anonymous], 2014, CLOUDSCALE PROJECT
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   Apache, 2008, JMET
   Apache, 2007, TOMC
   Blackberry, 2014, BLACKBERRY ENTERPRIS
   Bodik Peter., 2008, Proceedings of the Third Conference on Tackling Computer Systems Problems with Machine Learning Techniques, P3
   Brosig F, 2013, I S MOD ANAL SIM COM, P404, DOI 10.1109/MASCOTS.2013.61
   CA Technologies, 2011, AV COST DOWNT
   CHAMBERS J, 1990, COMPSTAT 1990 : PROCEEDINGS IN COMPUTATIONAL STATISTICS, P317
   Chen PM, 2001, EIGHTH WORKSHOP ON HOT TOPICS IN OPERATING SYSTEMS, PROCEEDINGS, P133
   Cito J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P393, DOI 10.1145/2786805.2786826
   Cohen I, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P231
   Cohen I., 2005, Proceedings of the twentieth ACM symposium on Operating systems principles, SOSP '05, (New York, NY, USA), P105, DOI DOI 10.1145/1095810.1095821
   Costantini D, 2015, CONFIGURE PASS DISK
   Dean J, 2013, COMMUN ACM, V56, P74, DOI 10.1145/2408776.2408794
   Dee, 2014, PERFORMANCE TESTING
   Eeton K, 2012, ONE 2 COULD COST AMA
   Foo King Chun, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P32, DOI 10.1109/QSIC.2010.35
   Freedman D. A., 2009, STAT MODELS THEORY P
   Harrell F.E., 2001, Regression modeling strategies: with applications to linear models, logistic regression, and survival analysis
   Heger Christoph, 2013, P 4 ACM SPEC INT C P, P27, DOI DOI 10.1145/2479871.2479879
   Huber Nikolaus, 2011, Proceedings of the 1st International Conference on Cloud Computing and Services Science. CLOSER 2011, P563
   Jaffe D, 2011, DELL DVD STORE
   Jiang M, 2009, ACM/IEEE SIXTH INTERNATIONAL CONFERENCE ON AUTONOMIC COMPUTING AND COMMUNICATIONS (ICAC '09), P13
   Jiang M, 2009, I C DEPEND SYS NETWO, P285, DOI 10.1109/DSN.2009.5270324
   Jiang ZM, 2009, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSM.2009.5306331
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Kabacoff RI, 2011, R IN ACTION, P207
   Kearon S, 2012, CAN YOU USE VIRTUAL
   Kohavi R., 1995, STUDY CROSS VALIDATI, DOI DOI 10.1067/MOD.2000.109031
   Kraft S., 2011, ACM SIGSOFT SOFTWARE, V36, P295
   Kuhn M, 2008, J STAT SOFTW, V28, P1, DOI 10.18637/jss.v028.i05
   Leitner P, 2016, ACM T INTERNET TECHN, V16, DOI 10.1145/2885497
   Luo Q, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P25, DOI [10.1109/MSR.2016.013, 10.1145/2901739.2901765]
   Malik H., 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P201, DOI 10.1109/ISSRE.2010.43
   Malik H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1012, DOI 10.1109/ICSE.2013.6606651
   Malik H, 2010, EUR CON SFTWR MTNCE, P222, DOI 10.1109/CSMR.2010.39
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Menon Aravind., 2005, Proceedings of the 1st ACM/USENIX international conference on Virtual execution environments, VEE '05, P13
   Merrill CL, 2009, LOAD TESTING SUGARCR
   Microsoft Technet, 2007, WINDOWS PERFORMANCE
   Netto M. A. S., 2011, 2011 IEEE International Symposium on Parallel & Distributed Processing, Workshops and Phd Forum, P993, DOI 10.1109/IPDPS.2011.244
   Nguyen ThanhHD., 2012, P 3 ACMSPEC INT C PE, P299
   Nistor A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P562, DOI 10.1109/ICSE.2013.6606602
   Nistor A, 2013, IEEE WORK CONF MIN S, P237, DOI 10.1109/MSR.2013.6624035
   Oracle, 1998, MYSQL SERVER 5 6
   Refaeilzadeh P., 2009, ENCYCL DATABASE SYST, V5, P532, DOI DOI 10.1007/978-0-387-39940-9565
   Rodola G, 2009, PSUTIL
   Shang Weiyi., 2015, P 6 ACMSPEC INT C PE, P15
   Shewhart W.A., 1931, EC CONTROL QUALITY M, V509
   Srion E, 2015, TIME HYPER PASS DISK
   Stapleton JH, 2008, MODELS FOR PROBABILITY AND STATISTICAL INFERENCE: THEORY AND APPLICATIONS, P1
   SugarCRM, 2017, SUG
   Syer MD, 2017, AUTOMAT SOFTW ENG, V24, P189, DOI 10.1007/s10515-016-0196-8
   Syer MD, 2013, PROC IEEE INT CONF S, P110, DOI 10.1109/ICSM.2013.22
   Tintin, 2011, PERFORMANCE TEST IS
   TPC, 2001, TPC W
   Tsakiltsidis S, 2016, IEEE INT SYMP SOFTW, P132, DOI 10.1109/ISSREW.2016.43
   Tyson J, 2001, NETWORK ADDRESS TRAN
   VMWare, 2016, ACC SOFTW DEV TEST V
   Walker H. M., 1929, STUDIES HIST STAT ME
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   Xiong PengCheng, 2013, ACM SPEC INT C PERF, P271, DOI 10.1145/2479871.2479909
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
NR 67
TC 12
Z9 12
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2018
VL 23
IS 3
BP 1490
EP 1518
DI 10.1007/s10664-017-9553-x
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GH6DH
UT WOS:000433532300010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Dintzner, N
   van Deursen, A
   Pinzger, M
AF Dintzner, Nicolas
   van Deursen, Arie
   Pinzger, Martin
TI FEVER: An approach to analyze feature-oriented changes and artefact
   co-evolution in highly configurable systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Highly variable systems; Co-evolution; Feature; Variability
ID LINUX
AB The evolution of highly configurable systems is known to be a challenging task. Thorough understanding of configuration options their relationships, and their implementation in various types of artefacts (variability model, mapping, and implementation) is required to avoid compilation errors, invalid products, or dead code. Recent studies focusing on co-evolution of artefacts detailed feature-oriented change scenarios, describing how related artefacts might change over time. However, relying on manual analysis of commits, such work do not provide the means to obtain quantitative information on the frequency of described scenarios nor information on the exhaustiveness of the presented scenarios for the evolution of a large scale system. In this work, we propose FEVER and its instantiation for the Linux kernel. FEVER extracts detailed information on changes in variability models (KConfig files), assets (preprocessor based C code), and mappings (Makefiles). We apply this methodology to the Linux kernel and build a dataset comprised of 15 releases of the kernel history. We performed an evaluation of the FEVER approach by manually inspecting the data and compared it with commits in the system's history. The evaluation shows that FEVER accurately captures feature related changes for more than 85% of the 810 manually inspected commits. We use the collected data to reflect on occurrences of co-evolution in practice. Our analysis shows that complex co-evolution scenarios occur in every studied release but are not among the most frequent change scenarios, as they only occur for 8 to 13% of the evolving features. Moreover, only a minority of developers working on a given release will make changes to all artefacts related to a feature (between 10% and 13% of authors). While our conclusions are derived from observations on the evolution of the Linux kernel, we believe that they may have implications for tool developers as well as guide further research in the field of co-evolution of artefacts.
C1 [Dintzner, Nicolas; van Deursen, Arie] Delft Univ Technol, Software Engn Res Grp, Delft, Netherlands.
   [Pinzger, Martin] Univ Klagenfurt, Software Engn Res Grp, Klagenfurt, Austria.
C3 Delft University of Technology; University of Klagenfurt
EM N.J.R.Dintzner@tudelft.nl; Arie.vanDeursen@tudelft.nl;
   martin.pinzger@aau.at
RI van Deursen, Arie/G-3084-2011
OI van Deursen, Arie/0000-0003-4850-3312
FU Dutch national program COMMIT
FX This publication was supported by the Dutch national program COMMIT and
   carried out as part of the Allegio project under the responsibility of
   the Embedded Systems Innovation group of TNO.
CR Abal Iago, 2014, P 29 ACM IEEE INT C, P421
   Adams B., 2008, ELECT COMMUN EASST, V8
   Ahsan SN, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P216, DOI 10.1109/ICSEA.2009.92
   [Anonymous], 2015, EMPIR SOFTW ENG
   [Anonymous], 2012, P WORKSH MOD SYST SO
   [Anonymous], 1990, FEATURE ORIENTED DOM
   [Anonymous], 2014, MSR 14, DOI [DOI 10.1145/2597073.2597124, 10.1145/2597073.2597124]
   [Anonymous], P CVPR
   BATORY DS, 1988, IEEE T SOFTWARE ENG, V14, P1711, DOI 10.1109/32.9057
   Begel A., 2010, Software Engineering, 2010 ACM/IEEE 32nd International Conference on, V1, P125
   Berger T., 2010, P INT C AUT SOFTW EN, P73, DOI DOI 10.1145/1858996.1859010
   Bird Christian, 2008, Proceedings of the 2008 ACM SIGSOFT Symposium on the Foundations of Software Engineering, P24
   Clements P., 2002, Software product lines
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Dietrich C., 2012, Em: Proceedings of the 16th International Software Product Line Conference-Volume, V1, P21
   Dintzner N, 2015, 14 INT C SOFTW REUS, P1
   Dintzner N, 2017, SOFTW SYST MODEL, V16, P55, DOI 10.1007/s10270-015-0472-2
   Dintzner N, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P85, DOI [10.1109/MSR.2016.018, 10.1145/2901739.2901755]
   Dintzner Nicolas, 2013, P 8 INT WORKSH VAR M
   German DM, 2015, CONTINUOUSLY MINING
   Giger E, 2011, P 8 WORK C MIN SOFTW, P83, DOI [10.1145/1985441.1985456, DOI 10.1145/1985441.1985456]
   Heider W., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P1, DOI 10.1109/WICSA-ECSA.212.8
   Hellebrand R, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P274, DOI 10.1145/2648511.2648542
   Hunsen C., 2015, EMPIRICAL SOFTWARE E
   Kastner C., 2008, Proc. of GPCE'08, P35
   Kenner A., 2010, P 2 INT WORKSH FEAT, P25, DOI DOI 10.1145/1868688.1868693
   Kouters E, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P592, DOI 10.1109/ICSM.2012.6405329
   Kumara Indika, 2013, 2013 IEEE International Conference on Services Computing (SCC), P567, DOI 10.1109/SCC.2013.30
   Liebig J., 2013, P 2013 9 JOINT M FDN, P81, DOI DOI 10.1145/2491411.2491437
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Lotufo R, 2010, LECT NOTES COMPUT SC, V6287, P136, DOI 10.1007/978-3-642-15579-6_10
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   Mens T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13, DOI 10.1109/IWPSE.2005.7
   Nadi S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P140, DOI 10.1145/2568225.2568283
   Nadi S, 2012, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2012.21
   Neves L, 2015, J SYSTEMS SOFTWARE
   Neves L, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P33
   Rosenmuller M, 2008, P 2008 EDBT WORKSH S
   Rothberg V, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P65, DOI 10.1145/2866614.2866624
   Sampaio G, 2016, P 20 INT SYST SOFTW
   Sharma T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P189, DOI [10.1109/MSR.2016.028, 10.1145/2901739.2901761]
   Soetens QD, 2016, EMPIR SOFTW ENG, V21, P1990, DOI 10.1007/s10664-015-9405-5
   Spencer H., 1992, ifdef considered harmful, or portability experience with c news
   Tartler R, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P47
   Tartler Reinhard., 2009, Proceedings of the 1st Workshop on Feature-Oriented Software Development (FOSD'09), P81
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Tian Y, 2012, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2012.6227176
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   Vidacs L, 2015, 2015 IEEE 8 INT C SO, P1
   Zhou S, 2015, P 3 INT WORKSH REL E
NR 51
TC 15
Z9 15
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2018
VL 23
IS 2
BP 905
EP 952
DI 10.1007/s10664-017-9557-6
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GC1OI
UT WOS:000429551000008
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Assunçao, WKG
   Lopez-Herrejon, RE
   Linsbauer, L
   Vergilio, SR
   Egyed, A
AF Assuncao, Wesley K. G.
   Lopez-Herrejon, Roberto E.
   Linsbauer, Lukas
   Vergilio, Silvia R.
   Egyed, Alexander
TI Multi-objective reverse engineering of variability-safe feature models
   based on code dependencies of system variants
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Reverse engineering; Feature models; Multi-objective evolutionary
   algorithms; Empirical evaluation
ID STATISTICS
AB Maintenance of many variants of a software system, developed to supply a wide range of customer-specific demands, is a complex endeavour. The consolidation of such variants into a Software Product Line is a way to effectively cope with this problem. A crucial step for this consolidation is to reverse engineer feature models that represent the desired combinations of features of all the available variants. Many approaches have been proposed for this reverse engineering task but they present two shortcomings. First, they use a single-objective perspective that does not allow software engineers to consider design trade-offs. Second, they do not exploit knowledge from implementation artifacts. To address these limitations, our work takes a multi-objective perspective and uses knowledge from source code dependencies to obtain feature models that not only represent the desired feature combinations but that also check that those combinations are indeed well-formed, i.e. variability safe. We performed an evaluation of our approach with twelve case studies using NSGA-II and SPEA2, and a single-objective algorithm. Our results indicate that the performance of the multi-objective algorithms is similar in most cases and that both clearly outperform the single-objective algorithm. Our work also unveils several avenues for further research.
C1 [Assuncao, Wesley K. G.; Vergilio, Silvia R.] Fed Univ Parana UFPR, DINF, CP 19081, BR-81531980 Curitiba, Parana, Brazil.
   [Assuncao, Wesley K. G.] Fed Univ Technol Parana UTFPR, COTSI, Cristo Rei St 19, BR-85902490 Toledo, Brazil.
   [Lopez-Herrejon, Roberto E.] ETS, Dept Software Engn & IT, Notre Dame St Ouest 1100, Montreal, PQ H3C 1K3, Canada.
   [Linsbauer, Lukas; Egyed, Alexander] Johannes Kepler Univ Linz JKU, ISSE, Altenbergerstr 69, A-4040 Linz, Austria.
C3 Universidade Federal do Parana; Universidade Tecnologica Federal do
   Parana; University of Quebec; Ecole de Technologie Superieure - Canada;
   Johannes Kepler University Linz
RP Assunçao, WKG (corresponding author), Fed Univ Parana UFPR, DINF, CP 19081, BR-81531980 Curitiba, Parana, Brazil.; Assunçao, WKG (corresponding author), Fed Univ Technol Parana UTFPR, COTSI, Cristo Rei St 19, BR-85902490 Toledo, Brazil.
EM wesleyk@inf.ufpr.br; roberto.lopez@etsmtl.ca; lukas.linsbauer@jku.at;
   silvia@inf.ufpr.br; alexander.egyed@jku.at
RI Egyed, Alexander/E-2632-2017; Assuncao, Wesley Klewerton
   Guez/AAA-8331-2020
OI Assuncao, Wesley Klewerton Guez/0000-0002-7557-9091
FU Austrian Science Fund (FWF) [P 25289-N15]; Brazilian Agency CAPES
   [007126/ 2014-00]; Brazilian Agency CNPq [453678/2014-9, 305358/2012-0]
FX This work was supported by Austrian Science Fund (FWF): P 25289-N15, and
   the Brazilian Agencies CAPES: 007126/ 2014-00 and CNPq: 453678/2014-9
   and 305358/2012-0.
CR ACHER M., 2012, P 6 INT WORKSH VAR M, P45, DOI DOI 10.1145/2110147.2110153
   [Anonymous], 103 TIK ETH
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Assuncao W.K.G., 2014, 18 INT SOFTWARE PROD, V2, P52, DOI [/10.1145/2647908.2655967, DOI 10.1145/2647908.2655967]
   Assunçao WKG, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1303, DOI 10.1145/2739480.2754720
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Benavides David, 2007, VAMOS, V2007, P01
   Bergmann R, 2000, AM STAT, V54, P72, DOI 10.2307/2685616
   Chan KY, 2011, J ENG DESIGN, V22, P55, DOI 10.1080/09544820902911374
   Coello C. A. C., 2007, EVOLUTIONARY ALGORIT, V5
   Couto MV, 2011, EUR CON SFTWR MTNCE, P191, DOI 10.1109/CSMR.2011.25
   Czarnecki K, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P23, DOI 10.1109/SPLINE.2007.24
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Figueiredo E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P261, DOI 10.1145/1368088.1368124
   Fischer S, 2014, INT C SOFTW MAINT EV
   Assunçao WKG, 2014, INFORM SCIENCES, V267, P119, DOI 10.1016/j.ins.2013.12.040
   Harman M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P5, DOI 10.1145/2648511.2648513
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Haslinger E. N., 2011, 2011 18th Working Conference on Reverse Engineering, P308, DOI 10.1109/WCRE.2011.45
   Haslinger EN, 2013, LECT NOTES COMPUT SC, V7793, P53, DOI 10.1007/978-3-642-37057-1_5
   Kang Kyo C, 1990, Technical Report
   Linsbauer L, 2014, LECT NOTES COMPUT SC, V8636, P153
   Linsbauer Lukas., 2013, P 17 INT SOFTW PROD, P131
   Lopez-Herrejon Roberto Erick, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P168, DOI 10.1007/978-3-642-33119-0_13
   Lopez-Herrejon RE, 2015, INFORM SOFTWARE TECH, V61, P33, DOI 10.1016/j.infsof.2015.01.008
   Lopez-Herrejon RE, 2015, J SYST SOFTWARE, V103, P353, DOI 10.1016/j.jss.2014.10.037
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Martinez Jabier, 2015, P 19 INT C SOFTW PRO, P101, DOI DOI 10.1145/2791060.2791086
   Sannier N, 2013, IEEE INT CONF AUTOM, P580, DOI 10.1109/ASE.2013.6693116
   Segura S., 2012, Proceedings of the Sixth International Workshop on Variability Modeling of Software-Intensive Systems, P63, DOI DOI 10.1145/2110147.2110155
   She S, 2014, INFORM SOFTWARE TECH, V56, P1122, DOI 10.1016/j.infsof.2014.01.012
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Thianniwet T, 2015, N AM SEARCH BAS SOFT
   van der Linden F. J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   WESTON N., 2009, P 13 INT SOFTWARE PR, P211
   Yao X, 2013, SOME RECENT WORK MUL, P4, DOI [10.1007/978-3-642-39742-42, DOI 10.1007/978-3-642-39742-42]
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 39
TC 16
Z9 16
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2017
VL 22
IS 4
BP 1763
EP 1794
DI 10.1007/s10664-016-9462-4
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FB6ZI
UT WOS:000406290500005
DA 2024-07-18
ER

PT J
AU Gharehyazie, M
   Filkov, V
AF Gharehyazie, Mohammad
   Filkov, Vladimir
TI Tracing distributed collaborative development in apache software
   foundation projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Teamwork; Distributed collaborative development; OSS
ID COORDINATION; PRODUCTIVITY; DISTANCE; TEAMWORK
AB Developing and maintaining large software systems typically requires that developers collaborate on many tasks. During such collaborations, when multiple people work on the same chunk of code at the same time, they communicate with each other and employ safeguards in various ways. Recent studies have considered group co-development in OSS projects and found that it is an essential part of many projects. However, those studies were limited to groups of size two, i.e., pairs of developers. Here we go further and characterize co-development in larger groups. We develop an effective methodology for capturing distributed collaboration beyond groups of size two, based on synchronized commit activities among multiple developers, and apply it to data from 26 OSS projects from the Apache Software Foundation. We find that distributed collaborations is prevalent, but not as frequent as expected. We also find that while in distributed collaborative groups, developers' behavior is different than when programming alone, e.g., high developer focus on specific code packages associates with lower team participation, while packages with higher ownership get less attention from groups than from individuals. Finally, we show that productivity effort during co-development is more often lower for developers while they co-develop in groups. To verify our results we use both quantitative and qualitative methods, including a developer survey. We conclude that these methods and results can be used to understand the effects of the collaborative dynamic in OSS teams on the software engineering process. Our code, along with our datasets and survey is available at http://www.gharehyazie.com/supplementary/teamwork/.
C1 [Gharehyazie, Mohammad; Filkov, Vladimir] Univ Calif Davis, Comp Sci Dept, Davis, CA 95616 USA.
   [Gharehyazie, Mohammad] Sharif Univ Technol, AICT Innovat Ctr, Tehran, Iran.
C3 University of California System; University of California Davis; Sharif
   University of Technology
RP Gharehyazie, M (corresponding author), Univ Calif Davis, Comp Sci Dept, Davis, CA 95616 USA.; Gharehyazie, M (corresponding author), Sharif Univ Technol, AICT Innovat Ctr, Tehran, Iran.
EM gharehyazie@ucdavis.edu; filkov@cs.ucdavis.edu
FU Air Force Office of Scientific Research [FA955-11-1-0246]
FX The authors would like to thank the members of our DECAL research group
   and Prof. Qi Xuan for the valuable discussion about the ideas and
   technical details presented in this paper. We thank also Dr. Bogdan
   Vasilescu for his contributions in designing the survey and for his
   insightful comments and feedback on this work, and Mehrdad Afshari for
   his help in improving the paper. The comments by the anonymous reviewers
   helped us make this paper better, for which we are thankful. Both
   authors gratefully acknowledge support from the Air Force Office of
   Scientific Research, award FA955-11-1-0246.
CR Adams PJ, 2009, PROC IEEE INT CONF S, P319, DOI 10.1109/ICSM.2009.5306308
   Al-Ani B, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P35, DOI 10.1109/ICGSE.2008.9
   [Anonymous], 2008, P SOC CONGR WORKSH C
   [Anonymous], HIST DATASET GNOME E
   [Anonymous], 22 INT C PROGR COMPR
   [Anonymous], TEAMWORK SRI INT MEN
   [Anonymous], SOCIAL NETWORK ANAL
   [Anonymous], MYTHICAL MAN MONTH
   [Anonymous], P 34 INT C SOFTW ENG
   Avritzer A, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P285, DOI 10.1007/978-3-642-10294-3_14
   Baruch Y, 1999, HUM RELAT, V52, P421, DOI 10.1023/A:1016905407491
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   Bird Christian, 2008, Proceedings of the 2008 ACM SIGSOFT Symposium on the Foundations of Software Engineering, P24
   Bluethgen Nico, 2006, BMC Ecology, V6, P9, DOI 10.1186/1472-6785-6-9
   Caglayan B, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P33, DOI 10.1109/CHASE.2013.6614729
   Carmel E., 1999, GLOBAL SOFTWARE TEAM
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   CHILD J, 1972, SOCIOLOGY, V6, P1, DOI 10.1177/003803857200600101
   Crowston K, 2007, INFORM SOFTWARE TECH, V49, P564, DOI 10.1016/j.infsof.2007.02.004
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Damian D, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P81
   Di Penta Massimiliano, 2007, 2007 IEEE International Conference on Software Maintenance, P315, DOI 10.1109/ICSM.2007.4362644
   Dugatkin Lee Alan, 1997, OXFORD SERIES ECOLOG
   Foucault M., 2014, Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering, P39
   Gharehyazie M, 2013, PROC IEEE INT CONF S, P340, DOI 10.1109/ICSM.2013.45
   Gharehyazie Mohammad., 2014, Empirical Software Engineering, P1
   Grechanik M., 2010, Proceedings of the FSE/SDP workshop on Future of software engineering research, P149, DOI DOI 10.1145/1882362.1882394
   Gutwin C., 2004, Computer Supported Cooperative Work Conference Proceedings, P72, DOI 10.1145/1031607.1031621
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Herbsleb JD, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P188, DOI 10.1109/FOSE.2007.11
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Herbsleb JD, 2001, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.2001.919083
   Herbsleb JD, 2001, IEEE SOFTWARE, V18, P16, DOI 10.1109/52.914732
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Holmstrom H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ICGSE.2006.261210
   Jermakovics A, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P24
   Kampstra P., 2008, Journal of Statistical Software, V28, P1, DOI [10.18637/jss.v028.c01, DOI 10.18637/JSS.V028.C01, 10.18637/jss.v028.c01.papers3://publication/uuid/692988CE-7E10-498E-96EC-E7A0CE3620A3]
   Katzenbach J.R. Smith., 1993, The wisdom of teams: Creating the high-performance organization
   Kuipers BS, 2005, INT J HUM RESOUR MAN, V16, P185, DOI 10.1080/0958519042000311390
   Lanubile F, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.39
   Luther K., 2010, Proceedings of the GROUP 2010, P1, DOI [10.1145/1880071.1880073, DOI 10.1145/1880071.1880073]
   Maalej Walid, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P191, DOI 10.1109/MSR.2010.5463344
   Maalej W, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P121, DOI 10.1109/MSR.2009.5069490
   Mistrík I, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P389, DOI 10.1007/978-3-642-10294-3_19
   Mockus A, 2010, Proc. of the 18th Symposium on the Foundations of Software Engineering (FSE), P117
   Mockus A, 2009, PROC INT CONF SOFTW, P67, DOI 10.1109/ICSE.2009.5070509
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Nakakoji K., 2005, Proceedings. 12th Asia-Pacific Software Engineering Conference
   Nakakoji K, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P219, DOI 10.1007/978-3-642-10294-3_11
   Nguyen T, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P45, DOI 10.1109/ICGSE.2008.39
   Nohria N., 1994, Networks and organizations: Structure, form, and action
   Pagano D, 2013, EMPIR SOFTW ENG, V18, P1090, DOI 10.1007/s10664-012-9211-2
   Pinzger M, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P265, DOI 10.1007/978-3-642-10294-3_13
   Posnett D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P452, DOI 10.1109/ICSE.2013.6606591
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Redmiles D, 2007, WIRTSCHAFTSINF, V49, P28
   Roberts J, 2006, INT FED INFO PROC, V203, P297
   SALAS E, 2004, TEAM COGNITION UNDER
   Sarma A, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P153, DOI 10.1007/978-3-642-10294-3_8
   Scacchi W, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P307, DOI 10.1007/978-3-642-10294-3_15
   Serebrenik Alexander., 2010, P 26 IEEE INT C SOFT, P1
   Takhteyev Y., 2010, Investigating the geography of open source software through GitHub
   Vasilescu B., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P313, DOI 10.1109/ICSM.2011.6080798
   Whitehead J, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P1, DOI 10.1007/978-3-642-10294-3_1
   WILSON EO, 1978, SOCIETY, V15, P10, DOI 10.1007/BF02697770
   Xuan Q., Handbook of human computation 2013, P791, DOI [10.1007/978-1-4614-8806-4_64, DOI 10.1007/978-1-4614-8806-4_64]
   Xuan Q, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P401, DOI 10.1145/2635868.2635914
   Xuan Q, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0154324
   Xuan Q, 2015, PHYS REV E, V91, DOI 10.1103/PhysRevE.91.052813
   Xuan Q, 2012, PROCEEDINGS OF THE 2012 ASE INTERNATIONAL CONFERENCE ON SOCIAL INFORMATICS (SOCIALINFORMATICS 2012), P78, DOI 10.1109/SocialInformatics.2012.17
NR 72
TC 6
Z9 6
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2017
VL 22
IS 4
BP 1795
EP 1830
DI 10.1007/s10664-016-9463-3
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FB6ZI
UT WOS:000406290500006
DA 2024-07-18
ER

PT J
AU Lenberg, P
   Tengberg, LGW
   Feldt, R
AF Lenberg, Per
   Tengberg, Lars Goran Wallgren
   Feldt, Robert
TI An initial analysis of software engineers' attitudes towards
   organizational change
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Human aspects; Organizational change; Attitudes;
   Openness to change; Readiness for change; Systematic literature review;
   Behavioral software engineering; Social psychology
ID BEHAVIOR RELATIONS; SAMPLE-SIZE; AGILE; RESISTANCE; IMPROVEMENT;
   TRANSITION; CHALLENGES; READINESS; FRAMEWORK; ADOPTION
AB Employees' attitudes towards organizational change are a critical determinant in the change process. Researchers have therefore tried to determine what underlying concepts that affect them. These extensive efforts have resulted in the identification of several antecedents. However, no studies have been conducted in a software engineering context and the research has provided little information on the relative impact and importance of the identified concepts. In this study, we have combined results from previous social science research with results from software engineering research, and thereby identified three underlying concepts with an expected significant impact on software engineers' attitudes towards organizational change, i.e. their knowledge about the intended change outcome, their understanding of the need for change, and their feelings of participation in the change process. The result of two separate multiple regression analysis, where we used industrial questionnaire data (N=56), showed that the attitude concept openness to change is predicted by all three concepts, while the attitude concept readiness for change is predicted by need for change and participation. Our research provides an empirical baseline to an important area of software engineering and the result can be a starting-point for future organizational change research. In addition, the proposed model prescribes practical directions for software engineering organizations to adopt in improving employees' responses to change and, thus, increase the probability of a successful change.
C1 [Lenberg, Per] Chalmers Univ, Div Software Engn, SE-41296 Gothenburg, Sweden.
   [Tengberg, Lars Goran Wallgren] Gothenburg Univ, Dept Psychol, Gothenburg, Sweden.
   [Feldt, Robert] Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
C3 Chalmers University of Technology; University of Gothenburg; Blekinge
   Institute Technology
RP Lenberg, P (corresponding author), Chalmers Univ, Div Software Engn, SE-41296 Gothenburg, Sweden.
EM perle@chalmers.se; larsgoran.wallgren@psy.gu.se; robert.feldt@bth.se
OI Lenberg, Per/0000-0002-3186-3947
FU Swedish Armed Forces; Swedish Defense Materiel Administration; Swedish
   Governmental Agency for Innovation Systems (VINNOVA) in the project
   'Aligning Requirements and Verification Practices in Air Traffic Control
   Systems' [2013-01199]; Vinnova [2013-01199] Funding Source: Vinnova
FX We acknowledge the support of Swedish Armed Forces, Swedish Defense
   Materiel Administration and Swedish Governmental Agency for Innovation
   Systems (VINNOVA) in the project 'Aligning Requirements and Verification
   Practices in Air Traffic Control Systems' (project number 2013-01199).
CR Abdi H, 2010, WIRES COMPUT STAT, V2, P433, DOI 10.1002/wics.101
   Ajzen I, 2001, ANNU REV PSYCHOL, V52, P27, DOI 10.1146/annurev.psych.52.1.27
   AJZEN I, 1977, PSYCHOL BULL, V84, P888, DOI 10.1037/0033-2909.84.5.888
   AJZEN I, 1991, ORGAN BEHAV HUM DEC, V50, P179, DOI 10.1016/0749-5978(91)90020-T
   Angeline S., 2015, International Journal of Applied Engineering Research, V10, P14299
   [Anonymous], 2006, Data Analysis Multivariate
   [Anonymous], 1962, THEORY COGNITIVE DIS
   [Anonymous], 1975, BELIEF ATTITUDE INTE
   [Anonymous], 2013, APPL COMPUTATIONAL M, DOI DOI 10.1145/2486046.2486064
   [Anonymous], 2016, RECONSIDERING CHANGE
   [Anonymous], 2013, RES DESIGN QUALITATI
   [Anonymous], 1967, PSYCHOMETRIC THEORY
   [Anonymous], J SYSTEMS SOFTWARE
   Association AP, 2015, DOES AP DEF PSYCH
   Baddoo N., 2004, Quality control and applied statistics, V49, P341
   BEER M, 1990, HARVARD BUS REV, V68, P158
   Beer M., 2000, BREAKING CODE CHANGE
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   Bouckenooghe D, 2010, J APPL BEHAV SCI, V46, P500, DOI 10.1177/0021886310367944
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Cao L, 2009, EUR J INFORM SYST, V18, P332, DOI 10.1057/ejis.2009.26
   Chan FKY, 2009, DECIS SUPPORT SYST, V46, P803, DOI 10.1016/j.dss.2008.11.009
   Choi M, 2011, HUM RESOUR MANAGE-US, V50, P479, DOI 10.1002/hrm.20434
   Cohn M, 2003, COMPUTER, V36, P74, DOI 10.1109/MC.2003.1204378
   Conboy K, 2011, IEEE SOFTWARE, V28, P48, DOI 10.1109/MS.2010.132
   Conti G, 2014, J ECONOMETRICS, V183, P31, DOI 10.1016/j.jeconom.2014.06.008
   Crano WD, 2006, ANNU REV PSYCHOL, V57, P345, DOI 10.1146/annurev.psych.57.102904.190034
   Cruz Shirley S. J. O., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P1, DOI 10.1049/ic.2011.0001
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cugola G., 1998, Software Process Improvement and Practice, V4, P101, DOI 10.1002/(SICI)1099-1670(199809)4:3<101::AID-SPIP103>3.0.CO;2-K
   Cunningham CE, 2002, J OCCUP ORGAN PSYCH, V75, P377, DOI 10.1348/096317902321119637
   D'aveni R.A., 2010, HYPERCOMPETITION SIM
   Duka D, 2013, 2013 36TH INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P426
   Escobar V., 2012, XXXVIII Conferencia Latinoamericana en Informatica (CLEI), P1
   FERRIE JE, 1995, BRIT MED J, V311, P1264, DOI 10.1136/bmj.311.7015.1264
   Fishbin M, 1972, READINGS ATTITUDE TH
   Flora DB, 2004, PSYCHOL METHODS, V9, P466, DOI 10.1037/1082-989X.9.4.466
   Gandomani Taghi Javdani, 2014, 2014 8th Malaysian Software Engineering Conference (MySEC), P240, DOI 10.1109/MySec.2014.6986021
   Gandomani Taghi Javdani, 2013, Journal of Theoretical and Applied Information Technology, V55, P345
   Gandomani Taghi Javdanm, 2013, Journal of Computer Science, V9, P620, DOI 10.3844/jcssp.2013.620.625
   Gandomani T. J., 2014, Recent Advances in Information and Communication Technology (Advances in Intelligent Systems and Computing), P177
   Gandomani TJ, 2015, INFORM SOFTWARE TECH, V57, P295, DOI 10.1016/j.infsof.2014.05.011
   Gandomani TJ, 2013, COMM COM INF SC, V403, P146
   Gannon M., 2013, IEEE Aerospace Conference Proceedings, Big Sky, MT, USA, 2-9 March 2013, P1
   Gawronski B., 2013, OXFORD HDB SOCIAL CO, P282, DOI [DOI 10.1093/OXFORDHB/9780199730018.001.0001, DOI 10.1093/OXFORDHB/9780199730018.013.0014]
   Gefen D, 2000, Communications of the Association for Information Systems, V4, P7, DOI [10.1016/j.emj.2021.07.010, DOI 10.1016/J.EMJ.2021.07.010, DOI 10.17705/1CAIS.00407]
   Ghani I, 2015, AGILE ADOPTION IT OR, V9
   Greenwood R, 1996, ACAD MANAGE REV, V21, P1022, DOI 10.2307/259163
   Hajjdiab Hassan, 2012, Journal of Software, V7, P237, DOI 10.4304/jsw.7.1.237-242
   Hayes S, 2008, LECT NOTES BUS INF P, V9, P161
   Herbsleb JD, 1996, PROC INT CONF SOFTW, P323, DOI 10.1109/ICSE.1996.493427
   Highsmith J, 2001, COMPUTER, V34, P120, DOI 10.1109/2.947100
   Hui A, 2013, 2013 AGILE CONFERENCE (AGILE), P169, DOI 10.1109/AGILE.2013.22
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Iivari J, 2007, MIS QUART, V31, P35
   JOHNSON BT, 1989, PSYCHOL BULL, V106, P290, DOI 10.1037/0033-2909.106.2.290
   JUMA EC, 2014, THESIS
   Kautz K, 2004, INFORM SYST J, V14, P3, DOI 10.1111/j.1365-2575.2004.00156.x
   Kim E, 2012, P INT COMP SOFTW APP, P476, DOI 10.1109/COMPSAC.2012.83
   Kitchenham B., 2004, Procedures for performing systematic literature reviews, P33
   Kotter J.P., 2002, HEART CHANGE
   Kotter J.P., 1996, The Journal of Product Innovation Management, V2, P170
   Kouzari E, 2015, 10 INT C SOFTW ENG A, P151, DOI [10.1016/S0031-8914(53)80099-6, DOI 10.1016/S0031-8914(53)80099-6]
   Lavallée M, 2012, PROC INT CONF SOFTW, P113, DOI 10.1109/ICSE.2012.6227201
   LEE SY, 1981, PSYCHOMETRIKA, V46, P153, DOI 10.1007/BF02293896
   Lenberg P, 2014, P 7 INT WORKSH COOP, P48, DOI DOI 10.1145/2593702.2593711
   Lenberg P, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P43, DOI 10.1109/CHASE.2015.13
   Liang YH, 2010, INT CONF COMP SCI, P138, DOI 10.1109/ICCSIT.2010.5563919
   Little J, 2003, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P54, DOI 10.1109/ADC.2003.1231453
   Livermore JA, 2007, PROCEEDINGS IEEE SOUTHEASTCON 2007, VOLS 1 AND 2, P82, DOI 10.1109/SECON.2007.342860
   Mathiassen L, 2005, IEEE SOFTWARE, V22, P84, DOI 10.1109/MS.2005.159
   Meaney M., 2008, The McKinsey Quarterly, P1
   Meyers L., 2006, APPL MULTIVARIATE RE
   Miller VD, 1994, J APPL COMMUNICATION
   Mockus A, 2010, Proc. of the 18th Symposium on the Foundations of Software Engineering (FSE), P117
   Muchinsky P.M., 1997, PSYCHOL APPL WORK
   Muthén B, 2012, PSYCHOL METHODS, V17, P313, DOI 10.1037/a0026802
   Nelson HJ, 2009, J MANAGE INFORM SYST, V25, P271, DOI 10.2753/MIS0742-1222250409
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Niazi M., 2006, Software Process Improvement and Practice, V11, P193, DOI 10.1002/spip.261
   Nikitina Natalja, 2012, Proceedings 2012 International Conference on Software and System Process (ICSSP 2012), P140, DOI 10.1109/ICSSP.2012.6225959
   Nikitina N., 2011, International Conference on Software Engineering, P159
   Noordeloos R., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P31, DOI 10.1109/ICGSE.2012.11
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Olsson HH, 2012, EUROMICRO CONF PROC, P392, DOI 10.1109/SEAA.2012.54
   Oreg S, 2006, EUR J WORK ORGAN PSY, V15, P73, DOI 10.1080/13594320500451247
   Oreg S, 2011, J APPL BEHAV SCI, V47, P461, DOI 10.1177/0021886310396550
   Osborne JW., 2004, PARE, V9, DOI [10.7275/ktzq-jq66, 10.7275/ktzqjq66, DOI 10.7275/KTZQ-JQ66]
   Parizi Reza Meimandi, 2014, 2014 8th Malaysian Software Engineering Conference (MySEC), P246, DOI 10.1109/MySec.2014.6986022
   Pettigrew AM, 2001, ACAD MANAGE J, V44, P697, DOI 10.5465/3069411
   Piderit SK, 2000, ACAD MANAGE REV, V25, P783, DOI 10.2307/259206
   Piri A, 2012, J SOFTW-EVOL PROC, V24, P185, DOI 10.1002/smr.476
   Platt D.S., 2007, WHY SOFTWARE SUCKS W
   PROCHASKA JO, 1994, HEALTH PSYCHOL, V13, P39, DOI 10.1037/0278-6133.13.1.39
   Prokhorenko Sergey, 2012, Proceedings of the 2012 Agile Conference, P191, DOI 10.1109/Agile.2012.30
   Qumer A, 2008, J SYST SOFTWARE, V81, P1899, DOI 10.1016/j.jss.2007.12.806
   Rafferty AE, 2013, J MANAGE, V39, P110, DOI 10.1177/0149206312457417
   Rendahl JE, 1996, ATT FOANDRA LEDA MOR
   Robey D, 2002, J MANAGE INFORM SYST, V19, P17, DOI 10.1080/07421222.2002.11045713
   Rosenberg S, 2015, LECT NOTES BUS INF P, V212, P279, DOI 10.1007/978-3-319-18612-2_28
   Sapnas Kathryn G, 2002, J Nurs Meas, V10, P135
   Sato S, 2013, ASIA PAC SOFWR ENG, P132, DOI 10.1109/APSEC.2013.28
   Savolainen J., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P289, DOI 10.1109/RE.2010.41
   Schatz B, 2005, IEEE SOFTWARE, V22, P36, DOI 10.1109/MS.2005.74
   Seffernick TR, 2007, AGILE 2007, Proceedings, P200, DOI 10.1109/AGILE.2007.23
   Serour M., 2007, EUR MED C INF SYST 2
   Serour M, 2005, EUR MED C INF SYST E
   Serour M, 2006, P IBIMA 2006 C MAN I
   Silva CC, 2014, 2014 AGILE CONFERENCE (AGILE), P64, DOI 10.1109/AGILE.2014.14
   Smits H., 2011, Proceedings of the 2011 Agile Conference, P274, DOI 10.1109/AGILE.2011.14
   Streiner DL, 2003, J PERS ASSESS, V80, P217, DOI 10.1207/S15327752JPA8003_01
   Terry DJ, 2000, BRIT J SOC PSYCHOL, V39, P337, DOI 10.1348/014466600164534
   Thomas R, 2011, ORGAN SCI, V22, P22, DOI 10.1287/orsc.1090.0520
   Viswanathan M., 2005, MEASUREMENT ERROR RE
   Wanberg CR, 2000, J APPL PSYCHOL, V85, P132, DOI 10.1037/0021-9010.85.1.132
   Westland J.C., 2006, Structural Equation Models
   Westland JC, 2010, ELECTRON COMMER R A, V9, P476, DOI 10.1016/j.elerap.2010.07.003
   Wilson TD, 2000, PSYCHOL REV, V107, P101, DOI 10.1037/0033-295X.107.1.101
   Wolf EJ, 2013, EDUC PSYCHOL MEAS, V73, P913, DOI 10.1177/0013164413495237
   Woodward CA, 1999, MED CARE, V37, P556, DOI 10.1097/00005650-199906000-00005
   Yong AG, 2013, TUTOR QUANT METHODS, V9, P79, DOI 10.20982/tqmp.09.2.p079
   Zulzalil H., 2014, International Journal of Software Engineering and its Applications, V8, P129, DOI DOI 10.14257/IJSEIA.2014.8.1.12
NR 122
TC 18
Z9 25
U1 0
U2 25
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2017
VL 22
IS 4
BP 2179
EP 2205
DI 10.1007/s10664-016-9482-0
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FB6ZI
UT WOS:000406290500016
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Sakhnini, V
   Mich, L
   Berry, DM
AF Sakhnini, Victoria
   Mich, Luisa
   Berry, Daniel M.
TI Group versus individual use of power-only EPMcreate as a creativity
   enhancement technique for requirements elicitation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
ID IDEAS; MODEL
AB Creativity is often needed in requirements elicitation, i.e., generating ideas for requirements, and therefore, techniques to enhance creativity are believed to be useful. How does the size of a group using the Power-Only EPMcreate (POEPMcreate) creativity enhancement technique affect the group's and each member of the group's effectiveness in generating requirement ideas? This paper describes an experiment in which individuals and two-person and four-person groups used POEPMcreate to generate ideas for requirements for enhancing a high school's public Web site. The data of this experiment combined with the data of two previous experiments involving two-person and four-person groups using POEPMcreate show that, similar to what has been observed for brainstorming, the size of a group using POEPMcreate does affect the number of raw and new requirement ideas generated by the group and by the average member of the group. The data allow concluding that a two-person group using POEPMcreate generates more raw and new requirement ideas, both per group and per group member or individual, than does a four-person group and than does an individual. This conclusion is partially corroborated by qualitative data gathered from a survey of professional business or requirements analysts about group sizes and creativity enhancement techniques.
C1 [Sakhnini, Victoria; Berry, Daniel M.] Univ Waterloo, Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
   [Mich, Luisa] Univ Trento, Dept Ind Engn, I-38122 Trento, Italy.
C3 University of Waterloo; University of Trento
RP Sakhnini, V (corresponding author), Univ Waterloo, Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
EM vsakhnin@uwaterloo.ca; luisa.mich@unitn.it; dberry@uwaterloo.ca
RI Mich, Luisa/J-2111-2012
OI Mich, Luisa/0000-0002-0018-6883
FU Cheriton School of Computer Science; Canadian NSERC grant
   [NSERC-RGPIN227055-00]; Canadian NSERC-Scotia Bank Industrial Research
   Chair [NSERC-IRCPJ365473-05]
FX Each of Victoria Sakhnini's and Luisa Mich's work was supported in part
   by a Cheriton School of Computer Science addendum to the same Canadian
   NSERC-Scotia Bank Industrial Research Chair that was supporting Daniel
   Berry. Daniel Berry's work was supported in parts by a Canadian NSERC
   grant NSERC-RGPIN227055-00 and by a Canadian NSERC-Scotia Bank
   Industrial Research Chair NSERC-IRCPJ365473-05. The authors thank
   William Berry for his graciously offered and personal advice on
   multivariate regressions. All blame for any misapplication of this
   advice falls on the authors.
CR Al-Ani B, 1998, P 3 AUSTR C REQ ENG
   AMABILE TM, 1988, RES ORGAN BEHAV, V10, P123
   Ang D, 1998, P ANN HICSS, P355, DOI 10.1109/HICSS.1998.648331
   [Anonymous], 2007, Creativity. Theories and Themes: Research
   [Anonymous], 1990, ARE YOUR LIGHTS FIGU
   Aurum A, 2001, IEEE INTERNATIONAL CONFERENCE ON ADVANCED LEARNING TECHNOLOGIES, PROCEEDINGS, P160, DOI 10.1109/ICALT.2001.943888
   Aurum A, 1998, P 3 AUSTR C REQ ENG, P29
   Baer J, 2006, INTERNATIONAL HANDBOOK OF CREATIVITY, P10
   Berander P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P167
   Berry WilliamDale., 2000, Understanding Multivariate Research a Primer for Beginning Social Scientists
   BINNIG G, 1989, NICHTS KREATIVITAT N
   Boehm B, 2001, IEEE SOFTWARE, V18, P46, DOI 10.1109/52.922725
   Briggs RO, 1997, P ANN HICSS, P94, DOI 10.1109/HICSS.1997.665465
   Brooks Frederick P., 1995, The mythical man-month
   Browne GJ, 2001, J MANAGE INFORM SYST, V17, P223, DOI 10.1080/07421222.2001.11045665
   Conboy K, 2009, IFIP ADV INF COMM TE, V301, P122, DOI 10.1007/978-3-642-02388-0_9
   Couger J.D., 1996, Creativity innovation in information systems organizations
   Couger J.D., 1995, CREATIVE PROBLEM SOL
   COUGER JD, 1993, MIS QUART, V17, P375, DOI 10.2307/249584
   Cybulski JL, 2003, P RE 7 PAC AS C INF, P465
   Damian D, 2007, INT REQUIR ENG CONF, P59, DOI 10.1109/RE.2007.51
   Daun M, 2016, LECT NOTES COMPUT SC, V9619, P269, DOI 10.1007/978-3-319-30282-9_19
   de Bono E, 2010, CAN CREATIVE MANAGEM
   De Bono E., 1985, Six Thinking Hats
   Dean DL, 2006, J ASSOC INF SYST, V7, P646, DOI 10.17705/1jais.00106
   DeBono E., 1993, SERIOUS CREATIVITY U
   DENNIS AR, 1993, J APPL PSYCHOL, V78, P531, DOI 10.1037/0021-9010.78.4.531
   Dornburg CC, 2008, SAND20085971 SAND NA
   Dow G, 2016, TECHNICAL REPORT
   Evans J.R., 1991, CREATIVE THINKING DE
   FEIST GJ, 1993, PSYCHOL SCI, V4, P366, DOI 10.1111/j.1467-9280.1993.tb00583.x
   Ficalora J., 2010, Quality function deployment and six sigma: A QFD Handbook
   Fricker S, 2010, LECT NOTES COMPUT SC, V6182, P60, DOI 10.1007/978-3-642-14192-8_7
   Fromm E., 1959, Creativity and its cultivation, P44
   Furnham A, 1958, PERS INDIV DIFFER, V19, P73
   Gallagher K, 2004, P 37 HAW INT C SYST
   GALLUPE RB, 1993, SLOAN MANAGE REV, V35, P27
   Gause D.C., 1989, EXPLORING REQUIREMEN
   Gause DC, 2000, ICRE 2000 TUTORIAL T
   Gelman A, 2012, J RES EDUC EFF, V5, P189, DOI 10.1080/19345747.2011.618213
   GESCHKA H, 1983, R&D MANAGE, V13, P169, DOI 10.1111/j.1467-9310.1983.tb01143.x
   Givant S., 2009, Introduction to Boolean Algebras
   GLASS R, 1995, SOFTWARE CREATIVITY
   Glass R.L., 2006, SOFTWARE CREATIVITY
   Goguen J., 1994, REQUIREMENTS ENG SOC, P165
   Goguen JA, 1993, TECHNICAL REPORT
   Gundy ABV, 1984, MANAGING GROUP CREAT
   Hoffmann O, 2005, AUSTRALAS J INF SYST, V13, P159
   Isaksen SG, 2005, GIFTED CHILD QUART, V49, P315, DOI 10.1177/001698620504900405
   Jaoui H, 1991, CREATIVITE MODE EMPL
   Jeff Berg Mike, 2016, 882 SIGNIFICANT
   Jones S, 2008, INT REQUIR ENG CONF, P289, DOI 10.1109/RE.2008.54
   Kano N., 1984, J JPN SOC QUALITY CO J JAPANESE SOC QUALI, V41, P39
   Kauppinen M, 2007, INT REQUIR ENG CONF, P15, DOI 10.1109/RE.2007.47
   Kohn NW, 2011, APPL COGNITIVE PSYCH, V25, P359, DOI 10.1002/acp.1699
   LeadershipReview, 2016, US CREAT HELP YOUR B
   Leigh A, 1983, DECISIONS DECISIONS
   Lemos J., 2012, Proceedings of the Annual ACM Symposium on Applied Computing (SAC), P1083
   Mahaux M., 2013, Proceedings of the International Conference on Research Challenges in Information Science (RCIS), P1
   Maiden N., 2006, 28th International Conference on Software Engineering Proceedings, P1073, DOI 10.1145/1134285.1134512
   Maiden N, 2001, IEEE SOFTWARE, V18, P10, DOI 10.1109/52.951486
   Maiden N., 2004, P ACM C DESIGNING IN, P113
   Maiden N, 2007, PROC INT CONF SOFTW, P632
   Mavin A, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P213
   McBreen P, 2001, OOPSLA 2001
   Mich L, 2005, REQUIR ENG, V10, P262, DOI 10.1007/s00766-005-0008-3
   Mich L, 2006, P 12 INT WORKSH ENG
   Mich L, 2010, P WORKSH CREAT REQ E
   Mich L, 2012, TECHNICAL REPORT
   Mullery G, 1996, REQUIR ENG J, V1, P132
   Nagasundaram M, 1995, P AM C INF SYST
   Nguyen L., 2000, P 33 HAW INT C SYST
   Nguyen L, 2009, INFORM SOFTWARE TECH, V51, P655, DOI 10.1016/j.infsof.2008.09.002
   Niknafs A, 2016, EMPIRICAL SOFTWARE E
   Ocker R.J., 2010, Human Technology, V6, P55
   Osborn A.F., 1953, APPL IMAGINATION
   Parnes S.J., 1992, Source book for creative problem solving: A fifty year digest of proven innovation processes
   Poincare H, 2001, SCI METHOD KEY TEXTS
   Preparata F.P., 1973, Introduction to Discrete Structures for Computer Science and Engineering
   Price J, 2006, P 11 AUSTR WORKSH RE
   Price J, 2004, P 11 AUSTR WORKSH RE
   Rickards T., 1974, Problem-Solving Through Creative Analysis
   Rickards T., 1999, CREATIVITY MANAGEMEN
   RITTEL HWJ, 1973, POLICY SCI, V4, P155, DOI 10.1007/BF01405730
   Robertson J, 2002, IEEE SOFTWARE, V19, P20, DOI 10.1109/MS.2002.1020281
   Robertson S, 2001, INT J HUM-COMPUT ST, V55, P405, DOI 10.1006/ijhc.2001.0481
   Saha SK, 2012, 2012 INTERNATIONAL CONFERENCE ON INFORMATICS, ELECTRONICS & VISION (ICIEV), P34, DOI 10.1109/ICIEV.2012.6317443
   Sakhnini V, 2013, P WORKSH CREAT REQ E, P23
   Sakhnini V, 2016, TECHNICAL REPORT
   Sakhnini V, 2012, REQUIR ENG, V17, P171, DOI 10.1007/s00766-011-0133-0
   Salzer H, 2004, INT J ENG EDUC, V20, P46
   Schenk K. D., 1998, Journal of Management Information Systems, V15, P9
   Schlosser C, 2008, LECT NOTES COMPUT SC, V5025, P109, DOI 10.1007/978-3-540-69062-7_10
   Simon Herbert., 1972, HUMAN PROBLEM SOLVIN
   Simonton D.K., 1988, SCI GENIUS PSYCHOL S
   Svensson RB, 2015, INT REQUIR ENG CONF, P66, DOI 10.1109/RE.2015.7320409
   Svensson RB, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P104, DOI 10.1109/SEAA.2015.59
   Sweeney R.B., 2003, P 4 C INFORM TECHNOL, DOI [10.1145/947121.947153, DOI 10.1145/947121.947153]
   TAYLOR DW, 1958, ADMIN SCI QUART, V3, P23, DOI 10.2307/2390603
   The Standish Group, 1994, CHAOS REP TECHN REP
   Vieira Elton R., 2012, Human-Centered Software Engineering. Proceedings of the 4th International Conference, HCSE 2012, P283, DOI 10.1007/978-3-642-34347-6_19
   von Bertalanaffy L, 1976, GEN SYSTEMS THEORY F
   West Side School District, 2016, TECHNICAL REPORT
   Wiegers KE, 2001, TECHNICAL REPORT
   Williams F, 1966, P 6 UT CREAT RES C
   Wohlin C., 2012, Experimentation in Software Engineering
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wood J., 1999, JOINT APPL DEV
   Zachos K, 2008, INT REQUIR ENG CONF, P145, DOI 10.1109/RE.2008.39
   Zhou J, 2016, OXFORD HDB CREATIVIT
NR 110
TC 6
Z9 6
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2017
VL 22
IS 4
BP 2001
EP 2049
DI 10.1007/s10664-016-9475-z
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FB6ZI
UT WOS:000406290500012
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Duarte, CHC
AF Duarte, Carlos Henrique C.
TI Productivity paradoxes revisited
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Productivity; Software engineering economics; Software process models;
   Software quality assurance
ID SOFTWARE-DEVELOPMENT PRODUCTIVITY; QUALITY
AB The adoption of quality assurance methods based on software process improvement models has been regarded as an important source of variability in software productivity. Some companies perceive that their implementation has prohibitive costs, whereas some authors identify in their use a way to comply with software development patterns and standards, produce economic value and lead to corporate performance improvement. In this paper, we investigate the relationship between quality maturity levels and labor productivity, using a data set containing 687 Brazilian software firms. We study here the relationship between labor productivity, as measured through the annual gross revenue per worker ratio, and quality levels, which were appraised from 2006 to 2012 according to two distinct software process improvement models: MPS.BR and CMMI. We perform independent statistical tests using appraisals carried out according to each of these models, consequently obtaining a data set with as many observations as possible, in order to seek strong support for our research. We first show that MPS.BR and CMMI appraised quality maturity levels are correlated, but we find no statistical evidence that they are related to higher labor productivity or productivity growth. On the contrary, we present evidence suggesting that average labor productivity is higher in software companies without appraised quality levels. Moreover, our analyses suggest that companies with appraised quality maturity levels are more or less productive depending on factors such as their business nature, main origin of capital and maintained quality level.
C1 [Duarte, Carlos Henrique C.] BNDES, Ave Republ Chile 100, BR-20001970 Rio De Janeiro, RJ, Brazil.
RP Duarte, CHC (corresponding author), BNDES, Ave Republ Chile 100, BR-20001970 Rio De Janeiro, RJ, Brazil.
EM cduarte@bndes.gov.br
RI Duarte, Carlos Henrique C./F-8020-2015
OI Duarte, Carlos Henrique C./0000-0002-9881-1527
CR ABES, 2007, BRAZ SOFTW MARK
   [Anonymous], 1995, The Capability Maturity Model: Guidelines for Improving the Software Process
   [Anonymous], 2001, MEASURING PRODUCTIVI
   [Anonymous], OECD EC STUDIES
   [Anonymous], 2013, INDIA SOFTWARE ENG C
   BOEHM BW, 1987, COMPUTER, V20, P43, DOI 10.1109/MC.1987.1663694
   Boehm BW., 1981, Software Engineering Economics
   Brynjolfsson E, 1998, COMMUN ACM, V41, P49, DOI 10.1145/280324.280332
   CHRISSIS MB, 2006, SEI SERIES SOFTWARE
   CMMI Institute, 2013, PUBL APPR RES
   Collofello JS, 1983, P NAT COMP C AFIPS 8, P757
   Duarte C.H.C., 2014, P 2 INT WORKSH COND, P31, DOI DOI 10.1145/2593690.2593692
   Duarte CHC, 1996, IEEE SPECTRUM, V33, P40, DOI 10.1109/6.526863
   Duarte CHC, 2002, IEEE SOFTWARE, V19, P84, DOI 10.1109/MS.2002.1003461
   Duarte CHC, 2001, REV BNDES, V15, P125
   Duarte CHC, 2012, REV BNDES, V19, P91
   Exame Informatica, 2007, BIGG BETT BRAZ CO VO
   Gorschek T, 2008, INFORM SOFTWARE TECH, V50, P67, DOI 10.1016/j.infsof.2007.10.003
   GRILICHES Z, 1986, AM ECON REV, V76, P141
   Herbsleb J, 1997, COMMUN ACM, V40, P30, DOI 10.1145/255656.255692
   Herbsleb JD, 1996, PROC INT CONF SOFTW, P323, DOI 10.1109/ICSE.1996.493427
   Informatica Hoje, 2007, ANUARIO
   *ISO IEC, 1998, 15504 ISOIEC
   Jones C., 2012, EC SOFTWARE QUALITY
   Kalinowski M., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P120, DOI 10.1109/SBES.2011.31
   Konrad M, 2011, SEI SERIES SOFTWARE
   Krishnan MS, 2000, MANAGE SCI, V46, P745, DOI 10.1287/mnsc.46.6.745.11941
   Levene DM, 2008, STAT MANAGERS USING
   Maxwell KD, 1996, IEEE T SOFTWARE ENG, V22, P706, DOI 10.1109/32.544349
   Montoni Mariano Angel, 2009, Software Process: Improvement and Practice, V14, P289, DOI 10.1002/spip.428
   Nguyen V. M., 2011, P 7 INT C PRED MOD S, P1, DOI [DOI 10.1115/IMECE2011-63829, 10.1145/2020390.2020393, DOI 10.1145/2020390.2020393]
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   Rosner B., 2010, FUNDAMENTALS BIOINFO
   RUBIN HA, 1993, PROC INT CONF SOFTW, P468, DOI 10.1109/ICSE.1993.346019
   Siy Harvey P., 2001, P 7 INT S SOFTW METR, P317
   Softex Society, 2013, MPS BR EV
   Staples M, 2007, J SYST SOFTWARE, V80, P883, DOI 10.1016/j.jss.2006.09.008
   Trendowicz A, 2008, LECT NOTES COMPUT SC, V5082, P223
   TSUNODA M, 2006, P 4 INT WORKSH MIN S, P14
   Valor Economico, 2007, VAL 1000 VOL 2006 20
   Wang Y, 2012, P 2012 INT JOINT C W, V3, P25
NR 41
TC 8
Z9 10
U1 2
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2017
VL 22
IS 2
BP 818
EP 847
DI 10.1007/s10664-016-9453-5
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ES9PL
UT WOS:000399891400006
DA 2024-07-18
ER

PT J
AU Bao, LF
   Li, J
   Xing, ZC
   Wang, XY
   Xia, X
   Zhou, B
AF Bao, Lingfeng
   Li, Jing
   Xing, Zhenchang
   Wang, Xinyu
   Xia, Xin
   Zhou, Bo
TI Extracting and analyzing time-series HCI data from screen-captured task
   videos
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Screen-captured video; Video scraping; HCI data; Online search behavior
ID INFORMATION
AB Recent years have witnessed the increasing emphasis on human aspects in software engineering research and practices. Our survey of existing studies on human aspects in software engineering shows that screen-captured videos have been widely used to record developers' behavior and study software engineering practices. The screen-captured videos provide direct information about which software tools the developers interact with and which content they access or generate during the task. Such Human-Computer Interaction (HCI) data can help researchers and practitioners understand and improve software engineering practices from human perspective. However, extracting time-series HCI data from screen-captured task videos requires manual transcribing and coding of videos, which is tedious and error-prone. In this paper we report a formative study to understand the challenges in manually transcribing screen-captured videos into time-series HCI data. We then present a computer-vision based video scraping technique to automatically extract time-series HCI data from screen-captured videos. We also present a case study of our scvRipper tool that implements the video scraping technique using 29-hours of task videos of 20 developers in two development tasks. The case study not only evaluates the runtime performance and robustness of the tool, but also performs a detailed quantitative analysis of the tool's ability to extract time-series HCI data from screen-captured task videos. We also study the developer's micro-level behavior patterns in software development from the quantitative analysis.
C1 [Bao, Lingfeng; Wang, Xinyu; Xia, Xin; Zhou, Bo] Zhejiang Univ, Coll Comp Sci, Hangzhou, Zhejiang, Peoples R China.
   [Li, Jing] Nanyang Technol Univ, Sch Comp Engn, Comp Sci, Singapore, Singapore.
   [Xing, Zhenchang] Nanyang Technol Univ, Sch Comp Engn, Singapore, Singapore.
C3 Zhejiang University; Nanyang Technological University; Nanyang
   Technological University
RP Wang, XY (corresponding author), Zhejiang Univ, Coll Comp Sci, Hangzhou, Zhejiang, Peoples R China.
EM lingfengbao@zju.edu.cn; jli030@ntu.edu.sg; zcxing@ntu.edu.sg;
   wangxinyu@zju.edu.cn; xxia@zju.edu.cn; bzhou@zju.edu.cn
RI bao, lingfeng/AEG-8299-2022; Xia, Xin/AAD-6217-2022
OI Xia, Xin/0000-0002-6302-3256
FU Major State Basic Research Development Program of China (973 Program)
   [2015CB352201]; National Key Technology R&D Program of the Ministry of
   Science and Technology of China [2013BAH01B01]; NTU SUG [M4081029.020];
   MOE [M4011165.020]
FX This work was partially supported by the Major State Basic Research
   Development Program of China (973 ProgramNo.2015CB352201) and National
   Key Technology R&D Program of the Ministry of Science and Technology of
   China (No. 2013BAH01B01). This work is supported by NTU SUG M4081029.020
   and MOE AcRF Tier1 M4011165.020.
CR Ammar N., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P367, DOI 10.1109/WCRE.2012.46
   Andrew J Ko, 2004, P SIGCHI C HUMAN FAC, V6, P151, DOI [DOI 10.1145/985692.985712, 10.1145/985692.985712]
   [Anonymous], 2005, Proceedings of the 14th International Conference on World Wide Web, WWW 2005, Chiba, Japan, May 10-14, 2005, DOI DOI 10.1145/1060745.1060828
   [Anonymous], 2009, P 18 INT C WORLD WID, DOI DOI 10.1145/1526709.1526724
   Bandura A., 1986, Social foundations of thought and action: A social cognitive theory. PrenticeHall series in social learning theory, V1, P617
   Banovic N, 2012, UIST'12: PROCEEDINGS OF THE 25TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P83
   Bao L, 2015, P 30 IEEE ACM INT C
   Bao LF, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P673, DOI 10.1109/ICSE.2015.220
   Bao LF, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P399, DOI 10.1109/SANER.2015.7081850
   Barabási AL, 2005, NATURE, V435, P207, DOI 10.1038/nature03459
   Bateman S., 2012, INPROCEEDINGS SIGCHI, P1785, DOI DOI 10.1145/2207676.2208311
   Bay H, 2008, COMPUT VIS IMAGE UND, V110, P346, DOI 10.1016/j.cviu.2007.09.014
   Bordes A, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P1967, DOI 10.1145/2623330.2630803
   Brade K., 1992, Proceedings. 1992 IEEE Workshop on Visual Languages (Cat. No.92TH0471-3), P148, DOI 10.1109/WVL.1992.275771
   Brandt J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P513
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   Brown J.S., 1989, Situated cognition and the culture of learning
   Cameron AC, 1997, J ECONOMETRICS, V77, P329
   CANNY J, 1986, IEEE T PATTERN ANAL, V8, P679, DOI 10.1109/TPAMI.1986.4767851
   Chang T.-H., 2011, P 24 ANN ACM S USER, P245
   Chang TH, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1535
   Corritore CL, 2001, INT J HUM-COMPUT ST, V54, P1, DOI 10.1006/ijhc.2000.0423
   Corritore CL, 2000, PROG COMPREHEN, P139, DOI 10.1109/WPC.2000.852488
   Dekel U, 2009, INT C PROGRAM COMPRE, P168, DOI 10.1109/ICPC.2009.5090040
   Dewan P, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P48, DOI 10.1109/CHASE.2009.5071410
   Dixon M, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1525
   Duala-Ekoko E, 2012, PROC INT CONF SOFTW, P266, DOI 10.1109/ICSE.2012.6227187
   Ester M., 1996, KDD 96, P226, DOI DOI 10.5555/3001460.3001507
   Forsyth D. A., 2002, Computer vision: a modern approach, DOI DOI 10.5555/580035
   Fritz T, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P7, DOI 10.1145/2635868.2635905
   Gonzalez R. C., 2002, DIGITAL IMAGE PROCES
   Greiler M, 2012, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2012.6227189
   Guha R.V., 2003, Proceedings of the 12th international conference on World Wide Web, P700, DOI DOI 10.1145/775152.775250
   Gunes Koru A., 2005, P 2005 WORKSHOP PRED, P1
   Hartmann B, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1019
   Hilbert DM, 2000, ACM COMPUT SURV, V32, P384, DOI 10.1145/371578.371593
   Hundhausen Christopher D., 2006, Proceedings of the second international workshop on Computing education research, P59, DOI DOI 10.1145/1151588.1151599
   Hurst A, 2010, IUI 2010, P11
   Jinshui Wang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P213, DOI 10.1109/ICSM.2011.6080788
   Kim JH, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P443
   Kimble C., 2008, COMMUNITIES PRACTICE, V1
   Ko A.J., 2005, CHI 05 EXTENDED ABST, P1557
   Ko AJ, 2005, PROC INT CONF SOFTW, P126
   Ko AJ, 2005, J VISUAL LANG COMPUT, V16, P41, DOI 10.1016/j.jvlc.2004.08.003
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Kushman N, 2010, P 9 USENIX S OP SYST, P223
   Lawrance J, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P53, DOI 10.1109/VLHCC.2005.44
   Lawrance J, 2013, IEEE T SOFTWARE ENG, V39, P197, DOI 10.1109/TSE.2010.111
   Lawrance J, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1323
   Leary M.R., 1991, Introduction to behavior research methods, V2
   Li HW, 2013, WORK CONF REVERSE EN, P142, DOI 10.1109/WCRE.2013.6671289
   Lowe, 1999, P INT C COMP VIS, P1150, DOI DOI 10.1109/ICCV.1999.790410
   Matejka J, 2009, UIST 2009: PROCEEDINGS OF THE 22ND ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P193
   Matejke J, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2751
   Mavrikis M, 2014, LECT NOTES COMPUT SC, V8719, P263, DOI 10.1007/978-3-319-11200-8_20
   Muja M, 2009, VISAPP 2009: PROCEEDINGS OF THE FOURTH INTERNATIONAL CONFERENCE ON COMPUTER VISION THEORY AND APPLICATIONS, VOL 1, P331
   Murphy-Hill E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1, DOI 10.1145/2568225.2568226
   Nie Zaiqing., 2007, World Wide Web Conference Series, P81
   PARZEN E, 1962, ANN MATH STAT, V33, P1065, DOI 10.1214/aoms/1177704472
   Piorkowski D, 2011, S VIS LANG HUM CEN C, P109, DOI 10.1109/VLHCC.2011.6070387
   Ponzanelli L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1295, DOI 10.1109/ICSE.2013.6606701
   Rhodes B. J., 1996, Acquisition, Learning and Demonstration: Automating Tasks for Users. Papers from the 1996 AAAI Symposium (TR SS-96-02), P122
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Rosten E, 2006, LECT NOTES COMPUT SC, V3951, P430, DOI 10.1007/11744023_34
   Sarma A, 2009, PROC INT CONF SOFTW, P23, DOI 10.1109/ICSE.2009.5070505
   Sawadsky Nicholas., 2011, Proceedings of the 1st Workshop on Developing Tools as Plug-ins, P48, DOI DOI 10.1145/1984708.1984722
   Schuster-Bockler Benjamin, 2007, Curr Protoc Bioinformatics, VAppendix 3, p3A, DOI 10.1002/0471250953.bia03as18
   Shi JB, 2000, IEEE T PATTERN ANAL, V22, P888, DOI 10.1109/34.868688
   Sillito J, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P23, DOI 10.1109/ISESE.2005.1541811
   Silverman, 2018, DENSITY ESTIMATION S, DOI 10.1201/9781315140919
   Sinha S.N., 2006, EDGE, Workshop on Edge Computing Using New Commodity Architectures, V278, P4321
   Vakilian M, 2012, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2012.6227190
   von Mayrhauser A., 1997, Empirical Studies of Programmers: Seventh Workshop. Papers presented at the Seventh Workshop on Empirical Studies of Programmers, P157, DOI 10.1145/266399.266414
   Wang JS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P762, DOI 10.1109/ICSE.2013.6606622
   Weisstein Eric., 2011, LEAST SQUARES FITTIN
   Whittaker JA, 1993, MARKOV ANAL SOFTWARE
   Wu DC, 2000, IEE P-VIS IMAGE SIGN, V147, P29, DOI 10.1049/ip-vis:20000104
   Yang JF, 2014, PATTERN ANAL APPL, V17, P783, DOI 10.1007/s10044-013-0325-y
   Yeh T, 2009, UIST 2009: PROCEEDINGS OF THE 22ND ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P183
   Zhang Q., 2008, Microwave conference, P1, DOI [10.1109/IPDPS.2008.4536131, DOI 10.1109/IPDPS.2008.4536131]
NR 80
TC 20
Z9 22
U1 3
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2017
VL 22
IS 1
BP 134
EP 174
DI 10.1007/s10664-015-9417-1
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI3GS
UT WOS:000392378400004
DA 2024-07-18
ER

PT J
AU Kosti, MV
   Feldt, R
   Angelis, L
AF Kosti, Makrina Viola
   Feldt, Robert
   Angelis, Lefteris
TI Archetypal personalities of software engineers and their work
   preferences: a new perspective for empirical studies
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Archetypal analysis; Software engineering; Personality; MCA
AB As the area of Software Engineering (SE) matures the role of human factors in software development is commonly recognized as important. Increasingly we see empirical studies that investigate the connection between, for example, personalities and preferences, attitudes or performances of software engineers. Statistical analysis holds a key role by providing the means for uncovering associations between various facets of human factors and behavioral effects on projects and outcomes. Traditional statistical techniques tend to explore and interpret the multidimensional personality and behavioral data from an "average-point" perspective, targeting central trends. This paper introduces a methodology with statistical tools that can provide a new and different perspective for this type of SE data. It seeks the boundaries of a psychometric dataset and discovers reference or "benchmark" personalities, the archetypal personalities. Then, the method examines the placement of all individuals in the dataset in relation to the archetypes. Furthermore, the SE preference characteristics, or generally, any other types of behavioral SE data, are analyzed with respect to the archetypes. As a case to exemplify the methodology we analyze personality and project preference data from 276 master level SE students and compare to previous "average-point" statistical analysis of the same data. We also discuss how Archetypal Analysis, the heart of the proposed methodology, combined with multi-correspondence analysis might be of general use in empirical SE.
C1 [Kosti, Makrina Viola; Angelis, Lefteris] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki, Greece.
   [Feldt, Robert] Chalmers Univ Technol, Dept Comp Sci & Engn, Gothenburg, Sweden.
   [Feldt, Robert] Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
C3 Aristotle University of Thessaloniki; Chalmers University of Technology;
   Blekinge Institute Technology
RP Angelis, L (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki, Greece.
EM mkosti@csd.auth.gr; robert.feldt@bth.se; lef@csd.auth.gr
FU Swedish Armed Forces; Swedish Defence Materiel Administration; Swedish
   Governmental Agency for Innovation Systems in the project 'Aligning
   Requirements and Verification Practices in Air Traffic Control Systems'
   [2013-01199]; Vinnova [2013-01199] Funding Source: Vinnova
FX We acknowledge the support of Swedish Armed Forces, Swedish Defence
   Materiel Administration and Swedish Governmental Agency for Innovation
   Systems in the project 'Aligning Requirements and Verification Practices
   in Air Traffic Control Systems' (project number 2013-01199).
CR Abdi H., 2007, Multiple Correspondence Analysis, P651
   Acuña ST, 2009, INFORM SOFTWARE TECH, V51, P627, DOI 10.1016/j.infsof.2008.08.006
   Acuña ST, 2004, SOFTWARE PRACT EXPER, V34, P675, DOI 10.1002/spe.586
   [Anonymous], 2005, R: A language and environment for statistical computing
   [Anonymous], 2010, Proceedings of the 32Nd ACM/IEEE International Conference on Software Engineering-Volume 1, ICSE'10
   [Anonymous], 1996, 5 FACTOR MODEL PERSO
   [Anonymous], 2010, P 2010 ACM IEEE INT, DOI DOI 10.1145/1852786.1852816
   [Anonymous], 1992, PSYCHOL ASSESSMENT R
   [Anonymous], 2008, MERRIAM WEBSTER ONLI
   Aoyama M, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P85, DOI 10.1109/RE.2005.50
   Arcuri A, 2012, SOFTW TEST VERIFICAT
   Bartholomew DJ., 2002, The analysis and interpretation of multivariate data for social scientists
   Bell D, 2010, SIGMIS CPR '10: PROCEEDINGS OF THE 2010 ACM SIGMIS COMPUTER PERSONNEL RESEARCH CONFERENCE, P43
   Capretz LF, 2010, IT PROF, V12, P6, DOI 10.1109/MITP.2010.33
   Chao J, 2006, AG C IEEE, P5
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   CUTLER A, 1994, TECHNOMETRICS, V36, P338, DOI 10.2307/1269949
   Da Cunha AD, 2007, COMMUN ACM, V50, P109, DOI 10.1145/1230819.1241672
   Donnellan MB, 2006, PSYCHOL ASSESSMENT, V18, P192, DOI 10.1037/1040-3590.18.2.192
   Eugster M, 2009, SPIDER MAN HERO ARCH
   Feldt R, 2010, INFORM SOFTWARE TECH, V52, P611, DOI 10.1016/j.infsof.2010.01.001
   Furnham A, 1996, PERS INDIV DIFFER, V21, P303, DOI 10.1016/0191-8869(96)00033-5
   Gorla N, 2004, COMMUN ACM, V47, P79, DOI 10.1145/990680.990684
   Hainmueller J, 2013, POLIT ANAL
   Hannay JE, 2010, IEEE T SOFTWARE ENG, V36, P61, DOI 10.1109/TSE.2009.41
   Kam J., 2006, P ISESE 06, P232, DOI DOI 10.1145/1159733.1159769
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kosti MV, 2014, INFORM SOFTWARE TECH, V56, P973, DOI 10.1016/j.infsof.2014.03.004
   Lenberg P, 2014, WORK, P16
   Martínez LG, 2010, LECT NOTES ARTIF INT, V6438, P428
   McGinn J, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P1521
   Mittas N., 2014, P 10 INT C PRED MOD, P62
   Morup M, 2012, NEUROCOMPUTING, V80, P54, DOI 10.1016/j.neucom.2011.06.033
   Olson MH, 1980, ACM SIGMIS DATABASE, V11, P21
   Porzio GC, 2006, STUD CLASS DATA ANAL, P309, DOI 10.1007/3-540-35978-8_35
   Rehman M., 2012, Proceedings of the 2012 International Conference on Computer & Information Science (ICCIS), P1115, DOI 10.1109/ICCISci.2012.6297193
   Sabini J., 1995, Social psychology, V2nd
   Salleh N, 2009, INT SYMP EMP SOFTWAR, P214, DOI 10.1109/ESEM.2009.5315997
   Sfetsos P, 2009, EMPIR SOFTW ENG, V14, P187, DOI 10.1007/s10664-008-9093-5
   [No title captured]
   [No title captured]
NR 41
TC 18
Z9 22
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2016
VL 21
IS 4
BP 1509
EP 1532
DI 10.1007/s10664-015-9395-3
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DQ2VF
UT WOS:000379060700003
DA 2024-07-18
ER

PT J
AU Ceccato, M
   Capiluppi, A
   Falcarin, P
   Boldyreff, C
AF Ceccato, Mariano
   Capiluppi, Andrea
   Falcarin, Paolo
   Boldyreff, Cornelia
TI A large study on the effect of code obfuscation on the quality of java
   code
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
ID METRICS
AB Context: Obfuscation is a common technique used to protect software against malicious reverse engineering. Obfuscators manipulate the source code to make it harder to analyze and more difficult to understand for the attacker. Although different obfuscation algorithms and implementations are available, they have never been directly compared in a large scale study.
   Aim: This paper aims at evaluating and quantifying the effect of several different obfuscation implementations (both open source and commercial), to help developers and project managers to decide which algorithms to use.
   Method: In this study we applied 44 obfuscations to 18 subject applications covering a total of 4 millions lines of code. The effectiveness of these source code obfuscations has been measured using 10 code metrics, considering modularity, size and complexity of code.
   Results: Results show that some of the considered obfuscations are effective in making code metrics change substantially from original to obfuscated code, although this change (called potency of the obfuscation) is different on different metrics. In the paper we recommend which obfuscations to select, given the security requirements of the software to be protected.
C1 [Ceccato, Mariano] Fdn Bruno Kessler IRST, Trento, Italy.
   [Capiluppi, Andrea] Brunel Univ, London UB8 3PH, England.
   [Falcarin, Paolo] Univ E London, London E16 2RD, England.
   [Boldyreff, Cornelia] Univ Greenwich, London SE10 9LS, England.
C3 Fondazione Bruno Kessler; FBK-ICT - Center for Information &
   Communication Technology; Brunel University; University of East London;
   University of Greenwich
RP Ceccato, M (corresponding author), Fdn Bruno Kessler IRST, Trento, Italy.
EM ceccato@fbk.eu; andrea.capiluppi@brunel.ac.uk; falcarin@uel.ac.uk;
   c.boldyreff@gre.ac.uk
RI Ceccato, Mariano/T-7139-2019; Capiluppi, Andrea/AGO-2961-2022; Falcarin,
   Paolo/B-6635-2015
OI Ceccato, Mariano/0000-0001-7325-0316; Capiluppi,
   Andrea/0000-0001-9469-6050; Falcarin, Paolo/0000-0003-1933-5348
CR Anckaert B, 2007, QOP'07: PROCEEDINGS OF THE 2007 ACM WORKSHOP ON QUALITY OF PROTECTION, P15
   [Anonymous], P 10 IASTED INT C SO
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Ceccato M., 2008, QoP, P39
   Ceccato M, 2013, TRFBKSE20133
   Ceccato M, 2009, INT C PROGRAM COMPRE, P178, DOI 10.1109/ICPC.2009.5090041
   Cecchi M, 2013, ELECTRON J QUAL THEO, P1
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cohen F. B., 1993, Computers & Security, V12, P565, DOI 10.1016/0167-4048(93)90054-9
   Collberg C., 2003, IEEE Security & Privacy, V1, P40, DOI 10.1109/MSECP.2003.1219058
   Collberg C, 1997, TECH REP 148
   Collberg CS, 2002, IEEE T SOFTWARE ENG, V28, P735, DOI 10.1109/TSE.2002.1027797
   Falcarin P, 2011, IEEE SOFTWARE, V28, P24, DOI 10.1109/MS.2011.34
   Goto H., 2000, Information Security. Third International Workshop, ISW 2000. Proceedings (Lecture Notes in Computer Science Vol.1975), P82
   Heffner K, 2004, LECT NOTES COMPUT SC, V3225, P428
   Hosking AL, 2001, SOFTWARE PRACTICE EX, V31
   Jakubowski MH, 2009, SECRYPT
   Jureczko M., 2010, Model Methods Syst Dependability Oficyna Wydawnicza Politech Wroclawskiej, P69
   Kouznetsov P, 2006, JAD FAST JAVA DECOMP
   Linn C., 2003, P 10 ACM C COMP COMM, P290, DOI DOI 10.1145/948109.948149
   Lv Z, 2005, 9 ECOOP WORKSH QUANT
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Sutherland I, 2006, COMPUT SECUR, V25, P221, DOI 10.1016/j.cose.2005.11.002
   Udupa SK, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P45
   Vasa R, 2003, P 7 ECOOP WORKSH QUA, V03
   Visaggio CA, 2013, INT J SECUR APPL, V7, P59
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wyseur B., 2009, White-box cryptography
   Ying Zeng, 2011, Journal of Multimedia, V6, P329, DOI 10.4304/jmm.6.4.329-340
NR 31
TC 19
Z9 20
U1 0
U2 26
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2015
VL 20
IS 6
BP 1486
EP 1524
DI 10.1007/s10664-014-9321-0
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT7YX
UT WOS:000363032900003
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Barua, A
   Thomas, SW
   Hassan, AE
AF Barua, Anton
   Thomas, Stephen W.
   Hassan, Ahmed E.
TI What are developers talking about? An analysis of topics and trends in
   Stack Overflow
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Q&A websites; Knowledge repository; Topic models; Trend analysis; Mining
   software repositories; Latent Dirichlet allocation
ID SOFTWARE
AB Programming question and answer (Q&A) websites, such as Stack Overflow, leverage the knowledge and expertise of users to provide answers to technical questions. Over time, these websites turn into repositories of software engineering knowledge. Such knowledge repositories can be invaluable for gaining insight into the use of specific technologies and the trends of developer discussions. Previous work has focused on analyzing the user activities or the social interactions in Q&A websites. However, analyzing the actual textual content of these websites can help the software engineering community to better understand the thoughts and needs of developers. In the article, we present a methodology to analyze the textual content of Stack Overflow discussions. We use latent Dirichlet allocation (LDA), a statistical topic modeling technique, to automatically discover the main topics present in developer discussions. We analyze these discovered topics, as well as their relationships and trends over time, to gain insights into the development community. Our analysis allows us to make a number of interesting observations, including: the topics of interest to developers range widely from jobs to version control systems to C# syntax; questions in some topics lead to discussions in other topics; and the topics gaining the most popularity over time are web development (especially jQuery), mobile applications (especially Android), Git, and MySQL.
C1 [Barua, Anton; Thomas, Stephen W.; Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
C3 Queens University - Canada
RP Thomas, SW (corresponding author), Queens Univ, Sch Comp, Kingston, ON K7L 3N6, Canada.
EM barua@cs.queensu.ca; sthomas@cs.queensu.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan, Ahmed/AAB-7241-2019; Ali,
   Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; 
CR Adamic LA, 2008, P 17 INT C WORLD WID, P665, DOI DOI 10.1145/1367497.1367587
   [Anonymous], 1997, READINGS INFORM RETR
   [Anonymous], 2012586 QUEENS U SCH
   [Anonymous], ESS TOOLS RUNN COMM
   [Anonymous], REPLICATION PACKAGE
   [Anonymous], MOB MED REP STAT MED
   [Anonymous], STACK OV CREAT COMM
   [Anonymous], SOFTW DEV PLATF 2011
   [Anonymous], ACM SE REG C
   [Anonymous], 2006, 200610 STANF INFOLAB
   [Anonymous], EMPIRICAL SOFTWARE E
   Bajracharya SK, 2012, EMPIR SOFTW ENG, V17, P424, DOI 10.1007/s10664-010-9144-6
   Barnard K, 2003, J MACH LEARN RES, V3, P1107, DOI 10.1162/153244303322533214
   Becher M, 2011, P IEEE S SECUR PRIV, P96, DOI 10.1109/SP.2011.29
   Blei D.M., 2009, TOPIC MODELS TEXT MI
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   COX DR, 1955, BIOMETRIKA, V42, P80, DOI 10.1093/biomet/42.1-2.80
   Dugan R. F.  Jr., 2004, Software Engineering Notes, V29, P37, DOI 10.1145/974043.974050
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GEMAN S, 1984, IEEE T PATTERN ANAL, V6, P721, DOI 10.1109/TPAMI.1984.4767596
   Grant S, 2010, IEEE INT WORK C SO, P65, DOI 10.1109/SCAM.2010.22
   Griffiths TL, 2007, PSYCHOL REV, V114, P211, DOI 10.1037/0033-295X.114.2.211
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Gyongyi Z., 2008, P 1 WORKSH QUEST ANS
   Hall D. D., 2008, P C EMP METH NAT LAN, DOI DOI 10.3115/1613715.1613763
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Hindle A, 2009, PROC IEEE INT CONF S, P339, DOI 10.1109/ICSM.2009.5306310
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Linstead E, 2008, SEVENTH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS, PROCEEDINGS, P813, DOI 10.1109/ICMLA.2008.47
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   McCallum A.K., 2002, MALLET MACHINE LEARN
   McGraw G, 2002, IEEE SOFTWARE, V19, P57, DOI 10.1109/MS.2002.1049391
   McIntosh S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P141, DOI 10.1145/1985793.1985813
   Mei QZ, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P490
   Neuhaus Stephan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P111, DOI 10.1109/ISSRE.2010.53
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Shah C, 2010, SIGIR 2010: PROCEEDINGS OF THE 33RD ANNUAL INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH DEVELOPMENT IN INFORMATION RETRIEVAL, P411
   Tan CM, 2002, INFORM PROCESS MANAG, V38, P529, DOI 10.1016/S0306-4573(01)00045-0
   Thomas SW, 2014, SCI COMPUT PROGRAM, V80, P457, DOI 10.1016/j.scico.2012.08.003
   Thomas SW, 2010, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2010.13
   Thomas SW, 2011, 8 WORK C MIN SOFTW R, P173
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Wallach H.M., 2009, P 26 ANN INT C MACH, P1105, DOI DOI 10.1145/1553374.1553515
NR 44
TC 303
Z9 344
U1 2
U2 58
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2014
VL 19
IS 3
BP 619
EP 654
DI 10.1007/s10664-012-9231-y
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AF0ZA
UT WOS:000334442700006
DA 2024-07-18
ER

PT J
AU Offutt, J
   Alluri, C
AF Offutt, Jeff
   Alluri, Chandra
TI An industrial study of applying input space partitioning to test
   financial calculation engines
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Industrial study; Input space partitioning
AB This paper presents results from an industrial study that applied input space partitioning and semi-automated requirements modeling to large-scale industrial software, specifically financial calculation engines. Calculation engines are used in financial service applications such as banking, mortgage, insurance, and trading to compute complex, multi-conditional formulas to make high risk financial decisions. They form the heart of financial applications, and can cause severe economic harm if incorrect. Controllability and observability of these calculation engines are low, so robust and sophisticated test methods are needed to ensure the results are valid. However, the industry norm is to use pure human-based, requirements-driven test design, usually with very little automation. The Federal Home Loan Mortgage Corporation (FHLMC), commonly known as Freddie Mac, concerned that these test design techniques may lead to ineffective and inefficient testing, partnered with a university to use high quality, sophisticated test design on several ongoing projects. The goal was to determine if such test design can be cost-effective on this type of critical software. In this study, input space partitioning, along with automation, were applied with the help of several special-purpose tools to validate the effectiveness of input space partitioning. Results showed that these techniques were far more effective (finding more software faults) and more efficient (requiring fewer tests and less labor), and the managers reported that the testing cycle was reduced from five human days to 0.5. This study convinced upper management to begin infusing this approach into other software development projects.
C1 [Offutt, Jeff] George Mason Univ, Fairfax, VA 22030 USA.
   [Alluri, Chandra] Freddie Mac, Mclean, VA USA.
C3 George Mason University; Freddie Mac
RP Offutt, J (corresponding author), George Mason Univ, Fairfax, VA 22030 USA.
EM offutt@gmu.edu; chandra_alluri@freddiemac.com
CR Alluri C, 2008, THESIS G MASON U FAI
   Ammann P, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P99, DOI 10.1109/ISSRE.2003.1251034
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], 1990, Software testing techniques {
   Bach J, 2005, ALLPAIRS TEST CASE G
   Czerwonka J., 2006, PROC 24 PACIFIC NW S, P419
   FREEDMAN RS, 1991, IEEE T SOFTWARE ENG, V17, P553, DOI 10.1109/32.87281
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   Grindal M, 2007, 2007 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P255, DOI 10.1109/ASWEC.2007.27
   IBM, 2011, RAT ROB
   Kacker R., 2008, Automated combinatorial testing for software-beyond pairwise testing
   Lander J, 1997, J PORTFOLIO MANAGE, V23, P24, DOI 10.3905/jpm.1997.409620
   Myers Glenford J., 2011, The Art of Software Testing
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   OSTRAND TJ, 1986, P WORKSH SOFTW TEST, P41
   Sortino FA, 1994, The Journal of Investing, V3, P59, DOI DOI 10.3905/JOI.3.3.59
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
NR 17
TC 4
Z9 6
U1 0
U2 21
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2014
VL 19
IS 3
BP 558
EP 581
DI 10.1007/s10664-012-9229-5
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AF0ZA
UT WOS:000334442700004
DA 2024-07-18
ER

PT J
AU Herbold, S
   Grabowski, J
   Waack, S
AF Herbold, Steffen
   Grabowski, Jens
   Waack, Stephan
TI Calculation and optimization of thresholds for sets of software metrics
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software metrics; Thresholds; Machine learning; PAC
AB In this article, we present a novel algorithmic method for the calculation of thresholds for a metric set. To this aim, machine learning and data mining techniques are utilized. We define a data-driven methodology that can be used for efficiency optimization of existing metric sets, for the simplification of complex classification models, and for the calculation of thresholds for a metric set in an environment where no metric set yet exists. The methodology is independent of the metric set and therefore also independent of any language, paradigm or abstraction level. In four case studies performed on large-scale open-source software metric sets for C functions, C+ +, C# methods and Java classes are optimized and the methodology is validated.
C1 [Herbold, Steffen; Grabowski, Jens; Waack, Stephan] Univ Gottingen, Inst Comp Sci, D-37077 Gottingen, Germany.
C3 University of Gottingen
RP Herbold, S (corresponding author), Univ Gottingen, Inst Comp Sci, Goldschmidtstr 7, D-37077 Gottingen, Germany.
EM herbold@cs.uni-goettingen.de; grabowski@cs.uni-goettingen.de;
   waack@cs.uni-goettingen.de
RI Herbold, Steffen/I-4659-2019
OI Herbold, Steffen/0000-0001-9765-2803
CR Angluin D., 1988, Machine Learning, V2, P343, DOI 10.1007/BF00116829
   [Anonymous], 2005, PMD applied
   [Anonymous], 1994, Object-oriented software metrics: a practical guide
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 1990, 61012 IEEE
   [Anonymous], INT WORKSH SOFTW MEA
   [Anonymous], 2001, 9126 ISOIEC
   [Anonymous], 2018731 ETSI ES
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   BASILI VR, 1985, ICSE 85 P 8 INT C SO, P386
   Benlarbi S, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P24, DOI 10.1109/ISSRE.2000.885858
   BRODAG T, 2010, GEN MODEL PAC UNPUB
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Daly J., 1996, Empirical Software Engineering, V1, P109, DOI 10.1007/BF00368701
   Devroye L., 1997, A Probabilistic Theory of Pattern Recognition. Stochastic Modelling and Applied Probability
   Duda R. O., 1973, PATTERN CLASSIFICATI, V3
   Grabowski J, 2003, COMPUT NETW, V42, P375, DOI 10.1016/S1389-1286(03)00249-4
   Heitlager I, 2007, QUATIC 2007: 6TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, PROCEEDINGS, P30, DOI 10.1109/QUATIC.2007.8
   *ISO, 2005, 9000 ISOIEC
   Kearns M, 1998, J ACM, V45, P983, DOI 10.1145/293347.293351
   Khoshgoftaar TM, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P221, DOI 10.1109/ISSRE.2002.1173256
   KICZALES G, 2002, Patent No. 6467086
   Lanza Michele., 2005, Object-Oriented Metrics in Practice
   LILLIEFORS HW, 1967, J AM STAT ASSOC, V62, P399, DOI 10.2307/2283970
   MacKay D., 2003, INFORM THEORY INFERE
   Mammen E, 1999, ANN STAT, V27, P1808
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   NAGAPPAN N, 2006, ICSE 06, P452, DOI DOI 10.1145/1134285.1134349
   PORTER AA, 1990, IEEE SOFTWARE, V7, P46, DOI 10.1109/52.50773
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Rosqvist T, 2003, SOFTWARE QUAL J, V11, P39, DOI 10.1023/A:1023741528816
   SCHNEIDEWIND N, 1997, IEEE 8 INT S SOFTW R, P402
   Schneidewind NF, 2000, ANN SOFTW ENG, V9, P79, DOI 10.1023/A:1018920623712
   Scholkopf B., 2002, Encyclopedia of Biostatistics
   SELBY RW, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P288, DOI 10.1109/ICSE.1991.130654
   Shawe-Taylor J., 2004, KERNEL METHODS PATTE
   Tsybakov AB, 2004, ANN STAT, V32, P135
   Werner E, 2007, LECT NOTES COMPUT SC, V4745, P54
NR 40
TC 41
Z9 44
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2011
VL 16
IS 6
BP 812
EP 841
DI 10.1007/s10664-011-9162-z
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 819IX
UT WOS:000294819700004
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Martens, A
   Koziolek, H
   Prechelt, L
   Reussner, R
AF Martens, Anne
   Koziolek, Heiko
   Prechelt, Lutz
   Reussner, Ralf
TI From monolithic to component-based performance evaluation of software
   architectures A series of experiments analysing accuracy and effort
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical study; Software architecture; Performance evaluation;
   Performance modelling; Performance prediction
ID PREDICTION METHODS; MODEL; SYSTEMS
AB Model-based performance evaluation methods for software architectures can help architects to assess design alternatives and save costs for late life-cycle performance fixes. A recent trend is component-based performance modelling, which aims at creating reusable performance models; a number of such methods have been proposed during the last decade. Their accuracy and the needed effort for modelling are heavily influenced by human factors, which are so far hardly understood empirically. Do component-based methods allow to make performance predictions with a comparable accuracy while saving effort in a reuse scenario? We examined three monolithic methods (SPE, umlPSI, Capacity Planning (CP)) and one component-based performance evaluation method (PCM) with regard to their accuracy and effort from the viewpoint of method users. We conducted a series of three experiments (with different levels of control) involving 47 computer science students. In the first experiment, we compared the applicability of the monolithic methods in order to choose one of them for comparison. In the second experiment, we compared the accuracy and effort of this monolithic and the component-based method for the model creation case. In the third, we studied the effort reduction from reusing component-based models. Data were collected based on the resulting artefacts, questionnaires and screen recording. They were analysed using hypothesis testing, linear models, and analysis of variance. For the monolithic methods, we found that using SPE and CP resulted in accurate predictions, while umlPSI produced over-estimates. Comparing the component-based method PCM with SPE, we found that creating reusable models using PCM takes more (but not drastically more) time than using SPE and that participants can create accurate models with both techniques. Finally, we found that reusing PCM models can save time, because effort to reuse can be explained by a model that is independent of the inner complexity of a component. The tasks performed in our experiments reflect only a subset of the actual activities when applying model-based performance evaluation methods in a software development process. Our results indicate that sufficient prediction accuracy can be achieved with both monolithic and component-based methods, and that the higher effort for component-based performance modelling will indeed pay off when the component models incorporate and hide a sufficient amount of complexity.
C1 [Martens, Anne; Reussner, Ralf] Karlsruhe Inst Technol, D-76131 Karlsruhe, Germany.
   [Koziolek, Heiko] ABB Corp Res, D-68526 Ladenburg, Germany.
   [Prechelt, Lutz] Free Univ Berlin, D-14195 Berlin, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology; ABB; Free
   University of Berlin
RP Martens, A (corresponding author), Karlsruhe Inst Technol, D-76131 Karlsruhe, Germany.
EM martens@kit.edu; heiko.koziolek@de.abb.com; prechelt@inf.fu-berlin.de;
   reussner@kit.edu
RI Koziolek, Heiko/AAF-5917-2020
OI Reussner, Ralf/0000-0002-9308-6290
CR [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   [Anonymous], 2005, UML PROF SCHED PERF
   [Anonymous], 2007, R LANG ENV STAT COMP
   Bacigalupo DA, 2005, J SUPERCOMPUT, V34, P93, DOI 10.1007/s11227-005-2335-z
   BACIGALUPO DA, 2003, 7 WORLD MULT SYST CY
   BACIGALUPO DA, 2004, 18 IEEE INT PAR DIST
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Balsamo S., 2004, P 4 INT WORKSHOP SOF, P115
   Basili1 Victor R, 1994, Encyclopedia of software engineering, V1994, P528
   Becker Koziolek., 2007, P 6 INT WORKSHOP SOF, P54
   Becker S, 2006, LECT NOTES COMPUT SC, V3938, P169
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Böhme R, 2008, LECT NOTES COMPUT SC, V4909, P7, DOI 10.1007/978-3-540-68947-8_2
   Bondarev E, 2004, EUROMICRO CONF PROC, P40, DOI 10.1109/EURMIC.2004.1333354
   Bondarev Egor., 2007, Proceedings of the 6th international workshop on Software and performance, P153
   BRIAND LC, 1997, 7 WORKSH EMP STUD PR, P1
   Brosig F., 2009, USING WEBLOGIC DIAGN
   DUJMOVIC JJ, 2004, P 4 INT WORKSH SOFTW
   DUMKE RR, 2001, LECT NOTES COMPUTER, V2047
   Franks G, 2009, IEEE T SOFTWARE ENG, V35, P148, DOI 10.1109/TSE.2008.74
   HEITMANN F, 2007, PETRI NETS TOOL DATA
   Hermanns H, 2002, THEOR COMPUT SCI, V274, P43, DOI 10.1016/S0304-3975(00)00305-4
   HUBER N, 2010, ACM IEEE 32 INT C SO, P1
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Kounev S, 2006, IEEE T SOFTWARE ENG, V32, P486, DOI 10.1109/TSE.2006.69
   Koziolek H, 2005, LECT NOTES COMPUT SC, V3712, P188
   KOZIOLEK H, 2004, THESIS U OLDENBURG
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Kuperberg M, 2008, LECT NOTES COMPUT SC, V5282, P48, DOI 10.1007/978-3-540-87891-9_4
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Liu Y, 2005, IEEE T SOFTWARE ENG, V31, P928, DOI 10.1109/TSE.2005.127
   MARTENS A, 2007, THESIS C VONOSSIETZK
   MARTENS A, 2009, EXPERIMENT, V3
   Martens A, 2008, LECT NOTES COMPUT SC, V5261, P17, DOI 10.1007/978-3-540-87412-6_3
   Martens A, 2008, LECT NOTES COMPUT SC, V5282, P16, DOI 10.1007/978-3-540-87891-9_2
   MARZOLLA M, 2004, THESIS U CA FOSCARI
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Menasce D.A., 2004, PERFORMANCE DESIGN
   Menasce D.A., 2000, SCALING E BUSINESS T
   Menasce DanielA., 1994, CAPACITY PLANNING PE
   *OMG, 2006, UML PROF MOD AN REAL
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P1134, DOI 10.1109/32.988711
   Prechelt L., 2001, KONTROLLIERTE EXPT S
   Rech J., 2008, MODEL DRIVEN SOFTWAR, P95
   ROLIA JA, 1995, IEEE T SOFTWARE ENG, V21, P689, DOI 10.1109/32.403785
   SMITH CU, 2002, PERFORMANCE SOLUTION
   Williams L. G., 2002, Proceedings of the 3rd international workshop on Software and performance, WOSP'02, P179
   Williams Lloyd G, 2003, INT CMG C, P349
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 49
TC 12
Z9 14
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2011
VL 16
IS 5
SI SI
BP 587
EP 622
DI 10.1007/s10664-010-9142-8
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 808LJ
UT WOS:000293978900003
DA 2024-07-18
ER

PT J
AU von Wangenheim, CG
   Thiry, M
   Kochanski, D
AF von Wangenheim, Christiane Gresse
   Thiry, Marcello
   Kochanski, Djone
TI Empirical evaluation of an educational game on software measurement
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Measurement; Educational game; Project management; Experiment
AB Software measurement is considered important in improving the software process. However, teaching software measurement remains a challenging issue. Although, games and simulations are regarded powerful tools for learning, their learning effectiveness is not rigorously established. This paper describes the results of an explorative study to investigate the learning effectiveness of a game prototype on software measurement in order to make an initial judgment about its potential as an educational tool as well as to analyze its appropriateness, engagement and strengths & weaknesses as guidance for further evolution. Within the study, a series of experiments was conducted in parallel in three master courses in Brazil. Results of the study reveal that the participants consider the content and structure of the game appropriate, but no indication for a significant difference on learning effectiveness could be shown.
C1 [von Wangenheim, Christiane Gresse; Thiry, Marcello; Kochanski, Djone] UNIVALI, Master Program Appl Comp Sci, Sao Jose, SC, Brazil.
   [von Wangenheim, Christiane Gresse] Univ Fed Santa Catarina, Grad Program Comp Sci, Florianopolis, SC, Brazil.
C3 Universidade do Vale do Itajai; Universidade Federal de Santa Catarina
   (UFSC)
RP von Wangenheim, CG (corresponding author), UNIVALI, Master Program Appl Comp Sci, Sao Jose, SC, Brazil.
EM gresse@gmail.com; thiry@gmail.com; djonekoc@terra.com.br
RI von Wangenheim, Christiane Gresse/H-3685-2013; Incod, Inct/J-8375-2013;
   von Wangenheim, Aldo/AAL-7158-2020
OI von Wangenheim, Christiane Gresse/0000-0002-6566-1606; von Wangenheim,
   Aldo/0000-0003-4532-1417
CR Abt C. C., 2002, Serious Games
   Akilli GK, 2007, GAMES AND SIMULATIONS IN ONLINE LEARNING: RESEARCH AND DEVELOPMENT FRAMEWORKS, P1
   Almstrum V. L., 1996, P 1 C INT TECHN COMP, P201
   Anderson L., 2009, TAXONOMY LEARNING TE
   [Anonymous], CMUSEI2006TR009
   [Anonymous], NAT C ED TECHN WASH
   [Anonymous], 2008, 9241151 ISO
   Baker A, 2003, PROC INT CONF SOFTW, P614, DOI 10.1109/ICSE.2003.1201245
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Bruns B., 1999, Multimediales Lernen im Netz. Leitfaden fur Entscheider und Planer
   BUGLIONE L, 2007, PERSONE CONOSCEN JAN, P43
   CHOI JI, 1995, ETR&D-EDUC TECH RES, V43, P53, DOI 10.1007/BF02300472
   CMMI Product Team, 2006, CMUSEI2006TR008
   Collofello J.S., 2000, P 13 C SOFTWARE ENG, P161
   Dantas A.R., 2004, SEKE, V19, P24
   DEKKERS CA, 2002, IEEE IT PROFESSI MAR
   Drappa A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P199, DOI 10.1109/ICSE.2000.870411
   ELLINGTON H., 1982, HDB GAME DESIGN
   Greitzer FrankL., 2007, Journal on Educational Resources in Computing, V7, P2, DOI [10.1145/1281320.1281322, DOI 10.1145/1281320.1281322]
   HOCK GT, 2004, P M2USIC MMU INT S I
   Jain A, 2006, CONF SOFTW ENG EDUC, P103
   Janzen DS, 2007, CONF SOFTW ENG EDUC, P89, DOI 10.1109/CSEET.2007.20
   Kafai Y. B., 2001, C PLAYING RUL CULT P
   Kirkpatrick J.D., 2006, EVALUATING TRAINING, V3rd
   Levin J., 2006, ELEMENTARY STAT SOCI, V10th
   LINO JI, 2007, THESIS FEDERAL U SAN
   Lipsey M.W., 1990, DESIGN SENSITIVITY
   LOPER S, 2003, THESIS BLEKINGE I TE
   Malone T. W., 1982, P C HUM FACT COMP SY
   McGarry J., 2001, PRACTICAL SOFTWARE M
   Michael D., 2006, SERIOUS GAMES GAMES
   Molenda M., 1996, ASTD TRAINING DEV HD, V4th, P266
   Navarro EO, 2007, CONF SOFTW ENG EDUC, P195, DOI 10.1109/CSEET.2007.14
   OTT LM, 2005, P 1 WORKSH METH LEAR
   Percival F., 1993, HDB ED TECHNOLOGY
   Pfahl D, 2003, EMPIR SOFTW ENG, V8, P367, DOI 10.1023/A:1025320418915
   Prensky M., 2007, DIGITAL GAME BASED L
   Sharp H., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P688, DOI 10.1109/ICSE.2000.870468
   Takona JP., 2002, Educational Research: Principles and Practice
   Thomas R., 1996, Proceedings. 1996 International Conference Software Engineering: Education and Practice, P226, DOI 10.1109/SEEP.1996.534004
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   [No title captured]
NR 42
TC 41
Z9 43
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2009
VL 14
IS 4
BP 418
EP 452
DI 10.1007/s10664-008-9092-6
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 461TM
UT WOS:000267294400003
DA 2024-07-18
ER

PT J
AU Elbaum, S
   Kanduri, S
   Andrews, A
AF Elbaum, Sebastian
   Kanduri, Satya
   Andrews, Anneliese
TI Trace anomalies as precursors of field failures: an empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE trace analysis; anomaly detection; deployed software analysis; empirical
   study
ID SOFTWARE; COMPLEXITY; ERRORS
AB Reproducing and learning from failures in deployed software is costly and difficult. Those activities can be facilitated, however, if the circumstances leading to a failure can be recognized and properly captured. To anticipate failures we propose to monitor system field behavior for simple trace instances that deviate from a baseline behavior experienced in-house. In this work, we empirically investigate the effectiveness of various simple anomaly detection schemes to identify the conditions that precede failures in deployed software. The results of our experiment provide a preliminary assessment of these schemes, and expose the tradeoffs between different anomaly detection algorithms applied to several types of observable attributes under varying levels of in-house testing.
C1 Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
   Univ Denver, Dept Comp Sci, Denver, CO USA.
C3 University of Nebraska System; University of Nebraska Lincoln;
   University of Denver
RP Elbaum, S (corresponding author), Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
EM elbaum@cse.unl.edu; skanduri@microsoft.com; andrews@cs.du.edu
CR Barbará D, 2001, SIGMOD RECORD, V30, P15, DOI 10.1145/604264.604268
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   BRIAND L, 2000, IEEE T SOFTWARE ENG, V26, P234
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P325
   Debar H., 1992, Proceedings. 1992 IEEE Computer Society Symposium on Research in Security and Privacy (Cat. No.92CH3157-5), P240, DOI 10.1109/RISP.1992.213257
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   EICK SG, 1992, P 14 INT C SOFTW ENG, P59
   Elbaum Sebastian, 2004, P 2004 ACM SIGSOFT I, P65, DOI [10.1145/1007512.1007522, DOI 10.1145/1007512.1007522]
   Forrest S, 1996, P IEEE S SECUR PRIV, P120, DOI 10.1109/SECPRI.1996.502675
   GOODWIN G, 1984, ADAPTIVE FITERING PR
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hangal S, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P291, DOI 10.1109/ICSE.2002.1007976
   HAVELUND K, 2001, P INT S ART INT ROB
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   *IEEE COMP SOC, 2002, IEEE CLASS SOFTW AN, P1044
   Jha S, 2001, P IEEE CSFW, P206, DOI 10.1109/CSFW.2001.930147
   Kanduri S, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P280, DOI 10.1109/ISSRE.2002.1173270
   KHOSHGOFTAAR TM, 1990, IEEE J SEL AREA COMM, V8, P253, DOI 10.1109/49.46879
   Lane T., 1997, P 20 NATL INFORM SYS, P366
   LEE I, 1994, P INT S FAULT TOL CO, P320
   Liblit B, 2002, UCBCSD021203
   LIBLIT B, 2003, P C PROGR LANG DES I, P1
   Mahoney MatthewV., 2002, P 8 INT C KNOWLEDGE, P376, DOI DOI 10.1145/775047.775102
   Maxion RA, 2000, DSN 2000: INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P623, DOI 10.1109/ICDSN.2000.857599
   Memon A, 2004, PROC INT CONF SOFTW, P459, DOI 10.1109/ICSE.2004.1317468
   MUNSON J, 1999, HAW INT C SYST SCI
   MUSA J, 1996, IEEE SOFTWARE, V6, P85
   Neumann PG, 1999, PROCEEDINGS OF THE WORKSHOP ON INTRUSION DETECTION AND NETWORK MONITORING (ID '99), P73
   Raz O, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P302, DOI 10.1109/ICSE.2002.1007977
   Sekar R, 2001, P IEEE S SECUR PRIV, P144, DOI 10.1109/SECPRI.2001.924295
   SWETS J, 1982, EVALUATION DIAGNSTIC
   Tan KMC, 2005, I C DEPEND SYS NETWO, P216, DOI 10.1109/DSN.2005.91
   Tan KMC, 2002, P IEEE S SECUR PRIV, P188, DOI 10.1109/SECPRI.2002.1004371
   TENG HS, 1990, P 11 NAT C ART INT A, P24
   WARRENDER C, 1999, P S SEC PRI, P302
   WEI VS, 1993, IEEE T SOFT ENG, V19, P1045
   Wohlin C., 1995, Software Testing, Verification and Reliability, V5, P213, DOI 10.1002/stvr.4370050403
   YU TJ, 1988, IEEE T SOFTWARE ENG, V14, P1261, DOI 10.1109/32.6170
NR 38
TC 3
Z9 5
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2007
VL 12
IS 5
BP 447
EP 469
DI 10.1007/s10664-007-9042-8
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 213DU
UT WOS:000249647100002
DA 2024-07-18
ER

PT J
AU Cabral, GG
   Minku, LL
   Oliveira, ALI
   Pessoa, DA
   Tabassum, S
AF Cabral, George G.
   Minku, Leandro L.
   Oliveira, Adriano L. I.
   Pessoa, Dinaldo A.
   Tabassum, Sadia
TI An investigation of online and offline learning models for online
   Just-in-Time Software Defect Prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Within-project software defect prediction; Cross-project software defect
   prediction; Online learning; Offline learning
AB Just-in-Time Software Defect Prediction (JIT-SDP) operates in an online scenario where additional training data is received over time. Existing online JIT-SDP studies used online Oza ensemble learning methods with Hoeffding Trees as base learners to learn and update JIT-SDP models over time in this scenario. However, it is unknown how these approaches compare against offline learning approaches adapted to operate in online scenarios, and how the use of any other online or offline base learners would affect online JIT-SDP in terms of predictive performance and computational cost. We therefore propose a new approach called Batch Oversampling Rate Boosting (BORB) that is able to use offline base learners in an online JIT-SDP scenario. Based on 10 open source projects, we provide a comprehensive evaluation of BORB with 5 different base learners and the existing online approach Oversampling Rate Boosting with 4 different base learners, both in within-project and cross-project online JIT-SDP scenarios. The results show that offline learning can lead to better predictive performance than the top performing online learning approaches considered in our study, at a higher computational cost. Cross-project data was helpful to improve predictive performance both for offline and online learning, but especially for online learning.
C1 [Cabral, George G.] Univ Fed Rural Pernambuco, Dept Comp, BR-52171900 Recife, Brazil.
   [Minku, Leandro L.; Tabassum, Sadia] Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, England.
   [Oliveira, Adriano L. I.] Univ Fed Pernambuco, Ctr Informat, BR-50740560 Recife, Brazil.
   [Pessoa, Dinaldo A.] Banco Cent Brasil, R Aurora 1259, BR-70074900 Brasilia, DF, Brazil.
   [Tabassum, Sadia] Kings Coll London, Dept Informat, London WC2B 4BG, England.
C3 Universidade Federal Rural de Pernambuco (UFRPE); University of
   Birmingham; Universidade Federal de Pernambuco; Central Bank of Brazil;
   University of London; King's College London
RP Minku, LL (corresponding author), Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, England.
EM george.gcabral@ufrpe.br; l.l.minku@bham.ac.uk; alio@cin.ufpe.br;
   dinaldoap@gmail.com; sxt901@student.bham.ac.uk
OI Tabassum, Sadia/0000-0002-5096-7100; Minku, Leandro/0000-0002-2639-0671
FU EPSRC - University of Birmingham [EP/R006660/2]; CNPq [314499/2021-0]
FX This work was partly supported by EPSRC Grant No. EP/R006660/2 through a
   School of Computer Science scholarship funded by the University of
   Birmingham in support of the grant. Adriano L. I. Oliveira receives a
   research grant from CNPq # 314499/2021-0.
CR [Anonymous], 2015, Data mining: the textbook
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bishop C.M., 2006, Pattern Recognition and Machine Learning, Vfirst, P143
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Cabral GG, 2023, IEEE T SOFTWARE ENG, V49, P1342, DOI 10.1109/TSE.2022.3175789
   Cabral GG, 2019, PROC INT CONF SOFTW, P666, DOI 10.1109/ICSE.2019.00076
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Catolino G, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P99, DOI 10.1109/MOBILESoft.2019.00023
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Ditzler G, 2015, IEEE COMPUT INTELL M, V10, P12, DOI 10.1109/MCI.2015.2471196
   Domingos P., 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P71, DOI 10.1145/347090.347107
   Eyolfson J., 2011, WORKING C MINING SOF, P153, DOI DOI 10.1145/1985441.1985464
   Flint SW, 2021, IEEE WORK CONF MIN S, P85, DOI 10.1109/MSR52588.2021.00022
   Gama J, 2013, MACH LEARN, V90, P317, DOI 10.1007/s10994-012-5320-9
   Gardner MW, 1998, ATMOS ENVIRON, V32, P2627, DOI 10.1016/S1352-2310(97)00447-0
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kleinbaum D.G., 2002, Logistic Regression
   Li WW, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106364
   Li ZQ, 2018, IET SOFTW, V12, P161, DOI 10.1049/iet-sen.2017.0148
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Mantovani RG, 2015, IEEE IJCNN
   McCloskey M., 1989, PSYCHOL LEARN MOTIV, V24, P109, DOI [10.1016/S0079-7421(08)60536-8, DOI 10.1016/S0079-7421(08)60536-8]
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Menzies T, 2017, EMPIR SOFTW ENG, V22, P2658, DOI 10.1007/s10664-016-9472-2
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Tabassum S, 2023, IEEE T SOFTWARE ENG, V49, P268, DOI 10.1109/TSE.2022.3150153
   Tabassum S, 2020, PROC INT CONF SOFTW, P554, DOI 10.1145/3377811.3380403
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang S, 2018, IEEE T NEUR NET LEAR, V29, P4802, DOI 10.1109/TNNLS.2017.2771290
   Wang S, 2015, IEEE T KNOWL DATA EN, V27, P1356, DOI 10.1109/TKDE.2014.2345380
   Wang S, 2013, PROCEEDINGS OF THE 2013 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND ENSEMBLE LEARNING (CIEL), P36, DOI 10.1109/CIEL.2013.6613138
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Zhang NN, 2022, IET SOFTW, V16, P29, DOI 10.1049/sfw2.12029
   Zhu QM, 2020, PATTERN RECOGN LETT, V136, P71, DOI 10.1016/j.patrec.2020.03.030
NR 47
TC 1
Z9 1
U1 3
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2023
VL 28
IS 5
AR 121
DI 10.1007/s10664-023-10335-6
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R9JE8
UT WOS:001067434600002
OA hybrid
DA 2024-07-18
ER

PT J
AU Gao, YX
   Zhang, HY
   Lyu, C
AF Gao, Yuexiu
   Zhang, Hongyu
   Lyu, Chen
TI EnCoSum: enhanced semantic features for multi-scale multi-modal source
   code summarization
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code summarization; Abstract syntax trees; Method name sequences;
   Cross-modal fusion; Deep learning
AB Code summarization aims to generate concise natural language descriptions for a piece of code, which can help developers comprehend the source code. Analysis of current work shows that the extraction of syntactic and semantic features of source code is crucial for generating high-quality summaries. To provide a more comprehensive feature representation of source code from different perspectives, we propose an approach named EnCoSum, which enhances semantic features for the multi-scale multi-modal code summarization method. This method complements our previously proposed M2TS approach (multi-scale multi-modal approach based on Transformer for source code summarization), which uses the multi-scale method to capture Abstract Syntax Trees (ASTs) structural information more completely and accurately at multiple local and global levels. In addition, we devise a new cross-modal fusion method to fuse source code and AST features, which can highlight key features in each modality that help generate summaries. To obtain richer semantic information, we improve M2TS. First, we add data flow and control flow to ASTs, and added-edge ASTs, called Enhanced-ASTs (E-ASTs). In addition, we introduce method name sequences extracted in the source code, which exist more knowledge about critical tokens in the corresponding summaries and can help the model generate higher-quality summaries. We conduct extensive experiments on processed Java and Python datasets and evaluate our approach via the four most commonly used machine translation metrics. The experimental results demonstrate that EnCoSum is effective and outperforms current state-of-the-art methods. Further, we perform ablation experiments on each of the model's key components, and the results show that they all contribute to the performance of EnCoSum.
C1 [Gao, Yuexiu; Lyu, Chen] Shandong Normal Univ, Sch Informat Sci & Engn, Jinan, Peoples R China.
   [Zhang, Hongyu] Chongqing Univ, Chongqing, Peoples R China.
C3 Shandong Normal University; Chongqing University
RP Lyu, C (corresponding author), Shandong Normal Univ, Sch Informat Sci & Engn, Jinan, Peoples R China.
EM yuexiugao818@gmail.com; hyzhang@cqu.edu.cn; lvchen@sdnu.edu.cn
RI li, xinyi/KEI-6391-2024; Wang, Xinyi/KHV-4909-2024; feng,
   yue/KHV-4687-2024; yu, hui/KDO-3946-2024; Wang, Yibin/KEZ-9645-2024;
   wang, haoyu/KHY-6295-2024; wang, jiaqi/KHC-5900-2024; Yan,
   Lu/KHW-7015-2024; Liu, Chang/KGL-6678-2024; Liu, Zhiyuan/KDP-2606-2024;
   Wang, YuHan/KGY-2933-2024; Liu, Junjie/KHV-6949-2024; Ma,
   Wei/JXY-5019-2024
OI wang, haoyu/0009-0001-2467-5331; Ma, Wei/0000-0002-7344-998X
FU Natural Science Foundation of Shandong Province, China [ZR2021MF059,
   ZR2019MF071]; National Natural Science Foundation of China [61602286,
   61976127]; Special Project on Innovative Methods [2020IM020100]
FX This work was supported by the Natural Science Foundation of Shandong
   Province, China(ZR2021MF059, ZR2019MF071), National Natural Science
   Foundation of China (61602286, 61976127) and Special Project on
   Innovative Methods (2020IM020100). Competing interests: The authors have
   no competing interests to declare that are relevant to the content of
   this article.
CR Ahmad WU, 2021, Arxiv, DOI [arXiv:2103.06333, 10.48550/arXiv.2103.06333]
   Ahmad Wasi Uddin, 2020, ACL
   Allamanis M., 2022, Graph neural networks: foundations, frontiers, and applications, P483
   Allamanis M, 2015, INT C LEARN REPR
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Allamanis M, 2015, PR MACH LEARN RES, V37, P2123
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Alon U., 2018, ARXIV
   [Anonymous], 2010, CASCON First Decade High Impact Papers, DOI [DOI 10.1145/1925805.1925815, 10.1145/1925805.1925815]
   Banerjee S., 2005, P WORKSHOP INTRINSIC, P65
   Barone AVM, 2017, arXiv
   Cho KYHY, 2014, Arxiv, DOI [arXiv:1406.1078, DOI 10.3115/V1/D14-1179, 10.48550/ARXIV.1406.1078, DOI 10.48550/ARXIV.1406.1078]
   Eddy BP, 2013, CONF PROC INT SYMP C, P13, DOI 10.1109/ICPC.2013.6613829
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Gao SZ, 2022, Arxiv, DOI arXiv:2104.09340
   Gao Y., 2022, arXiv
   Guo D., 2021, ICLR
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Haije T., 2016, INF SOFTW TECHNOL, V55, P258
   Hasan Masum, 2021, arXiv
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Hu Xing, 2018, Summarizing source code with transferred api knowledge
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Jiang X., 2021, P 37 C UNCERTAINTY A, V161, P54
   Ko AJ, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P199
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   LeCun Y, 2015, NATURE, V521, P436, DOI 10.1038/nature14539
   Lin C, 2021, INT C PROGRAM COMPRE, P184, DOI 10.1109/ICPC52881.2021.00026
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   Phan L, 2021, NLP4PROG 2021: THE 1ST WORKSHOP ON NATURAL LANGUAGE PROCESSING FOR PROGRAMMING (NLP4PROG 2021), P40
   Lu S., 2021, 35 C NEUR INF PROC S
   McBurney PW, 2016, IEEE T SOFTWARE ENG, V42, P103, DOI 10.1109/TSE.2015.2465386
   Mehrotra N, 2021, IEEE Trans Softw Eng
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Kipf TN, 2017, Arxiv, DOI arXiv:1609.02907
   Niu CG, 2022, PROC INT CONF SOFTW, P2006, DOI 10.1145/3510003.3510096
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   ROBBINS H, 1951, ANN MATH STAT, V22, P400, DOI 10.1214/aoms/1177729586
   RUMELHART DE, 1986, NATURE, V323, P533, DOI 10.1038/323533a0
   Rush Alexander M., 2015, P 2015 C EMPIRICAL M, P379, DOI [10.48550/arXiv.1509.00685, DOI 10.18653/V1/D15-1044]
   Scarselli F, 2009, IEEE T NEURAL NETWOR, V20, P61, DOI 10.1109/TNN.2008.2005605
   Tai KS, 2015, Arxiv, DOI arXiv:1503.00075
   Shido Y, 2019, IEEE IJCNN
   Shuai J, 2020, INT C PROGRAM COMPRE, P196, DOI 10.1145/3387904.3389269
   Sridhara G., 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Sun ZY, 2020, AAAI CONF ARTIF INTE, V34, P8984
   Sutskever I, 2014, ADV NEUR IN, V27
   Vaswani A, 2017, ADV NEUR IN, V30
   Vedantam R, 2015, PROC CVPR IEEE, P4566, DOI 10.1109/CVPR.2015.7299087
   Vinyals O, 2015, PROC CVPR IEEE, P3156, DOI 10.1109/CVPR.2015.7298935
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang W., 2020, IEEE Trans. Softw. Eng, P1
   Wang WH, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3409331
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/SANER48275.2020.9054857, 10.1109/saner48275.2020.9054857]
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Xia Xiaobo, 2019, Advances in neural information processing systems, V32
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Xu K, 2018, Arxiv, DOI arXiv:1804.00823
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Yang Z, 2021, INT C PROGRAM COMPRE, P1, DOI 10.1109/ICPC52881.2021.00010
   Zhang J, 2020, PROC INT CONF SOFTW, P1385, DOI 10.1145/3377811.3380383
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhao G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/3236024.3236068
   Zhou Y., 2019, Advances in neural information processing systems, V32
NR 72
TC 1
Z9 1
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2023
VL 28
IS 5
AR 126
DI 10.1007/s10664-023-10384-x
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R9LQ0
UT WOS:001067498100002
DA 2024-07-18
ER

PT J
AU Vegi, LFD
   Valente, MT
AF Vegi, Lucas Francisco da Matta
   Valente, Marco Tulio
TI Understanding code smells in Elixir functional language
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code smells; Elixir; Functional programming; Grey literature; Mining
   software repositories; GitHub
ID BAD
AB Elixir is a functional programming language created in 2012, whose popularity is growing in the industry. Despite this fact, and to the best of our knowledge, there are few works in the literature focused on studying the internal quality of systems implemented with this language. In a preliminary and previous study, we conducted a grey literature review to provide an initial list of Elixir-specific code smells. Aiming to expand the results of this preliminary study, in this work we use a mixed methodology, based on the interaction with the Elixir developer community and on the mining of issues, commits, pull requests, and the source code in GitHub repositories to prospect and document new code smells for this language. As a result, we propose a catalog composed of 35 code smells, 23 of them are new and specific to Elixir, and 12 of them are traditional code smells, as cataloged by Fowler and Beck, which also affect Elixir systems. We validated this catalog by conducting a survey with 181 experienced Elixir developers from 37 countries and all continents. In this survey, we assessed the levels of relevance and prevalence of each smell in the catalog. We show that most smells in Elixir have relevance levels capable of impacting the readability, maintainability, and evolution of Elixir systems. Furthermore, most of the smells are not uncommon in production code. Our results have practical implications related to the prevention and removal of code smells in Elixir.
C1 [Vegi, Lucas Francisco da Matta; Valente, Marco Tulio] Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, Brazil.
C3 Universidade Federal de Minas Gerais
RP Vegi, LFD (corresponding author), Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, Brazil.
EM lucasvegi@dcc.ufmg.br; mtov@dcc.ufmg.br
OI Valente, Marco Tulio/0000-0002-8180-7548; Francisco da Matta Vegi,
   Lucas/0000-0002-7999-7098
FU Finbits
FX We thank the Elixir community members who spontaneously spread this
   research and interacted with us on our GitHub repository. We also thank
   the developers who participated in our survey and shared their
   perspectives about code quality in Elixir. Finally, Jose Valim deserves
   particular thanks for facilitating our communication with the Elixir
   community and supporting the Research with Elixir initiative &
   nbsp;(http://pesquisecomelixir.com.br/, in Portuguese). This research is
   supported by a grant from Finbits:& nbsp;https://www.finbits.com.br.
CR Almeida U., 2018, LEARN FUNCTIONAL PRO
   Arnaoudova V, 2016, EMPIR SOFTW ENG, V21, P104, DOI 10.1007/s10664-014-9350-8
   Baltes S, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962628
   Bordignon MD, 2020, 21ST IEEE LATIN-AMERICAN TEST SYMPOSIUM (LATS 2020), DOI 10.1109/lats49555.2020.9093675
   Borrelli A, 2020, IEEE WORK CONF MIN S, P198, DOI 10.1145/3379597.3387454
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Cowie J., 2005, Tech. Rep.
   Dabic O, 2021, IEEE WORK CONF MIN S, P560, DOI 10.1109/MSR52588.2021.00074
   Sobrinho EVD, 2021, IEEE T SOFTWARE ENG, V47, P17, DOI 10.1109/TSE.2018.2880977
   Dong YW, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3517193
   Fard AM, 2013, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM.2013.6648192
   Ferreira F, 2023, INFORM SOFTWARE TECH, V155, DOI 10.1016/j.infsof.2022.107111
   Fontana FA, 2013, PROC IEEE INT CONF S, P260, DOI 10.1109/ICSM.2013.37
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Habchi Sarra, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P110, DOI 10.1109/MOBILESoft.2017.11
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hecht G, 2015, IEEE INT CONF AUTOM, P236, DOI 10.1109/ASE.2015.46
   Kamei F, 2021, INFORM SOFTWARE TECH, V138, DOI 10.1016/j.infsof.2021.106609
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Mäntylä MV, 2006, EMPIR SOFTW ENG, V11, P395, DOI 10.1007/s10664-006-9002-8
   Nardone V, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3563214
   Oizumi W, 2016, PROC INT CONF SOFTW, P440, DOI 10.1145/2884781.2884868
   Oizumi W, 2014, 2014 28TH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2014), P91, DOI 10.1109/SBES.2014.18
   Olbrich S. M., 2010, 2010 IEEE 26th International Conference on Software Maintenance (ICSM 2010), DOI 10.1109/ICSM.2010.5609564
   Page L., 1999, PAGERANK CITATION RA, DOI DOI 10.1109/IISWC.2012.6402911
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Punt L, 2016, PROC IEEE INT CONF S, P67, DOI 10.1109/ICSME.2016.73
   Reimann Jan, 2014, TOOL SUPPORTED QUALI
   Saboury A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P294, DOI 10.1109/SANER.2017.7884630
   Sharma T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P189, DOI [10.1109/MSR.2016.028, 10.1145/2901739.2901761]
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Soh Z, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P393, DOI 10.1109/SANER.2016.103
   Taibi D, 2018, IEEE SOFTWARE, V35, P56, DOI 10.1109/MS.2018.2141031
   Taibi D, 2017, INFORM SOFTWARE TECH, V92, P223, DOI 10.1016/j.infsof.2017.08.008
   Thomas D., 2018, PROGRAMMING ELIXIR 1
   Vegi LFM, 2022, 30 INT C PROGR COMPR, P1, DOI [10.1145/3524610.3527881, DOI 10.1145/3524610.3527881]
   Vegi LFM, 2022, CATALOG ELIXIR SPECI
   Vegi LFM., 2022, UNDERSTANDING CODE S, DOI [10.5281/zenodo.7430258, DOI 10.5281/ZENODO.7430258]
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Yamashita A, 2013, INFORM SOFTWARE TECH, V55, P2223, DOI 10.1016/j.infsof.2013.08.002
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Zhang H, 2020, PROC INT CONF SOFTW, P1422, DOI 10.1145/3377811.3380336
NR 43
TC 1
Z9 1
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 102
DI 10.1007/s10664-023-10343-6
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L7HU1
UT WOS:001024940400001
DA 2024-07-18
ER

PT J
AU Morovati, MM
   Nikanjam, A
   Khomh, F
   Jiang, ZM
AF Morovati, Mohammad Mehdi
   Nikanjam, Amin
   Khomh, Foutse
   Jiang, Zhen Ming (Jack)
TI Bugs in machine learning-based systems: a faultload benchmark
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Benchmark; Machine learning-based system; Software bug; Software
   reliability engineering; Software testing
ID PRIVACY; GUIDE
AB The rapid escalation of applying Machine Learning (ML) in various domains has led to paying more attention to the quality of ML components. There is then a growth of techniques and tools aiming at improving the quality of ML components and integrating them into the ML-based system safely. Although most of these tools use bugs' lifecycle, there is no standard benchmark of bugs to assess their performance, compare them and discuss their advantages and weaknesses. In this study, we firstly investigate the reproducibility and verifiability of the bugs in ML-based systems and show the most important factors in each one. Then, we explore the challenges of generating a benchmark of bugs in ML-based software systems and provide a bug benchmark namely defect4ML that satisfies all criteria of standard benchmark, i.e. relevance, reproducibility, fairness, verifiability, and usability. This faultload benchmark contains 100 bugs reported by ML developers in GitHub and Stack Overflow, using two of the most popular ML frameworks: TensorFlow and Keras. defect4ML also addresses important challenges in Software Reliability Engineering of ML-based software systems, like: 1) fast changes in frameworks, by providing various bugs for different versions of frameworks, 2) code portability, by delivering similar bugs in different ML frameworks, 3) bug reproducibility, by providing fully reproducible bugs with complete information about required dependencies and data, and 4) lack of detailed information on bugs, by presenting links to the bugs' origins. defect4ML can be of interest to ML-based systems practitioners and researchers to assess their testing tools and techniques.
C1 [Morovati, Mohammad Mehdi; Nikanjam, Amin; Khomh, Foutse] Polytech Montreal, SWAT Lab, Montreal, PQ, Canada.
   [Jiang, Zhen Ming (Jack)] York Univ, Toronto, ON, Canada.
C3 Universite de Montreal; Polytechnique Montreal; York University - Canada
RP Morovati, MM (corresponding author), Polytech Montreal, SWAT Lab, Montreal, PQ, Canada.
EM mehdi.morovati@polymtl.ca; amin.nikanjam@polymtl.ca;
   foutse.khomh@polymtl.ca; zmjiang@cse.yorku.ca
OI Nikanjam, Amin/0000-0002-0440-6839; Morovati, Mohammad
   Mehdi/0000-0002-7942-4791
FU Fonds de Recherche du Quebec (FRQ); Canadian Institute for Advanced
   Research (CIFAR); National Science and Engineering Research Council of
   Canada (NSERC) [CRDPJ 537462-18]; Consortium for Research and Innovation
   in Aerospace in Quebec (CRIAQ); Thales Canada inc; Bell Textron Canada
   Limited; CAE inc; Bombardier inc.
FX This work was supported by: Fonds de Recherche du Quebec (FRQ), the
   Canadian Institute for Advanced Research (CIFAR) as well as the DEEL
   project CRDPJ 537462-18 funded by the National Science and Engineering
   Research Council of Canada (NSERC) and the Consortium for Research and
   Innovation in Aerospace in Quebec (CRIAQ), together with its industrial
   partners Thales Canada inc, Bell Textron Canada Limited, CAE inc and
   Bombardier inc.
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   Abidi M, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3432690
   Abidi MH, 2019, INT J ADV MANUF TECH, V105, P3743, DOI 10.1007/s00170-019-03801-3
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   [Anonymous], 2019, ROAD VEH SAF INT FUN
   [Anonymous], 2018, About us
   [Anonymous], 2010, ISOMECIEEE 24765:2010, P1, DOI [DOI 10.1109/IEEESTD.2010.5733835, 10.1109/IEEESTD.2010.5733835]
   [Anonymous], 1990, IEEE Std 610.12-1990, V42, P112, DOI [10.1109/IEEESTD.1990.101064, DOI 10.1109/IEEESTD.1990.101064]
   Barocas S, 2016, CALIF LAW REV, V104, P671, DOI 10.15779/Z38BG31
   Borg M, 2021, LECT NOTES BUS INF P, V404, P66, DOI 10.1007/978-3-030-65854-0_6
   Bourque P, 1999, IEEE SOFTWARE, V16, P35, DOI 10.1109/52.805471
   Brownlee J, 2020, USE EARLY STOPPING H
   Chollet Francois, 2018, Keras: the Python Deep Learning Library
   Chouldechova A, 2018, Arxiv, DOI arXiv:1810.08810
   Collobert R., 2002, Torch: a modular machine learning software library
   Developer guideline documentation G, 2021, GITH REST AP
   Dwork C, 2008, LECT NOTES COMPUT SC, V4978, P1, DOI 10.1007/978-3-540-79228-4_1
   Esteva A, 2019, NAT MED, V25, P24, DOI 10.1038/s41591-018-0316-z
   Felderer M, 2021, LECT NOTES BUS INF P, V404, P33, DOI 10.1007/978-3-030-65854-0_3
   Galin Daniel, 2004, Software quality assurance: from theory to implementation
   GitHub, 2021, GITH OFF WEBS
   github, 2019, US
   github, 2016, ABOUT US
   github, 2017, About us
   github, 2018, About Us
   Gupta S, 2021, What is the best language for machine learning?
   Hawkins DM, 2004, J CHEM INF COMP SCI, V44, P1, DOI 10.1021/ci0342472
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Huppler K, 2009, LECT NOTES COMPUT SC, V5895, P18, DOI 10.1007/978-3-642-10424-4_3
   Islam MJ, 2020, PROC INT CONF SOFTW, P1135, DOI 10.1145/3377811.3380378
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Jia L, 2022, EUR CON SFTWR MTNCE, P793, DOI 10.1109/SANER53432.2022.00097
   Jia L, 2021, PROC IEEE INT CONF S, P47, DOI 10.1109/ICSME52107.2021.00011
   Jia L, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110935
   Jiang YJ, 2021, PROC INT CONF SOFTW, P686, DOI 10.1109/ICSE43902.2021.00069
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Keras, 2016, KER 2 1 5
   Kim M, 2021, IEEE WORK CONF MIN S, P540, DOI 10.1109/MSR52588.2021.00070
   Kirk M., 2014, Thoughtful machine learning: A Test-Driven Approach
   Kistowski Joakim v., 2015, P 6 ACMSPEC INT C PE, P333, DOI DOI 10.1145/2668930.2688819
   Krizhevsky A., 2009, LEARNING MULTIPLE LA, DOI DOI 10.1145/3065386
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Lenarduzzi V, 2021, LECT NOTES BUS INF P, V404, P43, DOI 10.1007/978-3-030-65854-0_4
   Lin ZY, 2015, IEEE INT CONF AUTOM, P178, DOI 10.1109/ASE.2015.87
   Lipton ZC., 2018, QUEUE, V16, P31, DOI 10.1145/3236386.3241340
   Liu XM, 2021, IEEE ACCESS, V9, P4566, DOI 10.1109/ACCESS.2020.3045078
   Lu Shan, 2005, P WORKSH EV SOFTW DE
   Lyu MR, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P153, DOI 10.1109/FOSE.2007.24
   Ma L, 2018, IEEE INT CONF AUTOM, P120, DOI 10.1145/3238147.3238202
   Madeiral F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P468, DOI [10.1109/saner.2019.8667991, 10.1109/SANER.2019.8667991]
   Marijan D, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P101, DOI 10.1109/AITest.2019.00010
   Martínez-Fernandez S, 2021, Arxiv, DOI arXiv:2105.01984
   Mathew K., 2016, arXiv, DOI DOI 10.31234/OSF.IO/B6P8D
   McDonald Nora, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3359174
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Nejadgholi Mahdi, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P785, DOI 10.1109/ASE.2019.00078
   Nikanjam A, 2021, Arxiv, DOI arXiv:2101.00135
   Nikanjam A, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3470006
   Nikanjam A, 2021, PROC IEEE INT CONF S, P332, DOI 10.1109/ICSME52107.2021.00036
   Organisation T, 2021, TORCH OFF GITH REP
   Paszke A, 2019, ADV NEUR IN, V32
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Pham HV, 2020, IEEE INT CONF AUTOM, P771, DOI 10.1145/3324884.3416545
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Riccio V, 2020, EMPIR SOFTW ENG, V25, P5193, DOI 10.1007/s10664-020-09881-0
   Rice Leslie, 2020, INT C MACH LEARN, P8093
   Rivera-Landos E, 2021, The challenge of reproducible ml: an empirical study on the impact of bugs
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Schoop Eldon, 2021, CHI '21: Proceedings of the 2021 CHI Conference on Human Factors in Computing Systems, DOI 10.1145/3411764.3445538
   Sculley D, 2015, ADV NEUR IN, V28
   Shen QC, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P968, DOI 10.1145/3468264.3468591
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   stackoverflow, 2017, About us
   stackoverflow, 2018, About us
   stackoverflow, 2019, US
   StackOverflow, 2021, STACK OV ANN DEV SUR
   stackoverflow, 2016, US
   Standards Committee of the IEEE Reliability Society, 2017, IEEE Std 1633-2016 (Revision of IEEE Std 1633-2008), P1, DOI DOI 10.1109/IEEESTD.2017.7827907
   Tambon F, 2021, Silent bugs in deep learning frameworks: an empirical study of keras and tensorflow
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Vieira M., 2012, Resilience Assessment and Evaluation of Computing Systems, P283, DOI 10.1007/978-3-642-29032-9_14
   Voskoglou C., 2017, What is the best programming language for Machine Learning?
   Wardat M., 2022, ICSE 22 44 INT C SOF
   Wardat M, 2021, PROC INT CONF SOFTW, P251, DOI 10.1109/ICSE43902.2021.00034
   Widyasari R, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1556, DOI 10.1145/3368089.3417943
   Xue MF, 2020, IEEE ACCESS, V8, P74720, DOI 10.1109/ACCESS.2020.2987435
   Yalcin OG, 2021, Top 5 Deep Learning Frameworks to Watch in 2021 and Why TensorFlow
   Zerouali A, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P589, DOI [10.1109/saner.2019.8667997, 10.1109/SANER.2019.8667997]
   Zhang J., 2019, Perturbed model validation: A new framework to validate model relevance
   Zhang J.M., 2020, IEEE Trans. Softw. Eng
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
   Zhu C, 2019, PR MACH LEARN RES, V97
   Zubrow D, 2009, IEEE STANDARD CLASSI
NR 96
TC 4
Z9 4
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2023
VL 28
IS 3
AR 62
DI 10.1007/s10664-023-10291-1
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C7QF1
UT WOS:000963813500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Alfayez, R
   Ding, YY
   Winn, R
   Alfayez, G
   Harman, C
   Boehm, B
AF Alfayez, Reem
   Ding, Yunyan
   Winn, Robert
   Alfayez, Ghaida
   Harman, Christopher
   Boehm, Barry
TI What is asked about technical debt (TD) on Stack Exchange
   question-and-answer (Q&A) websites? An observational study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Technical debt; Technical debt management; Software engineering;
   Question-and-answer (Q&A) websites; Stackoverflow
ID CORRELATION-COEFFICIENTS; MANAGEMENT; IDENTIFICATION; EXPLORATION;
   AGREEMENT; TRENDS
AB Technical debt (TD) is a term coined by agile software pioneer Ward Cunningham to account for the added software system effort or cost resulting from taking early software project shortcuts. Previous research on TD has extensively outlined and discussed the various consequences derived from accumulating TD and the difficulty in managing it. A review of the software engineering literature revealed that Stack Exchange question-and-answer (Q&A) websites can provide valuable, real world perspectives on a number of software engineering topics. Therefore, this study aims to observe how the TD term is utilized on Stack Exchange Q&A websites. Specifically, this study utilizes a dataset derived from three Stack Exchange Q&A websites, which are Stack Overflow (SO), Software Engineering (SE), and Project Management (PM), to retrieve and analyze 578 TD-related questions. The results unveiled that TD-related questions can be categorized into 14 different categories, a total of 636 unique tags are utilized in the acquired set of TD-related questions, and a few TD-related categories both lack accepted answers and have a longer median time to receive an accepted answer than other categories. This study's findings highlight the TD-related challenges that are addressed by Stack Exchange Q&A website users, which may prove beneficial in steering future TD-related efforts.
C1 [Alfayez, Reem; Alfayez, Ghaida] King Saud Univ, Coll Comp & Informat Sci, Riyadh, Saudi Arabia.
   [Ding, Yunyan; Winn, Robert; Harman, Christopher; Boehm, Barry] Univ Southern Calif, Ctr Syst & Software Engn, Los Angeles, CA USA.
C3 King Saud University; University of Southern California
RP Alfayez, R (corresponding author), King Saud Univ, Coll Comp & Informat Sci, Riyadh, Saudi Arabia.
EM reealfayez@ksu.edu.sa
RI Alfayez, Reem/KJL-9125-2024; Alfayez, Reem/HTM-7118-2023
OI Alfayez, Reem/0000-0001-6782-247X; Alfayez, Reem/0000-0001-6782-247X
FU Research Center of College of Computer and Information Sciences,
   Deanship of Scientific Research, King Saud University
FX This research project was supported by a grant from the "Research Center
   of College of Computer and Information Sciences, Deanship of Scientific
   Research, King Saud University".
CR Abdellatif A, 2020, IEEE WORK CONF MIN S, P174, DOI 10.1145/3379597.3387472
   Abdi H., 2007, Encyclopedia of measurement and statistics, P508, DOI DOI 10.4135/9781412952644.N239
   Ahmed I, 2017, INT SYMP EMP SOFTWAR, P58, DOI 10.1109/ESEM.2017.12
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   Allman E, 2012, COMMUN ACM, V55, P50, DOI 10.1145/2160718.2160733
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   Ampatzoglou A, 2015, INFORM SOFTWARE TECH, V64, P52, DOI 10.1016/j.infsof.2015.04.001
   [Anonymous], 2009, CASE STUDY RES DESIG
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   Avgeriou P., 2016, DAGSTUHL REP, DOI 10.4230/DagRep.6.4.110
   Avgeriou P, 2021, IEEE SOFTWARE, V38, P61, DOI 10.1109/MS.2020.3024958
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Baltes S, 2018, IEEE WORK CONF MIN S, P319, DOI 10.1145/3196398.3196430
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Behutiye WN, 2017, INFORM SOFTWARE TECH, V82, P139, DOI 10.1016/j.infsof.2016.10.004
   Biffl S., 2006, VALUE BASED SOFTWARE, DOI [10.1007/3-540-29263-2, DOI 10.1007/3-540-29263-2]
   Bomfim MM, 2017, COMM COM INF SC, V680, P60, DOI 10.1007/978-3-319-55907-0_6
   Codabux Z, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P8, DOI 10.1109/MTD.2013.6608672
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Curtis B, 2012, IEEE SOFTWARE, V29, P34, DOI 10.1109/MS.2012.156
   de Mello RM, 2017, INT SYMP EMP SOFTWAR, P68, DOI 10.1109/ESEM.2017.13
   Erdogmus H, 1999, INT WORKSH EC DRIV S, P1
   Fernández-Sánchez C, 2017, J SYST SOFTWARE, V124, P22, DOI 10.1016/j.jss.2016.10.018
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fukunaga K., 1990, Introduction to StatisticalPattern Recognition
   Gama Eliakim, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P730, DOI 10.1145/3422392.3422429
   Gama E, 2019, SBQS: PROCEEDINGS OF THE 18TH BRAZILIAN SYMPOSIUM ON SOFTWARE QUALITY, P228, DOI 10.1145/3364641.3364668
   Gisev N, 2013, RES SOC ADMIN PHARM, V9, P330, DOI 10.1016/j.sapharm.2012.04.004
   Guo Y., 2011, 2 WORKSH MAN TECHN D, P31, DOI [10.1145/1985362.1985370, DOI 10.1145/1985362.1985370]
   Guo YP, 2016, EMPIR SOFTW ENG, V21, P159, DOI 10.1007/s10664-014-9351-7
   Han JX, 2020, EMPIR SOFTW ENG, V25, P2694, DOI 10.1007/s10664-020-09819-6
   Haque M. U.L., 2020, P 14 ACMIEEE INT S E
   Izurieta Clemente, 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P23, DOI 10.1109/MTD.2012.6225995
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lenarduzzi V., 2019, INT SYMP EMP SOFTWAR, P1, DOI DOI 10.1109/esem.2019.8870169
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Malhotra Ruchika., 2015, EMPIRICAL RES SOFTWA, DOI [DOI 10.1201/B19292, 10.1201/B19292]
   Martini A, 2014, EUROMICRO CONF PROC, P85, DOI 10.1109/SEAA.2014.65
   Morgenthaler J.D., 2012, Proc. of the 3rd Int'l Workshop on Managing Technical Debt (MTD), P1, DOI DOI 10.1109/MTD.2012.6225994
   Nord R. L., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P91, DOI 10.1109/WICSA-ECSA.212.17
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Puth MT, 2015, ANIM BEHAV, V102, P77, DOI 10.1016/j.anbehav.2015.01.010
   Ralph P, 2021, Arxiv, DOI arXiv:2010.03525
   Rios N, 2020, EMPIR SOFTW ENG, V25, P3216, DOI 10.1007/s10664-020-09832-9
   Rios N, 2018, INFORM SOFTWARE TECH, V102, P117, DOI 10.1016/j.infsof.2018.05.010
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Rubin Kenneth S., 2012, Essential Scrum: A practical guide to the most popular Agile process, V1st
   Schober P, 2018, ANESTH ANALG, V126, P1763, DOI 10.1213/ANE.0000000000002864
   Silva CC, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10026-0
   Spínola RO, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P1, DOI 10.1109/MTD.2013.6608671
   Sterling Chris., 2010, Managing Software Debt: Building for Inevitable Change (paperback) (Agile Software Development)
   Suryanarayana G., 2014, Refactoring for Software Design Smells: Managing Technical Debt
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Yuepu Guo, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P528, DOI 10.1109/ICSM.2011.6080824
   Zazworka N., 2011, P 2 WORKSH MAN TECHN, P39
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
   Zou J, 2017, INFORM SOFTWARE TECH, V84, P19, DOI 10.1016/j.infsof.2016.12.003
NR 61
TC 1
Z9 1
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 35
DI 10.1007/s10664-022-10269-5
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8H4CE
UT WOS:000920980600001
DA 2024-07-18
ER

PT J
AU Dorn, J
   Apel, S
   Siegmund, N
AF Dorn, Johannes
   Apel, Sven
   Siegmund, Norbert
TI Mastering uncertainty in performance estimations of configurable
   software systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Probabilistic programming; Performance-influence modeling; Configurable
   software systems; Bayesian inference; P4
ID REGRESSION; PREDICTION; SELECTION
AB Understanding the influence of configuration options on the performance of a software system is key for finding optimal system configurations, system understanding, and performance debugging. In the literature, a number of performance-influence modeling approaches have been proposed, which model a configuration option's influence and a configuration's performance as a scalar value. However, these point estimates falsely imply a certainty regarding an option's influence that neglects several sources of uncertainty within the assessment process, such as (1) measurement bias, choices of model representation and learning process, and incomplete data. This leads to the situation that different approaches and even different learning runs assign different scalar performance values to options and interactions among them. The true influence is uncertain, though. There is no way to quantify this uncertainty with state-of-the-art performance modeling approaches.We propose a novel approach, P4, which is based on probabilistic programming, that explicitly models uncertainty for option influences and consequently provides a confidence interval for each prediction alongside a scalar. This way, we can explain, for the first time, why predictions may be erroneous and which option's influence may be unreliable. An evaluation on 13 real-world subject systems shows that P4's accuracy is in line with the state of the art while providing reliable confidence intervals, in addition to scalar predictions. We qualitatively explain how uncertain influences of individual options and interactions cause inaccurate predictions.
C1 [Dorn, Johannes; Siegmund, Norbert] Univ Leipzig, D-04109 Leipzig, Germany.
   [Apel, Sven] Saarland Univ, D-60041 Saarbrucken, Germany.
   [Apel, Sven] Saarland Informat Campus, D-60041 Saarbrucken, Germany.
C3 Leipzig University; Saarland University
RP Dorn, J (corresponding author), Univ Leipzig, D-04109 Leipzig, Germany.
EM johannes.dorn@uni-leipzig.de
OI Apel, Sven/0000-0003-3687-2233
FU German Research Foundation [SI 2171/3-1, SI 2171/2, AP 206/11-1,
   389792660]; German Federal Ministry of Education and Research
   [01IS19059A, 01IS18026B]
FX Siegmund's and Apel's work has been funded by the German Research
   Foundation (SI 2171/3-1, SI 2171/2, and AP 206/11-1, as well as Grant
   389792660 as part of TRR 248 - CPEC) and the German Federal Ministry of
   Education and Research (Agile-AI: 01IS19059A and 01IS18026B) by funding
   the competence center for Big Data and AI "ScaDS.AI Dresden/Leipzig".
CR [Anonymous], 2011, CIDR
   Antonelli F, 2020, FUTURE GENER COMP SY, V102, P746, DOI 10.1016/j.future.2019.09.006
   Arcaini P, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106371
   Bergstra J., 2011, Adv. Neural Inf. Process. Syst., V24
   Cheng J., 2022, ACM T SOFTW ENG METH
   Dorn J, 2020, IEEE INT CONF AUTOM, P684, DOI 10.1145/3324884.3416620
   Dubslaff C, 2022, CAUSALITY CONFIGURAB, P13
   Elbaum S, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P833, DOI 10.1145/2635868.2666608
   FARRAR DE, 1967, REV ECON STAT, V49, P92, DOI 10.2307/1937887
   Gogate V, 2006, LECT NOTES COMPUT SC, V4204, P711
   Guo JM, 2018, EMPIR SOFTW ENG, V23, P1826, DOI 10.1007/s10664-017-9573-6
   Guo JM, 2013, IEEE INT CONF AUTOM, P301, DOI 10.1109/ASE.2013.6693089
   Ha H, 2019, PROC INT CONF SOFTW, P1095, DOI 10.1109/ICSE.2019.00113
   Ha H, 2019, PROC IEEE INT CONF S, P470, DOI 10.1109/ICSME.2019.00080
   HARTIGAN JA, 1985, ANN STAT, V13, P70, DOI 10.1214/aos/1176346577
   Henard C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P517, DOI 10.1109/ICSE.2015.69
   Hill R.C., 2003, COMPANION THEORETICA, P256, DOI [DOI 10.1002/9780470996249.CH12, DOI 10.1002/9780470996249.CH13]
   HOERL AE, 1970, TECHNOMETRICS, V12, P55, DOI 10.1080/00401706.1970.10488634
   Hoffman MD, 2014, J MACH LEARN RES, V15, P1593
   Horcas JM, 2021, SPLC '21: PROCEEDINGS OF THE 25TH ACM INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, DOI 10.1145/3461001.3471146
   Iqbal Md Shahriar, 2022, P 17 EUR C COMP SYST, P199
   James G, 2013, SPRINGER TEXTS STAT, V103, P1, DOI [10.1007/978-1-4614-7138-7, 10.1007/978-1-4614-7138-7_1]
   Jamshidi P, 2016, I S MOD ANAL SIM COM, P39, DOI 10.1109/MASCOTS.2016.17
   Jeffrey Wooldridge., 2012, Introductory Econometrics: A Modern Approach
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Kaltenecker C, 2020, IEEE SOFTWARE, V37, P58, DOI 10.1109/MS.2020.2987024
   Kaltenecker C, 2019, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2019.00112
   Kendall A, 2017, 31 ANN C NEURAL INFO, V30
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Kiureghian AD, 2009, STRUCT SAF, V31, P105, DOI 10.1016/j.strusafe.2008.06.020
   Kolesnikov S, 2019, EMPIR SOFTW ENG, V24, P2410, DOI 10.1007/s10664-019-09705-w
   Krishna R, 2022, IEEE T SOFTWARE ENG, V48, P893, DOI 10.1109/TSE.2020.3007560
   Mandrioli C, 2022, IEEE T SOFTWARE ENG, V48, P3554, DOI 10.1109/TSE.2021.3101130
   Miller A. J., 2002, SUBSET SELECTION REG, DOI [10.1201/9781420035933, DOI 10.1201/9781420035933]
   Murphy KP, 2012, MACHINE LEARNING: A PROBABILISTIC PERSPECTIVE, P1
   Nair V, 2020, IEEE T SOFTWARE ENG, V46, P794, DOI 10.1109/TSE.2018.2870895
   Nair V, 2018, AUTOMAT SOFTW ENG, V25, P247, DOI 10.1007/s10515-017-0225-2
   Nair V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3106237.3106238
   Neal R., 1993, CRGTR931 U TOR DEP C
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Oh J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P61, DOI 10.1145/3106237.3106273
   Rice J. R., 1976, Advances in computers, vol.15, P65, DOI 10.1016/S0065-2458(08)60520-3
   Robbins Herbert E, 1992, Breakthroughs in Statistics: Foundations and basic theory, P388, DOI DOI 10.1007/978-1-4612-0919-5_26
   Roeder G, 2017, P INT C NEURAL INFOR, P6928
   Salvatier J, 2016, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.55
   SHANNON CE, 1948, BELL SYST TECH J, V27, P379, DOI 10.1002/j.1538-7305.1948.tb01338.x
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Siegmund N, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P284, DOI 10.1145/2786805.2786845
   Siegmund N, 2012, SOFTWARE QUAL J, V20, P487, DOI 10.1007/s11219-011-9152-9
   Siegmund N, 2012, PROC INT CONF SOFTW, P167, DOI 10.1109/ICSE.2012.6227196
   Smith R., 2013, J ROYAL STAT SOC SER, DOI DOI 10.1111/J.2517-6161.1996.TB02080.X
   Taylor JR, 1997, INTRO ERROR ANAL STU
   Tibshirani R, 1996, J ROY STAT SOC B, V58, P267, DOI 10.1111/j.2517-6161.1996.tb02080.x
   Trubiani C, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P77, DOI 10.1109/ICSE-NIER.2019.00028
   Van Aken D, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1009, DOI 10.1145/3035918.3064029
   van der Maaten L., 2009, J Mach Learn Res, V10, P7
   Velez M, 2021, PROC INT CONF SOFTW, P1072, DOI 10.1109/ICSE43902.2021.00100
   Velez M, 2020, AUTOMAT SOFTW ENG, V27, P265, DOI 10.1007/s10515-020-00273-8
   Virtanen P, 2020, NAT METHODS, V17, P261, DOI 10.1038/s41592-019-0686-2
   Weber M, 2021, PROC INT CONF SOFTW, P1059, DOI 10.1109/ICSE43902.2021.00099
   Werner N., 2019, THESIS U PASSAU
   Xu TY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P307, DOI 10.1145/2786805.2786852
   Zhang Y, 2015, IEEE INT CONF AUTOM, P365, DOI 10.1109/ASE.2015.15
   Zhu YQ, 2017, PROCEEDINGS OF THE 2017 SYMPOSIUM ON CLOUD COMPUTING (SOCC '17), P338, DOI 10.1145/3127479.3128605
   Zou H, 2005, J R STAT SOC B, V67, P301, DOI 10.1111/j.1467-9868.2005.00503.x
   Zwillinger D., 1999, CRC Standard Probability and Statistics Tables and Formulae
NR 66
TC 1
Z9 1
U1 2
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 33
DI 10.1007/s10664-022-10250-2
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8A3GH
UT WOS:000916129600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Hora, A
AF Hora, Andre
TI Excluding code from test coverage: practices, motivations, and impact
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Test coverage; Software evolution; Software
   maintenance; Software repository mining
AB Test coverage measures the percentage of code that is covered (and uncovered) by tests. In practice, not all code is equally important for coverage analysis, like code that will not be executed during tests. Some coverage tools provide support for code exclusion from coverage reports, however, we are not yet aware of what code tends to be excluded, the reasons behind it, and the impact on coverage analysis. In this paper, we provide an empirical study to understand code exclusion practices, motivations, and impact on test coverage. We first mine popular Python projects that adopt test coverage to assess code exclusion practices. We find that (1) over 1/3 of the projects perform coverage exclusion, (2) 75% of the code is already created using the exclusion feature, and (3) developers exclude non-runnable, debug-only, and defensive code, but also platform-specific and conditional importing. Next, we explore the motivations behind the exclusions and the importance of test coverage in current days: (4) most code is excluded because it is already untested, low-level, or complex and (5) distinct test coverage recommendations are available for developers, such as covering the change, exploring coverage reports, and increasing coverage. Lastly, we assess the impact of code exclusion on test coverage. We detect that (6) code exclusion may impact test coverage, decreasing the number of statements that should be covered by tests and (7) test coverage can be refined by following code exclusion recommendations. Based on our findings, we discuss implications for both practitioners and researchers to improve coverage analysis, tools, and documentation as well as inspire novel research on test coverage.
C1 [Hora, Andre] Univ Fed Minas Gerais UFMG, Dept Comp Sci, Belo Horizonte, Brazil.
C3 Universidade Federal de Minas Gerais
RP Hora, A (corresponding author), Univ Fed Minas Gerais UFMG, Dept Comp Sci, Belo Horizonte, Brazil.
EM andrehora@dcc.ufmg.br
RI Hora, Andre/HTP-0699-2023
OI Hora, Andre/0000-0003-4900-1330
FU CAPES; CNPq; FAPEMIG
FX This research is supported by CAPES, CNPq, and FAPEMIG.
CR Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], 2021, CONTRIBUTING COOKIEC
   [Anonymous], 2021, CODE COVERAGE BEST P
   [Anonymous], 2021, COALA
   [Anonymous], 2021, CONTRIBUTING DATEUTI
   [Anonymous], 2021, JACOCO JAVA CODE COV
   [Anonymous], 2021, COBERTURA
   [Anonymous], 2021, Python Package Index-PyPI
   [Anonymous], 2021, PIT MUTATION TESTING
   [Anonymous], 2021, COVERAGE
   [Anonymous], 2021, INCREASE TEST COVERA
   [Anonymous], 2021, CONTRIBUTING FASTAPI
   [Anonymous], 2021, COVERALLS
   [Anonymous], 2021, TESTING IMPROVING TE
   Arcuri A, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3293455
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Brito A, 2020, EMPIR SOFTW ENG, V25, P1458, DOI 10.1007/s10664-019-09756-z
   Brunetto M, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110933
   Chen BY, 2018, IEEE INT CONF AUTOM, P305, DOI 10.1145/3238147.3238214
   Codasip, 2021, US
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   Cooper S, 2018, US Patent, Patent No. [9,990,272, 9990272]
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Episkopos DC, 2011, US Patent, Patent No. [7,886,272, 7886272]
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Hilton M, 2018, IEEE INT CONF AUTOM, P53, DOI 10.1145/3238147.3238183
   Hongyu Zhai, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P116, DOI 10.1109/MSR.2019.00027
   Hora A, 2021, IEEE WORK CONF MIN S, P392, DOI 10.1109/MSR52588.2021.00051
   istat, 2021, US
   Ivankovic M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P955, DOI 10.1145/3338906.3340459
   jestjs, 2021, US
   Kochhar PS, 2017, IEEE T RELIAB, V66, P1213, DOI 10.1109/TR.2017.2727062
   Marick B., 1999, Proceedings of the 16th Interational Conference on Testing Computer Software, P16
   Marinescu P., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, ISSTA 2014, P93
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Palomba F, 2016, P 25 INT S SOFTW TES, P130, DOI [10.1145/2931037.2931057, DOI 10.1145/2931037.2931057]
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Sinha S, 2000, IEEE T SOFTWARE ENG, V26, P849, DOI 10.1109/32.877846
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Thomas D., 2019, The Pragmatic Programmer
   Winters Titus, 2020, Software Engineering at Google
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
   Zeller A., 2019, The fuzzing book
NR 44
TC 1
Z9 1
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2023
VL 28
IS 1
AR 16
DI 10.1007/s10664-022-10259-7
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6W3EC
UT WOS:000895613000002
DA 2024-07-18
ER

PT J
AU Vieira, RG
   Mattos, CLC
   Rocha, LS
   Gomes, JPP
   Paixao, M
AF Vieira, Renan G.
   Mattos, Cesar Lincoln C.
   Rocha, Lincoln S.
   Gomes, Joao Paulo P.
   Paixao, Matheus
TI The role of bug report evolution in reliable fixing estimation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug report; Machine learning; Effort estimation; Resolution time
   estimation; JIRA tracking issue system
ID TIME; REPLICATION
AB Context Bug reports contain information that can be used by researchers and practitioners to better understand the bug fixing process and to enable the estimation of the effort necessary to fix bugs. In general, estimation models are built using the data (e.g., fixing time, severity, number of comments, number of attachments, and number of patches) present in the reports of fixed bugs (i.e., the report final's state). However, we claim that this approach is not reliable in a real setting. Effort estimation is necessary for bug fix scheduling and team allocation tasks, which happens closer to the bug report opening than its closing. At that moment, the data available in the bug report is less informative than the data used to build the model, which may lead to an unrealistic estimation. Objective We propose a new approach to estimate bug-fixing time, i.e., the time span between the moment the bug was first reported until the bug is considered fixed. We consider not only the final state of the bug report to create our estimation model but all the previous available states, different from some previous studies that do not consider the reports' updates. The concept of bug report evolution is used to create a dataset containing all investigated report states. Method First, we verify how often the bug reports and their fields are updated. Next, we evaluate our approach using different machine learning methods as a classification problem, with distinct output configurations, and class balancing techniques. The experimental analysis is performed with data from the JIRA issue tracking system of ten open-source projects. By leveraging the best models (considering all possible configurations) for the different states of the evolution of a bug report, we can assess whether there are significant differences in the models' estimation ability due to the report's state. Results We gathered evidence that the reports' fields are updated often, which characterizes the reports' evolution, impacting the building of bug-fixing estimation models. The models' evaluation shows promising results 0.44 up to 0.85, precision values from 0.34 up to 0.74 and recall values from 0.62 up to 0.99, depending on the project. Conclusions Our experiments show that field updates have a meaningful impact on the models' performance. Furthermore, we present a new approach to deal with the bug report evolution by considering each report version as an independent report. Finally, we also make available our dataset to the community.
C1 [Vieira, Renan G.; Mattos, Cesar Lincoln C.; Rocha, Lincoln S.; Gomes, Joao Paulo P.] Univ Fed Ceara, Av Humberto Monte S-N, BR-60440593 Fortaleza, Ceara, Brazil.
   [Paixao, Matheus] Univ Estadual Ceara, Av Dr Silas Munguba 1700, BR-60714903 Fortaleza, Ceara, Brazil.
C3 Universidade Federal do Ceara; Universidade Estadual do Ceara
RP Vieira, RG (corresponding author), Univ Fed Ceara, Av Humberto Monte S-N, BR-60440593 Fortaleza, Ceara, Brazil.
EM renan.vieira@alu.ufc.br; cesarlincoln@dc.ufc.br; lincoln@dc.ufc.br;
   jpaulo@dc.ufc.br; matheus.paixao@uece.br
OI Paixao, Matheus/0000-0002-1775-7259
CR Akbarinasaji S, 2018, J SYST SOFTWARE, V136, P173, DOI 10.1016/j.jss.2017.02.021
   Al-Zubaidi W.H. A., 2017, Proceedings of the 13th International Conference on Predictive Models and Data Analytics in Software Engineering, P53, DOI 10.1145/3127005.3127011
   [Anonymous], 2011, P ACM 2011 C COMP SU, DOI DOI 10.1145/1958824.1958887
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   Ardimento P, 2016, LECT NOTES ARTIF INT, V9956, P167, DOI 10.1007/978-3-319-46307-0_11
   Assar S, 2016, EMPIR SOFTW ENG, V21, P1437, DOI 10.1007/s10664-015-9391-7
   Baysal O, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1185, DOI 10.1109/ICSE.2013.6606674
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   Brady Fiorenza, 2013, Cambridge University report on cost of software faults
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Ebrahimi N, 2019, INFORM SOFTWARE TECH, V113, P98, DOI 10.1016/j.infsof.2019.05.007
   Habayeb M, 2018, IEEE T SOFTWARE ENG, V44, P1224, DOI 10.1109/TSE.2017.2757480
   Hamill M, 2017, INFORM SOFTWARE TECH, V87, P1, DOI 10.1016/j.infsof.2017.01.002
   Hauge O, 2010, INFORM SOFTWARE TECH, V52, P1133, DOI 10.1016/j.infsof.2010.05.008
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hensman J., 2013, UNCERTAINTY ARTIFICI, P282, DOI DOI 10.48550/ARXIV.1309.6835
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hu H, 2014, PROC INT SYMP SOFTW, P122, DOI 10.1109/ISSRE.2014.17
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Lazar A., 2014, P 11 WORKING C MININ, P308
   Lenarduzzi V, 2020, EUROMICRO CONF PROC, P437, DOI 10.1109/SEAA51224.2020.00076
   Raja U, 2013, EMPIR SOFTW ENG, V18, P117, DOI 10.1007/s10664-012-9197-9
   Serrano N, 2005, IEEE SOFTWARE, V22, P11, DOI 10.1109/MS.2005.32
   Shokripour R, 2015, J SYST SOFTWARE, V102, P109, DOI 10.1016/j.jss.2014.12.049
   Thung Ferdian., 2016, P 5 INT WORKSHOP SOF, P18
   Tian Y, 2015, EMPIR SOFTW ENG, V20, P1354, DOI 10.1007/s10664-014-9331-y
   Vieira R, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P80, DOI 10.1145/3345629.3345639
   Weiss C., 2007, 4 INTERNATIONALWORKS, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhang X, 2019, COMM COM INF SC, V1142, P287, DOI 10.1007/978-3-030-36808-1_31
   Zhang X, 2017, LECT NOTES COMPUT SC, V10635, P748, DOI 10.1007/978-3-319-70096-0_76
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 32
TC 2
Z9 3
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 164
DI 10.1007/s10664-022-10213-7
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V4SY
UT WOS:000859469500009
DA 2024-07-18
ER

PT J
AU Xia, TP
   Fu, W
   Shu, R
   Agrawal, R
   Menzies, T
AF Xia, Tianpei
   Fu, Wei
   Shu, Rui
   Agrawal, Rishabh
   Menzies, Tim
TI Predicting health indicators for open source projects (using
   hyperparameter optimization)
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Hyperparameter optimization; Project health; Machine learning
ID DIFFERENTIAL EVOLUTION; GITHUB; EFFICIENT
AB Software developed on public platform is a source of data that can be used to make predictions about those projects. While the individual developing activity may be random and hard to predict, the developing behavior on project level can be predicted with good accuracy when large groups of developers work together on software projects. To demonstrate this, we use 64,181 months of data from 1,159 GitHub projects to make various predictions about the recent status of those projects (as of April 2020). We find that traditional estimation algorithms make many mistakes. Algorithms like k-nearest neighbors (KNN), support vector regression (SVR), random forest (RFT), linear regression (LNR), and regression trees (CART) have high error rates. But that error rate can be greatly reduced using hyperparameter optimization. To the best of our knowledge, this is the largest study yet conducted, using recent data for predicting multiple health indicators of open-source projects. To facilitate open science (and replications and extensions of this work), all our materials are available online at https://github.com/arennax/Health_Indicator_Prediction..
C1 [Xia, Tianpei; Fu, Wei; Shu, Rui; Agrawal, Rishabh; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Menzies, T (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM txia4@ncsu.edu; fuwei.ee@gmail.com; rshu@ncsu.edu; agrawa3@ncsu.edu;
   timm@ieee.org
RI Xia, Tianpei/HGC-8847-2022; Menzies, Tim/X-7680-2019
OI Menzies, Tim/0000-0002-5040-3196
FU National Science Foundation [1703487]; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1703487] Funding Source: National Science Foundation
FX This work is partially funded by a National Science Foundation Grant
   #1703487.
CR Aggarwal K., 2014, P 11 WORKING C MININ, P360, DOI [10.1145/2597073.2597120, DOI 10.1145/2597073.2597120]
   Agrawal A, 2022, INDIAN J SURG, V84, P895, DOI 10.1007/s12262-021-03102-8
   Agrawal A, 2018, ARXIV 181201550
   Agrawal A, 2019, IEEE T SOFTW ENG
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   [Anonymous], 1995, Empirical methods for artificial intelligence
   [Anonymous], 2007, Emerging Free and Open Source Software Practices, P238
   [Anonymous], 2013, P INT WORKSH SOFTW E
   Bao LF, 2021, IEEE T SOFTWARE ENG, V47, P1277, DOI 10.1109/TSE.2019.2918536
   Bergstra J., 2011, Adv. Neural Inf. Process. Syst., V24
   Bidoki Neda Hajiakhoond, 2018, 2018 5th International Conference on Computational Science and Computational Intelligence (CSCI), P1248, DOI 10.1109/CSCI46756.2018.00241
   Borges H, 2016, Proceedings of the The 12th International Conference on Predictive Models and Data Analytics in Software Engineering
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Chen C, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0174202
   Chen FW, 2014, 2014 3RD INTERNATIONAL WORKSHOP ON EVIDENTIAL ASSESSMENT OF SOFTWARE TECHNOLOGIES (EAST), P40, DOI 10.1145/2627508.2627515
   Coelho J, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106274
   Crowston K, 2006, COMPUTER, V39, P89, DOI 10.1109/MC.2006.152
   Das S, 2016, SWARM EVOL COMPUT, V27, P1, DOI 10.1016/j.swevo.2016.01.004
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Feurer M, 2019, SPRING SER CHALLENGE, P113, DOI 10.1007/978-3-030-05318-5_6
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Foundation A S, 2018, AP SOFTW FDN PROJ
   Foundation L, 2020, COMM HLTH AN OP SOUR
   Friedman M, 1940, ANN MATH STAT, V11, P86, DOI 10.1214/aoms/1177731944
   Fu W, 2016, ARXIV 160902613
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Georg JPL, 2018, ASSESSING OPEN SOURC
   Han JX, 2019, P INT COMP SOFTW APP, P21, DOI 10.1109/COMPSAC.2019.00013
   Herbold S, 2019, IEEE T SOFTWARE ENG, V45, P632, DOI 10.1109/TSE.2018.2790413
   Herbold S, 2017, IEEE T SOFTWARE ENG, V43, P1091, DOI 10.1109/TSE.2017.2748129
   Hohl P, 2018, INT ICE CONF ENG
   Jansen S, 2014, INFORM SOFTWARE TECH, V56, P1508, DOI 10.1016/j.infsof.2014.04.006
   Jarczyk O, 2018, INFORM SOFTWARE TECH, V100, P32, DOI 10.1016/j.infsof.2018.03.010
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Kikas R, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P291, DOI [10.1109/MSR.2016.038, 10.1145/2901739.2901751]
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Korte M., 2008, P 4 INT WORKSH PRED, P63
   Krishna R, 2021, IEEE T SOFTWARE ENG, V47, P2956, DOI 10.1109/TSE.2020.2983927
   Krishna R, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P306, DOI 10.1145/3183519.3183548
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   Liao ZF, 2019, SYMMETRY-BASEL, V11, DOI 10.3390/sym11020144
   Linux Foundation, 2020, LIN FDN PROJ
   Minku LL, 2019, EMPIR SOFTW ENG, V24, P3153, DOI 10.1007/s10664-019-09686-w
   Molokken K, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P223, DOI 10.1109/ISESE.2003.1237981
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nagy A., 2010, Proceedings 2010 2nd International Conference on Intelligent Networking and Collaborative Systems (INCoS 2010), P192, DOI 10.1109/INCOS.2010.99
   Nair V, 2020, IEEE T SOFTWARE ENG, V46, P794, DOI 10.1109/TSE.2018.2870895
   NEMENYI P, 1962, BIOMETRICS, V18, P263
   Paasivaara M, 2018, EMPIR SOFTW ENG, V23, P2550, DOI 10.1007/s10664-017-9555-8
   Parnin C, 2017, IEEE SOFTWARE, V34, P86, DOI 10.1109/MS.2017.86
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Port D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P51
   Qi FM, 2017, INFORM SOFTWARE TECH, V92, P145, DOI 10.1016/j.infsof.2017.07.015
   Rstudio_team, 2021, RSTUDIO OPEN SOURCE
   Santos A, 2016, PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 1 (ICEIS), P490, DOI 10.5220/0005835404900497
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Shepperd M., 2000, Empirical Software Engineering, V5, P175, DOI 10.1023/A:1026582314146
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Shrikanth NC., 2021, ARXIV 210511082
   Snoek J., 2012, ARXIV 12062944
   Stensrud E, 2003, EMPIR SOFTW ENG, V8, P139, DOI 10.1023/A:1023010612345
   Stewart K, 2019, PERSONNEL COMMUNICAT
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tu H, 2021, FRUGAL UNLOCKING SSL
   Tu H, 2021, IEEE WORK CONF MIN S, P1, DOI 10.1109/MSR52588.2021.00013
   Wahyudin D, 2007, INT J WEB INF SYST, V3, P116, DOI 10.1108/17440080710829252
   Wang T, 2018, INTERNETWARE'18: PROCEEDINGS OF THE TENTH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, DOI 10.1145/3275219.3275223
   Weber S, 2014, 2014 IEEE INTERNATIONAL CONFERENCE ON DATA MINING WORKSHOP (ICDMW), P851, DOI 10.1109/ICDMW.2014.55
   Witten IH, 2011, MOR KAUF D, P1
   Wu GH, 2018, INFORM SCIENCES, V423, P172, DOI 10.1016/j.ins.2017.09.053
   Xia T, 2020, IEEE T SOFTWARE ENG
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Zemlin J., 2017, YOU CANT MEASURE IT
NR 77
TC 2
Z9 2
U1 0
U2 16
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 122
DI 10.1007/s10664-022-10171-0
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2H9PO
UT WOS:000814619000003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tagra, A
   Zhang, HX
   Rajbahadur, GK
   Hassan, AE
AF Tagra, Ankur
   Zhang, Haoxiang
   Rajbahadur, Gopi Krishnan
   Hassan, Ahmed E.
TI Revisiting reopened bugs in open source software systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug reports; Reopened bugs; Data quality; Open source software; Model
   interpretation
ID PREDICTION; IMPACT; ALGORITHMS
AB Reopened bugs can degrade the overall quality of a software system since they require unnecessary rework by developers. Moreover, reopened bugs also lead to a loss of trust in the end-users regarding the quality of the software. Thus, predicting bugs that might be reopened could be extremely helpful for software developers to avoid rework. Prior studies on reopened bug prediction focus only on three open source projects (i.e., Apache, Eclipse, and OpenOffice) to generate insights. We observe that one out of the three projects (i.e., Apache) has a data leak issue - the bug status of reopened was included as training data to predict reopened bugs. In addition, prior studies used an outdated prediction model pipeline (i.e., with old techniques for constructing a prediction model) to predict reopened bugs. Therefore, we revisit the reopened bugs study on a large scale dataset consisting of 47 projects tracked by JIRA using the modern techniques such as SMOTE, permutation importance together with 7 different machine learning models. We study the reopened bugs using a mixed methods approach (i.e., both quantitative and qualitative study). We find that: 1) After using an updated reopened bug prediction model pipeline, only 34% projects give an acceptable performance with AUC >= 0.7. 2) There are four major reasons for a bug getting reopened, that is, technical (i.e., patch/integration issues), documentation, human (i.e., due to incorrect bug assessment), and reasons not shown in the bug reports. 3) In projects with an acceptable AUC, 94% of the reopened bugs are due to patch issues (i.e., the usage of an incorrect patch) identified before bug reopening. Our study revisits reopened bugs and provides new insights into developer's bug reopening activities.
C1 [Tagra, Ankur; Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
   [Zhang, Haoxiang; Rajbahadur, Gopi Krishnan] Ctr Software Excellence Huawei, Kingston, ON, Canada.
C3 Queens University - Canada
RP Zhang, HX (corresponding author), Ctr Software Excellence Huawei, Kingston, ON, Canada.
EM atagra@cs.queensu.ca; haoxiang.zhang@acm.org;
   gopi.krishnan.rajbahadur1@huawei.com; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572
CR Agrawal A, 2019, INF ECON POLICY, V47, P1, DOI 10.1016/j.infoecopol.2019.05.001
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Al Dallal J, 2014, EMPIR SOFTW ENG, V19, P775, DOI 10.1007/s10664-012-9239-3
   Altmann A, 2010, BIOINFORMATICS, V26, P1340, DOI 10.1093/bioinformatics/btq134
   [Anonymous], 2004, CEAS
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Arellano AV., 2019, EPIDEMIOLOGICAL DIS
   Artstein R, 2008, COMPUT LINGUIST, V34, P555, DOI 10.1162/coli.07-034-R2
   Beckler DT, 2018, BMC MED RES METHODOL, V18, DOI 10.1186/s12874-018-0606-7
   Biggers LR, 2014, EMPIR SOFTW ENG, V19, P465, DOI 10.1007/s10664-012-9224-x
   Bortis G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P342, DOI 10.1109/ICSE.2013.6606580
   Boslaugh S., 2012, Statistics in a nutshell: A desktop quick reference
   Caglayan B., 2012, Proceedings of the 8th International Conference on Predictive Models in Software Engineering', PROMISE'12, ACM, P1
   Cerda P, 2018, MACH LEARN, V107, P1477, DOI 10.1007/s10994-018-5724-2
   Chakraborty D, 2019, J BUILD PERFORM SIMU, V12, P193, DOI 10.1080/19401493.2018.1498538
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P456, DOI 10.1145/3236024.3236050
   Corazza A, 2016, EMPIR SOFTW ENG, V21, P72, DOI 10.1007/s10664-014-9347-3
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   da Costa DA, 2018, EMPIR SOFTW ENG, V23, P835, DOI 10.1007/s10664-017-9548-7
   Denny MJ, 2018, POLIT ANAL, V26, P168, DOI 10.1017/pan.2017.44
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Guo PJ, 2011, P ACM 2011 C COMP SU, P395, DOI [10.1145/1958824.1958887., DOI 10.1145/1958824.1958887]
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Hardeniya N., 2016, Natural language processing: python and NLTK, DOI DOI 10.5555/3161300
   Hayes AF, 2007, COMMUN METHODS MEAS, V1, P77, DOI 10.1080/19312450709336664
   He H, 2013, IMBALANCED LEARNING: FOUNDATIONS, ALGORITHMS, AND APPLICATIONS, P1, DOI 10.1002/9781118646106
   Hebert A, 2020, THESIS CONCORDIA U
   Herzig K, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P39, DOI 10.1109/ICSE.2015.133
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Jiarpakdee J, 2020, EMPIR SOFTW ENG, V25, P3590, DOI 10.1007/s10664-020-09848-1
   Jiarpakdee J, 2021, IEEE T SOFTWARE ENG, V47, P320, DOI 10.1109/TSE.2019.2891758
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2018.00018
   Kannan S., 2014, Int. J. Comput. Sci. Commun. Netw., V5, P7
   Kaufman S, 2012, ACM T KNOWL DISCOV D, V6, DOI 10.1145/2382577.2382579
   Latha I., 2012, International_Journal_of_Emerging_Trends__Technology_ in_Computer_Science_IJETTCS, V1, P58
   Lee D, 2020, EMPIR SOFTW ENG, V25, P3396, DOI 10.1007/s10664-020-09840-9
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li H, 2021, IEEE T SOFTWARE ENG, V47, P2858, DOI 10.1109/TSE.2020.2970422
   Lipton ZC, 2018, COMMUN ACM, V61, P36, DOI 10.1145/3233231
   Liu HT, 2016, INT CONF SEMANT, P1, DOI [10.1109/SKG.2016.11, 10.1109/SKG.2016.009]
   Malhotra R, 2017, EMPIR SOFTW ENG, V22, P2806, DOI 10.1007/s10664-016-9488-7
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   Méndez JR, 2006, LECT NOTES ARTIF INT, V4177, P449
   Mi Q, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2915986
   Mi Q, 2018, INFORM SOFTWARE TECH, V99, P93, DOI 10.1016/j.infsof.2018.03.006
   Morasca S, 2020, EMPIR SOFTW ENG, V25, P3977, DOI 10.1007/s10664-020-09861-4
   Murphy G., 2004, P 16 INT C SOFTW ENG, P1
   Nyamawe AS, 2020, EMPIR SOFTW ENG, V25, P4315, DOI 10.1007/s10664-020-09871-2
   Rajbahadur GK, 2021, IEEE T SOFTWARE ENG, DOI DOI 10.1109/TSE.2021.3056941
   Rajbahadur GK, 2019, IEEE T SOFTWARE ENG, P1
   Rajbahadur GK, 2017, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2017.4
   Rakha MS, 2018, IEEE T SOFTWARE ENG, V44, P1245, DOI 10.1109/TSE.2017.2755005
   Rodríguez-Pérez G, 2020, EMPIR SOFTW ENG, V25, P1294, DOI 10.1007/s10664-019-09781-y
   Saha RK, 2015, INFORM SOFTWARE TECH, V65, P114, DOI 10.1016/j.infsof.2015.03.002
   Scikit-learn, 2020, TUN HYP EST
   Scoccia G. L., 2020, PROC IEEEACM 14 INT, P1, DOI [10.1145/3382494.3422171, DOI 10.1145/3382494.3422171]
   Shihab E., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P249, DOI 10.1109/WCRE.2010.36
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Somasundaram K., 2012, Proceedings of the 5th India Software Engineering Conference, ISEC '12, P125, DOI DOI 10.1145/2134254.2134276
   Song FX, 2005, PATTERN ANAL APPL, V8, P199, DOI 10.1007/s10044-005-0256-3
   Srividhya V., 2010, INT J COMPUTER SCI, V47, P49
   Stolberg S, 2009, AGILE 2009 CONFERENCE, P369, DOI 10.1109/AGILE.2009.16
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tian Y, 2012, EUR CON SFTWR MTNCE, P385, DOI 10.1109/CSMR.2012.48
   Tu FF, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P307, DOI 10.1145/3236024.3236054
   Turabieh H, 2019, EXPERT SYST APPL, V122, P27, DOI 10.1016/j.eswa.2018.12.033
   Uysal AK, 2014, INFORM PROCESS MANAG, V50, P104, DOI 10.1016/j.ipm.2013.08.006
   Vassallo C, 2020, EMPIR SOFTW ENG, V25, P1419, DOI 10.1007/s10664-019-09750-5
   Vieira R, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P80, DOI 10.1145/3345629.3345639
   Webb JK, 2020, J ZOO WILDLIFE MED, V51, P379, DOI 10.1638/2019-0219
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Xia X, 2015, AUTOMAT SOFTW ENG, V22, P75, DOI 10.1007/s10515-014-0162-2
   Xia X, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P174, DOI 10.1109/CSMR-WCRE.2014.6747167
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Xia X, 2013, EUR CON SFTWR MTNCE, P331, DOI 10.1109/CSMR.2013.43
   Xuan JF, 2015, IEEE T KNOWL DATA EN, V27, P264, DOI 10.1109/TKDE.2014.2324590
   Xuan JF, 2012, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2012.6227209
   Yadav A, 2019, INFORM SOFTWARE TECH, V112, P1, DOI 10.1016/j.infsof.2019.03.014
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Zeng Y, 2019, PROCEEDINGS OF 3RD INTERNATIONAL CONFERENCE ON INFORMATION SYSTEM AND DATA MINING (ICISDM 2019), P16, DOI 10.1145/3325917.3325926
   Zhang H, 2020, ACM T SOFTW ENG METH, P29
   Zhang H., 2019, IEEE T SOFTWARE ENG
   Zheng A., 2018, OREILLY
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
NR 90
TC 6
Z9 8
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2022
VL 27
IS 4
AR 92
DI 10.1007/s10664-022-10133-6
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 0T9NQ
UT WOS:000787288300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Calefato, F
   Gerosa, MA
   Iaffaldano, G
   Lanubile, F
   Steinmacher, I
AF Calefato, Fabio
   Gerosa, Marco Aurelio
   Iaffaldano, Giuseppe
   Lanubile, Filippo
   Steinmacher, Igor
TI Will you come back to contribute? Investigating the inactivity of OSS
   core developers in GitHub
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Open-source communities; Repository mining; Retention; Abandonment;
   Turnover; Disengagement
ID OPEN-SOURCE SOFTWARE; NEWCOMERS; COMMUNITY; CODE
AB Several Open-Source Software (OSS) projects depend on the continuity of their development communities to remain sustainable. Understanding how developers become inactive or why they take breaks can help communities prevent abandonment and incentivize developers to come back. In this paper, we propose a novel method to identify developers' inactive periods by analyzing the individual rhythm of contributions to the projects. Using this method, we quantitatively analyze the inactivity of core developers in 18 OSS organizations hosted on GitHub. We also survey core developers to receive their feedback about the identified breaks and transitions. Our results show that our method was effective for identifying developers' breaks. About 94% of the surveyed core developers agreed with our state model of inactivity; 71% and 79% of them acknowledged their breaks and state transition, respectively. We also show that all core developers take breaks (at least once) and about a half of them (similar to 45%) have completely disengaged from a project for at least one year. We also analyzed the probability of transitions to/from inactivity and found that developers who puce their activity have a similar to 35 to similar to 55% chance to return to an active state; yet, if the break lasts for a year or longer, then the probability of resuming activities drops to similar to 21-26%, with a similar to 54% chance of complete disengagement. These results may support the creation of policies and mechanisms to make OSS community managers aware of breaks and potential project abandonment.
C1 [Calefato, Fabio; Iaffaldano, Giuseppe] Univ Bari, Bari, Italy.
   [Lanubile, Filippo] Univ Bari, Comp Sci, Bari, Italy.
   [Gerosa, Marco Aurelio; Steinmacher, Igor] No Arizona Univ, Flagstaff, AZ 86011 USA.
C3 Universita degli Studi di Bari Aldo Moro; Universita degli Studi di Bari
   Aldo Moro; Northern Arizona University
RP Calefato, F (corresponding author), Univ Bari, Bari, Italy.
EM fabio.calefato@uniba.it; marco.gerosa@nau.edu;
   giuseppe.iaffaldano@uniba.it; filippo.lanubile@uniba.it;
   igor.steinmacher@nau.edu
RI Calefato, Fabio/H-4177-2014; Gerosa, Marco Aurelio/A-6686-2009;
   Lanubile, Filippo/AAF-9132-2020; Igor, Steinmacher/B-6414-2012
OI Calefato, Fabio/0000-0003-2654-1588; Gerosa, Marco
   Aurelio/0000-0003-1399-7535; Lanubile, Filippo/0000-0003-3373-7589;
   Igor, Steinmacher/0000-0002-0612-5790
FU Universita degli Studi di Bari Aldo Moro within the CRUI-CARE Agreement
FX Open access funding provided by Universita degli Studi di Bari Aldo Moro
   within the CRUI-CARE Agreement.
CR Aniche M, 2016, IEEE INT WORK C SO, P41, DOI 10.1109/SCAM.2016.19
   [Anonymous], 2008, Statistical Reasoning in the Behavioral Sciences
   [Anonymous], 2002, Pair Programming Illuminated
   [Anonymous], 2014, WORKSH GLOB SOFTW DE
   Avelino G, 2019, ARXIV PREPRINT ARXIV
   Avelino Guilherme, 2016, Proceedings of IEEE 24th International Conference on Program Comprehension (ICPC), P1
   Balali S, 2018, COMPUT SUPP COOP W J, V27, P679, DOI 10.1007/s10606-018-9310-8
   Barcomb A, 2014, P INT S OP COLL, P40
   Bass Julian M., 2018, 2018 IEEE/ACM 13th International Conference on Global Software Engineering (ICGSE), P77, DOI 10.1145/3196369.3196375
   Coelho J, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P114, DOI 10.1145/3195836.3195848
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   Constantinou E, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P34, DOI 10.1109/SANER.2017.7884607
   Cosentino V, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P499, DOI 10.1109/SANER.2015.7081864
   Crowston K, 2006, COMPUTER, V39, P89, DOI 10.1109/MC.2006.152
   David PA, 2008, INF ECON POLICY, V20, P364, DOI 10.1016/j.infoecopol.2008.10.001
   Decan A, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110573
   DITTRICH JE, 1985, INFORM MANAGE, V9, P67, DOI 10.1016/0378-7206(85)90028-X
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Ferreira M, 2017, INT C PROGRAM COMPRE, P207, DOI 10.1109/ICPC.2017.35
   Foucault M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P829, DOI 10.1145/2786805.2786870
   Fronchetti F, 2019, IFIP ADV INF COMM TE, V556, P91, DOI 10.1007/978-3-030-20883-7_9
   Garden A.-M., 1988, Computer Personnel, V11, P6, DOI 10.1145/54127.54129
   Garman AN, 2005, SIMULAT GAMING, V36, P274, DOI [10.1177/10468781-4273254, 10.1177/1046878104273254]
   Gerosa M, 2021, PROC INT CONF SOFTW, P1046, DOI 10.1109/ICSE43902.2021.00098
   Gil J, 2016, J OBJECT TECHNOL, V15, DOI 10.5381/jot.2016.15.1.a2
   Graef MI, 2000, CHILD WELFARE, V79, P517
   Hall T, 2008, SIGMIS CPR 2008: PROCEEDINGS OF THE 2008 ACM SIGMIS CPR CONFERENCE, P30
   Hannebauer C., 2017, P 13 INT S OP COLL
   Hars A, 2002, INT J ELECTRON COMM, V6, P25
   Hess M. R., 2004, ANN M AM ED RES ASS, P1
   Iaffaldano G, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE HEALTH (SOHEAL 2019), P9, DOI 10.1109/SoHeal.2019.00009
   Lakhani K.R., 2005, Perspectives on free and open source software, P3, DOI DOI 10.2139/SSRN.443040
   Lee P. C. B., 2002, P 2002 ACM SIGCPR C, P145, DOI DOI 10.1145/512360.512393
   Levine J. M., 2004, TEAM COGNITION UNDER, P153, DOI [10.1037/10690-008, DOI 10.1037/10690-008]
   Levine JM, 2005, PERSPNNEL TURNOVER D
   Lin B, 2017, INT CONF GLOBAL SOFT, P66, DOI 10.1109/ICGSE.2017.11
   Link GJ, 2018, 24 AM C INF SYST 201
   Marsan J, 2019, IEEE SOFTWARE, V36, P34, DOI 10.1109/MS.2018.2874323
   Midha V, 2007, AMCIS 2007 P, P25
   Miller C, 2019, IFIP ADV INF COMM TE, V556, P116, DOI 10.1007/978-3-030-20883-7_11
   Mockus A, 2010, Proc. of the 18th Symposium on the Foundations of Software Engineering (FSE), P117
   Mockus A, 2009, PROC INT CONF SOFTW, P67, DOI 10.1109/ICSE.2009.5070509
   Nakakoji Kumiyo, 2002, P INT WORKSHOP PRINC, P76, DOI DOI 10.1145/512035.512055
   Nakatsu RT, 2009, INFORM MANAGE-AMSTER, V46, P57, DOI 10.1016/j.im.2008.11.005
   Pinto G, 2018, EMPIR SOFTW ENG, V23, P3221, DOI 10.1007/s10664-018-9609-6
   Ricca Filippo, 2010, P 2010 ACM IEEE INT, DOI [10.1145/1852786.1852856, DOI 10.1145/1852786.1852856]
   Santos C, 2013, J STRATEGIC INF SYST, V22, P26, DOI 10.1016/j.jsis.2012.07.004
   Schilling A, 2014, P ANN HICSS, P4003, DOI 10.1109/HICSS.2014.495
   Silva JO, 2020, J SYST SOFTWARE, V162, DOI 10.1016/j.jss.2019.110487
   Steinmacher I, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P256, DOI 10.1145/3180155.3180208
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Trinkenreich Bianca, 2020, Proceedings of the ACM on Human-Computer Interaction, V4, DOI 10.1145/3415251
   Tukey J.W., 1977, EXPLORATORY DATA ANA, V2
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   von Krogh G, 2012, MIS QUART, V36, P649
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Wiese IS, 2016, PROC IEEE INT CONF S, P345, DOI 10.1109/ICSME.2016.13
   Wohlin C., 2012, Experimentation in Software Engineering
   Yamashita K., 2016, J INFORM PROCESS, V24, P339, DOI DOI 10.2197/IPSJJIP.24.339
   Yiqing Yu, 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P3396, DOI 10.1109/HICSS.2012.97
   Zhang F, 2013, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2013.46
   Zhou MH, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2876443
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
NR 63
TC 7
Z9 7
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 76
DI 10.1007/s10664-021-10012-6
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA ZV8GW
UT WOS:000770762600001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Majumder, S
   Mody, P
   Menzies, T
AF Majumder, Suvodeep
   Mody, Pranav
   Menzies, Tim
TI Revisiting process versus product metrics: a large scale analysis
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Software process; Process metrics; Product
   metrics; Developer metrics; Random forest; Logistic regression; Support
   vector machine; HPO
ID ORIENTED DESIGN METRICS; SUPPORT VECTOR MACHINE; EMPIRICAL-ANALYSIS;
   DEFECT PREDICTION; SOFTWARE; QUALITY; CODE; OPTIMIZATION
AB Numerous methods can build predictive models from software data. However, what methods and conclusions should we endorse as we move from analytics in-the-small (dealing with a handful of projects) to analytics in-the-large (dealing with hundreds of projects)? To answer this question, we recheck prior small-scale results (about process versus product metrics for defect prediction and the granularity of metrics) using 722,471 commits from 700 Github projects. We find that some analytics in-the-small conclusions still hold when scaling up to analytics in-the-large. For example, like prior work, we see that process metrics are better predictors for defects than product metrics (best process/product-based learners respectively achieve recalls of 98%/44% and AUCs of 95%/54%, median values). That said, we warn that it is unwise to trust metric importance results from analytics in-the-small studies since those change dramatically when moving to analytics in-the-large. Also, when reasoning in-the-large about hundreds of projects, it is better to use predictions from multiple models (since single model predictions can become confused and exhibit a high variance).
C1 [Majumder, Suvodeep; Mody, Pranav; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Majumder, S (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM smajumd3@ncsu.edu; prmody@ncsu.edu; tim@ieee.org
RI Menzies, Tim/X-7680-2019; Majumder, Suvodeep/HTM-7211-2023
OI Menzies, Tim/0000-0002-5040-3196; Majumder, Suvodeep/0000-0001-5673-1142
FU NSF [1908762]; Direct For Computer & Info Scie & Enginr; Division of
   Computing and Communication Foundations [1908762] Funding Source:
   National Science Foundation
FX This work was partially funded by NSF Grant #1908762.
CR Agrawal Amritanshu, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE). Proceedings, P1050, DOI 10.1145/3180155.3180197
   Agrawal A, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P245, DOI 10.1145/3183519.3183549
   Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   [Anonymous], 2017, ARXIV170503697
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arisholm E, 2006, ESEM
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird C, 2009, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2009.5070550
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   Cao Y, 2018, INT J BIO-INSPIR COM, V11, P282, DOI 10.1504/IJBIC.2018.092808
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen D, 2019, INT C PROGRAM COMPRE, P179, DOI 10.1109/ICPC.2019.00037
   Chen D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P456, DOI 10.1145/3236024.3236050
   Choudhary GR, 2018, COMPUT ELECTR ENG, V67, P15, DOI 10.1016/j.compeleceng.2018.02.043
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Efron B, 1994, INTRO BOOTSTRAP, DOI DOI 10.1201/9780429246593
   Fenton N., 2000, INT C SOFTWARE ENG, P357, DOI DOI 10.1145/336512.336588
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   HERBSLEB J, 2014, COMPANION P 36 INT C, P1
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Ibrahim DR, 2017, 2017 INTERNATIONAL CONFERENCE ON NEW TRENDS IN COMPUTING SCIENCES (ICTCS), P252, DOI 10.1109/ICTCS.2017.39
   Jacob S.G., 2015, INT J COMPUT APPL, V117, P18
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Kamei Y, 2010, PROC IEEE INT CONF S
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Kondo M, 2020, EMPIR SOFTW ENG, V25, P890, DOI 10.1007/s10664-019-09736-3
   Krishna R, 2019, IEEE T SOFTWARE ENG, V45, P1081, DOI 10.1109/TSE.2018.2821670
   Li ZQ, 2018, IET SOFTW, V12, P161, DOI 10.1049/iet-sen.2017.0148
   Lumpe M, 2012, INT J SOFTW ENG KNOW, V22, P621, DOI 10.1142/S0218194012500179
   Madeyski L, 2006, LECT NOTES COMPUT SC, V4044, P65
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   Majumder S, 2018, IEEE WORK CONF MIN S, P554, DOI 10.1145/3196398.3196424
   Mathew G, 2017, PROC IEEE ACM INT C, P397, DOI 10.1109/ICSE-C.2017.52
   Matsumoto S., 2010, 6 PROMISE
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nam J, 2018, HETEROGENEOUS DEFECT
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Nayrolles M, 2018, IEEE WORK CONF MIN S, P153, DOI 10.1145/3196398.3196438
   Onan A, 2016, EXPERT SYST APPL, V62, P1, DOI 10.1016/j.eswa.2016.06.005
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pascarella L, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110493
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rahman F, 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, ESEC/FSE '11, P322, DOI DOI 10.1145/2025113
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Seiffert C, 2014, INFORM SCIENCES, V259, P571, DOI 10.1016/j.ins.2010.12.016
   Seliya Naeem, 2010, Proceedings 2010 IEEE 12th International Symposium on High-Assurance Systems Engineering (HASE), P26, DOI 10.1109/HASE.2010.29
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Sun ZB, 2012, IEEE T SYST MAN CY C, V42, P1806, DOI 10.1109/TSMCC.2012.2226152
   TANTITHAMTHAVOR.C, 2016, PROC INT CONF SOFTW, P321, DOI DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Tomar D, 2015, KNOWL-BASED SYST, V81, P131, DOI 10.1016/j.knosys.2015.02.009
   Tu H, 2020, IEEE T SOFTW ENG
   Tu H., 2018, FSE SWAN
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   Williams C, 2008, P 2008 WORKSHOP DEFE, P32
   Xia T., 2018, ARXIV180500336
   Xia X, 2016, PROC IEEE INT CONF S, P268, DOI 10.1109/ICSME.2016.67
   Xia X, 2016, IEEE T RELIAB, V65, P1810, DOI 10.1109/TR.2016.2588139
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Zhang F, 2017, EMPIR SOFTW ENG, V22, P3186, DOI 10.1007/s10664-017-9516-2
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
   Zhang HY, 2007, 13TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P93, DOI 10.1109/PRDC.2007.28
   Zhang HY, 2009, PROC IEEE INT CONF S, P274, DOI 10.1109/ICSM.2009.5306304
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
   Zhou YM, 2010, J SYST SOFTWARE, V83, P660, DOI 10.1016/j.jss.2009.11.704
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 102
TC 6
Z9 7
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 60
DI 10.1007/s10664-021-10068-4
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZV2BV
UT WOS:000770339500013
DA 2024-07-18
ER

PT J
AU Liu, HR
   Yu, Y
   Li, SS
   Geng, MY
   Mao, XG
   Liao, XK
AF Liu, Haoran
   Yu, Yue
   Li, Shanshan
   Geng, Mingyang
   Mao, Xiaoguang
   Liao, Xiangke
TI How to cherry pick the bug report for better summarization?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug report summarization; Deep learning; Software maintenance; Mining
   software repositories
ID ALGORITHM
AB Bug reports, as a frequently consulted software asset, are maintained and evolved in software communities. A large number of bug reports with complex discussions are accumulated during the software evolution. It has been proven that an accurate and concise summary can help developers reduce the time effort spent going through the entire content of bug reports. Prior works select salient sentences that contain the most semantic information to form summaries. Their performance is limited due to the lack of consideration of controversial standpoints among developers' comments and the redundancy in sentences. In this paper, we study the possibility of assessing comments' opinions from discussions, and which kind of sentences are more likely to have redundant information. Based on these studies, we propose two new factors, Believability and Informativeness. The former measures the degree of approved or disapproved to a sentence within discussions, and the latter assesses the amount of information contained in the summary. Accordingly, we design BugSum, a supervised approach to generate summaries with a two-phase method. In the measuring phase, we propose a classification method that combines the advantages of Deep Pyramid CNN and Random Forest to assess the believability of sentences in bug reports. In the selection phase, BugSum integrates an auto-encoder network for semantic feature extraction with the believability of sentences, and optimizes the informativeness of generated summaries through a dynamic selection of salient sentences. Extensive experiments show that our approach outperforms 8 comparative approaches over two public datasets and one customized dataset. In particular, the probability of adding controversial sentences that are clearly disapproved by other developers into the summary is reduced by up to 64.7%.
C1 [Liu, Haoran; Yu, Yue; Li, Shanshan; Geng, Mingyang; Mao, Xiaoguang; Liao, Xiangke] Natl Univ Def Technol, Coll Comp Sci & Technol, Changsha, Hunan, Peoples R China.
C3 National University of Defense Technology - China
RP Yu, Y; Li, SS (corresponding author), Natl Univ Def Technol, Coll Comp Sci & Technol, Changsha, Hunan, Peoples R China.
EM yuyue@nudt.edu.cn; shanshanli@nudt.edu.cn
RI Li, Shanshan/HLH-7747-2023
OI Yu, Yue/0000-0002-9865-2212
FU National Grand RD Plan [2020AAA0103504]; National Natural Science
   Foundation [61872373, 61672529]
FX This paper is supported by National Grand R&D Plan(Grant No.
   2020AAA0103504), and National Natural Science Foundation (No.61872373
   and No. 61672529).
CR [Anonymous], 2010, P IEEE ACM INT C AUT
   [Anonymous], CONVOLUTIONAL NEURAL
   [Anonymous], 2013, P 51 ANN M ASS COMP
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Arya D, 2019, PROC INT CONF SOFTW, P454, DOI 10.1109/ICSE.2019.00058
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bettenburg N., 2008, P 2008 INT WORKING C, P27
   Bishnu PS, 2012, IEEE T KNOWL DATA EN, V24, P1146, DOI 10.1109/TKDE.2011.163
   Bottou L, 2010, COMPSTAT'2010: 19TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL STATISTICS, P177, DOI 10.1007/978-3-7908-2604-3_16
   Breiman L., 2010, RANDOM FOREST MACH L, V45, P32
   Carbonell J., 1998, Proceedings of the 21st Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P335, DOI 10.1145/290941.291025
   Casalnuovo C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P817, DOI 10.1145/2786805.2786854
   Cheng JP, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P484
   Cho K., 2014, PROCS C EMPIRICAL ME, P1724, DOI DOI 10.3115/V1/D14-1179
   Christoffersen P, 2004, J FINANC ECON, V72, P291, DOI 10.1016/j.jfineco.2003.02.001
   Corporate AAFAI, 1992, 10 NAT C ART INT
   Fan Q, 2017, INT SYMP EMP SOFTWAR, P121, DOI 10.1109/ESEM.2017.19
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Hampe B., 2002, SUPERLATIVE VERBS CO, V24
   Han X, 2020, 2018 33 IEEE ACM INT
   He H, 2020, ASE 20
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   HOLM S, 1979, SCAND J STAT, V6, P65
   Jadhav A, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P142
   Jiang H, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-014-0372-y
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   John Anvik, 2011, ACM T SOFTW ENG METH
   Johnson R, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P562, DOI 10.18653/v1/P17-1052
   Kalliamvakou E, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P574, DOI 10.1109/ICSE.2015.74
   Kianifard F., 1995, Technometrics, V37, P116, DOI [DOI 10.1080/00401706.1995.1048589, DOI 10.1080/00401706.1995.10485899]
   Kim KM, 2018, PAC AS C KNOWL DISC
   Kim W, 2010, INFORM SYST, V35, P215, DOI 10.1016/j.is.2009.08.003
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Li XC, 2018, INT C PROGRAM COMPRE, P144, DOI 10.1145/3196321.3196326
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   Lin Hui, 2010, HUMAN LANGUAGE TECHN, P912
   Linares-Vásquez M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P709, DOI 10.1109/ICSE.2015.229
   Lotufo R, 2015, EMPIR SOFTW ENG, V20, P516, DOI 10.1007/s10664-014-9311-2
   Mani S., 2012, P ACM SIGSOFT 20 INT, P1, DOI DOI 10.1145/2393596.2393607
   Matskevich S, 2018, PROCEEDINGS OF THE 4TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON NLP FOR SOFTWARE ENGINEERING (NL4SE '18), P26, DOI 10.1145/3283812.3283822
   Mei Q., 2010, KDD, P1009
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Munot N., 2014, INT J COMPUT APPL, V102
   Nallapati R, 2017, AAAI CONF ARTIF INTE, P3075
   Narayan Shashi, 2018, NAACL HLT, DOI DOI 10.18653/V1/N18-1158
   Nazar N, 2016, J COMPUT SCI TECH-CH, V31, P883, DOI 10.1007/s11390-016-1671-1
   Nenkova Ani, 2007, ACM Transactions on Speech and Language Processing, V4
   Olanow CW, 1998, NEUROLOGY, V50, pS1, DOI 10.1212/WNL.50.3_Suppl_3.S1
   Owczarzak Karolina, 2012, NAACL-HLT 2012: Workshop on Evaluation Metrics and System Comparison for Automatic Summarization, P1
   Paszke A., 2017, NIPS W
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Qin Liu, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P299, DOI 10.1109/MSR.2019.00056
   Radev DR, 2004, INFORM PROCESS MANAG, V40, P919, DOI 10.1016/j.ipm.2003.10.006
   Ramos Juan., 2003, USING TF IDF DETERMI, V242, P29
   Rastkar S, 2014, IEEE T SOFTWARE ENG, V40, P366, DOI 10.1109/TSE.2013.2297712
   Rastkar Sarah, 2010, P 32 ACM IEEE INT C, V1, P505, DOI DOI 10.1145/1806799.1806872
   Vapnik VN, 2000, NATURE STAT LEARNING, DOI DOI 10.1007/978-1-4757-3264-1
   Wan Alvin, 2020, ARXIV200400221
   Wang S., 2012, Baselines and bigrams: Simple, good sentiment and topic classification, P90
   Wang XR, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P205, DOI 10.1109/SANER.2017.7884622
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Xuan JF, 2015, IEEE T KNOWL DATA EN, V27, P264, DOI 10.1109/TKDE.2014.2324590
   Zhang Y, 2010, INT J MACH LEARN CYB, V1, P43, DOI 10.1007/s13042-010-0001-0
   Zhang YL, 2021, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE43902.2021.00029
   Zhou QY, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P654
   Zhu X., 2007, P HUM LANG TECHN C N, P97
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 68
TC 3
Z9 4
U1 0
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 119
DI 10.1007/s10664-021-10008-2
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UT6CC
UT WOS:000698202100001
DA 2024-07-18
ER

PT J
AU Bogner, J
   Fritzsch, J
   Wagner, S
   Zimmermann, A
AF Bogner, Justus
   Fritzsch, Jonas
   Wagner, Stefan
   Zimmermann, Alfred
TI Industry practices and challenges for the evolvability assurance of
   microservices An interview study and systematic grey literature review
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Microservices; Evolvability; Assurance; Industry; Interviews; Grey
   literature review
ID SOFTWARE; AGREEMENT
AB Context Microservices as a lightweight and decentralized architectural style with fine-grained services promise several beneficial characteristics for sustainable long-term software evolution. Success stories from early adopters like Netflix, Amazon, or Spotify have demonstrated that it is possible to achieve a high degree of flexibility and evolvability with these systems. However, the described advantageous characteristics offer no concrete guidance and little is known about evolvability assurance processes for microservices in industry as well as challenges in this area. Insights into the current state of practice are a very important prerequisite for relevant research in this field. Objective We therefore wanted to explore how practitioners structure the evolvability assurance processes for microservices, what tools, metrics, and patterns they use, and what challenges they perceive for the evolvability of their systems. Method We first conducted 17 semi-structured interviews and discussed 14 different microservice-based systems and their assurance processes with software professionals from 10 companies. Afterwards, we performed a systematic grey literature review (GLR) and used the created interview coding system to analyze 295 practitioner online resources. Results The combined analysis revealed the importance of finding a sensible balance between decentralization and standardization. Guidelines like architectural principles were seen as valuable to ensure a base consistency for evolvability and specialized test automation was a prevalent theme. Source code quality was the primary target for the usage of tools and metrics for our interview participants, while testing tools and productivity metrics were the focus of our GLR resources. In both studies, practitioners did not mention architectural or service-oriented tools and metrics, even though the most crucial challenges like Service Cutting or Microservices Integration were of an architectural nature. Conclusions Practitioners relied on guidelines, standardization, or patterns like Event-Driven Messaging to partially address some reported evolvability challenges. However, specialized techniques, tools, and metrics are needed to support industry with the continuous evaluation of service granularity and dependencies. Future microservices research in the areas of maintenance, evolution, and technical debt should take our findings and the reported industry sentiments into account.
C1 [Bogner, Justus; Fritzsch, Jonas; Wagner, Stefan] Univ Stuttgart, Inst Software Engn, Stuttgart, Germany.
   [Zimmermann, Alfred] Univ Appl Sci Reutlingen, Herman Hollerith Ctr, Reutlingen, Germany.
C3 University of Stuttgart
RP Bogner, J (corresponding author), Univ Stuttgart, Inst Software Engn, Stuttgart, Germany.
EM justus.bogner@iste.uni-stuttgart.de;
   jonas.fritzsch@iste.uni-stuttgart.de;
   stefan.wagner@iste.uni-stuttgart.de;
   alfred.zimmermann@reutlingen-university.de
RI Bogner, Justus/AAC-9594-2019; Wagner, Stefan/A-5200-2018
OI Bogner, Justus/0000-0001-5788-0991; Wagner, Stefan/0000-0002-5256-8429;
   Zimmermann, Alfred/0000-0003-3352-7207
FU Ministry of Science of Baden-Wurttemberg, Germany
FX Open Access funding enabled and organized by Projekt DEAL. This research
   was partially funded by the Ministry of Science of Baden-Wurttemberg,
   Germany, for the doctoral program Services Computing
   (https://www.services-computing.de/?lang=en).
CR April A, 2005, J SOFTW MAINT EVOL-R, V17, P197, DOI 10.1002/smr.3
   Avgeriou P., 2016, DAGSTUHL REP, DOI 10.4230/DagRep.6.4.110
   Bandeira Alan, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P255, DOI 10.1109/MSR.2019.00051
   Baskarada S, 2020, J COMPUT INFORM SYST, V60, P428, DOI 10.1080/08874417.2018.1520056
   Bogner J., 2017, PROC 27 INT WORKSHOP, P107, DOI [10.1145/3143434.3143443, DOI 10.1145/3143434.3143443]
   Bogner J, 2019, PROC IEEE INT CONF S, P546, DOI 10.1109/ICSME.2019.00089
   Bogner J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P187, DOI 10.1109/ICSA-C.2019.00041
   Bogner J, 2018, 2018 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT), P125, DOI 10.1145/3194164.3194166
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Esparrachiari S., 2018, Queue, V16, P44, DOI DOI 10.1145/3277539.3277541
   Fowler M., 2019, MICROSERVICES RESOUR
   Fritzsch J, 2019, PROC IEEE INT CONF S, P481, DOI 10.1109/ICSME.2019.00081
   Fritzsch J, 2019, LECT NOTES COMPUT SC, V11350, P128, DOI 10.1007/978-3-030-06019-0_10
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916008
   Ghofrani J., 2018, ZEUS, P1
   Haselbock S., 2018, EXPERT INTERVIEW STU
   Hove S. E., 2005, Experiences from conducting semi-structured interviews in empirical software engineering research. Paper presented at: IEEE International Software Metrics Symposium (METRICS), P10, DOI DOI 10.1109/METRICS.2005.24
   Karfakis P, 2018, Institutions, economic freedom and structural transformation in 11 sub-Saharan African countries, P1, DOI DOI 10.1145/3242163.3242164
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Lenarduzzi V., 2018, EUROMICRO SEAA PRAGU
   Neri D, 2019, SICS SOFTWARE, DOI [10.1007/s00450-019-00407-8,1906.01553, DOI 10.1007/S00450-019-00407-8,1906.01553]
   Neto GTG, 2019, INT SYMP EMP SOFTWAR, P1
   Newman S., 2015, BUILDING MICROSERVIC
   Rajlich V, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1949
   Rowe D., 1998, INT C ENG COMP BAS S, P45, DOI [10.1109/ECBS.1998.10027, DOI 10.1109/ECBS.1998.10027]
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schermann G, 2016, LECT NOTES COMPUT SC, V9586, P36, DOI 10.1007/978-3-662-50539-7_4
   Seaman C.B., 2008, Guide to Advanced Empirical Software Engineering, P35, DOI [10.1007/978-1-84800-044-52, DOI 10.1007/978-1-84800-044-52]
   Software Engineering Institute, 2010, CMMI DEV VERS 1 3 CM
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Taibi D., 2020, MICROSERVICES ANTIPA, DOI [10.1007/978-3-030-31646-4_5,1908.04101, DOI 10.1007/978-3-030-31646-4_5,1908.04101]
   Wagner S., 2013, SOFTWARE PRODUCT QUA, DOI DOI 10.1007/978-3-642-38571-1
   Wohlin C, 2003, LECT NOTES COMPUT SC, V2765, P7
NR 36
TC 21
Z9 22
U1 1
U2 20
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 104
DI 10.1007/s10664-021-09999-9
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UJ9JA
UT WOS:000691592800001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Tang, H
   Nadi, S
AF Tang, Henry
   Nadi, Sarah
TI On using Stack Overflow comment-edit pairs to recommend code maintenance
   changes
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Stack Overflow; Comment-edit pairs; Bug-fix data sets
AB Code maintenance data sets typically consist of a before version of the code and an after version that contains the improvement or fix. Such data sets are important for various software engineering support tools related to code maintenance, such as program repair, code recommender systems, or Application Programming Interface (API) misuse detection. Most of the current data sets are typically constructed from mining commit history in version-control systems or issues in issue-tracking systems. In this paper, we investigate whether Stack Overflow can be used as an additional source for building code maintenance data sets. Comments on Stack Overflow provide an effective way for developers to point out problems with existing answers, alternative solutions, or pitfalls. Given its crowd-sourced nature, answers are then updated to incorporate these suggestions. In this paper, we mine comment-edit pairs from Stack Overflow and investigate their potential usefulness for constructing the above data sets. These comment-edit pairs have the added benefit of having concrete descriptions/explanations of why the change is needed as well as potentially having less tangled changes to deal with. We first design a technique to extract related comment-edit pairs and then qualitatively and quantitatively investigate the nature of these pairs. We find that the majority of comment-edit pairs are not tangled, but find that only 27% of the studied pairs are potentially useful for the above applications. We categorize the types of mined pairs and find that the highest ratio of useful pairs come from those categorized as Correction, Obsolete, Flaw, and Extension. These categories can provide data for both corrective and preventative maintenance activities. To demonstrate the effectiveness of our extracted pairs, we submitted 15 pull requests to popular GitHub repositories, 10 of which have been accepted to widely used repositories such as Apache Beam (https://beam.apache.org/) and NLTK (https://www.nltk.org/). Our work is the first to investigate Stack Overflow comment-edit pairs and opens the door for future work in this direction. Based on our findings and observations, we provide concrete suggestions on how to potentially identify a larger set of useful comment-edit pairs, which can also be facilitated by our shared data.
C1 [Tang, Henry; Nadi, Sarah] Univ Alberta, Edmonton, AB, Canada.
C3 University of Alberta
RP Tang, H (corresponding author), Univ Alberta, Edmonton, AB, Canada.
EM hktang@ualberta.ca; nadi@ualberta.ca
OI Tang, Henry/0000-0001-6771-4559
FU Canada Research Chair program; Natural Sciences and Engineering Research
   Council
FX This research was undertaken thanks to funding from the Canada Research
   Chair program and from the Natural Sciences and Engineering Research
   Council. We would also like to thank Sebastian Baltes and Christoph
   Treude for their feedback regarding the ideas in this work.
CR Adaji I, 2016, P 2016 C USER MODELI, P111, DOI [10.1145/2930238.2930289, DOI 10.1145/2930238.2930289]
   Amann S, 2018, IEEE T SOFTW ENG
   Amann S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P464, DOI [10.1145/2901739.2903506, 10.1109/MSR.2016.055]
   Baltes S, 2018, EDIT COMMENT HIST ST
   Baltes S, 2019, Arxiv, DOI arXiv:1809.02814
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bissyandé TF, 2013, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2013.19
   ChairNerd, 2011, FUZZYWUZZY FUZZY STR
   Chan SWK, 2003, IEEE T SYST MAN CY A, V33, P23, DOI 10.1109/TSMCA.2003.811129
   Cifuentes Cristina, 2009, P 2 INT WORKSHOP DEF, P16, DOI DOI 10.1145/1555860.1555866
   Dalip DH, 2013, SIGIR'13: THE PROCEEDINGS OF THE 36TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH & DEVELOPMENT IN INFORMATION RETRIEVAL, P543
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   Diamantopoulos Themistoklis, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P215, DOI 10.1109/MSR.2019.00043
   Dit B, 2013, IEEE WORK CONF MIN S, P131, DOI 10.1109/MSR.2013.6624019
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Ferenc R, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110691
   Cortés-Coy LF, 2014, IEEE INT WORK C SO, P275, DOI 10.1109/SCAM.2014.14
   Ganguly D, 2015, SIGIR 2015: PROCEEDINGS OF THE 38TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P795, DOI 10.1145/2766462.2767780
   Gao Q, 2015, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2015.81
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Herzig K, 2016, EMPIR SOFTW ENG, V21, P303, DOI 10.1007/s10664-015-9376-6
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Horton E, 2019, PROC INT CONF SOFTW, P328, DOI 10.1109/ICSE.2019.00047
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   LEVENSHT.VI, 1965, DOKL AKAD NAUK SSSR+, V163, P845
   Lin B, 2019, PROC INT CONF SOFTW, P548, DOI 10.1109/ICSE.2019.00066
   Liu C, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P282, DOI 10.1109/ICST.2013.24
   Liu XL, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P118, DOI 10.1109/SANER.2018.8330202
   Maalej Walid, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P191, DOI 10.1109/MSR.2010.5463344
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Nguyen Anh Tuan, 2012, SER FSE 12, P1, DOI DOI 10.1145/2393596.2393671
   Ohira M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P518, DOI 10.1109/MSR.2015.78
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Radu Aida, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P399, DOI 10.1109/MSR.2019.00066
   Ragkhitwetsagul C, 2021, IEEE T SOFTWARE ENG, V47, P560, DOI 10.1109/TSE.2019.2900307
   Rahman MM, 2019, EMPIR SOFTW ENG, V24, P1869, DOI 10.1007/s10664-018-9671-0
   Rao SD, 2018, Arxiv, DOI arXiv:1805.04655
   Rastkar Sarah, 2010, P 32 ACM IEEE INT C, V1, P505, DOI DOI 10.1145/1806799.1806872
   Saifullah CMK, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P243, DOI 10.1109/ASE.2019.00032
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Soni Abhishek, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P220, DOI 10.1109/MSR.2019.00044
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Tang Henry, 2021, Zenodo, DOI 10.5281/ZENODO.4458586
   Thiselton E, 2019, Arxiv, DOI arXiv:1906.11456
   Tomassi DA, 2019, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2019.00048
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Viera AJ, 2005, FAM MED, V37, P360
   Wang SY, 2019, IEEE T PATTERN ANAL, V41, P2783, DOI [10.1109/INTMAG.2018.8508542, 10.1109/TNNLS.2017.2771290, 10.1109/TPAMI.2018.2861871]
   Wong AW, 2019, PROC IEEE INT CONF S, P318, DOI 10.1109/ICSME.2019.00048
   Xianhao Jin, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P225, DOI 10.1109/MSR.2019.00045
   Zhang H, 2019, IEEE T SOFTWARE ENG, V47, P1
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V47, P850, DOI 10.1109/TSE.2019.2906315
   Zhang TY, 2019, PROC INT CONF SOFTW, P316, DOI 10.1109/ICSE.2019.00046
NR 61
TC 3
Z9 3
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 68
DI 10.1007/s10664-021-09954-8
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA VM7GC
UT WOS:001030281800002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Tuarob, S
   Assavakamhaenghan, N
   Tanaphantaruk, W
   Suwanworaboon, P
   Hassan, SU
   Choetkiertikul, M
AF Tuarob, Suppawong
   Assavakamhaenghan, Noppadol
   Tanaphantaruk, Waralee
   Suwanworaboon, Ponlakit
   Hassan, Saeed-Ul
   Choetkiertikul, Morakot
TI Automatic team recommendation for collaborative software development
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Team recommendation; Collaborative software development; Machine
   learning
ID PULL-REQUESTS; SUCCESS; MODEL
AB In large-scale collaborative software development, building a team of software practitioners can be challenging, mainly due to overloading choices of candidate members to fill in each role. Furthermore, having to understand all members' diverse backgrounds, and anticipate team compatibility could significantly complicate and attenuate such a team formation process. Current solutions that aim to automatically suggest software practitioners for a task merely target particular roles, such as developers, reviewers, and integrators. While these existing approaches could alleviate issues presented by choice overloading, they fail to address team compatibility while members collaborate. In this paper, we propose RECAST, an intelligent recommendation system that suggests team configurations that satisfy not only the role requirements, but also the necessary technical skills and teamwork compatibility, given task description and a task assignee. Specifically, RECAST uses Max-Logit to intelligently enumerate and rank teams based on the team-fitness scores. Machine learning algorithms are adapted to generate a scoring function that learns from heterogenous features characterizing effective software teams in large-scale collaborative software development. RECAST is evaluated against a state-of-the-art team recommendation algorithm using three well-known open-source software project datasets. The evaluation results are promising, illustrating that our proposed method outperforms the baselines in terms of team recommendation with 646% improvement (MRR) using the exact-match evaluation protocol.
C1 [Tuarob, Suppawong; Assavakamhaenghan, Noppadol; Tanaphantaruk, Waralee; Suwanworaboon, Ponlakit; Choetkiertikul, Morakot] Mahidol Univ, Fac Informat & Commun Technol, Salaya, Nakhon Pathom, Thailand.
   [Hassan, Saeed-Ul] Informat Technol Univ, Lahore, Pakistan.
C3 Mahidol University
RP Choetkiertikul, M (corresponding author), Mahidol Univ, Fac Informat & Commun Technol, Salaya, Nakhon Pathom, Thailand.
EM suppawong.tua@mahidol.edu; noppadol.ass@student.mahidol.edu;
   waralee.tan@student.mahidol.edu; ponlakit.suw@student.mahidol.edu;
   saeed-ul-hassan@itu.edu.pk; morakot.cho@mahidol.edu
RI ; Hassan, Saeed-Ul/G-1889-2016
OI Choetkiertikul, Morakot/0000-0001-8188-4749; Hassan,
   Saeed-Ul/0000-0002-6509-9190
FU Thailand Science Research and Innovation (TSRI) [RSA6280105]
FX This research is supported by the Thailand Science Research and
   Innovation (TSRI), formerly known as Thailand Research Fund (TRF),
   through grant RSA6280105.
CR Al-Subaihin A, 2019, EMPIR SOFTW ENG, V24, P3290, DOI 10.1007/s10664-019-09726-5
   Alberola JM, 2016, KNOWL-BASED SYST, V101, P1, DOI 10.1016/j.knosys.2016.02.010
   Alharbi Abdullah Semran, 2017, AI 2017: Advances in Artificial Intelligence. 30th Australasian Joint Conference. Proceedings: LNAI 10400, P274, DOI 10.1007/978-3-319-63004-5_22
   [Anonymous], 2007, THESIS
   [Anonymous], 2007, Latent Semantic Analysis: A Road to Meaning. Ed. by
   Baj-Rogowska Anna, 2017, 2017 Eighth International Conference on Intelligent Computing and Information Systems (ICICIS). Proceedings, P391, DOI 10.1109/INTELCIS.2017.8260068
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Breiman L., 2001, Mach. Learn., V45, P5
   Cabanillas C., 2015, Proceedings of the 2015 international conference on software and system process, P42, DOI DOI 10.1145/2785592.2785613
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Choetkiertikul M, 2017, EMPIR SOFTW ENG, V22, P1223, DOI 10.1007/s10664-016-9496-7
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   Dai HB, 2015, IEEE J SEL AREA COMM, V33, P1068, DOI 10.1109/JSAC.2015.2416988
   Datta A., 2011, Proceedings of the 20th international conference companion on World wide web, WWW '11, P201
   de Lima ML, 2018, J SYST SOFTWARE, V144, P181, DOI 10.1016/j.jss.2018.05.065
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Ferreira D.J., 2017, Int. J. Innov. Educ. Res., V5, P28
   Fox Elaine., 2008, EMOTION SCI COGNITIV
   Gao DW, 2017, DATA SCI ENG, V2, P136, DOI 10.1007/s41019-017-0037-1
   Gharehyazie M, 2017, EMPIR SOFTW ENG, V22, P1795, DOI 10.1007/s10664-016-9463-3
   Gharehyazie M, 2015, EMPIR SOFTW ENG, V20, P1318, DOI 10.1007/s10664-014-9332-x
   Hassan Sibtain ul, 2017, Annual Research & Review in Biology, P1, DOI [10.9734/ARRB/2017/27339, DOI 10.1109/JCDL.2017.7991558, 10.1109/ACEPT.2017.8168564, DOI 10.9734/ARRB/2017/27339]
   Hofmann T, 2001, MACH LEARN, V42, P177, DOI 10.1023/A:1007617005950
   Hualing Yi, 2019, 2019 8th International Congress on Advanced Applied Informatics (IIAI-AAI), P35, DOI 10.1109/IIAI-AAI.2019.00018
   Hupa A, 2010, COMPUT COMMUN NETW S, P319, DOI 10.1007/978-1-84882-229-0_12
   Iaffaldano G, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE HEALTH (SOHEAL 2019), P9, DOI 10.1109/SoHeal.2019.00009
   Jeni LA, 2013, INT CONF AFFECT, P245, DOI 10.1109/ACII.2013.47
   Jiarpakdee J, 2020, EMPIR SOFTW ENG, V25, P3590, DOI 10.1007/s10664-020-09848-1
   Jiarpakdee Jirayus, 2019, IEEE T SOFTW ENG
   Khoshgoftaar TM, 2007, PROC INT C TOOLS ART, P310, DOI 10.1109/ICTAI.2007.46
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Liao Zhifang., 2017, GLOBECOM 2017-2017 IEEE Global Communications Conference, P1, DOI [10.1109/GLOCOM.2017.8254426, DOI 10.1109/GLOCOM.2017.8254426]
   Lindsjorn Y, 2016, J SYST SOFTWARE, V122, P274, DOI 10.1016/j.jss.2016.09.028
   Liu HB, 2014, 2014 13TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P213, DOI 10.1109/ICMLA.2014.39
   Malinowski J, 2008, DECIS SUPPORT SYST, V45, P429, DOI 10.1016/j.dss.2007.05.005
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   Matsumoto K, 2019 10 INT WORKSH E, P19
   McIntosh A, 2019, EMPIR SOFTW ENG, V24, P562, DOI 10.1007/s10664-018-9629-2
   Misra H., 2008, P 12 C COMPUTATIONAL, P41, DOI 10.3115/1596324.1596332
   Mistrík I, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P389, DOI 10.1007/978-3-642-10294-3_19
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Monderer D, 1996, GAME ECON BEHAV, V14, P124, DOI 10.1006/game.1996.0044
   Naguib H, 2013, IEEE WORK CONF MIN S, P22, DOI 10.1109/MSR.2013.6623999
   Newman D., 2010, 2010 ANN C N AM CHAP
   Osborne Martin J, 1994, COURSE GAME THEORY
   Ouni A, 2016, PROC IEEE INT CONF S, P367, DOI 10.1109/ICSME.2016.65
   Petkovic D., 2014, 2014 IEEE Frontiers in Education Conference (FIE) Proceedings, Madrid, P1, DOI [DOI 10.1109/FIE.2014.7044199, 10.1109/FIE.2014.7044199.]
   Ragkhitwetsagul C, 2019, EMPIR SOFTW ENG, V24, P2236, DOI 10.1007/s10664-019-09697-7
   Rahman MM, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P222, DOI 10.1145/2889160.2889244
   Ramage Daniel., 2009, EMNLP, DOI DOI 10.3115/1699510.1699543
   Ramirez R, 2014, US Patent App, Patent No. [13/907,577, 13907577]
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Song Yang., 2011, P 17 ANN INT C MOBIL, P325
   Sudhakar GP, 2012, J ENTERP INF MANAG, V25, P537, DOI 10.1108/17410391211272829
   Surian D., 2011, P 2011 18 WORKING C, P379
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P2544, DOI 10.1002/asi.21416
   Thomas R, 2005, DEV SOFTWARE ENG TEA, P203
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Tuarob S, 2020, IEEE T KNOWL DATA EN, V32, P1881, DOI 10.1109/TKDE.2019.2913376
   Tuarob S, 2018, ACM TRANS MANAG INF, V9, DOI 10.1145/3159445
   Tuarob S, 2015, INT J DIGIT LIBRARIE, V16, P111, DOI 10.1007/s00799-015-0146-2
   Xia X, 2015, J SOFTW-EVOL PROC, V27, P195, DOI 10.1002/smr.1706
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Yang H, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P707, DOI [10.1145/2889160.2892644, 10.1145/2889160/2892644]
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
   Zhang ZY, 2020, EMPIR SOFTW ENG, V25, P859, DOI 10.1007/s10664-019-09755-0
   Zhang ZW, 2017, AUTOMAT SOFTW ENG, V24, P47, DOI 10.1007/s10515-016-0194-x
   Zhang ZF, 2020, MEASUREMENT, V156, DOI 10.1016/j.measurement.2020.107546
NR 70
TC 11
Z9 12
U1 1
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 64
DI 10.1007/s10664-021-09966-4
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RZ0CQ
UT WOS:000648269000001
DA 2024-07-18
ER

PT J
AU Shu, R
   Xia, TP
   Chen, JF
   Williams, L
   Menzies, T
AF Shu, Rui
   Xia, Tianpei
   Chen, Jianfeng
   Williams, Laurie
   Menzies, Tim
TI How to Better Distinguish Security Bug Reports (Using Dual
   Hyperparameter Optimization)
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Hyperparameter Optimization; Data pre-processing; Security bug report
ID DIFFERENTIAL EVOLUTION; SOFTWARE; IDENTIFICATION; CLASSIFICATION;
   ANALYTICS; ALGORITHM; MODELS
AB Background In order that the general public is not vulnerable to hackers, security bug reports need to be handled by small groups of engineers before being widely discussed. But learning how to distinguish the security bug reports from other bug reports is challenging since they may occur rarely. Data mining methods that can find such scarce targets require extensive optimization effort. Goal The goal of this research is to aid practitioners as they struggle to optimize methods that try to distinguish between rare security bug reports and other bug reports. Method Our proposed method, called SWIFT, is a dual optimizer that optimizes both learner and pre-processor options. Since this is a large space of options, SWIFT uses a technique called 𝜖�-dominance that learns how to avoid operations that do not significantly improve performance. Result When compared to recent state-of-the-art results (from FARSEC which is published in TSE'18), we find that the SWIFT's dual optimization of both pre-processor and learner is more useful than optimizing each of them individually. For example, in a study of security bug reports from the Chromium dataset, the median recalls of FARSEC and SWIFT were 15.7% and 77.4%, respectively. For another example, in experiments with data from the Ambari project, the median recalls improved from 21.5% to 85.7% (FARSEC to SWIFT). Conclusion Overall, our approach can quickly optimize models that achieve better recalls than the prior state-of-the-art. These increases in recall are associated with moderate increases in false positive rates (from 8% to 24%, median). For future work, these results suggest that dual optimization is both practical and useful.
C1 [Shu, Rui; Xia, Tianpei; Chen, Jianfeng; Williams, Laurie; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Menzies, T (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM rshu@ncsu.edu; txia4@ncsu.edu; jchen37@ncsu.edu; lawilli3@ncsu.edu;
   timm@ieee.org
RI Menzies, Tim/X-7680-2019; Xia, Tianpei/HGC-8847-2022
OI Menzies, Tim/0000-0002-5040-3196; 
FU NSF-CISE [1909516]
FX This work was partially funded via an NSF-CISE grant #1909516.
CR Agrawal Amritanshu, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE). Proceedings, P1050, DOI 10.1145/3180155.3180197
   Agrawal A, 2019, IEEE T SOFTW ENG
   Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   [Anonymous], 2019, The Equifax Data Breach
   [Anonymous], 2017, WANNACRY RANSOMWARE
   [Anonymous], 2011, CIDR
   [Anonymous], 2006, GENETIC ALGORITHMS
   [Anonymous], 2004, Hackers and Painters, Big Ideas from the Computer Age
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bennin KE, 2019, EMPIR SOFTW ENG, V24, P602, DOI 10.1007/s10664-018-9633-6
   Bergstra J., 2011, Adv. Neural Inf. Process. Syst., V24
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Biedenkapp A., 2018, ARTIF INTELL, V1, P35
   Binkley D, 2018, EMPIR SOFTW ENG, V23, P2398, DOI 10.1007/s10664-017-9566-5
   Black P., 2016, Dramatically reducing software vulnerabilities: Report to the white house office of science and technology policy (No. NIST Internal or Interagency Report (NISTIR) 8151 (Draft))
   Chan SO, 2013, ANN IEEE SYMP FOUND, P350, DOI [10.1109/BigData.2013.6691595, 10.1109/FOCS.2013.45]
   Deb K, 2005, EVOL COMPUT, V13, P501, DOI 10.1162/106365605774666895
   Deshmukh J, 2017, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME.2017.69
   Di Francescomarino C, 2018, INFORM SYST, V74, P67, DOI 10.1016/j.is.2018.01.003
   Efron B., 1993, INTRO BOOTSTRAP, VVolume 914, DOI DOI 10.1007/978-1-4899-4541-9
   Feather Martin, 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, P79
   Feurer M, 2015, AAAI CONF ARTIF INTE, P1128
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Gegick Michael, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P11, DOI 10.1109/MSR.2010.5463340
   Goseva-Popstojanova K, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P344, DOI 10.1109/QRS.2018.00047
   Han X, 2018, IEEE INT CONF AUTOM, P17, DOI 10.1145/3238147.3238204
   Hindle A, 2016, EMPIR SOFTW ENG, V21, P368, DOI 10.1007/s10664-015-9387-3
   HOLLAND JH, 1992, SCI AM, V267, P66, DOI 10.1038/scientificamerican0792-66
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   KELLER JM, 1985, IEEE T SYST MAN CYB, V15, P580, DOI 10.1109/TSMC.1985.6313426
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   KOCHHAR PS, 2016, P 25 INT S SOFTW TES, P165, DOI DOI 10.1145/2931037.2931051
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lazar A., 2014, P 11 WORKING C MININ, P308
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li LS, 2018, J MACH LEARN RES, V18
   Liu C, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P282, DOI 10.1109/ICST.2013.24
   Majumder S, 2018, IEEE WORK CONF MIN S, P554, DOI 10.1145/3196398.3196424
   Menzies T., 2007, P 22 IEEE ACM INT C, P303, DOI [10.1145/1321631.1321676, DOI 10.1145/1321631.1321676]
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2019, INFORM SOFTWARE TECH, V112, P35, DOI 10.1016/j.infsof.2019.04.005
   MITRE, 2017, COMM VULN EXP CVE
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Nair V, 2018, IEEE T SOFTW ENG
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Neuhaus Stephan, 2009, USENIX ANN TECHN C
   Nguyen V. H., 2010, COMP COMM TECHN RES, P1
   Novielli N, 2018, IEEE WORK CONF MIN S, P364, DOI 10.1145/3196398.3196403
   Ohira M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P518, DOI 10.1109/MSR.2015.78
   Onan A, 2016, EXPERT SYST APPL, V62, P1, DOI 10.1016/j.eswa.2016.06.005
   Osman H, 2017, 2017 IEEE INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE), P33, DOI 10.1109/MALTESQUE.2017.7882014
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Peters F, 2018, IEEE T SOFTW ENG EAR
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Thornton C, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P847, DOI 10.1145/2487575.2487629
   Tian Y, 2015, EMPIR SOFTW ENG, V20, P1354, DOI 10.1007/s10664-014-9331-y
   Van Aken D, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1009, DOI 10.1145/3035918.3064029
   Vesterstrom J, 2004, IEEE C EVOL COMPUTAT, P1980
   Wang L, 2015, EXPERT SYST APPL, V42, P855, DOI 10.1016/j.eswa.2014.08.018
   Wang YB, 2018, DECIS SUPPORT SYST, V105, P87, DOI 10.1016/j.dss.2017.11.001
   Wijayasekara D, 2014, IEEE IND ELEC, P3612, DOI 10.1109/IECON.2014.7049035
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
   Xia X, 2016, IEEE T RELIAB, V65, P1094, DOI 10.1109/TR.2015.2484074
   Xia YF, 2017, EXPERT SYST APPL, V78, P225, DOI 10.1016/j.eswa.2017.02.017
   Xie X, 2014, P INT COMP SOFTW APP, P107, DOI 10.1109/COMPSAC.2014.17
   Yang XL, 2017, J COMPUT SCI TECH-CH, V32, P181, DOI 10.1007/s11390-017-1713-3
   Yang XL, 2016, P INT COMP SOFTW APP, P227, DOI 10.1109/COMPSAC.2016.67
   Ylidizdan G, 2020, EXPERT SYST APPL, V141, DOI 10.1016/j.eswa.2019.112949
   Yuan Tian, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P215, DOI 10.1109/WCRE.2012.31
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
   Zhang T, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1553, DOI 10.1145/2695664.2695872
   Zhou YQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P914, DOI 10.1145/3106237.3117771
   Zhou Y, 2016, J SOFTW-EVOL PROC, V28, P150, DOI 10.1002/smr.1770
NR 84
TC 11
Z9 13
U1 1
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2021
VL 26
IS 3
AR 53
DI 10.1007/s10664-020-09906-8
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RI5HP
UT WOS:000636938600001
DA 2024-07-18
ER

PT J
AU Jolak, R
   Savary-Leblanc, M
   Dalibor, M
   Wortmann, A
   Hebig, R
   Vincur, J
   Polasek, I
   Le Pallec, X
   Gérard, S
   Chaudron, MRV
AF Jolak, Rodi
   Savary-Leblanc, Maxime
   Dalibor, Manuela
   Wortmann, Andreas
   Hebig, Regina
   Vincur, Juraj
   Polasek, Ivan
   Le Pallec, Xavier
   Gerard, Sebastien
   Chaudron, Michel R. V.
TI Software engineering whispers: The effect of textual vs. graphical
   software design descriptions on software design communication
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Software design; Software modeling; UML;
   Communication; Knowledge sharing; Graphical representation; Textual
   representation; Family of experiments
ID KNOWLEDGE; TEAM
AB Context Software engineering is a social and collaborative activity. Communicating and sharing knowledge between software developers requires much effort. Hence, the quality of communication plays an important role in influencing project success. To better understand the effect of communication on project success, more in-depth empirical studies investigating this phenomenon are needed. Objective We investigate the effect of using a graphical versus textual design description on co-located software design communication. Method Therefore, we conducted a family of experiments involving a mix of 240 software engineering students from four universities. We examined how different design representations (i.e., graphical vs. textual) affect the ability toExplain,Understand,Recall, andActively Communicateknowledge. Results We found that the graphical design description is better than the textual in promotingActive Discussionbetween developers and improving theRecallof design details. Furthermore, compared to its unaltered version, a well-organized and motivated textual design description-that is used for the same amount of time-enhances the recall of design details and increases the amount of active discussions at the cost of reducing the perceived quality of explaining.
C1 [Jolak, Rodi; Hebig, Regina; Chaudron, Michel R. V.] Chalmers Univ Gothenburg, Gothenburg, Sweden.
   [Savary-Leblanc, Maxime; Le Pallec, Xavier] Lille Univ, Lille, France.
   [Dalibor, Manuela; Wortmann, Andreas] Rhein Westfal TH Aachen, Aachen, Germany.
   [Vincur, Juraj; Polasek, Ivan] Slovak Univ Technol Bratislava, Bratislava, Slovakia.
   [Gerard, Sebastien] CEA LIST, Palaiseau, France.
C3 Chalmers University of Technology; Universite de Lille; RWTH Aachen
   University; Slovak University of Technology Bratislava; CEA
RP Jolak, R (corresponding author), Chalmers Univ Gothenburg, Gothenburg, Sweden.
EM rodi.jolak@cse.gu.se; maxime.savary-leblanc@univ-lille.fr;
   dalibor@se-rwth.de; wortmann@se-rwth.de; regina.hebig@cse.gu.se;
   fjuraj.vincur@stuba.sk; ivan.polasekg@stuba.sk;
   xavier.le-pallec@univ-lille.fr; sebastien.gerard@cea.fr;
   michel.chaudron@cse.gu.se
RI Hebig, Regina/B-5284-2015; Rumpe, Bernhard/S-8216-2016
OI Hebig, Regina/0000-0002-1459-2081; Rumpe, Bernhard/0000-0002-2147-1966;
   Polasek, Ivan/0000-0001-6004-701X; Gerard,
   Sebastien/0000-0003-0295-0520; Jolak, Rodi/0000-0001-5656-9253
FU Projekt DEAL
FX Open Access funding provided by Projekt DEAL.
CR Anderson L. W., 2001, A Taxonomy for Learning, Teaching, and Assessing: A Revision of Bloom's Taxonomy of Educational Objectives
   [Anonymous], 2012, Synthesis Lectures on Software Engineering, DOI [DOI 10.2200/S00751ED2V01Y201701SWE004, DOI 10.2200/S00441ED1V01Y201208SWE001]
   [Anonymous], 2016, 2016 IEEE 24th International Conference on Program Comprehension (ICPC)
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bobek E, 2016, COGN RES, V1, DOI 10.1186/s41235-016-0031-6
   Borenstein M., 2009, INTRO METAANALYSIS
   Cant T, 2006, TECH REP
   Casamayor A, 2012, ARTIF INTELL REV, V38, P173, DOI 10.1007/s10462-011-9237-7
   Conversy Stephane, 2014, P 2014 ACM INT S NEW, P201, DOI [10.1145/2661136.2661138, DOI 10.1145/2661136.2661138]
   Craik FI, 2019, AGING MEMORY ATTENTI
   Cruz S, 2015, COMPUT HUM BEHAV, V46, P94, DOI 10.1016/j.chb.2014.12.008
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   de Vries RE, 2006, COMMUN RES, V33, P115, DOI 10.1177/0093650205285366
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   Donnellan MB, 2006, PSYCHOL ASSESSMENT, V18, P192, DOI 10.1037/1040-3590.18.2.192
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ellis PD, 2010, ESSENTIAL GUIDE TO EFFECT SIZES: STATISTICAL POWER, META-ANALYSIS AND THE INTERPRETATION OF RESEARCH RESULTS, P1
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Falessi D, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491515
   Gralha C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P823, DOI 10.1145/3180155.3180158
   Graziotin D, 2015, J SOFTW-EVOL PROC, V27, P467, DOI 10.1002/smr.1673
   Guastello SJ, 1998, J CREATIVE BEHAV, V32, P38, DOI 10.1002/j.2162-6057.1998.tb00805.x
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hedges L. V., 1981, J ED STAT, V6, P107, DOI DOI 10.3102/10769986006002107
   Heijstek W, 2011, INT SYMP EMP SOFTWAR, P167, DOI 10.1109/ESEM.2011.25
   Hölldobler K, 2018, COMPUT LANG SYST STR, V54, P386, DOI 10.1016/j.cl.2018.08.002
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Hutchinson J, 2014, SCI COMPUT PROGRAM, V89, P144, DOI 10.1016/j.scico.2013.03.017
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Jarboe S., 1996, Communication and group decision making, P345
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jolak R, 2018, IEEE SOFTWARE
   Jolak R, 2018, 21ST ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2018), P213, DOI 10.1145/3239372.3239404
   Karlström D, 2006, EMPIR SOFTW ENG, V11, P203, DOI 10.1007/s10664-006-6402-8
   Kauffeld S, 2012, SMALL GR RES, V43, P130, DOI 10.1177/1046496411429599
   Koo TK, 2016, J CHIROPR MED, V15, P155, DOI 10.1016/j.jcm.2016.02.012
   Kortum F, 2017, LECT NOTES COMPUT SC, V10611, P457, DOI 10.1007/978-3-319-69926-4_36
   Liebel G, 2014, LECT NOTES COMPUT SC, V8767, P166, DOI 10.1007/978-3-319-11653-2_11
   Liskin O, 2015, LECT NOTES COMPUT SC, V9013, P132, DOI 10.1007/978-3-319-16101-3_9
   McManis M. M., 1995, Journal of Artificial Intelligence in Education, V6, P307
   Meade ME, 2018, EXP AGING RES, V44, P369, DOI 10.1080/0361073X.2018.1521432
   Meliá S, 2016, SOFTWARE QUAL J, V24, P709, DOI 10.1007/s11219-015-9299-x
   Moody D. L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P485, DOI 10.1145/1810295.1810442
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Ramos AL, 2012, IEEE T SYST MAN CY C, V42, P101, DOI 10.1109/TSMCC.2011.2106495
   RAY JJ, 1982, J SOC PSYCHOL, V118, P141, DOI 10.1080/00224545.1982.9924431
   Robillard MP, 2017, PROC IEEE INT CONF S, P479, DOI 10.1109/ICSME.2017.17
   Rumpe B., 2017, Agile Modeling with UML: Code Generation, Testing, Refactoring
   Rus I, 2002, IEEE SOFTWARE, V19, P26, DOI 10.1109/MS.2002.1003450
   Santos A., 2018, IEEE T SOFTWARE ENG
   Sharafi Z, 2013, CONF PROC INT SYMP C, P33, DOI 10.1109/ICPC.2013.6613831
   Shatnawi A, 2015, INT C SOFTW REUS, P330, DOI DOI 10.1007/978-3-319-14130-5_23
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Soller A., 2001, International Journal of Artificial Intelligence in Education, V12, P40
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Tang A, 2006, J SYST SOFTWARE, V79, P1792, DOI 10.1016/j.jss.2006.04.029
   Tang A, 2018, J SYST SOFTWARE, V144, P22, DOI 10.1016/j.jss.2018.05.019
   Tang A, 2010, DESIGN STUD, V31, P614, DOI 10.1016/j.destud.2010.09.004
   Tang A, 2008, LECT NOTES COMPUT SC, V5281, P28, DOI 10.1007/978-3-540-87879-7_2
   Tversky B, 2018, HIST SOC RES, P59, DOI 10.12759/hsr.suppl.31.2018.59-65
   Volter Markus., 2011, MD*/DSL Best Practices
   Wagner S, 2015, The art and science of analyzing software data, P39, DOI [10.1016/B978-0-12-411519-4.00003-3, DOI 10.1016/B978-0-12-411519-4.00003-3]
   Wolf M, 2013, INT C INN TECH APPL, P185
   Wortmann A, 2019, MODELING LANGUAGES I
   Wu J, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P304, DOI 10.1109/ISESE.2003.1237991
NR 65
TC 24
Z9 24
U1 4
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 4427
EP 4471
DI 10.1007/s10664-020-09835-6
EA SEP 2020
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA OI4BB
UT WOS:000568211400001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU da Silva, RFG
   Roy, CK
   Rahman, MM
   Schneider, KA
   Paixao, K
   Dantas, CED
   Maia, MD
AF da Silva, Rodrigo Fernandes Gomes
   Roy, Chanchal K.
   Rahman, Mohammad Masudur
   Schneider, Kevin A.
   Paixao, Klerisson
   Dantas, Carlos Eduardo de Carvalho
   Maia, Marcelo de Almeida
TI CROKAGE: effective solution recommendation for programming tasks by
   leveraging crowd knowledge
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mining crowd knowledge; Stack overflow; Word embedding; Code search
AB Developers often search for relevant code examples on the web for their programming tasks. Unfortunately, they face three major problems. First, they frequently need to read and analyse multiple results from the search engines to obtain a satisfactory solution. Second, the search is impaired due to a lexical gap between the query (task description) and the information associated with the solution (e.g., code example). Third, the retrieved solution may not be comprehensible, i.e., the code segment might miss a succinct explanation. To address these three problems, we propose CROKAGE (CrowdKnowledge Answer Generator), a tool that takes the description of a programming task (the query) as input and delivers a comprehensible solution for the task. Our solutions contain not only relevant code examples but also their succinct explanations written by human developers. The search for code examples is modeled as an Information Retrieval (IR) problem. We first leverage the crowd knowledge stored in Stack Overflow to retrieve the candidate answers against a programming task. For this, we use a fine-tuned IR technique, chosen after comparing 11 IR techniques in terms of performance. Then we use a multi-factor relevance mechanism to mitigate the lexical gap problem, and select the top quality answers related to the task. Finally, we perform natural language processing on the top quality answers and deliver the comprehensible solutions containing both code examples and code explanations unlike earlier studies. We evaluate and compare our approach against ten baselines, including the state-of-art. We show that CROKAGE outperforms the ten baselines in suggesting relevant solutions for 902 programming tasks (i.e., queries) of three popular programming languages: Java, Python and PHP. Furthermore, we use 24 programming tasks (queries) to evaluate our solutions with 29 developers and confirm that CROKAGE outperforms the state-of-art tool in terms of relevance of the suggested code examples, benefit of the code explanations and the overall solution quality (code + explanation).
C1 [da Silva, Rodrigo Fernandes Gomes; Paixao, Klerisson; Dantas, Carlos Eduardo de Carvalho; Maia, Marcelo de Almeida] Univ Fed Uberlandia, Uberlandia, MG, Brazil.
   [Roy, Chanchal K.; Rahman, Mohammad Masudur; Schneider, Kevin A.] Univ Saskatchewan, Dept Comp Sci, 110 Sci Pl, Saskatoon, SK S7N 5C9, Canada.
C3 Universidade Federal de Uberlandia; University of Saskatchewan
RP Maia, MD (corresponding author), Univ Fed Uberlandia, Uberlandia, MG, Brazil.
EM rodrigofernandes@ufu.br; chanchal.roy@usask.ca; masud.rahman@usask.ca;
   kevin.schneider@usask.ca; klerisson@ufu.br; carlos.dantas@ufu.br;
   marcelo.maia@ufu.br
RI Schneider, Kevin/KQV-5113-2024; Rahman, Masud/N-7453-2019; Maia,
   Marcelo/F-3090-2017
OI Schneider, Kevin/0000-0003-1113-1754; Rahman, Masud/0000-0003-3821-5990;
   Maia, Marcelo/0000-0003-3578-1380
FU Canada First Research Excellence Fund (CFREF); Brazilian funding agency,
   CAPES; Brazilian funding agency, CNPq; Brazilian funding agency, FAPEMIG
FX We thank the authors of BIKER for sharing their tool. This research is
   supported in-part by a Canada First Research Excellence Fund (CFREF)
   grant coordinated by the Global Institute for Food Security (GIFS). We
   also thank the Brazilian funding agencies, CAPES, CNPq and FAPEMIG for
   supporting this research. At last, but not least, we thank the
   participants that worked in the qualitative evaluation of this work.
CR Ahasanuzzaman M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P402, DOI 10.1145/2901739.2901770
   An L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P283, DOI 10.1109/SANER.2017.7884629
   [Anonymous], 2018, ARXIV180202971
   Baeza-Yates R., 1999, Modern information retrieval
   Bajracharya Sushil, 2010, P 2010 ICSE WORKSH S, P5
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Campbell BA, 2017, PROC IEEE INT CONF S, P628, DOI 10.1109/ICSME.2017.56
   Campos E. C., 2014, P CBSOFT TOOL SESS
   Campos EC, 2016, J SOFTW-EVOL PROC, V28, P863, DOI 10.1002/smr.1800
   Chatterjee P, 2017, IEEE WORK CONF MIN S, P91, DOI 10.1109/MSR.2017.10
   Chen C, 2019, TSE
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Ciborowska A, 2018, IEEE WORK CONF MIN S, P94, DOI 10.1145/3196398.3196467
   De Souza L. B. L., 2014, P IEEE INT C PROG CO, P72, DOI DOI 10.1145/2597008.2597146
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Diamantopoulos T, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P454, DOI 10.1109/MSR.2015.62
   Facebook Inc, 2020, WORD REPRESENTATIONS
   Fielding R. T, 2002, ACM Transactions on Internet Technology (TOIT), V2, P115, DOI [DOI 10.1145/514183.514185, 10.1145/514183.514185]
   Fritz CO, 2012, J EXP PSYCHOL GEN, V141, P30, DOI 10.1037/a0026092
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P49, DOI 10.1145/3106237.3106256
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Gvero T, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P689, DOI 10.1109/ICSE.2015.224
   Hill E., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P184, DOI 10.1109/SCAM.2012.29
   Hoogeveen D, 2018, 12 INT AAAI C WEB SO, P112, DOI DOI 10.1609/ICWSM.V1251.15011
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Hui Fang, 2005, SIGIR 2005. Proceedings of the Twenty-Eighth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P480, DOI 10.1145/1076034.1076116
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Li ZX, 2016, 8TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2016), P36, DOI 10.1145/2993717.2993723
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   MIHALCEA R, 2006, P 21 NAT C ART INT A, P775
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Nie LM, 2016, IEEE T SERV COMPUT, V9, P771, DOI 10.1109/TSC.2016.2560165
   Pagliardini M., 2018, P C N AM CHAPT ASS C, P528, DOI [10.18653/v1/n18-1049, DOI 10.18653/V1/N18-1049]
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P577, DOI 10.1109/ICSME.2014.99
   Ponzanelli L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1295, DOI 10.1109/ICSE.2013.6606701
   Ponzanelli L, 2013, EUR CON SFTWR MTNCE, P57, DOI 10.1109/CSMR.2013.16
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Raghothaman M, 2016, PROC INT CONF SOFTW, P357, DOI 10.1145/2884781.2884808
   Ragkhitwetsagul C, 2018, ARXIV180607659
   Rahman MM, 2018, PROC IEEE INT CONF S, P473, DOI 10.1109/ICSME.2018.00057
   Rahman MM, 2017, PROC IEEE ACM INT C, P51, DOI 10.1109/ICSE-C.2017.11
   Rahman MM, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P79, DOI 10.1109/SANER.2017.7884611
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Rahman MM, 2015, IEEE INT WORK C SO, P81, DOI 10.1109/SCAM.2015.7335404
   Robertson S. E., 1994, SIGIR '94. Proceedings of the Seventeenth Annual International ACM-SIGIR Conference on Research and Development in Information Retrieval, P232
   Silva RFG, 2019, INT C PROGRAM COMPRE, P358, DOI 10.1109/ICPC.2019.00054
   Silva RFG, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P572, DOI 10.1109/SANER.2018.8330262
   Strauss A., 1990, BASICS QUALITATIVE R
   Nguyen T, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1013, DOI 10.1145/2950290.2983931
   Nguyen TV, 2017, PROC IEEE ACM INT C, P183, DOI 10.1109/ICSE-C.2017.90
   Wang S., 2014, ACM/IEEE International Conference on Automated Software Engineering, ASE '14, Vasteras, Sweden - September 15 - 19, 2014, P677
   Wang YP, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1028, DOI 10.1145/2950290.2983934
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wong E, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P380, DOI 10.1109/SANER.2015.7081848
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Xu BW, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI [10.1145/3239235.3240503, 10.1109/PESGM.2018.8586232]
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Yang D, 2017, IEEE WORK CONF MIN S, P280, DOI 10.1109/MSR.2017.13
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Yin PC, 2018, IEEE WORK CONF MIN S, P476, DOI 10.1145/3196398.3196408
   Zagalsky A., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P38, DOI 10.1109/RSSE.2012.6233407
   Zhai CX, 2004, ACM T INFORM SYST, V22, P179, DOI 10.1145/984321.984322
   Zhang WE, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P1221, DOI 10.1145/3038912.3052701
   Zhang WE, 2017, LECT NOTES ARTIF INT, V10604, P623, DOI 10.1007/978-3-319-69179-4_44
   Zhang Y, 2015, J COMPUT SCI TECH-CH, V30, P981, DOI 10.1007/s11390-015-1576-4
NR 70
TC 10
Z9 10
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 4707
EP 4758
DI 10.1007/s10664-020-09863-2
EA SEP 2020
PG 52
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4BB
UT WOS:000565462600001
DA 2024-07-18
ER

PT J
AU Ponta, SE
   Plate, H
   Sabetta, A
AF Ponta, Serena Elisa
   Plate, Henrik
   Sabetta, Antonino
TI Detection, assessment and mitigation of vulnerabilities in open source
   dependencies
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Open source software; Publicly known vulnerabilities; Code-centric
   vulnerability analysis; Combination of static and dynamic analysis;
   Usage-based update support
AB Open source software (OSS) libraries are widely used in the industry to speed up the development of software products. However, these libraries are subject to an ever-increasing number of vulnerabilities that are publicly disclosed. It is thus crucial for application developers to detect dependencies on vulnerable libraries in a timely manner, to precisely assess their impact, and to mitigate any potential risk. This paper presents a novel method to detect, assess and mitigate OSS vulnerabilities. Differently from state-of-the-art approaches that depend on metadata to identify vulnerable OSS dependencies, our solution is code-centric, and combines static and dynamic analyses to determine the reachability of the vulnerable portion of libraries, in the context of a given application. Our approach also supports developers in choosing among the existing non-vulnerable library versions, with the goal to determine and minimize incompatibilities. Eclipse Steady, the open source implementation of ourcode-centricandusage-basedapproach is the tool recommended to scan Java software products at SAP; it has been successfully used to perform more than one million scans of about 1500 applications. In this paper we report on the lessons learned when maturing the tool from a research prototype to an industrial-grade solution. To evaluate Eclipse Steady, we conducted an empirical study to compare its detection capabilities with those of OWASP Dependency Check (OWASP DC), scanning 300 large enterprise applications under development with a total of 78165 dependencies. Reviewing a sample of the findingsreported only by one of the two toolsrevealed that all Steady findings are true positives, while 88.8% of the findings of OWASP DC for vulnerabilities covered by our code-centric approach are false positives. For vulnerabilities not caused by code but due, e.g., to erroneous configuration, 63.3% of OWASP DC findings are true positives.
C1 [Ponta, Serena Elisa; Plate, Henrik; Sabetta, Antonino] SAP Secur Res, Mougins, France.
RP Ponta, SE (corresponding author), SAP Secur Res, Mougins, France.
EM serena.ponta@sap.com; henrik.plate@sap.com; antonino.sabetta@sap.com
CR Alqahtani SS, 2016, SCI COMPUT PROGRAM, V121, P153, DOI 10.1016/j.scico.2016.01.005
   [Anonymous], 2019, TECH REP
   [Anonymous], 2017, OWASP Top 10 - 2017
   [Anonymous], 2013, OWASP Top 10 2013
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1275, DOI 10.1007/s10664-014-9325-9
   Cabrera Lozoya R, 2019, ARXIV091107605
   Cadariu M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P516, DOI 10.1109/SANER.2015.7081868
   Dagenais B, 2009, PROC INT CONF SOFTW, P599, DOI 10.1109/ICSE.2009.5070565
   DASH S, 2018, IEEE 24 NAT C COMM N, P1, DOI DOI 10.1109/NCC.2018.8599940
   Decan A, 2019, IEEE T SOFTWARE ENG
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Hoan AN, 2010, ACM SIGPLAN NOTICES, V45, P302, DOI 10.1145/1932682.1869486
   Hora A, 2015, PROC IEEE INT CONF S, P321, DOI 10.1109/ICSM.2015.7332478
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Landman D, 2017, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2017.53
   Mileva YM, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P57
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   Mostafa S, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P215, DOI 10.1145/3092703.3092721
   Nguyen VH, 2016, EMPIR SOFTW ENG, V21, P2268, DOI 10.1007/s10664-015-9408-2
   Nguyen VietHung., 2013, P 8 ACM SIGSAC S INF, P493
   Plate H, 2015, PROC IEEE INT CONF S, P411, DOI 10.1109/ICSM.2015.7332492
   Ponta Serena Elisa, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P383, DOI 10.1109/MSR.2019.00064
   Ponta SE, 2018, PROC IEEE INT CONF S, P449, DOI 10.1109/ICSME.2018.00054
   Raemaekers S, 2014, IEEE INT WORK C SO, P215, DOI 10.1109/SCAM.2014.30
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Sabetta A, 2018, 34 IEEE INT C SOFTW
   Snyk, 2019, STAT OP SOURC SEC RE
   Snyk, 2017, WHICH OW 10 CAUS WOR
   Zapata RE, 2018, PROC IEEE INT CONF S, P559, DOI 10.1109/ICSME.2018.00067
NR 30
TC 42
Z9 46
U1 3
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3175
EP 3215
DI 10.1007/s10664-020-09830-x
EA JUN 2020
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000544612800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Dey, T
   Mockus, A
AF Dey, Tapajit
   Mockus, Audris
TI Deriving a usage-independent software quality metric
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software quality; Software usage; Software faults; Bayesian networks;
   NPM packages
ID EMPIRICAL-ANALYSIS; PREDICTION; NETWORKS; COMPLEXITY; DEFECTS; MODEL
AB Context The extent of post-release use of software affects the number of faults, thus biasing quality metrics and adversely affecting associated decisions. The proprietary nature of usage data limited deeper exploration of this subject in the past.
   Objective To determine how software faults and software use are related and how, based on that, an accurate quality measure can be designed.
   Method Via Google Analytics we measure new users, usage intensity, usage frequency, exceptions, and release date and duration for complex proprietary mobile applications for Android and iOS. We utilize Bayesian Network and Random Forest models to explain the interrelationships and to derive the usage independent release quality measure. To increase external validity, we also investigate the interrelationship among various code complexity measures, usage (downloads), and number of issues for 520 NPM packages. We derived a usage-independent quality measure from these analyses, and applied it on 4430 popular NPM packages to construct timelines for comparing the perceived quality (number of issues) and our derived measure of quality during the lifetime of these packages.
   Results We found the number of new users to be the primary factor determining the number of exceptions, and found no direct link between the intensity and frequency of software usage and software faults. Crashes increased with the power of 1.02-1.04 of new user for the Android app and power of 1.6 for the iOS app. Release quality expressed as crashes per user was independent of other usage-related predictors, thus serving as a usage independent measure of software quality. Usage also affected quality in NPM, where downloads were strongly associated with numbers of issues, even after taking the other code complexity measures into consideration. Unlike in mobile case where exceptions per user decrease over time, for 45.8% of the NPM packages the number of issues per download increase.
   Conclusions We expect our result and our proposed quality measure will help gauge release quality of a software more accurately and inspire further research in this area.
C1 [Dey, Tapajit] Univ Tennessee, Dept Elect Engn & Comp Sci, Knoxville, TN 37996 USA.
   [Mockus, Audris] Univ Tennessee, Dept Elect Engn & Comp Sci, Digital Archeol & Evidence Engn, Knoxville, TN USA.
C3 University of Tennessee System; University of Tennessee Knoxville;
   University of Tennessee System; University of Tennessee Knoxville
RP Dey, T (corresponding author), Univ Tennessee, Dept Elect Engn & Comp Sci, Knoxville, TN 37996 USA.
EM tdey2@vols.utk.edu; audris@utk.edu
RI Dey, Tapajit/AAY-9483-2020; Mockus, Audris/AEY-3361-2022
OI Dey, Tapajit/0000-0002-1379-8539; Mockus, Audris/0000-0002-7987-7598
FU National Science Foundation (U.S.) [1633437, 1901102]; Div Of
   Information & Intelligent Systems; Direct For Computer & Info Scie &
   Enginr [1901102] Funding Source: National Science Foundation; Div Of
   Information & Intelligent Systems; Direct For Computer & Info Scie &
   Enginr [1633437] Funding Source: National Science Foundation
FX This work was supported by the National Science Foundation (U.S.) under
   Grant No. 1633437 and Grant No. 1901102.
CR Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   Amreen S, 2019, METHODOLOGY MEASURIN
   [Anonymous], 2002, Metrics and Models in Software Quality Engineering
   [Anonymous], 2001, THESIS MIT CAMBRIDGE
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   Balov N, 2016, CATNET CATEGORICAL B
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Bottcher S. G, 2013, DEAL LEARNING BAYESI
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Chatzidimitriou KC, 2018, IEEE WORK CONF MIN S, P42, DOI 10.1145/3196398.3196465
   Chickering D.M., 1996, Learning from Data, P121, DOI DOI 10.1007/978-1-4612-2404-4_12
   Chlebus B. S., 1998, Rough Sets and Current Trends in Computing. First International Conference, RSCTC'98. Proceedings, P537, DOI 10.1007/3-540-69115-4_74
   DALAL SR, 1988, J AM STAT ASSOC, V83, P872, DOI 10.2307/2289319
   Dey T, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P36, DOI 10.1145/3345629.3345634
   Dey T, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P56, DOI 10.1145/3273934.3273941
   Dey T, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P66, DOI 10.1145/3273934.3273942
   Duc AN, 2014, FORKING COORDINATION
   Fenton N, 2002, IEEE SOFTWARE, V19, P116, DOI 10.1109/MS.2002.1020298
   Fenton N., 2008, Proceedings of the Institution of Mechanical Engineers, Part O (Journal of Risk and Reliability), V222, P701, DOI 10.1243/1748006XJRR161
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fenton N, 2007, INFORM SOFTWARE TECH, V49, P32, DOI 10.1016/j.infsof.2006.09.001
   Friedman N, 1999, UNCERTAINTY IN ARTIFICIAL INTELLIGENCE, PROCEEDINGS, P196
   Geron T, 2012, DO IOS APPS CRASH MO
   Hackbarth R, 2016, IEEE SOFTWARE, V33, P40, DOI 10.1109/MS.2015.76
   Hahsler M, 2011, J MACH LEARN RES, V12, P2021
   Hauser A, 2012, J MACH LEARN RES, V13, P2409
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Jones C., 2011, SOFTWARE QUALITY 201
   Kalisch M, 2012, J STAT SOFTW, V47, P1
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   KENNEY GQ, 1993, IEEE T RELIAB, V42, P107, DOI 10.1109/24.210280
   Khomh F., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P179, DOI 10.1109/MSR.2012.6224279
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Koller D., 2009, Probabilistic graphical models: principles and techniques
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Li PL, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P716, DOI 10.1145/1985793.1985894
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Mockus A, 2005, PROC INT CONF SOFTW, P225
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Mockus A, 2013, 9 JOINT M EUR SOFTW, P691
   Mockus A, 2013, INT WORKSH PRINC SOF
   Mockus A, 2008, 2008 INT C SOFTW ENG, P733
   Mockus A, 2007, LECT NOTES COMPUT SC, V4336, P91
   Mockus A, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P723, DOI 10.1145/1368088.1368190
   Mockus Audris., 2014, Proceedings of the on Future of Software Engineering, P85, DOI 10.1145/2593882.2593889
   Motulsky H, IS R SQUARED NEGATIV
   Nagarajan R., 2013, Bayesian Networks in R: With Applications in Systems Biology, DOI [10.1007/978-1-4614-6446-4, DOI 10.1007/978-1-4614-6446-4]
   Neil M, 1996, P 21 ANN SOFTW ENG W, P217
   Okutan A, 2014, EMPIR SOFTW ENG, V19, P154, DOI 10.1007/s10664-012-9218-8
   Pai GJ, 2007, IEEE T SOFTWARE ENG, V33, P675, DOI [10.1109/TSE.2007.70722, 10.1109/TSE.2007.70722.]
   Pearl J., 2011, BAYESIAN NETWORKS
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   Pérez A, 2006, INT J APPROX REASON, V43, P1, DOI 10.1016/j.ijar.2006.01.002
   Ping Yu, 2002, Proceedings of the Sixth European Conference on Software Maintenance and Reengineering, P99, DOI 10.1109/CSMR.2002.995794
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rotella P., 2011, Proceedings of the 8th Working Conference on Mining Software Repositories, MSR '11, P113
   Rubin J, 2016, PROC INT CONF SOFTW, P982, DOI 10.1145/2884781.2884871
   Schulmeyer GG., 1992, HDB SOFTWARE QUALITY
   Scutari M, 2010, ARXIV10051036
   Scutari M, 2013, LEARNING BAYESIAN NE
   Scutari M, 2010, J STAT SOFTW, V35, P1, DOI 10.18637/jss.v035.i03
   Shmueli G, 2010, STAT SCI, V25, P289, DOI 10.1214/10-STS330
   Sober E, 2002, PHILOS SCI, V69, pS112, DOI 10.1086/341839
   Stamelos I, 2003, INFORM SOFTWARE TECH, V45, P51, DOI 10.1016/S0950-5849(02)00163-5
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Team C, 2017, R LANG ENV STAT COMP
   Voss L., 2018, The State of JavaScript Frameworks
   Voss L, 2014, NUMERIC PRECISION MA
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
   Zerouali A, 2018, LECT NOTES COMPUT SC, V10826, P95, DOI 10.1007/978-3-319-90421-4_6
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   ZHENG QM, 2015, ESEC FSE 15, P637, DOI DOI 10.1145/2786805.2786866
NR 73
TC 14
Z9 14
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2020
VL 25
IS 2
SI SI
BP 1596
EP 1641
DI 10.1007/s10664-019-09791-w
EA FEB 2020
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT0VU
UT WOS:000516329100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Li, YG
   Jiang, ZM
AF Li, Yangguang
   Jiang, Zhen Ming (Jack)
TI Assessing and optimizing the performance impact of the just-in-time
   configuration parameters - a case study on PyPy
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Just-in-time compilation; Performance optimization; Software
   configuration; Performance testing; Performance analysis
AB Many modern programming languages (e.g., Python, Java, and JavaScript) support just-in-time (JIT) compilation to speed up the execution of a software system. During runtime, the JIT compiler translates the frequently executed part of the system into efficient machine code, which can be executed much faster compared to the default interpreted mode. There are many JIT configuration parameters, which vary based on the programming languages and types of the jitting strategies (method vs. tracing-based). Although there are many existing works trying to improve various aspects of the jitting process, there are very few works which study the performance impact of the JIT configuration settings. In this paper, we performed an empirical study on the performance impact of the JIT configuration settings of PyPy. PyPy is a popular implementation of the Python programming language. Due to PyPy's efficient JIT compiler, running Python programs under PyPy is usually much faster than other alternative implementations of Python (e.g., cPython, Jython, and IronPython). To motivate the need for tuning PyPy's JIT configuration settings, we first performed an exploratory study on two microbenchmark suites. Our findings show that systems executed under PyPy's default JIT configuration setting may not yield the best performance. Optimal JIT configuration settings vary from systems to systems. Larger portions of the code being jitted do not necessarily lead to better performance. To cope with these findings, we developed an automated approach, ESM-MOGA, to tuning the JIT configuration settings. ESM-MOGA, which stands for effect-size measure-based multi-objective genetic algorithm, automatically explores the PyPy's JIT configuration settings for optimal solutions. Case studies on three open source systems show that systems running under the resulting configuration settings significantly out-perform (5% - 60% improvement in average peak performance) the default configuration settings.
C1 [Li, Yangguang; Jiang, Zhen Ming (Jack)] York Univ, Software Construct AnaLyt & Evaluat SCALE Lab, Toronto, ON, Canada.
C3 York University - Canada
RP Li, YG (corresponding author), York Univ, Software Construct AnaLyt & Evaluat SCALE Lab, Toronto, ON, Canada.
EM yangguang@cse.yorku.ca; zmjiang@cse.yorku.ca
OI Li, Yangguang/0000-0002-2915-9360
CR Abdessalem R. B., 2018, P 33 ACM IEEE INT C
   AlGhmadi HM, 2016, PROC IEEE INT CONF S, P279, DOI 10.1109/ICSME.2016.46
   [Anonymous], P 37 INT C SOFTW ENG
   [Anonymous], 2017, JAV 8 ADV JIT COMP O
   [Anonymous], 2017, WHAT IS PYTHON USED
   [Anonymous], 2017, JAVA 8 JIT AOT COMM
   [Anonymous], 2009, P VLDB ENDOWMENT
   [Anonymous], P COMP MAN GROUP C
   [Anonymous], 2017, SALEOR AN E COMMERCE
   [Anonymous], 2017, CONTENT MANAGEMENT S
   [Anonymous], 2017, WHAT IS LOAD BALANCI
   [Anonymous], P 5 INT WORKSH SOFTW
   Barrett E, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133876
   Bolz Carl Friedrich, 2009, P 4 WORKSH IMPL COMP, P18, DOI [10.1145/1565824.1565827, DOI 10.1145/1565824.1565827]
   Brecht T, 2006, ACM T PROGR LANG SYS, V28, P908, DOI 10.1145/1152649.1152652
   Candan KS, 2001, SIGMOD RECORD, V30, P532, DOI 10.1145/376284.375736
   Canfora G, 2013, P 2013 IEEE 6 INT C
   Clark M., 2017, BBC BUILDS WEBSITES
   Cramer T, 1997, IEEE MICRO, V17, P36, DOI 10.1109/40.591653
   Deb K., 2000, Parallel Problem Solving from Nature PPSN VI. 6th International Conference. Proceedings (Lecture Notes in Computer Science Vol.1917), P849
   Eaton K, 2017, ONE 2 COULD COST AMA
   Fraser G., 2011, ESECFSE 2011, P416, DOI [10.1145/2025113.2025179, DOI 10.1145/2025113.2025179]
   Gal A, 2009, PLDI'09 PROCEEDINGS OF THE 2009 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P465, DOI 10.1145/1542476.1542528
   Gao R, 2017, P 14 INT C MIN SOFTW
   Gao R, 2016, 2016 IEEE INT C SOFT
   Georges A., 2007, P 22 INT C OBJ OR PR
   Gewirtz D, 2017, WHICH PROGRAMMING LA
   Golovin D, 2017, P 23 ACM SIGKDD INT
   Gong L, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P357, DOI 10.1145/2786805.2786831
   Grigorik I, 2017, OPTIMIZING ENCODING
   Hopkins WG, 2016, NEW VIEW STAT
   Hoste K, 2010, INT SYM CODE GENER, P62
   Insights GP, 2017, REM REND BLOCK JAVAS
   Jamshidi P, 2017, P INT C AUT SOFTW EN
   Jamshidi P., 2017, P 32 IEEE ACM INT C
   Jantz MR, 2013, ACM T ARCHIT CODE OP, V10, DOI 10.1145/2541228.2541229
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Komorn R., 2016, Python in production engineering
   Lengauer P., 2014, INT C PERFORMANCE EN, P111
   Libi P, 2014, P 5 ACM SPEC INT C P
   Lion D, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P383
   Martí L, 2009, IEEE C EVOL COMPUTAT, P1263, DOI 10.1109/CEC.2009.4983090
   Oaks S., 2014, JAVA PERFORMANCE DEF
   Osogami T, 2007, P 2007 ACM SIGMETRIC
   Romano J., 2006, ANN M FLORIDA ASS IN
   Shamshiri S, 2015, P 2015 ANN C GEN EV
   Siegmund N., 2015, P 2015 10 JOINT M FD
   Siegmund N, 2012, P 34 INT C SOFTW ENG
   Singer J, 2007, P 6 INT S MEM MAN IS
   Singh R, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P309, DOI 10.1145/2851553.2851576
   Sopitkamol M., 2005, P 5 INT WORKSHOP SOF, P53
   Thonangi R, 2008, I S MOD ANAL SIM COM, P279
   TUCCI GH, 2012, IEEE INT SYMP INFO
   Wimmer C, 2013, P 2013 COMP PUBL C S
   Wurthinger T, 2013, P 2013 ACM INT S NEW
   Würthinger T, 2017, ACM SIGPLAN NOTICES, V52, P662, DOI [10.1145/3062341.3062381, 10.1145/3140587.3062381]
   Xi B., 2004, P P 13 INT C WORLD W, P287, DOI DOI 10.1145/988672.988711
   Xu Tianyin, 2016, P 12 USENIX C OP SYS
   Yilmaz C, 2007, IEEE T SOFTWARE ENG, V33, P124, DOI 10.1109/TSE.2007.20
   [No title captured]
NR 61
TC 2
Z9 3
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 2323
EP 2363
DI 10.1007/s10664-019-09691-z
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700018
DA 2024-07-18
ER

PT J
AU Stevanetic, S
   Zdun, U
AF Stevanetic, Srdjan
   Zdun, Uwe
TI Supporting the analyzability of architectural component models -
   empirical findings and tool support
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture; Architectural component models;
   Understandability; Software metrics; Empirical study; Architecture
   evolution
ID CLASS DIAGRAMS; SOFTWARE; QUALITY; METRICS; SIZE
AB This article discusses the understandability of component models that are frequently used as central views in architectural descriptions of software systems. We empirically examine how different component level metrics and the participants' experience and expertise can be used to predict the understandability of those models. In addition, we develop a tool that supports applying the obtained empirical findings in practice. Our results show that the prediction models have a large effect size, which means that their prediction strength is of high practical significance. The participants' experience plays an important role in the prediction but the obtained models are not as accurate as the models that use the component level metrics. The developed tools combine the DSL-based architecture abstraction approach with the obtained empirical findings. While the DSL-based architecture abstraction approach enables software architects to keep source code and architecture consistent, the metrics extensions enable them, while working with the DSL, to continuously judge and improve the analyzability of architectural component models based on the understandability of their individual components they create with the DSL. Provided metrics extensions can also help in assessing how much each architectural rule used to specify the DSL affects the understandability of a component which enables for instance finding the rules that contribute the most to a limited understandability. Finally, our approach supports change impact analysis, i.e., the identification of changes that affect different analyzability levels of the component models. We studied the applicability of our approach in a case study of an existing open source system.
C1 [Stevanetic, Srdjan; Zdun, Uwe] Univ Vienna, Software Architecture Res Grp, Wahringerstr 29, A-1090 Vienna, Austria.
C3 University of Vienna
RP Stevanetic, S (corresponding author), Univ Vienna, Software Architecture Res Grp, Wahringerstr 29, A-1090 Vienna, Austria.
EM srdjan.stevanetic@univie.ac.at; uwe.zdun@univie.ac.at
RI Zdun, Uwe/AFR-2161-2022
FU Austrian Science Fund (FWF) [P24345-N23]; Austrian Science Fund (FWF)
   [P24345] Funding Source: Austrian Science Fund (FWF)
FX This work was supported by the Austrian Science Fund (FWF), Project:
   P24345-N23. We thank Dr. Nina Senitschnig from the Department of
   Statistics and Operations Research, for valuable suggestions and help
   related to the statistical analysis pursued.
CR Aguilar ER, 2007, RCIS, P271
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   Allen EB, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P182, DOI 10.1109/METRIC.2002.1011337
   Allen EB, 2007, SOFTWARE QUAL J, V15, P179, DOI 10.1007/s11219-006-9010-3
   [Anonymous], 2003, ALAN APT SERIES
   [Anonymous], 2012, J BRAZ COMPUT SOC
   Babar MA, 2009, J SYST SOFTWARE, V82, P1195, DOI 10.1016/j.jss.2009.05.053
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Barnes JM, 2014, SOFTW SYST MODEL, V13, P649, DOI 10.1007/s10270-012-0301-9
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bass Len, 2012, SEI S SOFTW
   Belsley D., 1991, CONDITIONING DIAGNOS
   Belsley D.A., 1980, Wiley Series in Probability and Mathematical Statistics
   Bhattacharya P, 2012, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2012.6227173
   Björkander M, 2003, IEEE SOFTWARE, V20, P57, DOI 10.1109/MS.2003.1207456
   Bocco MG, 2005, J SOFTW MAINT EVOL-R, V17, P225, DOI 10.1002/smr.312
   Boehm B.W., 1978, Characteristics of Software Quality
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   Bouwers E, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P83, DOI 10.1109/WICSA.2011.20
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   Burnham K. P., 2002, Model selection and multimodel inference. A practical information-theoretic approach, DOI [10.2307/3802723, DOI 10.2307/3802723, DOI 10.1007/B97636]
   Canfora G, 2005, J SYST SOFTWARE, V77, P113, DOI 10.1016/j.jss.2004.11.007
   Cardoso J, 2006, P IEEE I C SERV COMP, P167, DOI 10.1109/SCC.2006.82
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Clements P., 2003, SEI S SOFTW
   Clements P., 2002, DOCUMENTING SOFTWARE
   Cohen J., 1988, STAT POWER ANAL BEHA
   COOK RD, 1977, TECHNOMETRICS, V19, P15, DOI 10.2307/1268249
   Cuesta CE, 2013, J SOFTW-EVOL PROC, V25, P957, DOI 10.1002/smr.1575
   Dalgaard P., 2004, Introductory Statistics with R
   DROMEY RG, 1992, SOFTWARE QUAL J, V1, P45, DOI 10.1007/BF01720169
   DROMEY RG, 1995, IEEE T SOFTWARE ENG, V21, P146, DOI 10.1109/32.345830
   Dugerdil Philippe, 2014, 23rd Australian Software Engineering Conference (ASWEC 2014), P110, DOI 10.1109/ASWEC.2014.17
   Ebel R. L., 1991, Essentials of educational measurement
   Egyed A, 2004, LECT NOTES COMPUT SC, V2984, P37
   Elish Mahmoud O., 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P144, DOI 10.1109/ICPC.2010.43
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Field A., 2013, DISCOVERING STAT USI
   Ghezzi C, 2002, Fundamentals of Software Engineering
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Gupta V, 2009, J COMPUT SCI TECH-CH, V24, P273, DOI 10.1007/s11390-009-9223-6
   Haitzer T, 2014, SCI COMPUT PROGRAM, V90, P135, DOI 10.1016/j.scico.2013.10.004
   Harrison R, 1998, IEEE T SOFTWARE ENG, V24, P491, DOI 10.1109/32.689404
   Hofmeister C., 2000, APPL SOFTWARE ARCHIT
   Hwa J, 2009, ASIA PAC SOFWR ENG, P11, DOI 10.1109/APSEC.2009.60
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Kabacoff R.I., 2011, R in Action: Data Analysis and Graphics with R
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   KOBAYASHI M, 1990, J ECONOMETRICS, V45, P385, DOI 10.1016/0304-4076(90)90006-F
   Konersmann M., 2013, 9 INT ACM SIGS C QUA, P163
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   LEE GS, 1992, MICROELECTRON RELIAB, V32, P323, DOI 10.1016/0026-2714(92)90061-O
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Losavio Francisca., 2003, J OBJECT TECHNOL, V2, P133
   Lungu M, 2006, 10TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P183
   Ma Y., 2006, 6 IEEE INT C COMPUTE, P189, DOI DOI 10.1109/CIT.2006.3
   Malaiya YK, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P62, DOI 10.1109/ISSRE.2000.885861
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   Mazza C, 1996, SOFTWARE ENG GUIDES
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Medvidovic N, 2002, ACM T SOFTW ENG METH, V11, P2, DOI 10.1145/504087.504088
   Medvidovic N, 2000, IEEE T SOFTWARE ENG, V26, P70, DOI 10.1109/32.825767
   Mendling J, 2008, LECT NOTES BUS INF P, V6, P1
   Mohagheghi P, 2004, PROC INT CONF SOFTW, P282, DOI 10.1109/ICSE.2004.1317450
   Moody D. L., 1998, Conceptual Modeling - ER'98. 17th International Conference on Conceptual Modeling. Proceedings, P211
   Moody Daniel L., 2003, P 11 EUR C INF SYST, P1337
   Morasca S., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P100, DOI 10.1109/METRIC.1999.809731
   Nissen ME, 1998, MIS QUART, V22, P509, DOI 10.2307/249553
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Oreizy P, 1999, IEEE INTELL SYST APP, V14, P54, DOI 10.1109/5254.769885
   Otero MC, 2004, INFORM SOFTWARE TECH, V46, P35, DOI 10.1016/S0950-5849(03)00108-3
   Pacione MJ, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2004.7
   Patig S., 2008, PROC APCCM, P49
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Purchase HelenC., 2001, APVIS 01, P113
   Reijers HA, 2011, IEEE T SYST MAN CY A, V41, P449, DOI 10.1109/TSMCA.2010.2087017
   Robbins JE, 1998, PROC INT CONF SOFTW, P209, DOI 10.1109/ICSE.1998.671120
   Rozanski N., 2005, SOFTWARE SYSTEMS ARC
   Rubinfeld D.L., 2000, Reference guide on multiple regression
   Sarkar S, 2008, IEEE T SOFTWARE ENG, V34, P700, DOI 10.1109/TSE.2008.43
   Sartipi K, 2001, PROG COMPREHEN, P259, DOI 10.1109/WPC.2001.921736
   Sengupta S., 2011, ACM SIGSOFT Software Engineering Notes, V36, P1, DOI DOI 10.1145/1921532.1921546
   Sharma A., 2009, ACM SIGSOFT Software Engineering Notes, V34, P1, DOI DOI 10.1145/1507195.1507215
   Stevanetic S, 2014, P 2014 EUR C SOFTW A
   Stevanetic S, 2016, 19 INT ACM SIGS S CO
   Stevanetic S, 2015, EASE 2015 19 INT C E
   Stevanetic S, 2014, P 14 INT C SOFTW QUA
   Stevanetic S, 2014, P 18 INT C EV ASS SO, P1
   Sun D, 2005, PROG COMPREHEN, P317
   van der Aalst WMP, 2008, INFORM SOFTWARE TECH, V50, P131, DOI 10.1016/j.infsof.2006.11.004
   Vanderfeesten I, 2008, LECT NOTES COMPUT SC, V5074, P480
   Vanhatalo J, 2007, LECT NOTES COMPUT SC, V4749, P43
   Völter M, 2010, IEEE SOFTWARE, V27, P56, DOI 10.1109/MS.2010.38
   Weber B., 2014, LNBIP, V175, P17, DOI DOI 10.1007/978-3-662-43745-2_2
   Zimmermann O, 2007, LECT NOTES COMPUT SC, V4880, P15
NR 97
TC 4
Z9 4
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2018
VL 23
IS 6
BP 3578
EP 3625
DI 10.1007/s10664-017-9583-4
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC1WE
UT WOS:000451593200014
DA 2024-07-18
ER

PT J
AU Accioly, P
   Borba, P
   Cavalcanti, G
AF Accioly, Paola
   Borba, Paulo
   Cavalcanti, Guilherme
TI Understanding semi-structured merge conflict characteristics in
   open-source Java projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Collaborative software development; Merge conflicts; Empirical software
   engineering; Awareness tools
AB Empirical studies show that merge conflicts frequently occur, impairing developers' productivity, since merging conflicting contributions might be a demanding and tedious task. However, the structure of changes that lead to conflicts has not been studied yet. Understanding the underlying structure of conflicts, and the involved syntactic language elements might shed light on how to better avoid merge conflicts. To this end, in this paper we derive a catalog of conflict patterns expressed in terms of the structure of code changes that lead to merge conflicts. We focus on conflicts reported by a semi-structured merge tool that exploits knowledge about the underlying syntax of the artifacts. This way, we avoid analyzing a large number of spurious conflicts often reported by typical line based merge tools. To assess the occurrence of such patterns in different systems, we conduct an empirical study reproducing 70,047 merges from 123 GitHub Java projects. Our results show that most semi-structured merge conflicts in our sample happen because developers independently edit the same or consecutive lines of the same method. However, the probability of creating a merge conflict is approximately the same when editing methods, class fields, and modifier lists. Furthermore, we noticed that most part of conflicting merge scenarios, and merge conflicts, involve more than two developers. Also, that copying and pasting pieces of code, or even entire files, across different repositories is a common practice and cause of conflicts. Finally, we discuss how our results reveal the need for new research studies and suggest potential improvements to tools supporting collaborative software development.
C1 [Accioly, Paola; Borba, Paulo; Cavalcanti, Guilherme] Univ Fed Pernambuco, Informat Ctr, Recife, PE, Brazil.
C3 Universidade Federal de Pernambuco
RP Accioly, P (corresponding author), Univ Fed Pernambuco, Informat Ctr, Recife, PE, Brazil.
EM prga@cin.ufpe.br; phmb@cin.ufpe.br; gjcc@cin.ufpe.br
RI Borba, Paulo/C-5617-2013
OI Borba, Paulo/0000-0002-0381-2843; Accioly, Paola/0000-0002-4428-2543
FU FACEPE [APQ 0388-1.03/14, IBPG 0716-1.03/12]; CNPq [309741/2013-0];
   CAPES
FX We would like to thank the FACEPE (grants APQ 0388-1.03/14 and IBPG
   0716-1.03/12), CNPq (grant 309741/2013-0), and CAPES funding agencies
   for partially supporting this work. We also thank our Software
   Productivity Group colleagues, and the anonymous reviewers who greatly
   contributed to improve this work.
CR Accioly P, 2017, ONLINE APPENDIX
   [Anonymous], 1964, Some rapid approximate statistical procedures
   [Anonymous], TECHNICAL REPORT
   [Anonymous], THESIS
   Apel S., 2012, P 27 IEEE ACM INT C
   Apel Sven, 2011, P 19 ACM SIGSOFT S 1
   Barik T, 2015, P INT C SOFTW ENG NE
   Bird C., 2009, P 2009 6 IEEE INT WO, P1
   Bird Christian, 2012, P ACM SIGSOFT 20 INT
   Bonferroni Carlo E., 1936, PUBBLICAZIONI R I SU
   Brun Y, 2013, IEEE T SOFTWARE ENG, V39, P1358, DOI 10.1109/TSE.2013.28
   Cataldo Marcelo, 2011, P 33 INT C SOFTW ENG
   Cavalcanti G, 2017, P ACM PROGR LANG
   Cavalcanti Guilherme, 2015, P 9 INT S EMP SOFTW
   Costa C, 2016, P 24 ACM SIGSOFT INT
   Dias M, 2015, P 22 IEEE INT C SOFT
   Dig D, 2005, P 21 IEEE INT C SOFT
   Eclipse, 2015, JGIT US GUID
   Estler H Christian, 2014, P IEEE 9 INT C GLOB
   Falleri Jean-Remy, 2014, ACM IEEE INT C AUT S
   Free Software Foundation, 2016, DIFF UT US MAN
   Gousios G., 2014, P 36 INT C SOFTW ENG
   Guimaraes Mario Luis, 2012, P 34 INT C SOFTW ENG
   Guzzi Anja, 2015, P 18 ACM C COMP SUPP
   Hattori Lile, 2010, P 32 ACM IEEE INT C, V2
   Henkel J., 2005, P 27 INT C SOFTW ENG
   JACKSON D, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P243, DOI 10.1109/ICSM.1994.336770
   Kalliamvakou E, 2015, P 37 INT C SOFTW ENG
   Kasi Bakhtiar Khan, 2013, P 2013 INT C SOFTW E
   Khanna S., 2007, P 27 INT C FDN SOFTW
   Mens T, 2002, IEEE T SOFTW ENG
   Muslu K, 2015, 30 IEEE ACM INT C AU
   Nagappan Meiyappan, 2013, P 2013 9 JOINT M FDN
   Perry DE, 2001, ACM T SOFTW ENG METH, V10, P308, DOI 10.1145/383876.383878
   Rosenthal R., 1994, PARAMETRIC MEASURES
   Sarma A, 2012, IEEE T SOFTWARE ENG, V38, P889, DOI 10.1109/TSE.2011.64
   Shihab Emad, 2012, P ACM IEEE INT S EMP
   Svajlenko J, 2014, P 2014 IEEE INT C SO
   Zimmermann T., 2007, P 4 INT WORKSH MIN S
NR 39
TC 22
Z9 23
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2018
VL 23
IS 4
BP 2051
EP 2085
DI 10.1007/s10664-017-9586-1
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GK0MK
UT WOS:000435804100007
DA 2024-07-18
ER

PT J
AU Soh, Z
   Khomh, F
   Guéhéneuc, YG
   Antoniol, G
AF Soh, Zephyrin
   Khomh, Foutse
   Gueheneuc, Yann-Gael
   Antoniol, Giuliano
TI Noise in Mylyn interaction traces and its impact on developers and
   recommendation systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software maintenance; Mylyn Interaction traces; Noise; Editing
   behaviour; Recommendation systems
AB Interaction traces (ITs) are developers' logs collected while developers maintain or evolve software systems. Researchers use ITs to study developers' editing styles and recommend relevant program entities when developers perform changes on source code. However, when using ITs, they make assumptions that may not necessarily be true. This article assesses the extent to which researchers' assumptions are true and examines noise in ITs. It also investigates the impact of noise on previous studies. This article describes a quasi-experiment collecting both Mylyn ITs and video-screen captures while 15 participants performed four realistic software maintenance tasks. It assesses the noise in ITs by comparing Mylyn ITs and the ITs obtained from the video captures. It proposes an approach to correct noise and uses this approach to revisit previous studies. The collected data show that Mylyn ITs can miss, on average, about 6% of the time spent by participants performing tasks and can contain, on average, about 85% of false edit events, which are not real changes to the source code. The approach to correct noise reveals about 45% of misclassification of ITs. It can improve the precision and recall of recommendation systems from the literature by up to 56% and 62%, respectively. Mylyn ITs include noise that biases subsequent studies and, thus, can prevent researchers from assisting developers effectively. They must be cleaned before use in studies and recommendation systems. The results on Mylyn ITs open new perspectives for the investigation of noise in ITs generated by other monitoring tools such as DFlow, FeedBag, and Mimec, and for future studies based on ITs.
C1 [Soh, Zephyrin; Gueheneuc, Yann-Gael] Polytech Montreal, Ptidej Team, Montreal, PQ, Canada.
   [Khomh, Foutse] Polytech Montreal, SWAT Lab, Montreal, PQ, Canada.
   [Antoniol, Giuliano] Polytech Montreal, Soccer Lab, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal; Universite de Montreal;
   Polytechnique Montreal; Universite de Montreal; Polytechnique Montreal
RP Soh, Z (corresponding author), Polytech Montreal, Ptidej Team, Montreal, PQ, Canada.
EM zephyrin.soh@polymtl.ca; foutse.khomh@polymtl.ca;
   yann-gael.gueheneuc@polymtl.ca; giuliano.antoniol@polymtl.ca
RI Guéhéneuc, Yann-Gaël/K-9371-2019
FU NSERC; Canada Research Chairs on Multi-language Patterns and on Software
   Change and Evolution
FX The authors greatly thanks the participants of the experiments described
   in this article. This study would not have been possible without their
   participation. Many thanks also go to intern students Thomas Drioul and
   Pierre-Antoine Rappe, who transcribed the video captures. Thanks to
   Seonah Lee and colleagues for providing us with the data and the
   implementation of their recommendation system. We also thank Annie Ying
   and Martin Robillard for making their script publicly available for use.
   The authors are grateful to the editors and anonymous reviewers for
   their detailed feedback and useful suggestions to improve the earlier
   version of this article. This work has been partially funded by a NSERC
   Discovery grant and the Canada Research Chairs on Multi-language
   Patterns and on Software Change and Evolution.
CR Amann S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P124, DOI 10.1109/SANER.2016.39
   [Anonymous], PROC INT CONF SOFTW
   Bantelay F, 2013, WORK CONF REVERSE EN, P311, DOI 10.1109/WCRE.2013.6671306
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   Bouckaert R.R., 2013, WEKA Manual for Version 3-6-10
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   DeLine R, 2005, 2005 IEEE Symposium on Visual Language and Human-Centric Computing, Proceedings, P241, DOI 10.1109/VLHCC.2005.32
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P456, DOI 10.1109/WCRE.2012.55
   Fritz T, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P7, DOI 10.1145/2635868.2635905
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Kersten M, 2005, P 2005 INT C ASP OR, P159, DOI DOI 10.1145/1052898.1052912
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Kuhn M., 2015, CARET CLASSIFICATION
   Kuhn M, 2008, J STAT SOFTW, V28, P1, DOI 10.18637/jss.v028.i05
   Kumar V., 2006, Introduction to Data Mining
   Layman L. M., 2009, THESIS
   Layman Lucas M., 2008, Proceedings of the 2008 International Workshop on Cooperative and Human Aspects of Software Engineering. CHASE '08, P73
   Lee S, 2015, IEEE T SOFTWARE ENG, V41, P314, DOI 10.1109/TSE.2014.2362138
   Lee S, 2013, J SYST SOFTWARE, V86, P2154, DOI 10.1016/j.jss.2013.03.103
   Minelli R, 2014, 14 INT C QUAL SOFTW
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Parnin C, 2011, SOFTWARE QUAL J, V19, P5, DOI 10.1007/s11219-010-9104-9
   Robbes R, 2013, IEEE WORK CONF MIN S, P297, DOI 10.1109/MSR.2013.6624041
   Robbes R, 2010, AUTOMAT SOFTW ENG, V17, P181, DOI 10.1007/s10515-010-0064-x
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Romano J., 2006, ANN M FLORIDA ASS IN
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   Sanchez H, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P251, DOI 10.1109/SANER.2015.7081835
   Singer J, 2005, PROC IEEE INT CONF S, P325
   Soh Z, 2015, 9 INT S EMP IN PRESS
   Soh Z, 2013, WORK CONF REVERSE EN, P152, DOI 10.1109/WCRE.2013.6671290
   Soh Z, 2013, WORK CONF REVERSE EN, P391, DOI 10.1109/WCRE.2013.6671314
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Witten I. H., 2005, DATA MINING PRACTICA
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Ying ATT, 2011, CONF PROC INT SYMP C, P31, DOI 10.1109/ICPC.2011.35
   Zanjani Motahareh Bahrami, 2014, P 11 WORK C MIN SOFT, P162, DOI [10.1145/2597073.2597096, DOI 10.1145/2597073.2597096]
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 39
TC 4
Z9 4
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2018
VL 23
IS 2
BP 645
EP 692
DI 10.1007/s10664-017-9529-x
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GC1OI
UT WOS:000429551000002
DA 2024-07-18
ER

PT J
AU Wang, SW
   Lo, D
   Vasilescu, B
   Serebrenik, A
AF Wang, Shaowei
   Lo, David
   Vasilescu, Bogdan
   Serebrenik, Alexander
TI EnTagRec<SUP>++</SUP>: An enhanced tag recommendation system for
   software information sites
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software information sites; Recommendation systems; Tagging
ID SOCIAL TAGS; NAVIGATION; KNOWLEDGE; SEARCH
AB Software engineers share experiences with modern technologies using software information sites, such as Stack Overflow. These sites allow developers to label posted content, referred to as software objects, with short descriptions, known as tags. Tags help to improve the organization of questions and simplify the browsing of questions for users. However, tags assigned to objects tend to be noisy and some objects are not well tagged. For instance, 14.7% of the questions that were posted in 2015 on Stack Overflow needed tag re-editing after the initial assignment. To improve the quality of tags in software information sites, we propose EnTagRec (++), which is an advanced version of our prior work EnTagRec. Different from EnTagRec, EnTagRec (++) does not only integrate the historical tag assignments to software objects, but also leverages the information of users, and an initial set of tags that a user may provide for tag recommendation. We evaluate its performance on five software information sites, Stack Overflow, Ask Ubuntu, Ask Different, Super User, and Freecode. We observe that even without considering an initial set of tags that a user provides, it achieves Recall@5 scores of 0.821, 0.822, 0.891, 0.818 and 0.651, and Recall@10 scores of 0.873, 0.886, 0.956, 0.887 and 0.761, on Stack Overflow, Ask Ubuntu, Ask Different, Super User, and Freecode, respectively. In terms of Recall@5 and Recall@10, averaging across the 5 datasets, it improves upon TagCombine, which is the prior state-of-the-art approach, by 29.3% and 14.5% respectively. Moreover, the performance of our approach is further boosted if users provide some initial tags that our approach can leverage to infer additional tags: when an initial set of tags is given, Recall@5 is improved by 10%.
C1 [Wang, Shaowei] Queens Univ, SAIL, Kingston, ON, Canada.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
   [Vasilescu, Bogdan] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
   [Serebrenik, Alexander] Eindhoven Univ Technol, Dept Math & Comp Sci, Eindhoven, Netherlands.
C3 Queens University - Canada; Singapore Management University; Carnegie
   Mellon University; Eindhoven University of Technology
RP Wang, SW (corresponding author), Queens Univ, SAIL, Kingston, ON, Canada.
EM shaowei@cs.queensu.ca; davidlo@smu.edu.sg; vasilescu@cmu.edu;
   a.serebrenik@tue.nl
RI Lo, David/A-2493-2012
OI Lo, David/0000-0002-4367-7201; Vasilescu, Bogdan/0000-0003-4418-5783;
   Serebrenik, Alexander/0000-0002-1418-0095
CR Al-Kofahi JM, 2010, FUZZY SET APPROACH A, P1
   [Anonymous], 2008, P 17 INT C WORLD WID
   [Anonymous], 1997, An Algorithm for Suffix Stripping, page
   [Anonymous], 2005, Proceedings of the 14th ACM International Conference on Information and Knowledge Management, CIKM'05, DOI [DOI 10.1145/1099554.1099591, 10.1145/1099554.1099591]
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Asuncion HU, 2010, SOFTWARE TRACEABILIT, P95
   Baldi PF, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P543, DOI 10.1145/1449955.1449807
   Bazelli B, 2013, PROC IEEE INT CONF S, P460, DOI 10.1109/ICSM.2013.72
   Benjamini Y, 2001, ANN STAT, V29, P1165
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bindelli S, 2008, LECT NOTES COMPUT SC, V5333, P76
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   Cabot J, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P550, DOI 10.1109/SANER.2015.7081875
   Capobianco G, 2013, J SOFTW-EVOL PROC, V25, P743, DOI 10.1002/smr.1564
   Cress U, 2013, COMPUT EDUC, V60, P59, DOI 10.1016/j.compedu.2012.06.015
   Crestani F, 1997, ARTIF INTELL REV, V11, P453, DOI 10.1023/A:1006569829653
   Gelman A., 2003, Chapman & Hall/CRC Texts in Statistical Science, VSecond
   Golder SA, 2006, J INF SCI, V32, P198, DOI 10.1177/0165551506062337
   Grissom RJ, 2005, EFFECT SIZES RES BRA
   Han J, 2012, MOR KAUF D, P1
   Held C, 2012, COMPUT HUM BEHAV, V28, P34, DOI 10.1016/j.chb.2011.08.008
   Her J, 2011, TAG RECOMMENDATIONS
   Hong L., 2010, P 1 WORKSH SOC MED A, P80, DOI [10.1145/1964858.1964870, DOI 10.1145/1964858.1964870]
   Jaschke R., 2007, TAG RECOMMENDATIONS
   jmac, 2013, SEL DISPL SUGG TAGS
   Joorabchi A, 2015, J INF SCI, V41, P570, DOI 10.1177/0165551515586669
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Puurula A., 2011, 10 NZ COMP SCI RES S
   Ramage Daniel., 2009, EMNLP, DOI DOI 10.3115/1699510.1699543
   Rebouças M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P634, DOI 10.1109/SANER.2016.66
   Samaniego F. I., 2010, SERIES IN STAT
   Shokripour R, 2013, WHY SO COMPLICATED S
   Storey MA., 2010, P FSE SDP WORKSH FUT, P359, DOI DOI 10.1145/1882362.1882435
   Storey MA, 2009, IEEE T SOFTWARE ENG, V35, P470, DOI 10.1109/TSE.2009.15
   Thung F, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P600, DOI 10.1109/ICSM.2012.6405331
   Toutanova K, 2003, HLT-NAACL 2003: HUMAN LANGUAGE TECHNOLOGY CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE MAIN CONFERENCE, P252, DOI 10.3115/1073445.1073478
   Treude C, 2012, IEEE T SOFTWARE ENG, V38, P19, DOI 10.1109/TSE.2010.91
   Treude C, 2009, PROC INT CONF SOFTW, P12, DOI 10.1109/ICSE.2009.5070504
   Vasilescu Bogdan, 2013, Social Informatics. 5th International Conference, SocInfo 2013. Proceedings: LNCS 8238, P391, DOI 10.1007/978-3-319-03260-3_34
   Vogt C. C., 1999, Information Retrieval, V1, P151, DOI 10.1023/A:1009980820262
   Wang SW, 2014, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2014.51
   Wang SW, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P604, DOI 10.1109/ICSM.2012.6405332
   Wang WT, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P8, DOI 10.1109/SST.2015.9
   Wang XY, 2015, J COMPUT SCI TECH-CH, V30, P1017, DOI 10.1007/s11390-015-1578-2
   Warbox D., 2009, AUTOTAGGING
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Zangerle E, 2011, LECT NOTES COMPUT SC, V6984, P113, DOI 10.1007/978-3-642-24704-0_16
   Zubiaga A., 2012, ARXIV12025469 CORR
NR 53
TC 49
Z9 53
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2018
VL 23
IS 2
BP 800
EP 832
DI 10.1007/s10664-017-9533-1
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GC1OI
UT WOS:000429551000005
OA Green Published, Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Jiang, J
   Lo, D
   He, JH
   Xia, X
   Kochhar, PS
   Zhang, L
AF Jiang, Jing
   Lo, David
   He, Jiahuan
   Xia, Xin
   Kochhar, Pavneet Singh
   Zhang, Li
TI Why and how developers fork what from whom in GitHub
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Fork; Open source software; GitHub
AB Forking is the creation of a new software repository by copying another repository. Though forking is controversial in traditional open source software (OSS) community, it is encouraged and is a built-in feature in GitHub. Developers freely fork repositories, use codes as their own and make changes. A deep understanding of repository forking can provide important insights for OSS community and GitHub. In this paper, we explore why and how developers fork what from whom in GitHub. We collect a dataset containing 236,344 developers and 1,841,324 forks. We make surveys, and analyze programming languages and owners of forked repositories. Our main observations are: (1) Developers fork repositories to submit pull requests, fix bugs, add new features and keep copies etc. Developers find repositories to fork from various sources: search engines, external sites (e.g., Twitter, Reddit), social relationships, etc. More than 42 % of developers that we have surveyed agree that an automated recommendation tool is useful to help them pick repositories to fork, while more than 44.4 % of developers do not value a recommendation tool. Developers care about repository owners when they fork repositories. (2) A repository written in a developer's preferred programming language is more likely to be forked. (3) Developers mostly fork repositories from creators. In comparison with unattractive repository owners, attractive repository owners have higher percentage of organizations, more followers and earlier registration in GitHub. Our results show that forking is mainly used for making contributions of original repositories, and it is beneficial for OSS community. Moreover, our results show the value of recommendation and provide important insights for GitHub to recommend repositories.
C1 [Jiang, Jing; He, Jiahuan; Zhang, Li] Beihang Univ, State Key Lab Software Dev Environm, Beijing, Peoples R China.
   [Lo, David; Kochhar, Pavneet Singh] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
   [Xia, Xin] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
C3 Beihang University; Singapore Management University; Zhejiang University
RP Jiang, J; Zhang, L (corresponding author), Beihang Univ, State Key Lab Software Dev Environm, Beijing, Peoples R China.
EM jiangjing@buaa.edu.cn; lily@buaa.edu.cn
RI Xia, Xin/AAD-6217-2022; Wang, Jingjing/B-7476-2016; Zhang,
   Li/AAA-9787-2020; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Wang, Jingjing/0000-0003-3170-8952; Lo,
   David/0000-0002-4367-7201
FU National Natural Science Foundation of China [61300006]; State Key
   Laboratory of Software Development Environment [SKLSDE-2015ZX-24];
   Beijing Natural Science Foundation [4163074]
FX This work is supported by National Natural Science Foundation of China
   under Grant No. 61300006, the State Key Laboratory of Software
   Development Environment under Grant No. SKLSDE-2015ZX-24, and Beijing
   Natural Science Foundation under Grant No. 4163074.
CR [Anonymous], 1999, Open sources: voices from the open source revolution
   [Anonymous], 2014, P 1 INTERNATIONALWOR, DOI DOI 10.1145/2666539.2666570
   Avazpour I, 2014, Recomm Syst Softw Eng, P245
   Begel A, 2013, IEEE SOFTWARE, V30, P52, DOI 10.1109/MS.2013.13
   Bird C, 2009, P MSR VANC
   Crowston K, 2012, ACM COMPUT SURV, P44
   Dabbish L, 2012, P CSCW WASH
   Dabbish L, 2013, IEEE SOFTWARE, V30, P37, DOI 10.1109/MS.2012.172
   Ernst N. A., 2010, ARXIV10042889
   FBissyande T, 2013, P COMPSAC KYOT
   Fung KH, 2012, CAISE FORUM
   Gousios G., 2014, ICSE
   Happel H.-J., 2008, P 2008 INT WORKSHOP, P11
   Jiang J, 2013, P WCRE KOBL
   Kalliamvakou E, 2014, P MSR HYD
   Lee M.J., 2013, CHI'13 Extended Abstracts on Human Factors in Computing Systems, P133
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Marlow J, 2013, ACTIVITY TRACES SIGN
   Muffatto M., 2003, EMERGENCE, V5, P83
   Nagy D, 2010, COMMUN ACM, V53, P148, DOI 10.1145/1666420.1666457
   Neville-Neil GV, 2011, COMMUN ACM, V54, P34, DOI 10.1145/1953122.1953137
   Nyman L, 2013, TECHNOL INNOV MANAG, P7
   Pham R, 2013, P ICSE SAN FRANC
   Robillard MP, 2010, IEEE SOFTWARE, V27, P80, DOI 10.1109/MS.2009.161
   Robles G., 2012, OPEN SOURCE SYSTEMS, P1, DOI DOI 10.1007/978-3-642-33442-91
   Thung F, 2013, 17 EUR C SOFTW MAINT
   Tsay J, 2012, P CSCW SEATTL
   Yuan Tian, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P247, DOI 10.1109/MSR.2012.6224287
NR 28
TC 75
Z9 84
U1 1
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2017
VL 22
IS 1
BP 547
EP 578
DI 10.1007/s10664-016-9436-6
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI3GS
UT WOS:000392378400015
DA 2024-07-18
ER

PT J
AU Ramírez, A
   Romero, JR
   Ventura, S
AF Ramirez, Aurora
   Raul Romero, Jose
   Ventura, Sebastian
TI A comparative study of many-objective evolutionary algorithms for the
   discovery of software architectures
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture discovery; Search based software engineering;
   Many-objective evolutionary algorithms; Multi-objective evolutionary
   algorithms
ID OPTIMIZATION; PARETO; INTEGRATION; WELL
AB During the design of complex systems, software architects have to deal with a tangle of abstract artefacts, measures and ideas to discover the most fitting underlying architecture. A common way to structure such complex systems is in terms of their interacting software components, whose composition and connections need to be properly adjusted. Along with the expected functionality, non-functional requirements are key at this stage to guide the many design alternatives to be evaluated by software architects. The appearance of Search Based Software Engineering (SBSE) brings an approach that supports the software engineer along the design process. Evolutionary algorithms can be applied to deal with the abstract and highly combinatorial optimisation problem of architecture discovery from a multiple objective perspective. The definition and resolution of many-objective optimisation problems is currently becoming an emerging challenge in SBSE, where the application of sophisticated techniques within the evolutionary computation field needs to be considered. In this paper, diverse non-functional requirements are selected to guide the evolutionary search, leading to the definition of several optimisation problems with up to 9 metrics concerning the architectural maintainability. An empirical study of the behaviour of 8 multi- and many-objective evolutionary algorithms is presented, where the quality and type of the returned solutions are analysed and discussed from the perspective of both the evolutionary performance and those aspects of interest to the expert. Results show how some many-objective evolutionary algorithms provide useful mechanisms to effectively explore design alternatives on highly dimensional objective spaces.
C1 [Ramirez, Aurora; Raul Romero, Jose; Ventura, Sebastian] Univ Cordoba, Dept Comp Sci & Numer Anal, Cordoba 14071, Spain.
C3 Universidad de Cordoba
RP Romero, JR (corresponding author), Univ Cordoba, Dept Comp Sci & Numer Anal, Cordoba 14071, Spain.
EM aramirez@uco.es; jrromero@uco.es; sventura@uco.es
RI Ramírez, Aurora/A-3635-2019; Ventura, Sebastian/A-7753-2008; Romero,
   Jose Raul/I-5658-2015
OI Ramírez, Aurora/0000-0002-1916-6559; Ventura,
   Sebastian/0000-0003-4216-6378; Romero, Jose Raul/0000-0002-4550-6385
FU Spanish Ministry of Science and Technology [TIN2011-22408]; Spanish
   Ministry of Economy and Competitiveness [TIN2014-55252-P]; FEDER funds;
   Spanish Ministry of Education under FPU program [FPU13/01466]
FX Work supported by the Spanish Ministry of Science and Technology,
   project TIN2011-22408, the Spanish Ministry of Economy and
   Competitiveness, project TIN2014-55252-P, and FEDER funds. This research
   was also supported by the Spanish Ministry of Education under the FPU
   program (FPU13/01466).
CR Adra SF, 2011, IEEE T EVOLUT COMPUT, V15, P183, DOI 10.1109/TEVC.2010.2058117
   Aleti A, 2013, IEEE T SOFTWARE ENG, V39, P658, DOI 10.1109/TSE.2012.64
   [Anonymous], 2004, Metaheuristics for Multiobjective Optimisation
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Bader J, 2011, EVOL COMPUT, V19, P45, DOI 10.1162/EVCO_a_00009
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Bosch J, 1999, ECBS '99, IEEE CONFERENCE AND WORKSHOP ON ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P4, DOI 10.1109/ECBS.1999.755855
   Boussaïd I, 2013, INFORM SCIENCES, V237, P82, DOI 10.1016/j.ins.2013.02.041
   Bouwers E, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P83, DOI 10.1109/WICSA.2011.20
   Bowman M, 2010, IEEE T SOFTWARE ENG, V36, P817, DOI 10.1109/TSE.2010.70
   Coello C. A. C., 2007, EVOLUTIONARY ALGORIT, V5
   Deb K, 2003, LECT NOTES COMPUT SC, V2632, P222
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K., 2010, MULTIOBJECTIVE OPTIM
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   del Sagrado J, 2015, EMPIR SOFTW ENG, V20, P577, DOI 10.1007/s10664-013-9287-3
   Derrac J, 2011, SWARM EVOL COMPUT, V1, P3, DOI 10.1016/j.swevo.2011.02.002
   Dobrica L, 2002, IEEE T SOFTWARE ENG, V28, P638, DOI 10.1109/TSE.2002.1019479
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Durillo JJ, 2011, EMPIR SOFTW ENG, V16, P29, DOI 10.1007/s10664-010-9147-3
   Garlan D., 2000, FUTURE SOFTWARE ENG, P91
   Grunske L., 2006, 28th International Conference on Software Engineering Proceedings, P849, DOI 10.1145/1134285.1134431
   Assunçao WKG, 2014, INFORM SCIENCES, V267, P119, DOI 10.1016/j.ins.2013.12.040
   Gupta P, 2012, LECT NOTES COMPUT SC, V7335, P87, DOI 10.1007/978-3-642-31137-6_7
   Hadka D, 2013, EVOL COMPUT, V21, P231, DOI 10.1162/EVCO_a_00075
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   He ZN, 2014, IEEE T EVOLUT COMPUT, V18, P269, DOI 10.1109/TEVC.2013.2258025
   ISO, 2011, SOFTW PROD QUAL REQ
   ISO, 2011, ISOIECIEEEFDIS42
   Kalboussi Sabrine, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P245, DOI 10.1007/978-3-642-39742-4_19
   Khare V, 2003, LECT NOTES COMPUT SC, V2632, P376
   Koziolek A, 2013, J SYST SOFTWARE, V86, P2542, DOI 10.1016/j.jss.2013.03.081
   Krogmann K., 2010, Reconstruction of Software Component Architectures and Behaviour Models Using Static and Dynamic Analysis
   Li R, 2011, IEEE C EVOL COMPUTAT, P432
   Luna F, 2014, APPL SOFT COMPUT, V15, P136, DOI 10.1016/j.asoc.2013.10.015
   Lutz R, 2001, J SYST ARCHITECT, V47, P613, DOI 10.1016/S1383-7621(01)00019-4
   Martin R., 1994, An Analysis of Dependencies, V12, P151
   Mkaouer W, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1263, DOI 10.1145/2576768.2598366
   Narasimhan VL, 2007, INFORM SCIENCES, V177, P844, DOI 10.1016/j.ins.2006.07.010
   OMG, 2010, UN MOD LANG 2 4 SUP
   Ouni A, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1461
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Praditwong K, 2007, IEEE C EVOL COMPUTAT, P3959
   Purshouse RC, 2007, IEEE T EVOLUT COMPUT, V11, P770, DOI 10.1109/TEVC.2007.910138
   Raiha O., 2011, 2011 Third World Congress on Nature and Biologically Inspired Computing (NaBIC 2011), P29, DOI 10.1109/NaBIC.2011.6089413
   Räihä O, 2010, COMPUT SCI REV, V4, P203, DOI 10.1016/j.cosrev.2010.06.001
   Ramírez A, 2014, GECCO'14: PROCEEDINGS OF THE 2014 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1287, DOI 10.1145/2576768.2598310
   Ramírez A, 2015, INFORM SCIENCES, V305, P234, DOI 10.1016/j.ins.2015.01.017
   Romano J., 2006, ANN M FLORIDA ASS IN
   Sant'Anna C, 2007, LECT NOTES COMPUT SC, V4758, P207
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   Sayyad AS, 2013, INT WORK REAL ARTIF, P21, DOI 10.1109/RAISE.2013.6615200
   Schütze O, 2011, IEEE T EVOLUT COMPUT, V15, P444, DOI 10.1109/TEVC.2010.2064321
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   Ventura S, 2008, SOFT COMPUT, V12, P381, DOI 10.1007/s00500-007-0172-0
   von Lücken C, 2014, COMPUT OPTIM APPL, V58, P707, DOI 10.1007/s10589-014-9644-1
   Wagner T, 2007, LECT NOTES COMPUT SC, V4403, P742
   Xin Yao, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P4, DOI 10.1007/978-3-642-39742-4_2
   Yang SX, 2013, IEEE T EVOLUT COMPUT, V17, P721, DOI 10.1109/TEVC.2012.2227145
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zhang YY, 2013, INFORM SOFTWARE TECH, V55, P126, DOI 10.1016/j.infsof.2012.03.007
   Zhou AM, 2011, SWARM EVOL COMPUT, V1, P32, DOI 10.1016/j.swevo.2011.03.001
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
   Zitzler E., 2000, EUROGEN 2001 Evol. Methods Des. Optim. Control Appl. Ind. Probl, P95
   [No title captured]
NR 65
TC 14
Z9 14
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2016
VL 21
IS 6
BP 2546
EP 2600
DI 10.1007/s10664-015-9399-z
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED7XQ
UT WOS:000389085500010
DA 2024-07-18
ER

PT J
AU Wang, Y
   Redmiles, D
AF Wang, Yi
   Redmiles, David
TI Cheap talk, cooperation, and trust in global software engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Cheap talk; Trust; Cooperation; Communication; Global software
   engineering (GSE); Evolutionary game theory (EGT); Apache LUCENE;
   CHROMIUM OS
ID COMMUNICATION; EVOLUTION; FORMS
AB In our studies of global software engineering (GSE) teams, we found that informal, non-work-related conversations are positively associated with trust. Seeking to use novel analytical techniques to more carefully investigate this phenomenon, we described these non-work-related conversations by adapting the economics literature concept of "cheap talk," and studied it using Evolutionary Game Theory (EGT). More specifically, we modified the classic Stag-hunt game and analyzed the dynamics in a fixed population setting (an abstraction of a GSE team). Doing so, we were able to demonstrate how cheap talk over the Internet (e-cheap talk) was powerful enough to facilitate the emergence of trust and improve the probability of cooperation where the punishment for uncooperative behavior is comparable to the cost of the cheap talk. To validate the results of our theoretical approach, we conducted two empirical case studies that analyzed the logged IRC development discussions of Apache Lucene and Chromium OS using both quantitative and qualitative methods. The results provide general support to the theoretical propositions. We discuss our findings and the theoretical and practical implications to GSE collaborations and research.
C1 [Wang, Yi; Redmiles, David] Univ Calif Irvine, Dept Informat, Irvine, CA 92697 USA.
C3 University of California System; University of California Irvine
RP Wang, Y (corresponding author), Univ Calif Irvine, Dept Informat, Irvine, CA 92697 USA.
EM yiw@ics.uci.edu
RI Wang, Yi/AAK-1375-2020
OI Redmiles, David/0000-0002-1370-7123
CR Al-Ani Ban, 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P104, DOI 10.1109/ICGSE.2012.39
   Al-Ani B, 2009, INT CONF GLOBAL SOFT, P121, DOI 10.1109/ICGSE.2009.20
   Al-Ani Ban., 2013, P ACM C COMPUTER SUP, P563, DOI [DOI 10.1145/2441776.2441840, 10.1145/2441776.2441840]
   [Anonymous], 2010, PROC ACAD MANAGE ANN
   [Anonymous], 2013, Evolution, Games, and God: The Principle of Cooperation
   [Anonymous], P CHASE
   [Anonymous], 2012, the Proceedings of the International Conference on Autonomous Agents and Multiagent Systems (AAMAS 2012)
   [Anonymous], 1998, INDIVIDUAL STRATEGY, DOI DOI 10.1515/9780691214252
   [Anonymous], 2000, Game theory evolving: A problem-centered introduction to modeling strategic behavior
   [Anonymous], THE AMERICAN ECONOMI
   [Anonymous], 2009, THESIS
   Banerjee A, 2013, SCIENCE, V341, P363, DOI 10.1126/science.1236498
   Bos N., 2002, Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2002, P135, DOI 10.1145/503376.503401
   Bowles S, 2011, COOPERATIVE SPECIES: HUMAN RECIPROCITY AND ITS EVOLUTION, P1
   Burt RS, 2013, ANNU REV PSYCHOL, V64, P527, DOI 10.1146/annurev-psych-113011-143828
   Calefato F., 2011, Proc. 4th Int'l Workshop on Social Software Eng, P39
   Calefato Fabio., 2013, P SOCIAL SOFTWARE EN, P13
   Camera G, 2013, P NATL ACAD SCI USA, V110, P14889, DOI 10.1073/pnas.1301888110
   Cassell J, 2003, USER MODEL USER-ADAP, V13, P89, DOI 10.1023/A:1024026532471
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Cederman LE, 2005, AM J SOCIOL, V110, P864, DOI 10.1086/426412
   Chiappori PA, 2002, AM ECON REV, V92, P1138, DOI 10.1257/00028280260344678
   Cleveland Robert B, 1990, J. Off. Stat, V6, P3, DOI DOI 10.1016/J.JNCA.2015.06.008
   Cramton CatherineD., 2007, P AOM ANN M, P1
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Damian D, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P81
   Dittrich Y., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P103, DOI 10.1109/ICGSE.2011.21
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Easley D., 2010, Networks, Crowds, and Markets: Reasoning about a highly connected world, V8
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Erev I, 1998, AM ECON REV, V88, P848
   Farrell J, 1996, J ECON PERSPECT, V10, P103, DOI 10.1257/jep.10.3.103
   Ficici S.G., 2000, Proceedings of the 2nd Annual Conference on Genetic and Evolutionary Computation, P927
   Fudenberg D, 2008, J ECON THEORY, V140, P229, DOI 10.1016/j.jet.2007.08.002
   Fudenberg D, 2006, J ECON THEORY, V131, P251, DOI 10.1016/j.jet.2005.04.006
   Gharehyazie M, 2015, EMPIR SOFTW ENG, V20, P1318, DOI 10.1007/s10664-014-9332-x
   GRANGER CWJ, 1988, J ECONOMETRICS, V39, P199, DOI 10.1016/0304-4076(88)90045-0
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Harper Richard., 2013, ECSCW 2013: Proceedings of the 13th European Conference on Computer Supported Cooperative Work, 21-25 September 2013, Paphos, Cyprus, P163
   Herbsleb J. D., 2002, Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2002, P171, DOI 10.1145/503376.503408
   Herbsleb J. D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P85, DOI 10.1109/ICSE.1999.840998
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Jackson Matt., 2010, SOCIAL EC NETWORK
   Jackson MO, 2012, AM ECON REV, V102, P1857, DOI 10.1257/aer.102.5.1857
   Jarvenpaa SL, 2004, INFORM SYST RES, V15, P250, DOI 10.1287/isre.1040.0028
   Jensen C., 2012, STAG HUNT GAME
   Jun Zheng, 2002, Conference Proceedings. Conference on Human Factors in Computing Systems. CHI 2002, P141, DOI 10.1145/503376.503402
   Karlin Samuel, 2014, A First Course in Stochastic Processes
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P97, DOI 10.1007/s10664-007-9053-5
   Kwan I, 2012, IEEE SOFTWARE, V29, P90, DOI 10.1109/MS.2012.3
   Layman L, 2006, INFORM SOFTWARE TECH, V48, P781, DOI 10.1016/j.infsof.2006.01.004
   March JamesG., 1993, Organization
   Mislin AA, 2011, ORGAN BEHAV HUM DEC, V115, P55, DOI 10.1016/j.obhdp.2011.01.002
   Montuschi E., 2003, The objects of social science
   Nowak M., 2006, EVOLUTIONARY DYNAMIC, DOI DOI 10.2307/J.CTVJGHW98
   Nowak MA, 2004, NATURE, V428, P646, DOI 10.1038/nature02414
   Nowak MA, 2006, SCIENCE, V314, P1560, DOI 10.1126/science.1133755
   Nowak MA, 2010, NATURE, V466, P1057, DOI 10.1038/nature09205
   Olson GM, 2000, HUM-COMPUT INTERACT, V15, P139, DOI 10.1207/S15327051HCI1523_4
   Pendharkar PC, 2009, COMMUN ACM, V52, P141, DOI 10.1145/1435417.1435449
   Pfaff B, 2008, USE R, P3
   Prikladnicki R, 2014, EMPIR SOFTW ENG, V19, P822, DOI 10.1007/s10664-012-9240-x
   Puranam P, 2014, ACAD MANAGE REV, V39, P162, DOI 10.5465/amr.2011.0436
   Qiaona Hong, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P323, DOI 10.1109/ICSM.2011.6080799
   Ren YQ, 2014, HUM-COMPUT INTERACT, V29, P351, DOI 10.1080/07370024.2013.828565
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Santos FC, 2011, J THEOR BIOL, V274, P30, DOI 10.1016/j.jtbi.2011.01.004
   Schniter E, 2013, J ECON BEHAV ORGAN, V94, P242, DOI 10.1016/j.jebo.2012.09.011
   Schumann J, 2012, PROCEEDINGS OF THE 17TH ACM INTERNATIONAL CONFERENCE ON SUPPORTING GROUP WORK, P199
   Simon HA, 1991, ORGAN SCI, V2, P125, DOI 10.1287/orsc.2.1.125
   Skyrms B., 2010, SIGNALS EVOLUTION LE, DOI DOI 10.1093/ACPROF:OSO/9780199580828.001.0001
   Skyrms B., 2001, P ADDRESSES AM PHILO, V75, P31, DOI DOI 10.2307/3218711
   Skyrms B., 2014, Social dynamics
   Skyrms B, 2008, SYNTHESE, V160, P21, DOI 10.1007/s11229-006-9075-3
   Steed Anthony., 2003, P ACM SIGGRAPH S INT, P51
   Storey Margaret-Anne, 2014, FUT SOFTW ENG P, P100, DOI 10.1145/2593882.2593887
   Tamburri DA, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2522968.2522971
   Traulsen A, 2006, PHYS REV E, V74, DOI 10.1103/PhysRevE.74.011909
   Wang Y, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P149, DOI 10.1109/CHASE.2013.6614753
   Winikoff Michael., 2007, P 6 INT JOINT C AUTO, P1
   Yi Wang, 2010, 2010 32nd International Conference on Software Engineering (ICSE), P39, DOI 10.1145/1810295.1810302
NR 81
TC 21
Z9 23
U1 1
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2016
VL 21
IS 6
BP 2233
EP 2267
DI 10.1007/s10664-015-9407-3
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA ED7XQ
UT WOS:000389085500001
DA 2024-07-18
ER

PT J
AU Ponzanelli, L
   Bavota, G
   Di Penta, M
   Oliveto, R
   Lanza, M
AF Ponzanelli, Luca
   Bavota, Gabriele
   Di Penta, Massimiliano
   Oliveto, Rocco
   Lanza, Michele
TI Prompter
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Recommenders; Mining software repositories; Stack overflow; Empirical
   studies
ID CODE SEARCH ENGINE
AB Developers often require knowledge beyond the one they possess, which boils down to asking co-workers for help or consulting additional sources of information, such as Application Programming Interfaces (API) documentation, forums, and Q&A websites. However, it requires time and energy to formulate one's problem, peruse and process the results. We propose a novel approach that, given a context in the Integrated Development Environment (IDE), automatically retrieves pertinent discussions from Stack Overflow, evaluates their relevance using a multi-faceted ranking model, and, if a given confidence threshold is surpassed, notifies the developer. We have implemented our approach in Prompter, an Eclipse plug-in. Prompter was evaluated in two empirical studies. The first study was aimed at evaluatingPrompter's ranking model and involved 33 participants. The second study was conducted with 12 participants and aimed at evaluating Prompter's usefulness when supporting developers during development and maintenance tasks. Since Prompter uses "volatile information" crawled from the web, we also replicated Study I after one year to assess the impact of such a "volatility" on recommenders like Prompter. Our results indicate that (i) Prompter recommendations were positively evaluated in 74 % of the cases on average, (ii) Prompter significantly helps developers to improve the correctness of their tasks by 24 % on average, but also (iii) 78 % of the provided recommendations are "volatile" and can change at one year of distance. While Prompter revealed to be effective, our studies also point out issues when building recommenders based on information available on online forums.
C1 [Ponzanelli, Luca; Lanza, Michele] USI, REVEAL Fac Informat, Lugano, Switzerland.
   [Bavota, Gabriele] Free Univ Bozen Bolzano, Fac Comp Sci, Bolzano, Italy.
   [Di Penta, Massimiliano] Univ Sannio, Dept Engn, Benevento, Italy.
   [Oliveto, Rocco] Univ Molise, CSSC Lab, Dept Biosci & Terr, Pesche, IS, Italy.
C3 Universita della Svizzera Italiana; Free University of Bozen-Bolzano;
   University of Sannio; University of Molise
RP Ponzanelli, L (corresponding author), USI, REVEAL Fac Informat, Lugano, Switzerland.
EM luca.ponzanelli@usi.ch; gabriele.bavota@unibz.it; dipenta@unisannio.it;
   rocco.oliveto@unimol.it; michele.lanza@usi.ch
RI Di Penta, Massimiliano/AAF-9656-2021; Lanza, Michele/JNQ-9470-2023
OI Lanza, Michele/0000-0003-4391-0197; BAVOTA,
   Gabriele/0000-0002-2216-3148; Ponzanelli, Luca/0000-0001-9890-0557; Di
   Penta, Massimiliano/0000-0002-0340-9747
FU Swiss National Science foundation [153129]
FX Luca Ponzanelli and Michele Lanza thank the Swiss National Science
   foundation for the financial support through SNF Project "ESSENTIALS",
   No. 153129.
CR [Anonymous], 2011, P CHI
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   [Anonymous], 2000, HDB PARAMETRIC NONPA
   [Anonymous], 2007, P 22 IEEE ACM INT C
   [Anonymous], R LANG ENV STAT COMP
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bacchelli A, 2012, PROC INT CONF SOFTW, P375, DOI 10.1109/ICSE.2012.6227177
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bajracharya S., 2006, In Proc. Int'l Conf. Object-Oriented Programming, Systems, Languages, and Applications OOPSLA'06, P25
   Bajracharya S, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P111, DOI 10.1109/MSR.2009.5069489
   Bajracharya SK, 2012, EMPIR SOFTW ENG, V17, P424, DOI 10.1007/s10664-010-9144-6
   Baker R.D., 1995, Randomization Tests
   Constantine L., 1995, Constantine on Peopleware
   Cordeiro J., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P85, DOI 10.1109/RSSE.2012.6233418
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Goldman M, 2009, J VISUAL LANGUAGES C
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Haiduc S, 2012, IEEE INT CONF AUTOM, P90, DOI 10.1145/2351676.2351690
   Haiduc S, 2012, PROC INT CONF SOFTW, P1273, DOI 10.1109/ICSE.2012.6227101
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hintze JL, 1998, AM STAT, V52, P181, DOI 10.2307/2685478
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Holmes R., 2008, Proceedings of the International working Conference on Mining Software Repositories, MSR '08, P23
   Holmes R, 2006, IEEE T SOFTWARE ENG, V32, P952, DOI 10.1109/TSE.2006.117
   Holmes Reid, 2005, P 10 EUR SOFTW ENG C, V30, P237, DOI DOI 10.1145/1095430.1081744
   Horvitz Eric., 1998, P 14 C UNCERTAINTY A, P256
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Kononenko O, 2012, S VIS LANG HUM CEN C, P127, DOI 10.1109/VLHCC.2012.6344497
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Linstead E, 2007, P NIPS 2007
   Mandelin D, 2005, ACM SIGPLAN NOTICES, V40, P48, DOI 10.1145/1064978.1065018
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Ponzanelli L., 2013, P CSMR 2013 17 IEEE, P59
   Ponzanelli L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1295, DOI 10.1109/ICSE.2013.6606701
   Reiss SP, 2009, PROC INT CONF SOFTW, P243, DOI 10.1109/ICSE.2009.5070525
   Rigby PC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P832, DOI 10.1109/ICSE.2013.6606629
   Robertson S, 2004, J DOC, V60, P503, DOI 10.1108/00220410410560582
   Robillard M, 2010, RECOMMENDATION SYSTE
   Sawadsky Nicholas., 2011, Proceedings of the 1st Workshop on Developing Tools as Plug-ins, P48, DOI DOI 10.1145/1984708.1984722
   SHANNON CE, 1948, BELL SYST TECH J, V27, P379, DOI 10.1002/j.1538-7305.1948.tb01338.x
   Sim S, 2011, WELL DO SEARCH ENGIN, P1
   Stylos J, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P195
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Takuya Watanabe, 2011, P 3 INT WORKSH SEARC, P17, DOI [DOI 10.1145/1985429.1985434, 10.1145/1985429.1985434]
   Thummalapenta Suresh, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P327, DOI 10.1109/ASE.2008.43
   Thummalapenta S., 2007, P OOPSLA 2007, P921
   Umarji M, 2008, INT FED INFO PROC, V275, P257
   Vassallo Carmine, 2014, Proceedings of the 22nd International Conference on Program Comprehension, P106
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   Wettel R, 2005, SEVENTH INTERNATIONAL SYMPOSIUM ON SYMBOLIC AND NUMERIC ALGORITHMS FOR SCIENTIFIC COMPUTING, PROCEEDINGS, P63
   Williams L, 2001, 14TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P27, DOI 10.1109/CSEE.2001.913816
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 59
TC 26
Z9 28
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2016
VL 21
IS 5
BP 2190
EP 2231
DI 10.1007/s10664-015-9397-1
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DU2BX
UT WOS:000382017100010
DA 2024-07-18
ER

PT J
AU Hindle, A
   Alipour, A
   Stroulia, E
AF Hindle, Abram
   Alipour, Anahita
   Stroulia, Eleni
TI A contextual approach towards more accurate duplicate bug report
   detection and ranking
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Issue-tracking systems; Bug-tracing systems; Duplicate bug reports;
   Triaging; Bug deduplication; Information retrieval; Software context
AB The issue-tracking systems used by software projects contain issues, bugs, or tickets written by a wide variety of bug reporters, with different levels of training and knowledge about the system under development. Typically, reporters lack the skills and/or time to search the issue-tracking system for similar issues already reported. As a result, many reports end up referring to the same issue, which effectively makes the bug-report triaging process time consuming and error prone. Many researchers have approached the bug-deduplication problem using off-the-shelf information-retrieval (IR) tools. In this work, we extend the state of the art by investigating how contextual information about software-quality attributes, software-architecture terms, and system-development topics can be exploited to improve bug deduplication. We demonstrate the effectiveness of our contextual bug-deduplication method at ranking duplicates on the bug repositories of the Android, Eclipse, Mozilla, and OpenOffice software systems. Based on this experience, we conclude that taking into account domain-specific context can improve IR methods for bug deduplication.
C1 [Hindle, Abram; Alipour, Anahita; Stroulia, Eleni] Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
C3 University of Alberta
RP Hindle, A (corresponding author), Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
EM abram.hindle@softwareprocess.es; alipour1@ualberta.ca;
   stroulia@ualberta.ca
RI Stroulia, Eleni/H-6518-2018
OI Stroulia, Eleni/0000-0002-8784-8236
FU NSERC Discovery Grants
FX We would like to thank Sun et al. (2011) for sharing their Eclipse,
   OpenOffice, and Mozilla datasets with us. Abram Hindle and Eleni
   Stroulia were supported by NSERC Discovery Grants.
CR Aggarwal K, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P211, DOI 10.1109/SANER.2015.7081831
   Alipour A, 2013, IEEE WORK CONF MIN S, P183, DOI 10.1109/MSR.2013.6624026
   Android Community, 2013, ANDR TECHN INF
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2006, THESIS U BRIT COLUMB
   [Anonymous], 2008, AUTOMATED DUPLICATE
   [Anonymous], 2007, Vowpal wabbit online learning project
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Ayewah N., 2010, Proceedings of the 19th international symposium on Software testing and analysis, P241
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Brown A, 2011, The Architecture of Open Source Applications: Elegance, Evolution, and a Few Fearless Hacks
   Buckley Chris., 2000, Evaluating evaluation measure stability. pages, P33, DOI [10.1145/345508.345543, DOI 10.1145/345508.345543]
   Ernst NA, 2010, LECT NOTES COMPUT SC, V6182, P143, DOI 10.1007/978-3-642-14192-8_15
   Grosskurth A., 2006, ARCHITECTURE E UNPUB
   Guana Victor, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P124, DOI 10.1109/MSR.2012.6224269
   Han D., 2012, UNDERSTANDING ANDROI
   Hangal S, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P291, DOI 10.1109/ICSE.2002.1007976
   Hindle A., 2011, P 8 WORK C MIN SOFTW, P163, DOI DOI 10.1145/1985441.1985466
   Holmes G., 1994, Proceedings of the 1994 Second Australian and New Zealand Conference on Intelligent Information Systems (Cat. No.94TH8019), P357, DOI 10.1109/ANZIIS.1994.396988
   Kayed A, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON INTERNET AND WEB APPLICATIONS AND SERVICES, P200, DOI 10.1109/ICIW.2009.36
   Monard MC, 2002, FRONT ARTIF INTEL AP, V85, P173
   Nagwani N.K., 2009, Proceedings of the International Conference on Advances in Computing, Communication and Control, P202
   Nakashima T, 1999, INFORM SOFTWARE TECH, V41, P1059, DOI 10.1016/S0950-5849(99)00049-X
   Ramage D., 2009, Labeled lda: A supervised topic model for credit attribution in multi-labeled corpora
   Robertson S. E., 1995, Text REtrieval Conference (TREC-3) (NIST SP 500-225), P109
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Serrano N, 2005, IEEE SOFTWARE, V22, P11, DOI 10.1109/MS.2005.32
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Sun Microsystems, 2000, OP ORG SOURC PROJ TE
   Sureka A, 2010, ASIA PAC SOFWR ENG, P366, DOI 10.1109/APSEC.2010.49
   Van Hulse J., 2007, P 24 INT C MACH LEAR, DOI [DOI 10.1145/1273496.1273614, 10.1145/1273496.1273614]
   Wallace B. C., 2011, Proceedings of the 2011 IEEE 11th International Conference on Data Mining (ICDM 2011), P754, DOI 10.1109/ICDM.2011.33
   Wallace BC, 2012, IEEE DATA MINING, P695, DOI 10.1109/ICDM.2012.115
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Zaragoza H., 2004, TREC, V4, P1
NR 37
TC 51
Z9 55
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2016
VL 21
IS 2
BP 368
EP 410
DI 10.1007/s10664-015-9387-3
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI2ST
UT WOS:000373349700004
DA 2024-07-18
ER

PT J
AU Al-Baik, O
   Miller, J
AF Al-Baik, Osama
   Miller, James
TI The kanban approach, between agility and leanness: a systematic review
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Kanban; Lean; Agile; Software development; Software engineering; Process
   improvement; Systematic review
ID SOFTWARE-DEVELOPMENT
AB The interest in lean product development in general and the Kanban approach in particular has increased over the years. However, practitioners, in the software development field, have significant challenges in implementing the Kanban approach as it lacks a clear definition of its principles, practices, techniques and tools. This study aims to provide insight into the Kanban approach and its elements (concepts, principles, practices, techniques, and tools) that have been empirically reported by scholars and practitioners. This insight is produced by using the systematic review method to analyze the available literature. A total of 37 primary studies were selected from more than 3,000 unique studies. Our findings show that the primary studies have considered and reported 20 different elements as part of the Kanban approach based upon considerations of being an agile approach or a lean principle; these elements have realized great benefits and improvements to the software development teams. These benefits along with the challenges have been reported in this study. Due to the variety of organization types, contexts, and project sizes reported in the primary studies, it is expected that the results in this study would help in establishing knowledge on what are the different elements of the Kanban approach as well as offering a first step towards developing guidelines for practitioners to help in introducing the Kanban approach to software development organizations.
C1 [Al-Baik, Osama; Miller, James] Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB, Canada.
C3 University of Alberta
RP Miller, J (corresponding author), Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB, Canada.
EM albaik@ualberta.ca; jm@ee.ualberta.ca
RI Al Baik, Osama/JHU-6734-2023
OI Al Baik, Osama/0000-0002-5583-0453
CR Al-Baik O, 2014, EMPIR SOFTW ENG, V19, P2019, DOI 10.1007/s10664-014-9302-3
   Anderson D., 2003, AGILE MANAGEMENT SOF
   Anderson D.J., 2010, Kanban: successful Evolutionary Change for Your Technology Business
   [Anonymous], 2008, SCRUMBAN ESSAYS KANB
   [Anonymous], 67905 COPPEUFRJ ES S
   [Anonymous], 2008, TOYOTA CULTURE HEART, DOI DOI 10.5465/AMP.2006.20591002
   Banerjee M, 1999, CAN J STAT, V27, P3, DOI 10.2307/3315487
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Dixon-Woods Mary, 2005, J Health Serv Res Policy, V10, P45, DOI 10.1258/1355819052801804
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Hibbs Curt, 2009, The art of lean software development: a practical and incremental approach
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Jensen JL, 2001, PUBLIC ADMIN REV, V61, P235, DOI 10.1111/0033-3352.00025
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Liker JK., 2008, TOYOTA CULTURE HEART
   Ohno T., 1998, TOYOTA PRODUCTION SY
   Petticrew M, 2006, SYSTEMATIC REVIEWS IN THE SOCIAL SCIENCES: A PRACTICAL GUIDE, P1, DOI 10.1002/9780470754887
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Reinertsen D.G., 2009, The Principles of Product Development Flow: Second Generation Lean Product Development
   Ries E, 2011, The Lean Startup
   Shah R, 2007, J OPER MANAG, V25, P785, DOI 10.1016/j.jom.2007.01.019
   Wang XF, 2012, J SYST SOFTWARE, V85, P1287, DOI 10.1016/j.jss.2012.01.061
   Womack J.P., 1990, The Machine That Changed the World Vol. 323 No. 1, pp. 273287
   Womack JP, 2003, LEAN THINKING BANISH, P15
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 28
TC 26
Z9 28
U1 2
U2 90
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2015
VL 20
IS 6
BP 1861
EP 1897
DI 10.1007/s10664-014-9340-x
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT7YX
UT WOS:000363032900013
DA 2024-07-18
ER

PT J
AU Ljungkrantz, O
   Åkesson, K
   Fabian, M
   Ebrahimi, AH
AF Ljungkrantz, Oscar
   Akesson, Knut
   Fabian, Martin
   Ebrahimi, Amir Hossein
TI An empirical study of control logic specifications for programmable
   logic controllers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Industrial study; Software requirements and specification; Formal
   specification; Temporal logic; Programmable logic controller ( PLC); IEC
   61131-3
ID VERIFICATION; TIME
AB This paper presents an empirical study of control logic specifications used to document industrial control logic code in manufacturing applications. More than one hundred input/output related property specifications from ten different reusable function blocks were investigated. The main purpose of the study was to provide understanding of how the specifications are expressed by industrial practitioners, in order to develop new tools and methods for specifying control logic software, as well as for evaluating existing ones. In this paper, the studied specifications are used to evaluate linear temporal logic in general and the specification language ST-LTL, tailored for functions blocks, in particular. The study shows that most specifications are expressed as implications, that should always be fulfilled, between input and output conditions. Many of these implications are complex since the input and output conditions may be mixed and involve sequences, timer issues and non-boolean variables. Using ST-LTL it was possible to represent all implications of this study. The few non-implication specifications could be specified in ST-LTL as well after being altered to suit the specification language. The paper demonstrates some advantages of ST-LTL compared to standard linear temporal logic and discusses possible improvements such as support for automatic rewrite of complex specifications.
C1 [Ljungkrantz, Oscar; Akesson, Knut; Fabian, Martin; Ebrahimi, Amir Hossein] Chalmers Univ Technol, Dept Signals & Syst, S-41296 Gothenburg, Sweden.
C3 Chalmers University of Technology
RP Ljungkrantz, O (corresponding author), Chalmers Univ Technol, Dept Signals & Syst, S-41296 Gothenburg, Sweden.
EM oscar.ljungkrantz@gmail.com; knut@chalmers.se; fabian@chalmers.se;
   amir.ebrahimi@chalmers.se
RI Fabian, Martin/AAA-6456-2020
OI Fabian, Martin/0000-0003-1287-9748
FU Swedish Governmental Agency for Innovation Systems (VINNOVA)
FX This work was carried out at the Wingquist Laboratory VINN Excellence
   Centre within the Area of Advance - Production at Chalmers, supported by
   the Swedish Governmental Agency for Innovation Systems (VINNOVA). The
   support is gratefully acknowledged. Thanks also to our industrial
   partners in the FLEXA research project within the European Seventh
   Framework Programme (FP7).
CR ALUR R, 1992, LECT NOTES COMPUT SC, V600, P74, DOI 10.1007/BFb0031988
   [Anonymous], 2003, 611313 IEC
   Baier C, 2008, PRINCIPLES OF MODEL CHECKING, P1
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Berard B., 2001, Systems and Software Verification
   Bitsch F., 2001, LNCS, V2187, P176, DOI [10.1007/3-540-45416-018, DOI 10.1007/3-540-45416-018]
   Bryman A., 2011, Reliability and validity in qualitative research
   Campos J.C., 2008, Property patterns for the formal verification of automated production systems, P5107, DOI [DOI 10.3182/20080706-5-KR-1001.00858, 10.3182/20080706-5-KR-1001.00858]
   Campos J. C., 2009, P 13 IFAC S INF CONT, P976
   Clarke Edmund M., 2001, Model Checking
   DEVLIN K, 2005, SETS FUNCTIONS LOGIC
   Dwyer M. B., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P411, DOI 10.1109/ICSE.1999.841031
   Dwyer M. B., 1998, Proceedings of FMSP'98. Second Workshop on Formal Methods in Software Practice, P7, DOI 10.1145/298595.298598
   Hajarnavis V, 2008, ASSEMBLY AUTOM, V28, P43, DOI 10.1108/01445150810849000
   Lennartson B, 2010, IEEE T AUTOM SCI ENG, V7, P791, DOI 10.1109/TASE.2010.2051664
   Lewis Robert W., 1998, Programming industrial control systems using IEC 1131-3
   Ljungkrantz Oscar, 2010, 2010 8th IEEE International Conference on Industrial Informatics (INDIN 2010), P1067, DOI 10.1109/INDIN.2010.5549591
   Ljungkrantz Oscar., 2010, Programmable logic controller, Intech, P17, DOI [10.5772/7191, DOI 10.5772/7191]
   Lucas MR, 2003, INT J HUM-COMPUT ST, V59, P725, DOI 10.1016/S1071-5819(03)00115-0
   Nain S, 2007, LECT NOTES COMPUT SC, V4762, P19
   Preusse Sebastian, 2008, Proceedings 3rd International Design and Test Workshop (IDT 2008), P313, DOI 10.1109/IDT.2008.4802520
   Preusse S, 2009, IEEE INTL CONF IND I, P632, DOI 10.1109/INDIN.2009.5195876
   Richardsson J, 2006, INT J FLEX MANUF SYS, V18, P191, DOI 10.1007/s10696-006-9004-2
   Rozier KY, 2011, COMPUT SCI REV, V5, P163, DOI 10.1016/j.cosrev.2010.06.002
   Ruf J, 2003, FORM METHOD SYST DES, V23, P67, DOI 10.1023/A:1024437214071
   Shull F, 2008, GUIDE ADV EMPIRICAL, V4334
   Vardi M. Y., 2001, Tools and Algorithms for the Construction and Analysis of Systems. 7th International Conference, TACAS 2001. Held as Part of the Joint European Conferences on Theory and Practice of Software, ETAPS 2001. Proceedings (Lecture Notes in Computer Science Vol.2031), P1
   Visser W., 1987, Empirical Studies of Programmers: Second Workshop, P217
   Vyatkin V, 2008, EURASIP J EMBEDDED S, V2008
NR 29
TC 6
Z9 10
U1 0
U2 19
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2014
VL 19
IS 3
BP 655
EP 677
DI 10.1007/s10664-012-9232-x
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AF0ZA
UT WOS:000334442700007
DA 2024-07-18
ER

PT J
AU Smite, D
   Wohlin, C
   Galvina, Z
   Prikladnicki, R
AF Smite, Darja
   Wohlin, Claes
   Galvina, Zane
   Prikladnicki, Rafael
TI An empirically based terminology and taxonomy for global software
   engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Global Software Engineering; Global sourcing; Offshoring; Outsourcing;
   Taxonomy; Terminology
ID DISTANCE; MODELS
AB Many organizations nowadays strive for utilization of benefits offered by global software engineering (GSE) and sourcing strategies are thus discussed more often. Since there are so many variations of the attributes associated with global software projects a large amount of new terms has been introduced. The diversity in sourcing jargon however has caused difficulties in determining which term to use in which situation, and thus causing further obstacles to searching and finding relevant research during e.g. systematic literature reviews. The inability of judging the applicability of the research in an industrial context is another important implication on the transferability of research into practice. Thus the need for accurate terminology and definitions for different global sourcing situations emerges as a way for the community to build upon each other's work and hence making progress more quickly. In this paper we first investigate the state of the use of the GSE jargon concluding that terminology is very diverse (many synonyms used to describe the same phenomena), often confusing (same terms used to describe different phenomena) and occasionally ambiguous (few terms used to describe several phenomena). In order to address the identified problems, we conducted a Delphi-inspired study with ten well-established researchers in GSE and developed an empirically based glossary for the key concepts in global software engineering. We then propose a taxonomy for GSE by categorizing the selected terms based on generalization-specialization relationships and illustrate how the taxonomy can be used to categorize and map existing knowledge. The contribution targets future researchers, who will publish or synthesize further empirical work and practitioners, who are interested in published empirical cases. Therefore this work is expected to make a contribution to the future development of research in the GSE field, and alleviate understandability and transferability of existing and future knowledge into practice.
C1 [Smite, Darja; Wohlin, Claes] Blekinge Inst Technol, S-37179 Karlskrona, Sweden.
   [Smite, Darja; Galvina, Zane] Univ Latvia, LV-1869 Riga, Latvia.
   [Prikladnicki, Rafael] Pontificia Univ Catolica Rio Grande do Sul, Porto Alegre, RS, Brazil.
C3 Blekinge Institute Technology; University of Latvia; Pontificia
   Universidade Catolica Do Rio Grande Do Sul
RP Smite, D (corresponding author), Blekinge Inst Technol, S-37179 Karlskrona, Sweden.
EM Darja.Smite@bth.se; Claes.Wohlin@bth.se; Zane.Galvina@lu.lv;
   Rafael.Prikladnicki@pucrs.br
OI Wohlin, Claes/0000-0003-0460-5253
FU Knowledge Foundation in Sweden [R2D2 (2009/0249), BESQ+(20100311)];
   European Social Fund through University of Latvia; CNPq [550130/2011-0,
   483125/2010-5, 560037/2010-4]; CiT; PDTI program; Dell Computers of
   Brazil Ltd. [Law 8.248/91]
FX The research by Dr. Darja Smite and Prof. Claes Wohlin is supported by
   the following research grants: R2D2 (2009/0249) and BESQ+(20100311) from
   the Knowledge Foundation in Sweden. Dr. Darja Smite and Zane Galvina are
   also supported by the European Social Fund through a research project
   "Application of computer science and its links to quantum physics" at
   the University of Latvia. Prof. Rafael Prikladnicki holds research
   grants from CNPq (550130/2011-0, 483125/2010-5, and 560037/2010-4), from
   Ci&T, and from the PDTI program, financed by Dell Computers of Brazil
   Ltd. (Law 8.248/91).
CR Ågerfalk PJ, 2008, MIS QUART, V32, P385
   [Anonymous], 2011, C LINNAEUS WIKIPEDIA
   Babar MA, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P67, DOI 10.1109/ICGSE.2008.23
   Barney S., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P146, DOI 10.1109/ICGSE.2011.13
   Battin RD, 2001, IEEE SOFTWARE, V18, P70, DOI 10.1109/52.914750
   Bavani Raja, 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P50, DOI 10.1109/ICGSE.2011.17
   Berenbach B, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P237, DOI 10.1109/ICGSE.2006.261238
   Braun A, 2007, Second IEEE International Conference on Global Software Engineering, Proceedings, P125
   Burger W, 2007, Second IEEE International Conference on Global Software Engineering, Proceedings, P173
   Caprihan G, 2006, 2006 IEEE International Conference on Global Software Engineering, Proceedings, P83, DOI 10.1109/ICGSE.2006.261200
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   Carmel E., 2005, Offshoring Information Technology: Sourcing and Outsourcing to a Global Workforce
   Carmel E, 2007, COMMUN ACM, V50, P40, DOI 10.1145/1290958.1290959
   Casey V, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P163, DOI 10.1109/ICGSE.2008.28
   Casey V, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P33, DOI 10.1109/ICGSE.2006.261214
   Cristal M, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P222, DOI 10.1109/ICGSE.2008.34
   Ebert C, 2001, IEEE SOFTWARE, V18, P62, DOI 10.1109/52.914748
   Gumm DC, 2006, IEEE SOFTWARE, V23, P45, DOI 10.1109/MS.2006.122
   Gwet K. L., 2010, Handbook of inter-rater reliability
   Hawthorne MJ, 2005, PROC INT CONF SOFTW, P643
   Herbsleb JD, 2005, PROC INT CONF SOFTW, P524
   Hofner G., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P35, DOI 10.1109/ICGSE.2011.27
   Hofner G, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P162
   Hossain E, 2009, INT CONF GLOBAL SOFT, P175, DOI 10.1109/ICGSE.2009.25
   Jalali S., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P45, DOI 10.1109/ICGSE.2010.14
   Jordan WJ, 2003, KNOWLEDGE CREATION D, P1
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Meyer M.A., 2001, ASA SIAM S STAT APPL
   Okoli C, 2004, INFORM MANAGE-AMSTER, V42, P15, DOI 10.1016/j.im.2003.11.002
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Poikolainen T, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P60
   Prikladnicki R., 2003, Software Process Improvement and Practice, V8, P267, DOI 10.1002/spip.188
   Prikladnicki R, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P99, DOI 10.1109/ICGSE.2008.36
   Prikladnicki R, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P262
   Prikladnicki R, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P18, DOI 10.1109/ICGSE.2006.261212
   Prikladnicki R, 2010, INFORM SOFTWARE TECH, V52, P779, DOI 10.1016/j.infsof.2010.03.009
   RADATZ J, 1988, COMPUTER, V21, P72, DOI 10.1109/2.20
   Richardson I, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/ICGSE.2008.21
   Robinson M., 2004, Offshore Outsourcing: Business Models, ROI and Best Practices
   Smite Darja, 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P97, DOI 10.1109/ICGSE.2010.19
   Smite D, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICGSE.2008.22
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Szymanski CH, 2007, SECOND IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P40
   Tervonen I, 2009, INT CONF GLOBAL SOFT, P226, DOI 10.1109/ICGSE.2009.30
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
NR 45
TC 70
Z9 73
U1 0
U2 23
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2014
VL 19
IS 1
BP 105
EP 153
DI 10.1007/s10664-012-9217-9
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3HQ
UT WOS:000330983900004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Shin, Y
   Williams, L
AF Shin, Yonghee
   Williams, Laurie
TI Can traditional fault prediction models be used for vulnerability
   prediction?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software metrics; Complexity metrics; Fault prediction; Vulnerability
   prediction; Open source project; Automated text classification
ID STATIC CODE ATTRIBUTES; SOFTWARE
AB Finding security vulnerabilities requires a different mindset than finding general faults in software-thinking like an attacker. Therefore, security engineers looking to prioritize security inspection and testing efforts may be better served by a prediction model that indicates security vulnerabilities rather than faults. At the same time, faults and vulnerabilities have commonalities that may allow development teams to use traditional fault prediction models and metrics for vulnerability prediction. The goal of our study is to determine whether fault prediction models can be used for vulnerability prediction or if specialized vulnerability prediction models should be developed when both models are built with traditional metrics of complexity, code churn, and fault history. We have performed an empirical study on a widely-used, large open source project, the Mozilla Firefox web browser, where 21% of the source code files have faults and only 3% of the files have vulnerabilities. Both the fault prediction model and the vulnerability prediction model provide similar ability in vulnerability prediction across a wide range of classification thresholds. For example, the fault prediction model provided recall of 83% and precision of 11% at classification threshold 0.6 and the vulnerability prediction model provided recall of 83% and precision of 12% at classification threshold 0.5. Our results suggest that fault prediction models based upon traditional metrics can substitute for specialized vulnerability prediction models. However, both fault prediction and vulnerability prediction models require significant improvement to reduce false positives while providing high recall.
C1 [Shin, Yonghee] Depaul Univ, Chicago, IL 60604 USA.
   [Williams, Laurie] N Carolina State Univ, Raleigh, NC 27695 USA.
C3 DePaul University; North Carolina State University
RP Shin, Y (corresponding author), Depaul Univ, Chicago, IL 60604 USA.
EM yshin@cdm.depaul.edu; williams@csc.ncsu.edu
FU National Science Foundation [0716176, 0346903]; Division Of Computer and
   Network Systems; Direct For Computer & Info Scie & Enginr [0716176]
   Funding Source: National Science Foundation; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [0346903] Funding Source: National Science Foundation
FX This work was supported in part by the National Science Foundation Grant
   No. 0716176 and the CAREER Grant No. 0346903. Any opinions expressed in
   this material are those of the author(s) and do not necessarily reflect
   the views of the National Science Foundation. We also thank the NCSU
   Software Engineering Realsearch group for their reviews for the initial
   version of this paper. We appreciate Dr. Robert Bell and Dr. Raffaella
   Settimi for their advice on statistics. Most of all, we thank the
   editors and reviewers of Empirical Software Engineering journal for
   their thorough reviews and helpful suggestions.
CR Alhazmi OH, 2007, COMPUT SECUR, V26, P219, DOI 10.1016/j.cose.2006.10.002
   [Anonymous], 2002, 7007011 RTI NAT I ST
   Antoniol G, 2008, 2008 C CTR ADV STUD
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Arisholm E, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2007.22
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Crews-Meyer KA, 2004, GEOCARTO INT, V19
   FITZPATRICKLINS K, 1981, PHOTOGRAMM ENG REM S, V47, P343
   Gegick M, 2009, INT S ENG SEC SOFTW
   Gegick M., 2008, P 4 ACM WORKSHOP QUA
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Guo L, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P417
   Hall Mark A., 2003, IEEE T KNOWL DATA EN, V15
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Heckman S, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P41
   IEEE, 1988, 98211988 IEEE COMP S
   Jiang Y., 2008, DEFECTS 08 P 2008 WO, P16, DOI [DOI 10.1145/1390817.1390822, 10.1145/1390817.1390822]
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Khoshgoftaar TM, 1996, IEEE SOFTWARE, V13, P65, DOI 10.1109/52.476287
   Kim S., 2007, EUROPEAN SOFTWARE EN, P45
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Krsul I. V., 1998, THESIS PURDUE U W LA
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mende T., 2009, P 5 INT C PRED MOD S, P1
   Meneely A, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P453
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Ostrand T.J., 2007, Proceedings of the 2007 international symposium on Software testing and analysis (ISSTA '07), P219
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Ott R.L., 2015, INTRO STAT METHODS D
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Rice D., 2007, GEEKONOMICS REAL COS
   Shin Y., 2008, WORKSHOP QUALITY PRO, P47
   Shin Y, 2011, IEEE T SOFTWARE ENG
   Witten I. H., 2005, DATA MINING PRACTICA
   Yue Jiang, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P197, DOI 10.1109/ISSRE.2008.54
   Zimmermann Thomas, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P421, DOI 10.1109/ICST.2010.32
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 43
TC 130
Z9 157
U1 1
U2 29
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2013
VL 18
IS 1
BP 25
EP 59
DI 10.1007/s10664-011-9190-8
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 064IW
UT WOS:000313069300002
DA 2024-07-18
ER

PT J
AU Hattori, LP
   Lanza, M
   Robbes, R
AF Hattori, Lile Palma
   Lanza, Michele
   Robbes, Romain
TI Refining code ownership with synchronous changes
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code ownership; Mining software repositories; Fine-grained changes;
   Software visualization
AB When mining software repositories, two distinct sources of information are usually explored: the history log and snapshots of the system. Results of analyses derived from these two sources are biased by the frequency with which developers commit their changes. We argue that the usage of mainstream SCM (software configuration management) systems influences the way that developers work. For example, since it is tedious to resolve conflicts due to parallel commits, developers tend to minimize conflicts by not contemporarily modifying the same file. This however defeats one of the purposes of such systems. We mine repositories created by our tool , which records changes in a central repository whenever a file is compiled locally in the IDE (integrated development environment) by any developer in a multi-developer project. This new source of information can augment the accuracy of analyses and breaks new ground in terms of how such information can assist developers. We illustrate how the information we mine provides a refined notion of code ownership with respect to the one inferred by SCM system data. We demonstrate our approach on three case studies, including an industrial one. Ownership models suffer from the assumption that developers have a perfect memory. To account for their imperfect memory, we integrate into our ownership measurement a model of memory retention, to simulate the effect of memory loss over time. We evaluate the characteristics of this model for several strengths of memory.
C1 [Hattori, Lile Palma; Lanza, Michele] Univ Lugano, REVEAL Fac Informat, CH-6904 Lugano, Switzerland.
   [Robbes, Romain] Univ Chile, Comp Sci Dept DCC, PLEIAD Lab, Santiago, Chile.
C3 Universita della Svizzera Italiana; Universidad de Chile
RP Hattori, LP (corresponding author), Univ Lugano, REVEAL Fac Informat, Via G Buffi 13, CH-6904 Lugano, Switzerland.
EM lile.hattori@usi.ch; michele.lanza@usi.ch; rrobbes@dcc.uchile.cl
RI Lanza, Michele/JNQ-9470-2023; Robbes, Romain/H-3771-2013
OI Lanza, Michele/0000-0003-4391-0197; Robbes, Romain/0000-0003-4569-6868
FU Swiss National Science foundation (SNF) [129496]
FX We gratefully acknowledge the financial support of the Swiss National
   Science foundation for the project "GSync" (SNF Project No. 129496).
CR [Anonymous], 2007, 4 INT WORKSHOP MININ
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Baysal O., 2007, PROC 4 INT WORKSHOP, P7
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   Bird C, 2009, P MSR 2009 6 WORK C
   Carpenter SK, 2008, MEM COGNITION, V36, P438, DOI 10.3758/MC.36.2.438
   Chessa A., 2009, P ANN M COGN SCI SOC, V31, P1175
   Da Silva I.A., 2006, Proc. OOPSLA Workshop on Eclipse Technology eXchange (ETX 07), P11, DOI DOI 10.1145/1188835.1188838
   de Souza Cleidson R. B., 2003, P 2003 INT ACM SIGGR, P105, DOI DOI 10.1145/958160.958177
   Dig D, 2007, PROC INT CONF SOFTW, P427
   Ebbinghaus H., 1913, Memory. A contribution to experimental psychology
   Estublier J, 2005, ACM T SOFTW ENG METH, V14, P383, DOI 10.1145/1101815.1101817
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Gîrba T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P113, DOI 10.1109/IWPSE.2005.21
   Grinter R. E., 1996, Computer Supported Cooperative Work (CSCW), V5, P447, DOI 10.1007/BF00136714
   Hassan AE, 2004, PROC IEEE INT CONF S, P284, DOI 10.1109/ICSM.2004.1357812
   Hattori L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P235, DOI 10.1145/1810295.1810339
   Hattori L, 2009, PROC INT CONF SOFTW, P223, DOI 10.1109/ICSE-COMPANION.2009.5070987
   HEGDE R, 2008, P ASE 2008 23 IEEE A
   Lanza M, 2010, EUR CON SFTWR MTNCE, P202, DOI 10.1109/CSMR.2010.37
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Lippe E., 1992, SIGSOFT Software Engineering Notes, V17, P78, DOI 10.1145/142882.143753
   Ma D, 2009, PROC IEEE INT CONF S, P535, DOI 10.1109/ICSM.2009.5306386
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   McDonald D. W., 2000, CSCW 2000. ACM 2000 Conference on Computer Supported Cooperative Work, P231, DOI 10.1145/358916.358994
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Omori T., 2008, Proceedings of the 2008 international working conference on Mining software repositories, P31
   Robbes R, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P155, DOI 10.1109/IWPSE.2005.32
   Robbes R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P847, DOI 10.1145/1368088.1368219
   Robbes Romain., 2007, MSR 07, P15
   Sarma A., 2008, 16th ACM SIGSOFT International Symposium on Foundation of Software engineering, P113, DOI DOI 10.1145/1453101.1453118
   Sarma A., 2007, C AUTOMATED SOFTWARE, P94
   Schneider K. A., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P106, DOI 10.1049/ic:20040486
   Tu Q, 2001, PROC IEEE INT CONF S, P398, DOI 10.1109/ICSM.2001.972753
   Van Rysselberghe F, 2004, PROC IEEE INT CONF S, P328, DOI 10.1109/ICSM.2004.1357818
   Wixted JT, 2007, PSYCHOL SCI, V18, P133, DOI 10.1111/j.1467-9280.2007.01862.x
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Yu L., 2007, 4 INT WORKSHOP MININ, P8, DOI 10.1109/msr.2007.19
   Zeller A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P316, DOI 10.1109/FOSE.2007.31
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 40
TC 10
Z9 12
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2012
VL 17
IS 4-5
BP 467
EP 499
DI 10.1007/s10664-010-9145-5
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 943WF
UT WOS:000304155700005
DA 2024-07-18
ER

PT J
AU Adolph, S
   Hall, W
   Kruchten, P
AF Adolph, Steve
   Hall, Wendy
   Kruchten, Philippe
TI Using grounded theory to study the experience of software development
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical software engineering research; Grounded theory; Qualitative
   research; Theory generation
ID QUALITY
AB Grounded Theory is a research method that generates theory from data and is useful for understanding how people resolve problems that are of concern to them. Although the method looks deceptively simple in concept, implementing Grounded Theory research can often be confusing in practice. Furthermore, despite many papers in the social science disciplines and nursing describing the use of Grounded Theory, there are very few examples and relevant guides for the software engineering researcher. This paper describes our experience using classical (i.e., Glaserian) Grounded Theory in a software engineering context and attempts to interpret the canons of classical Grounded Theory in a manner that is relevant to software engineers. We provide model to help the software engineering researchers interpret the often fuzzy definitions found in Grounded Theory texts and share our experience and lessons learned during our research. We summarize these lessons learned in a set of fifteen guidelines.
C1 [Adolph, Steve; Hall, Wendy] Univ British Columbia, Sch Nursing, Vancouver, BC V5Z 1M9, Canada.
C3 University of British Columbia
RP Adolph, S (corresponding author), Univ British Columbia, Sch Nursing, Vancouver, BC V5Z 1M9, Canada.
EM stevea@ece.ubc.ca; Wendy.Hall@nursing.ubc.ca; pbk@ece.ubc.ca
RI Kruchten, Philippe/B-2484-2012; Hall, Wendy A/G-1775-2015
OI Kruchten, Philippe/0000-0003-1359-4867; Hall, Wendy/0000-0002-3816-2908
CR Adolph S., 2008, P 2008 C CTR ADV STU
   Annells M, 1996, QUAL HEALTH RES, V6, P379, DOI 10.1177/104973239600600306
   [Anonymous], 2001, Using Grounded Theory in Nursing
   [Anonymous], FAMILY PRACTICE
   [Anonymous], P 28 INT C SOFTW ENG
   BARTELS A, 2006, US SLOWDOWN 2007 WIL
   Benoliel JQ, 1996, QUAL HEALTH RES, V6, P406, DOI 10.1177/104973239600600308
   Boehm Barry, 1995, Annals of Software Engineering, V1
   BOEHM BW, 1984, IEEE T SOFTW ENG, V10
   BOOCH G, 1998, UNIFIED MODELING LAN
   Charmaz K., 2006, CONSTRUCTING GROUNDE, DOI DOI 10.7748/NR.13.4.84.S4
   Cockburn A., 2002, Cutter IT Journal, V15, P6
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cockburn A., 2003, PEOPLE METHODOLOGIES
   COLEMAN G, 2007, INF SOFTW TECHNOL, V49
   Corbin J, 2008, Techniques and procedures for developing grounded theory, V3rd
   Corbin J., 1990, QUAL SOCIOL, V13, P19
   CURTIS W, 1987, P 9 INT C SOFTW ENG
   Dey I., 1999, Grounding grounded theory: guidelines for qualitative inquiry / Ian Dey
   Diaz M, 1997, IEEE SOFTWARE, V14, P75, DOI 10.1109/52.605934
   Dittrich Y, 2007, INFORM SOFTWARE TECH, V49, P531, DOI 10.1016/j.infsof.2007.02.009
   DYBA T, 2005, MEASURING SOFTWARE M
   Emerson R.M., 1995, WRITING ETHNOGRAPHIC
   Fitzgerald B, 1998, INFORM MANAGE-AMSTER, V34, P317, DOI 10.1016/S0378-7206(98)00072-X
   Gasson S., 2003, HDB INFORM SYSTEMS R
   Glaser B., 2001, The Grounded Theory Perspective: Conceptualization Contrasted with Description
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Glaser B.G., 1998, DOING GROUNDED THEOR
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Glaser Barney G., 2004, Forum: Qualitative Social Research, V5, DOI [DOI 10.17169/FQS-5.2.607, 10.17169/fqs-5.2.607]
   GLASER BG, 1965, SOC PROBL, V12, P436, DOI 10.1525/sp.1965.12.4.03a00070
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Hall WA, 2001, QUAL HEALTH RES, V11, P257, DOI 10.1177/104973201129119082
   Harter DE, 2000, MANAGE SCI, V46, P451, DOI 10.1287/mnsc.46.4.451.12056
   HODA R, 2010, P 32 ACM IEEE INT C, V1
   HUGHES J, 2004, ELECT J BUS RES METH
   Jones C., 2000, Software Assessments, Benchmarks, and Best Practices
   Krishnan MS, 2000, MANAGE SCI, V46, P745, DOI 10.1287/mnsc.46.6.745.11941
   LAZERFELD P, 1958, ACAD MIND SOCIAL SCI
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY
   MARTIN A, 2009, AG C 2009 AGILE 09
   MATAVIRE R, 2008, P 2008 ANN RES C S A
   McCallin Antoinette M, 2003, Nurs Crit Care, V8, P203, DOI 10.1046/j.1362-1017.2003.00033.x
   Morse JM, 2001, USING GROUNDED THEORY IN NURSING, P1
   Mulhall A, 2003, J ADV NURS, V41, P306, DOI 10.1046/j.1365-2648.2003.02514.x
   RITTEL HWJ, 1973, POLICY SCI, V4, P155, DOI 10.1007/BF01405730
   Sawyer S, 1998, IBM SYST J, V37, P552, DOI 10.1147/sj.374.0552
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   SHAW M, 2003, IEEE T SOFTW ENG
   Simon H.A., 2013, ADM BEHAV
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Strauss A., 1987, QUALITATIVE ANAL SOC
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Timothy Lister TomDeMarco., 1987, Peopleware: productive projects and teams, Vsecond
   URQHART C, 2001, QUALITATIVE RES IS I
   Whitworth E., 2007, AGILE 2007
NR 58
TC 118
Z9 143
U1 4
U2 46
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2011
VL 16
IS 4
SI SI
BP 487
EP 513
DI 10.1007/s10664-010-9152-6
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 778ZA
UT WOS:000291746700004
DA 2024-07-18
ER

PT J
AU Bate, I
   Khan, U
AF Bate, Iain
   Khan, Usman
TI WCET analysis of modern processors using multi-criteria optimisation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE WCET analysis; Multi-criteria optimisation; Search-based software
   testing
ID REAL-TIME SYSTEMS
AB The Worst-Case Execution Time (WCET) is an important execution metric for real-time systems, and an accurate estimate for this increases the reliability of subsequent schedulability analysis. Performance enhancing features on modern processors, such as pipelines and caches, however, make it difficult to accurately predict the WCET. One technique for finding the WCET is to use test data generated using search algorithms. Existing work on search-based approaches has been successfully used in both industry and academia based on a single criterion function, the WCET, but only for simple processors. This paper investigates how effective this strategy is for more complex processors and to what extent other criteria help guide the search, e.g. the number of cache misses. Not unexpectedly the work shows no single choice of criteria work best across all problems. Based on the findings recommendations are proposed on which criteria are useful in particular situations.
C1 [Bate, Iain] Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
   [Khan, Usman] Univ Cambridge, Comp Lab, Cambridge CB2 3QG, England.
C3 University of York - UK; University of Cambridge
RP Bate, I (corresponding author), Univ York, Dept Comp Sci, York YO10 5DD, N Yorkshire, England.
EM iain.bate@cs.york.ac.uk; usman.khan@cl.cam.ac.uk
CR [Anonymous], SIGARCH COMPUT ARCHI
   Bernat G, 2002, REAL TIM SYST SYMP P, P279, DOI 10.1109/REAL.2002.1181582
   BETTS A, 2006, WCET COVERAGE PIPELI
   Brooks D, 2000, PROCEEDING OF THE 27TH INTERNATIONAL SYMPOSIUM ON COMPUTER ARCHITECTURE, P83, DOI [10.1145/342001.339657, 10.1109/ISCA.2000.854380]
   Burns A., 2001, Real-time Systems and Programming Languages: Ada 95, Real-Time Java and Real-Time POSIX, V3rd
   CHAPMAN R, 1995, THESIS U YORK
   Coello C. A. C., 1999, Knowledge and Information Systems, V1, P269
   EMBERSON P, 2010, T SOFTW ENG
   ERMEDAHL A, WCET PROJECT  BENCHM
   GROSS H, 2000, THESIS U GLAMORGAN P
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Jolliffe I., 2005, ENCY STAT BEHAV SCI, DOI [DOI 10.1002/0470013192, 10.1002/0470013192.bsa501]
   Khan U, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P103, DOI 10.1109/SSBSE.2009.20
   Kim D, 2007, DES AUT TEST EUROPE, P749
   KIRNER R, 2004, P 4 EUR WORKSH WORST
   Lammermann F, 2008, APPL SOFT COMPUT, V8, P1018, DOI 10.1016/j.asoc.2006.06.010
   LUNQVIST T, 1999, P 20 IEEE REAL TIM S, P12
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   POHLHEIM H, 1999, P GEN EV COMP C
   TAN L, 2006, 2 INT S LEV APPL FOR, P241
   Tate J, 2010, COMPUT J, V53, P991, DOI 10.1093/comjnl/bxp077
   TRACEY N, 1998, P INT WORKSH DEP COM
   Wegener J, 1997, SOFTWARE QUAL J, V6, P127, DOI 10.1023/A:1018551716639
   Wegener J, 2001, REAL-TIME SYST, V21, P241, DOI 10.1023/A:1011132221066
   WHITLEY D, 1994, STAT COMPUT, V4, P65, DOI 10.1007/BF00175354
   Wilhelm R, 2008, ACM T EMBED COMPUT S, V7, DOI 10.1145/1347375.1347389
NR 26
TC 9
Z9 10
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2011
VL 16
IS 1
BP 5
EP 28
DI 10.1007/s10664-010-9133-9
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 718CJ
UT WOS:000287097200002
DA 2024-07-18
ER

PT J
AU Voinea, L
   Telea, A
AF Voinea, Lucian
   Telea, Alexandru
TI Visual querying and analysis of large software repositories
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software visualization; Evolution visualization; Repository mining
AB We present a software framework for mining software repositories. Our extensible framework enables the integration of data extraction from repositories with data analysis and interactive visualization. We demonstrate the applicability of the framework by presenting several case studies performed on industry-size software repositories. In each study we use the framework to give answers to one or several software engineering questions addressing a specific project. Next, we validate the answers by comparing them with existing project documentation, by interviewing domain experts and by detailed analyses of the source code. The results show that our framework can be used both for supporting case studies on mining software repository techniques and for building end-user tools for software maintenance
C1 [Voinea, Lucian] SolidSource BV, NL-5658 EV Eindhoven, Netherlands.
   [Telea, Alexandru] Univ Groningen, Inst Math & Comp Sci, NL-9747 AG Groningen, Netherlands.
C3 University of Groningen
RP Voinea, L (corresponding author), SolidSource BV, Grassavanne 14, NL-5658 EV Eindhoven, Netherlands.
EM lucian.voinea@solidsource.nl; a.c.telea@rug.nl
CR BALL T, 1997, P ICSE 97 WORKSH PRO
   BENNETT K., 1999, EMPIR SOFTW ENG, V4, P370
   Bieman JM, 2003, PROG COMPREHEN, P44
   Burch Michael., 2005, P 2005 ACM S SOFTWAR, P37
   Collberg C., 2003, Proceedings of the 2003 ACM symposium on Software visualization-SoftVis '03, P77
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   EICK SG, 1992, IEEE T SOFTWARE ENG, V18, P957, DOI 10.1109/32.177365
   Everitt EL, 2001, CLUSTER ANAL
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Froehlich J, 2004, PROC INT CONF SOFTW, P387, DOI 10.1109/ICSE.2004.1317461
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   GERMAN D, 2004, ICSEKE 04, P336
   German Daniel., 2003, In Proceedings of the 3rd Workshop on Open Source Software Engineering, P63
   GREENWOOD RM, 1998, ASE 98, P293
   Lanza M., 2001, Proceedings of the 4th International Workshop on Principles of Software Evolution, P37
   LOPEZFERNANDEZ L, 2004, MSR 04
   *MICR INC, 2007, AG EMP GAM
   Voinea L., 2006, Proceedings of the International Workshop on Mining Software Repositories, MSR '06, P167
   Voinea L., 2006, P 2006 ACM S SOFTW V, P115
   Voinea L., 2005, Proceedings of the ACM Symposium on Software Visualization, P47, DOI [10.1145/1056018.1056025, DOI 10.1145/1056018.1056025]
   VOINEA L, 2006, SOFTVIS 06, P147
   Voinea L, 2007, COMPUT GRAPH-UK, V31, P410, DOI 10.1016/j.cag.2007.01.031
   Voinea Lucian., 2006, EUROVIS, P187
   Wu Jingwei., 2004, IWPSE '04, P57
   WU X, 2004, WCRE 04, P90
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
   ZIMMERMANN T, 2004, MSR 04
NR 28
TC 8
Z9 9
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2009
VL 14
IS 3
BP 316
EP 340
DI 10.1007/s10664-008-9068-6
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 461TN
UT WOS:000267294500004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Xiao, M
   El-Attar, M
   Reformat, M
   Miller, J
AF Xiao, Man
   El-Attar, Mohamed
   Reformat, Marek
   Miller, James
TI Empirical evaluation of optimization algorithms when used in
   goal-oriented automated test data generation techniques
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE empirical software engineering; optimization techniques; test-data
   generation; empirical results
ID SOFTWARE TEST DATA
AB Software testing is an essential process in software development. Software testing is very costly, often consuming half the financial resources assigned to a project. The most laborious part of software testing is the generation of test-data. Currently, this process is principally a manual process. Hence, the automation of test-data generation can significantly cut the total cost of software testing and the software development cycle in general. A number of automated test-data generation approaches have already been explored. This paper highlights the goal-oriented approach as a promising approach to devise automated test-data generators. A range of optimization techniques can be used within these goal-oriented test-data generators, and their respective characteristics, when applied to these situations remain relatively unexplored. Therefore, in this paper, a comparative study about the effectiveness of the most commonly used optimization techniques is conducted.
C1 Univ Alberta, Dept Elect & Comp Engn, STEAM Lab, Edmonton, AB T6G 2V4, Canada.
C3 University of Alberta
RP Miller, J (corresponding author), Univ Alberta, Dept Elect & Comp Engn, STEAM Lab, 9107-116 St, Edmonton, AB T6G 2V4, Canada.
EM mxiao@ece.ualbert.ca; melattar@ece.ualberta.ca; reform@ece.ualberta.ca;
   jm@ece.ualberta.ca
RI El-Attar, Mohamed/C-4329-2015
OI El-Attar, Mohamed/0000-0002-6709-8212; Reformat, Marek
   Z./0000-0003-4783-0717
CR [Anonymous], 1991, Belew & Booker
   [Anonymous], 1990, Software testing techniques {
   Back T., 1996, EVOLUTIONARY ALGORIT
   Back Thomas., 2000, Evolutionary computation 1: Basic algorithms and operators, V1
   BAKER JE, 1985, P INT C GEN ALG ERLB
   BIRD DL, 1983, IBM SYST J, V22, P229, DOI 10.1147/sj.223.0229
   CARUANA RA, 1988, P 5 INT C MACH LEARN
   CHANGE KH, 1991, J INTELL ROBOT SYST
   Clarke L. A., 1976, IEEE Transactions on Software Engineering, VSE-2, P215, DOI 10.1109/TSE.1976.233817
   Cohen J., 1988, STAT POWER ANAL BEHA
   CORANA A, 1987, ACM T MATH SOFTWARE, V13, P262, DOI 10.1145/29380.29864
   De Jong K. A, 1975, THESIS U MICHIGAN
   Dowsland K.A., 1993, Modern heuristic techniques for combinatorial problems, P20
   Eiben AE, 1999, IEEE T EVOLUT COMPUT, V3, P124, DOI 10.1109/4235.771166
   Goldberg D. E., 1989, GENETIC ALGORITHMS S
   GREFENSTETTE JJ, 1986, IEEE T SYST MAN CYB, V16, P122, DOI 10.1109/TSMC.1986.289288
   Hedges LV., 2014, STAT METHODS META AN
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   HOWDEN WE, 1977, IEEE T SOFTWARE ENG, V3, P266, DOI 10.1109/TSE.1977.231144
   Janikow C.Z., 1991, ICGA, V1991, P31
   JONES B, 1995, P 3 INT C SOFTW QUAL, V2, P435
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   KOAKUTSU S, 1995, UCSCCRL9552
   KOREL B, 1990, CONFERENCE ON SOFTWARE MAINTENANCE 1990, P311
   Korel B., 1996, SIGSOFT Software Engineering Notes, V21, P209, DOI [10.1145/229000.226319, 10.1145/226295.226319]
   Marainen Johannes., 1996, Norrbotten, P62
   MCGRAW KO, 1992, PSYCHOL BULL, V111, P361, DOI 10.1037/0033-2909.111.2.361
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Miki M, 2002, COMPUTATIONAL INTELLIGENCE AND APPLICATIONS, P113
   Miller J, 2004, J SYST SOFTWARE, V73, P183, DOI 10.1016/j.jss.2003.12.019
   MILLS HD, 1987, IEEE SOFTWARE, V4, P19, DOI 10.1109/MS.1987.231413
   OSMAN AH, 1996, META HEURISTICS OVER, P1
   Ramamoorthy C. V., 1976, IEEE Transactions on Software Engineering, VSE-2, P293, DOI 10.1109/TSE.1976.233835
   Schaffer J.D., 1987, Genetic Algorithms and Simulated Annealing
   SCHAFFER JD, 1989, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P51
   Tassey G., 2002, The economic impact of inadequate infrastructure of software testing
   THEVENHODFOSSE P, 1998, P 1998 INT S SOFTW T
   TRACY N, 1998, P INT S SOFTW TEST A
   VOAS J, 1991, IEEE SOFTWARE, V8, P41, DOI 10.1109/52.73748
   Whitley D., 1993, Foundations of Genetic Algorithms II
NR 41
TC 32
Z9 40
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2007
VL 12
IS 2
BP 183
EP 239
DI 10.1007/s10664-006-9026-0
PG 57
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 142YU
UT WOS:000244688000005
DA 2024-07-18
ER

PT J
AU Yang, G
   Zhou, Y
   Chen, X
   Zhang, XY
   Xu, YR
   Han, TT
   Chen, TL
AF Yang, Guang
   Zhou, Yu
   Chen, Xiang
   Zhang, Xiangyu
   Xu, Yiran
   Han, Tingting
   Chen, Taolue
TI A syntax-guided multi-task learning approach for Turducken-style code
   generation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Syntactically-constrained code generation; Turducken-style code;
   Multi-task learning; CodeT5; Abstract syntax tree
AB Due to the development of pre-trained language models, automated code generation techniques have shown great promise in recent years. However, the generated code will not always adhere to syntactic constraints of the target language, especially in the case of Turducken-style code, where declarative code snippets are embedded within imperative programs. In this study, we summarize three significant challenges in regards to syntactic constraints: (1) the efficient representation of syntactic constraints, (2) the effective integration of syntactic information, and (3) the scalable syntax-first decoding algorithm. To address these challenges, we propose a syntax-guided multi-task learning approach TurduckenGen. Specifically, we first explicitly append the type information to the code tokens to capture the representation of syntactic constraints. Then we formalize code generation with syntactic constraint representation as an auxiliary task to enable the model to learn the syntactic constraints of the code. Finally, the syntactically correct code is selected accurately from the multiple candidates with the help of the compiler feedback. Extensive experiments and comprehensive analysis demonstrate the effectiveness and general applicability of our approach after being compared with six state-of-the-art baselines on two Turducken-style code datasets. Finally, we conducted a human study and found the code quality generated by our approach is better than baselines in terms of code readability and semantic similarity.
C1 [Yang, Guang; Zhou, Yu; Zhang, Xiangyu; Xu, Yiran] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
   [Chen, Xiang] Nantong Univ, Sch Informat Sci & Technol, Nantong, Peoples R China.
   [Han, Tingting; Chen, Taolue] Birkbeck Univ London, Dept Comp Sci, London, England.
C3 Nanjing University of Aeronautics & Astronautics; Nantong University;
   University of London; Birkbeck University London
RP Zhou, Y (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
EM novelyg@outlook.com; zhouyu@nuaa.edu.cn; xchencs@ntu.edu.cn;
   zhangx1angyu@nuaa.edu.cn; behumble@nuaa.edu.cn; t.han@bbk.ac.uk;
   t.chen@bbk.ac.uk
RI Chen, Xiang/AAG-3663-2019; Han, Tingting/AFL-9459-2022
OI Chen, Xiang/0000-0002-1180-3891; Chen, Taolue/0000-0002-5993-1665; Zhou,
   Yu/0000-0002-3723-7584; Yang, Guang/0000-0002-3374-6680
FU This work is supported by the National Natural Science Foundation of
   China (No. 61972197), the Natural Science Foundation of Jiangsu Province
   (No. BK20201292), the Collaborative Innovation Center of Novel Software
   Technology and Industrialization, the Open [62272397]; National Natural
   Science Foundation of China [BK20201292]; Natural Science Foundation of
   Jiangsu Province; Collaborative Innovation Center of Novel Software
   Technology and Industrialization [NJ2020022]; Open Project of Key
   Laboratory of Safety-Critical Software for Nanjing University of
   Aeronautics and Astronautics, Ministry of Industry and Information
   Technology [KYCX23_0396]; Postgraduate Research amp; Practice Innovation
   Program of Jiangsu Province [KFKT2022A03]; State Key Laboratory of Novel
   Software Technology, Nanjing University; Birkbeck BEI School Project
   (EFFECT)
FX This work is supported by the National Natural Science Foundation of
   China (No. 61972197), the Natural Science Foundation of Jiangsu Province
   (No. BK20201292), the Collaborative Innovation Center of Novel Software
   Technology and Industrialization, the Open Project of Key Laboratory of
   Safety-Critical Software for Nanjing University of Aeronautics and
   Astronautics, Ministry of Industry and Information Technology (No.
   NJ2020022), and the Postgraduate Research & Practice Innovation Program
   of Jiangsu Province (No. KYCX23_0396). T. Chen is partially supported by
   an oversea grant from the State Key Laboratory of Novel Software
   Technology, Nanjing University (KFKT2022A03), Birkbeck BEI School
   Project (EFFECT), and National Natural Science Foundation of China (No.
   62272397).
CR Ahmad WU, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2655
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   Bailey MW., 2009, WORKSH DECL ASP MULT
   Bogin B, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P4560
   Chakraborty Saikat, 2022, ESEC/FSE 2022: Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P18, DOI 10.1145/3540250.3549162
   Dahl D. A., 1994, HUMAN LANGUAGE TECHN, P43
   Dauphin YN, 2017, PR MACH LEARN RES, V70
   Dong YH, 2022, Arxiv, DOI arXiv:2211.00818
   Eghbali A, 2022, PROC IEEE ACM INT C, P341, DOI [10.1109/ICSE-Companion55297.2022.9793747, 10.1145/3510454.3528648]
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Fernandes S., 2015, Proceedings of the 19th International Database Engineering Applications Symposium, P202, DOI DOI 10.1145/2790755.2790797
   Gao TY, 2021, 59TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 11TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (ACL-IJCNLP 2021), VOL 1, P3816
   Gifford DK, 1986, P 1986 ACM C LISP FU, P28, DOI DOI 10.1145/319838.319848
   Gu YX, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P8410
   Guang Yang, 2021, 2021 8th International Conference on Dependable Systems and Their Applications (DSA), P30, DOI 10.1109/DSA52907.2021.00013
   Guo D., 2021, ICLR
   Guo DY, 2022, PROCEEDINGS OF THE 60TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), VOL 1: (LONG PAPERS), P7212
   Hayati SA, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P925
   Hu X, 2022, PROC INT CONF SOFTW, P1693, DOI 10.1145/3510003.3510152
   Hu X, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P5, DOI 10.1109/ASE51524.2021.9678552
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Huang JJ, 2022, Arxiv, DOI arXiv:2211.09374
   Huang JY, 2021, Arxiv, DOI arXiv:2108.00804
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Hussain Y, 2021, IET SOFTW, V15, P199, DOI 10.1049/sfw2.12017
   Hussain Y, 2020, INT J SOFTW ENG KNOW, V30, P649, DOI 10.1142/S0218194020500230
   Hussain Y, 2020, INFORM SOFTWARE TECH, V125, DOI 10.1016/j.infsof.2020.106309
   Iyer S, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P963, DOI 10.18653/v1/P17-1089
   Klein G, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017): SYSTEM DEMONSTRATIONS, P67, DOI 10.18653/v1/P17-4012
   Le H, 2022, Arxiv, DOI arXiv:2207.01780
   Legendre P, 2005, J AGR BIOL ENVIR ST, V10, P226, DOI 10.1198/108571105X46642
   Li XLS, 2021, 59TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 11TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (ACL-IJCNLP 2021), VOL 1, P4582
   Liguori P, 2021, PROC INT SYMP SOFTW, P321, DOI 10.1109/ISSRE52982.2021.00042
   Lin Q, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P1417
   Lin XV, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P4870
   Ling W, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P599
   Liu F, 2023, Arxiv, DOI arXiv:2302.03908
   Liu F, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10140-7
   Liu F, 2020, IEEE INT CONF AUTOM, P473, DOI 10.1145/3324884.3416591
   Liu PF, 2023, ACM COMPUT SURV, V55, DOI 10.1145/3560815
   Liu Y, 2024, Arxiv, DOI arXiv:2302.09587
   Lloyd JohnW., 1994, GULPPRODE, P18
   Longpre S, 2023, Arxiv, DOI arXiv:2301.13688
   Lu S., 2021, P NEUR INF PROC SYST, V1
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Mahmud T, 2015, 2015 2ND INTERNATIONAL CONFERENCE ON ELECTRICAL INFORMATION AND COMMUNICATION TECHNOLOGY (EICT), P78, DOI 10.1109/EICT.2015.7391926
   Mou LL, 2015, Arxiv, DOI arXiv:1510.07211
   Niu CG, 2022, PROC INT CONF SOFTW, P2006, DOI 10.1145/3510003.3510096
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Popescu A.-M., 2003, IUI 03. 2003 International Conference on Intelligent User Interfaces, P149, DOI 10.1145/604045.604070
   Radford A., 2019, LANGUAGE MODELS ARE
   Raffel C, 2020, J MACH LEARN RES, V21
   Ren S, 2020, Arxiv, DOI [arXiv:2009.10297, 10.48550/arXiv.2009.10297]
   Rubin O, 2021, SPNLP 2021: THE 5TH WORKSHOP ON STRUCTURED PREDICTION FOR NLP, P12
   Sánchez-Cartagena VM, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8502
   Scholak T, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P9895
   Sun ZY, 2020, AAAI CONF ARTIF INTE, V34, P8984
   Sun ZY, 2019, AAAI CONF ARTIF INTE, P7055
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang Bailin, 2020, ACL, P7567
   Wang Chaozheng, 2022, ESEC/FSE 2022: Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P382, DOI 10.1145/3540250.3549113
   Wang DZ, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P48, DOI 10.1109/SANER50967.2021.00014
   Wang X, 2022, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2022), P9
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wiseman Sam, 2016, EMNLP, P1296, DOI DOI 10.18653/V1/D16-1137
   Xia Xiaobo, 2019, Advances in neural information processing systems, V32
   Xie R, 2021, INT C PROGRAM COMPRE, P138, DOI 10.1109/ICPC52881.2021.00022
   Xiong Y, 2021, arXiv
   Xu FF, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3487569
   Xuan K, 2021, Arxiv, DOI arXiv:2105.07911
   Yang G, 2022, J Syst Softw
   Yang G, 2023, J SYST SOFTWARE, V197, DOI 10.1016/j.jss.2022.111577
   Yang G, 2022, Arxiv, DOI arXiv:2202.09785
   Yang G, 2022, EUR CON SFTWR MTNCE, P361, DOI 10.1109/SANER53432.2022.00052
   Yang G, 2021, ASIA PAC SOFWR ENG, P213, DOI 10.1109/APSEC53868.2021.00029
   Yin PC, 2018, CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P7
   Yu T., 2018, P 2018 C N AM CHAPT, V2, P588, DOI DOI 10.18653/V1/N18-2093
   Yu T, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P4511
   Yu T, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P1962
   Yu T, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P3911
   Zelle JM, 1996, PROCEEDINGS OF THE THIRTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE AND THE EIGHTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE, VOLS 1 AND 2, P1050
   Zhong VC, 2017, Arxiv, DOI arXiv:1709.00103
NR 83
TC 1
Z9 1
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 141
DI 10.1007/s10664-023-10372-1
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U1RC8
UT WOS:001082634100001
DA 2024-07-18
ER

PT J
AU Bjarnason, E
   Lang, F
   Mjöberg, A
AF Bjarnason, Elizabeth
   Lang, Franz
   Mjoberg, Alexander
TI An empirically based model of software prototyping: a mapping study and
   a multi-case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Prototyping; Agile; Requirements engineering; Systematic mapping study;
   Case study; Practices
ID CHALLENGES; STAGE
AB Context Prototyping is an established practice within product and user interface design that is also used as a requirements engineering (RE) practice within agile development. Even so, there is a lack of theory on prototyping.Aims Our main research objective is to support practitioners in improving on their prototyping practices.Method We have designed a model that describes key aspects of the practice of prototyping. The model is based on a systematic mapping study consisting of thirty-three primary studies and on empirical data from twelve case companies. We validate and demonstrate the applicability of our model through a focus group at one company and through semi-structured interviews at eleven (other) startup companies.Results Our prototyping aspects model (PAM) consists of five aspects of prototyping, namely purpose, prototype scope, prototype media, prototype use, and exploration strategy. This model has enabled practitioners to discuss their prototyping practices in terms of the concepts provided by our model.Conclusions The model can be used to categorise prototyping instances and can thereby support practitioners in reflecting and improving on their prototyping practices.
C1 [Bjarnason, Elizabeth; Lang, Franz; Mjoberg, Alexander] Lund Univ, Dept Comp Sci, Lund, Sweden.
C3 Lund University
RP Bjarnason, E (corresponding author), Lund Univ, Dept Comp Sci, Lund, Sweden.
EM elizabeth.bjarnason@cs.lth.se; franz.langg@icloud.com;
   alexander.mjoberg@gmail.com
OI Bjarnason, Elizabeth/0000-0001-9070-0008
FU We thank the participants at Telavox and the interviewees at the
   startups for good collaboration, and for investing their time and
   engagement in this study. This work was partly funded by the Swedish
   strategic research environment ELLIIT.; Swedish strategic research
   environment ELLIIT
FX We thank the participants at Telavox and the interviewees at the
   startups for good collaboration, and for investing their time and
   engagement in this study. This work was partly funded by the Swedish
   strategic research environment ELLIIT.
CR Acosta R. D., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P66, DOI 10.1109/ICRE.1994.292401
   Alves C, 2020, INT REQUIR ENG CONF, P311, DOI 10.1109/RE48521.2020.00041
   Nguyen-Duc A, 2017, LECT NOTES BUS INF P, V283, P20, DOI 10.1007/978-3-319-57633-6_2
   ARANO T, 1993, P INT COMP SOFTW APP, P56, DOI 10.1109/CMPSAC.1993.404215
   Batova T., 2016, 2016 IEEE INT PROF C, P1
   Bellomo S, 2013, 2013 2ND INTERNATIONAL WORKSHOP ON THE TWIN PEAKS OF REQUIREMENTS AND ARCHITECTURE (TWINPEAKS), P8, DOI 10.1109/TwinPeaks.2013.6614717
   Berg V, 2018, J SYST SOFTWARE, V144, P255, DOI 10.1016/j.jss.2018.06.043
   Bjarnason E, 2021, ESEM, V2021, P1
   Bjarnason E., 2021, Data set for systematic mapping study on prototyping aspects and protocol for focus group and case study
   Bjarnason E, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P206, DOI 10.1109/REW53955.2021.00038
   Bjarnason E, 2016, INFORM SOFTWARE TECH, V77, P61, DOI 10.1016/j.infsof.2016.03.008
   Bjarnason E, 2014, IEEE SOFTWARE, V31, P37, DOI 10.1109/MS.2014.26
   Block Z., 1985, Harvard Business Review
   Bruegger P., 2009, PROC 7 INT C MOBILE, P129
   Budde R., 1990, Prototyping revisited., V90, P418
   Cafer F, 2009, 2009 24TH INTERNATIONAL SYMPOSIUM ON COMPUTER AND INFORMATION SCIENCES, P517
   Chen Chen, 1994, Proceedings. Third Symposium on Assessment of Quality Software Development Tools (Cat. No.94TH0635-3), P171, DOI 10.1109/AQSDT.1994.315753
   Ciriello RF, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P163, DOI 10.1109/ICSE-SEIP.2017.24
   Derboven J., 2010, Proceedings of the 6th Nordic Conference on Human- Computer Interaction: Extending Boundaries, NordiCHI '10, P148, DOI DOI 10.1145/1868914.1868935
   Dow SP, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2807
   Fairley RE, 2005, COMPUTER, V38, P34, DOI 10.1109/MC.2005.303
   Fern D. A., 1989, Proceedings of the Twenty-Second Annual Hawaii International Conference on System Sciences. Vol.II: Software Track (IEEE Cat. No.89TH0243-6), P377, DOI 10.1109/HICSS.1989.48015
   Giardino C, 2015, LECT NOTES BUS INF P, V212, P52, DOI 10.1007/978-3-319-18612-2_5
   Giardino C, 2014, IEEE SOFTWARE, V31, P28, DOI 10.1109/MS.2014.129
   GOLDMAN N, 1992, 14TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING : PROCEEDINGS, P158
   Grevet C., 2015, 33 ANN ACM C HUM FAC, P4047
   Gupta V, 2021, IEEE MULTIMEDIA, V28, P107, DOI 10.1109/MMUL.2021.3122539
   Hakansson Ebba, 2020, 2020 IEEE First International Workshop on Requirements Engineering for Well-Being, Aging, and Health (REWBAH), P57, DOI 10.1109/REWBAH51211.2020.00013
   Hakim J, 2000, IEEE PROFESSIONAL COMMUNICATION SOCIETY INTERNATIONAL PROFESSIONAL COMMUNICATION CONFERENCE AND ACM SPECIAL INTEREST GROUP ON DOCUMENTATION CONFERENCE, P47, DOI 10.1109/IPCC.2000.887260
   Hart MA, 2012, J PROD INNOVAT MANAG, V29, P508
   Hartson R., 2019, the UX book, V2nd
   Heisler K. G., 1989, Proceedings of the Twenty-Second Annual Hawaii International Conference on System Sciences. Vol.II: Software Track (IEEE Cat. No.89TH0243-6), P348, DOI 10.1109/HICSS.1989.48011
   Hendry DG., 2005, CHI, V05, P1447
   Jaskiewicz T, 2018, DIS 2018: PROCEEDINGS OF THE 2018 DESIGNING INTERACTIVE SYSTEMS CONFERENCE, P547, DOI 10.1145/3196709.3196821
   Käpyaho M, 2015, INT REQUIR ENG CONF, P334, DOI 10.1109/RE.2015.7320450
   Karras O, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P118, DOI 10.1109/REW.2017.16
   Klotins E, 2021, IEEE T SOFTWARE ENG, V47, P498, DOI 10.1109/TSE.2019.2900213
   Kordon F., 1994, ETFA '94. 1994 IEEE Symposium on Emerging Technologies and Factory Automation. (SEIKEN Symposium). Novel Disciplines for the Next Century Proceedings (Cat. No.94TH8000), P396, DOI 10.1109/ETFA.1994.401984
   Lauesen S., 2005, USER INTERFACE DESIG
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   Lenarduzzi V, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P112, DOI 10.1109/SEAA.2016.56
   LICHTER H, 1994, IEEE T SOFTWARE ENG, V20, P825, DOI 10.1109/32.368126
   Lim YK, 2008, ACM T COMPUT-HUM INT, V15, DOI 10.1145/1375761.1375762
   Liu L., 2003, Proceedings from Computer Human Interactions Extended Abstracts on Human Factors in Computing Systems, P1030
   McCurdy M., 2006, Conference on Human Factors in Computing Systems. CHI2006, P1233
   Nielsen J., 1993, Usability Engineering: AP PROFESSIONAL
   Olsen D., 2015, The Lean Product Playbook-How to Innovate with Minimum Viable Products and Rapid Customer Feedback, DOI [10.1002/9781119154822, DOI 10.1002/9781119154822]
   Osterwalder A., 2014, VALUE PROPOSITION DE
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Rahman A, 2017, INT ICE CONF ENG, P571, DOI 10.1109/ICE.2017.8279936
   Raja U.A., 2009, 2 INT C COMP CONTR C, P1
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Ratcliff B., 1988, Proceedings COMPSAC 88: The Twelfth International Computer Software and Applications Conference (Cat. No.88CH2611-2), P127, DOI 10.1109/CMPSAC.1988.17162
   Rudd Jim, 1996, Interactions, V3, P76, DOI DOI 10.1145/223500.223514
   Schneider K, 1996, PROC INT CONF SOFTW, P522, DOI 10.1109/ICSE.1996.493446
   Sefelin R., 2003, CHI 03 EXTENDED ABST, P778, DOI [DOI 10.1145/765891.765986, 10.1145/765891., DOI 10.1145/765891]
   Sergio L.M., 2015, Human-Computer Interaction
   Shepherd DA., 2020, Entrepreneurship: Theory and Practice
   Svensson RB, 2015, LECT NOTES COMPUT SC, V9013, P230, DOI 10.1007/978-3-319-16101-3_15
   Teece DJ, 2010, LONG RANGE PLANN, V43, P172, DOI 10.1016/j.lrp.2009.07.003
   Terho H, 2016, LECT NOTES COMPUT SC, V10027, P571, DOI 10.1007/978-3-319-49094-6_42
   Toffolon C., 2008, 3 INT C SOFTW ENG AD, P284
   Tripathi N, 2018, J SYST SOFTWARE, V146, P130, DOI 10.1016/j.jss.2018.08.059
   Tronvoll SA, 2017, PROC CIRP, V60, P554, DOI 10.1016/j.procir.2017.01.049
   Tullis T.S., 1990, P HUMAN FACTORS ERGO, P266
   Wiberg M, 2014, PROCEEDINGS OF THE NORDICHI'14: THE 8TH NORDIC CONFERENCE ON HUMAN-COMPUTER INTERACTION: FUN, FAST, FOUNDATIONAL, P531, DOI 10.1145/2639189.2639487
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Yasar A.-U.-H., 2007, Mobility '07: Proceedings of the 4th International Conference on Mobile Technology, Applications, and Systems and the 1st International Symposium on Computer Human Interaction in Mobile Technology, P468
   Zainuddin FB, 2012, ASIA PAC SOFWR ENG, P654, DOI 10.1109/APSEC.2012.132
   Zink L, 2017, INT ICE CONF ENG, P68, DOI 10.1109/ICE.2017.8279871
NR 71
TC 0
Z9 0
U1 2
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2023
VL 28
IS 5
AR 115
DI 10.1007/s10664-023-10331-w
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA Q6JF1
UT WOS:001058558600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Ernst, NA
   Robillard, MP
AF Ernst, Neil A.
   Robillard, Martin P.
TI A study of documentation for software architecture
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Developer onboarding; Software documentation; Software architecture;
   Documentation style; Program comprehension
ID KNOWLEDGE; MODELS
AB Documentation is an important mechanism for disseminating software architecture knowledge. Software project teams can employ vastly different formats for documenting software architecture, from unstructured narratives to standardized documents. We explored to what extent this documentation format may matter to newcomers joining a software project and attempting to understand its architecture. We conducted a controlled questionnaire-based study wherein we asked 65 participants to answer software architecture understanding questions using one of two randomly-assigned documentation formats: narrative essays, and structured documents. We analyzed the factors associated with answer quality using a Bayesian ordered categorical regression and observed no significant association between the format of architecture documentation and performance on architecture understanding tasks. Instead, prior exposure to the source code of the system was the dominant factor associated with answer quality. We also observed that answers to questions that require applying and creating activities were statistically significantly associated with the use of the system's source code to answer the question, whereas the document format or level of familiarity with the system were not. Subjective sentiment about the documentation format was comparable: Although more participants agreed that the structured document was easier to navigate and use for writing code, this relation was not statistically significant. We conclude that, in the limited experimental context studied, our results contradict the hypothesis that the format of architectural documentation matters. We surface two more important factors related to effective use of software architecture documentation: prior familiarity with the source code, and the type of architectural information sought.
C1 [Ernst, Neil A.] Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
   [Robillard, Martin P.] McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
C3 University of Victoria; McGill University
RP Ernst, NA (corresponding author), Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
EM nernst@uvic.ca; martin@cs.mcgill.ca
FU We thank Omar Elazhary for his feedback on the study and assistance with
   the exercise, and Jin Guo and Eirini Kalliamvakou for help with data
   collection. We are also grateful to Mathieu Nassif, Deeksha Arya, and
   the anonymous reviewers for their constructi; NSERC
FX We thank Omar Elazhary for his feedback on the study and assistance with
   the exercise, and Jin Guo and Eirini Kalliamvakou for help with data
   collection. We are also grateful to Mathieu Nassif, Deeksha Arya, and
   the anonymous reviewers for their constructive feedback. This work was
   funded by NSERC
CR Anderson L. W., 2001, A Taxonomy for Learning, Teaching, and Assessing: A Revision of Bloom's Taxonomy of Educational Objectives
   Díaz-Pace JA, 2016, J DATA SEMANT, V5, P37, DOI 10.1007/s13740-015-0053-0
   [Anonymous], 2010, Just Enough Software Architecture: a Risk-Driven Approach
   Britto R, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110699
   Britto R, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1921
   Brown A., 2012, The Architecture of Open Source Applications
   Bürkner PC, 2019, ADV METH PRACT PSYCH, V2, P77, DOI 10.1177/2515245918823199
   Capilla R, 2016, J SYST SOFTWARE, V116, P191, DOI 10.1016/j.jss.2015.08.054
   Casalnuovo C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P817, DOI 10.1145/2786805.2786854
   Clerc V, 2007, LECT NOTES COMPUT SC, V4880, P231
   Dagenais B., 2010, Proc. of the ICSE 10, P275, DOI DOI 10.1145/1806799.1806842
   de Boer RC, 2007, LECT NOTES COMPUT SC, V4880, P197
   de Graaf KA, 2016, SCI COMPUT PROGRAM, V121, P75, DOI 10.1016/j.scico.2015.10.014
   de Graaf K. A., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P121, DOI 10.1109/WICSA-ECSA.212.20
   Ding W, 2014, INFORM SOFTWARE TECH, V56, P545, DOI 10.1016/j.infsof.2014.01.008
   Fagerholm F, 2014, IEEE SOFTWARE, V31, P54, DOI 10.1109/MS.2014.107
   Furia CA, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3490953
   Galster Matthias, 2014, 2014 IEEE/IFIP Conference on Software Architecture (WICSA), P239, DOI 10.1109/WICSA.2014.28
   Garlan David, 2010, SEI Series in Software Engineering, Vsecond
   Gelman A., 2020, arXiv, DOI 10.48550/ARXIV.2011.01808
   Heijstek W, 2011, INT SYMP EMP SOFTWAR, P167, DOI 10.1109/ESEM.2011.25
   Jansen A, 2009, J SYST SOFTWARE, V82, P1232, DOI 10.1016/j.jss.2009.04.052
   Jolak R, 2020, EMPIR SOFTW ENG, V25, P4427, DOI 10.1007/s10664-020-09835-6
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Labuschagne A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P381, DOI 10.1109/MSR.2015.45
   Lin B, 2017, INT CONF GLOBAL SOFT, P66, DOI 10.1109/ICGSE.2017.11
   McElreath R., 2020, STAT RETHINKING BAYE, DOI DOI 10.1201/9780429029608
   Robillard MP, 2016, P 38 ACM IEEE INT C
   Rohrer JM, 2018, ADV METH PRACT PSYCH, V1, P27, DOI 10.1177/2515245917745629
   Rozanski Nick, 2012, Software systems architecture: working with stakeholders using viewpoints and perspectives, V2nd
   Schoonewille H.H., 2011, Proceedings of the 29th ACM International Conference on Design of Communication (SIGDOC '11), P211
   Spinellis D., 2009, BEAUTIFUL ARCHITECTU, V1st
   Steinmacher I, 2019, IEEE SOFTWARE, V36, P41, DOI 10.1109/MS.2018.110162131
   Steinmacher I, 2015, INFORM SOFTWARE TECH, V59, P67, DOI 10.1016/j.infsof.2014.11.001
   Tang A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P107, DOI 10.1109/ICSA.2017.15
   Torkar R, 2022, IEEE T SOFTWARE ENG, V48, P2053, DOI 10.1109/TSE.2020.3048991
   van Deursen A, 2017, PROCEEDINGS OF THE 2017 ACM SIGCSE TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION (SIGCSE'17), P591, DOI 10.1145/3017680.3017737
   Vehtari A, 2017, STAT COMPUT, V27, P1413, DOI 10.1007/s11222-016-9696-4
   Waterman M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P347, DOI 10.1109/ICSE.2015.54
NR 39
TC 0
Z9 0
U1 4
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2023
VL 28
IS 5
AR 122
DI 10.1007/s10664-023-10347-2
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA R8IX0
UT WOS:001066748900001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ayas, HM
   Leitner, P
   Hebig, R
AF Ayas, Hamdy Michael
   Leitner, Philipp
   Hebig, Regina
TI An empirical study of the systemic and technical migration towards
   microservices
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Microservices; Migrations; Grounded theory; Empirical research
ID CLOUD
AB ContextAs many organizations modernize their software architecture and transition to the cloud, migrations towards microservices become more popular. Even though such migrations help to achieve organizational agility and effectiveness in software development, they are also highly complex, long-running, and multi-faceted.ObjectiveIn this study we aim to comprehensively map the journey towards microservices and describe in detail what such a migration entails. In particular, we aim to discuss not only the technical migration, but also the long-term journey of change, on a systemic level.MethodOur research method is an inductive, qualitative study on two data sources. Two main methodological steps take place - interviews and analysis of discussions from StackOverflow. The analysis of both, the 19 interviews and 215 StackOverflow discussions, is based on techniques found in grounded theory.ResultsOur results depict the migration journey, as it materializes within the migrating organization, from structural changes to specific technical changes that take place in the work of engineers. We provide an overview of how microservices migrations take place as well as a deconstruction of high level modes of change to specific solution outcomes. Our theory contains 2 modes of change taking place in migration iterations, 14 activities and 53 solution outcomes of engineers. One of our findings is on the architectural change that is iterative and needs both a long and short term perspective, including both business and technical understanding. In addition, we found that a big proportion of the technical migration has to do with setting up supporting artifacts and changing the paradigm that software is developed.
C1 [Ayas, Hamdy Michael; Leitner, Philipp] Chalmers Univ Technol, Lindholmsplatsen 1, Kuggen 351, S-41756 Gothenburg, Sweden.
   [Ayas, Hamdy Michael; Leitner, Philipp] Univ Gothenburg, Lindholmsplatsen 1, Kuggen 351, S-41756 Gothenburg, Sweden.
   [Hebig, Regina] Univ Rostock, Albert Einstein Str 22, Rostock, Germany.
C3 Chalmers University of Technology; University of Gothenburg; University
   of Rostock
RP Ayas, HM (corresponding author), Chalmers Univ Technol, Lindholmsplatsen 1, Kuggen 351, S-41756 Gothenburg, Sweden.; Ayas, HM (corresponding author), Univ Gothenburg, Lindholmsplatsen 1, Kuggen 351, S-41756 Gothenburg, Sweden.
EM ayas@chalmers.se; philipp.leitner@chalmers.se;
   regina.hebig@uni-rostock.de
RI Hebig, Regina/B-5284-2015
OI Michael Ayas, Hamdy/0000-0002-3926-3196
FU Vinnova (Sweden's innovation agency) [2018-05010]; Vinnova [2018-05010]
   Funding Source: Vinnova
FX AcknowledgementsThis research has received funding from Vinnova
   (Sweden's innovation agency) under the grant number 2018-05010. We would
   like to thank the anonymous reviewers for their valuable input.
CR Ahmad A., 2014, Proceedings of the WICSA 2014 Companion Volume. WICSA'14 Companion, DOI [DOI 10.1145/2578128.2578232, 10.1145/2578128.2578232]
   Auer F, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106600
   Balalaie A, 2018, SOFTWARE PRACT EXPER, V48, P2019, DOI 10.1002/spe.2608
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Baltes S, 2021, Arxiv, DOI arXiv:2002.07764
   Baltes S, 2019, EMPIR SOFTW ENG, V24, P1259, DOI 10.1007/s10664-018-9650-5
   Borges M, 2018, INFORM SOFTWARE TECH, V95, P346, DOI 10.1016/j.infsof.2017.11.014
   Camilli M, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10088-0
   Charmaz K., 2006, CONSTRUCTING GROUNDE, DOI DOI 10.7748/NR.13.4.84.S4
   Chen ZP, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P750, DOI 10.1145/3368089.3409759
   Di Francesco P, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P29, DOI 10.1109/ICSA.2018.00012
   Di Francesco P, 2019, J SYST SOFTWARE, V150, P77, DOI 10.1016/j.jss.2019.01.001
   Dragoni N., 2017, PRESENT ULTERIOR SOF, P195, DOI DOI 10.1007/978-3-319-67425-4_12
   Dragoni N, 2018, LECT NOTES COMPUT SC, V10742, P95, DOI 10.1007/978-3-319-74313-4_8
   Fritzsch J, 2019, PROC IEEE INT CONF S, P481, DOI 10.1109/ICSME.2019.00081
   Fritzsch J, 2019, LECT NOTES COMPUT SC, V11350, P128, DOI 10.1007/978-3-030-06019-0_10
   Gholami MF, 2017, INFORM SYST, V67, P100, DOI 10.1016/j.is.2017.03.008
   Gysel M, 2016, LECT NOTES COMPUT SC, V9846, P185, DOI 10.1007/978-3-319-44482-6_12
   Hassan S, 2020, SOFTWARE PRACT EXPER, V50, P1651, DOI 10.1002/spe.2869
   Jain S, 2015, 6TH INTERNATIONAL CONFERENCE ON COMPUTER & COMMUNICATION TECHNOLOGY (ICCCT-2015), P62, DOI 10.1145/2818567.2818579
   Jamshidi P, 2014, SERVICE ORIENTED COM
   Jamshidi P, 2018, IEEE SOFTWARE, V35, P24
   Knoche H, 2018, IEEE SOFTWARE, V35, P44, DOI 10.1109/MS.2018.2141035
   Lenarduzzi V, 2020, DOES MIGRATING MONOL, DOI [10.1016/j.jss.2020.110710,1902.06282, DOI 10.1016/J.JSS.2020.110710,1902.06282]
   Lin J, 2016, 2016 INT C APPL SYST
   Loukiala A, 2021, LECT NOTES COMPUT SC, V13126, P36, DOI 10.1007/978-3-030-91452-3_3
   Mazlami G, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS 2017), P524, DOI 10.1109/ICWS.2017.61
   Michael Ayas H., 2022, SYSTEMIC TECHNICAL M, DOI [10.5281/zenodo.6422058, DOI 10.5281/ZENODO.6422058]
   MichaelAyas H, 2021, FACING GIANT GROUNDE
   MichaelAyas H, PRODUCT FOCUSED SOFT, V13126, P20
   Newman S., 2015, BUILDING MICROSERVIC
   Newman Sam, 2019, Monolith to Microservices: Evolutionary Patterns to Transform Your Monolith
   Ntentos E, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P36, DOI 10.1109/ICSA51549.2021.00012
   Ntentos E, 2019, LECT NOTES COMPUT SC, V11681, P20, DOI 10.1007/978-3-030-29983-5_2
   Papoutsoglou M, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111113
   Ralph P, 2019, IEEE T SOFTWARE ENG, V45, P712, DOI 10.1109/TSE.2018.2796554
   Singleton A, 2016, IEEE CLOUD COMPUT, V3, P16, DOI 10.1109/MCC.2016.109
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Tahir A, 2020, INFORM SOFTWARE TECH, V125, DOI 10.1016/j.infsof.2020.106333
   Taibi D, 2020, MICROSERVICES: SCIENCE AND ENGINEERING, P111, DOI 10.1007/978-3-030-31646-4_5
   Taibi D, 2018, IEEE SOFTWARE, V35, P56, DOI 10.1109/MS.2018.2141031
   Taibi D, 2017, IEEE CLOUD COMPUT, V4, P22, DOI 10.1109/MCC.2017.4250931
   Thönes J, 2015, IEEE SOFTWARE, V32, P116, DOI 10.1109/MS.2015.11
   Waseem M, 2021, LECT NOTES COMPUT SC, V13121, P850, DOI 10.1007/978-3-030-91431-8_62
   Waseem M, 2021, J SYST SOFTWARE, V182, DOI 10.1016/j.jss.2021.111061
   Waseem M, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110798
   Wen JF, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P416, DOI 10.1145/3468264.3468558
   Wu MH, 2022, EUR CON SFTWR MTNCE, P432, DOI 10.1109/SANER53432.2022.00058
   Zhang ZP, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P196
   Zhao JF, 2014, INT J AUTOM COMPUT, V11, P143, DOI 10.1007/s11633-014-0776-7
   Zhou X, 2021, IEEE T SOFTWARE ENG, V47, P243, DOI 10.1109/TSE.2018.2887384
   Zimmermann O, 2017, COMPUT SCI-RES DEV, V32, P301, DOI 10.1007/s00450-016-0337-0
   Zimmermann O, 2017, COMPUTING, V99, P129, DOI 10.1007/s00607-016-0520-y
NR 54
TC 2
Z9 2
U1 2
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 85
DI 10.1007/s10664-023-10308-9
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA G8NG6
UT WOS:000991653500001
PM 37250851
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Ciurumelea, A
   Alexandru, CV
   Gall, HC
   Proksch, S
AF Ciurumelea, Adelina
   Alexandru, Carol V.
   Gall, Harald C.
   Proksch, Sebastian
TI Completing Function Documentation Comments Using Structural Information
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Comment completion; Python documentation strings; Javadocs; Neural
   language models
AB Source code comments are a cornerstone of software documentation facilitating feature development and maintenance. Well-defined documentation formats, like Javadoc, make it easy to include structural metadata used to, for example, generate documentation manuals. However, the actual usage of structural elements in source code comments has not been studied yet. We investigate to which extent these structural elements are used in practice and whether the added information can be leveraged to improve tools assisting developers when writing comments. Existing research on comment generation traditionally focuses on automatic generation of summaries. However, recent works have shown promising results when supporting comment authoring through a next-word prediction. In this paper, we present an in-depth analysis of commenting practice in more than 18K open-source projects written in Python and Java showing that many structural elements, particularly parameter and return value descriptions are indeed widely used. We discover that while a majority are rather short at about 6 to 9 words, many are several hundred words in length. We further find that Python comments tend to be significantly longer than Java comments, possibly due to the weakly-typed nature of the former. Following the empirical analysis, we extend an existing language model with support for structural information, substantially improving the Top-1 accuracy of predicted words (Python 9.6%, Java 7.8%).
C1 [Ciurumelea, Adelina; Alexandru, Carol V.; Gall, Harald C.] Univ Zurich, Zurich, Switzerland.
   [Proksch, Sebastian] Delft Univ Technol, Delft, Netherlands.
C3 University of Zurich; Delft University of Technology
RP Ciurumelea, A (corresponding author), Univ Zurich, Zurich, Switzerland.
EM ciurumelea@ifi.uzh.ch; alexandru@ifi.uzh.ch; all@ifi.uzh.ch;
   S.Proksch@tudelft.nl
FU H2020 grant [825328]
FX This research work was partially funded by the H2020 grant 825328
   (FASTEN). We thank the anonymous reviewers for their valuable feedback
   and comments.
CR Aghajani E, 2020, PROC INT CONF SOFTW, P590, DOI 10.1145/3377811.3380405
   Aghajani E, 2019, PROC INT CONF SOFTW, P1199, DOI 10.1109/ICSE.2019.00122
   Allamanis M, 2019, Arxiv, DOI arXiv:1812.06469
   Alon U., 2018, ARXIV
   [Anonymous], 2021, GOOGL CLOUD PUBL DAT
   [Anonymous], 2021, NLTK SENT TOK
   [Anonymous], 2022, EX NUMP STYL PYTH DO
   [Anonymous], 2021, LANGD
   [Anonymous], 2022, LIB2TO3
   [Anonymous], 2021, INT ID COD COMPL
   [Anonymous], 2021, WRIT SYST SOFTW COD
   [Anonymous], 2021, DOCT TEST INT PYTH E
   [Anonymous], 2022, GITH REST AP
   [Anonymous], 2021, PEP 257 DOCSTR CONV
   [Anonymous], 2021, DOCSTR PARS
   [Anonymous], 2021, JAV
   [Anonymous], 2021, PEP 287 RESTR DOCSTR
   [Anonymous], 2022, GOOGL DOCSTR STYL
   [Anonymous], 2021, NUMP DOCSTR GUID
   [Anonymous], 2022, PYTH ROUG IMPL
   [Anonymous], 2022, EP MARK LANG
   [Anonymous], 2022, NUMP DOCSTR STYL
   [Anonymous], 2021, WRIT DOC COMM JAV TO
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Chen MX, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2287, DOI 10.1145/3292500.3330723
   Chen QY, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3434280
   Ciurumelea A, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P456, DOI [10.1109/SANER48275.2020.9054866, 10.1109/saner48275.2020.9054866]
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Haouari D, 2011, INT SYMP EMP SOFTWAR, P137, DOI 10.1109/ESEM.2011.22
   Haque S, 2020, Arxiv, DOI arXiv:2004.04881
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hu X, 2020, EMPIR SOFTW ENG, V25, P2179, DOI [10.1007/s10664-019-09730-9, 10.1007/978-981-13-8203-1_1]
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Jurafsky D., 2000, Speech and language processing: An introduction to natural language processing, computational linguistics, and speech recognition
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   LeClair A., 2019, arXiv
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Lin Chin-Yew, 2004, Text summarization branches out, P74, DOI DOI 10.2307/3105454
   Mastropaolo A., 2021, ARXIV
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Pascarella L, 2017, IEEE WORK CONF MIN S, P227, DOI 10.1109/MSR.2017.63
   Raffel C, 2023, Arxiv, DOI [arXiv:1910.10683, 10.48550/arXiv.1910.10683]
   Replication package, 2022, COMPLETING FUNCTION
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Sridhara G., 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Svyatkovskiy A, 2020, Arxiv, DOI arXiv:2005.08025
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wen FC, 2019, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2019.00019
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Ye Deheng., 2016, Proceedings of the 31st Annual ACM Symposium on Applied Computing, P1378
   Zhou W, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P161, DOI [10.1109/ICSE-SEIP55303.2022.9793983, 10.1145/3510457.3513061]
NR 56
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 86
DI 10.1007/s10664-022-10284-6
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H2JT2
UT WOS:000994286000001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Iannone, E
   Codabux, Z
   Lenarduzzi, V
   De Lucia, A
   Palomba, F
AF Iannone, Emanuele
   Codabux, Zadia
   Lenarduzzi, Valentina
   De Lucia, Andrea
   Palomba, Fabio
TI Rubbing salt in the wound? A large-scale investigation into the effects
   of refactoring on security
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Refactoring; Software security; Empirical SE
ID CODE CHURN; SOFTWARE; VULNERABILITIES; WHETHER; METRICS
AB Software refactoring is a behavior-preserving activity to improve the source code quality without changing its external behavior. Unfortunately, it is often a manual and error-prone task that may induce regressions in the source code. Researchers have provided initial compelling evidence of the relation between refactoring and defects, yet little is known about how much it may impact software security. This paper bridges this knowledge gap by presenting a large-scale empirical investigation into the effects of refactoring on the security profile of applications. We conduct a three-level mining software repository study to establish the impact of 14 refactoring types on (i) security-related metrics, (ii) security technical debt, and (iii) the introduction of known vulnerabilities. The study covers 39 projects and a total amount of 7,708 refactoring commits. The key results show that refactoring has a limited connection to security. However, Inline Method and Extract Interface statistically contribute to improving some security aspects connected to encapsulating security-critical code components. Extract Superclass and Pull Up Attribute refactoring are commonly found in commits violating specific security best practices for writing secure code. Finally, Extract Superclass and Extract & Move Method refactoring tend to occur more often in commits contributing to the introduction of vulnerabilities. We conclude by distilling lessons learned and recommendations for researchers and practitioners.
C1 [Iannone, Emanuele; De Lucia, Andrea; Palomba, Fabio] Univ Salerno, SeSa Lab, Via Giovanni Paolo II, 132, I-84084 Fisciano, SA, Italy.
   [Codabux, Zadia] Univ Saskatchewan, Saskatoon, SK, Canada.
   [Lenarduzzi, Valentina] Univ Oulu, Pentti Kaiteran katu 1, Oulu 90570, Finland.
C3 University of Salerno; University of Saskatchewan; University of Oulu
RP Iannone, E (corresponding author), Univ Salerno, SeSa Lab, Via Giovanni Paolo II, 132, I-84084 Fisciano, SA, Italy.
EM eiannone@unisa.it; zadiacodabux@ieee.org; valentina.lenarduzzi@oulu.fi;
   adelucia@unisa.it; fpalomba@unisa.it
RI Iannone, Emanuele/ABK-1299-2022
OI Iannone, Emanuele/0000-0001-7489-9969
FU Swiss National Science Foundation (SNSF) through the SNF
   [PZ00P2_186090]; Natural Sciences and Engineering Research Council of
   Canada [RGPIN-2021-04232, DGECR-2021-00283]; EMELIOT national research
   project - MUR under the PRIN 2020 program [2020W3A5FY]; SERICS under the
   NRRP MUR program - EU - NGEU [PE00000014]
FX The authors would like to thank the associated handling editor and the
   anonymous reviewers for their insightful suggestions and feedback, which
   were instrumental in improving the quality of our manuscript. Fabio and
   Zadia gratefully acknowledge the support of the Swiss National Science
   Foundation (SNSF) through the SNF Project No. PZ00P2_186090 (TED) and
   the Natural Sciences and Engineering Research Council of Canada
   (RGPIN-2021-04232 and DGECR-2021-00283), respectively. This work has
   been partially supported by the EMELIOT national research project,
   funded by the MUR under the PRIN 2020 program (Contract 2020W3A5FY).
   This work was partially supported by project SERICS (PE00000014) under
   the NRRP MUR program funded by the EU - NGEU.
CR Abid C, 2020, IEEE T SOFTWARE ENG
   Ader H.M., 2008, ADVISING RES METHODS
   Agrawal A, 2014, PENSEE, V76
   Al Dallal J, 2018, IEEE T SOFTWARE ENG, V44, P44, DOI 10.1109/TSE.2017.2658573
   Alhazmi OH, 2007, COMPUT SECUR, V26, P219, DOI 10.1016/j.cose.2006.10.002
   Alizadeh Vahid, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P823, DOI 10.1109/ASE.2019.00081
   Alizadeh V, 2020, IEEE T SOFTWARE ENG, V46, P932, DOI 10.1109/TSE.2018.2872711
   Alshammari Bandar, 2010, Proceedings of the 21st Australian Software Engineering Conference (ASWEC 2010), P55, DOI 10.1109/ASWEC.2010.34
   Alshammari B, 2012, NATL WORKSHOP INFORM, P1
   Alshammari B, 2010, ASIA PAC SOFWR ENG, P186, DOI 10.1109/APSEC.2010.30
   Alshammari B, 2009, INT CONF QUAL SOFTW, P11, DOI 10.1109/QSIC.2009.11
   ANDERSON TW, 1952, ANN MATH STAT, V23, P193, DOI 10.1214/aoms/1177729437
   [Anonymous], 2014, INT C SOFTW ENG RES
   Avgeriou P., 2021, IEEE SOFTWARE
   Azeem MI, 2019, INFORM SOFTWARE TECH, V108, P115, DOI 10.1016/j.infsof.2018.12.009
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Bavota G, 2014, EMPIR SOFTW ENG, V19, P1617, DOI 10.1007/s10664-013-9256-x
   Beschastnikh I, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P35, DOI 10.1109/ICSE-NIER.2017.17
   Bladel B., 2018, INT WORKSHOP REFACTO, P22, DOI DOI 10.1145/3242163.3242168
   Bland JM, 2000, BRIT MED J, V320, P1468, DOI 10.1136/bmj.320.7247.1468
   Camilo F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P269, DOI 10.1109/MSR.2015.32
   Canfora G, 2020, COMPUT SECUR, V99, DOI 10.1016/j.cose.2070.10706
   Castellanos C, 2020, INT C TECHNICAL DEBT, P103
   Cedrim D, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P465, DOI 10.1145/3106237.3106259
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chowdhury I, 2011, J SYST ARCHITECT, V57, P294, DOI 10.1016/j.sysarc.2010.06.003
   Codabux Z, 2013, 2013 4TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD), P8, DOI 10.1109/MTD.2013.6608672
   Cohen J., 1988, STAT POWER ANAL BEHA
   Curtis B., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P49, DOI 10.1109/MTD.2012.6226000
   Sobrinho EVD, 2021, IEEE T SOFTWARE ENG, V47, P17, DOI 10.1109/TSE.2018.2880977
   Di Penta M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P556, DOI 10.1145/3368089.3409695
   Elazhary O, 2019, PROC IEEE INT CONF S, P286, DOI 10.1109/ICSME.2019.00043
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Erlenhov L, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P7, DOI 10.1109/BotSE.2019.00009
   Ghafari M, 2017, IEEE INT WORK C SO, P121, DOI 10.1109/SCAM.2017.24
   Ghaith Shadi, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P121, DOI 10.1007/978-3-642-33119-0_10
   Goyal PK, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON ISSUES AND CHALLENGES IN INTELLIGENT COMPUTING TECHNIQUES (ICICT), P520, DOI 10.1109/ICICICT.2014.6781337
   Gunes Koru A., 2005, P 2005 WORKSHOP PRED, P1
   Huang SG, 2010, INT C COMPUT ENG APP, P295, DOI 10.1109/ICCEA.2010.209
   Iannone E, 2022, RUBBING SALT WOUND L
   Joshi C., 2015, INT J-TORONTO, V1, P5
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1, DOI DOI 10.1145/2393596.2393655
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Kutner M.H., 2005, Applied linear statistical models, V5th
   Kwan I, 2011, IEEE T SOFTWARE ENG, V37, P307, DOI 10.1109/TSE.2011.29
   lannone E., 2022, IEEE T SOFTW ENG, P1
   Lebeuf C, 2018, IEEE SOFTWARE, V35, P18, DOI 10.1109/MS.2017.4541027
   Lenarduzzi V, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P2, DOI 10.1145/3345629.3345630
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   Martin Fowler., 1999, REFACTORING IMPROVIN
   Maruyama K., 2011, P 4 WORKSHOP REFACTO, P22, DOI [DOI 10.1145/1984732.1984737, 1145/1984732.1984737]
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McGraw G, 2004, IEEE SECUR PRIV, V2, P80, DOI 10.1109/MSECP.2004.1281254
   Meneely Andrew, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P65, DOI 10.1109/ESEM.2013.19
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mercaldo F, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1978
   Mohan M, 2016, J SYST SOFTWARE, V120, P183, DOI 10.1016/j.jss.2016.05.019
   Morrison PJ, 2018, EMPIR SOFTW ENG, V23, P1383, DOI 10.1007/s10664-017-9541-1
   Mumtaz H, 2018, INFORM SOFTWARE TECH, V96, P112, DOI 10.1016/j.infsof.2017.11.010
   Murphy-Hill E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P421, DOI 10.1145/1368088.1368146
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   National Institute for Standards, 2023, US NIST COMP SEC DIV
   National Institute for Standards, 2023, NAT VULN DAT
   O'Keeffe M, 2008, J SYST SOFTWARE, V81, P502, DOI 10.1016/j.jss.2007.06.003
   Palomba F, 2021, IEEE T SOFTWARE ENG, V47, P108, DOI 10.1109/TSE.2018.2883603
   Palomba F, 2017, INT C PROGRAM COMPRE, P176, DOI 10.1109/ICPC.2017.38
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Patton M. Q., 2002, QUALITATIVE RES EVAL
   Perl H, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P426, DOI 10.1145/2810103.2813604
   Rahman A, 2019, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2019.00033
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Rosa G, 2021, PROC INT CONF SOFTW, P436, DOI 10.1109/ICSE43902.2021.00049
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Russo ER, 2019, J SYST SOFTWARE, V156, P84, DOI 10.1016/j.jss.2019.06.001
   Saarimaki N, 2021, EMPIRICAL STANDARDS
   Saarimäki N, 2019, EUROMICRO CONF PROC, P317, DOI 10.1109/SEAA.2019.00055
   Saika T, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 4, P1, DOI 10.1109/SANER.2016.117
   Sellitto G, 2022, EUR CON SFTWR MTNCE, P731, DOI 10.1109/SANER53432.2022.00090
   Sharma T, 2015, IEEE SOFTWARE, V32, P44, DOI 10.1109/MS.2015.105
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Shin Y, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P315
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Silva Danilo, 2020, IEEE T SOFTWARE ENG
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Soares G, 2013, IEEE T SOFTWARE ENG, V39, P147, DOI 10.1109/TSE.2012.19
   Soares G, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.63
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Spearman, 1961, PROOF MEASUREMENT AS
   Stroggylos K., 2007, P 5 INT WORKSH SOFTW, P10, DOI [10.1109/WOSQ.2007.11, DOI 10.1109/WOSQ.2007.11]
   Su Zhang, 2011, Database and Expert Systems Applications. Proceedings 22nd International Conference, DEXA 2011, P217, DOI 10.1007/978-3-642-23088-2_15
   Sukamolson S., 2007, Fundamentals of quantitative research
   Terra R, 2018, J SYST SOFTWARE, V138, P19, DOI 10.1016/j.jss.2017.11.073
   The MITRE Corporation, 2023, CVE SEARCH TOOL
   The MITRE Corporation, 2023, COMM VULN EXP
   Theil H., 1969, International Economic Review, V10, P251, DOI [DOI 10.2307/2525642, 10.2307/2525642]
   Tourani P, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P24, DOI 10.1109/SANER.2017.7884606
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Vassallo C., 2019, EMPIR SOFTW ENG
   Vassallo C, 2018, PROC IEEE INT CONF S, P564, DOI 10.1109/ICSME.2018.00068
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   Yang LM, 2017, IEEE GLOB COMM CONF
   Zabardast E, 2020, EUROMICRO CONF PROC, P376, DOI 10.1109/SEAA51224.2020.00068
   Zhang HY, 2009, PROC IEEE INT CONF S, P274, DOI 10.1109/ICSM.2009.5306304
NR 108
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 89
DI 10.1007/s10664-023-10287-x
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H2IR7
UT WOS:000994258100001
PM 37250850
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Krasniqi, R
   Do, H
AF Krasniqi, Rrezarta
   Do, Hyunsook
TI A multi-model framework for semantically enhancing detection of
   quality-related bug report descriptions
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Quality bugs; Quality concerns; Semantic features; Lexical features;
   Shallow features; BERT model
ID NONFUNCTIONAL REQUIREMENTS; SOFTWARE EVOLUTION; CLASSIFICATION;
   KNOWLEDGE; IDENTIFICATION; AGREEMENT; SEVERITY; PROJECTS; IMPACT
AB Maintaining and delivering a high-quality software system is a delicate process. One way to ensure that a software system achieves the desired quality is to systematically monitor and timely address quality-related concerns. Quality concerns, such as reliability, usability, performance, and maintainability, among others, can have a broad impact in ensuring that a system remains consistently reliant and available at all times. In contrast, when such concerns are overlooked, become difficult to navigate, or maintain, system-wide failures could emerge. Typically, these failures can chiefly hinder the core functionality of the system and produce a large amount of quality bug reports. For the developers, manually examining these high-impacted quality-related bug reports in open-source issue tracking systems can become a prohibitively expensive and impractical task to deliver. Partly, because such bugs often require expert knowledge to address them. The more perplexing concern is the fact that these bugs are deemed difficult to detect due to their intertwined relationship with functional bugs. Even worse, there are instances when several types of quality concerns are intertwined among each other. Seemingly, these scenarios make quality concerns non-discernible. To ease this problem, we built a multi-model framework (BugReportSoftQualDetector) to automatically detect quality-related content in bug report descriptions. Specifically, we leveraged a weighted combination of semantics, lexical, and shallow features in conjunction with the Random Forest model to detect six most emerging quality concerns present in bug report descriptions. Our results indicate that our approach outperformed both state-of-the-art approaches, one that leveraged lexical features and the other that leveraged shallow features. To assess our approach, we examined six diverse open-source domains hosted from two issue-tracking systems such as Jira and Bugzilla. Through a grounded theory approach, we created a catalog of rules and employed ISO 25010 taxonomy and the FURPS taxonomy to categorize bug reports into six quality types of: performance, maintainability, reliability, portability, usability, and security. We then employed content analysis to manually label 5400 bug reports. Finally, we included a case study for tracing and visually mapping quality concerns into the codebase.
C1 [Krasniqi, Rrezarta; Do, Hyunsook] Univ North Texas, Dept Comp Sci & Engn, Denton, TX 76203 USA.
C3 University of North Texas System; University of North Texas Denton
RP Krasniqi, R (corresponding author), Univ North Texas, Dept Comp Sci & Engn, Denton, TX 76203 USA.
EM Rrezarta.Krasniqi@unt.edu
OI Krasniqi, Rrezarta/0000-0001-6884-6131
CR Abad ZSH, 2017, INT REQUIR ENG CONF, P496, DOI 10.1109/RE.2017.36
   Adve, 2010, P 32 ACM IEEE INT C, V1, P485, DOI DOI 10.1145/1806799.1806870
   Aggarwal Charu C, 2012, A survey of text clustering algorithms, P163, DOI [10.1007/978-1-4614-3223-4, DOI 10.1007/978-1-4614-3223-46]
   Aggarwal K, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1821
   Ahmed MM, 2014, 2 INT C RES SCI ENG, P44
   Alqahtani SS, 2017, INT SYMP EMP SOFTWAR, P169, DOI 10.1109/ESEM.2017.25
   Amasaki S, 2018, EUROMICRO CONF PROC, P175, DOI 10.1109/SEAA.2018.00036
   [Anonymous], 2007, P 2014 WORKSH ECL TE, DOI 10.1145/1328279.1328284
   [Anonymous], 2006, Proceedings of the 14th ACM SIGSOFT international symposium on Foundations of software engineering (SIGSOFT '06/FSE-14), DOI 10.1145/1181775.1181781
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Arokiam J, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P17, DOI 10.1145/3377816.3381738
   Aung TWW, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111133
   Behl D, 2014, PROCEEDINGS OF THE 2014 INTERNATIONAL CONFERENCE ON RELIABILTY, OPTIMIZATION, & INFORMATION TECHNOLOGY (ICROIT 2014), P294, DOI 10.1109/ICROIT.2014.6798341
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Binkhonain M., 2019, EXPERT SYSTEMS APPL, V1, DOI DOI 10.1016/J.ESWAX.2019.100001
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Carletta J, 1996, COMPUT LINGUIST, V22, P249
   Catolino G, 2019, J SYST SOFTWARE, V152, P165, DOI 10.1016/j.jss.2019.03.002
   Chaparro O, 2019, EMPIR SOFTW ENG, V24, P2947, DOI 10.1007/s10664-018-9672-z
   Chaturvedi K.K., 2012, 2012 CSI 6 INT C SOF, P1
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen C, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P226, DOI 10.1109/QRS.2018.00036
   Corbin J, 2008, Techniques and procedures for developing grounded theory, V3rd
   Cysneiros L. M., 2001, Requirements Engineering, V6, P97, DOI 10.1007/s007660170008
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   Davidson JL, 2011, S VIS LANG HUM CEN C, P101, DOI 10.1109/VLHCC.2011.6070386
   de Normalizacion OI, 2011, 25010 ISOIEC
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   DROMEY RG, 1995, IEEE T SOFTWARE ENG, V21, P146, DOI 10.1109/32.345830
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Ebert C, 1997, ANN SOFTW ENG, V3, P367, DOI 10.1023/A:1018933820619
   Ezzini S, 2021, PROC INT CONF SOFTW, P1485, DOI 10.1109/ICSE43902.2021.00133
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   Firesmith D., 2003, J. Object Technol, V2, P67, DOI [10.5381/jot.2003.2.5.c6, DOI 10.5381/JOT.2003.2.5.C6]
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Garousi V, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916008
   Goldberg Y., 2009, Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing, P1142
   Goseva-Popstojanova K, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P344, DOI 10.1109/QRS.2018.00047
   Grady RB., 1992, PRACTICAL SOFTWARE M
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Harty J, 2011, COMMUN ACM, V54, P44, DOI 10.1145/1897816.1897836
   Harwood T. G., 2003, PRACTICAL ASSESSMENT, V3, P479, DOI [DOI 10.7275/Z6FM-2E34, https://doi.org/10.1362/146934703771910080]
   Hayes JH, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P138
   Herzig K, 2015, SOFTWARE ENG MANAGEM, P103
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Hindle A, 2016, EMPIR SOFTW ENG, V21, P368, DOI 10.1007/s10664-015-9387-3
   Hoover D.L., 2008, A Companion to Digital Literary Studies, P517
   Hussain I, 2008, LECT NOTES COMPUT SC, V5039, P287
   Jabbar A, 2020, ARTIF INTELL REV, V53, P5559, DOI 10.1007/s10462-020-09828-3
   Japkowicz N., 2002, Intelligent Data Analysis, V6, P429
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Jongejan B, 2009, P JOINT C 47 ANN M A, P145, DOI DOI 10.3115/1687878.1687900
   Jureta IJ, 2006, LECT NOTES COMPUT SC, V4215, P281
   Karim MR, 2017, INT WORKSH EMPIR ENG, P53, DOI 10.1109/IWESEP.2017.17
   Khan JA, 2019, INT REQUIR ENG CONF, P63, DOI 10.1109/RE.2019.00018
   Koch S, 2007, J SOFTW MAINT EVOL-R, V19, P361, DOI 10.1002/smr.348
   Kohlschutter Christian, 2010, P 3 ACM INT C WEB SE, P441, DOI DOI 10.1145/1718487.1718542
   Krasniqi Rrezarta, 2022, EASE 2022: The International Conference on Evaluation and Assessment in Software Engineering 2022, P10, DOI 10.1145/3530019.3530021
   Krasniqi R., 2021, ARXIV PREPRINT ARXIV
   Krasniqi R, 2021, P INT COMP SOFTW APP, P812, DOI 10.1109/COMPSAC51774.2021.00114
   Krasniqi R, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P12, DOI 10.1109/SANER50967.2021.00011
   Krasniqi R, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P512, DOI [10.1109/saner48275.2020.9054816, 10.1109/SANER48275.2020.9054816]
   Krasniqi R, 2018, PROC IEEE INT CONF S, P713, DOI 10.1109/ICSME.2018.00085
   Kucuk B, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P661, DOI 10.1109/SANER50967.2021.00084
   Kumar VR, 2016, INT J ADV RES COMPUT
   Kurtanovic Z, 2018, REQUIR ENG, V23, P357, DOI 10.1007/s00766-018-0293-2
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P490, DOI 10.1109/RE.2017.82
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P61, DOI 10.1109/RE.2017.86
   Lamkanfi A, 2011, EUR CON SFTWR MTNCE, P249, DOI 10.1109/CSMR.2011.31
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lau J. H., 2016, arXiv, DOI DOI 10.48550/ARXIV.1607.05368
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Lidwell William, 2010, Universal Principles of Design, Revised and Updated: 125 Ways to Enhance Usability, Influence Perception, Increase Appeal, Make Better Design Decisions, and Teach through Design
   Liu HT, 2016, INT CONF SEMANT, P1, DOI [10.1109/SKG.2016.11, 10.1109/SKG.2016.009]
   Liu XY, 2009, IEEE T SYST MAN CY B, V39, P539, DOI 10.1109/TSMCB.2008.2007853
   Loosen W., 2017, Studies in Communication and Media, V6, P333, DOI [DOI 10.5771/2192-4007-2017-4-333, 10.5771/2192-4007-2017-4-333]
   Loper E., 2002, ARXIV
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   Machova K., 2014, Recent developments in computational collective intelligence, P177
   Mahmoud Anas, 2012, 2012 IEEE 20th International Conference on Program Comprehension, P183
   Mahmoud A, 2015, INT REQUIR ENG CONF, P36, DOI 10.1109/RE.2015.7320406
   Marcus M. P., 1993, Computational Linguistics, V19, P313, DOI DOI 10.21236/ADA273556
   Marks L., 2011, Proceedings of the 7th International Conference on Predictive Models in Software Engineering, P1, DOI [10.1145/2020390.2020401, DOI 10.1145/2020390.2020401]
   Márquez G, 2019, 13TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2019), VOL 2, P123, DOI 10.1145/3344948.3344996
   Márquez G, 2018, ASIA PAC SOFWR ENG, P31, DOI 10.1109/APSEC.2018.00017
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Mi Q, 2018, INFORM SOFTWARE TECH, V99, P93, DOI 10.1016/j.infsof.2018.03.006
   Mirakhorli M., 2012, Software and systems traceability, P299, DOI DOI 10.1007/978-1-4471-2239-5_14
   Mirakhorli M, 2016, IEEE T SOFTWARE ENG, V42, P206, DOI 10.1109/TSE.2015.2479217
   Mirakhorli M, 2013, 2013 3RD INTERNATIONAL WORKSHOP ON THE TWIN PEAKS OF REQUIREMENTS AND ARCHITECTURE (TWINPEAKS), P1, DOI 10.1109/TwinPeaks-2.2013.6617352
   Moreira A., 2002, SEKE 02 P 14 INT C S, V15 - 19, P167
   Moscibroda T, 2007, USENIX ASSOCIATION PROCEEDINGS OF THE 16TH USENIX SECURITY SYMPOSIUM, P257
   Napierala MA, 2012, AAOS Now, P40
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   Ortu M, 2015, Proceedings of the 11th International Conference on Predictive Models and Data Analytics in Software Engineering, PROMISE'15, P1, DOI DOI 10.1145/2810146.2810147
   Pelayo L, 2007, NAFIPS 2007 - 2007 ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY, P69, DOI 10.1109/NAFIPS.2007.383813
   Porter MF, 2006, PROGRAM-ELECTRON LIB, V40, P211, DOI [10.1108/00330330610681286, 10.1108/eb046814]
   Pu Han, 2012, Proceedings of the 2012 IEEE International Conference on Computer Science and Automation Engineering (CSAE), P116
   Rath M, 2019, LECT NOTES COMPUT SC, V11412, P229, DOI 10.1007/978-3-030-15538-4_17
   Rath M, 2018, IEEE WORK CONF MIN S, P442, DOI 10.1145/3196398.3196415
   Riaz M, 2009, COMM COM INF SC, V59, P119
   Rifkin R, 2004, J MACH LEARN RES, V5, P101
   Robertson S, 2012, Mastering the requirements process: getting requirements right
   Rodriguez D., 2012, 2012 Proceedings of the First International Workshop on Realizing Artificial Intelligence Synergies in Software Engineering (RAISE 2012), P52, DOI 10.1109/RAISE.2012.6227971
   Rosenhainer L, 2004, P OOPSLA ASPECTS
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Rusu D., 2007, Proceedings of the 10th International Multiconference Information Society-IS, P8
   Sabor KK, 2018, IEEE INT SYMP SOFTW, P232, DOI [10.1109/1SSREW.2018.00011, 10.1109/ISSREW.2018.00011]
   Scacchi W, 2009, LECT NOTES BUS INF P, V14, P467
   Schneider Jodi., 2013, Proceedings of the ACM Conference on Computer supported cooperative Work, P1069, DOI DOI 10.1145/2441776.2441897
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Somasundaram K., 2012, Proceedings of the 5th India Software Engineering Conference, ISEC '12, P125, DOI DOI 10.1145/2134254.2134276
   Sommerville Ian, 2011, Software engineering
   Souza G, 2004, 12 IEEE INT REQUIREM
   Sowe SK, 2008, J SYST SOFTWARE, V81, P431, DOI 10.1016/j.jss.2007.03.086
   Strauss A. L., 1997, Grounded Theory in Practice
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2013, 2013 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P108, DOI 10.1109/ISSREW.2013.6688888
   Teufel S, 2002, COMPUT LINGUIST, V28, P409, DOI 10.1162/089120102762671936
   Twidale MB, 2005, 38 HAWAII INT C SYST, P2005
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Van Der Maaten Laurens, 2009, Journal of Machine Learning Research, V10, P13
   Van der Ven JS, 2006, RATIONAL MANAGEMENT IN SOFTWARE ENGINEERING, P329, DOI 10.1007/3-5403-0998-5_16
   Van Hulse J., 2007, P 24 INT C MACH LEAR, DOI [DOI 10.1145/1273496.1273614, 10.1145/1273496.1273614]
   vonMayrhauser A, 1997, J SOFTW MAINT-RES PR, V9, P299, DOI 10.1002/(SICI)1096-908X(199709/10)9:5<299::AID-SMR157>3.0.CO;2-S
   Walker MA, 2012, DECIS SUPPORT SYST, V53, P719, DOI 10.1016/j.dss.2012.05.032
   Wettel R., 2010, Technical Report
   Wettel R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P921
   Wijayasekara D, 2014, IEEE IND ELEC, P3612, DOI 10.1109/IECON.2014.7049035
   Winkler J, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P39, DOI [10.1109/REW.2016.16, 10.1109/REW.2016.021]
   Wu XX, 2021, INFORM SOFTWARE TECH, V133, DOI 10.1016/j.infsof.2021.106530
   Xia X, 2016, IEEE T RELIAB, V65, P1094, DOI 10.1109/TR.2015.2484074
   Xia X, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P174, DOI 10.1109/CSMR-WCRE.2014.6747167
   Yang XL, 2017, J COMPUT SCI TECH-CH, V32, P181, DOI 10.1007/s11390-017-1713-3
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
   Zhang T, 2001, INFORM RETRIEVAL, V4, P5, DOI 10.1023/A:1011441423217
   Zhang X, 2015, ADV NEUR IN, V28
   Ziftci Celal, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P472, DOI 10.1109/ASE.2011.6100102
NR 142
TC 2
Z9 3
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 42
DI 10.1007/s10664-022-10280-w
PG 62
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9C8SX
UT WOS:000935681500003
DA 2024-07-18
ER

PT J
AU Cassee, N
   Zampetti, F
   Novielli, N
   Serebrenik, A
   Di Penta, M
AF Cassee, Nathan
   Zampetti, Fiorella
   Novielli, Nicole
   Serebrenik, Alexander
   Di Penta, Massimiliano
TI Self-Admitted Technical Debt and comments' polarity: an empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Self-Admitted Technical Debt; Sentiment analysis; Empirical study
ID SENTIMENT ANALYSIS
AB Self-Admitted Technical Debt (SATD) consists of annotations-typically, but not only, source code comments-pointing out incomplete features, maintainability problems, or, in general, portions of a program not-ready yet. The way a SATD comment is written, and specifically its polarity, may be a proxy indicator of the severity of the problem and, to some extent, of the priority with which it should be addressed. In this paper, we study the relationship between different types of SATD comments in source code and their polarity, to understand in which circumstances (and why) developers use negative or rather neutral comments to highlight an SATD. To address this goal, we combine a manual analysis of 1038 SATD comments from a curated dataset with a survey involving 46 professional developers. First of all, we categorize SATD content into its types. Then, we study the extent to which developers express negative sentiment in different types of SATD as a proxy for priority, and whether they believe this can be considered as an acceptable practice. Finally, we look at whether such annotations contain additional details such as bug references and developers' names/initials. Results of the study indicate that SATD comments are mainly used for annotating poor implementation choices (similar or equal to 41%) and partially implemented functionality (similar or equal to 22%). The latter may depend from "waiting" for other features being implemented, and this makes SATD comments more negatives than in other cases. Around 30% of the survey respondents agree on using/interpreting negative sentiment as a proxy for priority, while 50% of them indicate that it would be better to discuss SATD on issue trackers and not in the source code. However, while our study indicates that open-source developers use links to external systems, such as bug identifiers, to annotate high-priority SATD, better tool support is required for SATD management.
C1 [Cassee, Nathan; Serebrenik, Alexander] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Zampetti, Fiorella; Di Penta, Massimiliano] Univ Sannio, Benevento, Italy.
   [Novielli, Nicole] Univ Bari, Bari, Italy.
C3 Eindhoven University of Technology; University of Sannio; Universita
   degli Studi di Bari Aldo Moro
RP Cassee, N (corresponding author), Eindhoven Univ Technol, Eindhoven, Netherlands.
EM n.w.cassee@tue.nl; fiorella.zampetti@unisannio.it;
   nicole.novielli@uniba.it; a.serebrenik@tue.nl; dipenta@unisannio.it
RI Novielli, Nicole/Y-9583-2019
OI Novielli, Nicole/0000-0003-1160-2608; Serebrenik,
   Alexander/0000-0002-1418-0095
CR Ahmed T, 2017, IEEE INT CONF AUTOM, P106, DOI 10.1109/ASE.2017.8115623
   Alkalbani AM, 2016, INT CON ADV INFO NET, P53, DOI 10.1109/AINA.2016.148
   Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   ANDERSONML, 2014, PHRENOLOGY NEURAL RE, P1
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Brown N, 2010, FSE SDP WORKSH FUT S
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Calefato F, 2018, INFORM SOFTWARE TECH, V94, P186, DOI 10.1016/j.infsof.2017.10.009
   Casaló LV, 2015, J BUS RES, V68, P1829, DOI 10.1016/j.jbusres.2015.01.010
   Chen ZP, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P841, DOI 10.1145/3338906.3338977
   Choi B, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P107
   Diefendorff JM, 2003, J APPL PSYCHOL, V88, P284, DOI 10.1037/0021-9010.88.2.284
   Ding J, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION), P7, DOI [10.1145/3194932.3194935, 10.1109/GLOCOM.2018.8647613]
   Ebert F, 2018, PROC IEEE INT CONF S, P519, DOI 10.1109/ICSME.2018.00061
   Ernst NA, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P50, DOI 10.1145/2786805.2786848
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Fucci G, 2021, IEEE WORK CONF MIN S, P403, DOI 10.1109/MSR52588.2021.00052
   Fucci G, 2020, PROC IEEE INT CONF S, P672, DOI 10.1109/ICSME46990.2020.00070
   Gachechiladze D, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P11, DOI 10.1109/ICSE-NIER.2017.18
   GAO Z, 2021, ESEC FSE 21 29 ACM J, P218, DOI DOI 10.1145/3468264.3468553
   Girardi D, 2022, IEEE T SOFTWARE ENG, V48, P3326, DOI 10.1109/TSE.2021.3087906
   Girardi D, 2020, PROC INT CONF SOFTW, P666, DOI 10.1145/3377811.3380374
   Hochschild AR, 2012, MANAGED HEART: COMMERCIALIZATION OF HUMAN FEELING, P1
   Islam MR, 2018, J SYST SOFTWARE, V145, P125, DOI 10.1016/j.jss.2018.08.030
   Jongeling R, 2017, EMPIR SOFTW ENG, V22, P2543, DOI 10.1007/s10664-016-9493-x
   Kamei E.d.S., 2016, QUASOQ TDA APSEC, P68
   Konietschke F, 2012, ELECTRON J STAT, V6, P738, DOI 10.1214/12-EJS691
   Kruchten, 2013, 4 INT WORKSH MAN TEC
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Li Z, 2021, P 36 IEEEACM INT C A
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Lin B, 2021, REPLICATION PACKAGE, Vxx, pxx, DOI DOI 10.5281/ZENODO.5106305
   Lin B, 2019, PROC INT CONF SOFTW, P548, DOI 10.1109/ICSE.2019.00066
   Lin B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P94, DOI 10.1145/3180155.3180195
   Liu JK, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09917-5
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Maipradit R, 2020, IEEE INT WORK C SO, P54, DOI 10.1109/SCAM51674.2020.00011
   Maipradit R, 2020, EMPIR SOFTW ENG, V25, P3770, DOI 10.1007/s10664-020-09854-3
   Maldonado ED, 2017, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSME.2017.8
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Mäntylä M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P247, DOI [10.1109/MSR.2016.033, 10.1145/2901739.2901752]
   McNamara A, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P729, DOI 10.1145/3236024.3264833
   Müller SC, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P688, DOI 10.1109/ICSE.2015.334
   Murgia A., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P262
   Newcombe RG, 1998, STAT MED, V17, P873, DOI 10.1002/(SICI)1097-0258(19980430)17:8<873::AID-SIM779>3.0.CO;2-I
   Novielli N, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09960-w
   Novielli N, 2020, IEEE WORK CONF MIN S, P158, DOI 10.1145/3379597.3387446
   Novielli N, 2019, IEEE SOFTWARE, V36, P6, DOI 10.1109/MS.2019.2924013
   Novielli N, 2018, IEEE WORK CONF MIN S, P364, DOI 10.1145/3196398.3196403
   Ortu M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P303, DOI 10.1109/MSR.2015.35
   Palomba F, 2021, IEEE T SOFTWARE ENG, V47, P108, DOI 10.1109/TSE.2018.2883603
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Portugal RLQ, 2018, 2018 1ST INTERNATIONAL WORKSHOP ON AFFECTIVE COMPUTING FOR REQUIREMENTS ENGINEERING (AFFECTRE 2018), P20, DOI 10.1109/AffectRE.2018.00010
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Raman N, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P57, DOI 10.1145/3377816.3381732
   Rantala L, 2020, EUROMICRO CONF PROC, P385, DOI 10.1109/SEAA51224.2020.00069
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Rossi PH., 1983, SOC FORCES, V12, P598
   Russo B, 2022, P 19 INT C MINING SO
   Scherer KR, 2004, SOC SCI INFORM, V43, P499, DOI 10.1177/0539018404047701
   Seaman C, 2011, ADV COMPUT, V82, P25, DOI 10.1016/B978-0-12-385512-1.00002-5
   Serebrenik A, 2017, CEUR WORKSHOP PROC, P1
   SHELLEY M, 1984, J AM STAT ASSOC, V79, P240, DOI 10.2307/2288384
   Sparks BA, 2011, TOURISM MANAGE, V32, P1310, DOI 10.1016/j.tourman.2010.12.011
   Spencer D., 2009, ROSENFELD MEDIA
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Storey M A, 2012, P 9 IEEE WORK C MIN, P140
   Storey MA, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P251, DOI 10.1145/1368088.1368123
   Tourani P, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P24, DOI 10.1109/SANER.2017.7884606
   Uddin G, 2017, IEEE INT CONF AUTOM, P978, DOI 10.1109/ASE.2017.8115715
   Wehaibi S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P179, DOI 10.1109/SANER.2016.72
   WRIGHT P, 1974, J APPL PSYCHOL, V59, P555, DOI 10.1037/h0037186
   Xavier L, 2020, IEEE WORK CONF MIN S, P137, DOI 10.1145/3379597.3387459
   Yasmin J, 2022, P 30 INT C PROGRAM C
   Yin D, 2010, P INT C INF SYST, P193
   Zampetti F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10031-3
   Zampetti F, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P355, DOI [10.1109/SANER48275.2020.9054868, 10.1109/saner48275.2020.9054868]
   Zampetti F, 2018, IEEE WORK CONF MIN S, P526, DOI 10.1145/3196398.3196423
   Zampetti F, 2017, PROC IEEE INT CONF S, P216, DOI 10.1109/ICSME.2017.44
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
NR 83
TC 4
Z9 4
U1 1
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 139
DI 10.1007/s10664-022-10183-w
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3F5SW
UT WOS:000830730000001
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Chowdhury, S
   Holmes, R
   Zaidman, A
   Kazman, R
AF Chowdhury, Shaiful
   Holmes, Reid
   Zaidman, Andy
   Kazman, Rick
TI Revisiting the debate: Are code metrics useful for measuring maintenance
   effort?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code metrics; Maintenance; McCabe; Code complexity
ID CYCLOMATIC COMPLEXITY; SOFTWARE; MODELS
AB Evaluating and predicting software maintenance effort using source code metrics is one of the holy grails of software engineering. Unfortunately, previous research has provided contradictory evidence in this regard. The debate is still open: as a community we are not certain about the relationship between code metrics and maintenance impact. In this study we investigate whether source code metrics can indeed establish maintenance effort at the previously unexplored method level granularity. We consider similar to 730K Java methods originating from 47 popular open source projects. After considering seven popular method level code metrics and using change proneness as a maintenance effort indicator, we demonstrate why past studies contradict one another while examining the same data. We also show that evaluation context is king. Therefore, future research should step away from trying to devise generic maintenance models and should develop models that account for the maintenance indicator being used and the size of the methods being analyzed. Ultimately, we show that future source code metrics can be applied reliably and that these metrics can provide insight into maintenance effort when they are applied in a judiciously context-sensitive manner.
C1 [Chowdhury, Shaiful; Holmes, Reid] Univ British Columbia, Dept Comp Sci, Vancouver, BC, Canada.
   [Zaidman, Andy] Delft Univ Technol, Dept Software Technol, Delft, Netherlands.
   [Kazman, Rick] Univ Hawaii, Dept Informat Technol Management, Honolulu, HI 96822 USA.
C3 University of British Columbia; Delft University of Technology;
   University of Hawaii System
RP Chowdhury, S (corresponding author), Univ British Columbia, Dept Comp Sci, Vancouver, BC, Canada.
EM shaifulc@cs.ubc.ca; rtholmes@cs.ubc.ca; a.e.zaidman@tudelft.nl;
   kazman@hawaii.edu
CR Abid NJ, 2019, PROC INT CONF SOFTW, P384, DOI 10.1109/ICSE.2019.00052
   Alfadel M., 2018, 2017 9 IEEE GCC C EX, P1
   Alsolai H, 2018, PROC IEEE INT CONF S, P716, DOI 10.1109/ICSME.2018.00088
   Alves TL, 2010, PROC IEEE INT CONF S
   American College of Surgeons, 2020, COVID 19 REC MAN EL
   Aniche M, 2016, IEEE INT WORK C SO, P41, DOI 10.1109/SCAM.2016.19
   [Anonymous], 2010, 21 AUSTR SOFTW ENG C, P12
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Antinyan V, 2017, EMPIR SOFTW ENG, V22, P3057, DOI 10.1007/s10664-017-9508-2
   Antinyan V, 2015, 2015 SCIENCE AND INFORMATION CONFERENCE (SAI), P879, DOI 10.1109/SAI.2015.7237246
   Antinyan V, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P154, DOI 10.1109/CSMR-WCRE.2014.6747165
   Athanasiou D, 2014, IEEE T SOFTWARE ENG, V40, P1100, DOI 10.1109/TSE.2014.2342227
   Baggen R, 2012, SOFTWARE QUAL J, V20, P287, DOI 10.1007/s11219-011-9144-9
   Bandi RK, 2003, IEEE T SOFTWARE ENG, V29, P77, DOI 10.1109/TSE.2003.1166590
   Bauer J, 2019, INT C PROGRAM COMPRE, P154, DOI 10.1109/ICPC.2019.00033
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Bell RobertM., 2011, Proceedings of the 7th International Conference on Predictive Models in Software Engineering. Promise'11, DOI DOI 10.1145/2020390.2020392
   Börstler J, 2016, IEEE T SOFTWARE ENG, V42, P886, DOI 10.1109/TSE.2016.2527791
   BRITTAIN JM, 1982, SOC SCI INFORM STUD, V2, P139, DOI 10.1016/0143-6236(82)90027-8
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Catolino G, 2018, J SYST SOFTWARE, V143, P14, DOI 10.1016/j.jss.2018.05.003
   Chen YQT, 2020, IEEE INT CONF AUTOM, P237, DOI 10.1145/3324884.3416667
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chowdhury S, 2019, EMPIR SOFTW ENG, V24, P1649, DOI 10.1007/s10664-018-9640-7
   COLEMAN D, 1994, COMPUTER, V27, P44, DOI 10.1109/2.303623
   Cruz L, 2019, PROC IEEE INT CONF S, P29, DOI 10.1109/ICSME.2019.00013
   CURTIS B, 1979, IEEE T SOFTWARE ENG, V5, P96, DOI 10.1109/TSE.1979.234165
   Darcy DP, 2005, IEEE T SOFTWARE ENG, V31, P982, DOI 10.1109/TSE.2005.130
   Ebert C, 2016, IEEE SOFTWARE, V33, P27, DOI 10.1109/MS.2016.147
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fenton N.E., 1991, Software Testing, Verification and Reliability, V1, P27, DOI DOI 10.1002/STVR.4370010204
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Gil J, 2016, J OBJECT TECHNOL, V15, DOI 10.5381/jot.2016.15.1.a2
   Gil Y, 2017, EMPIR SOFTW ENG, V22, P2585, DOI 10.1007/s10664-017-9513-5
   Gopinath R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P72, DOI 10.1145/2568225.2568278
   Grund F, 2021, PROC IEEE ACM INT C, P221, DOI 10.1109/ICSE-Companion52605.2021.00100
   Grund F, 2021, PROC INT CONF SOFTW, P1510, DOI 10.1109/ICSE43902.2021.00135
   Hata H., 2011, Proc. 12th Int'l Workshop on Principles of Software Evolution and the 7th Annual ERCIM Workshop on Software Evolution, P96
   Herraiz I., 2007, Proceedings of the International Workshop on Mining Software Repositories, P21
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Higo Y, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110571
   Hindle A, 2008, INT C PROGRAM COMPRE, P133, DOI 10.1109/ICPC.2008.13
   Hofmeister J, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P217, DOI 10.1109/SANER.2017.7884623
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Islam MR, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P1523, DOI 10.1145/3341105.3373880
   Johnson JC, 2019, PROC IEEE INT CONF S, P513, DOI 10.1109/ICSME.2019.00085
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   KAFURA D, 1987, IEEE T SOFTWARE ENG, V13, P335, DOI 10.1109/TSE.1987.233164
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Kondo M, 2020, EMPIR SOFTW ENG, V25, P890, DOI 10.1007/s10664-019-09736-3
   Kotu V., 2015, Predictive Analytics and Data Mining, P17, DOI DOI 10.1016/B978-0-12-801460-8.00002-1
   Kuper Gabriel M., 2000, Constraint Databases
   Landman D, 2014, PROC IEEE INT CONF S, P221, DOI 10.1109/ICSME.2014.44
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Lenarduzzi V, 2017, PROC IEEE ACM INT C, P146, DOI 10.1109/ICSE-C.2017.122
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McClure C. L., 1978, 3rd International Conference on Software Engineering, P149
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mo R, 2016, PROC INT CONF SOFTW, P499, DOI 10.1145/2884781.2884825
   Monden A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P87, DOI 10.1109/METRIC.2002.1011328
   Moser R, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P309
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Oman P., 1992, Conference on Software Maintenance 1992 (Cat.No.92CH3206-0), P337, DOI 10.1109/ICSM.1992.242525
   Palomba F, 2017, INT C PROGRAM COMPRE, P176, DOI 10.1109/ICPC.2017.38
   PantiuchinaJ LanzaM, 2018, IEEEINTERNATIONALCON, ppp80
   Papadakis M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P537, DOI 10.1145/3180155.3180183
   Pascarella L, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110493
   Posnett D, 2011, P 8 WORKING C MINING, P73
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Rahman A.E., 2012, Appl. Catal A: Gen, V411-412, P77
   Ralph Paul, 2018, P 22 INT C EV ASS SO, P13
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Romano D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P303, DOI 10.1109/ICSM.2011.6080797
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Scalabrino S, 2016, 2016 IEEE 24 INT C P, P1
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
   Scholtes I, 2016, EMPIR SOFTW ENG, V21, P642, DOI 10.1007/s10664-015-9406-4
   SHEPPERD M, 1988, SOFTWARE ENG J, V3, P30, DOI 10.1049/sej.1988.0003
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Sridhara G., 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   Ståhl D, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P81, DOI 10.1109/ICSE-SEIP.2019.00017
   Subandri MA, 2017, PROCEDIA COMPUT SCI, V124, P478, DOI 10.1016/j.procs.2017.12.180
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Terceiro Antonio, 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P21, DOI 10.1109/SBES.2010.26
   Thode Henry C., 2002, STAT TEXTB MONOG, V164, DOI 10.1201/9780203910894
   Tiwari Umesh, 2014, ACM SIGSOFT Software Engineering Notes, V39, DOI 10.1145/2557833.2557853
   Tosun A, 2010, INFORM SOFTWARE TECH, V52, P1242, DOI 10.1016/j.infsof.2010.06.006
   Viggiato M, 2019, PROC IEEE INT CONF S, P218, DOI 10.1109/ICSME.2019.00033
   Wang QY, 2019, INFORM SOFTWARE TECH, V110, P108, DOI 10.1016/j.infsof.2019.02.007
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Yu Liguo, 2013, An empirical study of Lehman's law on software quality evolution
   Zhang F, 2013, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2013.46
   Zhou YM, 2010, J SYST SOFTWARE, V83, P660, DOI 10.1016/j.jss.2009.11.704
NR 98
TC 4
Z9 4
U1 1
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 158
DI 10.1007/s10664-022-10193-8
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3W0ZK
UT WOS:000842083700001
OA Green Published
DA 2024-07-18
ER

PT J
AU Foundjem, A
   Constantinou, E
   Mens, T
   Adams, B
AF Foundjem, Armstrong
   Constantinou, Eleni
   Mens, Tom
   Adams, Bram
TI A mixed-methods analysis of micro-collaborative coding practices in
   OpenStack
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Collaborative software development; Open source software; OpenStack;
   Social coding; Code reviews; Mixed methods research
ID CHI-SQUARE TEST; DATA SATURATION; SOFTWARE; INTERVIEWS; DEVELOPER;
   IMPACT
AB Technical collaboration between multiple contributors is a natural phenomenon in distributed open source software development projects. Macro-collaboration, where each code commit is attributed to a single collaborator, has been extensively studied in the research literature. This is much less the case for so-called micro-collaboration practices, in which multiple authors contribute to the same commit. To support such practices, GitLab and GitHub started supporting social coding mechanisms such as the "Co-Authored-By:" trailers in commit messages, which, in turn, enable to empirically study such micro-collaboration. In order to understand the mechanisms, benefits and limitations of micro-collaboration, this article provides an exemplar case study of collaboration practices in the OpenStack ecosystem. Following a mixed-method research approach we provide qualitative evidence through a thematic and content analysis of semi-structured interviews with 16 OpenStack contributors. We contrast their perception with quantitative evidence gained by statistical analysis of the git commit histories (similar to 1M commits) and Gerrit code review histories (631K change sets and similar to 2M patch sets) of 1,804 OpenStack project repositories over a 9-year period. Our findings provide novel empirical insights to practitioners to promote micro-collaborative coding practices, and to academics to conduct further research towards understanding and automating the micro-collaboration process.
C1 [Foundjem, Armstrong; Adams, Bram] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Constantinou, Eleni] Eindhoven Univ Technol, Dept Math & Comp Sci, Eindhoven, Netherlands.
   [Mens, Tom] Univ Mons, Software Engn Lab, Mons, Belgium.
C3 Queens University - Canada; Eindhoven University of Technology;
   University of Mons
RP Foundjem, A (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM a.foundjem@queensu.ca; e.constantinou@tue.nl; tom.mens@umons.ac.be;
   bram.adams@queensu.ca
RI Foundjem, Armstrong/JGE-5293-2023
OI Constantinou, Eleni/0000-0002-4242-2581
FU F.R.S.-FNRS [T.0017.18, J.0151.20, O.0157.18F-RG43]; FRQ-F.R.S.-FNRS
   [264544]
FX This research is partially supported by the F.R.S.-FNRS under Grant
   numbers T.0017.18, J.0151.20, and O.0157.18F-RG43 (Excellence of Science
   project SECO-Assist), as well as by the FRQ-F.R.S.-FNRS under Grant
   number 264544 (bilateral Qu ' ebec-Wallonia project SECOHealth).
CR Al-Subaihin AA, 2021, IEEE T SOFTWARE ENG, V47, P300, DOI 10.1109/TSE.2019.2891715
   An L, 2018, SOFTWARE QUAL J, V26, P553, DOI 10.1007/s11219-017-9361-y
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2013, PATH ANAL
   Arya D, 2019, PROC INT CONF SOFTW, P454, DOI 10.1109/ICSE.2019.00058
   Avelino Guilherme, 2017, IFIP INT C OPEN SOUR, P151, DOI DOI 10.1007/978-3-319-57735-7_15
   Bagozzi RP, 2012, J ACAD MARKET SCI, V40, P8, DOI 10.1007/s11747-011-0278-x
   Beran Tanya N, 2010, BMC Res Notes, V3, P267, DOI 10.1186/1756-0500-3-267
   Bernard H. R., 2016, ANAL QUALITATIVE DAT
   Bick S, 2018, IEEE T SOFTWARE ENG, V44, P932, DOI 10.1109/TSE.2017.2730870
   Bird C, 2012, P ACM SIGSOFT 20 INT, P45
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   Bird Christian., 2016, Perspectives on Data Science for Software Engineering
   Bogart C, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447245
   Borg M, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P7, DOI 10.1145/3340482.3342742
   Brooks Frederick P., 1974, The mythical man-month
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Neto EC, 2019, INT SYMP EMP SOFTWAR, P94
   Casalnuovo C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P817, DOI 10.1145/2786805.2786854
   Cassee N, 2021, 2021 IEEE INT C SOFT, P654, DOI DOI 10.1109/ICSME52107.2021.00075
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Costa C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P523, DOI 10.1145/2950290.2950339
   Costello CM, 2020, TELEMED E-HEALTH, V26, P935, DOI 10.1089/tmj.2019.0051
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Datta S, 2018, EMPIR SOFTW ENG, V23, P1153, DOI 10.1007/s10664-017-9534-0
   Dingsoyr T, 2018, EMPIR SOFTW ENG, V23, P490, DOI 10.1007/s10664-017-9524-2
   DiStaso MW, 2012, PUBLIC RELAT REV, V38, P511, DOI 10.1016/j.pubrev.2012.01.003
   Egelman CD, 2020, PROC INT CONF SOFTW, P174, DOI 10.1145/3377811.3380414
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   Forsgren Nicole, 2021, ACM Queue, V19, P20, DOI 10.1145/3454122.3454124
   Foundjem A, 2021, PROC INT CONF SOFTW, P1033, DOI 10.1109/ICSE43902.2021.00097
   Foundjem A, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09929-1
   Foundjem Armstrong., Replication package - v2.0.0, DOI DOI 10.5281/ZENODO.5759968
   Fusch PI, 2015, QUAL REP, V20, P1408
   German DM, 2016, EMPIR SOFTW ENG, V21, P260, DOI 10.1007/s10664-014-9356-2
   Ghaiumy Anaraky Reza, 2021, Proceedings of the ACM on Human-Computer Interaction, V5, DOI 10.1145/3479522
   Goeminne M, 2013, SCI COMPUT PROGRAM, V78, P971, DOI 10.1016/j.scico.2011.11.004
   Golzadeh M, 2021, 2021 IEEE/ACM THIRD INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2021), P21, DOI 10.1109/BotSE52550.2021.00012
   Gopal A, 2005, IEEE T SOFTWARE ENG, V31, P679, DOI 10.1109/TSE.2005.95
   Guest G, 2006, FIELD METHOD, V18, P59, DOI 10.1177/1525822X05279903
   Henley A, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173731
   Hess M. R., 2004, ANN M AM ED RES ASS, P1
   Himmelsbach Julia., 2019, Proceedings of the 2019 CHI Conference on Human Factors in Computing Systems, P1
   Igolkina AA, 2020, STRUCT EQU MODELING, V27, P952, DOI 10.1080/10705511.2019.1704289
   Islam MS, 2018, IEEE T RELIAB, V67, P212, DOI 10.1109/TR.2017.2787138
   Izquierdo-Cortazar D., 2017, P 21 INT C EV ASS SO, P214, DOI DOI 10.1145/3084226.3084247
   JOHNSON DR, 1983, AM SOCIOL REV, V48, P398, DOI 10.2307/2095231
   Kalliamvakou E, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P574, DOI 10.1109/ICSE.2015.74
   Kang H, 2021, ASIAN NURS RES, V15, P157, DOI 10.1016/j.anr.2021.06.001
   Kim M, 2016, PROC INT CONF SOFTW, P96, DOI 10.1145/2884781.2884783
   Klem L., 2000, Reading and understanding more multivariate statisics
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kovalenko V, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P29, DOI 10.1145/3195836.3195842
   Krusche S, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P384, DOI 10.1145/2889160.2889191
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lenberg P, 2017, EMPIR SOFTW ENG, V22, P2179, DOI 10.1007/s10664-016-9482-0
   Lui KM, 2006, INT J HUM-COMPUT ST, V64, P915, DOI 10.1016/j.ijhcs.2006.04.010
   Mardi Fatemeh, 2021, SIGCSE '21: Proceedings of the 52nd ACM Technical Symposium on Computer Science Education, P226, DOI 10.1145/3408877.3432543
   McHugh ML, 2013, BIOCHEM MEDICA, V23, P143, DOI 10.11613/BM.2013.018
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Mens T, 2019, IEEE SOFTWARE, V36, P11, DOI 10.1109/MS.2018.2874316
   Meshcheryakov G, 2021, ARXIV
   Meyer AN, 2021, IEEE T SOFTWARE ENG, V47, P863, DOI 10.1109/TSE.2019.2904957
   Mlouki O, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P382, DOI 10.1109/SANER.2016.73
   Mukadam M, 2013, IEEE WORK CONF MIN S, P45, DOI 10.1109/MSR.2013.6624002
   Neumayr Thomas, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274397
   Oliveira E, 2020, EMPIR SOFTW ENG, V25, P2519, DOI 10.1007/s10664-020-09820-z
   Plonka L, 2015, INT J HUM-COMPUT ST, V73, P66, DOI 10.1016/j.ijhcs.2014.09.001
   Rahman MT, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P607, DOI 10.1109/SANER.2015.7081893
   Rich JT, 2010, OTOLARYNG HEAD NECK, V143, P331, DOI 10.1016/j.otohns.2010.05.007
   Rigby PC, 2012, IEEE SOFTWARE, V29, P56, DOI 10.1109/MS.2012.24
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Salleh N, 2018, INFORM SOFTWARE TECH, V98, P161, DOI 10.1016/j.infsof.2017.12.001
   Satorra A, 2001, PSYCHOMETRIKA, V66, P507, DOI 10.1007/BF02296192
   Sharp H, 2008, INT J HUM-COMPUT ST, V66, P506, DOI 10.1016/j.ijhcs.2007.10.004
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Spohrer A H K, 2013, INT C INF SYST
   Steinmacher I, 2014, OPEN SOURCE SOFTWARE
   Terzimehic Naundefineda., 2019, ICHF in Computing Systems, P1
   Tong C., 2012, INT J EC FINANCE, V4, P105, DOI [DOI 10.5539/IJEF.V4N3P105, 10.5539/ijef.v4n3p105]
   Treiblmaier H, 2010, INFORM MANAGE-AMSTER, V47, P197, DOI 10.1016/j.im.2010.02.002
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Vallat R, 2018, J. Open Source Softw, V3, P1026, DOI [10.21105/joss.01026, DOI 10.21105/JOSS.01026]
   Wen M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P326, DOI 10.1145/3338906.3338962
   Whitehead J, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P214, DOI 10.1109/FOSE.2007.4
   Wohlin C., 2012, Experimentation in Software Engineering
   Xia X, 2015, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSM.2015.7332472
   Young J-G, 2021, INT WORKING C MINING
   Zhang YX, 2021, IEEE T SOFTWARE ENG, V47, P2242, DOI 10.1109/TSE.2019.2946156
   Zhang YX, 2020, PROC INT CONF SOFTW, P1196, DOI 10.1145/3377811.3380376
   Zhou SR, 2020, PROC INT CONF SOFTW, P445, DOI 10.1145/3377811.3380412
NR 97
TC 2
Z9 2
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2022
VL 27
IS 5
AR 120
DI 10.1007/s10664-022-10167-w
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2F0WS
UT WOS:000812638900001
PM 35757446
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Rehman, I
   Wang, D
   Kula, RG
   Ishio, T
   Matsumoto, K
AF Rehman, Ifraz
   Wang, Dong
   Kula, Raula Gaikovina
   Ishio, Takashi
   Matsumoto, Kenichi
TI Newcomer OSS-Candidates: Characterizing Contributions of Novice
   Developers to GitHub
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Newcomers; Open source software; GitHub
ID MOTIVATION
AB The ability of an Open Source Software (OSS) project to attract, onboard, and retain any newcomer is vital to its livelihood. Although, evidence suggests an upsurge in novice developers joining social coding platforms (such as GitHub), the extent to which their activities result in a OSS contribution is unknown. Henceforth, we execute the protocols of a registered report to study activities of a "Newcomer OSS-Candidate", who is a novice developer that is new to that social coding platform, and has the intention to later onboard an OSS project. Using GitHub as a case platform, we analyze 171 identified Newcomer OSS-Candidates to characterize their contribution activities. Results show that Newcomer OSS-Candidates are likely to target software based repositories (i.e., 66%), and their first contributions are mainly associated with development (commits) and maintenance (PRs). Newcomer OSS-Candidates are less likely to practice social coding, but eventually end up onboarding (i.e., 30% quantitative, 70% follow-up survey) an OSS project. Furthermore, they cite finding a way to start as the most challenging barrier to contribute. Our work reveals insights on how newcomers to social coding platforms are potential sources of OSS contributions.
C1 [Rehman, Ifraz; Kula, Raula Gaikovina; Ishio, Takashi; Matsumoto, Kenichi] Nara Inst Sci & Technol, Ikoma, Japan.
   [Wang, Dong] Kyushu Univ, Fukuoka, Japan.
C3 Nara Institute of Science & Technology; Kyushu University
RP Rehman, I (corresponding author), Nara Inst Sci & Technol, Ikoma, Japan.
EM rehman.ifraz.qy4@is.naist.jp; wang.dong.vt8@is.naist.jp;
   raula-k@is.naist.jp; ishio@is.naist.jp; matumoto@is.naist.jp
RI Kula, Raula/AAD-6079-2019
OI Kula, Raula/0000-0003-2324-0608; Ishio, Takashi/0000-0003-4106-699X
FU Japanese Society for the Promotion of Science (JSPS) KAKENHI [18H04094,
   20K19774, 20H05706]; Grants-in-Aid for Scientific Research [20K19774]
   Funding Source: KAKEN
FX This work is supported by Japanese Society for the Promotion of Science
   (JSPS) KAKENHI Grant Numbers 18H04094 and 20K19774 and 20H05706.
CR [Anonymous], 2002, IWPSE 02
   [Anonymous], 2014, WORKSH GLOB SOFTW DE
   Begel Andrew, 2008, P 4 INT WORKSH COMP, P3, DOI [DOI 10.1145/RESEARCH(ICER'1404520.1404522, 10.1145/Research(ICER'1404520.1404522]
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Choi B, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P107
   Coelho J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P186, DOI 10.1145/3106237.3106246
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Dagenais B, 2010, P 32 ACMIEEE INT C S
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Fagerholm F, 2014, P 8 ACM IEEE INT S E, P110
   Fagerholm F, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING WORKSHOPS (ICGSEW 2013), P5, DOI 10.1109/ICGSEW.2013.8
   Fang Y, 2009, J MANAGE INF SYST
   Hattori LP, 2008, 2008 23RD IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS, PROCEEDINGS, P147
   Kalliamvakou E., 2014, P 11 WORK C MIN SOFT
   Kula R. G., 2019, LIFE DEATH SOFTWARE, P97, DOI DOI 10.1007/978-981-13-7099-1_6
   Lakhani K.R., 2005, Perspectives on free and open source software, P3, DOI DOI 10.2139/SSRN.443040
   Marlow J., 2013, P 2013 C COMP SUPP C
   Meirelles P., 2010, 2010 Proceedings of 24th Brazilian Symposium on Software Engineering (SBES 2010), P11, DOI 10.1109/SBES.2010.27
   Munaiah N, 2016, CURATING GITHUB ENGI
   Musicant David R, 2011, P 7 INT S WIK OP C W, P173, DOI DOI 10.1145/2038558.2038586
   Park Y, 2009, IEEE INT WORK VIS SO, P3, DOI 10.1109/VISSOF.2009.5336433
   Paternoster R, 1998, CRIMINOLOGY, V36, P859, DOI 10.1111/j.1745-9125.1998.tb01268.x
   Rehman I, 2020, PROC IEEE INT CONF S, P855, DOI 10.1109/ICSME46990.2020.00110
   Santos C, 2013, J STRATEGIC INF SYST, V22, P26, DOI 10.1016/j.jsis.2012.07.004
   Shah SK, 2006, MANAGE SCI, V52, P1000, DOI 10.1287/mnsc.1060.0553
   Steinmacher I, 2016, PROC INT CONF SOFTW, P273, DOI 10.1145/2884781.2884806
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Steinmacher I, 2015, P ANN HICSS, P5299, DOI 10.1109/HICSS.2015.624
   Subramanian V. N., 2020, IEEE SOFTWARE
   Swap W, 2001, J MANAGE INFORM SYST, V18, P95, DOI 10.1080/07421222.2001.11045668
   Valiev M, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P644, DOI 10.1145/3236024.3236062
   Viera AJ, 2005, FAM MED, V37, P360
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   Wiese IS, 2016, PROC IEEE INT CONF S, P345, DOI 10.1109/ICSME.2016.13
   Ye YW, 2003, PROC INT CONF SOFTW, P419
   Zhou M., 2015, WHO WILL STAY FLOSS
   Zhou M, 2010, FOSER
NR 37
TC 5
Z9 5
U1 2
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2022
VL 27
IS 5
AR 109
DI 10.1007/s10664-022-10163-0
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1U7GT
UT WOS:000805577100008
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Croft, R
   Xie, YZ
   Zahedi, M
   Babar, MA
   Treude, C
AF Croft, Roland
   Xie, Yongzheng
   Zahedi, Mansooreh
   Babar, M. Ali
   Treude, Christoph
TI An empirical study of developers' discussions about security challenges
   of different programming languages
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software security; Repository mining; Natural language processing;
   Empirical software engineering
ID STACK OVERFLOW; QUESTIONS; GITHUB; IMPACT
AB Given programming languages can provide different types and levels of security support, it is critically important to consider security aspects while selecting programming languages for developing software systems. Inadequate consideration of security in the choice of a programming language may lead to potential ramifications for secure development. Whilst theoretical analysis of the supposed security properties of different programming languages has been conducted, there has been relatively little effort to empirically explore the actual security challenges experienced by developers. We have performed a large-scale study of the security challenges of 15 programming languages by quantitatively and qualitatively analysing the developers' discussions from Stack Overflow and GitHub. By leveraging topic modelling, we have derived a taxonomy of 18 major security challenges for 6 topic categories. We have also conducted comparative analysis to understand how the identified challenges vary regarding the different programming languages and data sources. Our findings suggest that the challenges and their characteristics differ substantially for different programming languages and data sources, i.e., Stack Overflow and GitHub. The findings provide evidence-based insights and understanding of security challenges related to different programming languages to software professionals (i.e., practitioners or researchers). The reported taxonomy of security challenges can assist both practitioners and researchers in better understanding and traversing the secure development landscape. This study highlights the importance of the choice of technology, e.g., programming language, in secure software engineering. Hence, the findings are expected to motivate practitioners to consider the potential impact of the choice of programming languages on software security.
C1 [Croft, Roland; Xie, Yongzheng; Babar, M. Ali] Univ Adelaide, Sch Comp Sci, Adelaide, SA, Australia.
   [Croft, Roland; Babar, M. Ali] Cyber Secur Cooperat Res Ctr, Perth, WA, Australia.
   [Zahedi, Mansooreh; Treude, Christoph] Univ Melbourne, Sch Comp & Informat Syst, Melbourne, Vic, Australia.
C3 University of Adelaide; University of Melbourne
RP Croft, R (corresponding author), Univ Adelaide, Sch Comp Sci, Adelaide, SA, Australia.; Croft, R (corresponding author), Cyber Secur Cooperat Res Ctr, Perth, WA, Australia.
EM Roland.Croft@adelaide.edu.au; Yongzheng.Xie@adelaide.edu.au;
   mansooreh.zahedi@unimelb.edu.au; Ali.Babar@adelaide.edu.au;
   christoph.treude@unimelb.edu.au
RI Treude, Christoph/AAZ-6257-2021
OI Zahedi, Mansooreh/0000-0001-6276-9956; Treude,
   Christoph/0000-0002-6919-2149
FU Cyber Security Research Centre Limited - Australian Government's
   Cooperative Research Centres Programme
FX The work has been supported by the Cyber Security Research Centre
   Limited whose activities are partially funded by the Australian
   Government's Cooperative Research Centres Programme.
CR Acar Y, 2016, P IEEE S SECUR PRIV, P289, DOI 10.1109/SP.2016.25
   Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   Ahmad A, 2018, DATA TECHNOL APPL, V52, P190, DOI 10.1108/DTA-07-2017-0054
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   [Anonymous], 2012, Concepts of programming languages
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Bangash AA, 2019, WHAT DEV KNOW MACHIN
   Barnum S, 2005, IEEE SECUR PRIV, V3, P74, DOI 10.1109/MSP.2005.45
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bayati Shahab, 2016, Intelligence and Security Informatics. 11th Pacific Asia Workshop, PAISI 2016. Proceedings: LNCS 9650, P193, DOI 10.1007/978-3-319-31863-9_14
   Beyer S, 2020, EMPIR SOFTW ENG, V25, P2258, DOI 10.1007/s10664-019-09758-x
   Bhattacharya P, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P171, DOI 10.1145/1985793.1985817
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Borges H, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P397, DOI 10.1145/3350768.3350788
   Cabot J, 2015, EXPLORING USE LABELS
   Campbell JC, 2013, DEFICIENT DOCUMENTAT
   CARDELLI L, 1985, COMPUT SURV, V17, P471, DOI 10.1145/6041.6042
   Chakraborty P, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106603
   Chen MS, 2019, PROC INT CONF SOFTW, P536, DOI 10.1109/ICSE.2019.00065
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Cifuentes C, 2019, 3 SUMM ADV PROGR LAN
   Cochran WilliamGemmell., 1999, Sampling techniques, V3d
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Dhurjati D, 2003, ACM SIGPLAN NOTICES, V38, P69, DOI 10.1145/780731.780743
   Fincher S, 2005, EXPERT SYST, V22, P89, DOI 10.1111/j.1468-0394.2005.00299.x
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   Gkortzis A, 2018, IEEE WORK CONF MIN S, P18, DOI 10.1145/3196398.3196454
   Grossman D., 2005, C C USERS J, V23, P112
   Han JX, 2020, EMPIR SOFTW ENG, V25, P2694, DOI 10.1007/s10664-020-09819-6
   Hanenberg S, 2014, EMPIR SOFTW ENG, V19, P1335, DOI 10.1007/s10664-013-9289-1
   Hata H, 2019, PROC INT CONF SOFTW, P1211, DOI 10.1109/ICSE.2019.00123
   Horschig S, 2018, C COMP 2 INT C ART, P127
   HOWELL D.C., 2012, Statistical methods for psychology
   Hussain Md., 2019, J OPEN SOURCE SOFTW, V4, P1556, DOI [10.21105/joss.01556, DOI 10.21105/JOSS.01556]
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Khwaja AA, 2020, SECUR PRIVACY, V3, DOI 10.1002/spy2.95
   Kleinschmager S, 2012, DO STATIC TYPE SYSTE
   KNIGHT WR, 1966, J AM STAT ASSOC, V61, P436, DOI 10.2307/2282833
   Kochhar PS, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P563, DOI 10.1109/SANER.2016.112
   Le THM, 2020, IEEE WORK CONF MIN S, P350, DOI 10.1145/3379597.3387443
   Linares-Vásquez M, 2013, IEEE WORK CONF MIN S, P93, DOI 10.1109/MSR.2013.6624014
   Lopez T, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P31, DOI 10.1109/ICSE-SEIS.2019.00012
   Lopez T, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SECURITY AWARENESS FROM DESIGN TO DEPLOYMENT (SEAD), P26, DOI [10.23919/SEAD.2018.8472850, 10.1145/3194707.3194713]
   Mailloux LO, 2018, IT PROF, V20, P23, DOI 10.1109/MITP.2018.032501745
   Mantyla MV, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267435
   Martin A, 2019, CYBER SECURITY BODY
   Massacci F., 2010, P 6 INT WORKSHOP SEC, P1, DOI [10.1145/1853919.1853925, DOI 10.1145/1853919.1853925]
   Menezes A. J., 2018, HDB APPL CRYPTOGRAPH, DOI DOI 10.1201/9780429466335
   Meyerovich LA, 2013, ACM SIGPLAN NOTICES, V48, P1, DOI 10.1145/2509136.2509515
   Mimno D, 2011, EMNLP, P262, DOI DOI 10.5555/2145432.2145462
   Naiditch D, 1999, IEEE AERO EL SYS MAG, V14, P11, DOI 10.1109/62.793447
   Nguyen VietHung., 2013, P 8 ACM SIGSAC S INF, P493
   Nothman J, 2018, NLP OPEN SOURCE SOFTWARE (NLP-OSS), P7
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Pearson K, 1900, PHILOS MAG, V50, P157, DOI 10.1080/14786440009463897
   Pierce Benjamin C., 2002, TYPES PROGRAMMING LA, V1st
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Rafter D, 2019, 2019 DATA BREACHES 4
   Rahman M. M, 2014, P 11 WORK C MIN SOFT, P364, DOI DOI 10.1145/2597073.2597121
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Roland Croft, 2021, P 15 ACM IEEE INT S, DOI [DOI 10.1145/3475716.3475781, 10.1145/3475716.3475781]
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Seacord R., 2005, SECURE CODING C C
   Sestoft P, 2005, JAVA PERFORMANCE RED
   Shahriar H, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187673
   Sindre G, 2005, REQUIR ENG, V10, P34, DOI 10.1007/s00766-004-0194-4
   Tian YJ, 2019, CMC-COMPUT MATER CON, V61, P465, DOI 10.32604/cmc.2019.07818
   Treude Christoph, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P84, DOI 10.1109/MSR.2019.00022
   Le THM, 2021, PROCEEDINGS OF EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING (EASE 2021), P109, DOI 10.1145/3463274.3463331
   Vasilescu B, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P188, DOI 10.1109/SocialCom.2013.35
   Venson E, 2019, INT SYMP EMP SOFTWAR, P241
   Verdi M, 2020, IEEE T SOFTW ENG
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1331, DOI 10.1109/TSE.2019.2921343
   Wessel M, 2019, 2019 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2019), P38, DOI 10.1109/BotSE.2019.00018
   Xiong Y., 2017, 29 INT C SOFTW ENG K, P578, DOI DOI 10.18293/SEKE2017-062
   Yang LM, 2017, IEEE GLOB COMM CONF
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Zahedi M, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P5504
   Zhang H, 2021, IEEE T SOFTW ENG
   Zhang J., 2019, IEEE T SOFTW ENG
   Zou J, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P446, DOI 10.1109/MSR.2015.60
NR 84
TC 5
Z9 5
U1 1
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 27
DI 10.1007/s10664-021-10054-w
PG 52
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XF3VG
UT WOS:000724001300004
DA 2024-07-18
ER

PT J
AU Kim, DJ
   Chen, TH
   Yang, JQ
AF Kim, Dong Jae
   Chen, Tse-Hsun (Peter)
   Yang, Jinqiu
TI The secret life of test smells-an empirical study on test smell
   evolution and maintenance
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Test smell; Empirical study; Software quality
ID CODE QUALITY; SOFTWARE; MODELS; BAD
AB In recent years, researchers and practitioners have been studying the impact of test smells on test maintenance. However, there is still limited empirical evidence on why developers remove test smells in software maintenance and the mechanism employed for addressing test smells. In this paper, we conduct an empirical study on 12 real-world open-source systems to study the evolution and maintenance of test smells, and how test smells are related to software quality. Our results show that: 1) Although the number of test smell instances increases, test smell density decreases as systems evolve. 2) However, our qualitative analysis on those removed test smells reveals that most test smell removal (83%) is a by-product of feature maintenance activities. 45% of the removed test smells relocate to other test cases due to refactoring, while developers deliberately address the only 17% of the test smell instances, consisting of largely Exception Catch/Throw and Sleepy Test. 3) Our statistical model shows that test smell metrics can provide additional explanatory power on post-release defects over traditional baseline metrics (an average of 8.25% increase in AUC). However, most types of test smells have a minimal effect on post-release defects. Our study provides insight into how developers resolve test smells and current test maintenance practices. Future studies on test smells may consider focusing on the specific types of test smells that may have a higher correlation with defect-proneness when helping developers with test code maintenance.
C1 [Kim, Dong Jae; Chen, Tse-Hsun (Peter); Yang, Jinqiu] Concordia Univ, Dept Comp Sci & Engn, Montreal, PQ, Canada.
C3 Concordia University - Canada
RP Kim, DJ (corresponding author), Concordia Univ, Dept Comp Sci & Engn, Montreal, PQ, Canada.
EM k_dongja@encs.concordia.ca; peterc@encs.concordia.ca;
   jinqiuy@encs.concordia.ca
OI Chen, Tse-Hsun/0000-0003-4027-0905
CR Akiyama F., 1972, Information Processing 71 Proceedings of the IFIP Congress 1971 Volume 1, P353
   AlDanial, 2019, COUNT LINES CODE
   [Anonymous], 2018, ARXIV180110271
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Apache, 2020, AP JENK
   Athanasiou D, 2014, IEEE T SOFTWARE ENG, V40, P1100, DOI 10.1109/TSE.2014.2342227
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   bin Ali N, 2019, EMPIR SOFTW ENG, V24, P2020, DOI 10.1007/s10664-018-9670-1
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Biyani S, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P316, DOI 10.1109/ISSRE.1998.730896
   Chen T-H, 2012, P 9 WORK C MIN SOFTW
   Chen TH, 2017, IEEE T RELIAB, V66, P806, DOI 10.1109/TR.2017.2699938
   Chen TH, 2017, J SYST SOFTWARE, V129, P79, DOI 10.1016/j.jss.2016.05.015
   Child M, 2019, J SYST SOFTWARE, V151, P120, DOI 10.1016/j.jss.2019.02.020
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   De Bleser Jonas, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P457, DOI 10.1109/MSR.2019.00072
   de Padua GB, 2018, IEEE WORK CONF MIN S, P564, DOI 10.1145/3196398.3196435
   Deursen A., 2001, Refactoring Test Code
   Eck M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P830, DOI 10.1145/3338906.3338945
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Harrell FE, 2015, SPRINGER SER STAT, P1, DOI 10.1007/978-3-319-19425-7_1
   Junior NS, 2020, ARXIV200305613
   Junior NS, 2020, ARXIV200305613
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   KNUTH D. E., 1981, Addison-Wesley Series in Computer Science and Information Processing, V2
   Kuhn M., 2018, APPL PREDICTIVE MODE
   Lam W, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P101, DOI 10.1145/3293882.3330570
   Levin S, 2017, PROC IEEE INT CONF S, P35, DOI 10.1109/ICSME.2017.9
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Palomba F, 2019, IEEE T SOFTWARE ENG, V45, P194, DOI 10.1109/TSE.2017.2770122
   Palomba F, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P5, DOI [10.1145/2897010.2897016, 10.1109/SBST.2016.010]
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Peruma A., 2019, P 29 ANN INT C COMP, P193, DOI DOI 10.5555/3370272.3370293
   Peruma A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1650, DOI 10.1145/3368089.3417921
   Pham T M-T, 2020, 28 IEEE ACM INT C PR
   Pinto L. S., 2012, P ACM SIGSOFT 20 INT, P1
   Piotrowski P., 2020, DATA CENTRIC BUSINES, V4, P77, DOI 10.1007/978-3-030-34706-2_5
   Qusef A, 2019, IEEE ACCESS, V7, P139526, DOI 10.1109/ACCESS.2019.2943488
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Rodríguez-Pérez G, 2020, EMPIR SOFTW ENG, V25, P1294, DOI 10.1007/s10664-019-09781-y
   Shamshiri S, 2018, IEEE INT CONF SOFTW, P250, DOI 10.1109/ICST.2018.00033
   Shang WY, 2015, EMPIR SOFTW ENG, V20, P1, DOI 10.1007/s10664-013-9274-8
   Shi A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P112, DOI 10.1145/3293882.3330568
   Shihab E., 2010, Proceedings of the ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, P1
   Spadini D, 2020, IEEE WORK CONF MIN S, P311, DOI 10.1145/3379597.3387453
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Spinola Rodrigo O., 2019, Journal of the Brazilian Computer Society, V25, DOI 10.1186/s13173-019-0087-5
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Yu CS, 2019, ARXIV190713365
   Zaidman Andy, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P220, DOI 10.1109/ICST.2008.47
   Zeller A, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION
   Zhao XW, 2019, KNOWL-BASED SYST, V163, P416, DOI 10.1016/j.knosys.2018.09.007
NR 62
TC 23
Z9 24
U1 1
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 100
DI 10.1007/s10664-021-09969-1
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UJ9IQ
UT WOS:000691591800001
DA 2024-07-18
ER

PT J
AU Di Sorbo, A
   Panichella, S
AF Di Sorbo, Andrea
   Panichella, Sebastiano
TI Exposed! A case study on the vulnerability-proneness of Google Play Apps
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mobile applications; Vulnerability-proneness; Empirical study
AB Mobile applications are used for accomplishing everyday life activities, such as shopping, banking, and social communications. To leverage the features of mobile apps, users often need to share sensitive information. However, recent research demonstrated that most of such apps present critical security and privacy defects. In this context, we define as vulnerability-proneness the risk level(s) that users meet in downloading specific apps, to better understand whether (1) users select apps with lower risk levels and if (2) vulnerability-proneness of an app might affect its success. We use as proxy to measure such risk level the "number of different types of potential security issues exhibited by the app". We conjecture that the vulnerability-proneness levels may vary based on (i) the types of data handled by the app, and (ii) the operations for which the app is supposed to be used. Hence, we investigate how the vulnerability-proneness of apps varies when observing (i) different app categories, and (ii) apps with different success levels. Finally, to increase the awareness of both users and developers on the vulnerability-proneness of apps, we evaluate the extent to which contextual information provided by the app market can be exploited to estimate the vulnerability-proneness levels of mobile apps. Results of our study show that apps in the Medical category exhibit the lowest levels of vulnerability-proneness. Besides, while no strong relations between vulnerability-proneness and average rating are observed, apps with a higher number of downloads tend to have higher vulnerability-proneness levels, but lower vulnerability-proneness density. Finally, we found that apps' contextual information can be used to predict, in the early stages, the vulnerability-proneness levels of mobile apps.
C1 [Di Sorbo, Andrea] Univ Sannio, Dept Engn, Benevento, Italy.
   [Panichella, Sebastiano] Zurich Univ Appl Sci, Zurich, Switzerland.
C3 University of Sannio; Zurich University of Applied Sciences
RP Di Sorbo, A (corresponding author), Univ Sannio, Dept Engn, Benevento, Italy.
EM disorbo@unisannio.it; panc@zhaw.ch
OI Di Sorbo, Andrea/0000-0002-3192-739X; Panichella,
   Sebastiano/0000-0003-4120-626X
FU Faculty of Business, Economics, and Informatics of the University of
   Zurich; Software Evolution and Architecture Lab
FX We gratefully thank Prof. Dr. Harald Gall, Dean of the Faculty of
   Business, Economics, and Informatics of the University of Zurich and
   director of the Software Evolution and Architecture Lab, for supporting
   this research, making the lab facilities available to the development of
   this research project. We also thank Prof. Gall for the qualitative
   feedback on the direction of this work and the ongoing collaboration in
   close-related research projects. Finally, we thank the anonymous
   reviewers and the editors for the constructive and relevant feedback on
   our study. Their openness to dialogue has been fundamental to improve
   the manuscript.
CR Acar Y, 2016, P IEEE S SECUR PRIV, P433, DOI 10.1109/SP.2016.33
   Afroz S, 2013, WORKSH SOCIOTECH ASP, P10, DOI 10.1109/STAST.2013.13
   Alenezi Mamdouh, 2018, 5th International Symposium on Data Mining Applications. Advances in Intelligent Systems and Computing (AISC 753), P84, DOI 10.1007/978-3-319-78753-4_8
   Ali Mohamed, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P79, DOI 10.1109/MOBILESoft.2017.3
   Aliasgari M, 2018, 2018 IEEE CONFERENCE ON APPLICATION, INFORMATION AND NETWORK SECURITY (AINS 2018), P21, DOI 10.1109/AINS.2018.8631464
   Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Amin A, 2019, INFORMATION, V10, DOI 10.3390/info10100326
   [Anonymous], 2011, USENIX SEC S
   [Anonymous], 2014, 21 ANN NETW DISTR SY
   Antoniol Giuliano, 2008, P 2008 C CTR ADV STU
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Bhattacharya P, 2013, EUR CON SFTWR MTNCE, P133, DOI 10.1109/CSMR.2013.23
   Businge J, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P287, DOI [10.1109/saner.2019.8667998, 10.1109/SANER.2019.8667998]
   Cai Y, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P47, DOI [10.1109/saner48275.2020.9054863, 10.1109/SANER48275.2020.9054863]
   Canfora Gerardo, 2020, Computers & Security, V99, P185, DOI 10.1016/j.cose.2020.102067
   Canfora G, 2016, LECT NOTES COMPUT SC, V10027, P705, DOI 10.1007/978-3-319-49094-6_59
   Cao C., 2015, Proceedings of the 31st Annual Computer Security Applications Conference, Los Angeles, CA, USA, December 7-11, 2015, ACSAC'15, P361
   Chia PernHui., 2012, WWW 12 P 21 INT C WO, P311, DOI [10.1145/2187836.2187879, DOI 10.1145/2187836.2187879]
   Chin E., 2011, P 9 INT C MOB SYST A, P239, DOI DOI 10.1145/1999995.2000018
   Chin E, 2014, LECT NOTES COMPUT SC, V8267, P138, DOI 10.1007/978-3-319-05149-9_9
   Clark J, 2013, P IEEE S SECUR PRIV, P511, DOI 10.1109/SP.2013.41
   Conover W., 1998, WILEY SERIES PROBABI
   Corral L, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P22, DOI 10.1109/MobileSoft.2015.10
   Daoyuan Wu, 2014, Information Security. 17th International Conference, ISC 2014. Proceedings: LNCS 8783, P345, DOI 10.1007/978-3-319-13257-0_20
   Darvish H, 2018, IEEE INT CONF BIG DA, P3072, DOI 10.1109/BigData.2018.8622115
   Deka B, 2017, UIST'17: PROCEEDINGS OF THE 30TH ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY, P845, DOI 10.1145/3126594.3126651
   Di Sorbo A, 2021, IEEE T SOFTWARE ENG, V47, P1587, DOI 10.1109/TSE.2019.2930519
   Di Sorbo A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2316
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Nguyen DC, 2019, P IEEE S SECUR PRIV, P555, DOI 10.1109/SP.2019.00012
   Fahl S., 2012, ACM CCS 12, P50, DOI DOI 10.1145/2382196.2382205
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Gajrani Jyoti, 2020, ACM Digital Threats: Research Practice, V1, DOI 10.1145/3376121
   Gao J, 2021, IEEE T RELIAB, V70, P212, DOI 10.1109/TR.2019.2956690
   Gartner, 2015, GARTN SAYS MOR 75 PE
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Guerrouj L, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P321, DOI 10.1109/SANER.2015.7081842
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hay R., 2015, P 2015 INT S SOFTWAR, P118
   HOLM S, 1979, SCAND J STAT, V6, P65
   Islam M.R., 2014, 1st International Conference on Electrical Engineering and Information and Communication Technology, ICEEICT 2014, P1, DOI DOI 10.1177/0954407014557053
   Jimenez M, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P222, DOI 10.1109/QRS.2016.34
   Johann T, 2017, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2017.71
   Kallis R, 2019, PROC IEEE INT CONF S, P406, DOI 10.1109/ICSME.2019.00070
   Kantola David., 2012, Proceedings of the second ACM workshop on Security and privacy in smartphones and mobile devices, P69
   Kaur Arvinder, 2014, Lecture Notes on Software Engineering, V2, P176, DOI 10.7763/LNSE.2014.V2.118
   Khalid H, 2016, IEEE SOFTWARE, V33, P34, DOI 10.1109/MS.2015.29
   Kochhar P. S., 2015, ICST'15, P1
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Krutz D.E., 2016, P INT WORKSH APP MAR, P8, DOI [DOI 10.1145/2993259.2993260, 10.1145/2993259.2993260]
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Linares-Vásquez M, 2017, IEEE WORK CONF MIN S, P2, DOI 10.1109/MSR.2017.60
   Linares-Vasquez M, 2014, EMPIR SOFTW ENG, V19, P582, DOI 10.1007/s10664-012-9230-z
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Lu Long, 2012, P 2012 ACM C COMP CO, P229, DOI DOI 10.1145/2382196.2382223
   Lyu YJ, 2017, PROC IEEE INT CONF S, P444, DOI 10.1109/ICSME.2017.75
   Ma Z, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P653, DOI 10.1145/2889160.2889178
   Manadhata PK, 2011, IEEE T SOFTWARE ENG, V37, P371, DOI 10.1109/TSE.2010.60
   Minelli R, 2013, EUR CON SFTWR MTNCE, P144, DOI 10.1109/CSMR.2013.24
   Montealegre C, 2018, AUSTR INF SEC MAN C, P14
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Mutchler P, 2016, 2016 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2016), P204, DOI 10.1109/SPW.2016.31
   Oltrogge M, 2021, 30 USENIX SEC S USEN
   Panichella S., 2017, P 2 ACM SIGSOFT INT, P8
   Panichella S, 2018, 2018 IEEE 2ND INTERNATIONAL WORKSHOP ON VALIDATION, ANALYSIS AND EVOLUTION OF SOFTWARE TESTS (VST), P1, DOI 10.1109/VST.2018.8327148
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Papageorgiou A, 2018, IEEE ACCESS, V6, P9390, DOI 10.1109/ACCESS.2018.2799522
   Pecorelli F, 2020, INT C PROGRAM COMPRE, P296, DOI 10.1145/3387904.3389256
   Qian CX, 2015, IEEE MICRO, V35, P44, DOI 10.1109/MM.2015.25
   Quinlan J. R., 1986, Machine Learning, V1, P81, DOI 10.1007/BF00116251
   Ruiz IJM, 2016, IEEE SOFTWARE, V33, P86, DOI 10.1109/MS.2015.56
   Ruiz IJM, 2014, IEEE SOFTWARE, V31, P86, DOI 10.1109/MS.2014.79
   Russo ER, 2019, J SYST SOFTWARE, V156, P84, DOI 10.1016/j.jss.2019.06.001
   Scandariato R., 2012, Proceedings of the 4th international workshop on Security measurements and metrics, P11
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Silva DB, 2018, INFORM SOFTWARE TECH, V101, P32, DOI 10.1016/j.infsof.2018.05.006
   Slavin R, 2016, PROC INT CONF SOFTW, P25, DOI 10.1145/2884781.2884855
   Songtao Wang, 2018, IPSJ Transactions on Computer Vision and Applications, V10, DOI 10.1186/s41074-017-0037-0
   Taba SES, 2014, LECT NOTES COMPUT SC, V8541, P370, DOI 10.1007/978-3-319-08245-5_22
   Tao CQ, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106290
   Taylor VF, 2017, LECT NOTES COMPUT SC, V10322, P302, DOI 10.1007/978-3-319-70972-7_16
   Taylor VF, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P45, DOI 10.1145/3052973.3052990
   Thomas D R, ANN ACM CCS WORKSH S, P87
   Thomas DR, 2015, LECT NOTES COMPUT SC, V9379, P126, DOI 10.1007/978-3-319-26096-9_13
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Tien CW, 2017, I C DEPENDABLE SYST, P145, DOI 10.1109/DSN-W.2017.17
   Votipka D, 2018, P IEEE S SECUR PRIV, P374, DOI 10.1109/SP.2018.00003
   Wang HY, 2018, IEEE WORK CONF MIN S, P231, DOI 10.1145/3196398.3196412
   Watanabe T, 2017, IEEE WORK CONF MIN S, P14, DOI 10.1109/MSR.2017.23
   Xu M, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2963145
   Yang W, 2017, ANN NETW DISTR SYST
   Yang Zhemin., 2013, P 20 ACM C COMPUTER, P1043, DOI [DOI 10.1145/2508859.2516676, 10.1145/2508859.2516676]
   Yeom C, 2019, SUSTAINABILITY-BASEL, V11, DOI 10.3390/su11236637
   Zampetti F, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2020.106311
   Zhou Yajin, 2013, ANN NETW DISTR SYST
NR 98
TC 3
Z9 3
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 78
DI 10.1007/s10664-021-09978-0
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SO7WA
UT WOS:000659185000001
DA 2024-07-18
ER

PT J
AU Panichella, S
   Zaugg, N
AF Panichella, Sebastiano
   Zaugg, Nik
TI An Empirical Investigation of Relevant Changes and Automation Needs in
   Modern Code Review
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Code review process and practices; Empirical study; Automated software
   engineering
AB Recent research has shown that available tools for Modern Code Review (MCR) are still far from meeting the current expectations of developers. The objective of this paper is to investigate the approaches and tools that, from adeveloper's point of view, are still needed to facilitate MCR activities. To that end, we first empirically elicited a taxonomy of recurrent review change types that characterize MCR. The taxonomy was designed by performing three steps: (i) we generated an initial version of the taxonomy by qualitatively and quantitatively analyzing 211 review changes/commits and 648 review comments of ten open-source projects; then (ii) we integrated into this initial taxonomy, topics, and MCR change types of an existing taxonomy available from the literature; finally, (iii) we surveyed 52 developers to integrate eventually missing change types in the taxonomy. Results of our study highlight that the availability of new emerging development technologies (e.g., Cloud-based technologies) and practices (e.g., Continuous delivery) has pushed developers to perform additional activities during MCR and that additional types of feedback are expected by reviewers. Our participants provided recommendations, specified techniques to employ, and highlighted the data to analyze for building recommender systems able to automate the code review activities composing our taxonomy. We surveyed 14 additional participants (12 developers and 2 researchers), not involved in the previous survey, to qualitatively assess the relevance and completeness of the identified MCR change types as well as assess how critical and feasible to implement are some of the identified techniques to support MCR activities. Thus, with a study involving 21 additional developers, we qualitatively assess the feasibility and usefulness of leveraging natural language feedback (automation considered critical/feasible to implement) in supporting developers during MCR activities. In summary, this study sheds some more light on the approaches and tools that are still needed to facilitate MCR activities, confirming the feasibility and usefulness of using summarization techniques during MCR activities. We believe that the results of our work represent an essential step for meeting the expectations of developers and supporting the vision of full or partial automation in MCR.
C1 [Panichella, Sebastiano] Zurich Univ Appl Sci, Inst Appl Informat Technol InIT, Winterthur, Switzerland.
   [Zaugg, Nik] Univ Zurich, Zurich, Switzerland.
C3 Zurich University of Applied Sciences; University of Zurich
RP Panichella, S (corresponding author), Zurich Univ Appl Sci, Inst Appl Informat Technol InIT, Winterthur, Switzerland.
EM panc@zhaw.ch; nik.zaugg@bf.uzh.ch
OI Panichella, Sebastiano/0000-0003-4120-626X
FU ZHAW Zurich University of Applied Sciences
FX Open access funding provided by ZHAW Zurich University of Applied
   Sciences.
CR [Anonymous], 2018, M2E
   [Anonymous], 2018, JGIT
   [Anonymous], 2018, ECLIPSE PDE
   [Anonymous], 2018, ECLIPE EGIT
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2018, ECLIPSE CDT
   [Anonymous], 2014, CHECKSTYLE
   [Anonymous], 2018, AACCELEO
   [Anonymous], 2018, EGIT TRAINING
   [Anonymous], 2014, GERRIT
   [Anonymous], 2018, ECLIPSE CBI
   [Anonymous], 2018, AMALGAM
   [Anonymous], 2018, ECLIPSE BPEL
   [Anonymous], 2014, PMD
   [Anonymous], 2008, Proceedings of the 2008 international working conference on Mining software repositories
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Barnett M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P134, DOI 10.1109/ICSE.2015.35
   Baum T, 2017, PROC IEEE INT CONF S, P329, DOI 10.1109/ICSME.2017.28
   Bavota G, 2015, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSM.2015.7332454
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Baysal O., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P447, DOI 10.1109/WCRE.2012.54
   Baysal O, 2016, EMPIR SOFTW ENG, V21, P932, DOI 10.1007/s10664-015-9366-8
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Chatley R, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P567, DOI 10.1109/SANER.2018.8330261
   De Lucia A., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P193
   Di Penta M, 2009, INFORM SOFTWARE TECH, V51, P1469, DOI 10.1016/j.infsof.2009.04.013
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Duvall Paul M., 2010, CONTINUOUS INTEGRATI
   Efstathiou V, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P69, DOI 10.1145/3183399.3183411
   FLANAGAN C, 2002, P ACM SIGPLAN 2002 C, P234
   Fluri B, 2006, INT C PROGRAM COMPRE, P35, DOI 10.1109/ICPC.2006.16
   Fowler Martin, 2002, Extreme Programming and Agile Methods-XP/Agile Universe 2002, V2418, P256, DOI DOI 10.1007/3-540-45672-431
   Fusaro P., 1997, Empirical Software Engineering, V2, P39, DOI 10.1023/A:1009742216007
   German DM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P523, DOI 10.1145/3180155.3180217
   Gibbs L, 2007, AUST NZ J PUBL HEAL, V31, P540, DOI 10.1111/j.1753-6405.2007.00140.x
   Grano G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P72, DOI 10.1109/SANER.2018.8330198
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Hannebauer C, 2016, IEEE INT CONF AUTOM, P99, DOI 10.1145/2970276.2970306
   Henley A, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173731
   Hill E, 2009, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2009.5070524
   Höst M, 2000, J SYST SOFTWARE, V52, P113, DOI 10.1016/S0164-1212(99)00137-5
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Kemerer CF, 2009, IEEE T SOFTWARE ENG, V35, P534, DOI 10.1109/TSE.2009.27
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Kim S, 2007, P 6 JOINT M EUR SOFT, P45, DOI DOI 10.1145/1287624.1287633
   Kim S., 2006, Proceedings of the 2006 International Workshop on Mining Software Repositories, P40
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Mäntylä M, 2003, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2003.1235447
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   Martin D, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2019), P5, DOI 10.1109/SBST.2019.00009
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   Menarini M, 2017, IEEE INT CONF AUTOM, P554, DOI 10.1109/ASE.2017.8115666
   Meszaros GerardG., 2010, P ACM INT C COMPANIO, P299, DOI DOI 10.1145/1869542.1869622
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Moreno Laura, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion). Proceedings, P530, DOI 10.1145/3183440.3183464
   Moreno L, 2017, PROC IEEE ACM INT C, P511, DOI 10.1109/ICSE-C.2017.169
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Nurolahzade M, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P9
   Ouni A, 2016, PROC IEEE INT CONF S, P367, DOI 10.1109/ICSME.2016.65
   Paixao M, 2018, IEEE WORK CONF MIN S, P46, DOI 10.1145/3196398.3196466
   PALOMBA F, 2016, 24 INT C PROGR COMPR
   Panichella S, 2018, 2018 IEEE 2ND INTERNATIONAL WORKSHOP ON VALIDATION, ANALYSIS AND EVOLUTION OF SOFTWARE TESTS (VST), P1, DOI 10.1109/VST.2018.8327148
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Panichella S, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P161, DOI 10.1109/SANER.2015.7081826
   Parnas D. L., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P132
   Porter A., 1998, Empirical Software Engineering, V3, P355, DOI 10.1023/A:1009776104355
   Rahman MM, 2017, IEEE WORK CONF MIN S, P215, DOI 10.1109/MSR.2017.17
   Rigby P. C., 2006, DCS305IR U VICT
   Rigby PC, 2011, THESIS
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Savor T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P21, DOI 10.1145/2889160.2889223
   Shi ST, 2019, AAAI CONF ARTIF INTE, P4910
   Singh D, 2017, S VIS LANG HUM CEN C, P101, DOI 10.1109/VLHCC.2017.8103456
   Spadini D, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P677, DOI 10.1145/3180155.3180192
   Sridhara G., 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   STRUTZEL E, 1968, NURS RES, V17, P364
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Thung F, 2012, IEEE INT CONF AUTOM, P50, DOI 10.1145/2351676.2351685
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Vassallo C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P38, DOI 10.1109/SANER.2018.8330195
   Vendome C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P268, DOI 10.1145/3180155.3180221
   Wagner S, 2005, LECT NOTES COMPUT SC, V3502, P40
   Zampetti F, 2017, IEEE WORK CONF MIN S, P334, DOI 10.1109/MSR.2017.2
   Zampetti Fiorella VCPSCGGHDPM, 2020, EMPIRICAL SOFTWARE E
   Zanjani MB, 2016, IEEE T SOFTWARE ENG, V42, P530, DOI 10.1109/TSE.2015.2500238
   Zhang TY, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P111, DOI 10.1109/ICSE.2015.33
   Zhou YJ, 2021, INT J PROD RES, V59, P6564, DOI 10.1080/00207543.2020.1821117
   Zhou Y, 2018, 24TH ACM SYMPOSIUM ON VIRTUAL REALITY SOFTWARE AND TECHNOLOGY (VRST 2018), DOI [10.1145/3281505.3281513, 10.1109/TSMC.2018.2858843]
   Zhou Y, 2017, PROC INT CONF SOFTW, P27, DOI 10.1109/ICSE.2017.11
NR 97
TC 11
Z9 12
U1 1
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 4833
EP 4872
DI 10.1007/s10664-020-09870-3
EA SEP 2020
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4BB
UT WOS:000568635700001
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU LaToza, TD
   Arab, M
   Loksa, D
   Ko, AJ
AF LaToza, Thomas D.
   Arab, Maryam
   Loksa, Dastyni
   Ko, Amy J.
TI Explicit programming strategies
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Developers; Productivity; Strategies; Test-driven development; Debugging
ID SOFTWARE; ACQUISITION; MODELS; GOALS
AB Software developers solve a diverse and wide range of problems. While software engineering research often focuses on tools to support this problem solving, the strategies that developers use to solve problems are at least as important. In this paper, we offer a novel approach for enabling developers to follow explicit programming strategies that describe how an expert tackles a common programming problem. We define explicit programming strategies, grounding our definition in prior work both within software engineering and in other professions which have adopted more explicit procedures for problem solving. We then present a novel notation called Roboto and a novel strategy tracker tool that explicitly represent programming strategies and frame executing strategies as a collaborative effort between human abilities to make decisions and computer abilities to structure process and persist information. In a formative evaluation, 28 software developers of varying expertise completed a design task and a debugging task. We found that, compared to developers who are free to choose their own strategies, developers given explicit strategies experienced their work as more organized, systematic, and predictable, but also more constrained. Developers using explicit strategies were objectively more successful at the design and debugging tasks. We discuss the implications of Roboto and these findings, envisioning a thriving ecosystem of explicit strategies that accelerate and improve developers' programming problem solving.
C1 [LaToza, Thomas D.; Loksa, Dastyni; Ko, Amy J.] George Mason Univ, Fairfax, VA 22030 USA.
   [Arab, Maryam] Univ Washington, Seattle, WA 98195 USA.
C3 George Mason University; University of Washington; University of
   Washington Seattle
RP LaToza, TD (corresponding author), George Mason Univ, Fairfax, VA 22030 USA.
EM tlatoza@gmu.edu; marab@gmu.edu; dloksa@uw.edu; ajko@uw.edu
OI LaToza, Thomas/0000-0002-9564-3337
CR Abbott K, 2015, PROCEEDINGS 2015 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P203, DOI 10.1109/VLHCC.2015.7357218
   AMES C, 1988, J EDUC PSYCHOL, V80, P260, DOI 10.1037/0022-0663.80.3.260
   ANDERSON JR, 1989, COGNITIVE SCI, V13, P467, DOI 10.1207/s15516709cog1304_1
   Andrew J Ko, 2004, P SIGCHI C HUMAN FAC, V6, P151, DOI [DOI 10.1145/985692.985712, 10.1145/985692.985712]
   [Anonymous], ANN M AM ED RES ASS
   Bass Len, 2012, SEI S SOFTW
   Beck Kent L., 2003, Test Driven Development By Example
   BIELACZYC K, 1995, COGNITION INSTRUCT, V13, P221, DOI 10.1207/s1532690xci1302_3
   Bird C, 2009, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2009.5070550
   Böhme M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P117, DOI 10.1145/3106237.3106255
   Bransford J.D., 2000, How People Learn; Brain, Mind, Experience, and School
   Çaliskan S, 2010, PROCD SOC BEHV, V2, P2239, DOI 10.1016/j.sbspro.2010.03.315
   Chen W.-F., 2002, The civil engineering handbook
   Chi MTH, 1997, J LEARN SCI, V6, P271, DOI 10.1207/s15327809jls0603_1
   DAVIES SP, 1993, INT J MAN MACH STUD, V39, P237, DOI 10.1006/imms.1993.1061
   Desoete A, 2001, J LEARN DISABIL-US, V34, P435, DOI 10.1177/002221940103400505
   Dieste O, 2017, EMPIR SOFTW ENG, V22, P2457, DOI 10.1007/s10664-016-9471-3
   EINSTEIN GO, 1990, J EXP PSYCHOL LEARN, V16, P717, DOI 10.1037/0278-7393.16.4.717
   Falessi D, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978812
   Falkner K., 2014, P 2014 C INNOVATION, P291, DOI DOI 10.1145/2591708.2591715
   Felleisen Matthias, 2001, How to Design Programs
   Fowler M., 2001, Software Development, V9, P28
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Francel MA, 2001, SCI COMPUT PROGRAM, V40, P151, DOI 10.1016/S0167-6423(01)00013-2
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Gawande Atul., 2010, CHECKLIST MANIFESTO, V200
   Gilmore D.J., 1990, PSYCHOL PROGRAMMING, P223
   GILMORE DJ, 1991, ACTA PSYCHOL, V78, P151, DOI 10.1016/0001-6918(91)90009-O
   Haidry SEZ, 2017, ITICSE'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INNOVATION AND TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P206, DOI 10.1145/3059009.3059032
   Hammer D, 2014, J LEARN SCI, V23, P37, DOI 10.1080/10508406.2013.802652
   Hilton JF, 1996, STAT MED, V15, P631, DOI 10.1002/(SICI)1097-0258(19960330)15:6<631::AID-SIM206>3.0.CO;2-6
   Horvitz Eric, 1999, P SIGCHI C HUM FACT, P159
   Hutchins E., 1995, Cognition in the Wild
   Kerievsky J., 2004, REFACTORING PATTERNS
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Ko AJ, 2005, J VISUAL LANG COMPUT, V16, P41, DOI 10.1016/j.jvlc.2004.08.003
   Ko A, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1569
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Ko AJ, 2019, SIGCSE '19: PROCEEDINGS OF THE 50TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P469, DOI 10.1145/3287324.3287371
   Ko AJ, 2015, EMPIR SOFTW ENG, V20, P110, DOI 10.1007/s10664-013-9279-3
   Ko AJ, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1824760.1824761
   LABOUVIEVIEF G, 1976, J GERONTOL, V31, P327, DOI 10.1093/geronj/31.3.327
   LaToza Thomas D., 2007, P ESECFSE 2007 DUBR, P361, DOI [DOI 10.1145/1287624.1287675, 10.1145/1287624.1287675]
   Li PL, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P700, DOI 10.1109/ICSE.2015.335
   LOCKE EA, 1984, J APPL PSYCHOL, V69, P241, DOI 10.1037/0021-9010.69.2.241
   Loksa D, 2016, PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INTERNATIONAL COMPUTING EDUCATION RESEARCH (ICER'16), P83, DOI 10.1145/2960310.2960334
   Loksa D, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P1449, DOI 10.1145/2858036.2858252
   McCartney R, 2007, ITICSE 2007: 12TH ANNUAL CONFERENCE ON INNOVATION & TECHNOLOGY IN COMPUTER SCIENCE EDUCATION, P156, DOI 10.1145/1269900.1268831
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Metzger Robert C., 2004, Debugging by thinking: A multidisciplinary approach
   Murphy L, 2008, SIGCSE'08: PROCEEDINGS OF THE 39TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P163, DOI 10.1145/1352322.1352191
   Pothier G, 2009, IEEE SOFTWARE, V26, P78, DOI 10.1109/MS.2009.169
   Quinn AJ, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P1403
   Reason J., 1990, Human error, DOI [10.1017/CBO9781139062367, DOI 10.1017/CBO9781139062367]
   Reigeluth CM, 1999, INSTRUCTIONAL-DESIGN THEORIES AND MODELS, VOL II, P633
   Retelny D., 2017, P ACM HUM COMP INTER, P1
   Rist RS, 1995, COGNITIVE SCI, V19, P507, DOI 10.1207/s15516709cog1904_3
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Robins A., 2003, COMPUT SCI EDUC, V13, P137, DOI [10.1076/csed.13.2.137.14200, DOI 10.1076/CSED.13.2.137.14200]
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   SACKMAN H, 1968, COMMUN ACM, V11, P3, DOI 10.1145/362851.362858
   Salinger S., 2013, UNDERSTANDING PAIR P
   Sears A., 2007, HUMAN COMPUTER INTER
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Shull F, 2010, IEEE SOFTWARE, V27, P16, DOI 10.1109/MS.2010.152
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Simon H. A., 1972, Decision and Organization: A Volume in Order of Jacob Marschak, V1, P161
   Suchman L. A., 1987, Plans and situated actions: The problem of human-machine communication
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Wieringa D., 1998, Procedure writing: principles and practices
   Xie B, 2018, SIGCSE'18: PROCEEDINGS OF THE 49TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P344, DOI 10.1145/3159450.3159527
   Zamli K.Z., 2001, Malaysian Journal of Computer Science, V14, P26
   Zeller A, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION
   ZHANG JJ, 1994, COGNITIVE SCI, V18, P87, DOI 10.1207/s15516709cog1801_3
NR 74
TC 15
Z9 19
U1 3
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2020
VL 25
IS 4
BP 2416
EP 2449
DI 10.1007/s10664-020-09810-1
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA MD8CQ
UT WOS:000544196800002
DA 2024-07-18
ER

PT J
AU Li, L
   Gao, J
   Bissyande, TF
   Ma, L
   Xia, X
   Klein, J
AF Li, Li
   Gao, Jun
   Bissyande, Tegawende F.
   Ma, Lei
   Xia, Xin
   Klein, Jacques
TI CDA: Characterising Deprecated Android APIs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Android; Deprecated APIs; CDA
ID SUPPORT; EVOLUTION
AB Because of functionality evolution, or security and performance-related changes, some APIs eventually become unnecessary in a software system and thus need to be cleaned to ensure proper maintainability. Those APIs are typically marked first as deprecated APIs and, as recommended, follow through a deprecated-replace-remove cycle, giving an opportunity to client application developers to smoothly adapt their code in next updates. Such a mechanism is adopted in the Android framework development where thousands of reusable APIs are made available to Android app developers. In this work, we present a research-based prototype tool called CDA and apply it to different revisions (i.e., releases or tags) of the Android framework code for characterising deprecated APIs. Based on the data mined by CDA, we then perform an empirical study on API deprecation in the Android ecosystem and the associated challenges for maintaining quality apps. In particular, we investigate the prevalence of deprecated APIs, their annotations and documentation, their removal and consequences, their replacement messages, developer reactions to API deprecation, as well as the evolution of the usage of deprecated APIs. Experimental results reveal several findings that further provide promising insights related to deprecated Android APIs. Notably, by mining the source code of the Android framework base, we have identified three bugs related to deprecated APIs. These bugs have been quickly assigned and positively appreciated by the framework maintainers, who claim that these issues will be updated in future releases.
C1 [Li, Li; Xia, Xin] Monash Univ, Fac Informat Technol, Clayton, Vic, Australia.
   [Gao, Jun; Bissyande, Tegawende F.; Klein, Jacques] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, Esch Sur Alzette, Luxembourg.
   [Ma, Lei] Kyushu Univ, Fac Informat Sci & Elect Engn, Fukuoka, Japan.
C3 Monash University; University of Luxembourg; Kyushu University
RP Li, L (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic, Australia.
EM li.li@monash.edu; jun.gao@uni.lu; tegawende.bissyande@uni.lu;
   malei@ait.kyushu-u.ac.jp; xin.xia@monash.edu; jacques.klein@uni.lu
RI Xia, Xin/AAD-6217-2022; Li, Li/AAR-3316-2020
OI Xia, Xin/0000-0002-6302-3256; 
CR Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   [Anonymous], 2012, P 20 ACM SIGSOFT S F
   [Anonymous], P ACM SIGSOFT 20 INT
   Bagherzadeh Mojtaba, 2017, EMPIR SOFTW ENG, P1
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Bissyande T.F., 2019, 16 INT C MIN SOFTW R 16 INT C MIN SOFTW R
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Brito Aline, 2018, ARXIV180105198
   Brito G, 2018, J SYST SOFTWARE, V137, P306, DOI 10.1016/j.jss.2017.12.007
   Brito G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P360, DOI 10.1109/SANER.2016.99
   Chow KS, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P359, DOI 10.1109/ICSM.1996.565039
   Coelho R, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P134, DOI 10.1109/MSR.2015.20
   Dagenais B, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000805
   Daqing Hou, 2011, 2011 18th Working Conference on Reverse Engineering, P131, DOI 10.1109/WCRE.2011.24
   Deokyoon Ko, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P27, DOI 10.1109/APSEC.2014.87
   Derr E, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2187, DOI 10.1145/3133956.3134059
   Dig D, 2005, PROC IEEE INT CONF S, P389
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Dig D, 2008, ICSE 08 P 30 INT C S
   Dig D, 2007, PROC INT CONF SOFTW, P427
   Espinha T, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P84, DOI 10.1109/CSMR-WCRE.2014.6747228
   Gao J, 2018, 40 INT C SOFTW ENG P
   Hecht G, 2015, IEEE INT CONF AUTOM, P236, DOI 10.1109/ASE.2015.46
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   Hora A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P278, DOI 10.1145/2950290.2950306
   Hora A, 2015, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSM.2015.7332471
   Kapur Puneet, 2010, REFACTORING REFERENC, V45
   Li L., 2018, ACM SIGSOFT INT S SO
   Li L, 2018, I C SERV SYST SERV M
   Li Li, 2017, ARXIV170905281
   Li Li, 2016, 23 IEEE INT C SOFTW
   Li Li, 2015, P 37 INT C SOFTW ENG
   Li Li, 2017, IEEE T INFORM FORENS
   Li L, 2016, MATER DESIGN, V100, P235, DOI 10.1016/j.matdes.2016.03.113
   Linares-Vasquez M, 2014, P 22 INT C PROGR C, P83
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Meng SC, 2012, PROC INT CONF SOFTW, P353, DOI 10.1109/ICSE.2012.6227179
   Monperrus M, 2012, EMPIR SOFTW ENG, V17, P703, DOI 10.1007/s10664-011-9186-4
   Nita M., 2010, P 32 ACM IEEE INT C, V1, P205
   Palomba F, 2018, J SYST SOFTWARE, V137, P143, DOI 10.1016/j.jss.2017.11.043
   Perkins Jeff H., 2005, PASTE 05, P111, DOI DOI 10.1145/1108768.1108818
   Raemaekers S, 2014, IEEE INT WORK C SO, P215, DOI 10.1109/SCAM.2014.30
   Sawant AA, 2018, PROC IEEE INT CONF S, P13, DOI 10.1109/ICSME.2018.00011
   Sawant AA, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P561, DOI 10.1145/3180155.3180170
   Sawant AA, 2018, EMPIR SOFTW ENG, V23, P2158, DOI 10.1007/s10664-017-9554-9
   Sawant AA, 2016, PROC IEEE INT CONF S, P400, DOI 10.1109/ICSME.2016.64
   Strobl Roman, 2013, PROC COMPANION PUB C, P85
   Wagner P, 2016, INT SYMP INTEGR CIRC
   Wang H, 2018, 2018 INTERNET MEASUR
   Wang HQ, 2015, ACSR ADV COMPUT, V20, P71
   Wu Wei, 2010, P 32 ACMIEEE INT C S, P325, DOI DOI 10.1145/1806799.1806848
   Xing ZC, 2007, IEEE T SOFTWARE ENG, V33, P818, DOI 10.1109/TSE.2007.70747
   Yang X, 2017, CHARACTERIZING MALIC
   Zhou J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P266, DOI 10.1145/2950290.2950298
NR 54
TC 10
Z9 10
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2020
VL 25
IS 3
SI SI
BP 2058
EP 2098
DI 10.1007/s10664-019-09764-z
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LL7FD
UT WOS:000531720100010
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Sayagh, M
   Kerzazi, N
   Petrillo, F
   Bennani, K
   Adams, B
AF Sayagh, Mohammed
   Kerzazi, Noureddine
   Petrillo, Fabio
   Bennani, Khalil
   Adams, Bram
TI What should your run-time configuration framework do to help developers?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Run-time software configuration; Configuration engineering; Empirical
   study; User study
AB The users or deployment engineers of a software system can adapt such a system to a wide range of deployment and usage scenarios by changing the value of configuration options, for example by disabling unnecessary features, tweaking performance-related parameters or specifying GUI preferences. However, the literature agrees that the flexibility of such options comes at a price: misconfigured options can lead a software system to crash in the production environment, while even in the absence of such configuration errors, a large number of configuration options makes a software system more complicated to deploy and use. In earlier work, we also found that developers who intend to make their application configurable face 22 challenges that impact their configuration engineering activities, ranging from technical to management-related or even inherent to the domain of configuration engineering. In this paper, we use a prototyping approach to derive and empirically evaluate requirements for tool support able to deal with 13 (primarily technical) configuration engineering challenges. In particular, via a set of interviews with domain experts, we identify four requirements by soliciting feedback on an incrementally evolving prototype. The resulting "Config2Code" prototype, which implements the four requirements, is then empirically evaluated via a user study involving 55 participants that comprises 10 typical configuration engineering tasks, ranging from the creation, comprehension, refactoring, and reviewing of configuration options to the quality assurance of options and debugging of configuration failures. A configuration framework satisfying the four requirements enables developers to perform more accurately and more swiftly in 70% and 60% (respectively) of the configuration engineering tasks than a state-of-the-practice framework not satisfying the requirements. Furthermore, such a framework allows to reduce the time taken for these tasks by up to 94.62%, being slower for only one task.
C1 [Sayagh, Mohammed] Queens Univ, Kingston, ON K7L 3N6, Canada.
   [Kerzazi, Noureddine] Mohammed V Univ, ENSIAS, Rabat, Morocco.
   [Petrillo, Fabio] Univ Quebec Chicoutimi, Chicoutimi, PQ G7H 2B1, Canada.
   [Bennani, Khalil; Adams, Bram] Polytech Montreal, Montreal, PQ H3T 1J4, Canada.
C3 Queens University - Canada; Mohammed V University in Rabat; University
   of Quebec; University of Quebec Chicoutimi; Universite de Montreal;
   Polytechnique Montreal
RP Sayagh, M (corresponding author), Queens Univ, Kingston, ON K7L 3N6, Canada.
EM msayagh@cs.queensu.ca; n.kerzazi@um5s.net.ma; fabio.petrillo@uqac.ca;
   khalil.bennani@polymtl.ca; bram.adams@polymtl.ca
OI Sayagh, Mohammed/0000-0002-2724-0034; Adams, Bram/0000-0001-7213-4006
CR [Anonymous], 2007, SOFTWARE PRODUCT LIN
   Ansible, 2018, COR JAV PREF AP
   Apel S., 2013, Feature-oriented software product lines: Concepts and implementation, berlin/, P308
   Aplinc J, 2016, PHYS REV FLUIDS, V1, DOI 10.1103/PhysRevFluids.1.023303
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Behrang F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P295, DOI 10.1145/2786805.2786869
   Buse RPL, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P643
   Cassoli J, 2016, WEB APPL SPRING ANNO
   Dong Z, 2015, PRACTICAL ACCURATE P, DOI [10.1109/ICSM.2015.7332463, DOI 10.1109/ICSM.2015.7332463]
   Dong Z, 2016, PROC INT SYMP SOFTW, P185, DOI 10.1109/ISSRE.2016.37
   Gao MY, 2016, PROC IEEE INT SYMP, P350, DOI 10.1109/ISIE.2016.7744915
   Hubaux A., 2012, 6 INT WORKSHOP VARIA, P149
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Jiang YJ, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P45, DOI 10.1109/MSR.2015.12
   Jin DP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P215, DOI 10.1145/2591062.2591191
   Jin Dongpu, 2014, P 29 ACMIEEE INT C A, P151, DOI [10.1145/2642937.2643009, DOI 10.1145/2642937.2643009]
   Khan M, 2017, CONCURR COMP-PRACT E, V29, DOI 10.1002/cpe.3786
   Ko AJ, 2015, EMPIR SOFTW ENG, V20, P110, DOI 10.1007/s10664-013-9279-3
   Krum Spencer, 2013, PROPUPPET, Vsecond
   Li W, 2017, IEEE ANTENNAS PROP, P885, DOI 10.1109/APUSNCURSINRSM.2017.8072485
   Lwakatare LE, 2016, LECT NOTES COMPUT SC, V10027, P399, DOI 10.1007/978-3-319-49094-6_27
   Medeiros F, 2016, PROC INT CONF SOFTW, P643, DOI 10.1145/2884781.2884793
   Nadi S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P140, DOI 10.1145/2568225.2568283
   Nadi S, 2015, IEEE T SOFTWARE ENG, V41, P820, DOI 10.1109/TSE.2015.2415793
   Peng HX, 2015, IEEE GLOB COMM CONF, DOI [10.1109/GLOCOM.2015.7417534, 10.1109/PESGM.2015.7286206]
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Qu X, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P140, DOI 10.1109/ISSRE.2011.9
   Rabiser Rick, 2007, EUROMICRO '07. 2007 33rd Euromicro Conference on Software Engineering and Advanced Applications, P193
   Rabkin A., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P193, DOI 10.1109/ASE.2011.6100053
   Rahman M. T., 2016, P 13 INT C MIN SOFTW, P201, DOI DOI 10.1145/2901739.2901745
   Sarma A., 2007, C AUTOMATED SOFTWARE, P94
   Sayagh M, 2018, VIDEOS
   Sayagh M, 2018, T SOFTWARE ENG TSE
   Sayagh M, 2017, IEEE INT WORK C SO, P41, DOI 10.1109/SCAM.2017.25
   Sayagh M, 2017, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2017.31
   Sedlmair M, 2012, IEEE T VIS COMPUT GR, V18, P2431, DOI 10.1109/TVCG.2012.213
   Sharma T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P189, DOI [10.1109/MSR.2016.028, 10.1145/2901739.2901761]
   Sommerville I., 2010, SOFTWARE ENG
   Wagner S, 2015, The art and science of analyzing software data, P39, DOI [10.1016/B978-0-12-411519-4.00003-3, DOI 10.1016/B978-0-12-411519-4.00003-3]
   Wettel R, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P551, DOI 10.1145/1985793.1985868
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Xu TY, 2013, SOSP'13: PROCEEDINGS OF THE TWENTY-FOURTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P244, DOI 10.1145/2517349.2522727
   Xu TY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P307, DOI 10.1145/2786805.2786852
   Xu TY, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2791577
   Yin ZN, 2011, SOSP 11: PROCEEDINGS OF THE TWENTY-THIRD ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P159
   Zhang S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P152, DOI 10.1145/2568225.2568251
   Zhang S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P312, DOI 10.1109/ICSE.2013.6606577
NR 47
TC 4
Z9 7
U1 1
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2020
VL 25
IS 2
SI SI
BP 1259
EP 1293
DI 10.1007/s10664-019-09790-x
EA JAN 2020
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT0VU
UT WOS:000507789500001
DA 2024-07-18
ER

PT J
AU Kim, J
   Kim, J
   Lee, ES
   Kim, S
AF Kim, Jindae
   Kim, Jeongho
   Lee, Eunseok
   Kim, Sunghun
TI The effectiveness of context-based change application on automatic
   program repair
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automatic program repair; Context-based change application; Repair
   models
ID CODE
AB An Automatic Program Repair (APR) technique is an implementation of a repair model to fix a given bug by modifying program behavior. Recently, repair models which collect source code and code changes from software history and use such collected resources for patch generation became more popular. Collected resources are used to expand the patch search space and to increase the probability that correct patches for bugs are included in the space. However, it is also revealed that navigation on such expanded patch search space is difficult due to the sparseness of correct patches in the space. In this study, we evaluate the effectiveness of Context-based Change Application (CCA) technique on change selection, fix location selection and change concretization, which are the key aspects of navigating patch search space. CCA collects abstract subtree changes and their AST contexts, and applies them to fix locations only if their contexts are matched. CCA repair model can address both search space expansion and navigation issues, by expanding search space with collected changes while narrowing down search areas in the search space based on contexts. Since CCA applies changes to a fix location only if their contexts are matched, it only needs to consider the same context changes for each fix location. Also, if there is no change with the same context as a fix location, this fix location can be ignored since it means that past patches did not modify such locations. In addition, CCA uses fine-grained changes preserving changed code structures, but normalizing user-defined names. Hence change concretization can be simply done by replacing normalized names with concrete names available in buggy code. We evaluated CCA's effectiveness with over 54K unique collected changes (221K in total) from about 5K human-written patches. Results show that using contexts, CCA correctly found 90.1% of the changes required for test set patches, while fewer than 5% of the changes were found without contexts. We discovered that collecting more changes is only helpful if it is supported by contexts for effective search space navigation. In addition, CCA repair model found 44-70% of the actual fix locations of Defects4j patches more quickly compared to using SBFL techniques only. We also found that about 48% of the patches can be fully concretized using concrete names from buggy code.
C1 [Kim, Jindae; Kim, Sunghun] Hong Kong Univ Sci & Technol, Clear Water Bay, Hong Kong, Peoples R China.
   [Kim, Jeongho; Lee, Eunseok] Sungkyunkwan Univ, Seoul, South Korea.
C3 Hong Kong University of Science & Technology; Sungkyunkwan University
   (SKKU)
RP Kim, J (corresponding author), Hong Kong Univ Sci & Technol, Clear Water Bay, Hong Kong, Peoples R China.
EM jdkim@cse.ust.hk
RI Kim, Jindae/AAF-5594-2020; Kim, Jindae/KJL-9569-2024
OI Kim, Jindae/0000-0003-1864-0148; Lee, Eunseok/0000-0002-6557-8087
CR [Anonymous], 2012, P ACM SIGSOFT 20 INT, DOI DOI 10.1145/2393596.2393656
   [Anonymous], 2014, 17 EUR C GEN PROGR E
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, DOI [DOI 10.1145/2025113.2025185, 10.1145/2025113.2025185]
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   Barr E. T., 2015, ISSTA, P257
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Chen MY, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P595, DOI 10.1109/DSN.2002.1029005
   Chilowicz M., 2009, SYNTAX TREE FINGERPR
   Debroy Vidroha, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P65, DOI 10.1109/ICST.2010.66
   DeMarco F, 2014, P 6 INT WORKSHOP CON, P30, DOI 10.1145/2593735.2593740
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Gabel M, 2010, 18 ACM SIGSOFT INT S, P147
   Nguyen HA, 2013, IEEE INT CONF AUTOM, P180, DOI 10.1109/ASE.2013.6693078
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kim J, 2018, VFL VARIABLE BASED F
   Kim J, 2016, TECH REP
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le XBD, 2018, EMPIR SOFTW ENG, V23, P3007, DOI 10.1007/s10664-017-9577-2
   Le XBD, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P376, DOI 10.1145/3092703.3098225
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Lipowski A, 2012, PHYSICA A, V391, P2193, DOI 10.1016/j.physa.2011.12.004
   Liu K, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P456, DOI 10.1109/saner.2019.8667970
   Livshits V.B., 2005, ESEC SIGSOFT FSE, P296, DOI [DOI 10.1145/1095430.1081754, DOI 10.1145/1081706.1081754]
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Martinez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P492, DOI 10.1145/2591062.2591114
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Martinez M, 2013, PROC IEEE INT CONF S, P388, DOI 10.1109/ICSM.2013.54
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Meng N, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P329
   Meyer AD, 2004, GENET MOL BIOL, V27, P83, DOI 10.1590/S1415-47572004000100014
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi YH, 2013, PROC IEEE INT CONF S, P180, DOI 10.1109/ICSM.2013.29
   Qi ZM, 2015, PROCEEDINGS OF THE 2015 6TH INTERNATIONAL CONFERENCE ON AUTOMATION, ROBOTICS AND APPLICATIONS (ICARA), P22
   Raghavan S, 2004, PROC IEEE INT CONF S, P188, DOI 10.1109/ICSM.2004.1357803
   Ray B, 2014, TECH REP
   Rolim R, 2017, PROC INT CONF SOFTW, P404, DOI 10.1109/ICSE.2017.44
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Sidiroglou-Douskos S, 2015, ACM SIGPLAN NOTICES, V50, P43, DOI [10.1145/2813885.2737988, 10.1145/2737924.2737988]
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Tan SH, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P471, DOI 10.1109/ICSE.2015.65
   Tao Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P180, DOI 10.1109/MSR.2015.24
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Zhong H, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P885, DOI 10.1145/3180155.3182550
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
NR 61
TC 5
Z9 5
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 719
EP 754
DI 10.1007/s10664-019-09770-1
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP0WS
UT WOS:000515965100018
DA 2024-07-18
ER

PT J
AU Kim, J
   Kim, S
AF Kim, Jindae
   Kim, Sunghun
TI Automatic patch generation with context-based change application
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automatic program repair; Automatic patch generation; Context-based
   change application
ID PROGRAM REPAIR; CODE
AB Automatic patch generation is often described as a search problem of patch candidate space, and it has two major issues: one is search space size, and the other is navigation. An effective patch generation technique should have a large search space with a high probability that patches for bugs are included, and it also needs to locate such patches effectively. We introduce ConFix, an automatic patch generation technique using context-based change application. ConFix collects abstract AST changes from human-written patches with their AST contexts to provide abundant resources for patch generation. These collected changes are only applied to possible fix locations with the same contexts for patch generation. By considering changes with a matching context only, ConFix selects a necessary change for a possible fix location more effectively than considering all the collected changes. Also, ConFix filters out fix locations with no collected changes in the same context, which means that such locations have not been modified in human-written patches, hence they are not desirable for modifications. We evaluated ConFix with 357 real bugs from Defects4j dataset. ConFix successfully fixed 22 bugs including six bugs which were not fixed by compared existing techniques. With context-based strategy, ConFix checked on average 48% less fix locations than a strategy using only a spectrum-based fault localization technique until patches were generated. Also, it ranked changes required for patches at the top for 63.6%, and within top-3 for 81.8% of the fixed bugs.
C1 [Kim, Jindae; Kim, Sunghun] Hong Kong Univ Sci & Technol, Comp Sci, Kowloon, Clear Water Bay, Hong Kong, Peoples R China.
C3 Hong Kong University of Science & Technology
RP Kim, J (corresponding author), Hong Kong Univ Sci & Technol, Comp Sci, Kowloon, Clear Water Bay, Hong Kong, Peoples R China.
EM jdkim@cse.ust.hk; hunkim@cse.ust.hk
RI Kim, Jindae/AAF-5594-2020; Kim, Jindae/KJL-9569-2024
OI Kim, Jindae/0000-0003-1864-0148
CR [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, DOI [DOI 10.1145/2025113.2025185, 10.1145/2025113.2025185]
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   Barr E. T., 2015, ISSTA, P257
   Barr ET, 2014, P 22 ACM SIGSOFT INT
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   Chen LS, 2017, IEEE INT CONF AUTOM, P637, DOI 10.1109/ASE.2017.8115674
   Chilowicz M., 2009, SYNTAX TREE FINGERPR
   D'Antoni L, 2016, LECT NOTES COMPUT SC, V9780, P383, DOI 10.1007/978-3-319-41540-6_21
   Debroy Vidroha, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P65, DOI 10.1109/ICST.2010.66
   DeMarco F, 2014, P 6 INT WORKSHOP CON, P30, DOI 10.1145/2593735.2593740
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Gabel M, 2010, P ACM SIGSOFT S FDN, P147, DOI DOI 10.1145/1882291.1882315
   Hill A, 2018, PROC IEEE ACM INT C, P339, DOI 10.1145/3183440.3194999
   Nguyen HA, 2013, IEEE INT CONF AUTOM, P180, DOI 10.1109/ASE.2013.6693078
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Kim D, 2013, P 2013 INT C SOFTW E
   Kim J, 2016, TECH REP
   Kui Liu, 2019, 2019 IEEE 26th International Conference on Software Analysis, Evolution and Reengineering (SANER). Proceedings, P1, DOI 10.1109/SANER.2019.8667970
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le XBD, 2018, EMPIR SOFTW ENG, V23, P3007, DOI 10.1007/s10664-017-9577-2
   Le XBD, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P593, DOI 10.1145/3106237.3106309
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Lipowski A, 2012, PHYSICA A, V391, P2193, DOI 10.1016/j.physa.2011.12.004
   Livshits V.B., 2005, ESEC SIGSOFT FSE, P296, DOI [DOI 10.1145/1095430.1081754, DOI 10.1145/1081706.1081754]
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Martinez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P492, DOI 10.1145/2591062.2591114
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Martinez M, 2013, PROC IEEE INT CONF S, P388, DOI 10.1109/ICSM.2013.54
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Meng N, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P329
   Meyer AD, 2004, GENET MOL BIOL, V27, P83, DOI 10.1590/S1415-47572004000100014
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi YH, 2013, PROC IEEE INT CONF S, P180, DOI 10.1109/ICSM.2013.29
   Qi ZM, 2015, PROCEEDINGS OF THE 2015 6TH INTERNATIONAL CONFERENCE ON AUTOMATION, ROBOTICS AND APPLICATIONS (ICARA), P22
   Raghavan S, 2004, PROC IEEE INT CONF S, P188, DOI 10.1109/ICSM.2004.1357803
   Ray B, 2014, UNIQUENESS CHANGES C
   Rolim R, 2017, PROC INT CONF SOFTW, P404, DOI 10.1109/ICSE.2017.44
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Sidiroglou-Douskos S, 2015, ACM SIGPLAN NOTICES, V50, P43, DOI [10.1145/2813885.2737988, 10.1145/2737924.2737988]
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Tan SH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/2950290.2950295
   Tan SH, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P471, DOI 10.1109/ICSE.2015.65
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Xin Q, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P226, DOI 10.1145/3092703.3092718
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Yang JQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P831, DOI 10.1145/3106237.3106274
   Zhong H, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P885, DOI 10.1145/3180155.3182550
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
NR 65
TC 17
Z9 21
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 4071
EP 4106
DI 10.1007/s10664-019-09742-5
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JT6XW
UT WOS:000501131100026
DA 2024-07-18
ER

PT J
AU Arora, C
   Sabetzadeh, M
   Briand, LC
AF Arora, Chetan
   Sabetzadeh, Mehrdad
   Briand, Lionel C.
TI An empirical study on the potential usefulness of domain models for
   completeness checking of requirements
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements quality assurance; Requirements completeness;
   Natural-language requirements; Domain modeling; Case study research
ID SOFTWARE REQUIREMENTS; INCOMPLETENESS; CONSISTENCY; STATE
AB Domain modeling is a common strategy for mitigating incompleteness in requirements. While the benefits of domain models for checking the completeness of requirements are anecdotally known, these benefits have never been evaluated systematically. We empirically examine the potential usefulness of domain models for detecting incompleteness in natural-language requirements. We focus on requirements written as shall-style statements and domain models captured using UML class diagrams. Through a randomized simulation process, we analyze the sensitivity of domain models to omissions in requirements. Sensitivity is a measure of whether a domain model contains information that can lead to the discovery of requirements omissions. Our empirical research method is case study research in an industrial setting. We have experts construct domain models in three distinct industry domains. We then report on how sensitive the resulting models are to simulated omissions in requirements. We observe that domain models exhibit near-linear sensitivity to both unspecified (i.e., missing) and under-specified requirements (i.e., requirements whose details are incomplete). The level of sensitivity is more than four times higher for unspecified requirements than under-specified ones. These results provide empirical evidence that domain models provide useful cues for checking the completeness of natural-language requirements. Further studies remain necessary to ascertain whether analysts are able to effectively exploit these cues for incompleteness detection.
C1 [Arora, Chetan; Sabetzadeh, Mehrdad; Briand, Lionel C.] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, 29 Ave John F Kennedy, L-1855 Luxembourg, Luxembourg.
   [Arora, Chetan] SES Networks, Rue Pierre Werner, L-6815 Betzdorf, Luxembourg.
C3 University of Luxembourg
RP Arora, C (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, 29 Ave John F Kennedy, L-1855 Luxembourg, Luxembourg.; Arora, C (corresponding author), SES Networks, Rue Pierre Werner, L-6815 Betzdorf, Luxembourg.
EM arora@svv.lu; sabetzadeh@svv.lu; briand@svv.lu
OI Arora, Chetan/0000-0003-1466-7386; Sabetzadeh,
   Mehrdad/0000-0002-4711-8319
FU Luxembourg National Research Fund (FNR) [FNR/P10/03, FNR-11601446];
   European Research Council (ERC) under the European Union's Horizon 2020
   research and innovation programme [694277]
FX This project has received funding from the Luxembourg National Research
   Fund (FNR) under grants FNR/P10/03 and FNR-11601446, and from the
   European Research Council (ERC) under the European Union's Horizon 2020
   research and innovation programme (grant agreement No. 694277).
CR Alrajeh D, 2012, PROC INT CONF SOFTW, P705, DOI 10.1109/ICSE.2012.6227147
   Ambler Scott W., 2004, The Object Primer: Agile Model-Driven Development with UML
   [Anonymous], 1995, P 3 ACL WORKSH VER L
   [Anonymous], 2004, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
   Arora C, 2015, IEEE T SOFTW ENG, V41
   Arora C, 2017, IEEE T SOFTWARE ENG, V43, P918, DOI 10.1109/TSE.2016.2635134
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Basili V. R., 1981, 5th International Conference on Software Engineering, P314
   BOEHM BW, 1984, IEEE SOFTWARE, V1, P75, DOI 10.1109/MS.1984.233702
   Bravoco R. R., 1985, Computers in Industry, V6, P345, DOI 10.1016/0166-3615(85)90002-8
   Chimiak-Opoka J, 2009, LECT NOTES COMPUT SC, V5795, P665, DOI 10.1007/978-3-642-04425-0_53
   Cockburn A, 1997, J OBJECT-ORIENT PROG, V10, P56
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Constantine L.L., 1999, Software for Use: A Practical Guide to the Models and Methods of Usage-Centered Design
   COSTELLO RJ, 1995, J SYST SOFTWARE, V29, P39, DOI 10.1016/0164-1212(94)00127-9
   Dalpiaz F., 2018, P 24 INT WORK C REQ
   DAVIS A, 1993, PROCEEDINGS FOR THE 1993 ANNUAL CONFERENCE OF THE SOUTHWEST/TEXAS POPULAR CULTURE ASSOCIATION, P144
   Davis A.M., 1990, SOFTWARE REQUIREMENT
   Easterbrook S, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P199, DOI 10.1109/RE.2005.23
   Eckhardt J, 2016, INT REQUIR ENG CONF, P46, DOI 10.1109/RE.2016.24
   Espana S, 2009, P 21 INT C ADV INF S, P530
   España S, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P161, DOI 10.1109/RE.2009.33
   Evans E., 2011, DOMAIN DRIVEN DESIGN
   Ferrari Alessio, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P23, DOI 10.1007/978-3-319-05843-6_3
   Fusaro P., 1997, Empirical Software Engineering, V2, P39, DOI 10.1023/A:1009742216007
   Gane Chris., 1979, STRUCTURED SYSTEMS A
   Geierhos M, 2016, LECT NOTES COMPUT SC, V9612, P37, DOI 10.1007/978-3-319-41754-7_4
   Gigante G, 2015, STUD COMPUT INTELL, V570, P427, DOI 10.1007/978-3-319-10422-5_44
   Heimdahl MPE, 1996, IEEE T SOFTWARE ENG, V22, P363, DOI 10.1109/32.508311
   Heitmeyer C, P 19 INT C SOFTW ENG
   Holt J., 2011, Model-Based Requirements Engineering
   IEEE, 2011, 291482011 IEEE
   JAFFE MS, 1991, IEEE T SOFTWARE ENG, V17, P241, DOI 10.1109/32.75414
   Jurafsky D., 2021, SPEECH LANGUAGE PROC
   Kaiya H, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P223
   Kamalrudin M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P531, DOI 10.1145/1985793.1985866
   Khatwani C, 2017, REQUIR ENG, V22, P317, DOI 10.1007/s00766-017-0271-0
   Koenig T, 2007, TECH REP
   Krzeszowski TP, 2011, CONTRASTING LANGUAGE, V51
   LARKIN JH, 1987, COGNITIVE SCI, V11, P65, DOI 10.1016/S0364-0213(87)80026-5
   LINDLAND OI, 1994, IEEE SOFTWARE, V11, P42, DOI 10.1109/52.268955
   Menzel I., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P15, DOI 10.1109/RE.2010.13
   Mich L, 2004, REQUIR ENG, V9, P40, DOI 10.1007/s00766-003-0179-8
   Moody D. L., 1998, Conceptual Modeling - ER'98. 17th International Conference on Conceptual Modeling. Proceedings, P255, DOI 10.1007/978-3-540-49524-6_21
   NUSEIBEH B, 1994, IEEE T SOFTWARE ENG, V20, P760, DOI 10.1109/32.328995
   Object Management Group, 2004, OBJ CONSTR LANG 2 4
   Pohl K., 1993, Advanced Information Systems Engineering 5th International Conference. CAiSE '93 Proceedings, P275
   Pohl K., 2011, Requirements Engineering Fundamentals, V1st
   Porter A., 1998, Empirical Software Engineering, V3, P355, DOI 10.1023/A:1009776104355
   Reggio G, 2014, LECT NOTES COMPUT SC, V8767, P149, DOI 10.1007/978-3-319-11653-2_10
   Robert C., 2005, SPRINGER TEXTS STAT, V47, P243
   Sabetzadeh M, 2006, REQUIR ENG, V11, P174, DOI 10.1007/s00766-006-0032-y
   Salger F, 2009, WOSQ: 2009 ICSE WORKSHOP ON SOFTWARE QUALITY, P15, DOI 10.1109/WOSQ.2009.5071552
   Schneider G. M., 1992, ACM Transactions on Software Engineering and Methodology, V1, P188, DOI 10.1145/128894.128897
   Schuette R., 1998, LECT NOTES COMPUTER, P240, DOI [DOI 10.1007/978-3-540-49524-620, DOI 10.1007/978-3-540-49524-6-20]
   Thelin T, 2003, IEEE T SOFTWARE ENG, V29, P687, DOI 10.1109/TSE.2003.1223644
   W3C OWL Working Group, 2012, OWL 2 Web Ontology Language Document Overview
   Warner RM., 2012, APPL STAT BIVARIATE, V2
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Whittle J, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P79, DOI 10.1109/RE.2009.36
   YADAV SB, 1988, COMMUN ACM, V31, P1090, DOI 10.1145/48529.48533
   Zhou JL, 2014, LECT NOTES COMPUT SC, V8454, P43
   Zowghi D, 2003, INFORM SOFTWARE TECH, V45, P993, DOI 10.1016/S0950-5849(03)00100-9
   Zowghi D, 2003, P 8 INT WORKSH REQ E
NR 64
TC 18
Z9 18
U1 2
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 2509
EP 2539
DI 10.1007/s10664-019-09693-x
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700023
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Prana, GAA
   Treude, C
   Thung, F
   Atapattu, T
   Lo, D
AF Prana, Gede Artha Azriadi
   Treude, Christoph
   Thung, Ferdian
   Atapattu, Thushari
   Lo, David
TI Categorizing the Content of GitHub README Files
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE GitHub README files; Classification; Documentation
ID SOFTWARE; QUESTIONS; KNOWLEDGE; FRAMEWORK
AB README files play an essential role in shaping a developer's first impression of a software repository and in documenting the software project that the repository hosts. Yet, we lack a systematic understanding of the content of a typical README file as well as tools that can process these files automatically. To close this gap, we conduct a qualitative study involving the manual annotation of 4,226 README file sections from 393 randomly sampled GitHub repositories and we design and evaluate a classifier and a set of features that can categorize these sections automatically. We find that information discussing the What' and How' of a repository is very common, while many README files lack information regarding the purpose and status of a repository. Our multi-label classifier which can predict eight different categories achieves an F1 score of 0.746. To evaluate the usefulness of the classification, we used the automatically determined classes to label sections in GitHub README files using badges and showed files with and without these badges to twenty software professionals. The majority of participants perceived the automated labeling of sections based on our classifier to ease information discovery. This work enables the owners of software repositories to improve the quality of their documentation and it has the potential to make it easier for the software development community to discover relevant information in GitHub README files.
C1 [Prana, Gede Artha Azriadi; Thung, Ferdian; Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
   [Treude, Christoph; Atapattu, Thushari] Univ Adelaide, Sch Comp Sci, Adelaide, SA, Australia.
C3 Singapore Management University; University of Adelaide
RP Prana, GAA (corresponding author), Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
EM arthaprana.2016@phdis.smu.edu.sg; christoph.treude@adelaide.edu.au;
   ferdiant.2013@phdis.smu.edu.sg; thushari.atapattu@adelaide.edu.au;
   davidlo@smu.edu.sg
RI Treude, Christoph/AAZ-6257-2021; Thung, Ferdian/AAX-9321-2020; Lo,
   David/A-2493-2012
OI Prana, Gede Artha Azriadi/0000-0003-3759-5661; Treude,
   Christoph/0000-0002-6919-2149; Lo, David/0000-0002-4367-7201
CR Abebe SL, 2016, EMPIR SOFTW ENG, V21, P1107, DOI 10.1007/s10664-015-9377-5
   Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   [Anonymous], 2014, AUTOMATIC CATEGORIZA
   [Anonymous], 2010, Eval. Usability Program, DOI DOI 10.1145/1937117.1937125
   [Anonymous], 2017, P 21 INT C EVALUATIO, DOI [DOI 10.1145/3084226, 10.1145/3084226.3084287, DOI 10.1145/3084226.3084287]
   [Anonymous], 2011, P 2 INT WORKSHOP WEB
   [Anonymous], 2012, P ACM SIGSOFT 20 INT
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Begel A, 2013, IEEE SOFTWARE, V30, P52, DOI 10.1109/MS.2013.13
   Bird S., 2009, NATURAL LANGUAGE PRO
   Boughorbel S, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0177678
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Chaparro O, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/3106237.3106285
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Correa D, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P631, DOI 10.1145/2566486.2568036
   De Souza L. B. L., 2014, P IEEE INT C PROG CO, P72, DOI DOI 10.1145/2597008.2597146
   Decan A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P493, DOI 10.1109/SANER.2016.12
   Di Sorbo A, 2015, IEEE INT CONF AUTOM, P12, DOI 10.1109/ASE.2015.12
   Ding W, 2014, INFORM SOFTWARE TECH, V56, P545, DOI 10.1016/j.infsof.2014.01.008
   Erdem A, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P230, DOI 10.1109/ASE.1998.732658
   Erdos K, 1998, PROG COMPREHEN, P98, DOI 10.1109/WPC.1998.693322
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fogel Karl, 2005, Producing Open Source Software: How to Run a Successful Free Software Project, V1st
   Fritz T., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P175
   Green EA, 2014, PEERJ, V2, DOI 10.7717/peerj.386
   Greene GJ, 2016, IEEE INT CONF AUTOM, P804, DOI 10.1145/2970276.2970285
   Guzman E, 2015, IEEE INT CONF AUTOM, P771, DOI 10.1109/ASE.2015.88
   Haenni N., 2013, Proceedings of the 2013 International Workshop on Ecosystem Architectures, P1
   Hassan F, 2017, PROC IEEE ACM INT C, P277, DOI 10.1109/ICSE-C.2017.114
   Hauff C, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P362, DOI 10.1109/MSR.2015.41
   HERBSLEB JD, 1993, HUMAN FACTORS IN COMPUTING SYSTEMS, P7
   Hou DQ, 2005, PROG COMPREHEN, P87
   Jeong SY, 2009, LECT NOTES COMPUT SC, V5435, P86
   Johnson WL, 1997, KNOWLEDGE-BASED SOFTWARE ENGINEERING, P53, DOI 10.1023/A:1008655629091
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kirk D, 2007, EMPIR SOFTW ENG, V12, P243, DOI 10.1007/s10664-006-9027-z
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Kumar N, 2016, ARXIV160707602
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P61, DOI 10.1109/RE.2017.86
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Luaces O, 2012, PROG ARTIF INTELL, V1, P303, DOI 10.1007/s13748-012-0030-x
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   Mahmoud A, 2016, REQUIR ENG, V21, P357, DOI 10.1007/s00766-016-0252-8
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Monperrus M, 2012, EMPIR SOFTW ENG, V17, P703, DOI 10.1007/s10664-011-9186-4
   Moreno L, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P484, DOI 10.1145/2635868.2635870
   Mylopoulos J., 1997, Automated Software Engineering, V4, P291, DOI 10.1023/A:1008627026003
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Norman C.L., 2002, P 20 ANN INT C DOC S, P133
   Pagano D, 2013, EMPIR SOFTW ENG, V18, P1090, DOI 10.1007/s10664-012-9211-2
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Parnin C, 2013, CONF PROC INT SYMP C, P211, DOI 10.1109/ICPC.2013.6613850
   Pascarella L, 2017, IEEE WORK CONF MIN S, P227, DOI 10.1109/MSR.2017.63
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Prasetyo PK, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P596, DOI 10.1109/ICSM.2012.6405330
   Portugal RLQ, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P304, DOI [10.1109/REW.2016.29, 10.1109/REW.2016.056]
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Romano D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P303, DOI 10.1109/ICSM.2011.6080797
   Sillito J., 2006, Proc. of the ACM SIGSOFT Int'l Symp. on Foundations of Software Engineering, P23, DOI DOI 10.1145/1181775.1181779
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Steinmacher I, 2016, PROC INT CONF SOFTW, P273, DOI 10.1145/2884781.2884806
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tiarks R., 2014, P WORK C MIN SOFTW R, P272
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Treude C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P625, DOI 10.1145/2786805.2786827
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Trockman A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P511, DOI 10.1145/3180155.3180209
   Xia X, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P134, DOI 10.1109/CSMR-WCRE.2014.6747163
   Zhang Y, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P13, DOI 10.1109/SANER.2017.7884605
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 77
TC 62
Z9 66
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2019
VL 24
IS 3
BP 1296
EP 1327
DI 10.1007/s10664-018-9660-3
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ID9YT
UT WOS:000472043800008
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Malloy, BA
   Power, JF
AF Malloy, Brian A.
   Power, James F.
TI An empirical analysis of the transition from Python 2 to Python 3
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Python programming; Programming language evolution; Compliance
ID C++ COMPILERS
AB Python is one of the most popular and widely adopted programming languages in use today. In 2008 the Python developers introduced a new version of the language, Python 3.0, that was not backward compatible with Python 2, initiating a transitional phase for Python software developers. In this paper, we describe a study that investigates the degree to which Python software developers are making the transition from Python 2 to Python 3. We have developed a Python compliance analyser, PyComply, and have analysed a previously studied corpus of Python applications called Qualitas. We use PyComply to measure and quantify the degree to which Python 3 features are being used, as well as the rate and context of their adoption in the Qualitas corpus. Our results indicate that Python software developers are not exploiting the new features and advantages of Python 3, but rather are choosing to retain backward compatibility with Python 2. Moreover, Python developers are confining themselves to a language subset, governed by the diminishing intersection of Python 2, which is not under development, and Python 3, which is under development with new features being introduced as the language continues to evolve.
C1 [Malloy, Brian A.] Clemson Univ, Dept Comp Sci, Clemson, SC USA.
   [Power, James F.] Maynooth Univ, Comp Sci Dept, Maynooth, Kildare, Ireland.
C3 Clemson University; Maynooth University
RP Power, JF (corresponding author), Maynooth Univ, Comp Sci Dept, Maynooth, Kildare, Ireland.
EM malloy@clemson.edu; james.power@mu.ie
OI Power, James/0000-0002-6770-3910
CR Akerblom B., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P292
   [Anonymous], [No title captured]
   [Anonymous], 2017, P 21 INT C EV ASS, DOI DOI 10.1145/3084226.3084271
   Benson D, 2017, DIFFERENT C STANDARD
   Cannon B, 2017, PORTING PYTHON 2 COD
   Cannon B, 2013, PYTHON 3 3 TRUST ME
   Chapman C, 2016, P 25 INT S SOFTW TES, P282
   Chen ZF, 2016, 2016 INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, TESTING AND EVOLUTION (SATE 2016), P18, DOI 10.1109/SATE.2016.10
   Coghlan N, 2012, PYTHON 3 Q A
   Destefanis G, 2016, INT WORKS EMERG TREN, P22, DOI 10.1109/WETSoM.2016.012
   Dyer R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P779, DOI 10.1145/2568225.2568295
   Gee S, 2014, PYTHON 2 7 BE MAINTA
   Gorbovitski M, 2010, ACM SIGPLAN NOTICES, V45, P27, DOI 10.1145/1899661.1869635
   Hora A, 2015, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSM.2015.7332471
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Klint P, 2005, ACM T SOFTW ENG METH, V14, P331, DOI 10.1145/1072997.1073000
   Lämmel R, 2009, LECT NOTES COMPUT SC, V5423, P246
   Lammel R., 2001, FME 2001: Formal Methods for Increasing Software Productivity. International Symposium on Formal Methods Europe. Proceedings (Lecture Notes in Computer Science Vol.2021), P550
   Lindstrom G., 2005, IT Professional, V7, P10, DOI 10.1109/MITP.2005.120
   Ma WWY, 2017, PROC INT CONF SOFTW, P381, DOI 10.1109/ICSE.2017.42
   Malloy BA, 2003, DR DOBBS J, V28, P54
   Malloy BA, 2002, DR DOBBS J, V27, P71
   Malloy BA, 2002, SAICSIT 02 P 2002 AN, P75
   Malloy BA, 2017, ACM IEEE INT S EMP S
   Malloy BA, 2016, WORKSH PARS SLE
   Memarian K, 2016, ACM SIGPLAN NOTICES, V51, P1, DOI [10.1145/2908080.2908081, 10.1145/2980983.2908081]
   OrrU M, 2015, INT C PRED MOD DAT A
   Orrú M, 2015, ASIA PAC SOFWR ENG, P309, DOI 10.1109/APSEC.2015.51
   Parnin C., 2011, PROCEEDING 8 WORKING, P3
   Perl 5 Porters, 2017, PERL PROGR DOC
   Power JE, 2004, J SOFTW MAINT EVOL-R, V16, P405, DOI 10.1002/smr.293
   Rajagopal I, 2017, 10 AWESOME FEATURES
   Sipser M., 2013, INTRO THEORY COMPUTA, V3
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
   Toal R., 2016, Programming language explorations
   Urma Raoul-Gabriel., 2014, Proceedings of the 1st Workshop on Pro-gramming Language Evolution, P1
   Wang B, 2015, Soc. Sci. Res, P134
   Wei Lin, 2016, 2016 IEEE International Conference on Software Maintenance and Evolution (ICSME), P188, DOI 10.1109/ICSME.2016.25
   Wikipedia, 2017, PERL WIK FREE ENC
   Zaytsev V, 2014, J OBJECT TECHNOL, V13, DOI 10.5381/jot.2014.13.3.a1
NR 40
TC 16
Z9 16
U1 31
U2 170
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2019
VL 24
IS 2
BP 751
EP 778
DI 10.1007/s10664-018-9637-2
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ8DM
UT WOS:000462654200007
DA 2024-07-18
ER

PT J
AU Rahman, MT
   Rigby, PC
   Shihab, E
AF Rahman, Md Tajmilur
   Rigby, Peter C.
   Shihab, Emad
TI The modular and feature toggle architectures of Google Chrome
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture; Architecture extraction; Feature architecture;
   Toggles; Switches; Flags
ID CLUSTERING ALGORITHMS; TRACEABILITY LINKS; SOURCE-CODE; SOFTWARE;
   INFORMATION
AB Software features often span multiple directories and conceptual modules making the extraction of feature architectures difficult. In this work, we extract a feature toggle architectural view and show how features span the conceptual, concrete, and reference architectures. Feature toggles are simple conditional flags that allow developers to turn a feature on or off in a running system. They are commonly used by large web companies, including Google, Netflix and Facebook to selectively enable and disable features. Recently, libraries to help inject and manage toggles have been created for all the major programming languages. We extract the feature toggles from the Google Chrome web browser to illustrate their use in understanding the architecture of a system. Since there is no high-level conceptual and concrete architectures for Chrome, we had to manually derive these representations from available documentation and map them into the source code. These modular representations of a modern web browser allowed us to update the 12 year old research on browser reference architectures with current technologies and browser concepts. Mining the usages of feature toggles in the source code, we were able to map them on to the modular representation to create a feature toggle architectural view of Chrome. We are also able to show which features are contained in a module and which modules a feature spans. Throughout the paper, we show how the feature toggle view can give new perspectives into the feature architecture of a system.
C1 [Rahman, Md Tajmilur] Concordia Univ, Montreal, PQ, Canada.
   [Rigby, Peter C.] Concordia Univ, Software Engn, Montreal, PQ, Canada.
   [Shihab, Emad] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
C3 Concordia University - Canada; Concordia University - Canada; Concordia
   University - Canada
RP Rahman, MT (corresponding author), Concordia Univ, Montreal, PQ, Canada.
EM mdt_rahm@encs.concordia.ca; peter.rigby@concordia.ca;
   eshihab@encs.concordia.ca
CR Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   [Anonymous], 2011, P 6 INT WORKSHOP SHA
   [Anonymous], 2013, ETHERTANK DBARON KOH
   Anquetil N., 2003, IEE Proceedings-Software, V150, P185, DOI 10.1049/ip-sen:20030581
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Batory D., 2003, Software Engineering Notes, V28, P48, DOI 10.1145/949952.940079
   Benavides D, 2005, LECT NOTES COMPUT SC, V3520, P491
   Bowman I. T., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P555, DOI 10.1109/ICSE.1999.841045
   Bravo, 2012, LIST CHROM COMM LIN
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   Chrome, 2015, CHROM PROJ DES DOC
   Chrome, 2015, GOOGL CHROM DEV DOC
   Chrome, 2016, CONT MOD
   Chrome, 2016, CHROM PROJ NACL PNAC
   Chrome, 2016, WHAT AR EXT
   Chrome G, 2013, SAYING GOODB OUR OLD
   ChromeWiki, 2015, GOOGL CHROM OFF WIK
   Corazza A, 2011, EUR CON SFTWR MTNCE, P35, DOI 10.1109/CSMR.2011.8
   Corazza A, 2010, EUR CON SFTWR MTNCE, P88, DOI 10.1109/CSMR.2010.36
   CSAcademy, 2017, GRAPH ED
   Czarnecki K, 2004, LECT NOTES COMPUT SC, V3154, P266
   Dagenais B, 2012, PROC INT CONF SOFTW, P47, DOI 10.1109/ICSE.2012.6227207
   Dintzner N, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P85, DOI [10.1109/MSR.2016.018, 10.1145/2901739.2901755]
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dixon E., 2011, US Patent, Patent No. [7,975,000, 7975000]
   Dubinsky Y, 2013, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2013.13
   FeatureFlags, 2018, FEAT FLAGS TOGGL CON
   Firefox, 2015, MULT FIR TECHN OV
   Fitzgerald B., 2014, P 1 INT WORKSH RAP C, P1, DOI DOI 10.1145/2593812.2593813
   Fowler, 2010, FEAT
   Garcia J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P552, DOI 10.1109/ASE.2011.6100123
   Garcia J, 2013, IEEE INT CONF AUTOM, P486, DOI 10.1109/ASE.2013.6693106
   Griss ML, 1998, FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE REUSE - PROCEEDINGS, P76, DOI 10.1109/ICSR.1998.685732
   Grosskurth A, 2005, PROC IEEE INT CONF S, P661
   Jansen A, 2006, 5TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P109
   Kang Kyo C, 1990, Technical Report
   Kellens A, 2007, LECT NOTES COMPUT SC, V4640, P143
   Kiczales G., 2001, ECOOP 2001 - Object-Oriented Programming. 15th European Conference. Proceedings (Lecture Notes in Computer Science Vol.2072), P327
   Kobayashi K, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P462, DOI 10.1109/ICSM.2012.6405308
   Krikhaar R.L., 1999, Software Architecture Reconstruction
   Kruchten P, 1995, TRI ADA 95
   Laforge, 2011, CHROM REL CYCL
   Lindvall M, 1996, SOFTWARE PRACT EXPER, V26, P1161, DOI 10.1002/(SICI)1097-024X(199610)26:10<1161::AID-SPE58>3.0.CO;2-X
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Maqbool O, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P15, DOI 10.1109/CSMR.2004.1281402
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   MozillaWiki, 2015, JAV SPID OD
   Naseem R, 2011, EUR CON SFTWR MTNCE, P45, DOI 10.1109/CSMR.2011.9
   QUEILLE JP, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P234, DOI 10.1109/ICSM.1994.336771
   Rahman MT, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P201, DOI [10.1145/2901739.2901745, 10.1109/MSR.2016.029]
   Rahman MT, 2017, CHROME ARCHITECTURE
   Rigby PC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P832, DOI 10.1109/ICSE.2013.6606629
   Rubin J, 2015, INT J SOFTW TOOLS TE, V17, P627, DOI 10.1007/s10009-014-0347-9
   Scitools, 2016, UND SOURC COD AN
   Sochos P, 2004, LECT NOTES COMPUT SC, V3263, P138
   TheRegisterCOUK, 2011, GOOGL NAT CLIENT GOE
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
   Ur Rahman AA, 2015, 2015 AGILE CONFERENCE, P1, DOI 10.1109/Agile.2015.12
   Wu JW, 2005, PROC IEEE INT CONF S, P525
NR 60
TC 9
Z9 10
U1 0
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2019
VL 24
IS 2
BP 826
EP 853
DI 10.1007/s10664-018-9639-0
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ8DM
UT WOS:000462654200009
DA 2024-07-18
ER

PT J
AU Bernardi, S
   Domínguez, JL
   Gómez, A
   Joubert, C
   Merseguer, J
   Perez-Palacin, D
   Requeno, JI
   Romeu, A
AF Bernardi, Simona
   Dominguez, Juan L.
   Gomez, Abel
   Joubert, Christophe
   Merseguer, Jose
   Perez-Palacin, Diego
   Requeno, Jose I.
   Romeu, Alberto
TI A systematic approach for performance assessment using process mining An
   industrial experience report
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software performance; Process mining; Unified modeling language; Complex
   event processing; Stochastic petri net
ID SELF-AWARE; MODEL; PREDICTION
AB Software performance engineering is a mature field that offers methods to assess system performance. Process mining is a promising research field applied to gain insight on system processes. The interplay of these two fields opens promising applications in the industry. In this work, we report our experience applying a methodology, based on process mining techniques, for the performance assessment of a commercial data-intensive software application. The methodology has successfully assessed the scalability of future versions of this system. Moreover, it has identified bottlenecks components and replication needs for fulfilling business rules. The system, an integrated port operations management system, has been developed by PRODEVELOP, a medium-sized software enterprise with high expertise in geospatial technologies. The performance assessment has been carried out by a team composed by practitioners and researchers. Finally, the paper offers a deep discussion on the lessons learned during the experience, that will be useful for practitioners to adopt the methodology and for researcher to find new routes.
C1 [Bernardi, Simona; Merseguer, Jose; Requeno, Jose I.] Univ Zaragoza, Dept Informat & Ingn Sistemas, Zaragoza, Spain.
   [Dominguez, Juan L.; Joubert, Christophe; Romeu, Alberto] Prodevelop SL, Valencia, Spain.
   [Gomez, Abel] Univ Oberta Catalunya, Internet Interdisciplinary Inst, Barcelona, Spain.
   [Perez-Palacin, Diego] Linnaeus Univ, Dept Comp Sci, Vaxjo, Sweden.
C3 University of Zaragoza; UOC Universitat Oberta de Catalunya; Linnaeus
   University
RP Bernardi, S (corresponding author), Univ Zaragoza, Dept Informat & Ingn Sistemas, Zaragoza, Spain.
EM simonab@unizar.es; jl.dominguez.rubio@gmail.com; agomezlla@uoc.edu;
   cjoubert@prodevelop.es; jmerse@unizar.es; diego.perez@lnu.se;
   nrequeno@unizar.es; alberto.romeu.carrasco@gmail.com
RI Gómez, Abel/J-8652-2012; Joubert, Christophe/A-2125-2010; Requeno
   Jarabo, José Ignacio/GLT-6769-2022; Merseguer, Jose/A-6028-2012;
   Bernardi, Simona/L-1456-2014
OI Gómez, Abel/0000-0003-1344-8472; Joubert,
   Christophe/0000-0002-1767-5675; Requeno Jarabo, José
   Ignacio/0000-0001-5111-8357; Merseguer, Jose/0000-0001-5538-3553;
   Bernardi, Simona/0000-0002-2605-6243
FU European Commission under the H2020 Research and Innovation program
   [DICE] [644869]; Spanish Ministry of Economy and Competitiveness
   [CyCriSec-TIN2014-58457-R]; Aragonese Government [DIStributed
   COmputation (DISCO)]; H2020 - Industrial Leadership [644869] Funding
   Source: H2020 - Industrial Leadership
FX Special thanks to Ismael Torres and Sergi Soler, from Prodevelop, for
   their help in collecting the logs of the case study. This work has been
   supported by the European Commission under the H2020 Research and
   Innovation program [DICE, Grant Agreement No. 644869], the Spanish
   Ministry of Economy and Competitiveness [ref. CyCriSec-TIN2014-58457-R],
   and the Aragonese Government [ref. T94, DIStributed COmputation
   (DISCO)].
CR Adriansyah A, 2012, BPM REPORTS, V1215
   AISencoding, 2012, AUTOMATIC IDENTIFICA
   AISreceiver, 2016, INSTALLATION QUICK R
   AIVM/AIVDO, 2015, AIVDM AIVDO PROTOCOL
   [Anonymous], 2013, E HDB STAT METH
   [Anonymous], 2017, PNML FRAMEWORK
   [Anonymous], 2011, QPR PROCESS ANAL
   Averill ML, 2015, SIMULATION MODELING
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Bass Len, 2015, DevOps: A Software Architect's Perspective
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Bernardi S, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379778
   Bernardi S, 2011, IEEE T IND INFORM, V7, P90, DOI 10.1109/TII.2010.2098415
   Brünink M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P39, DOI 10.1145/2950290.2950314
   Brunnert A, 2017, J SYST SOFTWARE, V123, P239, DOI 10.1016/j.jss.2015.08.030
   Bugzilla, 2017, PAP BUG LIST
   Casale G, 2015, 2015 IEEE/ACM 7TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING, P78, DOI 10.1109/MiSE.2015.21
   Celonis, 2011, CEL PI
   Ceravolo P, 2017, LECT NOTES BUS INF P, V297, P55, DOI 10.1007/978-3-319-65015-9_4
   Cortellessa V, 2011, MODEL-BASED SOFTWARE PERFORMANCE ANALYSIS, P1, DOI 10.1007/978-3-642-13621-4
   de la Mesa S. H., 2015, CEUR WORKSHOP P, P80
   DICE-D1. 6, 2017, DELIVERABLE 1 6 DICE
   DICE-D3. 1, 2016, DELIVERABLE 3 1 TRAN
   Dipartimento di informatica Universita di Torino, 2016, GRAPHICAL ED AN TIM
   Diwan A, 2011, SOFTWARE PRACT EXPER, V41, P267, DOI 10.1002/spe.1000
   Ferme V, 2017, ICPE'17: COMPANION OF THE 2017 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P159, DOI 10.1145/3053600.3053636
   Foundation TE, 2017, ECL ECL FDN OP SOURC
   Gnther CW., 2012, BPM, V940, P40
   Gomes A., 2016, Proceedings of the 29th Annual Symposium on User Interface Software and Technology, UIST'16 Adjunct, P159
   Gómez-Martínez E, 2014, EMPIR SOFTW ENG, V19, P1967, DOI 10.1007/s10664-013-9297-1
   Huber N, 2017, IEEE T SOFTWARE ENG, V43, P432, DOI 10.1109/TSE.2016.2613863
   Huber N, 2015, 2015 INTERNATIONAL CONFERENCE ON CLOUD AND AUTONOMIC COMPUTING (ICCAC), P181, DOI 10.1109/ICCAC.2015.27
   ISO, 2008, 1590922011 ISO IEC
   Joishi J, 2015, P 19 INT DAT ENG APP, P192
   Joubert C., 2014, ERCIM NEWS, V2014
   Kounev S, 2006, IEEE T SOFTWARE ENG, V32, P486, DOI 10.1109/TSE.2006.69
   Kounev S, 2016, COMPUTER, V49, P53, DOI 10.1109/MC.2016.198
   Lazowska Edward D, 1984, Quantitative system performance: computer system analysis using queueing network models
   Lopez-Grao J. P., 2004, Software Engineering Notes, V29, P25, DOI 10.1145/974043.974048
   Menasce D.A., 2004, Performance by design: computer capacity planning by example, DOI DOI 10.5555/995032
   OMG, 2011, BUSINESS PROCESS MOD
   Prodevelop, 1993, PROD INT TECH
   ProM Tools, 2017, PROM TOOLS
   RapidMiner, 2018, RAPID MINER
   RapidProM, 2018, RAPIDPROM BRINGING P
   RUBIN VA, 2014, P 8 ACM IEEE INT S E
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   SHAVOR S, 2003, JAVA DEV GUIDE ECLIP
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
   Tarvo A, 2018, AUTOMAT SOFTW ENG, V25, P101, DOI 10.1007/s10515-017-0214-5
   The Eclipse Foundation, 2016, PAP
   UML2, 2015, FORMAL20150301 OMG
   Van de Laar P., 2013, SITUATION AWARENESS
   van der Aalst W, 2012, WIRES DATA MIN KNOWL, V2, P182, DOI 10.1002/widm.1045
   van der Aalst WMP, 2011, PROCESS MINING: DISCOVERY, CONFORMANCE AND ENHANCEMENT OF BUSINESS PROCESSES, P1, DOI 10.1007/978-3-642-19345-3
   van der Aalst WMP, 2014, LECT NOTES BUS INF P, V172, P33, DOI 10.1007/978-3-319-05461-2_2
   van Dongen BF, 2005, LECT NOTES COMPUT SC, V3536, P444
   Walter J, 2017, ICPE'17: COMPANION OF THE 2017 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P165, DOI 10.1145/3053600.3053634
   Walter J, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P91, DOI 10.1145/2851553.2858662
   XES, 2016, EXT EV STREAM
   Yu X, 2014, ACM SIGPLAN NOTICES, V49, P193, DOI 10.1145/2541940.2541968
   [No title captured]
NR 62
TC 6
Z9 6
U1 1
U2 21
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2018
VL 23
IS 6
BP 3394
EP 3441
DI 10.1007/s10664-018-9606-9
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC1WE
UT WOS:000451593200009
DA 2024-07-18
ER

PT J
AU Assunçao, WKG
   Lopez-Herrejon, RE
   Linsbauer, L
   Vergilio, SR
   Egyed, A
AF Assuncao, Wesley K. G.
   Lopez-Herrejon, Roberto E.
   Linsbauer, Lukas
   Vergilio, Silvia R.
   Egyed, Alexander
TI Reengineering legacy applications into software product lines: a
   systematic mapping
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Systematic reuse; Legacy systems; Evolution; Reengineering; Product
   family
ID SOURCE CODE; REUSE; REQUIREMENTS; VARIABILITY; RECOVERY; EVOLUTION;
   COMPONENT; TAXONOMY; FEATURES; SUPPORT
AB Software Product Lines (SPLs) are families of systems that share common assets allowing a disciplined reuse. Rarely SPLs start from scratch, instead they usually start from a set of existing systems that undergo a reengineering process. Many approaches to conduct the reengineering process have been proposed and documented in research literature. This scenario is a clear testament to the interest in this research area. We conducted a systematic mapping study to provide an overview of the current research on reengineering of existing systems to SPLs, identify the community activity in regarding of venues and frequency of publications in this field, and point out trends and open issues that could serve as references for future research. This study identified 119 relevant publications. These primary sources were classified in six different dimensions related to reengineering phases, strategies applied, types of systems used in the evaluation, input artefacts, output artefacts, and tool support. The analysis of the results points out the existence of a consolidate community on this topic and a wide range of strategies to deal with different phases and tasks of the reengineering process, besides the availability of some tools. We identify some open issues and areas for future research such as the implementation of automation and tool support, the use of different sources of information, need for improvements in the feature management, the definition of ways to combine different strategies and methods, lack of sophisticated refactoring, need for new metrics and measures and more robust empirical evaluation. Reengineering of existing systems into SPLs is an active research topic with real benefits in practice. This mapping study motivates new research in this field as well as the adoption of systematic reuse in software companies.
C1 [Assuncao, Wesley K. G.; Vergilio, Silvia R.] Fed Univ Parana UFPR, DInf, CP 19081, BR-81531980 Curitiba, Parana, Brazil.
   [Assuncao, Wesley K. G.] Fed Univ Technol Parana UTFPR, COTSI, Cristo Rei St 19, BR-85902490 Toledo, Brazil.
   [Lopez-Herrejon, Roberto E.] ETS, Dept Software Engn & IT, Notre Dame St Ouest 1100, Montreal, PQ H3C 1K3, Canada.
   [Linsbauer, Lukas; Egyed, Alexander] Johannes Kepler Univ Linz JKU, ISSE, Altenbergerstr 69, A-4040 Linz, Austria.
C3 Universidade Federal do Parana; Universidade Tecnologica Federal do
   Parana; University of Quebec; Ecole de Technologie Superieure - Canada;
   Johannes Kepler University Linz
RP Assunçao, WKG (corresponding author), Fed Univ Parana UFPR, DInf, CP 19081, BR-81531980 Curitiba, Parana, Brazil.; Assunçao, WKG (corresponding author), Fed Univ Technol Parana UTFPR, COTSI, Cristo Rei St 19, BR-85902490 Toledo, Brazil.
EM wesleyk@inf.ufpr.br; roberto.lopez@etsmtl.ca; lukas.linsbauer@jku.at;
   silvia@inf.ufpr.br; alexander.egyed@jku.at
RI Assuncao, Wesley Klewerton Guez/AAA-8331-2020; Egyed,
   Alexander/E-2632-2017
OI Assuncao, Wesley Klewerton Guez/0000-0002-7557-9091; Egyed,
   Alexander/0000-0003-3128-5427
FU CAPES [007126/2014-00]; CNPq [453678/2014-9, 305358/2012-0]; Austrian
   Science Fund (FWF) [P 25289-N15]
FX This work was supported by the Brazilian Agencies CAPES: 007126/2014-00
   and CNPq: 453678/2014-9 and 305358/2012-0, and Austrian Science Fund
   (FWF): P 25289-N15.
CR Abbasi EK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P264, DOI 10.1109/CSMR-WCRE.2014.6747178
   ACHER M., 2012, P 6 INT WORKSH VAR M, P45, DOI DOI 10.1145/2110147.2110153
   Acher M, 2011, LECT NOTES COMPUT SC, V6903, P220, DOI 10.1007/978-3-642-23798-0_25
   Al-msie'deen R., 2013, 2013 IEEE 14th International Conference on Information Reuse & Integration (IRI), P586, DOI 10.1109/IRI.2013.6642522
   AL-Msie'deen Ra'Fat, 2013, Safe and Secure Software Reuse. 13th International Conference on Software Reuse, ICSR 2013. Proceedings: LNCS 7925, P302, DOI 10.1007/978-3-642-38977-1_22
   Ali N., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P153, DOI 10.1109/ICSM.2011.6080782
   Alves V, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P67, DOI 10.1109/SPLC.2008.18
   Alves V, 2010, INFORM SOFTWARE TECH, V52, P806, DOI 10.1016/j.infsof.2010.03.014
   Alves V, 2007, LECT NOTES COMPUT SC, V4640, P117
   [Anonymous], MINING RECOMMENDING
   [Anonymous], 39 EUR C SOFTW ENG A
   [Anonymous], 2012, 16 INT SOFTWARE PROD, DOI DOI 10.1145/2362536.2362556
   [Anonymous], LAT AM WORKSH ASP OR
   [Anonymous], ASSESSING SOFTWARE P
   [Anonymous], IEEE 14 INT C INF RE
   [Anonymous], 2015 INT C EV NOV AP
   [Anonymous], DUMAS00855005 CENTR
   [Anonymous], OV ROADM 2015 ANN C
   [Anonymous], 26 INT C SOFTW ENG K
   [Anonymous], FOSE 2014
   [Anonymous], 2012, VARY 12
   [Anonymous], TECH REP
   [Anonymous], ACM COMPUTING SURVEY, DOI DOI 10.1145/130844.130856
   [Anonymous], 2009, TECH REP
   [Anonymous], 03404E
   [Anonymous], ISA2012T01 U SEV DEP
   [Anonymous], 28 S APPL COMP SAC A
   [Anonymous], THESIS
   [Anonymous], 2010, P EUR WORKSH SMART O
   [Anonymous], 26 INT C SOFTW ENG K
   [Anonymous], 17 INT C ENT INF SYS
   [Anonymous], EXTRACTION EVOLUTION
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   [Anonymous], 39 LAT AM COMP C CLE
   [Anonymous], INT C SOFTW ENG KNOW
   [Anonymous], 17 INT SOFTW PROD LI
   [Anonymous], THESIS
   [Anonymous], 5 INT WORKSH VAR MOD
   [Anonymous], HEURISTIC EXPANSION
   [Anonymous], LINDEN F J SOFTWARE
   [Anonymous], IEEE 30 INT C SOFTW
   [Anonymous], 2008, INTRO INFORM RETRIEV, DOI DOI 10.1017/CBO9780511809071
   [Anonymous], 2013, THESIS
   [Anonymous], 28 S APPL COMP SAC A
   [Anonymous], 20 IEEE ACM INT C AU
   [Anonymous], RT0441 INIRA I NAT S
   [Anonymous], 4 INT WORKSH PROGR C
   Anwikar V., 2012, SIGSOFT Softw Eng Notes, V37, P1
   Assuncao W.K.G., 2014, 18 INT SOFTWARE PROD, V2, P52, DOI [/10.1145/2647908.2655967, DOI 10.1145/2647908.2655967]
   Bagheri E, 2012, AUTOMAT SOFTW ENG, V19, P335, DOI 10.1007/s10515-011-0099-7
   Bakar NH, 2015, J SYST SOFTWARE, V106, P132, DOI 10.1016/j.jss.2015.05.006
   Boutkova E, 2011, INT REQUIR ENG CONF, P313, DOI 10.1109/RE.2011.6051627
   Breivold HP, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P232, DOI 10.1109/SEAA.2008.13
   Chen K, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P31
   Chen LP, 2010, LECT NOTES COMPUT SC, V6287, P166, DOI 10.1007/978-3-642-15579-6_12
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Davril Jean-Marc., 2013, JOINT M EUR SOFTW EN, P290, DOI DOI 10.1145/2491411.2491455
   Demeyer S., 2009, OBJECT ORIENTED REEN
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dubinsky Y, 2013, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2013.13
   Duszynski S., 2011, 2011 18th Working Conference on Reverse Engineering, P303, DOI 10.1109/WCRE.2011.44
   Eisenbarth T, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P176, DOI 10.1109/CSMR.2001.914982
   Eyal-Salman Hamzeh, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P57, DOI 10.1109/SEAA.2013.65
   Eyal-Salman H., 2013, 1 INT WORKSHOP REVER, P17
   Falessi CantoneG., 2010, ESEM 2010 - Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, P1
   Faust D, 2003, SOFTWARE PRACT EXPER, V33, P933, DOI 10.1002/spe.530
   Fenske Wolfram, 2013, 8 INT WORKSH VAR MOD, P1, DOI DOI 10.1145/2556624.2556643
   Ferrari A., 2013, Proceedings of the 17th International Software Product Line Conference, P116, DOI [10.1145/2491627.2491634, DOI 10.1145/2491627.2491634]
   Fischer S, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P665, DOI 10.1109/ICSE.2015.218
   Fischer S, 2014, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSME.2014.61
   Frenzel P, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P160, DOI 10.1109/WCRE.2007.28
   Galster M, 2014, IEEE T SOFTWARE ENG, V40, P282, DOI 10.1109/TSE.2013.56
   Gamez Nadia, 2011, Top Productivity through Software Reuse. Proceedings of the 12th International Conference on Software Reuse, ICSR 2011, P102, DOI 10.1007/978-3-642-21347-2_9
   Gamez N, 2013, INFORM SOFTWARE TECH, V55, P563, DOI 10.1016/j.infsof.2012.06.012
   Gang Zhang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P418, DOI 10.1109/ICSM.2011.6080809
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Hariri N, 2013, IEEE T SOFTWARE ENG, V39, P1736, DOI 10.1109/TSE.2013.39
   Harman M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P5, DOI 10.1145/2648511.2648513
   Haslinger E. N., 2011, 2011 18th Working Conference on Reverse Engineering, P308, DOI 10.1109/WCRE.2011.45
   Heidenreich F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P943
   Heradio R, 2016, INFORM SOFTWARE TECH, V72, P1, DOI 10.1016/j.infsof.2015.11.004
   Kang KC, 2005, LECT NOTES COMPUT SC, V3714, P45
   Kang Kyo C, 1990, Technical Report
   Kelly MB, 2011, IEEE INT WORK C SO, P135, DOI 10.1109/SCAM.2011.23
   Klatt B, 2014, PROC IEEE INT CONF S, P496, DOI 10.1109/ICSME.2014.81
   Klatt Benjamin, 2013, P INT WORKSHOP REVER, P1
   Knodel J, 2005, Ninth European Conference on Software Maintenance and Reengineering, Proceedings, P344, DOI 10.1109/CSMR.2005.18
   Knodel J., 2005, 12th working conference on reverse engineering (WCRE), P1
   Kolb R, 2006, J SOFTW MAINT EVOL-R, V18, P109, DOI 10.1002/smr.329
   Krueger CW, 2002, LECT NOTES COMPUT SC, V2290, P282
   Kulesza U, 2007, LECT NOTES COMPUT SC, V4765, P155
   Kumanan K., 2012, Proceedings of the 11th International Colloquium on Paratuberculosis, Sydney, Australia, 5-10 February 2012, P115
   Kunming Nie, 2012, Proceedings of the 2012 IEEE 36th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW), P509, DOI 10.1109/COMPSACW.2012.95
   Lago P, 2004, LECT NOTES COMPUT SC, V3154, P214
   Laguna MA, 2013, SCI COMPUT PROGRAM, V78, P1010, DOI 10.1016/j.scico.2012.05.003
   Li YY, 2007, LECT NOTES COMPUT SC, V4488, P1115
   Linsbauer L, 2014, LECT NOTES COMPUT SC, V8636, P153
   Linsbauer Lukas., 2013, P 17 INT SOFTW PROD, P131
   Lopez-Herrejon RE, 2015, INFORM SOFTWARE TECH, V61, P33, DOI 10.1016/j.infsof.2015.01.008
   Lopez-Herrejon RE, 2015, J SYST SOFTWARE, V103, P353, DOI 10.1016/j.jss.2014.10.037
   Lozano A, 2011, LECT NOTES COMPUT SC, V6999, P141, DOI 10.1007/978-3-642-24574-9_19
   Maazoun J, 2014, PROCEEDINGS OF THE 2014 2ND INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT (MODELSWARD 2014), P309
   Martinez J, 2014, LECT NOTES COMPUT SC, V8569, P117
   Martinez Jabier, 2015, P 19 INT C SOFTW PRO, P101, DOI DOI 10.1145/2791060.2791086
   Mefteh Mariem, 2014, Ada User Journal, V35, P107
   Mohamed F, 2014, INT CONF CLOUD COMP, P292, DOI 10.1109/CloudCom.2014.131
   Mu YH, 2009, 2009 INTERNATIONAL CONFERENCE ON INFORMATION AND MULTIMEDIA TECHNOLOGY, PROCEEDINGS, P194, DOI 10.1109/ICIMT.2009.47
   Niu N, 2014, IEEE SYST J, V8, P827, DOI 10.1109/JSYST.2013.2260092
   Nöbauer M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P284, DOI 10.1145/2648511.2648544
   Nöbauer M, 2014, LECT NOTES COMPUT SC, V8484, P165, DOI 10.1007/978-3-319-07881-6_12
   Noor MA, 2008, LECT NOTES COMPUT SC, V5082, P69
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Olszak A, 2012, SCI COMPUT PROGRAM, V77, P131, DOI 10.1016/j.scico.2010.10.007
   Otsuka J., 2011, P 15 INT SOFTW PROD, V2, P1
   Paskevicius P, 2012, INF TECHNOL CONTROL, V41, P376, DOI 10.5755/j01.itc.41.4.1108
   Passos Leonardo, 2013, VaMoS, P1
   Peng X, 2013, J SYST SOFTWARE, V86, P664, DOI 10.1016/j.jss.2012.10.270
   Petersen K., 2007, Systematic Mapping Studies in Software Engineering, P1
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Polzer A, 2012, INNOV SYST SOFTW ENG, V8, P35, DOI 10.1007/s11334-011-0174-z
   Ramos MA, 2008, J UNIVERS COMPUT SCI, V14, P1207
   Riva C, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P161, DOI 10.1109/IWPSE.2003.1231223
   Romero D, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P59
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Rubin J., 2013, SPLC, P101
   Rubin J, 2015, INT J SOFTW TOOLS TE, V17, P627, DOI 10.1007/s10009-014-0347-9
   Rubin J, 2012, IEEE INT CONF AUTOM, P242, DOI 10.1145/2351676.2351712
   Rubin J, 2012, LECT NOTES COMPUT SC, V7212, P285, DOI 10.1007/978-3-642-28872-2_20
   Rubin Julia., 2012, P SOFTWARE PRODUCT L, P156, DOI DOI 10.1145/2362536.2362558
   Ryssel U., 2011, P INT SOFTW PROD LIN, V2, P1, DOI [DOI 10.1145/2019136.2019141, 10.1145/2019136.2019141]
   Sampath P, 2014, FORM ASP COMPUT, V26, P695, DOI 10.1007/s00165-013-0276-5
   de Almeida ES, 2006, LECT NOTES COMPUT SC, V4039, P43
   Schulze Michael., 2013, Proceedings of the 17th International Software Product Line Conference (SPLC), P236
   Seidl C., 2012, P 16 INT SOFTW PROD, V1, P76, DOI DOI 10.1145/2362536.2362550
   Shao JW, 2013, LECT NOTES COMPUT SC, V7975, P547, DOI 10.1007/978-3-642-39640-3_40
   She S, 2014, INFORM SOFTWARE TECH, V56, P1122, DOI 10.1016/j.infsof.2014.01.012
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Stoermer C, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P35, DOI 10.1109/WICSA.2001.948405
   Stuikys V, 2011, INFORM TECHNOL C PR, P141
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Tiarks R, 2011, SOFTWARE QUAL J, V19, P295, DOI 10.1007/s11219-010-9115-6
   Valincius K, 2013, IADIS-INT J COMPUT S, V8, P47
   van der Linden F. J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   van der Storm T, 2007, LECT NOTES COMPUT SC, V4829, P66
   Wagner C., 2014, Model-Driven Software Migration: A Methodology: Reengineering, Recovery and Modernization of Legacy Systems
   WESTON N., 2009, P 13 INT SOFTWARE PR, P211
   WICHMANN BA, 1995, SOFTWARE ENG J, V10, P69, DOI 10.1049/sej.1995.0010
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Xue Yinxing, 2012, Reengineering legacy software products into software product line
   Yang YM, 2009, WORK CONF REVERSE EN, P215, DOI 10.1109/WCRE.2009.15
   Yinxing Xue, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P145, DOI 10.1109/WCRE.2012.24
   Yinxing Xue, 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P109, DOI 10.1109/WCRE.2010.20
   Ziadi T., 2014, P 29 ANN ACM S APPL, P1064
   Ziadi T, 2012, EUR CON SFTWR MTNCE, P417, DOI 10.1109/CSMR.2012.52
NR 156
TC 85
Z9 88
U1 0
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2017
VL 22
IS 6
BP 2972
EP 3016
DI 10.1007/s10664-017-9499-z
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FI3MB
UT WOS:000411865400007
DA 2024-07-18
ER

PT J
AU Choetkiertikul, M
   Dam, HK
   Tran, T
   Ghose, A
AF Choetkiertikul, Morakot
   Hoa Khanh Dam
   Truyen Tran
   Ghose, Aditya
TI Predicting the delay of issues with due dates in software projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical software engineering; Project management; Mining software
   engineering repositories
ID NETWORKS
AB Issue-tracking systems (e.g. JIRA) have increasingly been used in many software projects. An issue could represent a software bug, a new requirement or a user story, or even a project task. A deadline can be imposed on an issue by either explicitly assigning a due date to it, or implicitly assigning it to a release and having it inherit the release's deadline. This paper presents a novel approach to providing automated support for project managers and other decision makers in predicting whether an issue is at risk of being delayed against its deadline. A set of features (hereafter called risk factors) characterizing delayed issues were extracted from eight open source projects: Apache, Duraspace, Java.net, JBoss, JIRA, Moodle, Mulesoft, and WSO2. Risk factors with good discriminative power were selected to build predictive models to predict if the resolution of an issue will be at risk of being delayed. Our predictive models are able to predict both the the extend of the delay and the likelihood of the delay occurrence. The evaluation results demonstrate the effectiveness of our predictive models, achieving on average 79 % precision, 61 % recall, 68 % F-measure, and 83 % Area Under the ROC Curve. Our predictive models also have low error rates: on average 0.66 for Macro-averaged Mean Cost-Error and 0.72 Macro-averaged Mean Absolute Error.
C1 [Choetkiertikul, Morakot; Hoa Khanh Dam; Ghose, Aditya] Univ Wollongong, Sch Comp & Informat Technol, Fac Engn & Informat Sci, Wollongong, NSW, Australia.
   [Truyen Tran] Deakin Univ, Sch Informat Technol, Deakin, Australia.
C3 University of Wollongong; Deakin University
RP Dam, HK (corresponding author), Univ Wollongong, Sch Comp & Informat Technol, Fac Engn & Informat Sci, Wollongong, NSW, Australia.
EM mc650@uowmail.edu.au; hoa@uow.edu.au; truyen.tran@deakin.edu.au;
   aditya@uow.edu.au
RI Choetkiertikul, Morakot/AAN-8822-2020; Dam, Hoa Khanh/C-6058-2014
OI Choetkiertikul, Morakot/0000-0001-8188-4749; Dam, Hoa
   Khanh/0000-0003-4246-0526; Tran, Truyen/0000-0001-6531-8907
CR Abdelmoez W, 2012, P 22 INT C COMP THEO, P13
   [Anonymous], 2004, Software Engineering and Knowledge Engineering
   [Anonymous], 2006, P NAT C ART INT
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   [Anonymous], 1989, Software risk management tutorial
   [Anonymous], WHAT WINDOWS SERVICE
   [Anonymous], AUTOMATED SOFTWARE E
   Anvik J, 2006, WHO SHOULD FIX THIS
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Baccianella S, 2009, INT CONF INTELL SYST, P283, DOI 10.1109/ISDA.2009.230
   Belsley D. A., 2005, Regression Diagnostics: Identifying Influential Data and Sources of Collinearity
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bhattacharya Pamela., 2011, PROCEEDING 8 WORKING, P207, DOI DOI 10.1145/1985441.1985472
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   BOEHM BW, 1991, IEEE SOFTWARE, V8, P32, DOI 10.1109/52.62930
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Chawla N, 2006, EVALUATING PROBABILI, P1
   Choetkiertikul M, 2015, IEEE INT CONF AUTOM, P353, DOI 10.1109/ASE.2015.55
   Choetkiertikul M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P280, DOI 10.1109/MSR.2015.33
   Conforti R, 2015, DECIS SUPPORT SYST, V69, P1, DOI 10.1016/j.dss.2014.10.006
   da Costa DA, 2014, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSME.2014.50
   Friedman JH, 2001, ANN STAT, V29, P1189, DOI 10.1214/aos/1013203451
   Friedman JH, 2002, COMPUT STAT DATA AN, V38, P367, DOI 10.1016/S0167-9473(01)00065-2
   Garg A, 2001, LECT NOTES COMPUTER, V2167
   Genuer R, 2010, PATTERN RECOGN LETT, V31, P2225, DOI 10.1016/j.patrec.2010.03.014
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Group S, 2004, TECH REP
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Guyon Isabelle, 2003, J MACH LEARN RES, V3, P1157, DOI DOI 10.1162/153244303322753616
   Han WM, 2007, J SYST SOFTWARE, V80, P42, DOI 10.1016/j.jss.2006.04.030
   Hodge VJ, 2004, ARTIF INTELL REV, V22, P85, DOI 10.1023/B:AIRE.0000045502.10941.a9
   Hu Y, 2007, ICNC 2007: THIRD INTERNATIONAL CONFERENCE ON NATURAL COMPUTATION, VOL 3, PROCEEDINGS, P358
   Hu Y, 2013, DECIS SUPPORT SYST, V56, P439, DOI 10.1016/j.dss.2012.11.001
   Ibrahim Walid M., 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P181, DOI 10.1109/MSR.2010.5463345
   Iqbal A, 2014, ISRN SOFTW ENG, V2014, P10
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Kamei Y., 2010, Proceedings of the 26th International Conference on Software Maintenance, P1, DOI 10.1109/ICSM.2010.5609530
   Kaufman S, 2012, ACM T KNOWL DISCOV D, V6, DOI 10.1145/2382577.2382579
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kochhar PS, 2014, IEEE INT C ENG COMP, P126, DOI 10.1109/ICECCS.2014.25
   Kohavi R., 1996, KDD-96 Proceedings. Second International Conference on Knowledge Discovery and Data Mining, P202
   Lam X. N., 2008, P 2 INT C UBIQUITOUS, P208, DOI [DOI 10.1145/1352793.1352837, 10.1145/1352793.1352837]
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lemeshow S., 2004, APPL LOGISTIC REGRES
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Letier E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P883, DOI 10.1145/2568225.2568239
   Marks Lionel, 2011, P 7 INT C PRED MOD S
   Menard S., 2002, APPL LOGISTIC REGRES, V106, DOI [10.4135/9781412983433, DOI 10.4135/9781412983433]
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Michael B, 2012, TECH REP
   Neumann DE, 2002, IEEE T SOFTWARE ENG, V28, P904, DOI 10.1109/TSE.2002.1033229
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Pika Anastasiia, 2013, Advanced Information Systems Engineering. 25th International Conference, CAiSE 2013. Proceedings: LNCS 7908, P465, DOI 10.1007/978-3-642-38709-8_30
   Porter AA, 1997, UNDERSTANDING EFFECT
   Qin X, 2014, P 8 INT AAAI C WEBL
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   Rahman MM, 2009, P 3 INT S EMP SOFTW, P39
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Srivastava N, 2014, J MACH LEARN RES, V15, P1929
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Thung F., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P205, DOI 10.1109/WCRE.2012.30
   Tian Y, 2015, EMPIR SOFTW ENG, V20, P1354, DOI 10.1007/s10664-014-9331-y
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Wallace L, 2004, COMMUN ACM, V47, P68, DOI 10.1145/975817.975819
   Wang LM, 2006, KNOWL-BASED SYST, V19, P511, DOI 10.1016/j.knosys.2005.10.013
   Wang Q, 2005, LECT NOTES COMPUT SC, V3498, P921
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Wolfson J, 2014, STAT MED, P21
   Xia X, 2015, INFORM SOFTWARE TECH, V61, P93, DOI 10.1016/j.infsof.2014.12.006
   Xia X, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P174, DOI 10.1109/CSMR-WCRE.2014.6747167
   Xu RZ, 2003, PROCEEDINGS OF THE 2003 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P499, DOI 10.1109/IRI.2003.1251457
   Zadrozny B., 2002, P 8 ACM SIGKDD INT C, P694, DOI [10.1145/775047.775151, DOI 10.1145/775047.775151]
   Zanoni M, 2014, J SOFTW-EVOL PROC, V26, P1172, DOI 10.1002/smr.1656
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
NR 77
TC 31
Z9 34
U1 0
U2 19
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2017
VL 22
IS 3
BP 1223
EP 1263
DI 10.1007/s10664-016-9496-7
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW4GE
UT WOS:000402459200010
DA 2024-07-18
ER

PT J
AU Thongtanunam, P
   McIntosh, S
   Hassan, AE
   Iida, H
AF Thongtanunam, Patanamon
   McIntosh, Shane
   Hassan, Ahmed E.
   Iida, Hajimu
TI Review participation in modern code review
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Code review; Review participation; Developer involvement
ID SOFTWARE CHANGES; PROGRAM
AB Software code review is a well-established software quality practice. Recently, Modern Code Review (MCR) has been widely adopted in both open source and proprietary projects. Our prior work shows that review participation plays an important role in MCR practices, since the amount of review participation shares a relationship with software quality. However, little is known about which factors influence review participation in the MCR process. Hence, in this study, we set out to investigate the characteristics of patches that: (1) do not attract reviewers, (2) are not discussed, and (3) receive slow initial feedback. Through a case study of 196,712 reviews spread across the Android, Qt, and OpenStack open source projects, we find that the amount of review participation in the past is a significant indicator of patches that will suffer from poor review participation. Moreover, we find that the description length of a patch shares a relationship with the likelihood of receiving poor reviewer participation or discussion, while the purpose of introducing new features can increase the likelihood of receiving slow initial feedback. Our findings suggest that the patches with these characteristics should be given more attention in order to increase review participation, which will likely lead to a more responsive review process.
C1 [Thongtanunam, Patanamon; Iida, Hajimu] Nara Inst Sci & Technol, Software Design & Anal Lab SDLAB, Nara, Japan.
   [McIntosh, Shane] McGill Univ, Dept Elect & Comp Engn, Montreal, PQ, Canada.
   [Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab, Kingston, ON, Canada.
C3 Nara Institute of Science & Technology; McGill University; Queens
   University - Canada
RP Thongtanunam, P (corresponding author), Nara Inst Sci & Technol, Software Design & Anal Lab SDLAB, Nara, Japan.
EM patanamon-t@is.naist.jp; shane.mcintosh@mcgill.ca; ahmed@cs.queensu.ca;
   iida@itc.naist.jp
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan, Ahmed/AAB-7241-2019; Ali,
   Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; 
FU JSPS [16J02861]; Grants-in-Aid for Scientific Research [16J02861]
   Funding Source: KAKEN
FX This research was supported by the Grant-in-Aid for JSPS Fellows
   (Numbers 16J02861).
CR Abelein U, 2015, EMPIR SOFTW ENG, V20, P28, DOI 10.1007/s10664-013-9278-4
   [Anonymous], PAC NW SOFTW QUAL C
   [Anonymous], INVESTIGATING TECHNI
   [Anonymous], EMPIRICAL STUDY IMPA
   [Anonymous], 2012, P ACM SIGSOFT 20 INT, DOI DOI 10.1145/2393596.2393656
   [Anonymous], 1990, The VARCLUS procedure
   [Anonymous], MANAGEMENT COMMUNITY
   [Anonymous], 2008, Proceedings of the 2008 international working conference on Mining software repositories
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Bavota G, 2015, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSM.2015.7332454
   Baysal O., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P447, DOI 10.1109/WCRE.2012.54
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Bird C., 2007, 4 INT WORKSHOP MININ, P26
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird Christian, 2006, INT C SOFTWARE ENG P, P137, DOI DOI 10.1145/1137983.1138016
   Bosu Amiangshu, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P133, DOI 10.1109/ESEM.2013.23
   Cramer H., 1999, Mathematical methods of statistics, P9
   EFRON B, 1986, J AM STAT ASSOC, V81, P461, DOI 10.2307/2289236
   Fagan ME, 1999, IBM SYST J, V38, P258, DOI 10.1147/sj.382.0258
   Fowler M., 2006, Continuous integration
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Hamasaki K, 2013, IEEE WORK CONF MIN S, P49, DOI 10.1109/MSR.2013.6624003
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Harrell F.E., 2002, Regression modeling strategies
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hassan AE, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P837
   Hinkle D.E., 1998, Applied Statistics for the Behavioral Sciences, V4th
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Mishra Rahul, 2014, 2014 IEEE 4th Workshop on Mining Unstructured Data (MUD), P11, DOI 10.1109/MUD.2014.11
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Morales R, 2015, P 22 INT C SOFTWARE
   Mukadam M, 2013, IEEE WORK CONF MIN S, P45, DOI 10.1109/MSR.2013.6624002
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nurolahzade M, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P9
   Porter A., 1998, ACM Transactions on Software Engineering and Methodology, V7, P41, DOI 10.1145/268411.268421
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Rea L.M., 2014, Designing and conducting survey research: A comprehensive guide
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2594458
   Rigby PC, 2012, IEEE SOFTWARE, V29, P56, DOI 10.1109/MS.2012.24
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Sauer C, 2000, IEEE T SOFTWARE ENG, V26, P1, DOI 10.1109/32.825763
   Shihab E, 2009, PROC IEEE INT CONF S, P147, DOI 10.1109/ICSM.2009.5306333
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Thongtanunam P, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P168, DOI 10.1109/MSR.2015.23
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Thongtanunam P, 2014, PROC IEEE INT CONF S, P605, DOI 10.1109/ICSME.2014.106
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   UKKONEN E, 1985, INFORM CONTROL, V64, P100, DOI 10.1016/S0019-9958(85)80046-2
   Zanjireh M.M., 2015, 2015 IEEE 81 VEHICUL, P1
NR 60
TC 66
Z9 69
U1 1
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2017
VL 22
IS 2
BP 768
EP 817
DI 10.1007/s10664-016-9452-6
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ES9PL
UT WOS:000399891400005
DA 2024-07-18
ER

PT J
AU Alégroth, E
   Feldt, R
   Ryrholm, L
AF Alegroth, Emil
   Feldt, Robert
   Ryrholm, Lisa
TI Visual GUI testing in practice: challenges, problemsand limitations
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Visual GUI Testing; Industrial case study; Challenges; Problems and
   Limitations; System and acceptance test automation; Development cost
AB In today's software development industry, high-level tests such as Graphical User Interface (GUI) based system and acceptance tests are mostly performed with manual practices that are often costly, tedious and error prone. Test automation has been proposed to solve these problems but most automation techniques approach testing from a lower level of system abstraction. Their suitability for high-level tests has therefore been questioned. High-level test automation techniques such as Record and Replay exist, but studies suggest that these techniques suffer from limitations, e.g. sensitivity to GUI layout or code changes, system implementation dependencies, etc. Visual GUI Testing (VGT) is an emerging technique in industrial practice with perceived higher flexibility and robustness to certain GUI changes than previous high-level (GUI) test automation techniques. The core of VGT is image recognition which is applied to analyze and interact with the bitmap layer of a system's front end. By coupling image recognition with test scripts, VGT tools can emulate end user behavior on almost any GUI-based system, regardless of implementation language, operating system or platform. However, VGT is not without its own challenges, problems and limitations (CPLs) but, like for many other automated test techniques, there is a lack of empirically-based knowledge of these CPLs and how they impact industrial applicability. Crucially, there is also a lack of information on the cost of applying this type of test automation in industry. This manuscript reports an empirical, multi-unit case study performed at two Swedish companies that develop safety-critical software. It studies their transition from manual system test cases into tests automated with VGT. In total, four different test suites that together include more than 300 high-level system test cases were automated for two multi-million lines of code systems. The results show that the transitioned test cases could find defects in the tested systems and that all applicable test cases could be automated. However, during these transition projects a number of hurdles had to be addressed; a total of 58 different CPLs were identified and then categorized into 26 types. We present these CPL types and an analysis of the implications for the transition to and use of VGT in industrial software development practice. In addition, four high-level solutions are presented that were identified during the study, which would address about half of the identified CPLs. Furthermore, collected metrics on cost and return on investment of the VGT transition are reported together with information about the VGT suites' defect finding ability. Nine of the identified defects are reported, 5 of which were unknown to testers with extensive experience from using the manual test suites. The main conclusion from this study is that even though there are many challenges related to the transition and usage of VGT, the technique is still valuable, flexible and considered cost-effective by the industrial practitioners. The presented CPLs also provide decision support in the use and advancement of VGT and potentially other automated testing techniques similar to VGT, e.g. Record and Replay.
C1 [Alegroth, Emil; Feldt, Robert; Ryrholm, Lisa] Chalmers Univ Technol, Dept Comp Sci & Engn, SE-41296 Gothenburg, Sweden.
   [Alegroth, Emil; Feldt, Robert; Ryrholm, Lisa] Univ Gothenburg, SE-41296 Gothenburg, Sweden.
   [Feldt, Robert] Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
C3 Chalmers University of Technology; University of Gothenburg; Blekinge
   Institute Technology
RP Alégroth, E (corresponding author), Chalmers Univ Technol, Dept Comp Sci & Engn, SE-41296 Gothenburg, Sweden.
EM emil.alegroth@chalmers.se
CR Adams A, 2012, SPORT EDUC SOC, V17, P347, DOI 10.1080/13573322.2011.608938
   Alégroth E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P439, DOI 10.1109/ICST.2013.61
   Alégroth E, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P56, DOI 10.1109/ICST.2013.14
   Andersson J, 2004, LECT NOTES COMPUT SC, V3092, P1
   [Anonymous], P XPUNIVERSE
   [Anonymous], 2012, ART SOFTWARE TESTING, DOI DOI 10.1002/9781119202486
   Beizer B., 2002, Software testing techniques
   Berner S, 2005, PROC INT CONF SOFTW, P571
   Borjesson E., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P350, DOI 10.1109/ICST.2012.115
   Borjesson E, 2010, MULTIPERSPECTIVE ANA
   Cadar C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1066, DOI 10.1145/1985793.1985995
   Chang TH, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1535
   Cheon Y., 2006, SIMPLE PRACTICAL APP, P1789
   Dustin E., 1999, AUTOMATED SOFTWARE T
   Ebert C, 2007, J SYST SOFTWARE, V80, P850, DOI 10.1016/j.jss.2006.09.017
   Finsterwalder M., 2001, Proc. of the 2nd Int. Conf. on Extreme Prog, P114
   froglogic, 2013, SQUISH
   Gamma E, 1999, JAVA REP, V4, P27
   Grechanik M, 2009, PROC IEEE INT CONF S, P9, DOI 10.1109/ICSM.2009.5306345
   Grechanik M, 2009, IEEE ICST WORKSHOP, P243, DOI 10.1109/ICSTW.2009.31
   Grechanik M, 2009, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2009.5070540
   GUTIERREZ JJ, 2006, 4 WORKSH SYST TEST V
   Hackner DR, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P959
   Holmes A, 2006, AGILE 2006, Proceedings, P270, DOI 10.1109/AGILE.2006.19
   Horowitz E, 1993, CCS93548 US
   HSIA P, 1994, P INT COMP SOFTW APP, P293, DOI 10.1109/CMPSAC.1994.342789
   Hsia P, 1997, ANN SOFTW ENG, V3, P291, DOI 10.1023/A:1018938021528
   Itkonen J, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P82, DOI 10.1109/ISESE.2005.1541817
   Leitner A., 2007, SYST SCI 2007 HICSS, p261a, DOI [10.1109/HICSS.2007.462, DOI 10.1109/HICSS.2007.462]
   Li K., 2004, Effective GUI testing automation: Developing an automated GUI testing tool
   Lowell C., 2003, EXTREME PROGRAMMING, V2675, P1011
   Memon A. M., 2003, Software Engineering Notes, V28, P118, DOI 10.1145/949952.940088
   Memon AM, 2002, COMPUTER, V35, P87, DOI 10.1109/MC.2002.1023795
   Memon Atif M., 2003, P 10 WORK C REV ENG
   Mongrédien C, 2006, I NAVIG SAT DIV INT, P2901
   Olan M., 2003, Journal of Computing Sciences in Colleges, V19, P319
   Onoma AK, 1998, COMMUN ACM, V41, P81, DOI 10.1145/274946.274960
   Rafi D. M., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P36, DOI 10.1109/IWAST.2012.6228988
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sjosten-Andersson E., 2006, SERPS06, P3
   smartbear, 2013, TESTCOMPLETE
   Vizulis V, 2012, BALT J MOD COMPUT, V787, P27
   Williams Laurie, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P81, DOI 10.1109/ISSRE.2009.32
   Yeh T., 2009, P 22 ANN ACM S US IN
   Zaraket F., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P747, DOI 10.1109/ICST.2012.168
   [No title captured]
NR 47
TC 22
Z9 24
U1 3
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2015
VL 20
IS 3
BP 694
EP 744
DI 10.1007/s10664-013-9293-5
PG 51
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CI1DF
UT WOS:000354480800004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Runeson, P
   Stefik, A
   Andrews, A
AF Runeson, Per
   Stefik, Andreas
   Andrews, Anneliese
TI Variation factors in the design and analysis of replicated controlled
   experiments Three (dis)similar studies on inspections versus unit
   testing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Formal experiments; Replication; Reproduction; Experiment design; Code
   inspection; Unit testing
ID SOFTWARE; KNOWLEDGE
AB In formal experiments on software engineering, the number of factors that may impact an outcome is very high. Some factors are controlled and change by design, while others are are either unforeseen or due to chance. This paper aims to explore how context factors change in a series of formal experiments and to identify implications for experimentation and replication practices to enable learning from experimentation. We analyze three experiments on code inspections and structural unit testing. The first two experiments use the same experimental design and instrumentation (replication), while the third, conducted by different researchers, replaces the programs and adapts defect detection methods accordingly (reproduction). Experimental procedures and location also differ between the experiments. Contrary to expectations, there are significant differences between the original experiment and the replication, as well as compared to the reproduction. Some of the differences are due to factors other than the ones designed to vary between experiments, indicating the sensitivity to context factors in software engineering experimentation. In aggregate, the analysis indicates that reducing the complexity of software engineering experiments should be considered by researchers who want to obtain reliable and repeatable empirical measures.
C1 [Runeson, Per] Lund Univ, Lund, Sweden.
   [Stefik, Andreas] Univ Nevada, Las Vegas, NV 89154 USA.
   [Andrews, Anneliese] Univ Denver, Dept Comp Sci, Denver, CO USA.
C3 Lund University; Nevada System of Higher Education (NSHE); University of
   Nevada Las Vegas; University of Denver
RP Runeson, P (corresponding author), Lund Univ, Lund, Sweden.
EM per.runeson@cs.lth.se; stefika@gmail.com; andrews@cs.du.edu
RI Runeson, Per/H-5113-2019
OI Runeson, Per/0000-0003-2795-4851
FU Division Of Computer and Network Systems; Direct For Computer & Info
   Scie & Enginr [0940555] Funding Source: National Science Foundation;
   Division Of Computer and Network Systems; Direct For Computer & Info
   Scie & Enginr [0940521] Funding Source: National Science Foundation
CR ANDERSON TW, 1952, ANN MATH STAT, V23, P193, DOI 10.1214/aoms/1177729437
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Berling T., 2003, IEE Proceedings-Software, V150, P177, DOI 10.1049/ip-sen:20030483
   CARTWRIGHT N, 1991, HIST POLIT ECON, V23, P143, DOI 10.1215/00182702-23-1-143
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   da Silva FQB, 2014, EMPIR SOFTW ENG, V19, P501, DOI 10.1007/s10664-012-9227-7
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   Gomez OS, 2010, P 4 INT S EMP SOFTW
   Hannay JE, 2008, IEEE T SOFTWARE ENG, V34, P242, DOI 10.1109/TSE.2008.13
   HOAGLIN DC, 1975, AM STAT, V29, P122, DOI 10.2307/2683438
   Humphrey W S, 1995, A discipline for software engineering
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Jorgensen M, 2012, IEEE T SOFTWARE ENG, V38, P677, DOI 10.1109/TSE.2011.40
   Jorgensen M, 2011, IEEE T SOFTWARE ENG, V37, P695, DOI 10.1109/TSE.2010.78
   Jorgensen M, 2009, IEEE T SOFTWARE ENG, V35, P368, DOI 10.1109/TSE.2009.2
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Juristo N., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P330, DOI 10.1109/ICST.2012.113
   Juristo N, 2006, IEEE SOFTWARE, V23, P72, DOI 10.1109/MS.2006.166
   Juristo N, 2012, LECT NOTES COMPUT SC, V7007, P60
   Juristo N, 2011, EMPIR SOFTW ENG, V16, P295, DOI 10.1007/s10664-010-9141-9
   Kitchenham B, 2004, ELEVENTH ANNUAL INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P65
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P219, DOI 10.1007/s10664-008-9061-0
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P97, DOI 10.1007/s10664-007-9053-5
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Laitenberger O, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P237, DOI 10.1109/ISSRE.1998.730887
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Mantyla MV, 2010, 1 INT WORKSH REPL EM
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Miller J, 2005, INFORM SOFTWARE TECH, V47, P233, DOI 10.1016/j.infsof.2004.08.005
   Montgomery DC., 2001, Design and Analysis of Experiments
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Runeson P, 2006, IEEE SOFTWARE, V23, P82, DOI 10.1109/MS.2006.89
   Runeson P, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ISSRE.2003.1251026
   Runeson P., 2011, Proceedings of the 2011 Second International Workshop on Replication in Empirical Software Engineering Research (RESER 2011), P35, DOI 10.1109/RESER.2011.13
   Schmidt S, 2009, REV GEN PSYCHOL, V13, P90, DOI 10.1037/a0015108
   Shull F, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P7, DOI 10.1109/ISESE.2002.1166920
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Siegel S., 1956, Nonparametric statistics for the behavioral sciences
   Sjoberg DIK, 2007, LECT NOTES COMPUT SC, V4336, P77
   So SS, 2002, SOFTW TEST VERIF REL, V12, P155, DOI 10.1002/stvr.248
   TEASLEY BE, 1994, J APPL PSYCHOL, V79, P142, DOI 10.1037/0021-9010.79.1.142
   Wohlin C., 2012, Experimentation in Software Engineering
   Yin R.K., 2014, Applications of case study research, V2nd
   [No title captured]
NR 47
TC 12
Z9 14
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2014
VL 19
IS 6
BP 1781
EP 1808
DI 10.1007/s10664-013-9262-z
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AR9QU
UT WOS:000343910700007
DA 2024-07-18
ER

PT J
AU Mittas, N
   Angelis, L
AF Mittas, Nikolaos
   Angelis, Lefteris
TI LSEbA: least squares regression and estimation by analogy in a
   semi-parametric model for software cost estimation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Estimation by analogy; Regression analysis; Semi-parametric model;
   Software cost estimation
ID PREDICTION
AB The importance of Software Cost Estimation at the early stages of the development life cycle is clearly portrayed by the utilization of several models and methods, appeared so far in the literature. The researchers' interest has been focused on two well known techniques, namely the parametric Regression Analysis and the non-parametric Estimation by Analogy. Despite the several comparison studies, there seems to be a discrepancy in choosing the best prediction technique between them. In this paper, we introduce a semi-parametric technique, called LSEbA that achieves to combine the aforementioned methods retaining the advantages of both approaches. Furthermore, the proposed method is consistent with the mixed nature of Software Cost Estimation data and takes advantage of the whole pure information of the dataset even if there is a large amount of missing values. The paper analytically illustrates the process of building such a model and presents the experimentation on three representative datasets verifying the benefits of the proposed model in terms of accuracy, bias and spread. Comparisons of LSEbA with linear regression, estimation by analogy and a combination of them, based on the average of their outcomes are made through accuracy metrics, statistical tests and a graphical tool, the Regression Error Characteristic curves.
C1 [Mittas, Nikolaos; Angelis, Lefteris] Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
C3 Aristotle University of Thessaloniki
RP Angelis, L (corresponding author), Aristotle Univ Thessaloniki, Dept Informat, Thessaloniki 54124, Greece.
EM nmittas@csd.auth.gr; lef@csd.auth.gr
RI Mittas, Nikolaos/AAL-6645-2021
OI Mittas, Nikolaos/0000-0003-3061-7864
CR Angelis L, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P4
   Anglin PM, 1996, J APPL ECONOMET, V11, P633, DOI 10.1002/(SICI)1099-1255(199611)11:6<633::AID-JAE414>3.0.CO;2-T
   [Anonymous], 2005, P INT S EMP SOFTW EN
   [Anonymous], P EASE
   [Anonymous], P 11 INT S SOFTW MET
   [Anonymous], 2000, CONTR STAT
   Bi J., 2003, P 20 INT C MACH LEAR, P43
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   Cartwright MH, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P154, DOI 10.1109/METRIC.2003.1232464
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Hardle W., 1990, EC SOC MONOGRAPHS
   *ISBSG, 2007, ISBSG DAT 10
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kaufman L., 2009, FINDING GROUPS DATA
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kitchenham B, 1998, IEEE T SOFTWARE ENG, V24, P278, DOI 10.1109/32.677185
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   KORTE M, 2008, P 4 ACM INT WORKSH P, P39
   Lokan Chris., 2006, 2006 ACMIEEE INT S E, P75, DOI DOI 10.1145/1159733.1159747
   MacDonell SG, 2003, J SYST SOFTWARE, V66, P91, DOI 10.1016/S0164-1212(02)00067-5
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Mendes E, 2008, EMPIR SOFTW ENG, V13, P3, DOI 10.1007/s10664-007-9045-5
   MITTAS N, 2008, P ACM IEEE 2 INT S E, P70
   Mittas N, 2008, J SYST SOFTWARE, V81, P616, DOI 10.1016/j.jss.2007.07.039
   Mittas N, 2008, INFORM SOFTWARE TECH, V50, P221, DOI 10.1016/j.infsof.2007.04.001
   Mittas N, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P433, DOI 10.1109/SEAA.2008.23
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Myrtveit I, 2001, IEEE T SOFTWARE ENG, V27, P999, DOI 10.1109/32.965340
   *NASA93, 2007, DAT
   Port D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P51
   ROBINSON PM, 1988, ECONOMETRICA, V56, P931, DOI 10.2307/1912705
   Sentas P, 2005, INFORM SOFTWARE TECH, V47, P17, DOI 10.1016/j.infsof.2004.05.001
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Sheskin David, 2011, Handbook of Parametric and Nonparametric Statistical Procedures
   Strike K, 2001, IEEE T SOFTWARE ENG, V27, P890, DOI 10.1109/32.962560
   Wissmann Malte, 2007, 008 U MUN DEP STAT
NR 36
TC 32
Z9 33
U1 1
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2010
VL 15
IS 5
BP 523
EP 555
DI 10.1007/s10664-010-9128-6
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 619WX
UT WOS:000279462100003
DA 2024-07-18
ER

PT J
AU Herrmann, A
   Paech, B
AF Herrmann, Andrea
   Paech, Barbara
TI Practical challenges of requirements prioritization based on risk
   estimation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements prioritization; Risk; Risk analysis; Risk estimation; Risk
   prediction
AB Requirements prioritization and risk estimation are known to be difficult. However, so far, risk-based requirements prioritization has not been investigated empirically and quantitatively. In two quantitative experiments, we explored practical challenges and needs of risk estimations in general and of our method MOQARE specifically. In the first experiment, ten students made individual estimations. In the second one, twenty-four students estimated risks in seven moderated groups. The students prioritized the same requirements with different methods (risk estimation and ranking). During the first experiment, we identified factors which influence the quality of the prioritization. In the second experiment, the results of the risk estimation could be improved by discussing risk estimations in a group of experts, gathering risk statistics, and defining requirements, risks and prioritization criteria more tangibly. This first quantitative study on risk-based requirements prioritization helps to understand the practical challenges of this task and thus can serve as a basis for further research on this topic.
C1 [Herrmann, Andrea; Paech, Barbara] Heidelberg Univ, Fac Math & Comp Sci, Software Engn Grp, D-69120 Heidelberg, Germany.
C3 Ruprecht Karls University Heidelberg
RP Herrmann, A (corresponding author), Heidelberg Univ, Fac Math & Comp Sci, Software Engn Grp, D-69120 Heidelberg, Germany.
EM herrmann@informatik.uni-heidelberg.de;
   paech@informatik.uni-heidelberg.de
RI Paech, Barbara/AAI-5997-2020
CR Ambler Scott, 2002, Agile modeling: effective practices for extreme programming and the unified process
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 1999, SOFTWARE DEV
   ARORA A, 2004, OUNCE PREVENTION VS
   Beck K., 2000, EXTREME PROGRAMMING
   BERANDER P, 2004, LICENTIATE SERIES BL
   Berander P, 2006, INT J SOFTW ENG KNOW, V16, P819, DOI 10.1142/S0218194006003026
   Carver J, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P72, DOI 10.1109/ISESE.2003.1237966
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   DANEVA M, 2008, TRACK SOFTW PROC PRO
   Davis AM, 2003, COMPUTER, V36, P42, DOI 10.1109/MC.2003.1185216
   Denne M., 2003, Software by Numbers: Low-Risk, High-Return Development
   Devnani-Chulani S., 1999, THESIS U SO CALIFORN
   Dutoit A. H., 2002, Requirements Engineering, V7, P3, DOI 10.1007/s007660200001
   Dutoit AH, 2003, MANAGING SOFTWARE ENGINEERING KNOWLEDGE, P135
   Feather M. S., 2003, Requirements Engineering, V8, P248, DOI 10.1007/s00766-002-0160-y
   Feather Martin, 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, P79
   Feather MS, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P309, DOI 10.1109/ASE.2000.873685
   Feather MS, 2000, 4TH INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P119, DOI 10.1109/ICRE.2000.855598
   FEATHER MS, 2006, P INT WORKSH REQ ENG
   HERRMANN A, 2008, SWEHDTR200803 U HEID
   HERRMANN A, 2006, P 12 INT WORKSH REQ, V11, P249
   HERRMANN A, 2006, P IS TSPQ 1 INT WORK
   HERRMANN A, 2005, P 11 INT WORKSH REQ, V10, P193
   Herrmann A, 2008, REQUIR ENG, V13, P73, DOI 10.1007/s00766-007-0058-9
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   *ISO, 2002, 73 ISO
   Karlsson J, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P110, DOI 10.1109/ICRE.1996.491435
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   KARLSSON L, 2004, LICENTIATE SERIES BL
   Karlsson L, 2007, EMPIR SOFTW ENG, V12, P3, DOI 10.1007/s10664-006-7240-4
   KONTIO J, 1996, CSTR3782 U MAR
   LEFFINGWELL D, 2000, MANAGING SOFTWARE RE
   MAYER N, 2005, P INT WORKSH REQ ENG, P89
   MENZIES M, 2003, 2 INT WORKSH SOFTW E
   Ngo-The A., 2005, Engineering and Managing Software Requirements
   PAPADACCI E, 2004, P 10 WORKSH REQ ENG
   PARK J, 1999, P INT 3 WORLD MULT S, V2, P578
   Raiffa H., 2002, NEGOTIATION ANAL SCI
   Regnell B., 2001, Requirements Engineering, V6, P51, DOI 10.1007/s007660170015
   REMUS W, 1989, P 22 ANN HAW INT C S, V3, P176
   RICHARDSON R, 2003, 2003 CSI FBI COMPUTE
   Robson C., 2002, Real world research
   Ruhe G, 2003, INT J SOFTW ENG KNOW, V13, P345, DOI 10.1142/S0218194003001378
   Ryan K, 1997, PROC INT CONF SOFTW, P564, DOI 10.1145/253228.253453
   Saaty T., 1980, The Analytic Hierarchy Process: Planning, Priority Setting, Resource Allocation
   Sindre G, 2000, 37TH INTERNATIONAL CONFERENCE ON TECHNOLOGY OF OBJECT-ORIENTED LANGUAGES AND SYSTEMS, PROCEEDINGS, P120, DOI 10.1109/TOOLS.2000.891363
   SINDRE G, 2001, P 7 INT WORKSH REQ E, V6, P125
   Stamatis DH., 2003, FAILURE MODE EFFECT
   Stylianou AC, 1997, DATA BASE ADV INF SY, V28, P59
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   VANDENAKKER M, 2004, UUCS2004063
   VANDENAKKER M, 2006, UUCS200663
   WOLF T, 2004, P 13 INT C INT AD SY
   XIE N, 2004, CMUSEI2004TN045
NR 57
TC 13
Z9 16
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2009
VL 14
IS 6
BP 644
EP 684
DI 10.1007/s10664-009-9105-0
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 495IG
UT WOS:000269883800002
DA 2024-07-18
ER

PT J
AU Lawrie, D
   Feild, H
   Binkley, D
AF Lawrie, Dawn
   Feild, Henry
   Binkley, David
TI Quantifying identifier quality: an analysis of trends
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software quality characterizations; program analysis; source code
AB Identifiers, which represent the defined concepts in a program, account for, by some measures, almost three quarters of source code. The makeup of identifiers plays a key role in how well they communicate these defined concepts. An empirical study of identifier quality based on almost 50 million lines of code, covering thirty years, four programming languages, and both open and proprietary source is presented. For the purposes of the study, identifier quality is conservatively defined as the possibility of constructing the identifier out of dictionary words or known abbreviations. Four hypotheses related to identifier quality are considered using linear mixed effect regression models. For example, the first hypothesis is that modern programs include higher quality identifiers than older ones. In this case, the results show that better programming practices are producing higher quality identifies. Results also confirm some commonly held beliefs, such as proprietary code having more acronyms than open source code.
C1 Loyola Coll, Baltimore, MD 21210 USA.
C3 Loyola University Maryland
RP Lawrie, D (corresponding author), Loyola Coll, Baltimore, MD 21210 USA.
EM lawrie@cs.loyola.edu; hfeild@cs.loyola.edu; binkley@cs.loyola.edu
OI Lawrie, Dawn/0000-0001-7347-7086
CR Anquetil N, 1998, PROC INT CONF SOFTW, P84, DOI 10.1109/ICSE.1998.671105
   ANQUETIL N, 1998, P 1998 C CTR ADV STU
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Caprile B, 2000, PROC IEEE INT CONF S, P97, DOI 10.1109/ICSM.2000.883022
   CAPRILE B, 1999, WORK C REV ENG ALT G
   DEIBENBOCK F, 2005, P 13 INT WORKSH PROG
   JONES D, 2004, C VU, V16, P15
   KAWAGUCHI S, 2003, P INT WORKSH PRINC S
   Knuth D., 2003, CSLI LECT NOTES, V139
   LAWRIE D, 2003, THESIS U MASSACHUSET
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   LEON M, 2001, P 8 WORK C REV ENG O, P13
   MAAREK YS, 1991, IEEE T SOFTWARE ENG, V17, P800, DOI 10.1109/32.83915
   MARCUS A, 2001, P AUT SOFTW ENG SAN
   MARCUS A, 2004, IEEE WORK C REV ENG
   McMahon J, 1998, ARTIF INTELL REV, V12, P347, DOI 10.1023/A:1006517723917
   Morrell CH, 1997, AM STAT, V51, P338, DOI 10.2307/2685902
   Ratiu D, 2006, INT C PROGRAM COMPRE, P79, DOI 10.1109/ICPC.2006.41
   RILLING J, 2003, P 11 IEEE INT WORKSH
   SJOBERG D, 1993, IEEE T SOFTW ENG, V19
   Sneed HM, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P169, DOI 10.1109/WCRE.1996.558901
   Takang AA, 1996, J PROGRAM LANG, V4, P143
   Thomas T. M.CoverandJ. A., 1991, ELEMENTS INFORM THEO, DOI 10.1002/0471200611
   Verbeke G., 2001, Linear Mixed Models for Longitudinal Data
   WHEELER DA, 2005, SLOC COUNT U
NR 25
TC 38
Z9 44
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2007
VL 12
IS 4
BP 359
EP 388
DI 10.1007/s10664-006-9032-2
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 190JV
UT WOS:000248056000003
DA 2024-07-18
ER

PT J
AU Melton, H
   Tempero, E
AF Melton, Hayden
   Tempero, Ewan
TI An empirical study of cycles among classes in Java
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE dependency cycles; Java; software corpus; program analysis;
   object-oriented design
ID TEST ORDER; SOFTWARE; SYSTEMS
AB Advocates of the design principle avoid cyclic dependencies among modules have argued that cycles are detrimental to software quality attributes such as understandability, testability, reusability, buildability and maintainability, yet folklore suggests such cycles are common in real object-oriented systems. In this paper we present the first significant empirical study of cycles among the classes of 78 open- and closed-source Java applications. We find that, of the applications comprising enough classes to support such a cycle, about 45% have a cycle involving at least 100 classes and around 10% have a cycle involving at least 1,000 classes. We present further empirical evidence to support the contention these cycles are not due to intrinsic interdependencies between particular classes in a domain. Finally, we attempt to gauge the strength of connection among the classes in a cycle using the concept of a minimum edge feedback set.
C1 Univ Auckland, Dept Comp Sci, Auckland 1, New Zealand.
C3 University of Auckland
RP Melton, H (corresponding author), Univ Auckland, Dept Comp Sci, Auckland 1, New Zealand.
EM hayden@cs.auckland.ac.nz; ewan@cs.auckland.ac.nz
RI Tempero, Ewan/D-2621-2009
OI Tempero, Ewan/0000-0002-3786-1707
CR [Anonymous], 1991, OBJECT ORIENTED DESI
   [Anonymous], 2003, Handbook of Graph Theory
   [Anonymous], METRICS LAWS SOFTWAR
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   Booch G., 1995, Object solutions: managing the object-oriented project
   Briand LC, 2003, IEEE T SOFTWARE ENG, V29, P594, DOI 10.1109/TSE.2003.1214324
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   CHIDAMBER SR, 1991, OOPSLA 91 CONFERENCE PROCEEDINGS : OBJECT-ORIENTED PROGRAMMING SYSTEMS, LANGUAGES, AND APPLICATIONS, P197, DOI 10.1145/118014.117970
   DIJKSTRA EW, 1968, COMMUN ACM, V11, P341, DOI 10.1145/363095.363143
   EADES P, 1993, INFORM PROCESS LETT, V47, P319, DOI 10.1016/0020-0190(93)90079-O
   Foote B., 2000, Pattern Languages of Program Design, V4
   Fowler M, 2001, IEEE SOFTWARE, V18, P102, DOI 10.1109/MS.2001.936226
   GIL JY, 2005, P 20 ANN ACM SIGPLAN, P97
   GOSLING J, 2000, JAVA SERIES
   GROTHOFF C, 2001, OOPSLA 01, P241
   Hashim NL, 2005, QSIC 2005: FIFTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, PROCEEDINGS, P11
   Hautus E., 2002, 6 IASTED INT C SOFTW
   Jungmayr S, 2002, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSM.2002.1167797
   KUNG D, 1995, COMMUN ACM, V38, P75, DOI 10.1145/226239.226256
   KUNG D, 1993, P WORK C REV ENG MAY, P202
   KUNG DC, 1995, J OBJECT-ORIENT PROG, V8, P51
   Lakos J., 1996, LARGE SCALE C SOFTWA
   LINDHOLM T, 1990, JAVA VIRTUAL MACH SP
   MartinReviejo M, 1996, NATO ASI 2, V8, P57
   Melton H., 2006, P ACM 29 AUSTR COMP, P35
   MELTON H, 2006, OOPSLA 06 COMP 21 AC, P770
   Meyer Bertrand., 1995, Object Success. A Manager's Guide to Object Orientation
   Parnas D.L., 1972, COMMUN ACM, V15, P12
   Parnas DL, 1996, COMPUTER, V29, P57, DOI 10.1109/2.485847
   PARNAS DL, 1978, ICSE 78 P 3 INT C SO, P264, DOI DOI 10.1109/TSE.1979.234169
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Skiena S. S, 1998, The Algorithm Design Manual
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   Szyperski C., 2002, Component Software: Beyond Object-Oriented Programming
   WINTER M, 1998, 6 EUROSTAT C
   WIRTH N, 1995, COMPUTER, V28, P64, DOI 10.1109/2.348001
NR 36
TC 54
Z9 56
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2007
VL 12
IS 4
BP 389
EP 415
DI 10.1007/s10664-006-9033-1
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 190JV
UT WOS:000248056000004
DA 2024-07-18
ER

PT J
AU Verelst, J
AF Verelst, J
TI The influence of the level of abstraction on the evolvability of
   conceptual models of information systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE conceptual modelling; evolvability; maintainability; abstraction
ID DATABASE DESIGN; SOFTWARE; QUALITY; MAINTAINABILITY; PATTERNS
AB In today's dynamic environments, evolvability of information systems is an increasingly important characteristic. We investigate evolvability at the analysis level, i.e. at the level of the conceptual models that are built of information systems (e.g. UML models). More specifically, we focus on the influence of the level of abstraction of the conceptual model on the evolvability of the model. Abstraction or genericity is a fundamental principle in several research areas such as reuse, patterns, software architectures and application frameworks. The literature contains numerous but vague claims that software based on abstract conceptual models has evolvability advantages. Hypotheses were tested with regard to whether the level of abstraction influences the time needed to apply a change, the correctness of the change and the structure degradation incurred. Two controlled experiments were conducted with 136 subjects. Correctness and structure degradation were rated by human experts. Results indicate that, for some types of change, abstract models are better evolvable than concrete ones. Our results provide insight into how the rather vague claims in literature should be interpreted.
C1 Univ Antwerp, Dept Management Informat Syst, B-2020 Antwerp, Belgium.
C3 University of Antwerp
RP Verelst, J (corresponding author), Univ Antwerp, Dept Management Informat Syst, B-2020 Antwerp, Belgium.
EM jan.verelst@ua.ac.be
CR ABBATTISTA F, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P253, DOI 10.1109/ICSM.1994.336769
   ADELSON B, 1985, IEEE T SOFTWARE ENG, V11, P1351, DOI 10.1109/TSE.1985.231883
   [Anonymous], CASE METHOD ENTITY R
   [Anonymous], ANN SOFTWARE ENG
   [Anonymous], EMPIR SOFTW ENG
   [Anonymous], INT J HUMAN COMPUTER
   [Anonymous], 1992, Conceptual Database Design-An entity-relationship Approach
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   Assenova P., 1996, Conceptual Modeling - ER'96. 15th International Conference on Conceptual Modeling Proceedings, P277, DOI 10.1007/BFb0019929
   BATRA D, 1992, INT J MAN MACH STUD, V37, P83, DOI 10.1016/0020-7373(92)90092-Y
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   Cline MP, 1996, COMMUN ACM, V39, P47, DOI 10.1145/236156.236167
   Codenie W, 1997, COMMUN ACM, V40, P71
   COSTELLO RJ, 1995, J SYST SOFTWARE, V29, P39, DOI 10.1016/0164-1212(94)00127-9
   Cronbach LJ, 1951, PSYCHOMETRIKA, V16, P297
   Daly J., 1996, Empirical Software Engineering, V1, P109, DOI 10.1007/BF00368701
   Davis A., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P141, DOI 10.1109/METRIC.1993.263792
   Dikel D, 1997, COMPUTER, V30, P49, DOI 10.1109/2.607064
   ECKLUND EF, 1996, P OOPSLA 96, P342
   Fayad ME, 1997, COMMUN ACM, V40, P32, DOI 10.1145/262793.262798
   GARLAN D, 1995, IEEE T SOFTWARE ENG, V21, P269
   Genero M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P207
   GENERO M, 2003, 2003199 U GHENT
   GUINDON R, 1990, INT J MAN MACH STUD, V33, P279, DOI 10.1016/S0020-7373(05)80120-8
   HARRISON W, 1996, P 1 INT WORKSH EMP S, P145
   HAY DC, 1995, DATA MODEL PATTERNS
   HELM R, 1995, P C OBJ OR PROGR SYS, P337
   HIRSCHHEIM R, 1995, INFORMATION SYSTEMS
   *IEEE, 1994, 610121990 IEEE
   Jeffries R., 1981, Cognitive Skills and Their Acquisition, P255
   JOHNSON PE, 1987, INT J MAN MACH STUD, V26, P161, DOI 10.1016/S0020-7373(87)80089-5
   Kesh S, 1995, INFORM SOFTWARE TECH, V37, P681, DOI 10.1016/0950-5849(96)81745-9
   LARSEN TJ, 1992, INFORM MANAGE, V22, P29, DOI 10.1016/0378-7206(92)90004-Y
   LEVITIN A, 1995, INFORM PROCESS MANAG, V31, P81, DOI 10.1016/0306-4573(94)00030-7
   Lientz PB, 1980, SOFTWARE MAINTENANCE
   LIU L, 1995, P INT C ENT REL APPR, P21
   Marche S, 1993, EUR J INFORM SYST, V2, P37, DOI 10.1057/ejis.1993.5
   MARCHE S, 1991, THESIS LONDON SCH EC
   MILI H, 1995, IEEE T SOFTWARE ENG, V21, P528, DOI 10.1109/32.391379
   MOODY DL, 1994, P 13 INT C ENT REL A, P94
   PARNAS DL, 1979, IEEE T SOFTWARE ENG, V5, P128, DOI 10.1109/TSE.1979.234169
   Parsons J, 1997, COMMUN ACM, V40, P63, DOI 10.1145/255656.255700
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P1134, DOI 10.1109/32.988711
   Prieto-Diaz R., 1990, SIGSOFT Software Engineering Notes, V15, P47, DOI 10.1145/382296.382703
   RETTIG M, 1993, COMMUN ACM, V36, P19, DOI 10.1145/163381.163413
   ROLLAND C, 1992, CONCEPTUAL MODELLING
   ROMAN GC, 1985, COMPUTER, V18, P14
   Rosson M. B., 1990, Human-Computer Interaction, V5, P345, DOI 10.1207/s15327051hci0504_1
   ROWE D, 1998, P 11 INT C ENG COMP
   Schmid HA, 1997, COMMUN ACM, V40, P48, DOI 10.1145/262793.262803
   Shanks G., 1997, Australian Journal of Information Systems, V4, P63
   Shaw M., 1996, SOFTWARE ARCHITECTUR
   Simsion G., 1994, DATA MODELING ESSENT
   STOREY VC, 1995, DATA KNOWL ENG, V16, P97, DOI 10.1016/0169-023X(95)00012-H
   Takang A.A., 1996, Software maintenance: concepts and practice
   Tracz W., 1995, SIGSOFT Software Engineering Notes, V20, P49, DOI 10.1145/219308.219318
   van der Sanden W., 1997, Informatie, V39, P40
   VELDWIJK RJ, 1994, INFORM SCIENCES, V81, P103, DOI 10.1016/0020-0255(94)90092-2
   Vessey I., 1993, Journal of Management Information Systems, V10, P177
   WAND Y, 1995, DECIS SUPPORT SYST, V15, P285, DOI 10.1016/0167-9236(94)00043-6
   Wand Y, 2002, INFORM SYST RES, V13, P363, DOI 10.1287/isre.13.4.363.69
   YEH RT, 1990, MODERN SOFTWARE ENG, P7
NR 62
TC 4
Z9 4
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2005
VL 10
IS 4
BP 467
EP 494
DI 10.1007/s10664-005-3863-0
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 969PQ
UT WOS:000232247100003
DA 2024-07-18
ER

PT J
AU Müller, MM
AF Müller, MM
TI Are reviews an alternative to pair programming?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT Joint Conference of the
   Evaluation-and-Assessment-in-Software-Engineering
   (EASE)/Psychology-of-Programming-Interest-Group (PPIG)
CY APR, 2003
CL Keele Univ, Keele, ENGLAND
SP Evaluat & Assessment Software Engn, Psychol Programming Interest Grp
HO Keele Univ
DE controlled experiment; reviews; pair programming; software process
   improvement
AB From the first presentation of extreme programming on, pair programming has attracted a wide range of programmers to work together in front of one display. The proposed advantages of pair programming are it Faster development cycle and code with higher quality. However, the nearly doubled personnel cost when compared to single developers seems to outweigh these advantages. Instead of showing the superiority of pair programming, we seek an alternative. Can it single developer be assisted by an already known technique with which he produces the quality of pairs with only a fraction of the cost? The answer with some restrictions is: yes, he can. Reviews are a reasonable candidate with respect to code quality and cost.
C1 Univ Karlsruhe, Fak Informat, D-76128 Karlsruhe, Germany.
C3 Helmholtz Association; Karlsruhe Institute of Technology
RP Univ Karlsruhe, Fak Informat, Am Fasanengarten 5, D-76128 Karlsruhe, Germany.
EM muellerm@ipd.uka.de
RI Müller, Matthias M/A-1055-2017
CR Cockburn Alistair., 2000, EXTREME PROGRAMMING
   Cohen J., 1988, STAT POWER ANAL BEHA
   Gilb Tom, 1993, Software inspections
   Humphrey W S, 1995, A discipline for software engineering
   Ihaka R., 1996, J COMPUTATIONAL GRAP, V5, P299, DOI [DOI 10.1080/10618600.1996.10474713, 10.2307/1390807, DOI 10.2307/1390807]
   MCDOWELL C, 2002, SIGCSE TECHN S COMP, P38
   MULLER M, 2002, INT WORKSH EC DRIV S
   Nawrocki J., 2001, European Software Control and Metrics
   Nosek JT, 1998, COMMUN ACM, V41, P105, DOI 10.1145/272287.272333
   Williams L, 2000, IEEE SOFTWARE, V17, P19, DOI 10.1109/52.854064
   WILLIAMS L, 2000, C SOFTW ENG ED TRAIN, P59
NR 11
TC 26
Z9 29
U1 2
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2004
VL 9
IS 4
BP 335
EP 351
DI 10.1023/B:EMSE.0000039883.47173.39
PG 17
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 863NR
UT WOS:000224569200005
DA 2024-07-18
ER

PT J
AU Chen, K
   Schach, SR
   Yu, LG
   Offutt, J
   Heller, GZ
AF Chen, K
   Schach, SR
   Yu, LG
   Offutt, J
   Heller, GZ
TI Open-source change logs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE open-source software; change log; GNUJSP; GCC-g plus; jikes
AB A recent editorial in Empirical Software Engineering Suggested that open-source software projects offer a great deal of data that can be used for experimentation. These data not only include Source code, but also artifacts such as defect reports and update logs. A common type of update log that experimenters may wish to investigate is the changeLog, which lists changes and the reasons for which they were made. ChangeLog files are created to support the development of software rather than for the needs of researchers, so questions need to be asked about the limitations of using them to support research. This paper presents evidence that the ChangeLog files provided at three open-source web sites were incomplete. We examined at least three ChangeLog files for each of three different open-source software products.. namely, GNUJSP, GCC-g++, and Jikes. We developed a method for counting changes that ensures that, as far as possible, each individual ChangeLog entry is treated as a single change. For each ChangeLog file, we compared the actual changes in the source code to the entries in the changeLog file and discovered significant omissions. For example, using our change-counting method, only 35 of the 93 changes in version 1.11 of Jikes appear in the ChangeLog file-that is, over 62% of the changes were not recorded there. The percentage of emissions we found ranged from 3.7 to 78.6%. These are significant omissions that should be taken into account when using ChangeLog files for research. Before using ChangeLog files as a basis for research into the development and maintenance of open-source software, experimenters should carefully check for emissions and inaccuracies.
C1 Vanderbilt Univ, Dept Elect Engn & Comp Sci, Nashville, TN 37235 USA.
   George Mason Univ, Dept Informat & Software Engn, Fairfax, VA 22030 USA.
   Macquarie Univ, Dept Stat, Sydney, NSW 2109, Australia.
C3 Vanderbilt University; George Mason University; Macquarie University
RP Vanderbilt Univ, Dept Elect Engn & Comp Sci, Nashville, TN 37235 USA.
EM kai.chen@vanderbilt.edu; srs@vuse.vanderbilt.edu;
   liguo.yu@vanderbilt.edu; ofut@ise.gmu.edu; gheller@efs.mq.edu.au
OI Heller, Gillian/0000-0003-1270-1499
CR COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   ELEMAM K, 1998, ISERN9802
   *FSF, 2002, GNU COD STAND TABL C
   *GNUJSP, 2002, FREE JAV SERV PAG IM
   HARRISON W, 2001, EMPIR SOFTW ENG, V6, P193
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Schach StephenR., 2002, Object-oriented and classical software engineering
   2002, INFOWORLD       0326
NR 9
TC 18
Z9 24
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2004
VL 9
IS 3
BP 197
EP 210
DI 10.1023/B:EMSE.0000027779.70556.d0
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 836LM
UT WOS:000222557200002
DA 2024-07-18
ER

PT J
AU Juristo, N
   Moreno, AM
   Vegas, S
AF Juristo, N
   Moreno, AM
   Vegas, S
TI Reviewing 25 years of testing technique experiments
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE testing; testing techniques; empirical body of knowledge
ID MUTATION
AB Mature knowledge allows engineering disciplines the achievement of predictable results. Unfortunately, the type of knowledge used in software engineering can be considered to be of a relatively low maturity, and developers are guided by intuition, fashion or market-speak rather than by facts or undisputed statements proper to an engineering discipline. Testing techniques determine different criteria for selecting the test cases that will be used as input to the system under examination, which means that an effective and efficient selection of test cases conditions the success of the tests. The knowledge for selecting testing techniques should come from studies that empirically justify the benefits and application conditions of the different techniques. This paper analyzes the maturity level of the knowledge about testing techniques by examining existing empirical studies about these techniques. We have analyzed their results, and obtained a testing technique knowledge classification based on their factuality and objectivity, according to four parameters.
C1 Univ Politecn Madrid, Fac Informat, Madrid 28660, Spain.
C3 Universidad Politecnica de Madrid
RP Univ Politecn Madrid, Fac Informat, Campus Montegancedo S-N, Madrid 28660, Spain.
EM natalia@fi.upm.es
RI Moreno, Ana M./AAC-1166-2020
OI Moreno, Ana M./0000-0001-8397-6794
CR [Anonymous], 1993, Software Requirements-objects, Functions and States
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   BASILI VR, 1985, TR1501 U MARYLAND
   BEIZER R, 1990, SOFTWARE TESTING TEC
   BIBLE J, 1999, 996005 OR STAT U
   BIEMAN JM, 1992, SOFTWARE ENG J, V7, P43, DOI 10.1049/sej.1992.0005
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Frankl P., 1991, 4 S TESTING ANAL VER, P154
   Frankl PG, 1997, J SYST SOFTWARE, V38, P235, DOI 10.1016/S0164-1212(96)00154-9
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P774, DOI 10.1109/32.238581
   FRANKL PG, 1998, P 6 ACM SIGSOFT INT, P153
   FRANKL PG, 1991, CS9103
   Graves TL, 1998, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.1998.671115
   HAMLET R, 1989, ACM SIGSOFT, V14, P28, DOI 10.1145/75309.75313
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   KAMSTIES E, 1995, P 5 EUR SOFTW ENG C
   KIM JM, 2000, P 22 INT C SOFTW ENG, P126
   MYERS GJ, 1978, COMMUN ACM, V21, P760, DOI 10.1145/359588.359602
   Myers Glenford J., 2011, The Art of Software Testing
   Offutt A., 1991, Proceedings of the symposium on Testing, analysis, and verification, P200
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   OFFUTT AJ, 1994, IEEE T SOFTWARE ENG, V20, P337, DOI 10.1109/32.286422
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Rothermel G, 1998, IEEE T SOFTWARE ENG, V24, P401, DOI 10.1109/32.689399
   Selby R.W., 1984, P 9 ANN SOFTWARE ENG, P42
   Vokolos El., 1998, P INT C SOFTW MAINT
   Weyuker E. J., 1988, Proceedings of the Second Workshop on Software Testing, Verification, and Analysis (Cat. No.88TH0225-3), P188, DOI 10.1109/WST.1988.5374
   WEYUKER EJ, 1990, IEEE T SOFTWARE ENG, V16, P121, DOI 10.1109/32.44376
   WONG WE, 1995, SOFTWARE QUAL J, V4, P69, DOI 10.1007/BF00404650
   Wong WE, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P273, DOI 10.1109/ISSRE.1998.730891
   Wood M., 1997, P 6 EUR SOFTW ENG C
NR 32
TC 105
Z9 115
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2004
VL 9
IS 1-2
BP 7
EP 44
DI 10.1023/B:EMSE.0000013513.48963.1b
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 805NU
UT WOS:000220373800001
DA 2024-07-18
ER

PT J
AU Shull, F
   Mendonça, MG
   Basili, V
   Carver, J
   Maldonado, JC
   Fabbri, S
   Travassos, GH
   Ferreira, MC
AF Shull, F
   Mendonça, MG
   Basili, V
   Carver, J
   Maldonado, JC
   Fabbri, S
   Travassos, GH
   Ferreira, MC
TI Knowledge-sharing issues in experimental software engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE empirical software engineering; experimental design; experimental
   replication; software reading techniques
AB Recently the awareness of the importance of replicating studies has been growing in the empirical software engineering community. The results of any one study cannot simply be extrapolated to all environments because there are many uncontrollable sources of variation between different environments.
   In our work, we have reasoned that the availability of laboratory packages for experiments can encourage better replications and complementary studies. However, even with effectively specified laboratory packages, transfer of experimental know-how can still be difficult. In this paper, we discuss the collaboration structures we have been using in the Readers' Project, a bilateral project supported by the Brazilian and American national science agencies that is investigating replications and transfer of experimental know-how issues. In particular, we discuss how these structures map to the Nonaka-Takeuchi knowledge sharing model, a well-known paradigm used in the knowledge management literature. We describe an instantiation of the Nonaka-Takeuchi Model for software engineering experimentation, establishing a framework for discussing knowledge sharing issues related to experimental software engineering. We use two replications to illustrate some of the knowledge sharing issues we have faced and discuss the mechanisms we are using to tackle those issues in Readers' Project.
C1 Fraunhofer Ctr Expt Software Engn, College Pk, MD 20740 USA.
   Salvador Univ UNIFACS, Comp Networks Res Grp NUPERC, BR-41950275 Salvador, BA, Brazil.
   Univ Maryland, Dept Comp Sci, Fraunhofer Ctr Expt Software Engn, College Pk, MD 20742 USA.
   Inst Ciencias Matemat Computacao, Dept Ciencias Computacao & Estat, BR-13560970 Sao Carlos, SP, Brazil.
C3 Universidade Salvador (UNIFACS); University System of Maryland;
   University of Maryland College Park
RP Fraunhofer Ctr Expt Software Engn, 4321 Hartwick Rd,Suite 500, College Pk, MD 20740 USA.
EM fshull@fc-md.umd.edu; mgmn@unifacs.br; basili@fc-md.umd.edu;
   carver@cs.umd.edu; jcmaldon@icmc.sc.usp.br; sfabbri@dc.ufscar.br;
   ght@cos.ufrj.br; cristina@icmc.usp.br
RI Oliveira, Maria/ISB-2741-2023; Mendonca, Manoel/A-1579-2011; Shull,
   Forrest/GZK-6750-2022; Ferreira de Oliveira, Maria Cristina/D-9257-2011;
   Maldonado, José Carlos/E-9290-2011; Travassos, Guilherme
   Horta/G-2842-2012
OI Mendonca, Manoel/0000-0002-0874-7665; Ferreira de Oliveira, Maria
   Cristina/0000-0002-4729-5104; Travassos, Guilherme
   Horta/0000-0002-4258-0424
CR Agresti WW, 2000, ADV COMPUT, V53, P171
   AMARAL EAG, 2003, P 2003 ACM IEE INT S
   [Anonymous], 1996, ISERN9610 U STRATHCL
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BASILI VR, 2000, P 13 INT C SOFTW ENG, P102
   BASILI VR, 2001, CEBASE WORKSH PROFES, P110
   CARVER J, 2003, CSTR4476
   CIOLKOWSKI C, 1997, ISERN9713
   CONRADI R, 2001, CSTR4235
   DIXON NM, 2000, COMMON KNOWLEDGE OCM
   Goth G, 2001, IEEE SOFTWARE, V18, P99, DOI 10.1109/MS.2001.922735
   JOHNSON P, 1996, CSDL9313 BRIE
   Laitenberger O, 2001, IEEE T SOFTWARE ENG, V27, P387, DOI 10.1109/32.922713
   LINDVALL M, 2002, P 4 INT WORKSH LEARN
   Lott C. M., 1996, Empirical Software Engineering, V1, P241, DOI 10.1007/BF00127447
   MENDONCA MG, 1999, STAT ART REPORT MINI
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   NETO MGM, 2001, 13 INT C SOFTW ENG K, P29
   Nonaka I, 1995, KNOWLEDGE CREATING C
   Rus I., 2001, Knowledge Management in Software Engineering A State-of-the-Art-Report, Data
   Shull F, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P7, DOI 10.1109/ISESE.2002.1166920
   SHULL F, 2001, P JOINT 8 EUR SOFTW, P288
   WHOLIN C, 2000, EXPT SOFTWENG INTRO
   Wiig KM., 1999, 19994 KRI
   2003, HYPERWAVE
NR 26
TC 55
Z9 61
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2004
VL 9
IS 1-2
BP 111
EP 137
DI 10.1023/B:EMSE.0000013516.80487.33
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 805NU
UT WOS:000220373800004
DA 2024-07-18
ER

PT J
AU Beecham, S
   Hall, T
   Rainer, A
AF Beecham, S
   Hall, T
   Rainer, A
TI Software process improvement problems in twelve software companies: An
   empirical analysis
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software process improvement; capability maturity model; practitioners;
   organization; project; software lifecycle; empirical study;
   correspondence analysis
ID MATURITY
AB In this paper we discuss our study of the problems 12 software companies experienced in software development. In total we present qualitative data collected from 45 focus groups that involved over 200 software staff. We look at how different practitioner groups respond to software process improvement problems. We show our classification and analysis of this data using correspondence analysis. Correspondence analysis is a graphical data representation method new to software development research. The aim of the work we present is to develop a more holistic understanding of the problems practitioners are experiencing in their attempts to improve their software processes. Our main finding is that there is an association between a company's capability maturity and patterns of reported problems. Organizational problems are more associated with high maturity companies than with low maturity companies. Low maturity companies are closely linked to problems relating directly to projects such as documentation, timescales, tools and technology. Our findings also confirm differences in practitioner group problems. Senior managers cite problems with goals, culture and politics. Project managers are concerned with timescales, change management, budgets and estimates. Developers are experiencing problems with requirements, testing, documentation, communication, tools and technology. These associations are displayed graphically through correspondence analysis maps.
C1 Univ Hertfordshire, Dept Comp Sci, Hatfield AL10 9AB, Herts, England.
C3 University of Hertfordshire
RP Beecham, S (corresponding author), Univ Hertfordshire, Dept Comp Sci, Hatfield AL10 9AB, Herts, England.
EM s.beecham@herts.ac.uk; t.hall@herts.ac.uk; a.w.rainer@herts.ac.uk
RI Beecham, Simon C/M-1544-2016
OI Rainer, Austen/0000-0001-8868-263X; Hall, Tracy/0000-0002-2728-9014
CR AHUJA S, 1999, 4 ANN SOFTW ENG EUR, pC303
   [Anonymous], 1995, The Capability Maturity Model: Guidelines for Improving the Software Process
   [Anonymous], 1997, Requirements engineering: a good practice guide
   Bach J, 1999, COMPUTER, V32, P148, DOI 10.1109/2.809258
   BADDOO N, IN PRESS J SYSTEMS S
   Boehm BarryW., 1981, Software Engineering Economics, V1
   Curtis B, 2000, IEEE SOFTWARE, V17, P76, DOI 10.1109/MS.2000.854072
   Diaz M, 1997, IEEE SOFTWARE, V14, P75, DOI 10.1109/52.605934
   Dunn G., 1989, DESIGN ANAL RELIABIL
   Dyba T., 2000, Empirical Software Engineering, V5, P357, DOI 10.1023/A:1009800404137
   El Emam K, 2000, IEEE T SOFTWARE ENG, V26, P541, DOI 10.1109/32.852742
   ELEMAN K, 1998, INT SOFTWRE ENG RES
   ELEMAN K, 1999, BETTER SOFTWARE PRAC, pCH16
   ELEMAN K, 1995, RELIABILITY MEASURIN
   ELEMAN K, 1999, BETTER SOFTWARE PRAC
   FORDHAM RG, 1999, 21 INT C SOFTW ENG
   GREENACRE M, 1994, CORRESPONDENCE ANALA
   Hall T., 2002, IEE Proceedings-Software, V149, P153, DOI 10.1049/ip-sen:20020694
   HAYES W, 1985, CMUSEI95TR008
   HERBSLEB J, 1994, CMUSEI94TR013
   HERBSLEB JD, 1996, 18 INT C SOFTW ENG I, P323
   Horvat R. V., 2000, Software Process Improvement and Practice, V5, P45, DOI 10.1002/(SICI)1099-1670(200003)5:1<45::AID-SPIP110>3.0.CO;2-2
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   HUMPHREY WS, 1989, 11TH P INT C SOFTW E, P277
   Kitchenham BA, 2001, IEEE T SOFTWARE ENG, V27, P788, DOI 10.1109/32.950316
   Krasner H., 1997, ACCUMULATING BODY EV
   Krippendorff K., 1980, Content Analysis
   Krueger RA, 2000, FOCUS GROUPS PRACTIC, V3rd
   Mellis W, 1998, SOFTWARE QUAL J, V7, P277, DOI 10.1023/A:1008987423699
   Moitra D., 1998, Software Process Improvement and Practice, V4, P199, DOI 10.1002/(SICI)1099-1670(199812)4:4<199::AID-SPIP107>3.0.CO;2-D
   MORGAN DL, 1993, SUCCESSFUL GROUPS AD
   MORGAN DL, 1997, FOCUS GROUPS QUALITI
   PAULK MC, 1994, CMUSEL94TR12
   PAULK MC, 2000, NOVEMBER 1999 HIGH M
   Pitterman B, 2000, IEEE SOFTWARE, V17, P89, DOI 10.1109/52.854074
   RAINER A, 2002, J SYSTEMS SOFTWARE
   Stelzer D., 1998, Software Process Improvement and Practice, V4, P227, DOI 10.1002/(SICI)1099-1670(199812)4:4<227::AID-SPIP106>3.0.CO;2-1
   TINGEY MO, 1997, REFERENCE SECTION GU
   Vogt W., 1999, DICT STAT METHODOLOG
   WILLIS RR, 2002, CMUSEI98TR006
NR 40
TC 77
Z9 83
U1 0
U2 7
PU KLUWER ACADEMIC PUBL
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2003
VL 8
IS 1
BP 7
EP 42
DI 10.1023/A:1021764731148
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803OU
UT WOS:000220241200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Aghili, R
   Li, H
   Khomh, F
AF Aghili, Roozbeh
   Li, Heng
   Khomh, Foutse
TI Studying the characteristics of AIOps projects on GitHub
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE AIOps; Data mining; Repository mining; Qualitative analysis; Temporal
   trends; Source code analysis
ID MINING FREQUENT PATTERNS; INCIDENT MANAGEMENT; SOFTWARE ANALYTICS;
   AGREEMENT
AB Artificial Intelligence for IT Operations (AIOps) leverages AI approaches to handle the massive amount of data generated during the operations of software systems. Prior works have proposed various AIOps solutions to support different tasks in system operations and maintenance, such as anomaly detection. In this study, we conduct an in-depth analysis of open-source AIOps projects to understand the characteristics of AIOps in practice. We first carefully identify a set of AIOps projects from GitHub and analyze their repository metrics (e.g., the used programming languages). Then, we qualitatively examine the projects to understand their input data, analysis techniques, and goals. Finally, we assess the quality of these projects using different quality metrics, such as the number of bugs. To provide context, we also sample two sets of baseline projects from GitHub: a random sample of machine learning projects and a random sample of general-purposed projects. By comparing different metrics between our identified AIOps projects and these baselines, we derive meaningful insights. Our results reveal a recent and growing interest in AIOps solutions. However, the quality metrics indicate that AIOps projects suffer from more issues than our baseline projects. We also pinpoint the most common issues in AIOps approaches and discuss potential solutions to address these challenges. Our findings offer valuable guidance to researchers and practitioners, enabling them to comprehend the current state of AIOps practices and shed light on different ways of improving AIOps' weaker aspects. To the best of our knowledge, this work marks the first attempt to characterize open-source AIOps projects.
C1 [Aghili, Roozbeh; Li, Heng; Khomh, Foutse] Polytech Montreal, Dept Comp Engn & Software Engn, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Aghili, R (corresponding author), Polytech Montreal, Dept Comp Engn & Software Engn, Montreal, PQ, Canada.
EM roozbeh.aghili@polymtl.ca; heng.li@polymtl.ca; foutse.khomh@polymtl.ca
OI Aghili, Roozbeh/0000-0002-9361-2369
CR Artstein R, 2008, COMPUT LINGUIST, V34, P555, DOI 10.1162/coli.07-034-R2
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Ben Braiek H, 2023, ACM T SOFTW ENG METH, V32, DOI 10.1145/3529318
   Beschastnikh I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P468, DOI 10.1145/2568225.2568246
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bogatinovski J, 2021, Arxiv, DOI arXiv:2101.06054
   Brown A, 2018, PROCEEDINGS OF THE 1ST WORKSHOP ON MACHINE LEARNING FOR COMPUTING SYSTEMS (MLCS 2018), DOI 10.1145/3217871.3217872
   Businge J, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P287, DOI [10.1109/saner.2019.8667998, 10.1109/SANER.2019.8667998]
   Chen BY, 2021, ACM COMPUT SURV, V54, DOI 10.1145/3448976
   Chen ZP, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P750, DOI 10.1145/3368089.3409759
   Chen ZB, 2022, Arxiv, DOI arXiv:2107.05908
   Chen ZB, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1487, DOI 10.1145/3368089.3417055
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Coelho J, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240501
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Coppola R, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON APP MARKET ANALYTICS (WAMA '19), P8, DOI 10.1145/3340496.3342759
   Dabic O, 2021, IEEE WORK CONF MIN S, P560, DOI 10.1109/MSR52588.2021.00074
   Dakhel AM, 2023, INFORM SOFTWARE TECH, V159, DOI 10.1016/j.infsof.2023.107218
   Dang YN, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P4, DOI 10.1109/ICSE-Companion.2019.00023
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Di Stefano A, 2021, 2021 IEEE 30TH INTERNATIONAL CONFERENCE ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES (WETICE 2021), P27, DOI 10.1109/WETICE53228.2021.00017
   Ding JB, 2021, IEEE INT CONF BIG DA, P4852, DOI 10.1109/BigData52589.2021.9672017
   Ding R, 2014, I C DEPEND SYS NETWO, P311, DOI 10.1109/DSN.2014.39
   Ding R, 2012, IEEE INT CONF AUTOM, P318, DOI 10.1145/2351676.2351735
   Du M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1285, DOI 10.1145/3133956.3134015
   El-Sayed N, 2017, INT CON DISTR COMP S, P1333, DOI 10.1109/ICDCS.2017.317
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Foalem PL, 2023, arXiv
   Fu QA, 2009, IEEE DATA MINING, P149, DOI 10.1109/ICDM.2009.60
   Gao JC, 2022, IEEE T SERV COMPUT, V15, P1411, DOI [10.1109/BigData47090.2019.9006011, 10.1109/TSC.2020.2993728, 10.1109/bigdata47090.2019.9006011]
   Ghrairi N, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2018), P356, DOI 10.1109/QRS.2018.00048
   GitHub, 2023, GitHub.
   GitHub I, 2022, To create integrations, retrieve data, and automate your workflows, build with the github rest api
   Guzman E., 2014, Association for Computing Machinery, P352
   Han JW, 2007, DATA MIN KNOWL DISC, V15, P55, DOI 10.1007/s10618-006-0059-1
   Han JW, 2004, DATA MIN KNOWL DISC, V8, P53, DOI 10.1023/B:DAMI.0000005258.31418.83
   Han JW, 2000, SIGMOD RECORD, V29, P1
   He PJ, 2018, IEEE INT CONF AUTOM, P178, DOI 10.1145/3238147.3238193
   He SL, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P60, DOI 10.1145/3236024.3236083
   He SL, 2016, PROC INT SYMP SOFTW, P207, DOI 10.1109/ISSRE.2016.21
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Horschig S, 2018, C COMP 2 INT C ART, P127
   Islam MJ, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P510, DOI 10.1145/3338906.3338955
   Ji Xue, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P335, DOI 10.1109/DSN.2016.38
   Jupyter I, 2022, nbconvert: Convert Notebooks to other formats.
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Kallis R, 2021, SCI COMPUT PROGRAM, V205, DOI 10.1016/j.scico.2020.102598
   Khandkar S. H., 2009, OPEN CODING
   Kodinariya T.M., 2013, International Journal of Advance Research in Computer Science and Management Studies, V1, P90, DOI DOI 10.18576/AMIS/100428
   Lakhina A, 2005, ACM SIGCOMM COMP COM, V35, P217, DOI 10.1145/1090191.1080118
   Lakhina A, 2004, ACM SIGCOMM COMP COM, V34, P219, DOI 10.1145/1030194.1015492
   Lenarduzzi Valentina, 2020, Proceedings of 6th International Conference in Software Engineering for Defence Applications (SEDA 2018). Advances in Intelligent Systems and Computing (AISC 925), P165, DOI 10.1007/978-3-030-14687-0_15
   Lenarduzzi V, 2017, PROC IEEE ACM INT C, P146, DOI 10.1109/ICSE-C.2017.122
   Li JJ, 2022, INT CONF ACOUST SPEE, P4073, DOI 10.1109/ICASSP43922.2022.9746242
   Li SQ, 2020, PROC INT SYMP SOFTW, P172, DOI 10.1109/ISSRE5003.2020.00025
   Li YG, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3385187
   Li YC, 2022, OPER SYST REV, V56, P1, DOI 10.1145/3544497.3544499
   Lim MH, 2014, IEEE DATA MINING, P320, DOI 10.1109/ICDM.2014.96
   Lin QW, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P480, DOI 10.1145/3236024.3236060
   Liu DP, 2015, IMC'15: PROCEEDINGS OF THE 2015 ACM CONFERENCE ON INTERNET MEASUREMENT CONFERENCE, P211, DOI 10.1145/2815675.2815679
   Lomio F, 2021, Arxiv, DOI arXiv:2103.11321
   Lopes CV, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133908
   Lou JG, 2017, AUTOMAT SOFTW ENG, V24, P905, DOI 10.1007/s10515-017-0218-1
   Lou JG, 2013, IEEE INT CONF AUTOM, P475, DOI 10.1109/ASE.2013.6693105
   Lovric M., 2014, Journal of Contemporary Economic and Business Issues, V1, P31
   Luo C, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P1583, DOI 10.1145/2623330.2623374
   Lyu YZ, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3488269
   Majidi F, 2022, PROC IEEE INT CONF S, P59, DOI 10.1109/ICSME55016.2022.00014
   Manes SS, 2021, IEEE WORK CONF MIN S, P283, DOI 10.1109/MSR52588.2021.00040
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nakajima S, 2018, IEEE GLOB CONF CONSU, P601, DOI 10.1109/GCCE.2018.8574766
   Nedelkoski S, 2019, IEEE INT CONF CLOUD, P179, DOI [10.1109/CLOUD2019.00038, 10.1109/CLOUD.2019.00038]
   Nedelkoski S, 2019, IEEE ACM INT SYMP, P241, DOI 10.1109/CCGRID.2019.00038
   Nikanjam A, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3470006
   Nikanjam A, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-021-00313-x
   Notaro P, 2021, ACM T INTEL SYST TEC, V12, DOI 10.1145/3483424
   Notaro P, 2021, LECT NOTES COMPUT SC, V12632, P110, DOI 10.1007/978-3-030-76352-7_15
   Openja M, 2022, J SYST SOFTWARE, V193, DOI 10.1016/j.jss.2022.111458
   Poth A, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P22, DOI 10.1109/QRS51102.2020.00016
   Prasad P., 2018, Market Guide for AIOps Platforms
   Rasool G, 2015, J SOFTW-EVOL PROC, V27, P867, DOI 10.1002/smr.1737
   Rijal Laxmi, 2022, Artificial Intelligence for Cloud and Edge Computing, P31
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Rosà A, 2015, 2015 IEEE 23RD INTERNATIONAL SYMPOSIUM ON QUALITY OF SERVICE (IWQOS), P231, DOI 10.1109/IWQoS.2015.7404739
   Saarimäki N, 2019, EUROMICRO CONF PROC, P317, DOI 10.1109/SEAA.2019.00055
   Saarimäki N, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P98, DOI 10.1109/TechDebt.2019.00028
   Saha A, 2022, 2022 ACM/IEEE 44TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2022), P197, DOI [10.1145/3510457.3513030, 10.1109/ICSE-SEIP55303.2022.9793994]
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Sharma B, 2013, I C DEPEND SYS NETWO
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Su Y, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2828, DOI 10.1145/3292500.3330672
   Subramanian V. N., 2020, IEEE SOFTWARE
   Svoboda J., 2015, Int. J. Adv. Comput. Netw. Secur., V5, P88
   Tambon F, 2023, INFORM SOFTWARE TECH, V155, DOI 10.1016/j.infsof.2022.107129
   Tan J, 2018, BENEVOL, P43
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   Vadlamani SL, 2020, PROC IEEE INT CONF S, P312, DOI 10.1109/ICSME46990.2020.00038
   Vassallo C, 2020, EMPIR SOFTW ENG, V25, P1419, DOI 10.1007/s10664-019-09750-5
   Wang HZ, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P419, DOI 10.1109/ASE51524.2021.9678708
   Wessel M, 2018, P ACM HUM COMP INT 2, P1
   Wilson SJ, 2017, WIRES COMPUT STAT, V9, DOI 10.1002/wics.1392
   Wohlin C, 2015, EMPIR SOFTW ENG, V20, P1427, DOI 10.1007/s10664-014-9319-7
   Xu W., 2009, SOSP 09 P 22 ACM SIG, P117
   Xue J, 2018, IEEE T NETW SERV MAN, V15, P39, DOI 10.1109/TNSM.2018.2794409
   Yao KD, 2020, EMPIR SOFTW ENG, V25, P3043, DOI 10.1007/s10664-020-09822-x
   Zhang TY, 2019, PROC INT SYMP SOFTW, P104, DOI 10.1109/ISSRE.2019.00020
   Zhang YY, 2021, PROCEEDINGS OF THE 30TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT, CIKM 2021, P4373, DOI 10.1145/3459637.3481903
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
   Zhao GL, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3440757
NR 111
TC 1
Z9 1
U1 6
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 143
DI 10.1007/s10664-023-10382-z
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X3KX8
UT WOS:001097487800001
DA 2024-07-18
ER

PT J
AU Shameer, S
   Rodríguez-Pérez, G
   Nagappan, M
AF Shameer, Sheik
   Rodriguez-Perez, Gema
   Nagappan, Meiyappan
TI Relationship between diversity of collaborative group members' race and
   ethnicity and the frequency of their collaborative contributions in
   GitHub
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Racial and ethnic diversity; Software development; Open source software
ID TEAM PERFORMANCE; SOFTWARE
AB Online collaborative platforms provide an environment for diverse developers to collaborate together in Open Source Software (OSS) projects. Previous studies in Software Engineering have shown the benefits of increasing gender and tenure diversity in OSS projects. However, little is known about racial and ethnic diversity's role in OSS projects. An empirical study that analyzes how peer members' racial and ethnic diversity in a collaborative group relates to the frequency of their collaborative contributions in OSS projects. We performed a large-scale quantitative analysis of the relationship between the race and ethnicity of peer members in a collaborative group and the frequency of their collaborative contributions in GitHub. We first inferred the peers working in collaborative groups within a project based on the collaboration between the developers in that project. We then used the Name-Prism tool to extract the race and ethnicity of the collaborative group's peers from the names they use in GitHub. We finally used mixed effects regression modeling of the group members' contributions - measured by the total number of pull requests merged as a collaborative group - to assess the relationship between the racial and ethnic diversity of the members in a collaborative group and the frequency of their collaborative contributions. Our results indicate that (1) a major part of the developers' population are White developers; (2.1) the distribution of collaborative members' contributions from homogeneous and heterogeneous collaborative groups, with respect to the race and ethnicity of the groups' members, is different. Heterogeneous groups have a higher median number of contributions than homogeneous groups; and (2.2) the diversity of race and ethnicity of members in a collaborative group does have a statistically significant relationship with the frequency of the collaborative group members' contributions. The racial and ethnic diversity of peer members in a collaborative group may have a role to play in the frequency of groups' contributions in OSS. Hence, further research is needed to understand how the diverse racial and ethnic composition of collaborative group members leads to a higher rate of group contributions.
C1 [Shameer, Sheik; Nagappan, Meiyappan] Univ Waterloo, Waterloo, ON, Canada.
   [Rodriguez-Perez, Gema] Univ British Columbia, Vancouver, BC, Canada.
C3 University of Waterloo; University of British Columbia
RP Rodríguez-Pérez, G (corresponding author), Univ British Columbia, Vancouver, BC, Canada.
EM sssheiksaleem@uwaterloo.ca; gema.rodriguezperez@ubc.ca;
   mei.nagappan@uwaterloo.ca
OI Rodriguez, Gema/0000-0002-0062-8418
CR Alesina A, 2005, J ECON LIT, V43, P762, DOI 10.1257/002205105774431243
   Ali M, 2011, INT J HUM RESOUR MAN, V22, P1464, DOI 10.1080/09585192.2011.561961
   AlShebli BK, 2018, NAT COMMUN, V9, DOI 10.1038/s41467-018-07634-8
   [Anonymous], 2017, J WOMEN MINORITIES S
   [Anonymous], 2014, Proceedings of the 5th International Workshop on Emerging Trends in Software Metrics, WETSoM 2014, DOI [10.1145/2593868.2593875, DOI 10.1145/2593868.2593875]
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Aué J, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962633
   Avery DR, 2012, PERS PSYCHOL, V65, P167, DOI 10.1111/j.1744-6570.2011.01241.x
   Bates D, 2014, Arxiv, DOI [arXiv:1406.5823, 10.48550/arXiv.1406.5823, DOI 10.48550/ARXIV.1406.5823]
   Bell ST, 2007, J APPL PSYCHOL, V92, P595, DOI 10.1037/0021-9010.92.3.595
   Blau P. M., 1977, INEQUALITY HETEROGEN
   Burnett M, 2016, INTERACT COMPUT, V28, P760, DOI 10.1093/iwc/iwv046
   Byrne D., 1971, The attraction paradigm
   Casalnuovo C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P817, DOI 10.1145/2786805.2786854
   Catolino G, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P11, DOI 10.1109/ICSE-SEIS.2019.00010
   Chen JL, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P821
   Cohen J., 2013, APPL MULTIPLE REGRES, DOI DOI 10.2307/2064799
   Constantinou E, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P34, DOI 10.1109/SANER.2017.7884607
   Crowston K, 2007, INFORM SOFTWARE TECH, V49, P564, DOI 10.1016/j.infsof.2007.02.004
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Cuevas A, 2004, COMPUT STAT DATA AN, V47, P111, DOI 10.1016/j.csda.2003.10.021
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Daniel S, 2013, INFORM SYST RES, V24, P312, DOI 10.1287/isre.1120.0435
   Diamond R, 2019, AM ECON REV, V109, P3365, DOI 10.1257/aer.20181289
   Earley PC, 2000, ACAD MANAGE J, V43, P26, DOI 10.5465/1556384
   El Mezouar M, 2019, EMPIR SOFTW ENG, V24, P3790, DOI 10.1007/s10664-019-09700-1
   Finkel Jenny Rose, 2005, ACL, P363
   Galinsky AD, 2015, PERSPECT PSYCHOL SCI, V10, P742, DOI 10.1177/1745691615598513
   German D. M., 2003, Software Process Improvement and Practice, V8, P201, DOI 10.1002/spip.189
   Gerosa M, 2021, PROC INT CONF SOFTW, P1046, DOI 10.1109/ICSE43902.2021.00098
   Gilal AR, 2014, 2014 INTERNATIONAL CONFERENCE ON COMPUTER, COMMUNICATIONS, AND CONTROL TECHNOLOGY (I4CT), P261, DOI 10.1109/I4CT.2014.6914186
   GitHub, 2021, 2021 STAT OCT
   Gornall W., 2019, Gender, race, and entrepreneurship: A randomized field experiment on venture capitalists and angels
   Gupta R., 2013, INT J BUSINESS MANAG, V2, P36
   Hagberg A. A., 2008, EXPLORING NETWORK ST, P11, DOI DOI 10.1016/J.JELECTROCARD.2010.09.003
   Hankerson D., 2016, Proceedings of the 2016 CHI Conference Extended Abstracts on Human Factors in Computing Systems, P473, DOI [DOI 10.1145/2851581.2892578, 10.1145/2851581]
   Harrison DA, 2007, ACAD MANAGE REV, V32, P1199, DOI 10.5465/AMR.2007.26586096
   Hogg MA, 2004, SMALL GR RES, V35, P246, DOI 10.1177/1046496404263424
   Horwitz SK, 2007, J MANAGE, V33, P987, DOI 10.1177/0149206307308587
   Huang WHD, 2013, INTERNET HIGH EDUC, V16, P57, DOI 10.1016/j.iheduc.2012.02.001
   Hunt V., 2015, WHY DIVERSITY MATTER, V1, P15
   Ibe NA, 2018, SIGCSE'18: PROCEEDINGS OF THE 49TH ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P711, DOI 10.1145/3159450.3159594
   Iyer RN, 2019, IEEE T SOFTWARE ENG, P1
   Jackson SE, 2004, J ORGAN BEHAV, V25, P675, DOI 10.1002/job.265
   Jackson SE, 2003, J MANAGE, V29, P801, DOI 10.1016/S0149-2063(03)00080-1
   Joblin M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P563, DOI 10.1109/ICSE.2015.73
   Kempf E., 2018, PARTISAN PROFESSIONA, DOI [10.3386/w25292, DOI 10.3386/W25292]
   Lazear EP, 1999, ECON J, V109, pC15, DOI 10.1111/1468-0297.00414
   Lee N., 2011, Does cultural diversity help innovation in cities: evidence from london firms
   Lehmann-Willenbrock N, 2014, GROUP PROCESS INTERG, V17, P252, DOI 10.1177/1368430213497066
   Leibzon W, 2016, PROCEEDINGS OF THE 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING ASONAM 2016, P1374, DOI 10.1109/ASONAM.2016.7752419
   Lopez-Fernandez L., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P101, DOI 10.1049/ic:20040485
   Marques M, 2015, PROC FRONT EDUC CONF, P931, DOI 10.1109/FIE.2015.7344175
   Martins LL, 2004, J MANAGE, V30, P805, DOI 10.1016/j.jm.2004.05.002
   McKight P. E., 2010, The Corsini Encyclopedia of Psychology, DOI 10.1002/9780470479216.corpsy0524
   Mendez C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1004, DOI 10.1145/3180155.3180241
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Meneely A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P281, DOI 10.1145/1985793.1985832
   Middleton J, 2018, IEEE WORK CONF MIN S, P403, DOI 10.1145/3196398.3196429
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nadri R, 2021, IEEE T SOFTWARE ENG
   Nadri R, 2021, IEEE SOFTWARE, V38, P51, DOI 10.1109/MS.2020.3036758
   Nakagawa S, 2013, METHODS ECOL EVOL, V4, P133, DOI 10.1111/j.2041-210x.2012.00261.x
   octoverse, 2018, GITH POP DET
   Ortu Marco, 2017, Journal of Software Engineering Research and Development, V5, DOI 10.1186/s40411-017-0044-y
   Peeters MAG, 2006, EUR J PERSONALITY, V20, P377, DOI 10.1002/per.588
   Pieterse V, 2018, SACLA 2018, P120
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Preotiuc-Pietro Daniel, 2018, P 27 INT C COMP LING, P1534
   Pretorius C, 2021, IEEE SOFTWARE, V38, P64, DOI 10.1109/MS.2020.3043663
   Rastogi A, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240504
   Rastogi A, 2016, PROC INT SYMP SOFTW, P77, DOI 10.1109/ISSRE.2016.43
   RCore Team etal, 2013, R LANG ENV STAT COMP
   Reynolds A., 2017, Harvard Business Review
   Riva G., 2016, I SOCIAL NETWORK
   Roberts JA, 2006, MANAGE SCI, V52, P984, DOI 10.1287/mnsc.1060.0554
   Rodríguez-Pérez G, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09992-2
   Ross J., 2010, CHI 10 EXTENDED ABST, P2863, DOI [10.1145/1753846.1753873, DOI 10.1145/1753846.1753873]
   SALANCIK GR, 1978, ADMIN SCI QUART, V23, P224, DOI 10.2307/2392563
   Schulte C, 2019, CIRC RES, V125, P328, DOI 10.1161/CIRCRESAHA.119.314937
   Stahl GK, 2010, J INT BUS STUD, V41, P690, DOI 10.1057/jibs.2009.85
   TAJFEL H, 1982, ANNU REV PSYCHOL, V33, P1, DOI 10.1146/annurev.ps.33.020182.000245
   Tamburri DA, 2019, EMPIR SOFTW ENG, V24, P1369, DOI 10.1007/s10664-018-9659-9
   TEACHMAN JD, 1980, SOCIOL METHOD RES, V8, P341, DOI 10.1177/004912418000800305
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Thung F, 2013, EUR CON SFTWR MTNCE, P323, DOI 10.1109/CSMR.2013.41
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   van Knippenberg D, 2007, ANNU REV PSYCHOL, V58, P515, DOI 10.1146/annurev.psych.58.110405.085546
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vasilescu B, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P50, DOI 10.1109/CHASE.2015.14
   WATSON WE, 1993, ACAD MANAGE J, V36, P590, DOI 10.5465/256593
   Williams KY, 1998, RES ORGAN BEHAV, V20, P77
   Xiaoyu Chen, 2012, ACM Communications in Computer Algebra, V46, P171
   Yang X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P820, DOI 10.1145/2635868.2661682
   Ye JT, 2017, CIKM'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P1897, DOI 10.1145/3132847.3133008
NR 95
TC 0
Z9 0
U1 1
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 83
DI 10.1007/s10664-023-10313-y
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA G7XE3
UT WOS:000991234200001
DA 2024-07-18
ER

PT J
AU Caivano, D
   Cassieri, P
   Romano, S
   Scanniello, G
AF Caivano, Danilo
   Cassieri, Pietro
   Romano, Simone
   Scanniello, Giuseppe
TI On the spread and evolution of dead methods in Java desktop
   applications: an exploratory study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code smell; Dead code; Unused code; Exploratory study; Java desktop
   applications; Open-source; GitHub
ID CODE SMELLS; BAD; WHETHER; IMPACT
AB Background. Dead code is a code smell. It can refer to code blocks, fields, methods, etc. that are unused and/or unreachable-e.g., if a method is unused and/or unreachable, it is a dead method. Past research has shown that the presence of dead code in source code harms its comprehensibility and maintainability. Nevertheless, there is still little empirical evidence on the spread of this code smell in the source code of commercial and open-source software applications.Aims. Our goal is to gather, through an exploratory study, empirical evidence on the spread and evolution of dead methods in open-source Java desktop applications.Method. We quantitatively analyzed the commit histories of 23 open-source Java desktop applications, whose software projects were hosted on GitHub. To investigate the spread and evolution of dead methods, we focused on dead methods detected at a commit level. The total number of analyzed commits in our study is 1,587. The perspective of our exploratory study is that of both practitioners and researchers.Results. We can summarize the most important take-away results as follows: (i) dead methods affect open-source Java desktop applications; (ii) dead methods generally survive for a long time before being "buried" or "revived;" (iii) dead methods that are then revived tend to survive less, as compared to dead methods that are then buried; (iv) dead methods are rarely revived; and (v) most dead methods are stillborn, rather than becoming dead later. Given the exploratory nature of our study, we believe that its results will help researchers to conduct more resource- and time-demanding research on dead methods and, in general, on dead code.Conclusions. We can conclude that developers should carefully handle dead code (and thus dead methods) since it is harmful, widespread, rarely revived, and survives for a long time in software applications.
C1 [Caivano, Danilo] Univ Bari, Bari, Italy.
   [Cassieri, Pietro] Univ Basilicata, Potenza, Italy.
   [Romano, Simone; Scanniello, Giuseppe] Univ Salerno, Fisciano, Italy.
C3 Universita degli Studi di Bari Aldo Moro; University of Basilicata;
   University of Salerno
RP Romano, S (corresponding author), Univ Salerno, Fisciano, Italy.
EM danilo.caivano@uniba.it; pietro.cassieri@studenti.unibas.it;
   siromano@unisa.it; gscanniello@unisa.it
RI Romano, Simone/JVZ-6529-2024
OI Cassieri, Pietro/0009-0005-7185-8973; Romano, Simone/0000-0003-4880-3622
FU Universita degli Studi di Salerno within the CRUI-CARE Agreement
FX Open access funding provided by Universita degli Studi di Salerno within
   the CRUI-CARE Agreement.
CR Boomsma H, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P511, DOI 10.1109/ICSM.2012.6405314
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Caivano D, 2021, ACM IEEE INT S EMP S
   Chatzigeorgiou A, 2014, INNOV SYST SOFTW ENG, V10, P3, DOI 10.1007/s11334-013-0205-z
   Eder S, 2012, PROC INT CONF SOFTW, P1102, DOI 10.1109/ICSE.2012.6227109
   Fard AM, 2013, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM.2013.6648192
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Goel Manish Kumar, 2010, Int J Ayurveda Res, V1, P274, DOI 10.4103/0974-7788.76794
   Haas R, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3368267
   Hermans Felienne, 2016, Proceedings of the 24th International Conference on Program Comprehension, P1, DOI [DOI 10.1109/ICPC.2016, 10.1109/icpc.2016.7503706, DOI 10.1109/ICPC.2016.7503706, 10.1109/ICPC.2016.7503706]
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mäntylä M, 2003, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2003.1235447
   Martin R. C., 2008, Clean Code: A Handbook of Agile Software Craftsmanship
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Obbink NG, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P391, DOI 10.1109/SANER.2018.8330226
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   RGM Jr., 2011, SURVIVAL ANAL
   Rich JT, 2010, OTOLARYNG HEAD NECK, V143, P331, DOI 10.1016/j.otohns.2010.05.007
   Romano J., 2006, ANN M FLORIDA ASS IN
   Romano S., 2016, PROC IEEE INT C PROG, P1
   Romano S., 2016, P 31 ANN ACM S APPL, P1538, DOI DOI 10.1145/2851613.2851968
   Romano S, 2022, SPREAD EVOLUTION DEA
   Romano S, 2020, IEEE T SOFTWARE ENG, V46, P71, DOI 10.1109/TSE.2018.2842781
   Romano S, 2018, PROC IEEE INT CONF S, P737, DOI 10.1109/ICSME.2018.00092
   Romano S, 2018, EUROMICRO CONF PROC, P167, DOI 10.1109/SEAA.2018.00035
   Romano S, 2015, PROC IEEE INT CONF S, P339, DOI 10.1109/ICSM.2015.7332484
   Runeson P, 2012, EXPT SOFTWARE ENE
   Scanniello Giuseppe, 2014, 2014 40th EUROMICRO Conference on Software Engineering and Advanced Applications. Proceedings, P392, DOI 10.1109/SEAA.2014.67
   Scanniello G., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P524, DOI 10.1109/ICSM.2011.6080823
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Tip F, 2000, ACM SIGPLAN NOTICES, V35, P281, DOI 10.1145/354222.353190
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1838
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Wake W.C., 2003, Refactoring Workbook, V1st
   WELCH BL, 1947, BIOMETRIKA, V34, P28, DOI 10.2307/2332510
   Wilson EB, 1927, J AM STAT ASSOC, V22, P209, DOI 10.2307/2276774
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
NR 42
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2023
VL 28
IS 3
AR 64
DI 10.1007/s10664-023-10303-0
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA D5FS8
UT WOS:000968997000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Traini, L
   Cortellessa, V
   Di Pompeo, D
   Tucci, M
AF Traini, Luca
   Cortellessa, Vittorio
   Di Pompeo, Daniele
   Tucci, Michele
TI Towards effective assessment of steady state performance in Java
   software: are we there yet?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Microbenchmarking; Performance testing; Performance evaluation; Java;
   JMH
ID STATISTICS
AB Microbenchmarking is a widely used form of performance testing in Java software. A microbenchmark repeatedly executes a small chunk of code while collecting measurements related to its performance. Due to Java Virtual Machine optimizations, microbenchmarks are usually subject to severe performance fluctuations in the first phase of their execution (also known as warmup). For this reason, software developers typically discard measurements of this phase and focus their analysis when benchmarks reach a steady state of performance. Developers estimate the end of the warmup phase based on their expertise, and configure their benchmarks accordingly. Unfortunately, this approach is based on two strong assumptions: (i) benchmarks always reach a steady state of performance and (ii) developers accurately estimate warmup. In this paper, we show that Java microbenchmarks do not always reach a steady state, and often developers fail to accurately estimate the end of the warmup phase. We found that a considerable portion of studied benchmarks do not hit the steady state, and warmup estimates provided by software developers are often inaccurate (with a large error). This has significant implications both in terms of results quality and time-effort. Furthermore, we found that dynamic reconfiguration significantly improves warmup estimation accuracy, but still it induces suboptimal warmup estimates and relevant side-effects. We envision this paper as a starting point for supporting the introduction of more sophisticated automated techniques that can ensure results quality in a timely fashion.
C1 [Traini, Luca; Cortellessa, Vittorio; Di Pompeo, Daniele] Univ LAquila, Dept Informat Engn, Comp Sci & Math, Laquila, Italy.
   [Tucci, Michele] Charles Univ Prague, Fac Math & Phys, Dept Distributed & Dependable Syst, Prague, Czech Republic.
C3 University of L'Aquila; Charles University Prague
RP Traini, L (corresponding author), Univ LAquila, Dept Informat Engn, Comp Sci & Math, Laquila, Italy.
EM luca.traini@univaq.it; vittorio.cortellessa@univaq.it;
   daniele.dipompeo@univaq.it; tucci@d3s.mff.cuni.cz
RI Traini, Luca/IZD-8631-2023; Tucci, Michele/IUO-7236-2023; Di Pompeo,
   Daniele/P-2984-2018; Traini, Luca/AGN-6130-2022
OI Traini, Luca/0000-0003-3676-0645; Tucci, Michele/0000-0002-0329-1101; Di
   Pompeo, Daniele/0000-0003-2041-7375; Traini, Luca/0000-0003-3676-0645;
   Cortellessa, Vittorio/0000-0002-4507-464X
FU "Fondo Territori Lavoro e Conoscenza CGIL, CSIL and UIL" through the
   project "Territori Aperti"; EMERGE project at Centre of EXcellence on
   Connected, Geo-Localized and Cybersecure Vehicle (EXEmerge) - Italian
   Government [70/2017]; OP RDE project [CZ.02.2.69/0.0/0.0/18 053/0016976]
FX We thank the anonymous reviewers for their constructive comments, which
   guided us in improving the paper. Luca Traini is grateful for the
   financial support by "Fondo Territori Lavoro e Conoscenza CGIL, CSIL and
   UIL" through the project "Territori Aperti". Daniele Di Pompeo is
   supported by the EMERGE project at Centre of EXcellence on Connected,
   Geo-Localized and Cybersecure Vehicle (EXEmerge), funded by Italian
   Government under CIPE resolution n. 70/2017. Michele Tucci is supported
   by the OP RDE project No. CZ.02.2.69/0.0/0.0/18 053/0016976
   "International mobility of research, technical and administrative staff
   at Charles University".
CR AlGhamdi HM, 2023, J SOFTW-EVOL PROC, V35, DOI 10.1002/smr.2276
   Antoch J, 1997, J STAT PLAN INFER, V60, P291, DOI 10.1016/S0378-3758(96)00138-3
   Bagley D., 2004, The Computer Language Benchmarks Game
   Barrett E, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133876
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Bolz CF, 2015, SCI COMPUT PROGRAM, V98, P408, DOI 10.1016/j.scico.2013.02.001
   Bulej L, 2017, AUTOMAT SOFTW ENG, V24, P139, DOI 10.1007/s10515-015-0188-0
   Chen JF, 2017, PROC IEEE INT CONF S, P341, DOI 10.1109/ICSME.2017.13
   Cortellessa V, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111084
   Costa D, 2021, IEEE T SOFTWARE ENG, V47, P1452, DOI 10.1109/TSE.2019.2925345
   Davison A.C., 1997, BOOTSTRAP METHODS TH, DOI [DOI 10.1017/CBO9780511802843, 10.1017/CBO9780511802843]
   Ding ZS, 2020, PROC INT CONF SOFTW, P1435, DOI 10.1145/3377811.3380351
   Eckley I. A., 2011, Analysis of Changepoint Models, P205
   Fearnhead P, 2019, J AM STAT ASSOC, V114, P169, DOI 10.1080/01621459.2017.1385466
   FIELLER EC, 1954, J ROY STAT SOC B, V16, P175
   Fowler M., 2006, Continuous integration
   Georges A, 2007, OOPSLA: 22ND INTERNATIONAL CONFERENCE ON OBJECT-ORIENTED PROGRAMMING, SYSTEMS, LANGUAGES, AND APPLICATIONS, PROCEEDINGS, P57
   Giese Holger, 2020, MODELS 20 COMPANION, DOI DOI 10.1145/3417990.3418743
   Haynes K., 2014, Efficient penalty search for multiple changepoint problems
   He S, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P188, DOI 10.1145/3338906.3338912
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   Kalibera T., 2020, Quantifying Performance Changes with Effect Size Confidence Intervals
   Kalibera T, 2013, PROCEEDINGS OF THE ACM SIGPLAN INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT (ISMM '13), P63
   Killick R, 2012, J AM STAT ASSOC, V107, P1590, DOI 10.1080/01621459.2012.737745
   KULLBACK S, 1951, ANN MATH STAT, V22, P79, DOI 10.1214/aoms/1177729694
   Laaber C, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10037-x
   Laaber C, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P989, DOI 10.1145/3368089.3409683
   Laaber C, 2019, EMPIR SOFTW ENG, V24, P2469, DOI 10.1007/s10664-019-09681-1
   Laaber C, 2018, IEEE WORK CONF MIN S, P119, DOI 10.1145/3196398.3196407
   Lavielle M, 2005, SIGNAL PROCESS, V85, P1501, DOI 10.1016/j.sigpro.2005.01.012
   Leitner P., 2017, P 8 ACMSPEC INT C PE, P373
   Maricq A, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P409
   Mostafa S, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P23, DOI 10.1145/3092703.3092725
   Mytkowicz T, 2009, ACM SIGPLAN NOTICES, V44, P265, DOI 10.1145/1508284.1508275
   Neumann G, 2015, TRANSFORMED VARGHA D
   Oaks S, 2014, JAVA PERFORMANCE THE
   Papadopoulos AV, 2021, IEEE T SOFTWARE ENG, V47, P1528, DOI 10.1109/TSE.2019.2927908
   Ratanaworabhan P, 2009, MSRTR2009173
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Reichelt DG, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1146, DOI 10.1109/ASE.2019.00123
   Rubin J, 2016, PROC INT CONF SOFTW, P982, DOI 10.1145/2884781.2884871
   Samoaa H, 2021, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '21), P213, DOI 10.1145/3427921.3450243
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Satopaa V., 2011, Proceedings of the 2011 31st International Conference on Distributed Computing Systems Workshops (ICDCS Workshops), P166, DOI 10.1109/ICDCSW.2011.20
   Stefan P., 2017, P 8 ACM SPEC INT C P, P401, DOI [DOI 10.1145/3030207.3030226, 10. 1145/3030207.3030226]
   Suchanek M, 2017, PERFORMANCE TUNING G
   Traini L, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3485136
   Traini L, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10069-3
   Tukey J.W., 1977, EXPLORATORY DATA ANA, V2
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vassallo C, 2017, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2017.67
   WASSERTHEIL S, 1970, BIOMETRICS, V26, P588, DOI 10.2307/2529115
NR 52
TC 1
Z9 1
U1 1
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2023
VL 28
IS 1
AR 13
DI 10.1007/s10664-022-10247-x
PG 57
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6N4TU
UT WOS:000889551000001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Fregnan, E
   Petrulio, F
   Bacchelli, A
AF Fregnan, Enrico
   Petrulio, Fernando
   Bacchelli, Alberto
TI The evolution of the code during review: an investigation on review
   changes
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Modern Code Review; Software analytics; Empirical software engineering
AB Code review is a software engineering practice in which reviewers manually inspect the code written by a fellow developer and propose any change that is deemed necessary or useful. The main goal of code review is to improve the quality of the code under review. Despite the widespread use of code review, only a few studies focused on the investigation of its outcomes, for example, investigating the code changes that happen to the code under review. The goal of this paper is to expand our knowledge on the outcome of code review while re-evaluating results from previous work. To this aim, we analyze changes that happened during the review process, which we define as review changes. Considering three popular open-source software projects, we investigate the types of review changes (based on existing taxonomies) and what triggers them; also, we study which code factors in a code review are most related to the number of review changes. Our results show that the majority of changes relate to evolvability concerns, with a strong prevalence of documentation and structure changes at type-level. Furthermore, differently from past work, we found that the majority of review changes are not triggered by reviewers' comments. Finally, we find that the number of review changes in a code review is related to the size of the initial patch as well as the new lines of code that it adds. However, other factors, such as lines deleted or the author of the review patchset, do not always show an empirically supported relationship with the number of changes.
C1 [Fregnan, Enrico] Univ Zurich, Zurich Empir Software Engn Team ZEST, Zurich, Switzerland.
   [Petrulio, Fernando] Univ Zurich, Empir Software Engn Team ZEST, Zurich, Switzerland.
   [Bacchelli, Alberto] Univ Zurich, Dept Informat, Fac Business Econ & Informat, Empir Software Engn, Zurich, Switzerland.
C3 University of Zurich; University of Zurich; University of Zurich
RP Fregnan, E (corresponding author), Univ Zurich, Zurich Empir Software Engn Team ZEST, Zurich, Switzerland.
EM fregnan@ifi.uzh.ch; fpetrulio@ifi.uzh.ch; bacchelli@ifi.uzh.ch
RI Bacchelli, Alberto/ABG-5379-2020
OI Bacchelli, Alberto/0000-0003-0193-6823; Fregnan,
   Enrico/0000-0002-6897-7665
FU University of Zurich; Swiss National Science Foundation [PP00P2 170529]
FX Open access funding provided by University of Zurich. E. Fregnan and A.
   Bacchelli gratefully acknowledge the support of the Swiss National
   Science Foundation through the SNF Project No. PP00P2 170529.
CR [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Barnett M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P134, DOI 10.1109/ICSE.2015.35
   Baum T, 2019, EMPIR SOFTW ENG, V24, P1762, DOI 10.1007/s10664-018-9676-8
   Baum T, 2017, LECT NOTES COMPUT SC, V10611, P111, DOI 10.1007/978-3-319-69926-4_9
   Baum T, 2016, LECT NOTES COMPUT SC, V10027, P301, DOI 10.1007/978-3-319-49094-6_19
   Baum T, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P74, DOI 10.1109/QRS.2016.19
   Bavota G, 2015, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSM.2015.7332454
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Bernhart M, 2013, CONF PROC INT SYMP C, P192, DOI 10.1109/ICPC.2013.6613847
   BIANCHI A, 2001, P 7 INT SOFTW METR S, P42, DOI DOI 10.1109/METRIC.2001.915514
   Bird C, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P191, DOI 10.1109/MSR.2015.25
   Buteikis A., 2020, PRACTICAL ECONOMETRI
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Craney T. A., 2002, Quality Engineering, V14, P391, DOI 10.1081/QEN-120001878
   Czerwonka J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P27, DOI 10.1109/ICSE.2015.131
   Czerwonka Jacek, 2018, QUEUE, V16, P81, DOI [10.1145/3291276.3292420, DOI 10.1145/3291276.3292420]
   El Zanaty F, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239525
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Fahrmeir L., 2013, Regression: Models, Methods and Applications
   Feitelson DG, 2013, IEEE INTERNET COMPUT, V17, P8, DOI 10.1109/MIC.2013.25
   FOX J, 1992, J AM STAT ASSOC, V87, P178, DOI 10.2307/2290467
   Freedman DanielP., 2000, Handbook of walkthroughs, inspec- tions, and technical reviews: evaluating programs, projects, and products
   Gerrit, 2015, GERR COD REV
   Golzadeh M, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110911
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Greenwood P. E., 1996, A guide to chi-squared testing, V280
   Hamasaki K, 2013, IEEE WORK CONF MIN S, P49, DOI 10.1109/MSR.2013.6624003
   JGit, 2021, EX REV CHANG
   Johnson P. M., 1998, Empirical Software Engineering, V3, P9, DOI 10.1023/A:1009787822215
   Krebs C.J., 1998, ECOLOGICAL METHODOLO, VSecond
   Krippendorff K, 2011, COMPUTING KRIPPENDOR
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   McGraw G, 2008, COMPUTER, V41, P107, DOI 10.1109/MC.2008.514
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Mukadam M, 2013, IEEE WORK CONF MIN S, P45, DOI 10.1109/MSR.2013.6624002
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Paixao M, 2018, IEEE WORK CONF MIN S, P46, DOI 10.1145/3196398.3196466
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Pascarella L, 2019, EMPIR SOFTW ENG, V24, P1499, DOI 10.1007/s10664-019-09694-w
   Rachamadugu R., 2008, uS Patent App, Patent No. [11/754,231, 11754231]
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2012, IEEE SOFTWARE, V29, P56, DOI 10.1109/MS.2012.24
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Siy H, 2001, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2001.972741
   Spadini D, 2019, PROC INT CONF SOFTW, P1061, DOI 10.1109/ICSE.2019.00110
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Uchôa A, 2020, PROC IEEE INT CONF S, P511, DOI 10.1109/ICSME46990.2020.00055
   WEINBERG GM, 1984, IEEE T SOFTWARE ENG, V10, P68, DOI 10.1109/TSE.1984.5010200
   Wessel M, 2020, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME46990.2020.00011
   Wiggins KD, 2019, US Patent, Patent No. [10,248,396, 10248396]
   Yourdon E., 1989, STRUCTURED WALKTHROU
   Zhang TY, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P111, DOI 10.1109/ICSE.2015.33
NR 55
TC 0
Z9 0
U1 1
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 177
DI 10.1007/s10664-022-10205-7
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V4SY
UT WOS:000859469500014
PM 36159894
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Çarka, J
   Esposito, M
   Falessi, D
AF Carka, Jonida
   Esposito, Matteo
   Falessi, Davide
TI On effort-aware metrics for defect prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Defect prediction; Accuracy metrics; Effort-aware metrics
ID STATIC CODE ATTRIBUTES; RESEARCHER BIAS; SOFTWARE; VALIDATION; FAULTS;
   QUALITY; MODELS
AB Context Advances in defect prediction models, aka classifiers, have been validated via accuracy metrics. Effort-aware metrics (EAMs) relate to benefits provided by a classifier in accurately ranking defective entities such as classes or methods. PofB is an EAM that relates to a user that follows a ranking of the probability that an entity is defective, provided by the classifier. Despite the importance of EAMs, there is no study investigating EAMs trends and validity. Aim The aim of this paper is twofold: 1) we reveal issues in EAMs usage, and 2) we propose and evaluate a normalization of PofBs (aka NPofBs), which is based on ranking defective entities by predicted defect density. Method We perform a systematic mapping study featuring 152 primary studies in major journals and an empirical study featuring 10 EAMs, 10 classifiers, two industrial, and 12 open-source projects. Results Our systematic mapping study reveals that most studies using EAMs use only a single EAM (e.g., PofB20) and that some studies mismatched EAMs names. The main result of our empirical study is that NPofBs are statistically and by orders of magnitude higher than PofBs. Conclusions In conclusion, the proposed normalization of PofBs: (i) increases the realism of results as it relates to a better use of classifiers, and (ii) promotes the practical adoption of prediction models in industry as it shows higher benefits. Finally, we provide a tool to compute EAMs to support researchers in avoiding past issues in using EAMs.
C1 [Carka, Jonida; Esposito, Matteo] Univ Roma Tor Vergata, Rome, Italy.
   [Falessi, Davide] Univ Roma Tor Vergata, Software Engn, Rome, Italy.
C3 University of Rome Tor Vergata; University of Rome Tor Vergata
RP Çarka, J (corresponding author), Univ Roma Tor Vergata, Rome, Italy.
EM jonida.carka@students.uniroma2.eu; m.esposito@ing.uniroma2.it;
   falessi@ing.uniroma2.it
RI Esposito, Matteo/GYU-7560-2022
OI Esposito, Matteo/0000-0002-8451-3668; Falessi,
   Davide/0000-0002-6340-0058; Carka, Jonida/0000-0001-9315-3652
FU Universita degli Studi di Roma Tor Vergata within the CRUICARE Agreement
FX Open access funding provided by Universita degli Studi di Roma Tor
   Vergata within the CRUICARE Agreement.
CR Agrawal Amritanshu, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering (ICSE). Proceedings, P1050, DOI 10.1145/3180155.3180197
   AHA DW, 1991, MACH LEARN, V6, P37, DOI 10.1023/A:1022689900470
   Ahluwalia A, 2019, IEEE WORK CONF MIN S, P63, DOI 10.1109/MSR.2019.00019
   Akoglu H, 2018, TURK J EMERG MED, V18, P91, DOI 10.1016/j.tjem.2018.08.001
   ALTMAN NS, 1992, AM STAT, V46, P175, DOI 10.2307/2685209
   Amasaki S, 2020, EMPIR SOFTW ENG, V25, P1573, DOI 10.1007/s10664-019-09777-8
   Arisholm E, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2007.22
   Bangash AA, 2020, EMPIR SOFTW ENG, V25, P5047, DOI 10.1007/s10664-020-09878-9
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Ben-Gal I, 2008, BAYESIAN NETWORKS, DOI [10.1002/9780470061572.eqr089.eprint:https://onlinelibrary.wiley.com/doi/pdf/10.1002/9780470061572.eqr089, DOI 10.1002/9780470061572.EQR089.EPRINT:HTTPS://ONLINELIBRARY.WILEY.COM/DOI/PDF/10.1002/9780470061572.EQR089]
   Benni KE, 2018, IEEE T SOFTWARE ENG, V44, P534, DOI 10.1109/TSE.2017.2731766
   Bennin KE, 2019, EMPIR SOFTW ENG, V24, P602, DOI 10.1007/s10664-018-9633-6
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen HW, 2021, IEEE T SOFTWARE ENG, V47, P2803, DOI 10.1109/TSE.2020.2968520
   [陈恒 Chen Heng], 2017, [计算机科学, Computer Science], V44, P90
   Chen T, 2014, PROCEEDINGS OF THE FIFTH INTERNATIONAL SYMPOSIUM ON TEST AUTOMATION & INSTRUMENTATION, VOLS 1 AND 2, P82
   Chen X, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106441
   Chi J, 2017, INT WORKSH EMPIR ENG, P7, DOI 10.1109/IWESEP.2017.16
   Cleary J.G., 1995, PROC 12 INT C MACHIN, P108, DOI [DOI 10.1016/B978-1-55860-377-6.50022-0, 10.1016/B978-1-55860-377-6.50022-0]
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Dalla Palma S, 2022, IEEE T SOFTWARE ENG, V48, P2086, DOI 10.1109/TSE.2021.3051492
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Falessi D, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3467895
   Falessi D, 2020, EMPIR SOFTW ENG, V25, P4805, DOI 10.1007/s10664-020-09868-x
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   Feng S, 2021, INFORM SOFTWARE TECH, V129, DOI 10.1016/j.infsof.2020.106432
   Flint SW, 2021, IEEE WORK CONF MIN S, P85, DOI 10.1109/MSR52588.2021.00022
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Giger E, 2012, INT SYMP EMP SOFTWAR, P171, DOI 10.1145/2372251.2372285
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall M., 1999, PhD thesis, DOI 10.1.1.149.3848
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herbold S, 2019, IEEE T SOFTWARE ENG
   Herbold S, 2020, EMPIR SOFTW ENG, V25, P5333, DOI 10.1007/s10664-020-09885-w
   Herbold S, 2019, IEEE T SOFTWARE ENG, V45, P632, DOI 10.1109/TSE.2018.2790413
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Herbold S, 2017, IEEE T SOFTWARE ENG, V43, P1091, DOI 10.1109/TSE.2017.2748129
   Herbold S, 2017, EMPIR SOFTW ENG, V22, P1866, DOI 10.1007/s10664-016-9468-y
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Huang Q, 2019, EMPIR SOFTW ENG, V24, P2823, DOI 10.1007/s10664-018-9661-2
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jiang Y., 2008, DEFECTS 08 P 2008 WO, P16, DOI [DOI 10.1145/1390817.1390822, 10.1145/1390817.1390822]
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Jing XY, 2017, IEEE T SOFTWARE ENG, V43, P321, DOI 10.1109/TSE.2016.2597849
   John G. H., 1995, Uncertainty in Artificial Intelligence. Proceedings of the Eleventh Conference (1995), P338
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Khoshgoftaar TM, 1996, SEVENTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P364, DOI 10.1109/ISSRE.1996.558896
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Kohavi R, 1995, LECT NOTES ARTIF INT, V912, P174
   Kondo M, 2020, EMPIR SOFTW ENG, V25, P890, DOI 10.1007/s10664-019-09736-3
   Kondo M, 2019, EMPIR SOFTW ENG, V24, P1925, DOI 10.1007/s10664-018-9679-5
   Kotsiantis S.B., 2005, Bagging Model Trees for Classification Problems
   LECESSIE S, 1992, APPL STAT-J ROY ST C, V41, P191
   Lee T, 2016, IEEE T SOFTWARE ENG, V42, P1015, DOI 10.1109/TSE.2016.2550458
   Liu JP, 2017, INT SYMP EMP SOFTWAR, P11, DOI 10.1109/ESEM.2017.8
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   McCallum A., 1998, AAAI 98 WORKSH LEARN, V752, P41, DOI DOI 10.1109/TSMC.1985.6313426
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Morasca S, 2020, EMPIR SOFTW ENG, V25, P3977, DOI 10.1007/s10664-020-09861-4
   Mori T, 2019, EMPIR SOFTW ENG, V24, P779, DOI 10.1007/s10664-018-9638-1
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ostrand T. J., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P85, DOI 10.1049/ic:20040482
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Palomba F, 2019, IEEE T SOFTWARE ENG, V45, P194, DOI 10.1109/TSE.2017.2770122
   Pascarella L, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110493
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Peters F, 2019, IEEE T SOFTWARE ENG, V45, P615, DOI 10.1109/TSE.2017.2787653
   Platt JC, 1999, ADVANCES IN KERNEL METHODS, P185
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Qu Y, 2021, INFORM SOFTWARE TECH, V137, DOI 10.1016/j.infsof.2021.106605
   Qu Y, 2021, IEEE T SOFTWARE ENG, V47, P348, DOI 10.1109/TSE.2019.2892959
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Rahman F, 2012, P ACM SIGSOFT 20 INT, DOI 10.1145/2393596.2393669
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Rodríguez-Pérez G, 2022, IEEE T SOFTWARE ENG, V48, P1400, DOI 10.1109/TSE.2020.3021380
   Rodríguez-Pérez G, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267436
   Shepperd M, 2018, IEEE T SOFTWARE ENG, V44, P1129, DOI 10.1109/TSE.2017.2731308
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Song QB, 2019, IEEE T SOFTWARE ENG, V45, P1253, DOI 10.1109/TSE.2018.2836442
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Tian Y, 2015, EMPIR SOFTW ENG, V20, P1354, DOI 10.1007/s10664-014-9331-y
   Tu H, 2022, IEEE T SOFTWARE ENG, V48, P278, DOI 10.1109/TSE.2020.2986415
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Vandehei B, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3433928
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   Weyuker EJ, 2010, EMPIR SOFTW ENG, V15, P277, DOI 10.1007/s10664-009-9111-2
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wohlin C., 2012, Experimentation in Software Engineering
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Yan M, 2017, INT SYMP EMP SOFTWAR, P344, DOI 10.1109/ESEM.2017.48
   Yu TT, 2019, IEEE T SOFTWARE ENG, V45, P558, DOI 10.1109/TSE.2018.2791521
   Zhang F, 2017, IEEE T SOFTWARE ENG, V43, P476, DOI 10.1109/TSE.2016.2599161
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhang HY, 2007, IEEE T SOFTWARE ENG, V33, P635, DOI 10.1109/TSE.2007.70706
NR 119
TC 9
Z9 9
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 152
DI 10.1007/s10664-022-10186-7
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3O4IB
UT WOS:000836798500009
OA hybrid
DA 2024-07-18
ER

PT J
AU Abidi, M
   Rahman, MS
   Openja, M
   Khomh, F
AF Abidi, Mouna
   Rahman, Md Saidur
   Openja, Moses
   Khomh, Foutse
TI Multi-language design smells: a backstage perspective
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Survey; Multi-language systems; Design smells; JNI
ID CODE; IMPACT
AB Multi-language systems became prevalent with technological advances. Developers opt for the combination of programming languages to build a single application. Such combinations of programming languages allow the reuse of existing code and libraries without re-implementing the code from scratch. Software quality is achieved by following good software development practices and avoiding the bad ones. However, most of the practices in the literature apply to mono-language systems only and do not consider the interaction between programming languages. We previously defined a catalog of bad practices i.e., design smells related to multi-language systems. This paper aims to provide empirical evidence on the relevance of multi-language design smells and their perceived impacts on software quality. We analysed eight open source projects to detect occurrences of 15 types of multi-language design smells. We also extracted information about the developers that contributed to those systems. We performed an open and a closed survey targeting developers in general but also developers who contributed to those systems. We surveyed developers about the perceived prevalence of multi-language design smells their severity, and their impact on software quality attributes. We report that most of the studied design smells are perceived as design or implementation problems. Our results suggest that the studied design smells could be introduced mainly during refactoring and maintenance activities, and during regular development tasks. Our results also point that multi-language design smells are perceived as harmful and have negative impacts on software quality. The perceived prevalence of design smells and their impact varies from one specific smell type to the others. We believe that our findings are important for developers and researchers interested in improving the quality of multi-language systems as it can help them prioritize design smells during maintenance activities.
C1 [Abidi, Mouna; Rahman, Md Saidur; Openja, Moses; Khomh, Foutse] Polytech Montreal, DGIGL, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Abidi, M (corresponding author), Polytech Montreal, DGIGL, Montreal, PQ, Canada.
EM mouna.abidi@polymtl.ca; saidur.rahman@polymtl.caa;
   moses.openja@polymtl.ca; foutse.khomh@polymtl.ca
RI Openja, Moses/HDN-9364-2022
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Abidi M, 2019, P 29 ANN INT C COMP, P7281
   Abidi M, 2019, P 24 EUR C PATT LANG, P42
   Abidi M, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3432690
   Abidi M, 2020, IEEE WORK CONF MIN S, P615, DOI 10.1145/3379597.3387508
   Abidi M, 2019, PROCEEDINGS OF THE 24TH EUROPEAN CONFERENCE ON PATTERN LANGUAGES OF PROGRAMS (EUROPLOP 2019), DOI 10.1145/3361149.3361161
   Arcoverde R., 2011, WORKSH REF TOOLS, P33
   Asmare MB, 2020, IEEE WORK CONF MIN S, P327, DOI 10.1145/3379597.3387467
   Baltes S, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962628
   Binkley D, 2007, FoSE 2007: Future of Software Engineering, P104, DOI 10.1109/FOSE.2007.27
   Borrelli A, 2020, IEEE WORK CONF MIN S, P198, DOI 10.1145/3379597.3387454
   Burow B.D., 1996, Computing in High Energy Physics' 95: CHEP'95, P610
   Dean TR, 2003, CASCON '03, P266
   Emerson P, 2013, SOC CHOICE WELFARE, V40, P353, DOI 10.1007/s00355-011-0603-9
   Fink A., 2003, The survey handbook, V1
   Flores E, 2011, LECT NOTES COMPUT SC, V6716, P250, DOI 10.1007/978-3-642-22327-3_31
   Fontana FA, 2012, J OBJECT TECHNOL, V11, DOI 10.5381/jot.2012.11.2.a5
   Goedicke M, 2002, J SOFTW MAINT EVOL-R, V14, P1, DOI 10.1002/smr.243
   Goedicke M, 2000, 5 EUR C PATT LANG PR
   Gravetter FJ., 2012, Forzano LAB. Research methods for the behavioral sciences, V4th
   Harman M, 2010, IEEE INT WORK C SO, P7, DOI 10.1109/SCAM.2010.28
   Hunt J., 1999, JAVA PRACTITIONERS I, V1st
   Khomh F, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P274
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kienle H.M., 2012, Reverse Engineering-Recent Advances and Applications
   Kochhar PS, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P563, DOI 10.1109/SANER.2016.112
   Kondoh G, 2008, P 2008 INT S SOFTW T, P109
   Kontogiannis K, 2006, PROC IEEE INT CONF S, P497
   Kullbach B, 1998, FIFTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P135, DOI 10.1109/WCRE.1998.723183
   Lee B, 2009, ACM SIGPLAN NOTICES, V44, P207, DOI 10.1145/1639949.1640105
   Li SL, 2011, ACM SIGPLAN NOTICES, V46, P345, DOI 10.1145/2076021.2048095
   Li SL, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P442
   Liang S., 1999, Java native interface: programmers guide and reference, V1
   Linos P. K., 1995, Proceedings First IEEE International Conference on Engineering of Complex Comput Systems. Held jointly with 5th CSESAW, 3rd IEEE RTAW and 20th IFAC/IFIP WRTP (Cat. No.95TB100007), P338, DOI 10.1109/ICECCS.1995.479355
   Linos PK, 2003, PROG COMPREHEN, P64
   Lippert M., 2006, Refactoring in large software projects: performing complex restructurings successfully
   Long F., 2013, Java coding guidelines: 75 recommendations for reliable and secure programs
   Mayer Philip, 2017, Journal of Software Engineering Research and Development, V5, DOI 10.1186/s40411-017-0035-z
   Mayer P., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P94, DOI 10.1109/SCAM.2012.11
   Mouna A, 2019, 24 EUROPEAN C PATTER, P2019
   Mushtaq Z, 2015, 2015 INTERNATIONAL CONFERENCE ON OPEN SOURCE SYSTEMS & TECHNOLOGIES (ICOSST), P170, DOI 10.1109/ICOSST.2015.7396422
   Neitsch A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P140, DOI 10.1109/ICSM.2012.6405265
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Pfeiffer Rolf-Helge, 2012, Modelling Foundations and Applications. Proceedings 8th European Conference, ECMFA 2012, P178, DOI 10.1007/978-3-642-31491-9_15
   Romano D., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P437, DOI 10.1109/WCRE.2012.53
   Saboury A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P294, DOI 10.1109/SANER.2017.7884630
   Sheskin D.J., 2011, Handbook of Parametric and Nonparametric Statistical Procedures, DOI DOI 10.1201/9780429186196
   Soh Z, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P393, DOI 10.1109/SANER.2016.103
   Tan G, 2008, P 17 C SEC S SS 08, P365
   Tan G, 2006, P 2006 IEEE INT S SE, P97
   Tomassetti Federico, 2014, P 18 INT C EVALUATIO
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Xu BW, 2020, EMPIR SOFTW ENG, V25, P755, DOI 10.1007/s10664-019-09771-0
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Yin R.K., 2002, Applied Social Research Methods Series, V34
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1213, DOI 10.1109/TSE.2011.79
NR 59
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2022
VL 27
IS 5
AR 116
DI 10.1007/s10664-022-10161-2
PG 52
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1U7GT
UT WOS:000805577100002
DA 2024-07-18
ER

PT J
AU Rahman, MM
   Khomh, F
   Castelluccio, M
AF Rahman, Mohammad M.
   Khomh, Foutse
   Castelluccio, Marco
TI Works for Me! Cannot Reproduce - A Large Scale Empirical Study of
   Non-reproducible Bugs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug reproduction; Non-reproducibility; Empirical study; Grounded theory;
   Developer feedback; Reproducibility challenges; Key factors; Bug report
   classification; Model interpretation
ID LOCALIZATION; SENTIMENT
AB Software developers attempt to reproduce software bugs to understand their erroneous behaviours and to fix them. Unfortunately, they often fail to reproduce (or fix) them, which leads to faulty, unreliable software systems. However, to date, only a little research has been done to better understand what makes the software bugs non-reproducible. In this article, we conduct a multimodal study to better understand the non-reproducibility of software bugs. First, we perform an empirical study using 576 non-reproducible bug reports from two popular software systems (Firefox, Eclipse) and identify 11 key factors that might lead a reported bug to non-reproducibility. Second, we conduct a user study involving 13 professional developers where we investigate how the developers cope with non-reproducible bugs. We found that they either close these bugs or solicit for further information, which involves long deliberations and counter-productive manual searches. Third, we offer several actionable insights on how to avoid non-reproducibility (e.g., false-positive bug report detector) and improve reproducibility of the reported bugs (e.g., sandbox for bug reproduction) by combining our analyses from multiple studies (e.g., empirical study, developer study). Fourth, we explain the differences between reproducible and non-reproducible bug reports by systematically interpreting multiple machine learning models that classify these reports with high accuracy. We found that links to existing bug reports might help improve the reproducibility of a reported bug. Finally, we detect the connected bug reports to a non-reproducible bug automatically and further demonstrate how 93 bugs connected to 71 non-reproducible bugs from our dataset can offer complementary information (e.g., attachments, screenshots, program flows).
C1 [Rahman, Mohammad M.] Dalhousie Univ, Halifax, NS, Canada.
   [Khomh, Foutse] Polytech Montreal, Montreal, PQ, Canada.
   [Castelluccio, Marco] Mozilla Corp, Mountain View, CA USA.
C3 Dalhousie University; Universite de Montreal; Polytechnique Montreal
RP Rahman, MM (corresponding author), Dalhousie Univ, Halifax, NS, Canada.
EM masud.rahman@dal.ca; foutse.khomh@polymtl.ca; mcastelluccio@mozilla.com
RI Rahman, Masud/N-7453-2019
OI Rahman, Masud/0000-0003-3821-5990
FU Fonds de Recherche du Quebec (FRQ); Natural Sciences and Engineering
   Research Council of Canada (NSERC); Tenure-track startup grant, Faculty
   of Computer Science, Dalhousie University, Canada
FX This work was supported by Fonds de Recherche du Quebec (FRQ), the
   Natural Sciences and Engineering Research Council of Canada (NSERC), and
   Tenure-track startup grant, Faculty of Computer Science, Dalhousie
   University, Canada. We would also like to thank all the anonymous
   respondents to the survey.
CR Amoui M, 2013, IEEE WORK CONF MIN S, P173, DOI 10.1109/MSR.2013.6624025
   An L, 2019, EMPIR SOFTW ENG, V24, P1799, DOI 10.1007/s10664-018-9677-7
   [Anonymous], 2020, FIREFOX PROFILER
   [Anonymous], 2021, SHAPLEY VALUES
   [Anonymous], 2019, SOFTW FAIL CAUS 1 7
   [Anonymous], 2019, APACHE LUCENE CORE
   [Anonymous], 1995, 11 C UNC ART INT SAN, DOI DOI 10.1109/TGRS.2004.834800
   [Anonymous], 2013, RESEARCHER POSTS FAC
   [Anonymous], WEKA TOOLK
   [Anonymous], 2020, SRCML
   [Anonymous], 2022, WORKS ME
   [Anonymous], 2020, ICSME REPLICATION PA
   [Anonymous], 2020, DOXYGEN
   [Anonymous], 2020, PERNOSCO
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Breiman L., 2001, Mach. Learn., V45, P5
   Chaparro O, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P86, DOI 10.1145/3338906.3338947
   Chaparro O, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P218, DOI [10.1109/SANER.2019.8667985, 10.1109/saner.2019.8667985]
   Chaparro O, 2017, PROC IEEE INT CONF S, P376, DOI 10.1109/ICSME.2017.100
   Chaparro O, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/3106237.3106285
   Fagerland MW, 2012, BMC MED RES METHODOL, V12, DOI 10.1186/1471-2288-12-78
   Fan YR, 2020, IEEE T SOFTWARE ENG, V46, P495, DOI 10.1109/TSE.2018.2864217
   FURNAS GW, 1987, COMMUN ACM, V30, P964, DOI 10.1145/32206.32212
   Goyal A, 2017, E-INFORMATICA, V11, P103, DOI 10.5277/e-Inf170105
   Guestrin C., 2016, KDD16 P 22 ACM, P785, DOI DOI 10.1145/2939672.2939785
   Guo PJ, 2011, P ACM 2011 C COMP SU, P395, DOI [10.1145/1958824.1958887., DOI 10.1145/1958824.1958887]
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hindle A, 2019, EMPIR SOFTW ENG, V24, P902, DOI 10.1007/s10664-018-9643-4
   Dam HK, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P53, DOI 10.1145/3183399.3183424
   Jiarpakdee J, 2021, IEEE WORK CONF MIN S, P432, DOI 10.1109/MSR52588.2021.00055
   Jiarpakdee J, 2022, IEEE T SOFTWARE ENG, V48, P166, DOI 10.1109/TSE.2020.2982385
   Joorabchi ME, 2014, P 11 WORK C MIN SOFT, P62, DOI [10.1145/2597073.2597098, DOI 10.1145/2597073.2597098]
   LECESSIE S, 1992, APPL STAT-J ROY ST C, V41, P191
   Lin B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P94, DOI 10.1145/3180155.3180195
   Lundberg SM, 2020, NAT MACH INTELL, V2, P56, DOI 10.1038/s42256-019-0138-9
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Nayrolles M, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE QUALITIES AND THEIR DEPENDENCIES (SQUADE), P25
   O'Callahan R, 2017, 2017 USENIX ANNUAL TECHNICAL CONFERENCE (USENIX ATC '17), P377
   Parnin C, 2011, CONF PROC INT SYMP C, P197, DOI 10.1109/ICPC.2011.49
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSME.2014.90
   Quinlan J.R., 1993, C4 5 PROGRAMS MACHIN
   Rahman MM, 2019, EMPIR SOFTW ENG, V24, P1869, DOI 10.1007/s10664-018-9671-0
   Rahman MM, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P222, DOI 10.1145/2889160.2889244
   Rahman MS, 2020, POLITICS, GOVERNANCE AND DEVELOPMENT IN BANGLADESH, P12
   Ribeiro MT, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1135, DOI 10.1145/2939672.2939778
   ROYSTON JP, 1982, J R STAT SOC C-APPL, V31, P115
   Sarkar A, 2019, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSME.2019.00018
   Shafiq HA, 2014, AUTOMATED DEBUGGING
   Shi Z, 2014, INTERNATIONAL GEAR CONFERENCE 2014, P1011
   Socher R., 2013, P 2013 C EMP METH NA, V2013, P1631, DOI DOI 10.1371/JOURNAL.PONE.0073791
   STRUTZEL E, 1968, NURS RES, V17, P364
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P2544, DOI 10.1002/asi.21416
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Tian Y, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P44, DOI 10.1109/CSMR-WCRE.2014.6747213
   Tian Y, 2012, EUR CON SFTWR MTNCE, P385, DOI 10.1109/CSMR.2012.48
   Vyas D., 2014, COOP, P189
   Wang SW, 2016, J SOFTW-EVOL PROC, V28, P921, DOI 10.1002/smr.1801
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Wattanakriengkrai S, 2020, PREDICTING DEFECTIVE
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Xia X, 2016, IEEE T RELIAB, V65, P1094, DOI 10.1109/TR.2015.2484074
   Yang XL, 2016, PROC INT SYMP SOFTW, P127, DOI 10.1109/ISSRE.2016.33
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Zhao Y, 2019, PROC INT CONF SOFTW, P128, DOI 10.1109/ICSE.2019.00030
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
NR 72
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2022
VL 27
IS 5
AR 111
DI 10.1007/s10664-022-10153-2
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1U7GT
UT WOS:000805577100006
DA 2024-07-18
ER

PT J
AU Uddin, G
   Alam, O
   Serebrenik, A
AF Uddin, Gias
   Alam, Omar
   Serebrenik, Alexander
TI A qualitative study of developers' discussions of their problems and
   joys during the early COVID-19 months
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Developers' discussions; devRant; COVID-19; Sentiments
ID PANDEMIC INFLUENZA; TELEWORKING; IMPACT; WORK; SENTIMENT; BEHAVIORS;
   TOOL
AB Many software developers started to work from home on a short notice during the early periods of COVID-19. A number of previous papers have studied the wellbeing and productivity of software developers during COVID-19. The studies mainly use surveys based on predefined questionnaires. In this paper, we investigate the problems and joys that software developers experienced during the early months of COVID-19 by analyzing their discussions in online forum devRant, where discussions can be open and not bound by predefined survey questionnaires. The devRant platform is designed for developers to share their joys and frustrations of life. We manually analyze 825 devRant posts between January and April 12, 2020 that developers created to discuss their situation during COVID-19. WHO declared COVID-19 as pandemic on March 11, 2020. As such, our data offers us insights in the early months of COVID-19. We manually label each post along two dimensions: the topics of the discussion and the expressed sentiment polarity (positive, negative, neutral). We observed 19 topics that we group into six categories: Workplace & Professional aspects, Personal & Family well-being, Technical Aspects, Lockdown preparedness, Financial concerns, and Societal and Educational concerns. Around 49% of the discussions are negative and 26% are positive. We find evidence of developers' struggles with lack of documentation to work remotely and with their loneliness while working from home. We find stories of their job loss with little or no savings to fallback to. The analysis of developer discussions in the early months of a pandemic will help various stakeholders (e.g., software companies) make important decision early to alleviate developer problems if such a pandemic or similar emergency situation occurs in near future. Software engineering research can make further efforts to develop automated tools for remote work (e.g., automated documentation).
C1 [Uddin, Gias] Univ Calgary, Calgary, AB, Canada.
   [Alam, Omar] Trent Univ, Peterborough, ON, Canada.
   [Serebrenik, Alexander] Eindhoven Univ Technol, Eindhoven, Netherlands.
C3 University of Calgary; Trent University; Eindhoven University of
   Technology
RP Uddin, G (corresponding author), Univ Calgary, Calgary, AB, Canada.
EM gias.uddin@ucalgary.ca; omaralam@trentu.ca; a.serebrenik@tue.nl
OI Uddin, Gias/0000-0003-1376-095X; Serebrenik,
   Alexander/0000-0002-1418-0095
CR Ahmed T, 2017, IEEE INT CONF AUTOM, P106, DOI 10.1109/ASE.2017.8115623
   Albrech A., 1979, PROC JOINT SHAREGUID, P83
   [Anonymous], 2020, CORONAVIRUS LAYOFFS
   Bailey BP, 2001, HUMAN-COMPUTER INTERACTION - INTERACT'01, P593
   Baruch Y, 2000, NEW TECH WORK EMPLOY, V15, P34, DOI 10.1111/1468-005X.00063
   Baruch Y., 1996, J MANAGE PSYCHOL, V11, P50, DOI DOI 10.1108/02683949610129758
   Bezerra CIM, 2020, 34 BRAZILIAN S SOFTW
   Blake KD, 2010, EMERG INFECT DIS, V16, P212, DOI 10.3201/eid1602.090638
   Bracha HS, 2006, PREHOSPITAL DISASTER, V21, P290, DOI 10.1017/S1049023X00003897
   Butt Shariq Aziz, 2021, Lean and Agile Software Development. 5th International Conference, LASD 2021. Proceedings. Lecture Notes in Business Information Processing (LNBIP 408), P59, DOI 10.1007/978-3-030-67084-9_4
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Chong J, 2006, CSCW 06, P29, DOI [DOI 10.1145/1180875.1180882, 10.1145/1180875.1180882]
   ciodive, 2020, ON 3 SOFTW DEV SAY T
   Connor MO, 2022, J DECIS SYST, V31, P207, DOI 10.1080/12460125.2020.1861772
   Corbin J., 2015, BASICS QUALITATIVE R
   Coronavirus Unemployment, 2020, LAYOFFS JOLT AIRBNB
   Coronavirus W, 2020, Coronavirus disease
   Czerwinski Mary, 2004, P SIGCHI C HUM FACT, P175, DOI [10.1145/985692.985715, DOI 10.1145/985692.985715]
   Dall'Ora C, 2016, INT J NURS STUD, V57, P12, DOI 10.1016/j.ijnurstu.2016.01.007
   DiGiovanni C, 2004, BIOSECUR BIOTERROR, V2, P265, DOI 10.1089/bsp.2004.2.265
   Dingel JI, 2020, J PUBLIC ECON, V189, DOI 10.1016/j.jpubeco.2020.104235
   Donnelly N, 2015, NEW TECH WORK EMPLOY, V30, P47, DOI 10.1111/ntwe.12040
   Dubey S, 2020, DIAB MET SYND CLIN R, V14, P779, DOI 10.1016/j.dsx.2020.05.035
   Duxbury L, 1998, S INF TECHN MANAG, P218
   Evers KE, 2014, PSYCHOL REP, V114, P843, DOI 10.2466/13.01.PR0.114k25w4
   Fang Y., 2004, P 7 ANN HAWAII INT C, P10
   Ford D., 2021, ACM T SOFTW ENG METH, V31, P1
   Forsgren Nicole, 2021, ACM Queue, V19, P20, DOI 10.1145/3454122.3454124
   Fox D, 2014, DEVRANT
   Fucci G, 2021, IEEE WORK CONF MIN S, P403, DOI 10.1109/MSR52588.2021.00052
   G of Canada, 2020, CAN COVID 19 EC RESP
   Ganguly KK, 2020, ARXIV 200811636
   Girardi D, 2022, IEEE T SOFTWARE ENG, V48, P3326, DOI 10.1109/TSE.2021.3087906
   Gothoskar S, 2000, ECON POLIT WEEKLY, V35, P2293
   Graziotin D, 2019, HAPPINESS PRODUCTIVI
   Hanlon Jay, 2018, STACK OVERFLOW ISNT
   Harper CA, 2021, INT J MENT HEALTH AD, V19, P1875, DOI 10.1007/s11469-020-00281-5
   Hill EJ, 2003, J VOCAT BEHAV, V63, P220, DOI 10.1016/S0001-8791(03)00042-3
   Hudson W., 2013, ENCY HUMAN COMPUTER, V2nd
   Iacurci G., 2020, CNBC
   Islam MR, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1536, DOI 10.1145/3167132.3167296
   Islam MR, 2017, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2017.9
   Jaspan C, 2019, RETHINKING PRODUCTIV, P13, DOI [10.1007/978-1-4842-4221-6_2, DOI 10.1007/978-1-4842-4221-6_2]
   Johri A., 2013, SOCIOMATERIAL BRICOL
   Kaur Arvinder, 2018, 2018 Second International Conference on Electronics, Communication and Aerospace Technology (ICECA), P1170, DOI 10.1109/ICECA.2018.8474619
   Kim Y, 2015, DISASTER MED PUBLIC, V9, P145, DOI 10.1017/dmp.2014.87
   Ko Amy J., 2019, Rethinking Productivity in Software Engineering, P21
   Lim VK., 1998, WOMEN MANAGEMENT REV, DOI DOI 10.1108/09649429810237105
   Lin B, 2022, ACM TOSEM, V31
   Machado LS, 2021, IEEE SOFTWARE, V38, P38, DOI 10.1109/MS.2020.3040135
   medium, 2020, COVID 19 PAND IS IMP
   Meltzer MI, 1999, EMERG INFECT DIS, V5, P659, DOI 10.3201/eid0505.990507
   Meyer Andre N., 2017, Proceedings of the ACM on Human-Computer Interaction, V1, DOI 10.1145/3134714
   Meyer AN, 2017, INT SYMP EMP SOFTWAR, P105, DOI 10.1109/ESEM.2017.17
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Miller C, 2021, PROC INT CONF SOFTW, P624, DOI 10.1109/ICSE43902.2021.00064
   Monteiro de Mendonca Walter Lucas, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P596, DOI 10.1145/3422392.3422446
   Neufeld DJ, 2005, INFORM MANAGE-AMSTER, V42, P1037, DOI 10.1016/j.im.2004.12.001
   Nguyen V, 2011, 7 INT C PREDICTIVE M, P110
   NicCanna C, 2021, 2021 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING RESEARCH AND INDUSTRIAL PRACTICE (SER&IP 2021), P18, DOI 10.1109/SER-IP52554.2021.00010
   Novielli N, 2020, IEEE WORK CONF MIN S, P158, DOI 10.1145/3379597.3387446
   Novielli N, 2018, IEEE WORK CONF MIN S, P14, DOI 10.1145/3196398.3196453
   Oliveira Edson, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P586, DOI 10.1145/3422392.3422444
   Olson GM, 2000, HUM-COMPUT INTERACT, V15, P139, DOI 10.1207/S15327051HCI1523_4
   Ortu M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P480, DOI [10.1145/2901739.2903505, 10.1109/MSR.2016.059]
   Ozkaya I., 2020, UNANTICIPATED SCENAR
   Paiva E, 2010, INNOVATIONS IN COMPUTING SCIENCES AND SOFTWARE ENGINEERING, P99, DOI 10.1007/978-90-481-9112-3_17
   Parnin C, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P93
   PERRY DE, 1994, IEEE SOFTWARE, V11, P36, DOI 10.1109/52.300082
   Perry SJ, 2018, EUR J WORK ORGAN PSY, V27, P577, DOI 10.1080/1359432X.2018.1487402
   Prati G, 2011, RISK ANAL, V31, P645, DOI 10.1111/j.1539-6924.2010.01529.x
   Rahman A, 2020, ARXIV 200600586
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Roberto AJ, 2010, RAISING ALARM CALMIN
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Rodeghero P, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P41, DOI 10.1109/ICSE-SEIP52600.2021.00013
   Ronan KR, 2015, CURR PSYCHIAT REP, V17, DOI 10.1007/s11920-015-0589-6
   Rosa SL, 2020, SERGIOLAROSAPYDEVRAN
   Russo D, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P364, DOI 10.1109/ICSE-SEIP52600.2021.00048
   Russo D, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09945-9
   Sadeghloo T, 2022, INT J DISAST RISK RE, V76, DOI 10.1016/j.ijdrr.2022.103000
   Sadowsi C., 2019, Rethinking Productivity in Software Engineering, P39
   SHAVER P, 1987, J PERS SOC PSYCHOL, V52, P1061, DOI 10.1037//0022-3514.52.6.1061
   Silveira P, 2021, IEEE T SOFTWARE ENG
   Storey MA, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P928, DOI 10.1145/2950290.2983989
   Sullivan C., 2001, GENDER WORK ORGAN, V8, P123, DOI [10.1111/1468-0432.00125, DOI 10.1111/1468-0432.00125]
   Taha S, 2014, BRIT J HEALTH PSYCH, V19, P592, DOI 10.1111/bjhp.12058
   Teasdale E, 2012, BRIT J HEALTH PSYCH, V17, P44, DOI 10.1111/j.2044-8287.2011.02017.x
   Thommes EW, 2016, SPRINGER P MATH STAT, V185, P309, DOI 10.1007/978-3-319-43709-5_15
   Tremblay D.G., 2002, Women in Management Review
   Uddin G, 2019, IEEE T SOFTW ENG, V40
   Uddin G, 2015, IEEE SOFTWARE, V32, P68, DOI 10.1109/MS.2014.80
   Wang L, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09974-4
   Wang Y, 2021, EXTENDED ABSTRACTS OF THE 2021 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'21), DOI 10.1145/3411763.3451685
   Wilson M, 2004, NEW TECH WORK EMPLOY, V19, P207, DOI 10.1111/j.1468-005X.2004.00138.x
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   World Bank, 2020, The global economic outlook during the COVID-19 pandemic: a changed world
   Yang L, 2021, ARXIV 210302524
   Yang X., 2020, ARXIV 200513167
   Zger M, 2019, REDUCING INTERRUPTIO, P271
NR 101
TC 4
Z9 4
U1 2
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2022
VL 27
IS 5
AR 117
DI 10.1007/s10664-022-10156-z
PG 52
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1V2KB
UT WOS:000805924000001
PM 35692984
OA Bronze, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Amasaki, S
   Aman, H
   Yokogawa, T
AF Amasaki, Sousuke
   Aman, Hirohisa
   Yokogawa, Tomoyuki
TI An extended study on applicability and performance of homogeneous
   cross-project defect prediction approaches under homogeneous
   cross-company effort estimation situation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Cross-company effort estimation; Cross-project defect prediction;
   Empirical evaluation
ID COST ESTIMATION; SOFTWARE; MODELS; REGRESSION
AB Software effort estimation (SEE) models have been studied for decades. One of serious but typical situations for data-oriented models is the availability of datasets for training models. Cross-company software effort estimation (CCSEE) is a research topic to utilize project data outside an organization. The same problem was identified in software defect prediction research, and Cross-project defect prediction (CPDP) has been studied. CPDP and CCSEE shared the motivation and developed approaches for the same problem. A question arisen that CPDP approaches were applicable to CCSEE. This study explored this question with a survey and an empirical study focusing on homogeneous approaches. We first examined 24 homogeneous CPDP approach implementations provided in a CPDP framework and found more than half of the approaches were applicable. Next, we used the results of two past studies to check whether the applicable CPDP approaches covered strategies taken in past CPDP studies. The empirical experiment was then conducted to evaluate the estimation performance of the applicable CPDP approaches. CPDP approaches were configured with some machine learning techniques if available, and ten CCSEE dataset configurations were supplied for evaluation. The result was also compared with the results of those two past studies to find the commonalities and the differences between CPDP and CCSEE. The answers to the research questions revealed the our CPDP selection covered the strategies that CPDP approaches had taken. The empirical results supported the simple merge with no instance weighting, no feature selection, no data transformation, nor the simple voting. It was not necessarily surprising according CPDP and CCSEE studies, but had not been explored with CPDP approaches under CCSEE situation. A practical implication is: Combine cross-company data to make effort estimates.
C1 [Amasaki, Sousuke; Yokogawa, Tomoyuki] Okayama Prefectural Univ, Soja, Japan.
   [Aman, Hirohisa] Ehime Univ, Ctr Informat Technol, Matsuyama, Ehime, Japan.
C3 Okayama Prefectural University; Ehime University
RP Amasaki, S (corresponding author), Okayama Prefectural Univ, Soja, Japan.
EM amasaki@cse.oka-pu.ac.jp; aman@ehime-u.ac.jp; t-yokoga@cse.oka-pu.ac.jp
FU JSPS KAKENHI [18K11246, 21K11831, 21K11833]; Grants-in-Aid for
   Scientific Research [21K11833, 21K11831] Funding Source: KAKEN
FX This work was partially supported by JSPS KAKENHI under Grant No.
   18K11246, No. 21K11831, and No. 21K11833.
CR Amasaki S, 2020, PROCEEDINGS OF THE 16TH ACM INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, PROMISE 2020, P71, DOI 10.1145/3416508.3417118
   Amasaki S, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P96, DOI 10.1109/SEAA.2015.25
   [Anonymous], 1989, THESIS U QUEBEC MONT
   [Anonymous], 2013, P 9 INT C PREDICTIVE
   [Anonymous], 2002, Applied Statistics for Software Managers
   [Anonymous], 2012, P PROMISE 12
   Bennin KE, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P214, DOI 10.1109/QRS.2016.33
   Bin Y, 2017, INT SYMP EMP SOFTWAR, P354, DOI 10.1109/ESEM.2017.49
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Catolino G, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P99, DOI 10.1109/MOBILESoft.2019.00023
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   de Cabral A., 2021, J SYST SOFTW, V175
   Ferrucci F, 2019, LECT NOTES COMPUT SC, V11915, P280, DOI 10.1007/978-3-030-35333-9_20
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Frank E, 2016, The WEKA workbench. Online appendix for data mining: practical machine learning tools and techniques
   He P, 2015, INFORM SOFTWARE TECH, V59, P170, DOI 10.1016/j.infsof.2014.11.006
   Herbold S., 2013, P 9 INT C PREDICTIVE, P1
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Hosni M, 2018, SOFT COMPUT, V22, P5977, DOI 10.1007/s00500-017-2945-4
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Huang L., 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, P163, DOI DOI 10.1145/1858996
   Idri A, 2016, J SYST SOFTWARE, V118, P151, DOI 10.1016/j.jss.2016.05.016
   Jing XY, 2016, PROC INT CONF SOFTW, P607, DOI 10.1145/2884781.2884827
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kawata K, 2015, 3RD INTERNATIONAL CONFERENCE ON APPLIED COMPUTING AND INFORMATION TECHNOLOGY (ACIT 2015) 2ND INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND INTELLIGENCE (CSI 2015), P2, DOI 10.1109/ACIT-CSI.2015.104
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Khoshgoftaar TM, 2009, SOFTWARE QUAL J, V17, P25, DOI 10.1007/s11219-008-9058-3
   Kitchenham B., 1993, Proceedings First International Software Metrics Symposium (Cat. No.93TH0518-1), P11, DOI 10.1109/METRIC.1993.263805
   Kitchenham B, 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540444
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kocaguneli E, 2015, EMPIR SOFTW ENG, V20, P813, DOI 10.1007/s10664-014-9300-5
   Kocaguneli E, 2013, IEEE T SOFTWARE ENG, V39, P1040, DOI 10.1109/TSE.2012.88
   Kocaguneli E, 2011, INT SYMP EMP SOFTWAR, P255, DOI 10.1109/ESEM.2011.34
   Krishna R, 2019, IEEE T SOFTWARE ENG, V45, P1081, DOI 10.1109/TSE.2018.2821670
   Langdon WB, 2016, INFORM SOFTWARE TECH, V73, P16, DOI 10.1016/j.infsof.2016.01.003
   Li ZQ, 2019, IEEE T SOFTWARE ENG, V45, P391, DOI 10.1109/TSE.2017.2780222
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Lokan Chris., 2006, 2006 ACMIEEE INT S E, P75, DOI DOI 10.1145/1159733.1159747
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Mendes E, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P348, DOI 10.1109/METRIC.2004.1357920
   Mendes E, 2014, P EASE
   Mendes E, 2008, J SYST SOFTWARE, V81, P673, DOI 10.1016/j.jss.2007.07.044
   Mendes Emilia, 2009, P EASE, P11
   Mensah S, 2018, IEEE T RELIAB, V67, P1176, DOI 10.1109/TR.2018.2839718
   Mensah S, 2018, INFORM SOFTWARE TECH, V94, P1, DOI 10.1016/j.infsof.2017.09.010
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Menzies T, 2006, IEEE T SOFTWARE ENG, V32, P883, DOI 10.1109/TSE.2006.114
   Menzies T, 2017, EMPIR SOFTW ENG, V22, P2658, DOI 10.1007/s10664-016-9472-2
   Minku LL, 2019, EMPIR SOFTW ENG, V24, P3153, DOI 10.1007/s10664-019-09686-w
   Minku LL, 2017, AUTOMAT SOFTW ENG, V24, P499, DOI 10.1007/s10515-016-0209-7
   Minku LL, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P446, DOI 10.1145/2568225.2568228
   Minku LL, 2013, INFORM SOFTWARE TECH, V55, P1512, DOI 10.1016/j.infsof.2012.09.012
   Minku Leandro L., 2017, P PROMISE 17, P12, DOI [10.1145/3127005.3127007, DOI 10.1145/3127005.3127007]
   Nam J., 2017, IEEE Transactions on Software Engineering, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Peters F, 2012, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.2012.6227194
   Phannachitta P, 2017, EMPIR SOFTW ENG, V22, P474, DOI 10.1007/s10664-016-9434-8
   Port D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P51
   Pospieszny P, 2018, J SYST SOFTWARE, V137, P184, DOI 10.1016/j.jss.2017.11.066
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   Ryu D, 2016, EMPIR SOFTW ENG, V21, P43, DOI 10.1007/s10664-014-9346-4
   Ryu D, 2015, J COMPUT SCI TECH-CH, V30, P969, DOI 10.1007/s11390-015-1575-5
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Sehra SK, 2017, INFORM SOFTWARE TECH, V91, P1, DOI 10.1016/j.infsof.2017.06.002
   Shen Y, 2013, IEEE IMTC P, P1045
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Sigweni B, 2016, P EASE 16
   Tabassum S, 2020, PROC INT CONF SOFTW, P554, DOI 10.1145/3377811.3380403
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tong SS, 2016, ASIA PAC SOFWR ENG, P169, DOI [10.1109/APSEC.2016.12, 10.1109/APSEC.2016.033]
   Turhan B, 2014, EUROMICRO CONF PROC, P285, DOI 10.1109/SEAA.2014.41
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Uchigaki S., 2012, Proceedings of the 2012 13th ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel & Distributed Computing (SNPD 2012), P476, DOI 10.1109/SNPD.2012.34
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   Wen JF, 2012, INFORM SOFTWARE TECH, V54, P41, DOI 10.1016/j.infsof.2011.09.002
   Yan M, 2019, IEEE T SOFTWARE ENG, V45, P1211, DOI 10.1109/TSE.2018.2831232
   Zhang F., 2014, P 11 WORK C MIN SOFT, P182, DOI [10.1145/2597073.2597078, DOI 10.1145/2597073.2597078]
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhang W, 2015, INFORM SOFTWARE TECH, V58, P58, DOI 10.1016/j.infsof.2014.10.005
   Zhang Y, 2015, P INT COMP SOFTW APP, P264, DOI 10.1109/COMPSAC.2015.58
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 90
TC 1
Z9 1
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 46
DI 10.1007/s10664-021-10103-4
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YP5ZD
UT WOS:000748700600001
DA 2024-07-18
ER

PT J
AU Camilli, M
   Russo, B
AF Camilli, Matteo
   Russo, Barbara
TI Modeling Performance of Microservices Systems with Growth Theory
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Performance requirement; Time series analysis; Point processes; Growth
   theory; Microservices systems
ID SOFTWARE-RELIABILITY MODEL
AB Context The microservices architectural style is gaining momentum in the IT industry. This style does not guarantee that a target system can continuously meet acceptable performance levels. The ability to study the violations of performance requirements and eventually predict them would help practitioners to tune techniques like dynamic load balancing or horizontal scaling to achieve the resilience property. Objective The goal of this work is to study the violations of performance requirements of microservices through time series analysis and provide practical instruments that can detect resilient and non-resilient microservices and possibly predict their performance behavior. Method We introduce a new method based on growth theory to model the occurrences of violations of performance requirements as a stochastic process. We applied our method to an in-vitro e-commerce benchmark and an in-production real-world telecommunication system. We interpreted the resulting growth models to characterize the microservices in terms of their transient performance behavior. Results Our empirical evaluation shows that, in most of the cases, the non-linear S-shaped growth models capture the occurrences of performance violations of resilient microservices with high accuracy. The bounded nature associated with this models tell that the performance degradation is limited and thus the microservice is able to come back to an acceptable performance level even under changes in the nominal number of concurrent users. We also detect cases where linear models represent a better description. These microservices are not resilient and exhibit constant growth and unbounded performance violations over time. The application of our methodology to a real in-production system identified additional resilience profiles that were not observed in the in-vitro experiments. These profiles show the ability of services to react differently to the same solicitation. We found that when a service is resilient it can either decrease the rate of the violations occurrences in a continuous manner or with repeated attempts (periodical or not). Conclusions We showed that growth theory can be successfully applied to study the occurences of performance violations of in-vitro and in-production real-world systems. Furthermore, the cost of our model calibration heuristics, based on the mathematical expression of the selected non-linear growth models, is limited. We discussed how the resulting models can shed some light on the trend of performance violations and help engineers to spot problematic microservice operations that exhibit performance issues. Thus, meaningful insights from the application of growth theory have been derived to characterize the behavior of (non) resilient microservices operations.
C1 [Camilli, Matteo; Russo, Barbara] Free Univ Bozen Bolzano, Fac Comp Sci, Bolzano, Italy.
C3 Free University of Bozen-Bolzano
RP Camilli, M (corresponding author), Free Univ Bozen Bolzano, Fac Comp Sci, Bolzano, Italy.
EM matteo.camilli@unibz.it; barbara.russo@unibz.it
OI CAMILLI, MATTEO/0000-0003-2491-5267
FU Free University of Bozen-Bolzano, Italy
FX This work has been partly supported by the SARDECH project funded by the
   Free University of Bozen-Bolzano, Italy. We thank the ERICSSON company,
   Ricardo Britto, and Alberto Avritzer for providing us with the data and
   the information needed to carry out the in-production experiments with
   the telecommunication system.
CR ABDELGHALY AA, 1986, IEEE T SOFTWARE ENG, V12, P950, DOI 10.1109/TSE.1986.6313050
   Alshuqayran N, 2016, IEEE INT CONF SERV, P44, DOI 10.1109/SOCA.2016.15
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], 1992, Data networks
   [Anonymous], 2016, MIRAI DDOS SOURCE CO
   Antonakakis M, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P1093
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Assuncao Wesley K. G., 2020, SPLC '20: Proceedings of the 24th ACM Conference on Systems and Software Product Line: Volume A, DOI 10.1145/3382025.3414942
   Avritzer A, 2021, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '21), P61, DOI 10.1145/3427921.3450246
   Avritzer A, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C), P62, DOI 10.1109/ICSA-C52384.2021.00016
   Avritzer A, 2020, J SYST SOFTWARE, V165, DOI 10.1016/j.jss.2020.110564
   Avritzer A, 2018, LECT NOTES COMPUT SC, V11048, P159, DOI 10.1007/978-3-030-00761-4_11
   Avritzer A, 2019, COMPANION OF THE 2019 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '19), P39, DOI 10.1145/3302541.3311961
   Bassin KA, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING - CASE STUDIES, PROCEEDINGS, P103, DOI 10.1109/CSSRE.1997.637852
   Benaddy M., 2011, Proceedings of the 2011 Eighth International Conference on Information Technology: New Generations (ITNG), P41, DOI 10.1109/ITNG.2011.15
   Benni Benjamin, 2020, SPLC '20: Proceedings of the 24th ACM Conference on Systems and Software Product Line: Volume A, DOI 10.1145/3382025.3414979
   Biffl S., 2002, Empirical Software Engineering, V7, P257, DOI 10.1023/A:1016396232448
   Calinescu R, 2011, IEEE T SOFTWARE ENG, V37, P387, DOI 10.1109/TSE.2010.92
   Camilli Matteo, 2020, 2020 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW), P189, DOI 10.1109/ISSREW51248.2020.00071
   Cinque M, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1638
   David H.A., 2001, Annotated Readings in the History of Statistics. Springer Series in Statistics, P65
   Davis J., 2005, P WORKSH OP SOURC SO, P1, DOI DOI 10.1145/1083258.1083273
   Draper N. R., 1998, APPL REGRESSION ANAL, V326
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   Glantz S. A., 2001, Primer of Applied Regression & Analysis of Variance
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   GOEL AL, 1985, IEEE T SOFTWARE ENG, V11, P1411, DOI 10.1109/TSE.1985.232177
   Gokhale SS, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P34, DOI 10.1109/HASE.1998.731593
   Grambow M, 2020, PROCEEDINGS OF THE 35TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING (SAC'20), P232, DOI 10.1145/3341105.3373875
   Heinrich R, 2017, ICPE'17: COMPANION OF THE 2017 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P223, DOI 10.1145/3053600.3053653
   HOSSAIN SA, 1993, IEEE T RELIAB, V42, P604, DOI 10.1109/24.273589
   Huang H.H., 2010, NONLINEAR REGRESSION, V3rd
   IANNINO A, 1984, IEEE T SOFTWARE ENG, V10, P687, DOI 10.1109/TSE.1984.5010297
   Iannino A, 1990, SOFTWARE RELIABILITY, V30, P85, DOI DOI 10.1016/S0065-2458(08)60299-5
   Ibe OC Ibe O C, 2013, 1 BASIC CONCEPTS PRO, VSecond
   Jiang ZM, 2015, IEEE T SOFTWARE ENG, V41, P1091, DOI 10.1109/TSE.2015.2445340
   Kececioglu D., 1991, RELIABILITY ENG HDB, V2
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   Kumar R, 2019, INT J SYST ASSUR ENG, V10, P242, DOI 10.1007/s13198-019-00777-x
   KVALSETH TO, 1983, B PSYCHONOMIC SOC, V21, P79
   Lewis James, 2014, Microservices
   Li PL, 2005, 2005 11th International Symposium on Software Metrics (METRICS), P288
   Li PL, 2003, SELECTING DEFECT PRE
   Mukherjee J, 2014, IEEE ICST WORKSHOP, P363, DOI 10.1109/ICSTW.2014.57
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   Ohishi K, 2005, P INT COMP SOFTW APP, P405
   Pau Luo Li, 2004, Software Engineering Notes, V29, P263, DOI 10.1145/1041685.1029930
   Pedrycz W, 2012, APPL SOFT COMPUT, V12, P1985, DOI 10.1016/j.asoc.2012.02.004
   Port D, 2018, IEEE SOFTWARE, V35, P58, DOI 10.1109/MS.2017.4541055
   PUKELSHEIM F, 1994, AM STAT, V48, P88, DOI 10.2307/2684253
   Rahmani C., 2009, EXPT ANAL OPEN SOURC
   Richardson C., 2019, Microservices Patterns
   Rigdon S., 2000, WILEY SERIES PROBABI
   Rossi B, 2010, IFIP ADV INF COMM TE, V319, P268
   Satoh D, 2002, JPN J IND APPL MATH, V19, P39, DOI 10.1007/BF03167447
   Shen CY, 2020, INT J INFECT DIS, V96, P582, DOI 10.1016/j.ijid.2020.04.085
   Shibata K, 2007, 13TH PACIFIC RIM INTERNATIONAL SYMPOSIUM ON DEPENDABLE COMPUTING, PROCEEDINGS, P35, DOI 10.1109/PRDC.2007.46
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Spiess Andrej-Nikolai, 2010, BMC Pharmacology, V10, P6, DOI 10.1186/1471-2210-10-6
   Stringfellow C., 2002, Empirical Software Engineering, V7, P319, DOI 10.1023/A:1020515105175
   Succi G, 2003, EMPIR SOFTW ENG, V8, P197, DOI 10.1023/A:1023014713253
   Taber W, 2014, P 8 ACM IEEE INT S E
   Tamura Y, 2005, 11th International Conference on Parallel and Distributed Systems Workshops, Vol II, Proceedings,, P488
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   Nguyen TT, 2012, PROC INT CONF SOFTW, P1297, DOI 10.1109/ICSE.2012.6227095
   Ueda T, 2016, I S WORKL CHAR PROC, P85, DOI 10.1109/IISWC.2016.7581269
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   Virene E.P., 1968, Annual Symposium on Reliability Proceedings, P265
   Vögele C, 2018, SOFTW SYST MODEL, V17, P443, DOI 10.1007/s10270-016-0566-5
   Wert A, 2018, STHE KARLSRUHE SERIE
   Wood A, 1996, COMPUTER, V29, P69, DOI 10.1109/2.544240
   YAMADA S, 1983, IEEE T RELIAB, V32, P475, DOI 10.1109/TR.1983.5221735
   YAMADA S, 1986, IEEE T RELIAB, V35, P19, DOI 10.1109/TR.1986.4335332
NR 73
TC 7
Z9 8
U1 2
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 39
DI 10.1007/s10664-021-10088-0
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YE8TK
UT WOS:000741391800001
PM 35035268
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Wijerathna, L
   Aleti, A
   Bi, TT
   Tang, A
AF Wijerathna, Laksri
   Aleti, Aldeida
   Bi, Tingting
   Tang, Antony
TI Mining and relating design contexts and design patterns from Stack
   Overflow
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Design context; Design pattern; Collective knowledge mining; Stack
   overflow; Empirical analysis
ID ARCHITECTURE; REPRESENTATION
AB Design contexts are factors that shape a design, and whilst they are recognised by developers, they are typically tacit. Unlike software requirements, software engineering researchers have paid little attention to design contexts and there is little or no systematic research on how design contexts influence design. In this paper, we conduct an empirical investigation using Stack Overflow with the aim of mining design context knowledge that is related to design patterns. We chose to study design patterns because they are clear and identifiable. In this work, we develop a new taxonomy of design context terms related to design patterns. We introduce a new automated mining approach, DPC Miner, for mining design context knowledge from Stack Overflow. Finally, we analyse the Stack Overflow posts and present how design context impacts decisions about design patterns in practice.
C1 [Wijerathna, Laksri; Aleti, Aldeida; Bi, Tingting] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Tang, Antony] Vrije Univ, Amsterdam, Netherlands.
   [Tang, Antony] Swinburne Univ Technol, Melbourne, Vic, Australia.
C3 Monash University; Vrije Universiteit Amsterdam; Swinburne University of
   Technology
RP Wijerathna, L (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
EM laksri.wijerathna@monash.edu; aldeida.aleti@monash.edu;
   Tingting.Bi@monash.edu; atang@swin.edu.au
RI Aleti, Aldeida/AAE-8486-2019; Bi, Tingting/ABC-7609-2020
OI Aleti, Aldeida/0000-0002-1716-690X; Wijerathna,
   Laksri/0000-0001-5681-2241
CR Adam, 2007, ENT SYST AR FUT MM 1
   Ahmad A, 2018, DATA TECHNOL APPL, V52, P190, DOI 10.1108/DTA-07-2017-0054
   Ali I, 2018, IEEE ACCESS, V6, P73928, DOI 10.1109/ACCESS.2018.2883077
   Allamanis M, 2013, IEEE WORK CONF MIN S, P207, DOI 10.1109/MSR.2013.6624029
   Alreshedy K, 2018, ARXIV180907954
   Ampatzoglou A, 2013, J SYST SOFTWARE, V86, P1945, DOI 10.1016/j.jss.2013.03.063
   [Anonymous], 2000, ARCHITECTURAL STYLES
   Babar MA, 2009, SOFTWARE ARCHITECTURE KNOWLEDGE MANAGEMENT: THEORY AND PRACTICE, P69, DOI 10.1007/978-3-642-02374-3_5
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Bedjeti A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P117, DOI 10.1109/ICSA.2017.26
   Belecheanu R, 2006, R&D MANAGE, V36, P517, DOI 10.1111/j.1467-9310.2006.00451.x
   Bengio Y, 2003, J MACH LEARN RES, V3, P1137, DOI 10.1162/153244303322533223
   Beyer S, 2020, EMPIR SOFTW ENG, V25, P2258, DOI 10.1007/s10664-019-09758-x
   Bi TT, 2018, ASIA PAC SOFWR ENG, P49, DOI 10.1109/APSEC.2018.00019
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Borg M, 2017, IEEE T SOFTWARE ENG, V43, P675, DOI 10.1109/TSE.2016.2620458
   Buschmann F, 1993, PATTERN ORIENTED SOF
   Cai XY, 2016, P INT COMP SOFTW APP, P63, DOI 10.1109/COMPSAC.2016.124
   Carlson J, 2016, PROCEEDINGS 2016 1ST INTERNATIONAL WORKSHOP ON DECISION MAKING IN SOFTWARE ARCHITECTURE, P9, DOI 10.1109/MARCH.2016.6
   Casamayor A, 2012, KNOWL-BASED SYST, V30, P78, DOI 10.1016/j.knosys.2011.12.009
   Chattopadhyay S, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P33, DOI 10.1145/3195836.3195861
   Chen CY, 2016, PROC IEEE INT CONF S, P356, DOI 10.1109/ICSME.2016.17
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Clarke P, 2012, INFORM SOFTWARE TECH, V54, P433, DOI 10.1016/j.infsof.2011.12.003
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dybå T, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P432, DOI 10.1109/ISESE.2005.1541852
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   Evans E., 2011, DOMAIN DRIVEN DESIGN
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Feitosa D, 2019, INFORM SOFTWARE TECH, V105, P1, DOI 10.1016/j.infsof.2018.07.014
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Galster M, 2012, INT CONF QUAL SOFTW, P167, DOI 10.1109/QSIC.2012.35
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gokyer Gokhan, 2008, 2008 The Third International Conference on Software Engineering Advances (ICSEA), P400, DOI 10.1109/ICSEA.2008.28
   Goodman JT, 2001, COMPUT SPEECH LANG, V15, P403, DOI 10.1006/csla.2001.0174
   Groher I, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P11, DOI 10.1109/WICSA.2015.27
   Harper KE, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P123, DOI 10.1109/WICSA.2015.22
   Harris ZS, 1954, WORD, V10, P146, DOI 10.1080/00437956.1954.11659520
   Harrison NB, 2007, LECT NOTES COMPUT SC, V4758, P263
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Hussain S, 2017, APPL SOFT COMPUT, V58, P225, DOI 10.1016/j.asoc.2017.04.043
   Jacobson I., 2004, OBJECT ORIENTED SOFT
   Junho Choi, 2011, Proceedings of the 2011 14th International Conference on Network-Based Information Systems (NBiS 2011), P618, DOI 10.1109/NBiS.2011.104
   Kawaguchi S, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P195, DOI 10.1109/IWPSE.2003.1231227
   Khomh F, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P274
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kyakulumbye S., 2019, Electronic Journal of Knowledge Management, V17, P49
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Linstead E., 2007, P 22 IEEE ACM INT C, P461, DOI [10.1145/1321631.1321709, DOI 10.1145/1321631.1321709]
   Linstead E., 2007, P 4 INT WORKSHOP MIN, P30
   Liu D, 2022, IEEE T SOFTWARE ENG, V48, P1228, DOI 10.1109/TSE.2020.3017336
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Marcus A, 2005, PROG COMPREHEN, P33, DOI 10.1109/WPC.2005.33
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Mikolov T., 2013, INT C LEARN REPR SCO, DOI 10.48550/ARXIV.1301.3781
   Mirakhorli M, 2016, IEEE T SOFTWARE ENG, V42, P206, DOI 10.1109/TSE.2015.2479217
   Mirakhorli M, 2012, PROC INT CONF SOFTW, P639, DOI 10.1109/ICSE.2012.6227153
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Papatheocharous E, 2015, ACM INT C P SERIES, V07, DOI [10.1145/2797433.2797483, DOI 10.1145/2797433.2797483]
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Poshyvanyk D, 2006, INT C PROGRAM COMPRE, P137, DOI 10.1109/ICPC.2006.17
   Power K, 2018, EUR C SOFTW ARCH POW, V1, P147, DOI [10.1007/978-3-030-00761-4, DOI 10.1007/978-3-030-00761-4]
   Riaz M, 2015, INFORM SOFTWARE TECH, V65, P14, DOI 10.1016/j.infsof.2015.04.002
   Richle D, 2011, LECT NOTES COMPUT SC, V6510, P1, DOI 10.1007/978-3-642-19432-0_1
   Rosenfeld R, 2000, P IEEE, V88, P1270, DOI 10.1109/5.880083
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Schmidt D. C., 2013, Pattern-oriented software architecture, patterns for concurrent and networked objects, V2
   Soliman M, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P128, DOI 10.1109/WICSA.2016.13
   Song F, 1999, PROCEEDINGS OF THE EIGHTH INTERNATIONAL CONFERENCE ON INFORMATION KNOWLEDGE MANAGEMENT, CIKM'99, P316, DOI 10.1145/319950.320022
   Tang A, 2008, LECT NOTES COMPUT SC, V5292, P306, DOI 10.1007/978-3-540-88030-1_25
   Tang A, 2014, J SYST SOFTWARE, V88, P87, DOI 10.1016/j.jss.2013.09.044
   Thomas SW, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1138, DOI 10.1145/1985793.1986020
   Tian FC, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P91, DOI 10.1109/ICSA.2019.00018
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Tse-Hsun Chen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P189, DOI 10.1109/MSR.2012.6224280
   Velasco-Elizondo P, 2016, SCI COMPUT PROGRAM, V121, P176, DOI 10.1016/j.scico.2015.12.007
   Washizaki H, 2020, IEEE INTERNET THINGS, V7, P10091, DOI 10.1109/JIOT.2020.3003528
   Xu BW, 2017, IEEE INT CONF AUTOM, P706, DOI 10.1109/ASE.2017.8115681
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Yang J, 2014, LECT NOTES COMPUT SC, V8538, P266
   Zaiontz C., 2021, REAL STAT USING EXCE
   Zamudio SA, 2012, IEEE LAT AM T, V10, P2010, DOI 10.1109/TLA.2012.6272488
   Zanoni M, 2015, J SYST SOFTWARE, V103, P102, DOI 10.1016/j.jss.2015.01.037
   Zhang C, 2012, IEEE T SOFTWARE ENG, V38, P1213, DOI 10.1109/TSE.2011.79
   Zhang WE, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P1221, DOI 10.1145/3038912.3052701
   Zhang YG, 2006, IEEE INTL SYMPOS WEB, P41
NR 88
TC 5
Z9 5
U1 0
U2 16
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 8
DI 10.1007/s10664-021-10034-0
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WL2BB
UT WOS:000710216100004
DA 2024-07-18
ER

PT J
AU Petrulio, F
   Sawant, AA
   Bacchelli, A
AF Petrulio, Fernando
   Sawant, Anand Ashok
   Bacchelli, Alberto
TI The indolent lambdification of Java Understanding the support for lambda
   expressions in the Java ecosystem
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Lambda expressions; Functional paradigm; API; Java
ID USAGE; BIAS
AB As Java 8 introduced functional interfaces and lambda expressions to the Java programming language, the JDK API was changed to introduce support for lambda expressions, thus allowing consumers to define lambda functions when using Java's collections. While the JDK API allows for a functional paradigm, for API consumers to be able to completely embrace Java's new functional features, third-party APIs must also support lambda expressions. To understand the current state of the Java ecosystem, we investigate (i) the extent to which third-party Java APIs have changed their interfaces, (ii) why or why not they introduce functional interface support and (iii) in the case the API has changed its interface how it does so. We also investigate the consumers' perspective, particularly their ease in using lambda expressions in Java with APIs. We perform our investigation by manually analyzing the top 50 popular Java APIs, conducting in-person and email interviews with 23 API producers, and surveying 110 developers. We find that only a minority of the top 50 APIs support functional interfaces, the rest does not support them, predominantly in the interest of backward compatibility. Java 7 support is still greatly desirable due to enterprise projects not migrating to newer versions of Java. This suggests that the Java ecosystem is stagnant and that the introduction of new language features will not be enough to save it from the advent of new languages such as Kotlin (JVM based) and Rust (non-JVM based).
C1 [Petrulio, Fernando; Bacchelli, Alberto] Univ Zurich, Zurich, Switzerland.
   [Sawant, Anand Ashok] Univ Calif Davis, Davis, CA 95616 USA.
C3 University of Zurich; University of California System; University of
   California Davis
RP Sawant, AA (corresponding author), Univ Calif Davis, Davis, CA 95616 USA.
EM fpetrulio@ifi.uzh.ch; asawant@ucdavis.edu; bacchelli@ifi.uzh.ch
RI Bacchelli, Alberto/ABG-5379-2020
OI Bacchelli, Alberto/0000-0003-0193-6823; Sawant,
   Anand/0000-0002-5816-8020
FU Swiss National Science Foundation through the SNF [PP00P2_170529]; NSF
   CISE (SHF LARGE) [1414172]; Sandia National Laboratories
FX Alberto Bacchelli and Fernando Petrulio gratefully acknowledge the
   support of the Swiss National Science Foundation through the SNF Project
   No. PP00P2_170529. Anand Ashok Sawant gratefully acknowledges support
   from NSF CISE (SHF LARGE) Grant No. 1414172, and from Sandia National
   Laboratories.
CR [Anonymous], 2003, Diffusion of Innovations
   BAILAR B, 1977, J MARKETING RES, V14, P337, DOI 10.2307/3150772
   BASS FM, 1980, J BUS, V53, pS51, DOI 10.1086/296099
   BENNETT K, 1995, IEEE SOFTWARE, V12, P19, DOI 10.1109/52.363157
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   Blinded, 2020, INDOLENT LAMBDIFICAT
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Callaú O, 2013, EMPIR SOFTW ENG, V18, P1156, DOI 10.1007/s10664-012-9203-2
   Capek P, 2015, 2015 INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND COMPUTATIONAL INTELLIGENCE (CSCI), P865, DOI 10.1109/CSCI.2015.90
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Costa D., 2017, P 8 ACM SPEC INT C P, P389, DOI [10.1145/3030207.3030221, DOI 10.1145/3030207.3030221]
   Dyer R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P779, DOI 10.1145/2568225.2568295
   Fielding RT, 1999, COMMUN ACM, V42, P42, DOI 10.1145/299157.299167
   Flanigan T., 2008, AM ASS PUBLIC OPINIO, P4136, DOI DOI 10.4135/9781071909621.N12
   FURNHAM A, 1986, PERS INDIV DIFFER, V7, P385, DOI 10.1016/0191-8869(86)90014-0
   Goetz B, 2010, PROJECT LAMBDA
   Goetz B, 2013, STATE LAMBDA
   Goetz Brian., 2013, State of the Lambda: Libraries Edition
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Hanenberg S, 2015, INT SUMMER SCH GENER, P45
   HILDUM DC, 1956, J ABNORM SOC PSYCH, V53, P108, DOI 10.1037/h0040518
   Hoppe M, 2013, ACM SIGPLAN NOTICES, V48, P457, DOI [10.1145/2509136.2509528, 10.1145/2544173.2509528]
   Iqbal Aftab, 2014, INT SCHOLARLY RES NO, V2014
   Johnson R. B., 2004, ED RES, V33, P14, DOI DOI 10.3102/0013189X033007014
   Khatchadourian R, 2018, ARXIV180310198
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Lucas W, 2019, PROCEEDINGS OF THE XXXIII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, SBES 2019, P187, DOI 10.1145/3350768.3350791
   Mazinanian D, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133909
   Meho LI, 2006, J AM SOC INF SCI TEC, V57, P1284, DOI 10.1002/asi.20416
   Meyerovich Leo A., 2012, P ACM INT S NEW IDEA, P39
   Myers BA, 2016, COMPUTER, V49, P44, DOI 10.1109/MC.2016.200
   Myers BA, 2016, COMMUN ACM, V59, P62, DOI 10.1145/2896587
   Nielebock S, 2019, EMPIR SOFTW ENG, V24, P103, DOI 10.1007/s10664-018-9622-9
   Oracle, 2014, JAV 8 REL NOT
   Oracle, 2015, JAV 7 INF
   Parnin C., 2011, PROCEEDING 8 WORKING, P3
   Qiu D, 2017, J SYST SOFTWARE, V123, P160, DOI 10.1016/j.jss.2016.10.017
   Raemaekers S, 2014, IEEE INT WORK C SO, P215, DOI 10.1109/SCAM.2014.30
   Sawant AA, 2017, EMPIR SOFTW ENG, V22, P1348, DOI 10.1007/s10664-016-9444-6
   Silverthorne V, 2020, GITLAB CAN WE HELP S
   Srivastava P., 2009, International Journal of Qualitative Methods, V8, P76, DOI [10.1177/160940690900800107, DOI 10.1177/160940690900800107]
   Thorne S, 1997, RES NURS HEALTH, V20, P169
   TIOBE, 2021, TIOB IND MAY 2021
   Uesbeck PM, 2016, PROC INT CONF SOFTW, P760, DOI 10.1145/2884781.2884849
   Wu D, 2015, EMPIRICAL STUDY ADOP
   Xavier L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P138, DOI 10.1109/SANER.2017.7884616
NR 46
TC 3
Z9 3
U1 8
U2 51
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 134
DI 10.1007/s10664-021-10039-9
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA WA1MP
UT WOS:000702658300001
OA hybrid
DA 2024-07-18
ER

PT J
AU Silva, CC
   Galster, M
   Gilson, F
AF Silva, Camila Costa
   Galster, Matthias
   Gilson, Fabian
TI Topic modeling in software engineering research
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Topic modeling; Text mining; Natural language processing; Literature
   analysis
ID BUG REPORT DETECTION; INFORMATION-RETRIEVAL; CLASSIFIER CONFIGURATION;
   FEATURE LOCATION; SEARCH ENGINE; STAR RATINGS; IMPACT; CODE;
   RECOMMENDATION; COMBINATION
AB Topic modeling using models such as Latent Dirichlet Allocation (LDA) is a text mining technique to extract human-readable semantic "topics" (i.e., word clusters) from a corpus of textual documents. In software engineering, topic modeling has been used to analyze textual data in empirical studies (e.g., to find out what developers talk about online), but also to build new techniques to support software engineering tasks (e.g., to support source code comprehension). Topic modeling needs to be applied carefully (e.g., depending on the type of textual data analyzed and modeling parameters). Our study aims at describing how topic modeling has been applied in software engineering research with a focus on four aspects: (1) which topic models and modeling techniques have been applied, (2) which textual inputs have been used for topic modeling, (3) how textual data was "prepared" (i.e., pre-processed) for topic modeling, and (4) how generated topics (i.e., word clusters) were named to give them a human-understandable meaning. We analyzed topic modeling as applied in 111 papers from ten highly-ranked software engineering venues (five journals and five conferences) published between 2009 and 2020. We found that (1) LDA and LDA-based techniques are the most frequent topic modeling techniques, (2) developer communication and bug reports have been modelled most, (3) data pre-processing and modeling parameters vary quite a bit and are often vaguely reported, and (4) manual topic naming (such as deducting names based on frequent words in a topic) is common.
C1 [Silva, Camila Costa; Galster, Matthias; Gilson, Fabian] Univ Canterbury, Christchurch, New Zealand.
C3 University of Canterbury
RP Silva, CC (corresponding author), Univ Canterbury, Christchurch, New Zealand.
EM camila.costasilva@pg.canterbury.ac.nz; mgalster@ieee.org;
   fabian.gilson@canterbury.ac.nz
RI Gilson, Fabian/ABC-2955-2020
OI Gilson, Fabian/0000-0002-1465-3315; Costa Silva, Camila
   Mariane/0000-0002-3690-1711
CR Abdellatif A, 2020, IEEE WORK CONF MIN S, P174, DOI 10.1145/3379597.3387472
   Abdellatif TM, 2019, INFORM SOFTWARE TECH, V115, P44, DOI 10.1016/j.infsof.2019.07.006
   Aggarwal Charu C, 2012, A survey of text clustering algorithms, P163, DOI [10.1007/978-1-4614-3223-4, DOI 10.1007/978-1-4614-3223-46]
   Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   Ahasanuzzaman M, 2020, EMPIR SOFTW ENG, V25, P1493, DOI 10.1007/s10664-019-09743-4
   Ahmed S, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239524
   Ali N, 2015, EMPIR SOFTW ENG, V20, P442, DOI 10.1007/s10664-014-9315-y
   Alipour A, 2013, IEEE WORK CONF MIN S, P183, DOI 10.1109/MSR.2013.6624026
   Altarawy D, 2018, J SYST SOFTWARE, V142, P21, DOI 10.1016/j.jss.2018.04.018
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], 2009, ENCY DATABASE SYSTEM, DOI DOI 10.1007/978-0-387-39940-9_488
   ARC ARC, 2012, EXC RES AUSTR ERA
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Bagherzadeh M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P432, DOI 10.1145/3338906.3338939
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Bajracharya S, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P111, DOI 10.1109/MSR.2009.5069489
   Bajracharya SK, 2012, EMPIR SOFTW ENG, V17, P424, DOI 10.1007/s10664-010-9144-6
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bavota G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559935
   Beitzel S M., 2009, Encyclopedia of database systems, P1691, DOI [DOI 10.1007/978-0-387-39940-9_492, DOI 10.1007/978-0-387-39940-9492, 10.1007/978-0-387-39940-9_492]
   Belle AB, 2016, INFORM SOFTWARE TECH, V74, P1, DOI 10.1016/j.infsof.2016.01.008
   Bi TT, 2018, J SYST SOFTWARE, V144, P533, DOI 10.1016/j.jss.2018.07.055
   Biggers LR, 2014, EMPIR SOFTW ENG, V19, P465, DOI 10.1007/s10664-012-9224-x
   Binkley D, 2015, J SYST SOFTWARE, V101, P30, DOI 10.1016/j.jss.2014.11.013
   Blasco D, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106235
   Blei DM, 2004, ADV NEUR IN, V16, P17
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Brank J., 2011, Encyclopedia of Machine Learning, P397, DOI [10.1007/978-0-387-30164-8_298, DOI 10.1007/978-0-387-30164-8_298]
   Canfora G, 2014, EMPIR SOFTW ENG, V19, P1, DOI 10.1007/s10664-012-9214-z
   Cao BQ, 2017, INFORM SOFTWARE TECH, V90, P40, DOI 10.1016/j.infsof.2017.05.001
   Capiluppi A, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106279
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Catolino G, 2019, J SYST SOFTWARE, V152, P165, DOI 10.1016/j.jss.2019.03.002
   Chang J., 2009, AISTATS
   Chang J., 2009, Advances in neural information processing systems, P22, DOI DOI 10.5555/2984093.2984126
   Chang J, 2010, ANN APPL STAT, V4, P124, DOI 10.1214/09-AOAS309
   Chatterjee Preetha, 2019, IEEE WORK CONF MIN S, P490, DOI [DOI 10.1109/MSR.2019.00075, 10.1109/MSR.2019.00075]
   Chen H, 2019, J SYST SOFTWARE, V156, P283, DOI 10.1016/j.jss.2019.07.033
   Chen LC, 2020, PROC INT CONF SOFTW, P112, DOI 10.1145/3377811.3380436
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chen TH, 2017, J SYST SOFTWARE, V129, P79, DOI 10.1016/j.jss.2016.05.015
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Choetkiertikul M, 2017, EMPIR SOFTW ENG, V22, P1223, DOI 10.1007/s10664-016-9496-7
   Croft W. B., 2010, SEARCH ENGINES INFOR
   Cui D, 2019, PROC INT CONF SOFTW, P584, DOI 10.1109/ICSE.2019.00069
   Damevski K, 2018, IEEE T SOFTWARE ENG, V44, P1100, DOI 10.1109/TSE.2017.2748134
   De Lucia A, 2014, EMPIR SOFTW ENG, V19, P1383, DOI 10.1007/s10664-013-9285-5
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Demissie BF, 2020, EMPIR SOFTW ENG, V25, P5084, DOI 10.1007/s10664-020-09879-8
   Dietz L., 2007, Proceedings of the 24th international conference on Machine learning, P233, DOI DOI 10.1145/1273496.1273526
   Dit B, 2013, EMPIR SOFTW ENG, V18, P277, DOI 10.1007/s10664-011-9194-4
   El Mezouar M, 2018, EMPIR SOFTW ENG, V23, P1704, DOI 10.1007/s10664-017-9559-4
   El Zarif O, 2020, IEEE WORK CONF MIN S, P339, DOI 10.1145/3379597.3387456
   Fowkes J, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P649, DOI 10.1145/2889160.2889171
   Fu Y, 2015, INFORM SOFTWARE TECH, V57, P369, DOI 10.1016/j.infsof.2014.05.017
   Gao CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P48, DOI 10.1145/3180155.3180218
   Gopalakrishnan R, 2017, PROC INT CONF SOFTW, P15, DOI 10.1109/ICSE.2017.10
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Griffiths TL, 2004, P NATL ACAD SCI USA, V101, P5228, DOI 10.1073/pnas.0307752101
   Haghighi Aria, 2009, P HUMAN LANGUAGE TEC, P362, DOI DOI 10.3115/1620754.1620807
   Han JX, 2020, EMPIR SOFTW ENG, V25, P2694, DOI 10.1007/s10664-020-09819-6
   Haque M.M., 2020, P 14 ACM IEEE INT S, P1, DOI [10.1007/978-3-030-03008-7_87-1, DOI 10.1007/978-3-030-03008-7_87-1]
   Hariri N, 2013, IEEE T SOFTWARE ENG, V39, P1736, DOI 10.1109/TSE.2013.39
   Henss S, 2012, PROC INT CONF SOFTW, P793, DOI 10.1109/ICSE.2012.6227139
   Hindle A., 2011, P 8 WORK C MIN SOFTW, P163, DOI DOI 10.1145/1985441.1985466
   Hindle A, 2016, EMPIR SOFTW ENG, V21, P368, DOI 10.1007/s10664-015-9387-3
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P479, DOI 10.1007/s10664-014-9312-1
   Hindle A, 2013, EMPIR SOFTW ENG, V18, P1125, DOI 10.1007/s10664-012-9209-9
   Hoffman M.D., 2010, NIPS, V2, P5
   Hofmann T, 1999, SIGIR'99: PROCEEDINGS OF 22ND INTERNATIONAL CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P50, DOI 10.1145/312624.312649
   Hu HY, 2019, EMPIR SOFTW ENG, V24, P7, DOI 10.1007/s10664-018-9617-6
   Hu HY, 2018, EMPIR SOFTW ENG, V23, P3442, DOI 10.1007/s10664-018-9604-y
   Hu W, 2013, IEEE WORK CONF MIN S, P419, DOI 10.1109/MSR.2013.6624058
   Jiang H, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3344158
   Jiang H, 2017, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2017.12
   Jipeng Q, 2020, SHORT TEXT TOPIC MOD, DOI [10.1109/TKDE.2020.2992485, DOI 10.1109/TKDE.2020.2992485]
   Jo Yohan, 2011, P 4 ACM INT C WEB SE, P815, DOI DOI 10.1145/1935826.1935932
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Kakas AC, 2011, ENCY MACHINE LEARNIN, P40, DOI [10.1007/978-0-387-30164-8_28, DOI 10.1007/978-0-387-30164-8_28]
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Layman L, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P303, DOI 10.1145/2901739.2901760
   Le TDB, 2017, EMPIR SOFTW ENG, V22, P2237, DOI 10.1007/s10664-016-9484-y
   Leach R. J., 2016, INTRO SOFTWARE ENG
   Lee DD, 1999, NATURE, V401, P788, DOI 10.1038/44565
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Lian XL, 2020, INFORM SOFTWARE TECH, V118, DOI 10.1016/j.infsof.2019.106196
   Lin TY, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P539, DOI 10.1145/2566486.2567980
   Liu YL, 2020, IEEE WORK CONF MIN S, P443, DOI 10.1145/3379597.3387440
   Liu YZ, 2017, J SYST SOFTWARE, V133, P126, DOI 10.1016/j.jss.2017.08.024
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Luo Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P559, DOI 10.1145/2950290.2950344
   Mahmoud A, 2017, EMPIR SOFTW ENG, V22, P1965, DOI 10.1007/s10664-016-9473-1
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Manning CD, 2008, INTRO INFORM RETRIEV, DOI [10.33899/csmj.2008.163987, DOI 10.33899/CSMJ.2008.163987]
   Mantyla MV, 2018, MEASURING LDA TOPIC, DOI [10.1145/3239235.3267435, DOI 10.1145/3239235.3267435]
   Martin W, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P435, DOI 10.1145/2950290.2950320
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1067, DOI 10.1007/s10664-015-9375-7
   Mehrotra R, 2013, SIGIR'13: THE PROCEEDINGS OF THE 36TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH & DEVELOPMENT IN INFORMATION RETRIEVAL, P889
   Miner G, 2012, PRACTICAL TEXT MINING AND STATISTICAL ANALYSIS FOR NON-STRUCTURED TEXT DATA APPLICATIONS, P1
   Moslehi P, 2020, EMPIR SOFTW ENG, V25, P4873, DOI 10.1007/s10664-020-09874-z
   Moslehi P, 2018, IEEE WORK CONF MIN S, P192, DOI 10.1145/3196398.3196439
   Moslehi P, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P259, DOI 10.1109/MSR.2016.034
   Murali V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P151, DOI 10.1145/3106237.3106284
   Nabli H, 2018, J SYST SOFTWARE, V146, P233, DOI 10.1016/j.jss.2018.09.069
   Naguib H, 2013, IEEE WORK CONF MIN S, P22, DOI 10.1109/MSR.2013.6623999
   Nayebi M, 2018, EMPIR SOFTW ENG, V23, P2764, DOI 10.1007/s10664-018-9601-1
   Nguyen V.-A., 2014, P ADV NEURAL INFORM, P3671
   Noei E, 2019, EMPIR SOFTW ENG, V24, P1964, DOI 10.1007/s10664-019-09684-y
   Noei E, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P283, DOI 10.1145/3236024.3236044
   Noei E, 2016, INFORM SOFTWARE TECH, V75, P135, DOI 10.1016/j.infsof.2016.03.007
   Pagano D, 2013, EMPIR SOFTW ENG, V18, P1090, DOI 10.1007/s10664-012-9211-2
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Pérez F, 2018, INFORM SOFTWARE TECH, V103, P188, DOI 10.1016/j.infsof.2018.06.017
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pettinato M, 2019, INFORM SOFTWARE TECH, V114, P121, DOI 10.1016/j.infsof.2019.06.011
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377660
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Poursabzi-Sangdeh F, 2021, CHI '21: PROCEEDINGS OF THE 2021 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3411764.3445315
   Ramage Daniel., 2009, EMNLP, DOI DOI 10.3115/1699510.1699543
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Revelle M, 2011, EMPIR SOFTW ENG, V16, P773, DOI 10.1007/s10664-011-9159-7
   Röder M, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P399, DOI 10.1145/2684822.2685324
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Rosenberg CM, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239248
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Savage T., 2010, TOPICXP EXPLORING TO, DOI [10.1109/ICSM.2010.5609654, DOI 10.1109/ICSM.2010.5609654]
   SHANNON CE, 1948, BELL SYST TECH J, V27, P379, DOI 10.1002/j.1538-7305.1948.tb01338.x
   Shimagaki J, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268927
   Silva B, 2016, INFORM SOFTWARE TECH, V75, P56, DOI 10.1016/j.infsof.2016.03.006
   Silva LL, 2019, J SYST SOFTWARE, V152, P196, DOI 10.1016/j.jss.2019.03.014
   Soliman M, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P128, DOI 10.1109/WICSA.2016.13
   Somasundaram K., 2012, Proceedings of the 5th India Software Engineering Conference, ISEC '12, P125, DOI DOI 10.1145/2134254.2134276
   Souza LBL, 2019, INFORM SOFTWARE TECH, V111, P37, DOI 10.1016/j.infsof.2019.03.009
   Steyvers M, 2010, LATENT SEMANTIC ANAL, V3, P993, DOI [DOI 10.1016/S0364-0213(01)00040-4, 10.1145/1806338.1806450%, DOI 10.1145/1806338.1806450%]
   Sun XB, 2017, J SYST SOFTWARE, V134, P355, DOI 10.1016/j.jss.2017.09.021
   Sun XB, 2016, 2016 17TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNPD), P357, DOI 10.1109/SNPD.2016.7515925
   Sun XB, 2015, INFORM SOFTWARE TECH, V66, P1, DOI 10.1016/j.infsof.2015.05.003
   Taba SES, 2017, J SYST SOFTWARE, V131, P491, DOI 10.1016/j.jss.2016.07.010
   Tairas R, 2009, EMPIR SOFTW ENG, V14, P33, DOI 10.1007/s10664-008-9089-1
   Tamrawi A, 2011, P 19 ACM SIGSOFT S 1, P365, DOI [DOI 10.1145/2025113.2025163, 10.31274/etd-180810-1814, DOI 10.31274/ETD-180810-1814]
   Tang J, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P5
   Tantithamthavorn C, 2018, INFORM SOFTWARE TECH, V102, P160, DOI 10.1016/j.infsof.2018.06.001
   Teh YW, 2006, J AM STAT ASSOC, V101, P1566, DOI 10.1198/016214506000000302
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Thomas SW, 2013, IEEE T SOFTWARE ENG, V39, P1427, DOI 10.1109/TSE.2013.27
   Tiarks R., 2014, P WORK C MIN SOFTW R, P272
   Ting K.M., 2011, Encyclopedia of Machine Learning, DOI DOI 10.1007/978-0-387-30164-8_652
   Treude Christoph, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P84, DOI 10.1109/MSR.2019.00022
   Tse-Hsun Chen, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P189, DOI 10.1109/MSR.2012.6224280
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wallach Hanna M., 2009, Advances in neural information processing systems, P1973, DOI DOI 10.1007/S10708-008-9161-9
   Wang Chong, 2011, P 17 ACM SIGKDD INT, P448, DOI [DOI 10.1145/2020408.2020480, 10.1145/2020408.2020480]
   Wang W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P224, DOI 10.1109/MSR.2015.28
   Weng J., 2010, P 3 ACM INT C WEB SE, P261, DOI [10.1145/1718487.1718520, DOI 10.1145/1718487.1718520]
   WOLD S, 1987, CHEMOMETR INTELL LAB, V2, P37, DOI 10.1016/0169-7439(87)80084-9
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Xing Wei, 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P178
   Yan M, 2016, INFORM SOFTWARE TECH, V73, P37, DOI 10.1016/j.infsof.2016.01.005
   Yan M, 2016, J SYST SOFTWARE, V113, P296, DOI 10.1016/j.jss.2015.12.019
   Yang XL, 2017, INFORM SOFTWARE TECH, V90, P27, DOI 10.1016/j.infsof.2017.04.007
   Ye DH, 2017, EMPIR SOFTW ENG, V22, P375, DOI 10.1007/s10664-016-9430-z
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
   Zhang E., 2009, Average Precision, DOI [DOI 10.1007/978-0-387-39940-9482, 10.1007/978-0-387-39940-9_482, DOI 10.1007/978-0-387-39940-9_482]
   Zhang T, 2016, J SYST SOFTWARE, V117, P166, DOI 10.1016/j.jss.2016.02.034
   Zhang Y, 2018, EMPIR SOFTW ENG, V23, P2279, DOI 10.1007/s10664-017-9585-2
   Zhao NW, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P315, DOI 10.1145/3368089.3409672
   Zhao WNX, 2011, LECT NOTES COMPUT SC, V6611, P338, DOI 10.1007/978-3-642-20161-5_34
   Zhao Y, 2016, 2016 2ND INTERNATIONAL CONFERENCE ON SOCIAL SCIENCE, MANAGEMENT AND ECONOMICS (SSME 2016), P6, DOI 10.1109/WCNC.2016.7565056
   Zou J, 2017, INFORM SOFTWARE TECH, V84, P19, DOI 10.1016/j.infsof.2016.12.003
NR 177
TC 25
Z9 26
U1 4
U2 28
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 120
DI 10.1007/s10664-021-10026-0
PG 62
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UM2AZ
UT WOS:000693140600002
OA hybrid
DA 2024-07-18
ER

PT J
AU Pellegrin, F
   Yucel, Z
   Monden, A
   Leelaprute, P
AF Pellegrin, Florian
   Yucel, Zeynep
   Monden, Akito
   Leelaprute, Pattara
TI Task estimation for software company employees based on computer
   interaction logs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Log file processing; Automated monitoring; Bayesian estimation;
   Hierarchical recognition
ID HEALTH-CARE; RECOGNITION; PERFORMANCE; PROJECT; SMOTE
AB Digital tools and services collect a growing amount of log data. In the software development industry, such data are integral and boast valuable information on user and system behaviors with a significant potential of discovering various trends and patterns. In this study, we focus on one of those potential aspects, which is task estimation. In that regard, we perform a case study by analyzing computer recorded activities of employees from a software development company. Specifically, our purpose is to identify the task of each employee. To that end, we build a hierarchical framework with a 2-stage recognition and devise a method relying on Bayesian estimation which accounts for temporal correlation of tasks. After pre-processing, we run the proposed hierarchical scheme to initially distinguish infrequent and frequent tasks. At the second stage, infrequent tasks are discriminated between them such that the task is identified definitively. The higher performance rate of the proposed method makes it favorable against the association rule-based methods and conventional classification algorithms. Moreover, our method offers significant potential to be implemented on similar software engineering problems. Our contributions include a comprehensive evaluation of a Bayesian estimation scheme on real world data and offering reinforcements against several challenges in the data set (samples with different measurement scales, dependence characteristics, imbalance, and with insignificant pieces of information).
C1 [Pellegrin, Florian] INSA Rennes, Dept Comp Sci, 20 Ave Buttes Coesmes, F-35700 Rennes, France.
   [Pellegrin, Florian] Ecole Technol Super, Dept Comp Sci, 1100 Notre Dame St W, Montreal, PQ H3C 1K3, Canada.
   [Yucel, Zeynep; Monden, Akito] Okayama Univ, Dept Comp Sci, Kita Ku, 3-1-1 Tsushima Naka, Okayama 7008530, Japan.
   [Leelaprute, Pattara] Kasetsart Univ, Fac Engn, Dept Comp Engn, 50 Ngamwongwan Rd, Bangkok 10900, Thailand.
C3 Universite de Rennes; Institut National des Sciences Appliquees de
   Rennes; University of Quebec; Ecole de Technologie Superieure - Canada;
   Okayama University; Kasetsart University
RP Yucel, Z (corresponding author), Okayama Univ, Dept Comp Sci, Kita Ku, 3-1-1 Tsushima Naka, Okayama 7008530, Japan.
EM Florian.Pellegrin@insa-rennes.fr; zeynep@okayama-u.ac.jp;
   monden@okayama-u.ac.jp; pattara.l@ku.ac.th
RI Yucel, Zeynep/AAW-8179-2021; Yucel, Zeynep/V-9340-2019; Yucel,
   Zeynep/E-7906-2015
OI Yucel, Zeynep/0000-0003-3404-4485
FU JSPS KAKENHI [JP18K18168, JP20H05706]; Okayama University Dispatch
   Project
FX This work was supported by JSPS KAKENHI Grant Numbers JP18K18168 and
   JP20H05706. The results of this research are funded by Okayama
   University Dispatch Project for Female Faculties.
CR ABB Inc, 2017, ABB DEV INT DAT
   Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Ahmed A, 2016, SOFTWARE PROJECT MAN
   Alemdar H, 2017, J AMB INTEL SMART EN, V9, P209, DOI 10.3233/AIS-170427
   Alpaydin E., 2016, Machine learning: the new AI
   Amlekar R, 2018, IEEE WORK CONF MIN S, P86, DOI 10.1145/3196398.3196471
   Anand K, 2017, PROCEEDINGS OF THE 2017 INTERNATIONAL CONFERENCE ON INVENTIVE COMMUNICATION AND COMPUTATIONAL TECHNOLOGIES (ICICCT), P456, DOI 10.1109/ICICCT.2017.7975239
   [Anonymous], 2016, 2016 Twenty Second National Conference on Communication (NCC)
   [Anonymous], 2015, ENTERPRISE BUSINESS
   [Anonymous], 2012, INT J EMERGING TECHN
   Bao LF, 2018, EMPIR SOFTW ENG, V23, P1313, DOI 10.1007/s10664-017-9547-8
   Beller M, 2019, IEEE T SOFTWARE ENG, V45, P261, DOI 10.1109/TSE.2017.2776152
   Bernardi S, 2018, EMPIR SOFTW ENG, V23, P3394, DOI 10.1007/s10664-018-9606-9
   Bogarin A, 2018, WIRES DATA MIN KNOWL, V8, DOI 10.1002/widm.1230
   Brdiczka O, 2010, IUI 2010, P285
   Caballé S, 2013, CLUSTER COMPUT, V16, P829, DOI 10.1007/s10586-013-0256-9
   Caldeira J, 2019, 2019 INTERNATIONAL CONFERENCE ON PROCESS MINING (ICPM 2019), P65, DOI 10.1109/ICPM.2019.00020
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen L, 2019, Hum. Act. Recognit. Behav. Anal., P23
   Chernov S, 2008, P PERS INF MAN WORKS, V155
   Chernov S, 2008, P INT ACM SIGIR C RE, P894
   Choi H, 2016, SCI PROGRAMMING-NETH, V2016, DOI 10.1155/2016/6208358
   Coman ID, 2007, JOINT M EUR SOFTW EN, P579
   Damevski K, 2017, IEEE T SOFTWARE ENG, V43, P359, DOI 10.1109/TSE.2016.2592905
   Delias P, 2015, KNOWL-BASED SYST, V84, P203, DOI 10.1016/j.knosys.2015.04.012
   Devaurs D, 2012, APPL ARTIF INTELL, V26, P58, DOI 10.1080/08839514.2012.629522
   Dingsoyr T, 2016, IEEE SOFTWARE, V33, P106, DOI 10.1109/MS.2016.100
   Dragunov A., 2005, P 10 INT C INTELLIGE, P75, DOI DOI 10.1145/1040830.1040855
   Eclipse Foundation, 2010, FILT UDC DAT
   Embrechts P, 2013, MATH METHOD OPER RES, V77, P423, DOI 10.1007/s00186-013-0436-7
   Fernández A, 2018, J ARTIF INTELL RES, V61, P863, DOI 10.1613/jair.1.11192
   Forsati R, 2015, INFORM RETRIEVAL J, V18, P167, DOI 10.1007/s10791-015-9252-4
   Gatta R, 2018, PROC INT C TOOLS ART, P647, DOI 10.1109/ICTAI.2018.00103
   Hakim A, 2019, E LEARNING PROCESS A, V1193, P1
   Harris D., 2010, DIGITAL DESIGN COMPU
   Hochstein L., 2005, PROC 10 EUROPEAN SOF, P356, DOI [DOI 10.1145/1095430.1081762, 10.1145/1081706.1081762, DOI 10.1145/1081706.1081762]
   Jalali A, 2016, LECT NOTES BUS INF P, V261, P16, DOI 10.1007/978-3-319-45321-7_2
   Jalote P, 2019, IEEE T SOFTWARE ENG
   Johnson Philip M., 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P81
   Johnson PM, 2003, PROC INT CONF SOFTW, P641, DOI 10.1109/ICSE.2003.1201249
   Kalenkova AA, 2017, SOFTW SYST MODEL, V16, P1019, DOI 10.1007/s10270-015-0502-0
   Karahasanovic A, 2015, PERS UBIQUIT COMPUT, V19, P839, DOI 10.1007/s00779-015-0865-9
   KaVe Project, 2018, DATASETS
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Koldijk Saskia, 2012, P 30 EUR C COGN ERG, P152, DOI [10.1145/2448136.2448170, DOI 10.1145/2448136.2448170]
   Leemans M, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P502, DOI 10.1109/SANER.2018.8330248
   Maalej W, 2017, J SYST SOFTWARE, V128, P267, DOI 10.1016/j.jss.2016.11.033
   MacKay D., 2003, INFORM THEORY INFERE
   Martin N, 2021, IEEE T SERV COMPUT, V14, P1837, DOI 10.1109/TSC.2019.2912163
   Mazza R., 2012, 1st Moodle Research Conference Proceedings, P132
   McLeod L, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978803
   Meyer AN, 2020, IEEE T SOFTW ENG, P1
   Meyer AN, 2017, IEEE T SOFTWARE ENG, V43, P1178, DOI 10.1109/TSE.2017.2656886
   Mirza HT, 2015, CYBERNET SYST, V46, P320, DOI 10.1080/01969722.2015.1012372
   Monden A, 2012, IEICE T INF SYST, VE95D, P2169, DOI 10.1587/transinf.E95.D.2169
   Montgomery D.C., 2010, Applied Statistics and Probability for Engineers (Edicao: 6)
   Moriconi R, 2020, MACH LEARN, V109, P1925, DOI 10.1007/s10994-020-05899-z
   Obregon J, 2019, IEEE ACCESS, V7, P48024, DOI 10.1109/ACCESS.2019.2906081
   Oram A.Wilson., 2010, Making Software: What Really Works, and Why We Believe It
   PARSONS HM, 1974, SCIENCE, V183, P922, DOI 10.1126/science.183.4128.922
   Partington Andrew, 2015, ACM Transactions on Management Information Systems, V5, DOI 10.1145/2629446
   Perry DE., 1995, SOFTW PROCESS, V5, P111
   Proksch S, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P250, DOI 10.1109/SANER.2017.7884626
   Ramachandran KM., 2014, Mathematical statistics with applications in R
   Rashid T, 2016, MIST'16: PROCEEDINGS OF THE INTERNATIONAL WORKSHOP ON MANAGING INSIDER SECURITY THREATS, P47, DOI 10.1145/2995959.2995964
   Rojas E, 2016, J BIOMED INFORM, V61, P224, DOI 10.1016/j.jbi.2016.04.007
   Rovani M, 2015, EXPERT SYST APPL, V42, P9236, DOI 10.1016/j.eswa.2015.07.040
   Rovetta S, 2019, SMART INNOV SYST TEC, V103, P197, DOI 10.1007/978-3-319-95095-2_19
   Russo B, 2015, EMPIR SOFTW ENG, V20, P879, DOI 10.1007/s10664-014-9303-2
   Shen J., 2006, 2006 International Conference on Intelligent User Interfaces, P86, DOI 10.1145/1111449.1111473
   Shen J., 2007, PROC IJCAI 07, P2868
   Shimizu R, 2018, P IPSJ SIGSE WINT WO, V2018, P30
   Soto-Valero C, 2018, IEEE WORK CONF MIN S, P110, DOI 10.1145/3196398.3196452
   Suthipornopas P, 2017, IEICE T INF SYST, VE100D, P462, DOI 10.1587/transinf.2016EDP7222
   Tax N, 2018, LECT NOTE NETW SYST, V15, P251, DOI 10.1007/978-3-319-56994-9_18
   van der Aalst W.M.P., 2015, BPM-Driving innovation in a digital world, P105, DOI 10.1007/978-3-319-14430-6_8
   Vialardi C, 2008, J UNIVERS COMPUT SCI
   Viertel FP, 2017, SOFTWARETECHNIK TREN, V37
   Vijayasarathy LR, 2016, IEEE SOFTWARE, V33, P86, DOI 10.1109/MS.2015.26
   Vuong T., 2017, WEAR UBIQUIT TECHNOL, V1, P1
   Wagner S., 2018, ARXIV180106475, P1, DOI [10.48550/arXiv.1801.06475, DOI 10.48550/ARXIV.1801.06475]
   Wickramasinghe Vathsala, 2015, Strategic Outsourcing, V8, P138, DOI 10.1108/SO-02-2015-0007
   Yucel Z, 2020, SOFTWARE APPL CUSTOM
   Yucel Z, 2020, SUPPLEMENTAL MAT DET
   Yucel Z, 2021, **DATA OBJECT**, DOI 10.5281/zenodo.4500028
   Zou LJ, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P6, DOI [10.1109/ICSM.2012.6405247, 10.1109/PowerCon.2012.6401422]
NR 86
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 98
DI 10.1007/s10664-021-10006-4
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UJ9IK
UT WOS:000691591200001
DA 2024-07-18
ER

PT J
AU Vescan, A
   Pintea, A
   Linsbauer, L
   Egyed, A
AF Vescan, Andreea
   Pintea, Adrian
   Linsbauer, Lukas
   Egyed, Alexander
TI Genetic programming for feature model synthesis: a replication study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Feature models; Replication study; Reverse engineering; Software product
   lines
AB Software Product Lines (SPLs) make it possible to configure a single system based on features in order to create many different variants and cater to a wide range of customers with varying requirements. This configuration space is often modeled using Feature Models (FMs). However, in practice, the SPL (and consequently the FM) is often created after a set of variants has already been created manually. Automating the task of reverse engineering a feature model that describes a set of variants makes the process of adopting an SPL easier. The genetic programming pipeline is a good fit for feature models and has been shown to produce good reverse engineering results. In this paper, we replicate the results of such an existing approach with a larger set of feature models and investigate the effects of various genetic programming parameters and operators on the results. The design of our replication experiments employs three perspectives: duplicate the exact conditions using various features models, study the interaction of two parameters of the genetic programming approach, and optimize the values for the population and generation parameters and for the mutation and crossover operators. Results reinforce the previously obtained outcome, the original study being confirmed. The relations between the number of features and number of generations, respectively number of features and size of populations were also investigated and best values based on obtained results are provided. The current study also aimed to optimize various parameters of the genetic programming approach, the interpretation of those experiments discovering concrete values.
C1 [Vescan, Andreea; Pintea, Adrian] Babes Bolyai Univ, Comp Sci Dept, Cluj Napoca, Romania.
   [Linsbauer, Lukas] Tech Univ Carolo Wilhelmina Braunschweig, Inst Software Engn & Automot Informat, Braunschweig, Germany.
   [Egyed, Alexander] Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
C3 Babes Bolyai University from Cluj; Braunschweig University of
   Technology; Johannes Kepler University Linz
RP Egyed, A (corresponding author), Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
EM avescan@cs.ubbcluj.ro; adrian.pintea1@stud.ubbcluj.ro;
   l.linsbauer@tu-braunschweig.de; alexander.egyed@jku.at
RI Egyed, Alexander/E-2632-2017; Vescan, Andreea/C-6040-2008
OI Vescan, Andreea/0000-0002-9049-5726
FU Johannes Kepler University Linz
FX Open access funding provided by Johannes Kepler University Linz.
CR Acher M, 2012, VAMOS, DOI 10.1145/2110147.2110153
   [Anonymous], 2013, P 7 INT WORKSH VAR M, DOI DOI 10.1145/2430502.2430530
   [Anonymous], 2010, PRIMER TAGUCHI METHO
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P1763, DOI 10.1007/s10664-016-9462-4
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Benavides D., 2007, PROCEEDING 1 INT WOR, P129
   Carver J. C., 2010, INT WORKSH REPL EMP, P2
   Carver JC, 2014, EMPIR SOFTW ENG, V19, P267, DOI 10.1007/s10664-013-9290-8
   Derrac J, 2011, SWARM EVOL COMPUT, V1, P3, DOI 10.1016/j.swevo.2011.02.002
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Fagerholm F, 2019, INT SYMP EMP SOFTWAR, P162, DOI DOI 10.1109/esem.2019.8870161
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Haslinger E. N., 2011, 2011 18th Working Conference on Reverse Engineering, P308, DOI 10.1109/WCRE.2011.45
   Haslinger EN, 2013, LECT NOTES COMPUT SC, V7793, P53, DOI 10.1007/978-3-642-37057-1_5
   Juristo N, 2009, INT SYMP EMP SOFTWAR, P357
   Linsbauer L, 2014, LECT NOTES COMPUT SC, V8636, P153
   Lopez-Herrejon Roberto Erick, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P168, DOI 10.1007/978-3-642-33119-0_13
   Lopez-Herrejon RE, 2015, J SYST SOFTWARE, V103, P353, DOI 10.1016/j.jss.2014.10.037
   Carvalho MLL, 2018, J SYST SOFTWARE, V136, P74, DOI 10.1016/j.jss.2017.11.004
   Parwananta H, 2013, IND ENG MANAG SYST, V12, P181, DOI 10.7232/iems.2013.12.3.181
   Phadke M.S., 1995, QUALITY ENG USING RO
   Sageghi J, 2015, APPL SOFT COMPUT, V30, P567, DOI 10.1016/j.asoc.2015.02.013
   Segura S., 2012, Proceedings of the Sixth International Workshop on Variability Modeling of Software-Intensive Systems, P63, DOI DOI 10.1145/2110147.2110155
   She S, 2014, INFORM SOFTWARE TECH, V56, P1122, DOI 10.1016/j.infsof.2014.01.012
   Shepperd M, 2018, INFORM SOFTWARE TECH, V99, P120, DOI 10.1016/j.infsof.2018.01.006
   Yin R.K., 2009, CASE STUDIES DESIGN, V4th
NR 28
TC 3
Z9 3
U1 1
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 58
DI 10.1007/s10664-021-09947-7
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RS6YZ
UT WOS:000643923500003
OA hybrid
DA 2024-07-18
ER

PT J
AU Bagheri, H
   Wang, JH
   Aerts, J
   Ghorbani, N
   Malek, S
AF Bagheri, Hamid
   Wang, Jianghao
   Aerts, Jarod
   Ghorbani, Negar
   Malek, Sam
TI Flair: efficient analysis of Android inter-component vulnerabilities in
   response to incremental changes
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Android analysis; Evolving software; Relational logic
ID APP COMMUNICATION; SECURITY; ARCHITECTURE
AB Inter-component communication (ICC) among Android apps is shown to be the source of many security vulnerabilities. Prior research has developed compositional analyses to detect the existence of ICC vulnerabilities in a set of installed apps. However, they all lack the ability to efficiently respond to incremental system changes-such as adding/removing apps. Every time the system changes, the entire analysis has to be repeated, making them too expensive for practical use, given the frequency with which apps are updated, installed, and removed on a typical Android device. This paper presents a novel technique, dubbed FLAIR, for efficient, yet formally precise, security analysis of Android apps in response to incremental system changes. Leveraging the fact that the changes are likely to impact only a small fraction of the prior analysis results, FLAIR recomputes the analysis only where required, thereby greatly improving analysis performance without sacrificing the soundness and completeness thereof. Our experimental results using numerous collections of real-world apps corroborate that FLAIR can provide an order of magnitude speedup over prior techniques.
C1 [Bagheri, Hamid; Wang, Jianghao] Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
   [Aerts, Jarod] Univ Nebraska, Jeffrey S Raikes Sch Comp Sci & Management, Lincoln, NE USA.
   [Ghorbani, Negar; Malek, Sam] Univ Calif Irvine, Dept Informat, Irvine, CA USA.
C3 University of Nebraska System; University of Nebraska Lincoln;
   University of Nebraska System; University of Nebraska Lincoln;
   University of California System; University of California Irvine
RP Bagheri, H (corresponding author), Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
EM bagheri@unl.edu
RI Wang, Jianghao/J-1403-2016; Bagheri, Hamid Reza/GQR-0486-2022
OI /0000-0001-6686-466X
FU NSF EPSCoR FIRST award [CCF-1618132, CCF-1755890, CNS-1823262]; National
   Science Foundation
FX We thank Alireza Sadeghi for his help with the COVERT framework and
   helpful feedback on an early draft of the paper. This work was supported
   in part by an NSF EPSCoR FIRST award, and awards CCF-1618132,
   CCF-1755890, and CNS-1823262 from the National Science Foundation.
CR Alhanahnah M, 2020, IEEE T INF FOREN SEC, V15, P2782, DOI 10.1109/TIFS.2020.2976556
   Alhanahnah M, 2019, IEEE INFOCOM SER, P550, DOI [10.1109/infocom.2019.8737637, 10.1109/INFOCOM.2019.8737637]
   [Anonymous], 2009, Ph. D. Dissertation
   [Anonymous], 2011, TR201104 TU DARMST
   [Anonymous], 2020, MOBILE OPERATING SYS
   Armando A, 2012, FORMAL MODELING REAS, DOI [10.1007/978-3-642-41157-1_5, DOI 10.1007/978-3-642-41157-1_5]
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Bagheri Hamid, 2016, 2016 46th Annual IEEE/IFIP International Conference on Dependable Systems and Networks (DSN). Proceedings, P514, DOI 10.1109/DSN.2016.53
   Bagheri H, 2015, T SOFTW ENG TSE
   Bagheri H, 2018, FORM ASP COMPUT, V30, P525, DOI 10.1007/s00165-017-0445-z
   Bagheri H, 2017, IEEE T SOFTWARE ENG, V43, P145, DOI 10.1109/TSE.2016.2587646
   Bagheri H, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P27, DOI 10.1145/2950290.2950337
   Bagheri H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P106, DOI 10.1145/2568225.2568291
   Bagheri H, 2016, J SYST SOFTWARE, V119, P31, DOI 10.1016/j.jss.2016.05.039
   Bagheri H, 2016, FORM ASP COMPUT, V28, P441, DOI 10.1007/s00165-016-0360-8
   Bagheri H, 2015, LECT NOTES COMPUT SC, V9109, P73, DOI 10.1007/978-3-319-19249-9_6
   Bagheri H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1221, DOI 10.1109/ICSE.2013.6606683
   Bagheri Hamid, 2010, ASE 2010, P159, DOI [10.1145/1858996.1859026, DOI 10.1145/1858996.1859026]
   Bagheri Hamid, 2012, P 11 ACM INT C GEN P, P93
   Bosu AS, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P71, DOI 10.1145/3052973.3053004
   Bugiel S, 2012, NDSS, V17, P19
   Bugliesi M, 2013, LECT NOTES COMPUT SC, V7892, P289
   Chaudhuri Avik., 2009, Proceedings of the ACM SIGPLAN Fourth Workshop on Programming Languages and Analysis for Security, PLAS '09, P1, DOI [DOI 10.1145/1554339.1554341, 10.1145/1667209.1667211]
   Chin E., 2011, P 9 INT C MOB SYST A, P239, DOI DOI 10.1145/1999995.2000018
   Cozza R., 2014, MARKET SHARE ULTRAMO
   Davi L., 2010, PRIVILEGE ESCALATION
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Felt AP, 2011, 20 US SEC S SAN FRAN
   Fragkaki Elli, 2012, Computer Security - ESORICS 2012. Proceedings 17th European Symposium on Research in Computer Security, P1, DOI 10.1007/978-3-642-33167-1_1
   Fuchs A.P., 2009, SCANDROID AUTOMATED
   Ganov SvetoslavR., 2012, Formal Methods and Software Engineering - 14th International Conference on Formal Engineering Methods, ICFEM 2012, Kyoto, Japan, November 12-16, 2012. Proceedings, P414
   Hammad M, 2019, J SYST SOFTWARE, V149, P83, DOI 10.1016/j.jss.2018.11.049
   Hammad M, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P59, DOI 10.1109/ICSA.2017.18
   Jackson D, 2002, ACM T SOFTW ENG METH, V11, P256, DOI 10.1145/505145.505149
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Khurshid S., 2004, Automated Software Engineering, V11, P403, DOI 10.1023/B:AUSE.0000038938.10589.b9
   KLIEBER W., 2014, Proceedings of the 3rd ACM SIGPLAN International Workshop on the State of the Art in Java Program Analysis, P1
   Lee YK, 2017, PROC INT CONF SOFTW, P312, DOI 10.1109/ICSE.2017.36
   Li L., 2014, ARXIV14047431CS
   Li L, 2015, IFIP ADV INF COMM TE, V455, P513, DOI 10.1007/978-3-319-18467-8_34
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Lu Long, 2012, P 2012 ACM C COMP CO, P229, DOI DOI 10.1145/2382196.2382223
   Marforio Claudio, 2012, ANN COMP SEC APPL C
   Mirzaei N, 2016, PROC INT CONF SOFTW, P559, DOI 10.1145/2884781.2884853
   Near J.P., 2014, P 29 ACMIEEE INT C A, P587
   Octeau D, 2016, ACM SIGPLAN NOTICES, V51, P469, DOI 10.1145/2914770.2837661
   Octeau D, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P77, DOI 10.1109/ICSE.2015.30
   Octeau Damien, 2013, P 22 USENIX C SEC SE, P543
   Ravitch T., 2014, PPREW
   Rosner N, 2013, IEEE INT CONF AUTOM, P147, DOI 10.1109/ASE.2013.6693075
   Sadeghi A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P846, DOI 10.1145/3180155.3180172
   Sadeghi A, 2017, IEEE T SOFTWARE ENG, V43, P492, DOI 10.1109/TSE.2016.2615307
   Sadeghi A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P725, DOI 10.1109/ICSE.2015.233
   Schmerl B, 2016, LECT NOTES COMPUT SC, V9839, P274, DOI 10.1007/978-3-319-48992-6_21
   Seneviratne S, 2014, MOB COMPUT COMMUN RE, V18, P1, DOI 10.1145/2636242.2636244
   Smith E, 2016, LECT NOTES COMPUT SC, V9593, P183, DOI 10.1007/978-3-319-29613-5_11
   Taghdiri M, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P144, DOI 10.1109/ASE.2004.1342732
   Uzuncaova E, 2008, P INT S FORM METH FM
   Uzuncaova E, 2007, PROC INT CONF SOFTW, P767
   Wallach DS, 2011, USENIX SEC S SAN FRA
   Wei FG, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1329, DOI 10.1145/2660267.2660357
   Zheng GL, 2020, LECT NOTES COMPUT SC, V12076, P29, DOI 10.1007/978-3-030-45234-6_2
NR 62
TC 7
Z9 8
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2021
VL 26
IS 3
AR 54
DI 10.1007/s10664-020-09932-6
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RK9DQ
UT WOS:000638587900001
DA 2024-07-18
ER

PT J
AU Chaleshtari, NB
   Parsa, S
AF Chaleshtari, Nazanin Bayati
   Parsa, Saeed
TI SMBFL: slice-based cost reduction of mutation-based fault localization
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Fault localization; Mutation-based; Slice; Entropy
AB Fault localization is one of the most important and difficult tasks in the software debugging process. Therefore, several methods have been proposed to automate and improve this process. Mutation-based fault localization is one of the states of the art techniques that try to locate faults by executing different mutants of the faulty program. In addition to favorable results, it is along with a massive increase in mutation execution cost. In this paper, we propose a new mutation-based fault localization approach called SMBFL, that aim to reduce the execution cost by reducing the number of statements to be mutated. As fewer mutants execute with SMBFL, the whole process will become faster and the cost will decrease. SMBFL only examines the statements in the dynamic slice of the program under test. The statements that present in the dynamic slice have a direct effect on the execution of the program with the specified test case. In the SMBFL method, the suspiciousness score of program statements is measured based on the entropy of their mutants. The proposed formula, MuEn, determines the suspiciousness score based on the result of executing mutants of each statement of the program. SMBFL is evaluated during a series of tests. The results show a relative increase in the accuracy of fault localization, by an average of 14.2%, and a decrease in the execution time of the fault localization process, by an average of 24.3%. Finally, the MuEn formula applies the least execution overhead to the fault localization process.
C1 [Chaleshtari, Nazanin Bayati; Parsa, Saeed] Iran Univ Sci & Technol, Dept Comp Engn, Tehran, Iran.
C3 Iran University Science & Technology
RP Chaleshtari, NB (corresponding author), Iran Univ Sci & Technol, Dept Comp Engn, Tehran, Iran.
EM n_bayati@comp.iust.ac.ir; saeed.parsa.iust@gmail.com
RI parsa, saeed/S-9536-2018
OI parsa, saeed/0000-0003-4381-2773
CR Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483767
   [Anonymous], 2007, MAV REP JAX JAX 1 1
   Bellamy J, 1991, ELEMENTS INFORM THEO
   Cao HL, 2014, IEICE T INF SYST, VE97D, P2057, DOI 10.1587/transinf.E97.D.2057
   Cazorla FranciscoJ., 2013, WCET, P64
   Chambwera M, 2014, COMMUNITY-BASED ADAPTATION TO CLIMATE CHANGE: SCALING IT UP, P55
   Danglot B, 2019, EMPIR SOFTW ENG, V24, P2603, DOI 10.1007/s10664-019-09692-y
   Deng L, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P84, DOI 10.1109/ICST.2013.20
   DiGiuseppe N, 2015, EMPIR SOFTW ENG, V20, P928, DOI 10.1007/s10664-014-9304-1
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Feyzi F, 2018, COMPUTING, V100, P927, DOI 10.1007/s00607-018-0591-z
   Feyzi F, 2019, FRONT COMPUT SCI-CHI, V13, P735, DOI 10.1007/s11704-017-6512-z
   Gyimóthy T, 1999, LECT NOTES COMPUT SC, V1687, P303, DOI 10.1145/318774.319248
   Halabi D., 2016, IJCSE Int J Comput Sci Eng, V5, P11
   Hammacher C, 2009, 2009 ICSE WORKSHOP ON MULTICORE SOFTWARE ENGINEERING (IWMSE), P49, DOI 10.1109/IWMSE.2009.5071383
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kapoor K, 2005, LECT NOTES COMPUT SC, V3395, P195
   Khatiwada S, 2018, INFORM SOFTWARE TECH, V93, P45, DOI 10.1016/j.infsof.2017.08.012
   Kim J, 2019, ABS190209729 CORR
   KOREL B, 1988, INFORM PROCESS LETT, V29, P155, DOI 10.1016/0020-0190(88)90054-3
   Le TDB, 2017, EMPIR SOFTW ENG, V22, P2237, DOI 10.1007/s10664-016-9484-y
   Lei Y, 2013, INT CONF QUAL SOFTW, P212, DOI 10.1109/QSIC.2013.45
   Lei Y, 2012, P INT COMP SOFTW APP, P1, DOI 10.1109/COMPSAC.2012.9
   Li XL, 2018, EMPIR SOFTW ENG, V23, P1, DOI 10.1007/s10664-016-9494-9
   Li ZJ, 2018, 2018 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P56, DOI 10.1109/QRS-C.2018.00024
   Liu B, 2019, EMPIR SOFTW ENG, V24, P444, DOI 10.1007/s10664-018-9611-z
   Liu Y, 2018, INFORM SCIENCES, V422, P572, DOI 10.1016/j.ins.2017.09.006
   Liu Y, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P126, DOI 10.1109/QRS.2017.23
   de Oliveira AAL, 2018, PROC INT SYMP SOFTW, P155, DOI 10.1109/ISSRE.2018.00026
   Lu HL, 2017, P INT COMP S ICS, P252
   Lu RX, 2015, IEEE GLOB COMM CONF, DOI 10.1109/GLOCOM.2015.7417029
   Mao XG, 2014, J SYST SOFTWARE, V89, P51, DOI 10.1016/j.jss.2013.08.031
   Moon S, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P153, DOI 10.1109/ICST.2014.28
   Namin AS, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P351, DOI 10.1145/1368088.1368136
   Papadakis M., 2014, Proceedings of the 29th Annual ACM Symposium on Applied Computing, P1293
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Mateo PR, 2015, SOFTW TEST VERIF REL, V25, P464, DOI 10.1002/stvr.1534
   Reis S, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4760
   Silva J, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2187671.2187674
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Tahchiev P, 2010, JUNIT ACTION, P2
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Xie XY, 2013, INFORM SOFTWARE TECH, V55, P866, DOI 10.1016/j.infsof.2012.08.008
   Yoo S, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491513
   Zakari A, 2020, INFORM SOFTWARE TECH, V124, DOI 10.1016/j.infsof.2020.106312
   Zhang MX, 2017, LECT NOTES COMPUT SC, V10538, P261, DOI [10.1007/978-3-319-68155-9_20, 10.1145/3092703.3092731]
NR 48
TC 10
Z9 11
U1 0
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 4282
EP 4314
DI 10.1007/s10664-020-09845-4
EA AUG 2020
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000562938300001
DA 2024-07-18
ER

PT J
AU Linåker, J
   Regnell, B
AF Linaker, Johan
   Regnell, Bjorn
TI What to share, when, and where: balancing the objectives and
   complexities of open source software contributions
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Open source software; Software product management; Requirements
   engineering; Contribution strategy; Community strategy
ID OPEN INNOVATION; EMPIRICAL-ANALYSIS; BUSINESS VALUE; FIRMS; COMMUNITY;
   MODEL; PROPRIETARY; PRODUCT; COOPETITION; CHALLENGES
AB Context: Software-intensive organizations' rationale for sharing Open Source Software (OSS) may be driven by both idealistic, strategic and commercial objectives, and include both monetary as well as non-monetary benefits. To gain the potential benefits, an organization may need to consider what they share and how, while taking into account risks, costs and other complexities. Objective: This study aims to empirically investigate objectives and complexities organizations need to consider and balance between when deciding on what software to share as OSS, when to share it, and whether to create a new or contribute to an existing community. Method: A multiple-case study of three case organizations was conducted in two research cycles, with data gathered from interviews with 20 practitioners from these organizations. The data was analyzed qualitatively in an inductive and iterative coding process. Results: 12 contribution objectives and 15 contribution complexities were found. Objectives include opportunities for improving reputation, managing suppliers, managing partners and competitors, and exploiting externally available knowledge and resources. Complexities include risk of loosing control, risk of giving away competitive advantage, risk of creating negative exposure, costs of contributing, and the possibility and need to contribute to an existing or new community. Conclusions: Cross-case analysis and interview validation show that the identified objectives and complexities offer organizations a possibility to reflect on and adapt their contribution strategies based on their specific contexts and business goals.
C1 [Linaker, Johan; Regnell, Bjorn] Box 118, SE-22100 Lund, Sweden.
RP Linåker, J (corresponding author), Box 118, SE-22100 Lund, Sweden.
EM johan.linaker@cs.lth.se; bjorn.regnell@cs.lth.se
RI Linåker, Johan/AAR-3849-2021
OI Linåker, Johan/0000-0001-9851-1404
FU Lund University
FX Open access funding provided by Lund University.
CR Ågerfalk PJ, 2008, MIS QUART, V32, P385
   Alspaugh TA, 2013, S VIS LANG HUM CEN C, P165, DOI 10.1109/RE.2013.6636716
   Andersen-Gott M, 2012, INT J INFORM MANAGE, V32, P106, DOI 10.1016/j.ijinfomgt.2011.10.003
   Duc AN, 2017, LECT NOTES BUS INF P, V304, P146, DOI 10.1007/978-3-319-69191-6_10
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2007, QUALITATIVE RES PRAC, DOI DOI 10.4135/9781848608191.D33
   [Anonymous], 2014, STAKEHOLDER GOAL ANA, DOI DOI 10.1007/978-3-662-43839-8
   [Anonymous], 2014, NEW FRONTIERS OPEN I
   Bosch J, 2013, COMPUTER, V46, P34, DOI 10.1109/MC.2013.295
   Butler S, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P201, DOI 10.1145/3183519.3183531
   Caulkins JP, 2013, J ECON DYN CONTROL, V37, P1182, DOI 10.1016/j.jedc.2013.02.009
   Chengalur-Smith I, 2010, J ASSOC INF SYST, V11, P708
   Chesbrough HW, 2007, CALIF MANAGE REV, V50, P57, DOI 10.2307/41166416
   Dahlander L, 2005, RES POLICY, V34, P481, DOI 10.1016/j.respol.2005.02.003
   Dahlander L, 2006, RES POLICY, V35, P1243, DOI 10.1016/j.respol.2006.09.011
   Dahlander L, 2008, LONG RANGE PLANN, V41, P629, DOI 10.1016/j.lrp.2008.09.003
   DaSilva CM, 2014, LONG RANGE PLANN, V47, P379, DOI 10.1016/j.lrp.2013.08.004
   Deodhar SJ, 2012, J STRATEGIC INF SYST, V21, P274, DOI 10.1016/j.jsis.2012.06.001
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ernst N. A., 2012, Proceedings of the 2012 IEEE Second International Workshop on Empirical Requirements Engineering (EmpiRE), P25, DOI 10.1109/EmpiRE.2012.6347678
   Ghaisas S, 2013, IEEE-ACM INT WKSP CO, P37, DOI 10.1109/CESI.2013.6618468
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Hartmann H, 2016, J SOFTW-EVOL PROC, V28, P460, DOI 10.1002/smr.1785
   Haruvy E, 2008, PROD OPER MANAG, V17, P29, DOI 10.3401/poms.1070.0004
   Hauge O, 2010, INFORM SOFTWARE TECH, V52, P1133, DOI 10.1016/j.infsof.2010.05.008
   Henkel J, 2006, RES POLICY, V35, P953, DOI 10.1016/j.respol.2006.04.010
   Henkel J, 2014, RES POLICY, V43, P879, DOI 10.1016/j.respol.2013.08.014
   Henkel J, 2009, IND CORP CHANGE, V18, P435, DOI 10.1093/icc/dtn046
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Höst M, 2011, INFORM SOFTWARE TECH, V53, P616, DOI 10.1016/j.infsof.2010.12.009
   Iivari N, 2008, INT FED INFO PROC, V275, P359
   Jansen S, 2012, J SYST SOFTWARE, V85, P1495, DOI 10.1016/j.jss.2011.12.007
   Jansen S, 2009, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE-COMPANION.2009.5070978
   Kilamo T, 2012, J SYST SOFTWARE, V85, P1467, DOI 10.1016/j.jss.2011.06.071
   Kittlaus H-B, 2017, SOFTWARE PRODUCT MAN
   Kort PM, 2011, PROD OPER MANAG, V20, P877, DOI 10.1111/J.1937-5956.2011.01233.x
   Kuriakose J, 2015, IEEE INT WORKS EMPIR, P49, DOI 10.1109/EmpiRE.2015.7431307
   Laurent P, 2009, LECT NOTES COMPUT SC, V5512, P240, DOI 10.1007/978-3-642-02050-6_21
   Linåker J, 2018, J SYST SOFTWARE, V135, P17, DOI 10.1016/j.jss.2017.09.032
   Linaker J, 2015, 2015 INT C SOFTW SYS, P208, DOI [10.1145/2785592.2795370, DOI 10.1145/2785592.2795370]
   Linaker J, 2019, INFORM SOFTWARE TECH
   Linaker J, 2019, REQUIREMENTS ENG
   Lindman J, 2009, INT FED INFO PROC, V299, P47
   Lundell B, 2011, J SYST SOFTWARE, V84, P1540, DOI 10.1016/j.jss.2011.03.020
   Lundell B, 2010, INFORM SYST J, V20, P519, DOI 10.1111/j.1365-2575.2010.00348.x
   Mäenpää H, 2018, J INTERNET SERV APPL, V9, DOI 10.1186/s13174-018-0088-1
   Morgan L, 2014, J STRATEGIC INF SYST, V23, P226, DOI 10.1016/j.jsis.2014.07.001
   Munir H, 2018, INFORM SOFTWARE TECH, V97, P26, DOI 10.1016/j.infsof.2017.12.008
   Munir H, 2018, EMPIR SOFTW ENG, V23, P186, DOI 10.1007/s10664-017-9511-7
   Munir H, 2016, EMPIR SOFTW ENG, V21, P684, DOI 10.1007/s10664-015-9380-x
   Nagle F, 2018, ORGAN SCI, V29, P569, DOI 10.1287/orsc.2018.1202
   Nguyen-Duc A, 2019, E-INFORMATICA, V13, P37, DOI 10.5277/e-Inf190102
   O'Mahony S, 2007, J MANAG GOV, V11, P139, DOI 10.1007/s10997-007-9024-7
   Olsson HH, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1876
   Riehle D, 2011, COMPUTER, V44, P93, DOI 10.1109/MC.2011.206
   Riehle D, 2012, INF SYST E-BUS MANAG, V10, P5, DOI 10.1007/s10257-010-0149-x
   Robson C, 2011, REAL WORLD RES, V3
   Scacchi W., 2002, IEE Proceedings-Software, V149, P24, DOI 10.1049/ip-sen:20020202
   Schaarschmidt M, 2015, INFORM ORGAN-UK, V25, P99, DOI 10.1016/j.infoandorg.2015.03.001
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shahrivar S, 2018, INFORM SOFTWARE TECH, V103, P202, DOI 10.1016/j.infsof.2018.06.018
   Shaikh M, 2017, INFORM ORGAN-UK, V27, P116, DOI 10.1016/j.infoandorg.2017.04.001
   Spijkerman Z, 2018, P INT WORKSH SOFTW I, V2018, P128
   Stam W, 2009, RES POLICY, V38, P1288, DOI 10.1016/j.respol.2009.06.004
   Stuermer M, 2009, R&D MANAGE, V39, P170, DOI 10.1111/j.1467-9310.2009.00548.x
   Syeed Mahbubul, 2017, OPEN SOURCE SYSTEMS, P49
   van der Hinden F, 2009, IEEE SOFTWARE, V26, P77, DOI 10.1109/MS.2009.88
   Ven K, 2008, INFORM SOFTWARE TECH, V50, P991, DOI 10.1016/j.infsof.2007.09.001
   Wahyudin D, 2007, INT J WEB INF SYST, V3, P116, DOI 10.1108/17440080710829252
   Weikert F, 2013, LECT NOTES BUS INF P, V150, P90
   West J, 2003, RES POLICY, V32, P1259, DOI 10.1016/S0048-7333(03)00052-0
   West J, 2007, VAL P 40 ANN HAW INT, P176
   West J, 2008, CREATING EVOLVING OP
   West J, 2005, P HAW INT C SYST SCI, P196
   West J, 2006, R&D MANAGE, V36, P319, DOI 10.1111/j.1467-9310.2006.00436.x
   Wnuk K, 2012, INT SYMP EMP SOFTWAR, P271, DOI 10.1145/2372251.2372301
   Zhou MH, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2876443
   Ziegler N, 2014, WORLD PAT INF, V37, P19, DOI 10.1016/j.wpi.2013.12.002
NR 78
TC 7
Z9 7
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3799
EP 3840
DI 10.1007/s10664-020-09855-2
EA AUG 2020
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA NJ1FD
UT WOS:000558632900001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Rodríguez-Pérez, G
   Robles, G
   Serebrenik, A
   Zaidman, A
   German, DM
   Gonzalez-Barahona, JM
AF Rodriguez-Perez, Gema
   Robles, Gregorio
   Serebrenik, Alexander
   Zaidman, Andy
   German, Daniel M.
   Gonzalez-Barahona, Jesus M.
TI How bugs are born: a model to identify how bugs are introduced in
   software components
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug origins; Bug-introducing changes; First-failing change; SZZ
   algorithm; Extrinsic bugs; Intrinsic bugs
ID PREDICTING FAULTS; IDENTIFICATION; COMPLEXITY; ERRORS
AB When identifying the origin of software bugs, many studies assume that "a bug was introduced by the lines of code that were modified to fix it". However, this assumption does not always hold and at least in some cases, these modified lines are not responsible for introducing the bug. For example, when the bug was caused by a change in an external API. The lack of empirical evidence makes it impossible to assess how important these cases are and therefore, to which extent the assumption is valid. To advance in this direction, and better understand how bugs "are born", we propose a model for defining criteria to identify the first snapshot of an evolving software system that exhibits a bug. This model, based on the perfect test idea, decides whether a bug is observed after a change to the software. Furthermore, we studied the model's criteria by carefully analyzing how 116 bugs were introduced in two different open source software projects. The manual analysis helped classify the root cause of those bugs and created manually curated datasets with bug-introducing changes and with bugs that were not introduced by any change in the source code. Finally, we used these datasets to evaluate the performance of four existing SZZ-based algorithms for detecting bug-introducing changes. We found that SZZ-based algorithms are not very accurate, especially when multiple commits are found; the F-Score varies from 0.44 to 0.77, while the percentage of true positives does not exceed 63%. Our results show empirical evidence that the prevalent assumption, "a bug was introduced by the lines of code that were modified to fix it", is just one case of how bugs are introduced in a software system. Finding what introduced a bug is not trivial: bugs can be introduced by the developers and be in the code, or be created irrespective of the code. Thus, further research towards a better understanding of the origin of bugs in software projects could help to improve design integration tests and to design other procedures to make software development more robust.
C1 [Rodriguez-Perez, Gema] Univ Waterloo, Waterloo, ON N2L 3G1, Canada.
   [Robles, Gregorio; Gonzalez-Barahona, Jesus M.] Univ Rey Juan Carlos, Madrid, Spain.
   [Serebrenik, Alexander] Eindhoven Univ Technol, Software Evolut, Eindhoven, Netherlands.
   [Zaidman, Andy] Delft Univ Technol, Software Engn, Delft, Netherlands.
   [German, Daniel M.] Univ Victoria, Dept Comp Sci, Victoria, BC V8P 5C2, Canada.
C3 University of Waterloo; Universidad Rey Juan Carlos; Eindhoven
   University of Technology; Delft University of Technology; University of
   Victoria
RP Robles, G (corresponding author), Univ Rey Juan Carlos, Madrid, Spain.
EM gema.rodriguez-perez@uwaterloo.ca; grex@gsyc.urjc.es;
   a.serebrenik@tue.nl; a.e.zaidman@tudelft.nl; dmg@uvic.ca;
   jgb@gsyc.urjc.es
RI Gonzalez-Barahona, Jesus M./L-5646-2017; Robles, Gregorio/I-2507-2012;
   Rodríguez-Pérez, Gema/AAN-7844-2020
OI Gonzalez-Barahona, Jesus M./0000-0001-9682-460X; Robles,
   Gregorio/0000-0002-1442-6761; Rodríguez-Pérez, Gema/0000-0002-0062-8418;
   Serebrenik, Alexander/0000-0002-1418-0095
FU Government of Spain [TIN2014-59400-R, RTI2018-101963-B-I00]; 4TU
   federation (The Netherlands) through the project "Social aspects of
   software quality"; Netherlands Organisation for Scientific Research
   (NWO) through the "TestRoots" project; EU Horizon 2020 ICT-10-2016-RIA
   "STAMP" project [731529]; H2020 - Industrial Leadership [731529] Funding
   Source: H2020 - Industrial Leadership
FX We want to express our gratitude to Bitergia<SUP>36</SUP> for the
   support they have provided when questions have arisen using their tools.
   We also acknowledge the support of several authors by the Government of
   Spain through projects TIN2014-59400-R and "BugBirth"
   RTI2018-101963-B-I00. The first author has been supported by the 4TU
   federation (The Netherlands) through the project "Social aspects of
   software quality". Other funding came from the Netherlands Organisation
   for Scientific Research (NWO) through the "TestRoots" project and the EU
   Horizon 2020 ICT-10-2016-RIA "STAMP" project (No.731529).
CR Abreu R, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P153
   Alexandru CV, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P635, DOI 10.1109/ICSE.2015.211
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 2001, StandardISO/IEC9126
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Bavota G, 2015, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSM.2015.7332454
   Beller M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P572, DOI 10.1145/3180155.3180175
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beller M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P559, DOI 10.1109/ICSE.2015.193
   BERGER ED, 2019, ARXIV190110220
   Bettenburg N, 2013, EMPIR SOFTW ENG, V18, P375, DOI 10.1007/s10664-012-9205-0
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bissyandé TF, 2013, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2013.19
   Boehm B., 2005, Found Empirical Softw. Eng., Legacy Victor R Baxili, V426, P426
   BROOKS FP, 1995, MYTHICAL MAN MONTH M
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Canfora G., 2011, Proceedings of the 8th Working Conference on Mining Software Repositories (MSR'11), P143, DOI DOI 10.1145/1985441.1985463
   Catolino G, 2019, J SYST SOFTWARE, V152, P165, DOI 10.1016/j.jss.2019.03.002
   CHANDY KM, 1985, ACM T COMPUT SYST, V3, P63, DOI 10.1145/214451.214456
   Chen T, 2014, PROCEEDINGS OF THE FIFTH INTERNATIONAL SYMPOSIUM ON TEST AUTOMATION & INSTRUMENTATION, VOLS 1 AND 2, P82
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Daniel Alencarda Costa., 2014, Proceedings of the 29th Annual ACM Symposium on Applied Computing, SAC'14, P1152
   Davies S, 2014, J SOFTW-EVOL PROC, V26, P107, DOI 10.1002/smr.1619
   Demeyer S., 2002, Object-Oriented Reengineering Patterns
   Dias M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P341, DOI 10.1109/SANER.2015.7081844
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ebert F, 2015, J SYST SOFTWARE, V106, P82, DOI 10.1016/j.jss.2015.04.066
   Ell J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1471, DOI 10.1109/ICSE.2013.6606748
   Ferrus T, 2008, 2008 IEEE SILICON NANOELECTRONICS WORKSHOP, P32
   Fischer M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P90, DOI 10.1109/WCRE.2003.1287240
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Fraser G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P362, DOI 10.1109/ICST.2013.51
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   German DM, 2009, INFORM SOFTWARE TECH, V51, P1394, DOI 10.1016/j.infsof.2009.04.018
   Gonzalez-Barahona JM, 2014, J SOFTW-EVOL PROC, V26, P589, DOI 10.1002/smr.1615
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Gregor S, 2006, MIS QUART, V30, P611
   GUERROUJ L, 2015, SOFTW QUAL J, P1
   Hassan AE, 2005, PROC IEEE INT CONF S, P263
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hata H, 2010, EMPIR SOFTW ENG, V15, P147, DOI 10.1007/s10664-009-9117-9
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hilton M, 2018, IEEE INT CONF AUTOM, P53, DOI 10.1145/3238147.3238183
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   *I EL EL ENG, 2009, 10442009 IEEE
   Itkonen Juha, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P61
   Izquierdo-Cortazar Daniel, 2011, International Journal of Open Source Software & Processes, V3, P23, DOI 10.4018/jossp.2011040102
   IZQUIERDOCORTAZ.D, 2012, INT C OP SOURC SYST, P268
   Jacobs J, 2007, INFORM SOFTWARE TECH, V49, P774, DOI 10.1016/j.infsof.2006.09.002
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2006, PROC IEEE INT CONF S, P4
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   KNAUSS E, 2018, ARXIV180502769
   Knauss E, 2014, INT REQUIR ENG CONF, P213, DOI 10.1109/RE.2014.6912263
   LaToza T.D., 2006, P INTERNATION C SOFT, P492, DOI [10.1145/1134285.1134355, DOI 10.1145/1134285.1134355]
   Le TDB, 2015, INT C PROGRAM COMPRE, P36, DOI 10.1109/ICPC.2015.13
   Li Z, 2006, P 1 WORKSH ARCH SYST, P25, DOI DOI 10.1145/1181309.1181314
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Magee J, 2000, TENTH INTERNATIONAL WORKSHOP ON SOFTWARE SPECIFICATION AND DESIGN, P3, DOI 10.1109/IWSSD.2000.891121
   Marsavina C, 2014, IEEE INT WORK C SO, P195, DOI 10.1109/SCAM.2014.28
   Massacci F, 2014, IEEE T SOFTWARE ENG, V40, P1147, DOI 10.1109/TSE.2014.2354037
   Meneely Andrew, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P65, DOI 10.1109/ESEM.2013.19
   Mens T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13, DOI 10.1109/IWPSE.2005.7
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Moonen L., 2008, Software Evolution, P173
   Murphy-Hill E, 2015, IEEE T SOFTWARE ENG, V41, P65, DOI 10.1109/TSE.2014.2357438
   Nagappan N., 2006, P 28 INT C SOFTW ENG, P452, DOI DOI 10.1145/1134285.1134349
   NAKAJO T, 1991, IEEE T SOFTWARE ENG, V17, P830, DOI 10.1109/32.83917
   Neto WL, 2019, ICCAD-IEEE ACM INT
   OTTENSTEIN KJ, 1984, SIGPLAN NOTICES, V19, P177, DOI 10.1145/390011.808263
   Palomba F, 2016, P 25 INT S SOFTW TES, P130, DOI [10.1145/2931037.2931057, DOI 10.1145/2931037.2931057]
   Palomba F, 2019, EMPIR SOFTW ENG, V24, P2907, DOI 10.1007/s10664-019-09683-z
   Palomba F, 2017, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2017.12
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Prechelt L, 2014, INFORM SOFTWARE TECH, V56, P1377, DOI 10.1016/j.infsof.2014.05.001
   Rahman F, 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, ESEC/FSE '11, P322, DOI DOI 10.1145/2025113
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Rodríguez-Pérez G, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267436
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Rodriguez-Perez G, 2017, INT WORKS EMERG TREN, P29, DOI 10.1109/WETSoM.2017.6
   Rodríguez-Pérez G, 2016, IFIP ADV INF COMM TE, V472, P192, DOI 10.1007/978-3-319-39225-7_16
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Sahal E., 2018, P 12 ACM IEEE INT S, P57
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Sinha VibhaSinghal., 2010, Proc. of 3rd India Software Engineering Conf, P3
   Soetens QD, 2015, 14TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE 2015), P9, DOI 10.1145/2804360.2804362
   Sun Y, 2017, INFORM SOFTWARE TECH, V84, P33, DOI 10.1016/j.infsof.2016.11.010
   Syer MD, 2015, IEEE T SOFTWARE ENG, V41, P176, DOI 10.1109/TSE.2014.2361131
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Tantithamthavorn C, 2013, 2013 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P108, DOI 10.1109/ISSREW.2013.6688888
   Thung F, 2013, WORK CONF REVERSE EN, P92, DOI 10.1109/WCRE.2013.6671284
   Vassallo C, 2016, PROC IEEE INT CONF S, P519, DOI 10.1109/ICSME.2016.72
   Viller S, 1999, INTERACT COMPUT, V11, P665, DOI 10.1016/S0953-5438(98)00049-6
   Vonken F., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P29, DOI 10.1109/WCRE.2012.13
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Xia X, 2015, AUTOMAT SOFTW ENG, V22, P75, DOI 10.1007/s10515-014-0162-2
   Zaidman Andy, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P220, DOI 10.1109/ICST.2008.47
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
   Zeller A, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION
   ZELLER A, 2011, P 5 INT WORKSH COMP, P482
   Zimmermann T, 2012, PROC INT CONF SOFTW, P1074, DOI 10.1109/ICSE.2012.6227112
NR 113
TC 32
Z9 35
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2020
VL 25
IS 2
SI SI
BP 1294
EP 1340
DI 10.1007/s10664-019-09781-y
EA FEB 2020
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT0VU
UT WOS:000511061300001
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Kavaler, D
   Devanbu, P
   Filkov, V
AF Kavaler, David
   Devanbu, Premkumar
   Filkov, Vladimir
TI Whom are you going to call? determinants of @-mentions in Github
   discussions
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Github; @-mention; Mention; Tagging; Social tagging; Issue
ID TRUST
AB Open Source Software (OSS) project success relies on crowd contributions. When an issue arises in pull-request based systems, @-mentions are used to call on people to task; previous studies have shown that @-mentions in discussions are associated with faster issue resolution. In most projects there may be many developers who could technically handle a variety of tasks. But OSS supports dynamic teams distributed across a wide variety of social and geographic backgrounds, as well as levels of involvement. It is, then, important to know whom to call on, i.e., who can be relied or trusted with important task-related duties, and why. In this paper, we sought to understand which observable socio-technical attributes of developers can be used to build good models of them being future @-mentioned in GitHub issues and pull request discussions. We built overall and project-specific predictive models of future @-mentions, in order to capture the determinants of @-mentions in each of two hundred GitHub projects, and to understand if and how those determinants differ between projects. We found that visibility, expertise, and productivity are associated with an increase in @-mentions, while responsiveness is not, in the presence of a number of control variables. Also, we find that though project-specific differences exist, the overall model can be used for cross-project prediction, indicating its GitHub-wide utility.
C1 [Kavaler, David; Devanbu, Premkumar] Univ Calif Davis, Davis, CA 95616 USA.
   [Filkov, Vladimir] Univ Calif Davis, DECAL Lab, Davis, CA 95616 USA.
   [Filkov, Vladimir] Univ Calif Davis, Comp Sci, Davis, CA 95616 USA.
C3 University of California System; University of California Davis;
   University of California System; University of California Davis;
   University of California System; University of California Davis
RP Kavaler, D (corresponding author), Univ Calif Davis, Davis, CA 95616 USA.
EM dmkavaler@ucdavis.edu; ptdevanbu@ucdavis.edu; vfilkov@ucdavis.edu
RI /AAZ-7265-2020
OI Kavaler, David/0000-0003-1269-2932
CR Ackerman AF, 1984, P S SOFTW VAL INSP T, P13
   Allison P., 2012, STAT HORIZONS
   [Anonymous], 2015, OXFORD HDB COMPUTATI
   Bandura A., 1977, SOCIAL LEARNING THEO
   Bandura A., 1973, Aggression: a social learning analysis
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bird C, 2007, 4 INT WORKSH MIN SOF
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bluethgen Nico, 2006, BMC Ecology, V6, P9, DOI 10.1186/1472-6785-6-9
   Brenkert G.G., 1998, BUS ETHICS Q, V8, P195, DOI DOI 10.5840/BEQ19988219
   Brockner J., 1996, Understanding the interaction between procedural and distributive justice: The role of trust
   Burke M, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1909
   Burke M, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P945
   Calefato F, 2017, INT CONF GLOBAL SOFT, P56, DOI 10.1109/ICGSE.2017.1
   Cameron A., 2013, Econometric Society Monographs, V53, DOI 10.1017/CBO9781139013567
   Casalnuovo C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P817, DOI 10.1145/2786805.2786854
   Chow SC, 2017, SAMPLE SIZE CALCULAT
   Cohen J., 2013, APPL MULTIPLE REGRES, DOI DOI 10.2307/2064799
   Cohen J., 1988, STAT POWER ANAL BEHA
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Dourish Paul., 1994, Short paper presented at HCI, V94, P23
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Faraway J.J., 2014, Linear Models with R. Taylor & Francis
   Gallivan MJ, 2001, INFORM SYST J, V11, P277, DOI 10.1046/j.1365-2575.2001.00108.x
   Gharehyazie M, 2015, EMPIR SOFTW ENG, V20, P1318, DOI 10.1007/s10664-014-9332-x
   Gharehyazie M, 2013, PROC IEEE INT CONF S, P340, DOI 10.1109/ICSM.2013.45
   GOOD IJ, 1953, BIOMETRIKA, V40, P237, DOI 10.2307/2333344
   HANDY C, 1995, HARVARD BUS REV, V73, P40
   Hossain L., 2009, The Journal of High Technology Management Research, V20, P52
   Husted B., 1998, Business Ethics Quarterly, V8, P233, DOI [10.2307/3857327, DOI 10.2307/3857327]
   Ibrahim Walid M., 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P181, DOI 10.1109/MSR.2010.5463345
   Inglehart Ronald., 1999, DEMOCRACY TRUST, P88, DOI DOI 10.1017/CBO9780511659959
   Jarvenpaa S. L., 1998, Journal of Management Information Systems, V14, P29
   Jones T.M., 1998, Business Ethics Quarterly, V8, P273, DOI DOI 10.2307/3857329
   Kalliamvakou E, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P574, DOI 10.1109/ICSE.2015.74
   Kavaler D, 2017, IEEE INT CONF AUTOM, P72, DOI 10.1109/ASE.2017.8115620
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kramer R., 1996, TRUST ORG, P216, DOI DOI 10.4135/9781452243610.N11
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   McDonald N., 2013, CHI'13 Extended Abstracts on Human Factors in Computing Systems: ACM, P139
   McKnight DH, 2002, INFORM SYST RES, V13, P334, DOI 10.1287/isre.13.3.334.81
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Murphy G., 2004, P 16 INT C SOFTW ENG, P1
   Newton K, 2001, INT POLIT SCI REV, V22, P201, DOI 10.1177/0192512101222004
   O'Leary Michael., 2002, DISTRIBUTED WORK, P27
   Oeldorf-Hirsch A, 2015, COMPUT HUM BEHAV, V44, P240, DOI 10.1016/j.chb.2014.11.024
   On J, 2013, 2013 IEEE 37TH ANNUAL COMPUTER SOFTWARE AND APPLICATIONS CONFERENCE WORKSHOPS (COMPSACW), P133, DOI 10.1109/COMPSACW.2013.15
   Posnett D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P452, DOI 10.1109/ICSE.2013.6606591
   Qiu L, 2013, J CROSS CULT PSYCHOL, V44, P106, DOI 10.1177/0022022111434597
   Robert LP, 2009, J MANAGE INFORM SYST, V26, P241, DOI 10.2753/MIS0742-1222260210
   Rodrguez G, 2013, MODELS COUNT DATA OV
   Rodriguez-Perez G., 2018, P 12 INT S EMPIRICAL, P52
   SAAVEDRA R, 1993, J APPL PSYCHOL, V78, P61, DOI 10.1037/0021-9010.78.1.61
   Sato Y., 2004, INT J JAPANESE SOCIO, V13, P36, DOI DOI 10.1111/j.1475-6781.2004.00052.x
   Shen LJ, 2015, ASIA-PAC PSYCHIAT, V7, P85, DOI 10.1111/appy.12105
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Steinmacher I, 2016, PROC INT CONF SOFTW, P273, DOI 10.1145/2884781.2884806
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Stolcke A, 2000, COMPUT LINGUIST, V26, P339, DOI 10.1162/089120100561737
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   VUONG QH, 1989, ECONOMETRICA, V57, P307, DOI 10.2307/1912557
   Yu Y, 2014, 2014 IEEE PHOTONICS SOCIETY SUMMER TOPICAL MEETING SERIES, P39, DOI 10.1109/SUM.2014.31
   Yu Y, 2016, INFORM SOFTWARE TECH, V74, P204, DOI 10.1016/j.infsof.2016.01.004
   Zhang Y, 2017, SCI CHINA INFORM SCI, V60, DOI 10.1007/s11432-015-1024-6
   Zucker L. G., 1986, RES ORGAN BEHAV, V8, P53, DOI DOI 10.1023/A
NR 66
TC 5
Z9 5
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3904
EP 3932
DI 10.1007/s10664-019-09728-3
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA JT6XW
UT WOS:000501131100021
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Castelluccio, M
   An, L
   Khomh, F
AF Castelluccio, Marco
   An, Le
   Khomh, Foutse
TI An empirical study of patch uplift in rapid release development
   pipelines
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Patch uplift; Urgent update; Mining software repositories; Release
   engineering
AB In rapid release development processes, patches that fix critical issues, or implement high-value features are often promoted directly from the development channel to a stabilization channel, potentially skipping one or more stabilization channels. This practice is called patch uplift. Patch uplift is risky, because patches that are rushed through the stabilization phase can end up introducing regressions in the code. This paper examines patch uplift operations at Mozilla, with the aim to identify the characteristics of the uplifted patches that did not effectively fix the targeted problem and that introduced regressions. Through statistical and manual analyses, a series of problems were investigated, including the reasons behind patch uplift decisions, the root causes of ineffective uplifts, the characteristics of uplifted patches that introduced regressions, and whether these regressions can be prevented. Additionally, three Mozilla release managers were interviewed in order to understand organizational factors that affect patch uplift decisions and outcomes. Results show that most patches are uplifted because of a wrong functionality or a crash. Certain uplifts did not effectively address their problems because they did not completely fix the problems or lead to regressions. Uplifted patches that lead to regressions tend to have larger patch size, and most of the faults are due to semantic or memory errors in the patches. Also, release managers are more inclined to accept patch uplift requests that concern certain specific components, and-or that are submitted by certain specific developers. About 25% to 30% of the regressions due to Beta or Release uplifts could have been prevented as they could be reproduced by developers and were found in widely used feature/website/configuration or via telemetry.
C1 [Castelluccio, Marco] Mozilla Corp, London, England.
   [Castelluccio, Marco] Univ Napoli Federico II, Dept Elect Engn & Informat Technol DIETI, Naples, Italy.
   [An, Le] Polytech Montreal, Comp Engn Dept, Montreal, PQ, Canada.
   [Khomh, Foutse] Polytech Montreal, Montreal, PQ, Canada.
C3 University of Naples Federico II; Universite de Montreal; Polytechnique
   Montreal; Universite de Montreal; Polytechnique Montreal
RP An, L (corresponding author), Polytech Montreal, Comp Engn Dept, Montreal, PQ, Canada.
EM mcastelluccio@mozilla.com; le.an@polymtl.ca; foutse.khomh@polymtl.ca
OI Castelluccio, Marco/0000-0002-3285-5121
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
FX The authors would like to thank the anonymous reviewers for their
   detailed feedback and useful suggestions that greatly contributed to
   improving this paper. This work has been partially supported by the
   Natural Sciences and Engineering Research Council of Canada (NSERC).
CR Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   Adams B, 2015, IEEE SOFTWARE, V32, P41
   An L, 2015, P IEEE INT C SOFTW Q
   An L, 2014, IEEE INT WORK C SO, P205, DOI 10.1109/SCAM.2014.29
   [Anonymous], 2013, NONPARAMETRIC STAT M
   [Anonymous], 2017, BUGZILLA GUIDE
   [Anonymous], 2017, Jira
   [Anonymous], 2016, Understand tool
   Castelluccio M, 2017, PROC IEEE INT CONF S, P411, DOI 10.1109/ICSME.2017.82
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   coverity. com, 2017, COV TOOL
   Csardi G., 2006, InterJournal, (Complex Systems), V1695, P1
   da Costa DA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P374, DOI [10.1109/MSR.2016.045, 10.1145/2901739.2901764]
   Dmitrienko A., 2005, ANAL CLIN TRIALS USI
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Hassan S, 2017, EMPIR SOFTW ENG, V22, P505, DOI 10.1007/s10664-016-9435-7
   Islam MR, 2017, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2017.9
   Jalbert N, 2008, I C DEPEND SYS NETWO, P52, DOI 10.1109/DSN.2008.4630070
   Jihun Park, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P40, DOI 10.1109/MSR.2012.6224298
   Khomh F., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P179, DOI 10.1109/MSR.2012.6224279
   Khomh F, 2015, EMPIR SOFTW ENG, V20, P336, DOI 10.1007/s10664-014-9308-x
   Kim D, 2011, IEEE T SOFTWARE ENG, V37, P430, DOI 10.1109/TSE.2011.20
   Lin D, 2017, EMPIR SOFTW ENG, V22, P2095, DOI 10.1007/s10664-016-9480-2
   martinfowler. com, 2017, FEATURE TOGGLE
   MDN Web Docs, 2017, BUGS LIF
   Mozilla wiki, 2018, MOZ TREE SHER BACK
   Mozilla wiki, 2018, MOZ TREE SHER
   Mozilla wiki, 2016, PRIOR FIELD
   Mozilla wiki, 2018, MOZ REL MAN UPL RUL
   Mozilla wiki, 2018, MOZ MOD
   Rahman MT, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P201, DOI [10.1145/2901739.2901745, 10.1109/MSR.2016.029]
   Rahman MT, 2015, IEEE SOFTWARE, V32, P80
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   SlideShare, 2016, LAFORGE CHROME RELEA
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Tan L, 2014, EMPIR SOFTW ENG, V19, P1665, DOI 10.1007/s10664-013-9258-8
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P2544, DOI 10.1002/asi.21416
   Tian Y, 2012, EUR CON SFTWR MTNCE, P385, DOI 10.1109/CSMR.2012.48
   Tourani P, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P189, DOI 10.1109/SANER.2016.113
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Wikipedia, 2018, OK BM25
   Yin RK, 2002, Applied Social Research Methods Series, V34
NR 46
TC 10
Z9 13
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2019
VL 24
IS 5
SI SI
BP 3008
EP 3044
DI 10.1007/s10664-018-9665-y
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IS1CL
UT WOS:000481889700006
DA 2024-07-18
ER

PT J
AU Nielebock, S
   Krolikowski, D
   Krüger, J
   Leich, T
   Ortmeier, F
AF Nielebock, Sebastian
   Krolikowski, Dariusz
   Krueger, Jacob
   Leich, Thomas
   Ortmeier, Frank
TI Commenting source code: is it worth it for small programming tasks?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Comments; Program comprehension; Empirical study; Documentation;
   Maintenance
ID IDENTIFIER NAMES; SOFTWARE; COMPREHENSION; READABILITY; TRACEABILITY
AB Maintaining a program is a time-consuming and expensive task in software engineering. Consequently, several approaches have been proposed to improve the comprehensibility of source code. One of such approaches are comments in the code that enable developers to explain the program with their own words or predefined tags. Some empirical studies indicate benefits of comments in certain situations, while others find no benefits at all. Thus, the real effect of comments on software development remains uncertain. In this article, we describe an experiment in which 277 participants, mainly professional software developers, performed small programming tasks on differently commented code. Based on quantitative and qualitative feedback, we i) partly replicate previous studies, ii) investigate performances of differently experienced participants when confronted with varying types of comments, and iii) discuss the opinions of developers on comments. Our results indicate that comments seem to be considered more important in previous studies and by our participants than they are for small programming tasks. While other mechanisms, such as proper identifiers, are considered more helpful by our participants, they also emphasize the necessity of comments in certain situations.
C1 [Nielebock, Sebastian; Krolikowski, Dariusz] Otto von Guericke Univ, Magdeburg, Germany.
   [Krueger, Jacob] Otto von Guericke Univ, Databases & Software Engn Grp, Magdeburg, Germany.
   [Ortmeier, Frank] Otto von Guericke Univ, CSE, Magdeburg, Germany.
   [Krueger, Jacob] Harz Univ Appl Sci Wernigerode, Magdeburg, Germany.
   [Leich, Thomas] Harz Univ Appl Sci Wernigerode, Requirements Engn, Wernigerode, Germany.
   [Leich, Thomas] Metop GmbH Magdeburg, Magdeburg, Germany.
C3 Otto von Guericke University; Otto von Guericke University; Otto von
   Guericke University
RP Nielebock, S (corresponding author), Otto von Guericke Univ, Magdeburg, Germany.
EM sebastian.nielebock@ovgu.de; dariusz.krolikowski@darekkay.com;
   jacob.krueger@ovgu.de; tleich@hs-harz.de; frank.ortmeier@ovgu.de
RI Nielebock, Sebastian/HSE-7136-2023
OI Nielebock, Sebastian/0000-0002-0147-3526; Kruger,
   Jacob/0000-0002-0283-248X
FU DFG [LE 3382/2-1]
FX This research is supported by DFG grant LE 3382/2-1.
CR Ali N, 2015, EMPIR SOFTW ENG, V20, P442, DOI 10.1007/s10664-014-9315-y
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   Anquetil N., 1998, PROC ANN IBM CTR ADV, P213
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Beck F, 2013, CONF PROC INT SYMP C, P63, DOI 10.1109/ICPC.2013.6613834
   Bezerra RMM, 2015, INT SYMP EMP SOFTWAR, P132, DOI 10.1109/ESEM.2015.7321213
   Boehm BW., 1981, Software Engineering Economics
   Börstler J, 2016, IEEE T SOFTWARE ENG, V42, P886, DOI 10.1109/TSE.2016.2527791
   Briand L, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P130, DOI [10.1109/ICSM.1997.624239, 10.1023/A:1009720117601]
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Carver JC, 2010, P 1 INT WORKSH REPL, P1
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Cook T. D., 1979, QUASIEXPERIMENTATION
   Corazza A, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P76, DOI 10.1109/SEAA.2015.20
   Cornelissen B, 2007, INT C PROGRAM COMPRE, P49
   Dinno A, 2015, STATA J, V15, P292, DOI 10.1177/1536867X1501500117
   Dunsmore HE., 1985, Empirical Foundations of Information and Software Science, P189
   ELSHOFF JL, 1982, COMMUN ACM, V25, P512, DOI 10.1145/358589.358596
   Feigenspan J., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P73
   Feigenspan J, 2013, EMPIR SOFTW ENG, V18, P699, DOI 10.1007/s10664-012-9208-x
   Fisher R. A., 1946, Statistical methods for research workers.
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Gamma Erich, 1995, DESIGN PATTERNS ELEM
   Gosling SD, 2004, AM PSYCHOL, V59, P93, DOI 10.1037/0003-066X.59.2.93
   Hanenberg S, 2014, EMPIR SOFTW ENG, V19, P1335, DOI 10.1007/s10664-013-9289-1
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hofmeister J, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P217, DOI 10.1109/SANER.2017.7884623
   Host M., 2000, EMPIR SOFTW ENG, V5, P201
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Jbara A, 2015, INT C PROGRAM COMPRE, P244, DOI 10.1109/ICPC.2015.35
   Ji Wenbin, 2015, INT SYST SOFTW PROD, P61, DOI DOI 10.1145/2791060.2791107
   Jiang Zhen Ming, 2006, MSR '06: Proceedings of the 2006 international workshop on Mining software repositories, P179, DOI DOI 10.1145/1137983.1138030
   Juristo N, 2009, INT SYMP EMP SOFTWAR, P357
   Khamis N, 2010, LECT NOTES COMPUT SC, V6177, P68, DOI 10.1007/978-3-642-13881-2_7
   KNUTH DE, 1984, COMPUT J, V27, P97, DOI 10.1093/comjnl/27.2.97
   Kobayashi K, 2013, CONF PROC INT SYMP C, P43, DOI 10.1109/ICPC.2013.6613832
   Koenemann J., 1991, Human Factors in Computing Systems. Reaching Through Technology. CHI '91. Conference Proceedings, P125, DOI 10.1145/108844.108863
   Kosar T, 2012, EMPIR SOFTW ENG, V17, P276, DOI 10.1007/s10664-011-9172-x
   Kramer D., 1999, Seventeenth Annual International Conference on Computer Documentation. Conference Proceedings, P147, DOI 10.1145/318372.318577
   Krüger J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P764, DOI 10.1145/3180155.3180215
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Lawrie D, 2007, INNOV SYST SOFTW ENG, V3, P303, DOI 10.1007/s11334-007-0031-2
   Mäder P, 2015, EMPIR SOFTW ENG, V20, P413, DOI 10.1007/s10664-014-9314-z
   Martin Robert C, 2009, Clean Code: a Handbook of Agile Software Craftsmanship
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   McBurney PW, 2016, EMPIR SOFTW ENG, V21, P17, DOI 10.1007/s10664-014-9344-6
   Norcio AF., 1982, Indentation, documentation and programmer comprehension, P118
   Nurvitadhi E, 2003, P 33 ANN FRONT ED, V1
   Orero P, 2018, J SPEC TRANSL, P105
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Rahman MM, 2015, IEEE INT WORK C SO, P81, DOI 10.1109/SCAM.2015.7335404
   Ratol IK, 2017, IEEE INT CONF AUTOM, P112, DOI 10.1109/ASE.2017.8115624
   Salviulo F., 2014, P INT C EV ASS SOFTW, P1, DOI [10.1145/2601248.2601251, DOI 10.1145/2601248.2601251]
   Schröter I, 2017, INT C PROGRAM COMPRE, P308, DOI 10.1109/ICPC.2017.9
   Seiler M, 2017, LECT NOTES COMPUT SC, V10153, P174, DOI 10.1007/978-3-319-54045-0_13
   Shakeel Y, 2018, 2018 IEEE/ACM 13TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR SCIENCE (SE4SCIENCE), P20, DOI 10.1145/3194747.3194748
   Sharon D, 1996, IEEE SOFTWARE, V13, P122, DOI 10.1109/52.476304
   Sheppard S, 1978, TR7A3B81003 GEN EL
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Siegel S., 1956, Nonparametric statistics for the behavioral sciences
   Siegmund J, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P13, DOI 10.1109/SANER.2016.35
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   Sommerlad Peter., 2008, Companion to the 23rd ACM SIGPLAN Conference on Object-Oriented Programming Systems Languages and Applications, P653, DOI DOI 10.1145/1449814.1449817
   Sridhara G., 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   Sridhara G, 2016, PROCEEDINGS OF THE 9TH INDIA SOFTWARE ENGINEERING CONFERENCE, P16, DOI 10.1145/2856636.2856638
   STANDISH TA, 1984, IEEE T SOFTWARE ENG, V10, P494, DOI 10.1109/TSE.1984.5010272
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Storey MA, 2005, PROG COMPREHEN, P181, DOI 10.1109/WPC.2005.38
   Storey MAD, 1997, PROCEEDINGS OF THE FOURTH WORKING CONFERENCE ON REVERSE ENGINEERING, P12, DOI 10.1109/WCRE.1997.624572
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Takang AA, 1996, J PROGRAM LANG, V4, P143
   TENNY T, 1988, IEEE T SOFTWARE ENG, V14, P1271, DOI 10.1109/32.6171
   Tenny T., 1985, SIGCSE Bulletin, V17, P44, DOI 10.1145/382208.382523
   Tiarks Rebecca., 2011, Proceedings of the Workshop Software Reengineering (WSR), P36
   Trochim W. M., 2006, RES METHODS KNOWLEDG
   Trümper J, 2013, CONF PROC INT SYMP C, P53, DOI 10.1109/ICPC.2013.6613833
   Vermeulen A, 2000, The elements of Java (tm) style
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Woodfield S. N., 1981, 5th International Conference on Software Engineering, P215
   Ying A. T., 2005, ACM SIGSOFT software engineering notes, V30, P1
NR 84
TC 15
Z9 17
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2019
VL 24
IS 3
BP 1418
EP 1457
DI 10.1007/s10664-018-9664-z
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ID9YT
UT WOS:000472043800011
DA 2024-07-18
ER

PT J
AU Vale, T
   de Almeida, ES
AF Vale, Tassio
   de Almeida, Eduardo Santana
TI Experimenting with information retrieval methods in the recovery of
   feature-code SPL traces
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software product lines; Software traceability; Information retrieval;
   Controlled-experiment
AB ContextThe information retrieval research provides alternatives to recover traces from existing software information. In the software product line (SPL) engineering context, further research on information retrieval methods is required to explore the existence of products' source code and support the SPL adoption by providing traceability information.ObjectiveThis work evaluates the methods' retrieval quality targeting the extraction of feature-code trace links in a set of variant-rich software development projects.MethodWe propose a research method comprising two experiments with five information retrieval methods (Classic vector, Latent semantic indexing, Neural network, Extended boolean and BM25), applied to forty-one projects. The SPLTrac suite automates the research operation, using the information retrieval methods results as input to perform a five-step quantitative data analysis procedure based on parametric and non-parametric statistical techniques. The quality measurement is expressed by four dependent variables: precision, recall, F-measure and execution time.ResultsWith a homogeneous result for execution time between methods, there are discrepancies for the other metrics. While Extended boolean presents the best results for precision and F-measure, BM25 provides the greatest recall results.ConclusionsSuch evidence indicates there is not a dominant method in terms of retrieval quality, since they need further improvements to achieve better performance in all quality perspectives.
C1 [Vale, Tassio] Fed Univ Reconcavo da Bahia, Ctr Exact Sci & Technol, Ctr Cruz das Almas, Rua Rui Barbosa 710, Salvador, BA, Brazil.
   [de Almeida, Eduardo Santana] Univ Fed Bahia, Dept Comp Sci, RiSE Reuse Software Engn Labs, Ave Adhemar de Barros S-N, Salvador, BA, Brazil.
C3 Universidade Federal da Bahia
RP Vale, T (corresponding author), Fed Univ Reconcavo da Bahia, Ctr Exact Sci & Technol, Ctr Cruz das Almas, Rua Rui Barbosa 710, Salvador, BA, Brazil.
EM tassio.vale@ufrb.edu.br; esa@rise.com.br
RI de Almeida, Eduardo/JJC-2493-2023
OI Vale, Tassio/0000-0002-7223-3263
CR [Anonymous], 2013, VAMOS VAMOS 13
   [Anonymous], 2012, Software and Systems Traceability
   [Anonymous], WILEY SERIES PROBABI
   [Anonymous], 1994, P TREC
   Apel S., 2013, IEEE Transactions on Software Engineering, V39, P63, DOI 10.1109/TSE.2011.120
   Apel S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P421, DOI 10.1145/1985793.1985851
   Baeza-Yates R A, 2011, MODERN INFORM RETRIE
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Batory D, 2004, IEEE T SOFTWARE ENG, V30, P355, DOI 10.1109/TSE.2004.23
   Bayer J, 2002, LECT NOTES COMPUT SC, V2290, P409
   Borg Markus, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P243, DOI 10.1109/ESEM.2013.39
   Borg M, 2014, EMPIR SOFTW ENG, V19, P1565, DOI 10.1007/s10664-013-9255-y
   Capilla R., 2013, SYSTEMS SOFTWARE VAR
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   Deelstra S, 2009, INFORM SOFTWARE TECH, V51, P195, DOI 10.1016/j.infsof.2008.04.002
   DeGroot MH, 2002, PROBABILITY STAT
   Furnas G. W., 1988, 11th International Conference on Research and Development in Information Retrieval, P465
   Gelman A, 2005, ANN STAT, V33, P1, DOI 10.1214/009053604000001048
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hedges LV., 2014, STAT METHODS META AN
   HOCHBERG Y, 1988, BIOMETRIKA, V75, P800, DOI 10.2307/2336325
   Jirapanthong W, 2005, 12th Asia-Pacific Software Engineering Conference, Proceedings, P506, DOI 10.1109/APSEC.2005.101
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kang K, 1990, TECH REP
   Kastner Christian., 2007, SOFTWARE PRODUCT LIN, P149
   Keenan E, 2012, ICSE 12
   Kernighan B.W., 1988, The C Programming Language
   Klock S., 2011, 6th international workshop on Traceability in emerging forms of software engineering, P24
   Kolesnikov Sergiy, 2014, P 6 INT WORKSHOP FEA, P1, DOI DOI 10.1145/2660190.2660191
   Kong L, 2009, SEKE 09
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Lindvall M, 1996, SOFTWARE PRACT EXPER, V26, P1161, DOI 10.1002/(SICI)1097-024X(199610)26:10<1161::AID-SPE58>3.0.CO;2-X
   Lopez-Herrejon RE, 2015, J SYST SOFTWARE, V103, P353, DOI 10.1016/j.jss.2014.10.037
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Metzger A., Proc. Futur. Softw. Eng. - FOSE 2014, ACM Press, New York, New York, USA, P70, DOI DOI 10.1145/2593882.2593888
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Ossher H, 2002, SPRING INT SER ENG C, V648, P293
   Parvathy AG, 2008, ICEIS 2008: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL ISAS-2, P64
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Riebisch M, 2001, P WORKSH ENG COMPL O
   Robertson S., 2004, P 13 ACM INT C INF K, P42
   Robertson S. E., 1994, SIGIR '94. Proceedings of the Seventeenth Annual International ACM-SIGIR Conference on Research and Development in Information Retrieval, P232
   SALTON G, 1973, J DOC, V29, P351, DOI 10.1108/eb026562
   SALTON G, 1983, COMMUN ACM, V26, P1022, DOI 10.1145/182.358466
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sobernig S, 2016, EMPIR SOFTW ENG, V21, P1670, DOI 10.1007/s10664-014-9336-6
   Spanoudakis G, 2005, HANDBOOK OF SOFTWARE ENGINEERING AND KNOWLEDGE ENGINEERING, VOL 3: RECENT ADVANCES, P395, DOI 10.1142/9789812775245_0014
   TUKEY JW, 1949, BIOMETRICS, V5, P99, DOI 10.2307/3001913
   Vale T, 2017, INFORM SOFTWARE TECH, V84, P1, DOI 10.1016/j.infsof.2016.12.004
   WELCH BL, 1947, BIOMETRIKA, V34, P28, DOI 10.2307/2332510
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wilkinson R., 1991, SIGIR Forum, P202
   Wohlin C., 2012, Experimentation in Software Engineering
NR 56
TC 9
Z9 11
U1 1
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2019
VL 24
IS 3
BP 1328
EP 1368
DI 10.1007/s10664-018-9652-3
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ID9YT
UT WOS:000472043800009
DA 2024-07-18
ER

PT J
AU Liu, B
   Nejati, S
   Lucia
   Briand, LC
AF Liu, Bing
   Nejati, Shiva
   Lucia
   Briand, Lionel C.
TI Effective fault localization of automotive Simulink models: achieving
   the trade-off between test oracle effort and fault localization accuracy
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Fault localization; Simulink models; Search-based testing; Test suite
   diversity; Supervised learning
ID VERIFICATION; FRAMEWORK; COVERAGE
AB One promising way to improve the accuracy of fault localization based on statistical debugging is to increase diversity among test cases in the underlying test suite. In many practical situations, adding test cases is not a cost-free option because test oracles are developed manually or running test cases is expensive. Hence, we require to have test suites that are both diverse and small to improve debugging. In this paper, we focus on improving fault localization of Simulink models by generating test cases. We identify four test objectives that aim to increase test suite diversity. We use four objectives in a search-based algorithm to generate diversified but small test suites. To further minimize test suite sizes, we develop a prediction model to stop test generation when adding test cases is unlikely to improve fault localization. We evaluate our approach using three industrial subjects. Our results show (1) expanding test suites used for fault localization using any of our four test objectives, even when the expansion is small, can significantly improve the accuracy of fault localization, (2) varying test objectives used to generate the initial test suites for fault localization does not have a significant impact on the fault localization results obtained based on those test suites, and (3) we identify an optimal configuration for prediction models to help stop test generation when it is unlikely to be beneficial. We further show that our optimal prediction model is able to maintain almost the same fault localization accuracy while reducing the average number of newly generated test cases by more than half.
C1 [Liu, Bing; Nejati, Shiva; Lucia; Briand, Lionel C.] Univ Luxembourg, SnT Ctr, Luxembourg, Luxembourg.
C3 University of Luxembourg
RP Nejati, S (corresponding author), Univ Luxembourg, SnT Ctr, Luxembourg, Luxembourg.
EM liu@svv.lu; nejati@svv.lu; lucia.lucia@uni.lu; briand@svv.lu
RI Nejati, Shiva/KBT-7650-2024
OI Nejati, Shiva/0000-0002-0281-8231
FU European Research Council (ERC) under the European Union's Horizon 2020
   research and innovation programme [694277]
FX We gratefully acknowledge funding from the European Research Council
   (ERC) under the European Union's Horizon 2020 research and innovation
   programme (grant agreement No 694277).
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   AGRAWAL H, 1990, SIGPLAN NOTICES, V25, P246, DOI 10.1145/93548.93576
   Alshahwan N., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, P181
   Androutsopoulos K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P573, DOI 10.1145/2568225.2568314
   [Anonymous], 1970, ACM SIGPLAN NOTICES, DOI DOI 10.1145/390013.808479
   [Anonymous], P 12 ANN C GEN EV CO
   [Anonymous], 1901, B SOC VAUD SCI N
   [Anonymous], 2007, COMPILERS PRINCIPLES
   [Anonymous], 2012, International Symposium on Software Testing and Analysis, ISSTA 2012, Minneapolis, MN, USA, July 15-20, 2012, DOI DOI 10.1145/2338965.2336790
   [Anonymous], 2014, P IEEE ACM 29 INT C
   [Anonymous], 2017, SIM
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Artzi S., 2010, ISSTA, P49, DOI DOI 10.1145/1831708.1831715
   Bagherzadeh M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P419, DOI 10.1145/3106237.3106278
   Balasubramanian D., 2011, P 2011 INT S SOFTWAR, P45, DOI [10.1145/2001420.2001427, DOI 10.1145/2001420.2001427]
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Binder R.V., 2000, AW OBJ TECHNOL S
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   Briand L, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P789, DOI 10.1145/2889160.2889212
   Brillout Angelo, 2009, Proceedings of Formal Methods for Components and Objects. 8th International Symposium (FMCO 2009). Revised Selected Papers, P208, DOI 10.1007/978-3-642-17071-3_11
   Campos J, 2013, IEEE INT CONF AUTOM, P257, DOI 10.1109/ASE.2013.6693085
   Chen TY, 2004, LECT NOTES COMPUT SC, V3321, P320
   Clark D, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P599, DOI 10.1109/ICSE.2015.202
   Cleve H, 2005, PROC INT CONF SOFTW, P342
   Fagin R, 2003, SIAM J DISCRETE MATH, V17, P134, DOI 10.1137/S0895480102412856
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Gay G, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2934672
   Gerlitz T, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P81, DOI 10.1109/WICSA.2016.23
   Gold NE, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P547, DOI 10.1145/3106237.3106304
   Hamon Gregoire, 2008, 3 WORKSH AUT FORM ME
   He NN, 2011, DES AUT CON, P224
   Jiang B, 2009, IEEE INT CONF AUTOM, P233, DOI 10.1109/ASE.2009.77
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Jost L, 2006, OIKOS, V113, P363, DOI 10.1111/j.2006.0030-1299.14714.x
   Kendall M. G., 1948, RANK CORRELATION MET
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Le Thi My Hanh, 2012, 2012 Fourth International Conference on Knowledge and Systems Engineering (KSE), P54, DOI 10.1109/KSE.2012.22
   Le Tien-Duy B, 2013, PROC IEEE INT CONF S, P310, DOI 10.1109/ICSM.2013.42
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   Liu B, 2017, EXPT DATA
   Liu B, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P359, DOI 10.1109/SANER.2017.7884636
   Liu B, 2016, SOFTW TEST VERIF REL, V26, P431, DOI 10.1002/stvr.1605
   Liu B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P146, DOI 10.1109/SANER.2016.38
   Liu C., 2005, P EUR SOFTW ENG C HE, V30, P286
   Luke S., 2009, Essentials of metaheuristics, V113
   Mao XG, 2014, J SYST SOFTWARE, V89, P51, DOI 10.1016/j.jss.2013.08.031
   Masri W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559932
   Mathur AP, 2006, FDN SOFTWARE TESTING
   MathWorks, 2017, STATEFLOW
   Matinnejad R, 2016, PROC INT CONF SOFTW, P595, DOI 10.1145/2884781.2884797
   Matinnejad R, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P84, DOI 10.1145/2786805.2786818
   Matinnejad R, 2015, INFORM SOFTWARE TECH, V57, P705, DOI 10.1016/j.infsof.2014.05.007
   Mohalik S, 2014, SOFTW TEST VERIF REL, V24, P155, DOI 10.1002/stvr.1489
   Mosterman P, 2011, Model-based testing for embedded systems
   Pantelic V, 2015, MODELSWARD 2015 PROCEEDINGS OF THE 3RD INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P50
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pasareanu CS, 2009, SMC-IT 2009: THIRD IEEE INTERNATIONAL CONFERENCE ON SPACE MISSION CHALLENGES FOR INFORMATION TECHNOLOGY, PROCEEDINGS, P83, DOI 10.1109/SMC-IT.2009.18
   Perez A, 2017, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2017.66
   Rapos EJ, 2016, 2016 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON MODELING IN SOFTWARE ENGINEERING (MISE), P34, DOI [10.1109/MiSE.2016.014, 10.1145/2896982.2896983]
   Reicherdt R, 2012, PROC INT CONF SOFTW, P551, DOI 10.1109/ICSE.2012.6227161
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Santelices R, 2009, PROC INT CONF SOFTW, P56, DOI 10.1109/ICSE.2009.5070508
   Satpathy M, 2012, SOFTW TEST VERIF REL, V22, P457, DOI 10.1002/stvr.444
   Schneider J, 2014, P 29 ACM IEEE INT C, P599
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Sridhar Adepu., 2014, Intelligent Computing, Networking, and Informatics, P737
   Thums A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P493, DOI 10.1109/ICSM.2012.6405312
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Varrette S, 2014, 2014 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS), P959, DOI 10.1109/HPCSim.2014.6903792
   Wang XM, 2009, PROC INT CONF SOFTW, P45, DOI 10.1109/ICSE.2009.5070507
   Windisch A, 2009, PROC INT CONF SOFTW, P395, DOI 10.1109/ICSE-COMPANION.2009.5071030
   Wong W. Eric, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P42
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Xia X, 2016, AUTOMAT SOFTW ENG, V23, P43, DOI 10.1007/s10515-014-0165-z
   Yin Yongfeng, 2014, Applied Mechanics and Materials, V687-691, P1389, DOI 10.4028/www.scientific.net/AMM.687-691.1389
   Zhan Y, 2004, LECT NOTES COMPUT SC, V3103, P1413
   Zhan Y, 2008, J SYST SOFTWARE, V81, P262, DOI 10.1016/j.jss.2007.05.039
   Zhan Y, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1061
   Zheng X, 2017, IEEE SYST J, V11, P2614, DOI 10.1109/JSYST.2015.2496293
NR 81
TC 15
Z9 16
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2019
VL 24
IS 1
BP 444
EP 490
DI 10.1007/s10664-018-9611-z
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HL3RV
UT WOS:000458634400015
DA 2024-07-18
ER

PT J
AU Rahimi, M
   Cleland-Huang, J
AF Rahimi, Mona
   Cleland-Huang, Jane
TI Evolving software trace links between requirements and source code
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Traceability; Evolution; Maintenance
ID EVENT-BASED TRACEABILITY; MANAGEMENT
AB Traceability provides support for diverse software engineering activities including safety analysis, compliance verification, test-case selection, and impact prediction. However, in practice, there is a tendency for trace links to degrade over time as the system continually evolves. This is especially true for links between source-code and upstream artifacts such as requirements - because developers frequently refactor and change code without updating the links. In this paper we present TLE (Trace Link Evolver), a solution for automating the evolution of bidirectional trace links between source code classes or methods and requirements. TLE depends on a set of heuristics coupled with refactoring detection tools and informational retrieval algorithms to detect predefined change scenarios that occur across contiguous versions of a software system. We first evaluate TLE at the class level in a controlled experiment to evolve trace links for revisions of two Java applications. Second, we comparatively evaluate several variants of TLE across six releases of our in-house Dronology project. We study the results of integrating human analyst feed back in the evolution cycle of this emerging project. Additionally, in this system, we compare the efficacy of class-level versus method-level evolution of trace links. Finally, we evaluate TLE in a larger scale across 27 releases of the Cassandra Database System and show that the evolved trace links are significantly more accurate than those generated using only information retrieval techniques.
C1 [Rahimi, Mona] Depaul Univ, Sch Comp, 243 S Wabash, Chicago, IL 60604 USA.
   [Cleland-Huang, Jane] Univ Notre Dame, Notre Dame, IN 46556 USA.
C3 DePaul University; University of Notre Dame
RP Rahimi, M (corresponding author), Depaul Univ, Sch Comp, 243 S Wabash, Chicago, IL 60604 USA.
EM m.rahimi@depaul.edu; JaneClelandHuang@nd.edu
FU US National Science Foundation [CCF:1319680, CCF:1647342]
FX The work in this paper was partially funded by the US National Science
   Foundation Grant CCF:1319680 and CCF:1647342.
CR Ajila SA, 2004, PROCEEDINGS OF THE 2004 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI-2004), P157, DOI 10.1109/IRI.2004.1431453
   ANISH PR, 2016, PROC INT CONF SOFTW, P843, DOI DOI 10.1145/2884781.2884801
   [Anonymous], 2001, SOFTWARE PRODUCT LIN
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   Anquetil N, 2010, SOFTW SYST MODEL, V9, P427, DOI 10.1007/s10270-009-0120-9
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Arnold S., 2010, P WORKSHOP REQUIREME
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Berenbach B., 2010, P C SYST ENG RES
   Borland LC, 2015, MODIFYING TRACELINKS
   Cassandra Documentation Cas, 2017, PLANET CASSANDRA
   Cassandra Documentation Cas, 2017, APACHE GIT REPOSITOR
   Cassandra Documentation Cas, 2017, DATASTAX RUBY DRIVER
   Cassandra Documentation Cas, 2017, DATASTAX DOCUMENTATI
   Cleland-Huang J., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P231, DOI 10.1109/RE.2012.6345809
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   Cleland-Huang J, 2002, P INT COMP SOFTW APP, P595, DOI 10.1109/CMPSAC.2002.1045069
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   Cleland-Huang J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P849, DOI 10.1145/2635868.2666612
   Collard ML, 2013, PROC IEEE INT CONF S, P516, DOI 10.1109/ICSM.2013.85
   Collard ML, 2011, IEEE INT WORK C SO, P173, DOI 10.1109/SCAM.2011.19
   De Lucia A., 2012, SOFTWARE SYSTEMS TRA, P71, DOI [10.1007/978-1-4471- 2239-5_4, DOI 10.1007/978-1-4471-2239-5_4]
   Dekhtyar A, 2007, INT REQUIR ENG CONF, P141, DOI 10.1109/RE.2007.17
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Domges R, 1998, COMMUN ACM, V41, P54, DOI 10.1145/290133.290149
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Garcia J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P901, DOI 10.1109/ICSE.2013.6606639
   Gervasi V, 2014, INT REQUIR ENG CONF, P143, DOI 10.1109/RE.2014.6912256
   Gotel O., 1995, Proceedings of the Second IEEE International Symposium on Requirements Engineering (Cat. No.95TH8040), P100, DOI 10.1109/ISRE.1995.512550
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Hammad M, 2011, SOFTWARE QUAL J, V19, P35, DOI 10.1007/s11219-010-9103-x
   Hassine J, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P81, DOI 10.1109/IWPSE.2005.8
   Hayashi S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P617, DOI 10.1109/ICSM.2012.6405336
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   IBM, 2015, RAT TEAM CONC 4 0 0
   Jirapanthong W, 2009, SOFTW SYST MODEL, V8, P117, DOI 10.1007/s10270-007-0066-8
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Lakshman Avinash, 2010, Operating Systems Review, V44, P35, DOI 10.1145/1773912.1773922
   Li Y, 2008, LECT NOTES COMPUT SC, V5007, P100
   Lucia AD, 2007, ACM T SOFTW ENG METH, V16, P4
   Mäder P, 2013, IEEE SOFTWARE, V30, P58, DOI 10.1109/MS.2013.60
   Mäder P, 2012, J SYST SOFTWARE, V85, P2205, DOI 10.1016/j.jss.2011.10.023
   Mäder P, 2008, INT REQUIR ENG CONF, P329, DOI 10.1109/RE.2008.25
   Mahmoud A, 2015, REQUIR ENG, V20, P281, DOI 10.1007/s00766-013-0199-y
   Maletic J.I., 2005, 3rd ACM International Workshop on Traceability in Emerging Forms of Software Engineering (TEFSE), P67
   Mavin A, 2016, INT REQUIR ENG CONF, P276, DOI 10.1109/RE.2016.38
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mitschke Ralf., 2008, ECMDA Traceability Workshop (ECMDA-TW), Berlin, Germany, 2008, Proceedings, P87
   Mohan K, 2008, DECIS SUPPORT SYST, V45, P922, DOI 10.1016/j.dss.2008.03.003
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Negara S, 2013, LECT NOTES COMPUT SC, V7920, P552, DOI 10.1007/978-3-642-39038-8_23
   Nejati S, 2012, INFORM SOFTWARE TECH, V54, P569, DOI 10.1016/j.infsof.2012.01.005
   Nuseibeh B, 2001, COMPUTER, V34, P115, DOI 10.1109/2.910904
   OLSSON T, 2002, INT C SOFTW ENG APPL
   Ouni A, 2014, ADV COMPUT, V94, P103, DOI 10.1016/B978-0-12-800161-5.00004-9
   Pimentel J, 2012, REQUIREMENTS ARCHITE
   Pohl K, 1999, ACM T SOFTW ENG METH, V8, P343, DOI 10.1145/322993.322995
   Rahimi M, 2016, IEEE WORKSH REQ PATT
   Rahimi R, 2016, 2016 IEEE 17TH INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE SWITCHING AND ROUTING (HPSR), P93, DOI 10.1109/HPSR.2016.7525645
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Rempel P, 2014, 36 INT C SOFTW ENG I
   Robertson S., 2012, MASTERING REQUIREMEN
   RYDER BG, 1979, IEEE T SOFTWARE ENG, V5, P216, DOI 10.1109/TSE.1979.234183
   Shin Y., 2012, Proceedings of the 27th Annual ACM Symposium on Applied Computing, SAC'12, P1069, DOI DOI 10.1145/2245276.2231943
   Shin Y, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P61, DOI 10.1109/SST.2015.13
   Sultanov H, 2011, REQUIR ENG, V16, P209, DOI 10.1007/s00766-011-0121-4
   TraceLab, 2015, TRAC SOFTW TRAC INST
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
   Winkler S, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P49, DOI 10.1109/TEFSE.2009.5069583
   [No title captured]
NR 70
TC 15
Z9 20
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2018
VL 23
IS 4
BP 2198
EP 2231
DI 10.1007/s10664-017-9561-x
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GK0MK
UT WOS:000435804100012
DA 2024-07-18
ER

PT J
AU Antinyan, V
   Staron, M
   Sandberg, A
AF Antinyan, Vard
   Staron, Miroslaw
   Sandberg, Anna
TI Evaluating code complexity triggers, use of complexity measures and the
   influence of code complexity on maintenance time
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Complexity; Measure; Survey; Internal quality; Maintainability
ID SOFTWARE COMPLEXITY; METRICS; VALIDATION; CRITIQUE; SYSTEMS
AB Code complexity has been studied intensively over the past decades because it is a quintessential characterizer of code's internal quality. Previously, much emphasis has been put on creating code complexity measures and applying these measures in practical contexts. To date, most measures are created based on theoretical frameworks, which determine the expected properties that a code complexity measure should fulfil. Fulfilling the necessary properties, however, does not guarantee that the measure characterizes the code complexity that is experienced by software engineers. Subsequently, code complexity measures often turn out to provide rather superficial insights into code complexity. This paper supports the discipline of code complexity measurement by providing empirical insights into the code characteristics that trigger complexity, the use of code complexity measures in industry, and the influence of code complexity on maintenance time. Results of an online survey, conducted in seven companies and two universities with a total of 100 respondents, show that among several code characteristics, two substantially increase code complexity, which subsequently have a major influence on the maintenance time of code. Notably, existing code complexity measures are poorly used in industry.
C1 [Antinyan, Vard; Staron, Miroslaw; Sandberg, Anna] Univ Gothenburg, Div Software Engn, Horselgangen 11, S-41756 Gothenburg, Sweden.
C3 University of Gothenburg
RP Antinyan, V (corresponding author), Univ Gothenburg, Div Software Engn, Horselgangen 11, S-41756 Gothenburg, Sweden.
EM vard.antinyan@cse.gu.se; miroslaw.staron@cse.gu.se;
   anna70sandberg@gmail.com
CR Abran A., 2010, Software metrics and software metrology
   Al-Hajjaji M, 2013, EVALUATING SOFTWARE
   [Anonymous], 2003, Modernizing Legacy Systems: Software Technologies, Engineering Processes,and Business Practices
   [Anonymous], 2014, SOFTWARE METRICS RIG, DOI DOI 10.1201/B17461
   [Anonymous], 1995, ISERN9503
   Antinyan V, 2014, 2014 SOFTW EV WEEK I
   Antinyan V, 2014, ACTA CYBERN, V21, P367, DOI 10.14232/actacyb.21.3.2014.6
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   BASILI VR, 1980, QUALITATIVE SOFTWARE
   Briand LC, 1996, IEEE T SOFTWARE ENG, V22, P68, DOI 10.1109/32.481535
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Chapin N, 1979, P 1979 NCC
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Devanbu P, 2016, P 38 INT C SOFTW ENG
   Fenton NE, 1999, J SYST SOFTWARE, V47, P149, DOI 10.1016/S0164-1212(99)00035-7
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Geraci A, 1991, IEEE STANDARD COMPUT, P610
   Glass RL, 2002, COMMUN ACM, V45, P19
   GONZALEZ RR, 1995, J SYST SOFTWARE, V29, P17, DOI 10.1016/0164-1212(94)00126-8
   Halstead M.H., 1977, OPERATING PROGRAMMIN
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   Jay Graylin, 2009, Journal of Software Engineering and Applications, V2, P137, DOI 10.4236/jsea.2009.23020
   Kaner C., 2004, METRICS 2004 IEEE CS
   Keshavarz, 2011, INTERFACES, V5, P15
   KITCHENHAM B, 1995, IEEE T SOFTWARE ENG, V21, P929, DOI 10.1109/32.489070
   Koopman P, 2014, COMMUNICATION
   Kpodjedo S, 2011, EMPIR SOFTW ENG, V16, P141, DOI 10.1007/s10664-010-9151-7
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mens T, 2012, COMPUTER, V45, P79, DOI 10.1109/MC.2012.273
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Moses J, 2001, COMPLEXITY FLEXIBILI
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   MUNSON JC, 1993, J SYST SOFTWARE, V20, P217, DOI 10.1016/0164-1212(93)90065-6
   Rea L.M., 2014, Designing and conducting survey research: A comprehensive guide
   Rechtin E., 2010, The Art of Systems Architecting
   Salman N., 2006, CANKAYA U J ARTS SCI, V1, P39
   Sarwar S, 2013, 2013 8 INT C DIG INF
   SCHNEIDEWIND NF, 1992, IEEE T SOFTWARE ENG, V18, P410, DOI 10.1109/32.135774
   SHEPPERD M, 1994, J SYST SOFTWARE, V26, P197, DOI 10.1016/0164-1212(94)90011-6
   Subramanian GH, 2006, EMPIR SOFTW ENG, V11, P541, DOI 10.1007/s10664-006-9023-3
   Suh SD, 2010, SOFTW C ASWEC 2010 2
   Tao H.W., 2014, WUHAN UNIV J NAT SCI, V19, P512, DOI DOI 10.1007/s11859-014-1046-9
   TEGARDEN DP, 1995, DECIS SUPPORT SYST, V13, P241, DOI 10.1016/0167-9236(93)E0045-F
   TENNY T, 1988, IEEE T SOFTWARE ENG, V14, P1271, DOI 10.1109/32.6171
   WANG Y, 2003, 2 IEEE INT C COGN IN
   Waweru SN, 2013, INT J ADV RES COMPUT, V4
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   Xiao S, 2014, SOCIAL INFLUENCES SE
   Yang YB, 2015, IEEE T SOFTWARE ENG, V41, P331, DOI 10.1109/TSE.2014.2370048
   Zuse H., 1991, SOFTWARE COMPLEXITY, DOI 10.1515/9783110866087
NR 50
TC 22
Z9 24
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2017
VL 22
IS 6
BP 3057
EP 3087
DI 10.1007/s10664-017-9508-2
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FI3MB
UT WOS:000411865400009
OA hybrid
DA 2024-07-18
ER

PT J
AU Charpentier, A
   Falleri, JR
   Morandat, F
   Yahia, EB
   Réveillère, L
AF Charpentier, Alan
   Falleri, Jean-Remy
   Morandat, Floreal
   Yahia, Elyas Ben Hadj
   Reveillere, Laurent
TI Raters' reliability in clone benchmarks construction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Duplication; Code clone; Empirical study; Software metrics
ID CODE
AB Cloned code often complicates code maintenance and evolution and must therefore be effectively detected. One of the biggest challenges for clone detectors is to reduce the amount of irrelevant clones they found, called false positives. Several benchmarks of true and false positive clones have been introduced, enabling tool developers to compare, assess and fine-tune their tools. Manual inspection of clone candidates is performed by raters that do not have expertise on the underlying code. This way of building benchmarks might be unreliable when considering context-dependent clones i.e., clones valid for a specific purpose. Our goal is to investigate the reliability of rater judgments about context-dependent clones. We randomly select about 600 clones from two projects and ask several raters, including experts of the projects, to manually classify these clones. We observe that judgments of non expert raters are not always repeatable. We also observe that they seldomly agree with each others and with the expert. Finally, we find that the project and the fact that a clone is a true or false positive might have an influence on the agreement between the expert and non experts. Therefore, using non experts to produce clone benchmarks could be unreliable.
C1 [Charpentier, Alan; Falleri, Jean-Remy; Morandat, Floreal; Yahia, Elyas Ben Hadj; Reveillere, Laurent] Univ Bordeaux, LaBRI, UMR 5800, F-33400 Talence, France.
C3 Universite de Bordeaux; Centre National de la Recherche Scientifique
   (CNRS)
RP Charpentier, A (corresponding author), Univ Bordeaux, LaBRI, UMR 5800, F-33400 Talence, France.
EM acharpen@labri.fr; falleri@labri.fr; fmoranda@labri.fr;
   elyas.bhy@labri.fr; reveillere@labri.fr
OI Falleri, Jean-Remy/0000-0002-8284-7218
CR BAKER BS, 1995, SECOND WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P86, DOI 10.1109/WCRE.1995.514697
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bissyandé TF, 2013, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2013.19
   Charpentier A., 2015, P 19 INT C EVALUATIO, P1, DOI DOI 10.1145/2745802.2745821
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Falleri JR, 2014, P INT C AUT SOFTW EN
   Faust D, 2003, SOFTWARE PRACT EXPER, V33, P933, DOI 10.1002/spe.530
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Nguyen HA, 2012, IEEE T SOFTWARE ENG, V38, P1008, DOI 10.1109/TSE.2011.90
   Ihaka R., 1996, J COMPUTATIONAL GRAP, V5, P299, DOI [DOI 10.1080/10618600.1996.10474713, 10.2307/1390807, DOI 10.2307/1390807]
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Kalibera T, 2014, ACM SIGPLAN NOTICES, V49, P89, DOI 10.1145/2674025.2576205
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser C, 2006, DAGST SEM P IBFI SCH
   Kapser C, 2006, WORK CONF REVERSE EN, P19
   Koschke R, 2006, WORK CONF REVERSE EN, P253
   Krutz Daniel E, 2014, P 11 WORK C MIN SOFT, P388, DOI 10.1145/2597073.2597127
   Lague B, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P314, DOI 10.1109/ICSM.1997.624264
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Martinetz T., 1991, Artificial Neural Networks. Proceedings of the 1991 International Conference. ICANN-91, P397
   Mende T, 2009, J SOFTW MAINT EVOL-R, V21, P143, DOI 10.1002/smr.402
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Selim G. M. K., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P227, DOI 10.1109/WCRE.2010.33
   Svajlenko J, 2014, ICSME, P5
   Walenstein A, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/WCRE.2003.1287259
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   Yang J., 2014, The Effects of Active Scapular Protraction on the Muscle Activation and Function of the Upper Extremity, P1
NR 30
TC 5
Z9 5
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2017
VL 22
IS 1
BP 235
EP 258
DI 10.1007/s10664-015-9419-z
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EI3GS
UT WOS:000392378400006
DA 2024-07-18
ER

PT J
AU Hafiz, M
   Fang, M
AF Hafiz, Munawar
   Fang, Ming
TI Game of detections: how are security vulnerabilities discovered in the
   wild?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Secure software engineering; Vulnerability; Empirical study
AB There is little or no information available on what actually happens when a software vulnerability is detected. We performed an empirical study on reporters of the three most prominent security vulnerabilities: buffer overflow, SQL injection, and cross site scripting vulnerabilities. The goal was to understand the methods and tools used during the discovery and whether the community of developers exploring one security vulnerability differs-in their approach-from another community of developers exploring a different vulnerability. The reporters were featured in the SecurityFocus repository for twelve month periods for each vulnerability. We collected 127 responses. We found that the communities differ based on the security vulnerability they target; but within a specific community, reporters follow similar approaches. We also found a serious problem in the vulnerability reporting process that is common for all communities. Most reporters, especially the experienced ones, favor full-disclosure and do not collaborate with the vendors of vulnerable software. They think that the public disclosure, sometimes supported by a detailed exploit, will put pressure on vendors to fix the vulnerabilities. But, in practice, the vulnerabilities not reported to vendors are less likely to be fixed. Ours is the first study on vulnerability repositories that targets the reporters of the most common security vulnerabilities, thus concentrating on the people involved in the process; previous works have overlooked this rich information source. The results are valuable for beginners exploring how to detect and report security vulnerabilities and for tool vendors and researchers exploring how to automate and fix the process.
C1 [Hafiz, Munawar; Fang, Ming] Auburn Univ, Dept Comp Sci & Software Engn, Auburn, AL 36849 USA.
C3 Auburn University System; Auburn University
RP Hafiz, M (corresponding author), Auburn Univ, Dept Comp Sci & Software Engn, Auburn, AL 36849 USA.
EM munawar.hafiz@gmail.com; mzf0018@tigermail.auburn.edu
CR Alhazmi O, 2006, RAMS 06
   Anbalagan P., 2009, ISSRE '09
   Aranda J, 2009, ICSE 09
   Arbaugh WA, 2000, COMPUTER, V33, P52, DOI 10.1109/2.889093
   Arora A., 2004, WEIS 04
   Austin A., 2011, ESEM 11
   Baca D, 2013, SOFTWARE PRACT EXPER, V43, P259, DOI 10.1002/spe.2109
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Bosu A, 2014, 22 ACM SIGS IN PRESS
   Browne H, 2001, IEEE S P 01
   Cheswick B., 1992, P WINT USENIX C, P163
   Cova M, 2010, LECT NOTES COMPUT SC, V6307, P442, DOI 10.1007/978-3-642-15512-3_23
   Denzin N.K., 1978, RES ACT THEORETICAL
   Doupe A., 2010, DIMVA 10
   Edmundson Anne, 2013, Engineering Secure Software and Systems. 5th International Symposium, ESSoS 2013. Proceedings, P197, DOI 10.1007/978-3-642-36563-8_14
   Fang M., 2014, 2014 ACM IEEE INT S, P23
   Finifter M., 2013, USENIX SECURITY 13
   Franklin J, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P375
   Frei S, 2008, SECURITY PERFORMANCE
   Frei S., 2009, WEIS 09
   Gopalakrishna R, 2005, TECH REP
   Johnson B., 2013, ICSE 13
   Kanich C, 2008, CCS'08: PROCEEDINGS OF THE 15TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P3
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Layman L, 2007, ESEM 07
   Massacci F., 2010, METRISEC 10
   McGraw G, 2011, SOFTWARE SECURITY CO
   McQueen MA, 2009, System Sciences, P1, DOI 10.1109/HICSS.2009.186
   Meiklejohn S., 2013, P 2013 C INT MEAS C, P127, DOI 10.1145/2504730.2504747.10.1145
   Mell P, 2007, TECH REP
   Okhravi H., 2008, INT J COMPUTATIONAL, V3, P109
   Open Web Application Security Project (OWASP), 2014, OW TOP 10 2013 PROJ
   Patton M. Q, 2004, Qualitative research & evaluation methods, V4
   Rutar N, 2004, ISSRE 04
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Scandariato R, 2013, PROC INT SYMP SOFTW, P451, DOI 10.1109/ISSRE.2013.6698898
   Schneier B, 2000, FULL DISCLOSURE WIND
   Scholte T., 2012, FC 11
   Schryen G, 2009, COMPREHENSIVE COMP A
   Shahzad M, 2012, PROC INT CONF SOFTW, P771, DOI 10.1109/ICSE.2012.6227141
   Suto L, 2007, TECH REP
   Weinstein M, 2012, TAMS ANAL MACINTOSH
   Wilander J, 2003, NDSS 03
   Wu Y., 2010, SESS 10
   Xiao Shundan, 2014, P 17 ACM C COMPUTER, P1095, DOI DOI 10.1145/2531602.2531722
   Yin R. K., 2009, CASE STUDY RES DESIG, V4th ed.
   Zhang S., 2011, DEXA 11
NR 47
TC 20
Z9 23
U1 0
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2016
VL 21
IS 5
BP 1920
EP 1959
DI 10.1007/s10664-015-9403-7
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DU2BX
UT WOS:000382017100002
DA 2024-07-18
ER

PT J
AU Adams, B
   Kavanagh, R
   Hassan, AE
   German, DM
AF Adams, Bram
   Kavanagh, Ryan
   Hassan, Ahmed E.
   German, Daniel M.
TI An empirical study of integration activities in distributions of open
   source software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software integration; Software reuse; Open source distributions; Debian;
   Ubuntu and FreeBSD
ID PRODUCT DEVELOPMENT; RELEASE MANAGEMENT; REUSE; CHALLENGES
AB Reuse of software components, either closed or open source, is considered to be one of the most important best practices in software engineering, since it reduces development cost and improves software quality. However, since reused components are (by definition) generic, they need to be customized and integrated into a specific system before they can be useful. Since this integration is system-specific, the integration effort is non-negligible and increases maintenance costs, especially if more than one component needs to be integrated. This paper performs an empirical study of multi-component integration in the context of three successful open source distributions (Debian, Ubuntu and FreeBSD). Such distributions integrate thousands of open source components with an operating system kernel to deliver a coherent software product to millions of users worldwide. We empirically identified seven major integration activities performed by the maintainers of these distributions, documented how these activities are being performed by the maintainers, then evaluated and refined the identified activities with input from six maintainers of the three studied distributions. The documented activities provide a common vocabulary for component integration in open source distributions and outline a roadmap for future research on software integration.
C1 [Adams, Bram] Polytech Montreal, MCIS, Montreal, PQ, Canada.
   [Kavanagh, Ryan; Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON, Canada.
   [German, Daniel M.] Univ Victoria, Comp Sci, Victoria, BC, Canada.
C3 Universite de Montreal; Polytechnique Montreal; Queens University -
   Canada; University of Victoria
RP Adams, B (corresponding author), Polytech Montreal, MCIS, Montreal, PQ, Canada.
EM bram.adams@polymtl.ca; ryan@cs.queensu.ca; ahmed@cs.queensu.ca;
   dmg@uvic.ca
RI Ali, Ahmed/HOF-4672-2023; KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan,
   Ahmed/AAB-7241-2019
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Kavanagh,
   Ryan/0000-0001-9497-4276; Adams, Bram/0000-0001-7213-4006
CR Adams B, 2015, REPLICATION PACKAGE
   Adams B, 2007, PROC IEEE INT CONF S, P214
   [Anonymous], 1995, MYTHICAL MAN MONTH
   [Anonymous], 2013, FREEBSD DEV
   [Anonymous], 2011, FREEBSD PORTERS HDB
   [Anonymous], P 1 INT C OP SOURC S
   [Anonymous], 2012, How Google Tests Software
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   Barth A, 2011, DEBIAN
   Basili VR, 1996, COMMUN ACM, V39, P104, DOI 10.1145/236156.236184
   Begel A, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P1, DOI 10.1109/CHASE.2009.5071401
   Bhuta J, 2007, WICSA, P6
   Boehm B, 1999, COMPUTER, V32, P135, DOI 10.1109/2.738311
   Bowman I. T., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P555, DOI 10.1109/ICSE.1999.841045
   Brownsword L, 2000, IEEE SOFTWARE, V17, P48, DOI 10.1109/52.854068
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Crnkovic I, 2002, J SYST SOFTWARE, V61, P201, DOI 10.1016/S0164-1212(01)00148-0
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Dagenais B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P481, DOI 10.1145/1368088.1368154
   de Souza C. R. B., 2004, Computer Supported Cooperative Work Conference Proceedings, P63, DOI 10.1145/1031607.1031620
   de Souza CRB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1145/1368088.1368122
   Debian project, 2011, DEB DEV REF
   DeLine R., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P97, DOI 10.1109/ICSE.1999.840999
   Di Cosmo R, 2011, SCI COMPUT PROGRAM, V76, P1144, DOI 10.1016/j.scico.2010.11.001
   Di Giacomo P, 2005, LECT NOTES COMPUT SC, V3412, P301
   Dogguy M, 2010, P 21 JOURN FRANC LAN
   Frakes W, 1996, ACM COMPUT SURV, V28, P415, DOI 10.1145/234528.234531
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   GAFFNEY JE, 1989, INFORM SOFTWARE TECH, V31, P258, DOI 10.1016/0950-5849(89)90005-0
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   German DM, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P140, DOI 10.1109/WCRE.2007.5
   German DM, 2009, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.2009.5070520
   German DanielM., 2010, P FSESDP WORKSHOP FU, P129
   Gonzalez-Barahona JM, 2009, EMPIR SOFTW ENG, V14, P262, DOI 10.1007/s10664-008-9100-x
   Goode S, 2005, INFORM MANAGE-AMSTER, V42, P669, DOI 10.1016/j.im.2004.01.011
   Hauge O, 2008, INT FED INFO PROC, V275, P211
   Hauge O, 2010, INFORM SOFTWARE TECH, V52, P1133, DOI 10.1016/j.infsof.2010.05.008
   Heinisch O., 1963, Sampling Techniques, V2, DOI [10.1002/bimj.19650070312, DOI 10.1002/BIMJ.19650070312]
   Herbsleb J. D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P85, DOI 10.1109/ICSE.1999.840998
   Herbsleb JD, 2001, PROC INT CONF SOFTW, P81, DOI 10.1109/ICSE.2001.919083
   Hertzog R, 2011, DEBAIN ROLLING MY OW
   Information Technology Resources Board, 1999, TECHNICAL REPORT
   Jaaksi A, 2007, INT FED INFO PROC, V234, P85, DOI 10.1007/978-0-387-72486-7_7
   Khomh F., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P179, DOI 10.1109/MSR.2012.6224279
   Klaus PohlGunter Bockle Frank J van der Linden., 2005, SOFTWARE PRODUCT LIN
   Koshy J, 2013, BUILDING PRODUCTS FR
   Lemos R, 2003, MICROSOFT DETAILS NE
   Lewis P, 2000, TECHNICAL REPORT
   Li JY, 2008, IEEE T SOFTWARE ENG, V34, P271, DOI 10.1109/TSE.2008.14
   Li JY, 2009, IEEE SOFTWARE, V26, P80, DOI 10.1109/MS.2009.33
   Li JY, 2005, LECT NOTES COMPUT SC, V3547, P54
   Lundqvist A, 2013, GNU LINUX DISTRIBUTI
   Mattsson M, 1999, COMMUN ACM, V42, P81
   McCamant S., 2003, Software Engineering Notes, V28, P287, DOI 10.1145/949952.940110
   McIntosh S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P141, DOI 10.1145/1985793.1985813
   Merilinna J, 2006, EUROMICRO CONF PROC, P170, DOI 10.1109/EUROMICRO.2006.61
   Meyer M., 1997, The power of product platforms
   Michlmayr M, 2007, INT FED INFO PROC, V234, P295
   Mistrík I, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P389, DOI 10.1007/978-3-642-10294-3_19
   Mohamed A., 2008, Software Process: Improvement and Practice, V13, P157
   Morisio M, 2002, J SYST SOFTWARE, V61, P189, DOI 10.1016/S0164-1212(01)00147-9
   Navarrete F, 2005, EUROMICRO-SEAA 2005: 31st EUROMICRO Conference on Software Engineering and Advanced Applications, Proceedings, P160
   Orsila H, 2008, INT FED INFO PROC, V275, P159
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, P1, DOI 10.1109/TSE.1976.233797
   Remnant SJ, 2011, NEW RELEASE PROCESS
   Rodin J, 2011, DEBIAN NEW MAINTAINE
   Ruffin M, 2004, IEEE SOFTWARE, V21, P82, DOI 10.1109/MS.2004.1259227
   Sadowski BM, 2008, INF ECON POLICY, V20, P323, DOI 10.1016/j.infoecopol.2008.05.001
   Scacchi W, 2006, SOFTW PROCESS IMPROV, V11
   Seaman CB, 1996, P 1996 C CTR ADV STU, P34
   Shihab E, 2012, INT SYMP EMP SOFTWAR, P301, DOI 10.1145/2372251.2372305
   Shuttleworth M, 2008, THE ART OF RELEASE
   Sojer M, 2010, J ASSOC INF SYST, V11, P868
   Spinellis D, 2004, IEEE SOFTWARE, V21, P28, DOI 10.1109/MS.2004.1259204
   Stol KJ, 2011, INFORM SOFTWARE TECH, V53, P1319, DOI 10.1016/j.infsof.2011.06.007
   Szyperski C., 2002, COMPONENT SOFTWARE, V2nd
   The BSD Certification Group, 2005, TECHNICAL REPORT
   The Fedora Project, 2011, PACK UPD HOWTO
   The FreeBSD Documentation Project, 2011, FREEBSD PORT HDB
   Tiangco F., 2005, PROCS, V1, P130
   Trezentos Paulo, 2010, ASE 10, P427, DOI DOI 10.1145/1858996.1859087
   van der Hoek A, 2003, SOFTWARE PRACT EXPER, V33, P77, DOI 10.1002/spe.496
   van der Linden Frank, 2009, UPGRADE: The European Journal for the Informatics Professional, V10, P32
   Ven K, 2008, INFORM SOFTWARE TECH, V50, P991, DOI 10.1016/j.infsof.2007.09.001
   Weibing Chen, 2008, Software Process: Improvement and Practice, V13, P89, DOI 10.1002/spip.361
   Xia X, 2013, IEEE INT C ENG COMP, P222, DOI 10.1109/ICECCS.2013.40
   Yakimovich D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P296, DOI 10.1109/ICSE.1999.841020
NR 88
TC 17
Z9 20
U1 0
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2016
VL 21
IS 3
BP 960
EP 1001
DI 10.1007/s10664-015-9371-y
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VO
UT WOS:000379061700008
DA 2024-07-18
ER

PT J
AU McIlroy, S
   Ali, N
   Khalid, H
   Hassan, AE
AF McIlroy, Stuart
   Ali, Nasir
   Khalid, Hammad
   Hassan, Ahmed E.
TI Analyzing and automatically labelling the types of user issues that are
   raised in mobile app reviews
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Mobile apps; Reviews; Multi-labelling; Anomaly detection
AB Mobile app reviews by users contain a wealth of information on the issues that users are experiencing. For example, a review might contain a feature request, a bug report, and/or a privacy complaint. Developers, users and app store owners (e.g. Apple, Blackberry, Google, Microsoft) can benefit from a better understanding of these issues - developers can better understand users' concerns, app store owners can spot anomalous apps, and users can compare similar apps to decide which ones to download or purchase. However, user reviews are not labelled, e.g. we do not know which types of issues are raised in a review. Hence, one must sift through potentially thousands of reviews with slang and abbreviations to understand the various types of issues. Moreover, the unstructured and informal nature of reviews complicates the automated labelling of such reviews. In this paper, we study the multi-labelled nature of reviews from 20 mobile apps in the Google Play Store and Apple App Store. We find that up to 30 % of the reviews raise various types of issues in a single review (e.g. a review might contain a feature request and a bug report). We then propose an approach that can automatically assign multiple labels to reviews based on the raised issues with a precision of 66 % and recall of 65 %. Finally, we apply our approach to address three proof-of-concept analytics use case scenarios: (i) we compare competing apps to assist developers and users, (ii) we provide an overview of 601,221 reviews from 12,000 apps in the Google Play Store to assist app store owners and developers and (iii) we detect anomalous apps in the Google Play Store to assist app store owners and users.
C1 [McIlroy, Stuart; Khalid, Hammad; Hassan, Ahmed E.] Queens Univ, Sch Comp, SAIL, Kingston, ON, Canada.
   [Ali, Nasir] Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON, Canada.
C3 Queens University - Canada; University of Waterloo
RP McIlroy, S (corresponding author), Queens Univ, Sch Comp, SAIL, Kingston, ON, Canada.
EM mcilroy@cs.queensu.ca; nasir.ali@uwaterloo.ca; hammad@cs.queensu.ca;
   ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan, Ahmed/AAB-7241-2019; Ali,
   Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; 
CR Abubakar Alhassan Muhammad., 2013, e-Proceeding of Software Engineering Postgraduates Workshop (SEPoW), page, P136
   Ahsan S. N., 2009, Proceedings of the 33rd Annual IEEE Software Engineering Workshop SEW-33 2009, P79, DOI 10.1109/SEW.2009.15
   [Anonymous], 22 ACM SIGSOFT INT S
   [Anonymous], MOBILE ANAL
   [Anonymous], MEKA MULTI LABEL EXT
   [Anonymous], 2013, P 21 IEEE INT REQ EN
   [Anonymous], 2011, P 49 ANN M ASS COMPU
   [Anonymous], WHEN SHOULD IN PRESS
   [Anonymous], 2010, TWITTER CORPUS SENTI
   [Anonymous], APP ANNIE
   [Anonymous], P 2013 INT C SOFTW E
   [Anonymous], DEV EC Q1 2014
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bo Pang, 2008, Foundations and Trends in Information Retrieval, V2, P1, DOI 10.1561/1500000001
   Brameier M, 2001, IEEE T EVOLUT COMPUT, V5, P17, DOI 10.1109/4235.910462
   Butler M, 2011, IEEE PERVAS COMPUT, V10, P4, DOI 10.1109/MPRV.2011.1
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Dan Han, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P83, DOI 10.1109/WCRE.2012.18
   Esbensen K.H., 2010, Multivariate Data Analysis - in Practice: An Introduction to Multivariate Data Analysis and Experimental Design, V5Th
   Fan Rong-En, 2007, A study on threshold selection for multi-label classification
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Ganesan Kavita., 2012, Proceedings of the 21st international conference on World Wide Web, P869
   Ghaith S, 2013, EUR CON SFTWR MTNCE, P379, DOI 10.1109/CSMR.2013.54
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Harman M., 2012, App Store Mining and Analysis: MSR for App Stores
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hu M., 2004, P 10 ACM SIGKDD INT, P168, DOI DOI 10.1145/1014052.1014073
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Jindal N., 2007, P 16 INT WORLD WID W, P1189, DOI DOI 10.1145/1242572.1242759
   Khalid H, 2014, STUDY FREE IOS APPS, P1
   Kim H.W., 2011, 11 INT DSI 16 APDSI
   MELVILLE P, 2009, P 15 ACM SIGKDD INT, P1275
   Michielan L, 2009, J CHEM INF MODEL, V49, P2588, DOI 10.1021/ci900299a
   Mudambi SM, 2010, MIS QUART, V34, P185
   Nguyen ThanhHD., 2012, P 3 ACMSPEC INT C PE, P299
   Pagano D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P953, DOI 10.1109/ICSE.2013.6606645
   Pang B, 2002, PROCEEDINGS OF THE 2002 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING, P79, DOI 10.3115/1118693.1118704
   Pang B., 2004, ANN M ASS COMP LING, P271, DOI [10.3115/1218955.1218990, DOI 10.3115/1218955.1218990]
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Rajaraman A., 2012, MINING MASSIVE DATAS
   Ramage D., 2011, Stanford topic modeling toolbox
   Ramage Daniel., 2009, EMNLP, DOI DOI 10.3115/1699510.1699543
   Read J, 2009, LECT NOTES ARTIF INT, V5782, P254, DOI 10.1007/978-3-642-04174-7_17
   Read Jesse, 2010, THESIS
   Shewhart W.A., 1931, EC CONTROL QUALITY M, V509
   Thelwall M, 2012, J AM SOC INF SCI TEC, V63, P163, DOI 10.1002/asi.21662
   Tsoumakas G., 2007, INT J DATA WAREHOUS, V3, P1, DOI DOI 10.4018/JDWM.2007070101
   Tsoumakas G, 2010, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, SECOND EDITION, P667, DOI 10.1007/978-0-387-09823-4_34
NR 49
TC 103
Z9 119
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2016
VL 21
IS 3
BP 1067
EP 1106
DI 10.1007/s10664-015-9375-7
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VO
UT WOS:000379061700011
DA 2024-07-18
ER

PT J
AU Hunsen, C
   Zhang, B
   Siegmund, J
   Kästner, C
   Lessenich, O
   Becker, M
   Apel, S
AF Hunsen, Claus
   Zhang, Bo
   Siegmund, Janet
   Kaestner, Christian
   Lessenich, Olaf
   Becker, Martin
   Apel, Sven
TI Preprocessor-based variability in open-source and industrial software
   systems: An empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE C preprocessor; CPPSTATS; Variability; Configurable systems; Open-source
   systems; Industrial systems; Software product lines
AB Almost every sufficiently complex software system today is configurable. Conditional compilation is a simple variability-implementation mechanism that is widely used in open-source projects and industry. Especially, the C preprocessor (CPP) is very popular in practice, but it is also gaining (again) interest in academia. Although there have been several attempts to understand and improve CPP, there is a lack of understanding of how it is used in open-source and industrial systems and whether different usage patterns have emerged. The background is that much research on configurable systems and product lines concentrates on open-source systems, simply because they are available for study in the first place. This leads to the potentially problematic situation that it is unclear whether the results obtained from these studies are transferable to industrial systems. We aim at lowering this gap by comparing the use of CPP in open-source projects and industry-especially from the embedded-systems domain-based on a substantial set of subject systems and well-known variability metrics, including size, scattering, and tangling metrics. A key result of our empirical study is that, regarding almost all aspects we studied, the analyzed open-source systems and the considered embedded systems from industry are similar regarding most metrics, including systems that have been developed in industry and made open source at some point. So, our study indicates that, regarding CPP as variability-implementation mechanism, insights, methods, and tools developed based on studies of open-source systems are transferable to industrial systems-at least, with respect to the metrics we considered.
C1 [Hunsen, Claus; Siegmund, Janet; Lessenich, Olaf; Apel, Sven] Univ Passau, Chair Software Prod Lines, D-94032 Passau, Germany.
   [Zhang, Bo] Univ Kaiserslautern, Software Engn Res Grp, D-67663 Kaiserslautern, Germany.
   [Kaestner, Christian] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
   [Becker, Martin] Fraunhofer Inst Expt Software Engn, Embedded Syst Dev Dept, Kaiserslautern, Germany.
C3 University of Passau; University of Kaiserslautern; Carnegie Mellon
   University; Fraunhofer Gesellschaft
RP Hunsen, C (corresponding author), Univ Passau, Chair Software Prod Lines, D-94032 Passau, Germany.
EM hunsen@fim.uni-passau.de; bo.zhang@cs.uni-kl.de;
   siegmunj@fim.uni-passau.de; kaestner@cs.cmu.edu;
   lessenic@fim.uni-passau.de; martin.becker@iese.fraunhofer.de;
   apel@fim.uni-passau.de
OI Lessenich, Olaf/0000-0002-8996-1996; Kastner,
   Christian/0000-0002-4450-4572; Apel, Sven/0000-0003-3687-2233
FU DFG (German Research Foundation) under the Priority Programme (Design
   For Future-Managed Software Evolution) [206/4, AP 206/5, AP 206/6,
   SPP1593]; NSF grant [CCF-1318808]; Innovation Center Applied System
   Modeling; Fraunhofer; state Rhineland Palatinate of the Federal Republic
   of Germany; Division of Computing and Communication Foundations; Direct
   For Computer & Info Scie & Enginr [1318808] Funding Source: National
   Science Foundation
FX This work was partially supported by the DFG (German Research
   Foundation, 206/4, AP 206/5, AP 206/6) under the Priority Programme
   SPP1593 (Design For Future-Managed Software Evolution) and by NSF grant
   CCF-1318808. Furthermore, this work was partially sponsored by the
   Innovation Center Applied System Modeling, which is funded by Fraunhofer
   and the state Rhineland Palatinate of the Federal Republic of Germany.
CR Adams B, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P243
   Anderson T.W., 1996, NEW STAT ANAL DATA
   [Anonymous], 2013, P 12 INT C GEN PROGR
   [Anonymous], 2008, SPLC
   [Anonymous], 2001, SOFTWARE PRODUCT LIN
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Basili V., 1994, The Goal Question Metric Approach, P528
   Baxter ID, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P281, DOI 10.1109/WCRE.2001.957833
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Berger T., 2010, P INT C AUT SOFTW EN, P73, DOI DOI 10.1145/1858996.1859010
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   CONWAY ME, 1968, DATAMATION, V14, P28
   COWLES M, 1982, AM PSYCHOL, V37, P553, DOI 10.1037/0003-066X.37.5.553
   Ernst MD, 2002, IEEE T SOFTWARE ENG, V28, P1146, DOI 10.1109/TSE.2002.1158288
   Erwig M, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063245
   Favre JM, 1997, PROG COMPREHEN, P29, DOI 10.1109/WPC.1997.601260
   Favre JM, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P329, DOI 10.1109/ICSM.1996.565036
   Feigenspan J, 2013, EMPIR SOFTW ENG, V18, P699, DOI 10.1007/s10664-012-9208-x
   Fitzgerald B, 2006, MIS QUART, V30, P587
   Ganesan Dharmalingam., 2009, SPLC, P161
   Godfrey MW, 2014, J SOFTW-EVOL PROC, V26, P613, DOI 10.1002/smr.1636
   Jepsen HansPeter., 2009, Proc. of the International Software Product Line Conference (SPLC'09), P101
   Kästner C, 2012, ACM SIGPLAN NOTICES, V47, P773, DOI 10.1145/2398857.2384673
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kang Kyo C, 1990, Technical Report
   Kastner C., 2011, P OOPSLA, P805
   Kastner Christian, 2010, VIRTUAL SEPARATION C
   Kernighan B.W., 1988, The C Programming Language
   Krone M., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P49, DOI 10.1109/ICSE.1994.296765
   Kullbach B, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/WCRE.2001.957805
   Kumar A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P98, DOI 10.1109/ICSM.2012.6405259
   Liebig J., 2013, P 2013 9 JOINT M FDN, P81, DOI DOI 10.1145/2491411.2491437
   Liebig Jorg, 2011, AOSD 11
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Lohmann D., 2006, Operating Systems Review, V40, P191, DOI 10.1145/1218063.1217954
   Lotufo R, 2010, LECT NOTES COMPUT SC, V6287, P136, DOI 10.1007/978-3-642-15579-6_10
   Mauerer W, 2013, IT-INF TECHNOL, V55, P196, DOI 10.1515/itit.2013.1008
   McCloskey B, 2005, ESEC FSE 13, P21
   Passos L, 2015, EMPIRICAL S IN PRESS
   Pearse TT, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P270, DOI 10.1109/ICSM.1997.624254
   Pech D, 2009, P INT SOFTW PROD LIN, P285
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Queiroz R, 2014, P INT WORKSH FEAT OR, P23
   Ribeiro M, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P23
   Singh N, 2007, P AOSD WORKSH ASP CO, P6
   SPENCER H, 1992, PROCEEDINGS OF THE SUMMER 1992 USENIX CONFERENCE, P185
   Spinellis D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P381, DOI 10.1145/1368088.1368140
   Sutton Andrew, 2007, 2007 IEEE International Conference on Software Maintenance, P275, DOI 10.1109/ICSM.2007.4362640
   Tartler R, 2013, THESIS FRIEDRICH ALE
   Tartler R, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P47
   Tomassetti F, 2013, P INT WORKSH REV VAR, P9
   Vo K.-P., 1992, USENIX Association. Proceedings of the Summer 1992 USENIX Conference, P199
   WEISE D, 1993, SIGPLAN NOTICES, V28, P156, DOI 10.1145/173262.155105
   Zhang Bo., 2013, Proceedings of the 17th International Software Product Line Conference, P168
NR 55
TC 44
Z9 46
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2016
VL 21
IS 2
BP 449
EP 482
DI 10.1007/s10664-015-9360-1
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI2ST
UT WOS:000373349700006
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Gharehyazie, M
   Posnett, D
   Vasilescu, B
   Filkov, V
AF Gharehyazie, Mohammad
   Posnett, Daryl
   Vasilescu, Bogdan
   Filkov, Vladimir
TI Developer initiation and social interactions in OSS: A case study of the
   Apache Software Foundation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Open source software; Email social networks; Logistic regression;
   Developer initiation
ID MOTIVATION; PROJECTS; SOCIALIZATION; CONTRIBUTORS; NETWORK; TESTS; MODEL
AB Maintaining a productive and collaborative team of developers is essential to Open Source Software (OSS) success, and hinges upon the trust inherent among the team. Whether a project participant is initiated as a committer is a function of both his technical contributions and also his social interactions with other project participants. One's online social footprint is arguably easier to ascertain and gather than one's technical contributions e.g., gathering patch submission information requires mining multiple sources with different formats, and then merging the aliases from these sources. In contrast to prior work, where patch submission was found to be an essential ingredient to achieving committer status, here we investigate the extent to which the likelihood of achieving that status can be modeled solely as a social network phenomenon. For 6 different Apache Software Foundation OSS projects we compile and integrate a set of social measures of the communications network among OSS project participants and a set of technical measures, i.e., OSS developers' patch submission activities. We use these sets to predict whether a project participant will become a committer, and to characterize their socialization patterns around the time of becoming committer. We find that the social network metrics, in particular the amount of two-way communication a person participates in, are more significant predictors of one's likelihood to becoming a committer. Further, we find that this is true to the extent that other predictors, e.g., patch submission info, need not be included in the models. In addition, we show that future committers are easy to identify with great fidelity when using the first three months of data of their social activities. Moreover, only the first month of their social links are a very useful predictor, coming within 10 % of the three month data's predictions. Interestingly, we find that on average, for each project, one's level of socialization ramps up before the time of becoming a committer. After obtaining committer status, their social behavior is more individualized, falling into few distinct modes of behavior. In a significant number of projects, immediately after the initiation there is a notable social cooling-off period. Finally, we find that it is easier to become a committer earlier in the projects life cycle than it is later as the project matures. These results should provide insight on the social nature of gaining trust and advancing in status in distributed projects.
C1 [Gharehyazie, Mohammad; Posnett, Daryl; Filkov, Vladimir] Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
   [Vasilescu, Bogdan] Eindhoven Univ Technol, Dept Math & Comp Sci, NL-5600 MB Eindhoven, Netherlands.
C3 University of California System; University of California Davis;
   Eindhoven University of Technology
RP Filkov, V (corresponding author), Univ Calif Davis, Dept Comp Sci, Davis, CA 95616 USA.
EM gharehyazie@ucdavis.edu; dpposnett@ucdavis.edu; b.n.vasilescu@tue.nl;
   filkov@cs.ucdavis.edu
OI Vasilescu, Bogdan/0000-0003-4418-5783
FU Air Force Office of Scientific Research [FA955-11-1-0246]; Dutch Science
   Foundation (NWO) [NWO 600.065.120.10N235]
FX All authors gratefully acknowledge support from the Air Force Office of
   Scientific Research, award FA955-11-1-0246. Vasilescu gratefully
   acknowledges support from the Dutch Science Foundation (NWO), grant NWO
   600.065.120.10N235. Part of this research was carried out during
   Vasilescu's visits at UC Davis.
CR Anderson A, 2013, P 22 INT C WORLD WID, DOI DOI 10.1145/2488388.2488398
   [Anonymous], 2005, 1 MONDAY
   [Anonymous], APPL MULTIPLE REGRES
   [Anonymous], 2002, P INT WORKSH PRINC S
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Ashton MC, 2002, J PERS SOC PSYCHOL, V83, P245, DOI 10.1037//0022-3514.83.1.245
   Bauer T.N., 2011, ORG SOCIALIZATION EF
   Bauer TN, 2007, J APPL PSYCHOL, V92, P707, DOI 10.1037/0021-9010.92.3.707
   Begel Andrew, 2008, P 4 INT WORKSH COMP, P3, DOI [DOI 10.1145/RESEARCH(ICER'1404520.1404522, 10.1145/Research(ICER'1404520.1404522]
   Bettenburg Nicolas, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P124, DOI 10.1109/ICPC.2010.46
   Bettenburg N, 2009, PROC IEEE INT CONF S, P539, DOI 10.1109/ICSM.2009.5306383
   Bird C., 2007, MSR 07, P6, DOI DOI 10.1109/MSR.2007.23
   Bird C, 2009, COMMUN ACM, V52, P85, DOI 10.1145/1536616.1536639
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   Butler BS, 2001, INFORM SYST RES, V12, P346, DOI 10.1287/isre.12.4.346.9703
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Cheng R, 2006, USER MODEL USER-ADAP, V16, P321, DOI 10.1007/s11257-006-9013-6
   CLEVELAND WS, 1979, J AM STAT ASSOC, V74, P829, DOI 10.2307/2286407
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Dai G., 2007, REV ONBOARDING LIT
   De Souza C., 2005, P 2005 ACM INT C SUP, P197, DOI 10.1145/1099203.1099239
   Depue RA, 1999, BEHAV BRAIN SCI, V22, P491
   Deterding S., 2011, CHI 2011
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Farzan R, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P563
   Fershtman C, 2011, RAND J ECON, V42, P70, DOI 10.1111/j.1756-2171.2010.00126.x
   Fielding RT, 1999, COMMUN ACM, V42, P42, DOI 10.1145/299157.299167
   German D. M., 2003, Software Process Improvement and Practice, V8, P201, DOI 10.1002/spip.189
   Goeminne M, 2013, SCI COMPUT PROGRAM, V78, P971, DOI 10.1016/j.scico.2011.11.004
   Grant S, 2013, IEEE WORK CONF MIN S, P65, DOI 10.1109/MSR.2013.6624007
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Herraiz I., 2006, Proceedings of the 2006 International Workshop on Global Software Development for the Practitioner, P27
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Jensen C, 2007, PROC INT CONF SOFTW, P364
   Jureczko M., 2010, Model Methods Syst Dependability Oficyna Wydawnicza Politech Wroclawskiej, P69
   Jureczko M., 2010, P 6 INT C PRED MOD S, P9, DOI 10.1145/1868328.1868342
   Kogut B, 2001, OXFORD REV ECON POL, V17, P248, DOI 10.1093/oxrep/17.2.248
   Kouters E, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P592, DOI 10.1109/ICSM.2012.6405329
   Long Y, 2007, J DATABASE MANAGE, V18, P25, DOI 10.4018/jdm.2007040102
   Lucas RE, 2000, J PERS SOC PSYCHOL, V79, P452, DOI 10.1037//0022-3514.79.3.452
   Mann HB, 1945, ECONOMETRICA, V13, P245, DOI 10.2307/1907187
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Newman MEJ, 2002, PHYS REV E, V66, DOI 10.1103/PhysRevE.66.016128
   Posnett D., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P362, DOI 10.1109/ASE.2011.6100074
   Qureshi I, 2011, ORGAN RES METHODS, V14, P208, DOI 10.1177/1094428110375002
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Roberts JA, 2006, MANAGE SCI, V52, P984, DOI 10.1287/mnsc.1060.0554
   Robles G, 2006, INT FED INFO PROC, V203, P273
   Scacchi W., 2007, Advances in Computers, V69, P243, DOI [DOI 10.1016/S0065-2458(06)69005-0, 10.1016/S0065-2458(06)69005-0]
   Schultz W, 2006, ANNU REV PSYCHOL, V57, P87, DOI 10.1146/annurev.psych.56.091103.070229
   Shibuya B, 2009, 2009 ICSE WORKSHOP ON EMERGING TRENDS IN FREE-LIBRE-OPEN SOURCE SOFTWARE RESEARCH AND DEVELOPMENT, P1, DOI 10.1109/FLOSS.2009.5071352
   Sinha Vibha Singhal, 2011, P 8 WORK C MIN SOFTW, P133
   Spencer D., 2009, CARD SORTING DESIGNI
   Stewart K., 2001, ICIS, P1
   Vasilescu B., 2013, EMPIR SOFTW ENG, P1
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   von Krogh G, 2006, MANAGE SCI, V52, P975, DOI 10.1287/mnsc.1060.0560
   VUONG QH, 1989, ECONOMETRICA, V57, P307, DOI 10.2307/1912557
   Ye YW, 2003, PROC INT CONF SOFTW, P419
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
NR 62
TC 28
Z9 34
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2015
VL 20
IS 5
BP 1318
EP 1353
DI 10.1007/s10664-014-9332-x
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA CQ5UP
UT WOS:000360671500005
DA 2024-07-18
ER

PT J
AU Al-Baik, O
   Miller, J
AF Al-Baik, Osama
   Miller, James
TI Waste identification and elimination in information technology
   organizations
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Lean thinking; Lean production; Lean software development; Waste in IT;
   Software process improvement; Agile
ID AGILE
AB In this paper, we propose a new model to classify wastes in IT organizations. In the beginning, we discuss the potential reasons behind the relatively low success rate of lean initiatives in knowledge-based industries in general and in IT organizations in particular. The virtual nature of business processes in IT organizations calls into question the applicability of Toyota's categorization of physical wastes in IT settings. Then, through a real-life project, we develop a new model of waste categorization for the operation of a "medium-sized" IT department. In addition to the new classifications specific to IT, we discuss suitable elimination strategies and how they have improved the daily operations of the organization by reducing the lead-time by 56-60%, increasing customer satisfactions by 15.7%, and saving hundreds of thousands of the operational cost. Finally, we emphasize the need to think lean when developing the waste elimination strategies by eliminating the root cause of the waste and not the subsequent wastes.
C1 [Al-Baik, Osama; Miller, James] Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB, Canada.
C3 University of Alberta
RP Miller, J (corresponding author), Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB, Canada.
EM albaik@ualberta.ca; jimm@ualberta.ca
RI Al Baik, Osama/JHU-6734-2023
OI Al Baik, Osama/0000-0002-5583-0453
CR Addy R., 2007, EFFECTIVE IT SERVICE
   Ammerman M., 1998, ROOT CAUSE ANAL HDB
   [Anonymous], 2009, GUID BUS AN BOD KNOW
   [Anonymous], 2011, HARVARD BUSINESS REV
   [Anonymous], 2004, REASONS RATIONALIZAT
   [Anonymous], 2008, GUID PROJ MAN BOD KN
   [Anonymous], 2008, TOYOTA CULTURE HEART, DOI DOI 10.5465/AMP.2006.20591002
   Bellingham R., 2004, HR OPTIMIZATION PERS
   Besterfield DaleH., 2009, QUALITY CONTROL
   Bhagat RS, 2009, CAMBRIDGE HANDBOOK OF CULTURE, ORGANIZATIONS, AND WORK, P1, DOI 10.1017/CBO9780511581151
   Boeg Jesper., 2011, Priming kanban: A 10 step guide to optimizing flow in your software delivery system
   De-Ste-Croix A, 2008, AGILE 2008, PROCEEDINGS, P274, DOI 10.1109/Agile.2008.94
   DeMarco T, 2011, IEEE SOFTWARE, V28, P104, DOI 10.1109/MS.2011.134
   Dennis P., 2007, LEAN PRODUCTION SIMP
   Dittrich Y, 2008, EMPIR SOFTW ENG, V13, P231, DOI 10.1007/s10664-007-9057-1
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Goldratt E.M., 1986, The Goal: A Process of Ongoing Improvement
   Hino S., 2002, Inside the Mind of Toyota
   Hopp W. J., 2004, Manufacturing & Service Operations Management, V6, P133, DOI 10.1287/msom.1030.0028
   Humble J, 2011, CONTIINUOUS DELIVERY
   Jaisingh S, 2012, LEAN MANUFACTURING C
   Kim H, 2011, TESTING COMPLEX EMBE
   Magee D., 2008, How Toyota Became # 1
   Martin A, 2009, AGILE 2009 CONFERENCE, P33, DOI 10.1109/AGILE.2009.68
   MCCONNELL S, 1996, RAPID DEV TAMING WIL
   McGovern J, 2008, HAPPY EMPLOYEE 101 W
   Middleton P, 2012, IEEE T ENG MANAGE, V59, P20, DOI 10.1109/TEM.2010.2081675
   Morgan J., 2020, The Toyota Product Development System: integrating People, Process, and Technology
   Murugaiah U, 2010, INT J QUAL RELIAB MA, V27, P527, DOI 10.1108/02656711011043517
   Nottonson K, 2011, AG C, P252
   Ohno T., 1998, TOYOTA PRODUCTION SY
   Packlick J, 2007, AGILE 2007, Proceedings, P266, DOI 10.1109/AGILE.2007.55
   Petersen K, 2010, J SYST SOFTWARE, V83, P1275, DOI 10.1016/j.jss.2010.02.005
   Petersen K, 2009, J SYST SOFTWARE, V82, P1479, DOI 10.1016/j.jss.2009.03.036
   Poppendieck M, 2006, IMPLEMENTING LEAN SO
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Programmers Forum, 2012, WHAT IS DIFF REQ SPE
   Przekop P., 2006, Six Sigma for business excellence
   Rand C, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P78
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schwaber K., 2012, Software in 30 days: How agile managers beat the odds, delight their customers, and leave competitors in the dust
   Schyff A, 2011, LEAN SOFTWARE DEV
   Shah R, 2007, J OPER MANAG, V25, P785, DOI 10.1016/j.jom.2007.01.019
   Shelton C, 2010, BUSINESS PROCESS REE
   Singer Janice, 2008, Guide to Advanced Empirical Software Engineering, P9
   Staats  B., 2011, HARVARD BUSINESS REV
   Staats BR, 2011, J OPER MANAG, V29, P376, DOI 10.1016/j.jom.2010.11.005
   Stober T, 2010, AGILE SOFTWARE DEVELOPMENT: BEST PRACTICES FOR LARGE SOFTWARE DEVELOPMENT PROJECTS, P1, DOI 10.1007/978-3-540-70832-2_1
   Tapping D., 2002, VALUE STREAM MANAGEM
   Walsh R., 2008, Time Management: Proven techniques for making every minute count
   Wang XF, 2012, J SYST SOFTWARE, V85, P1287, DOI 10.1016/j.jss.2012.01.061
   Waterhouse P., 2008, Improving IT economics: Thinking
   Watkins J, 2009, AGILE TESTING: HOW TO SUCCEED IN AN EXTREME TESTING ENVIRONMENT, P1, DOI 10.1017/CBO9780511596797
   Watkins J, 2011, TESTING IT OFF THE S
   Womack J., 2006, The machine that changed the world
   YANG XJ, 1992, COMPUT STRUCT, V44, P911, DOI 10.1016/0045-7949(92)90478-I
   Yap M, 2006, AGILE 2006, Proceedings, P175, DOI 10.1109/AGILE.2006.61
   YOUNKER J, 2008, FDN AGILE PYTHON DEV
NR 58
TC 13
Z9 16
U1 0
U2 22
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2014
VL 19
IS 6
BP 2019
EP 2061
DI 10.1007/s10664-014-9302-3
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AR9QU
UT WOS:000343910700014
DA 2024-07-18
ER

PT J
AU Yang, JQ
   Tan, L
AF Yang, Jinqiu
   Tan, Lin
TI SWordNet: Inferring semantically related words from software context
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Semantically related words; Code search; Program comprehension
ID MAINTENANCE; SIMILARITY
AB Code search is an integral part of software development and program comprehension. The difficulty of code search lies in the inability to guess the exact words used in the code. Therefore, it is crucial for keyword-based code search to expand queries with semantically related words, e. g., synonyms and abbreviations, to increase the search effectiveness. However, it is limited to rely on resources such as English dictionaries and WordNet to obtain semantically related words in software because many words that are semantically related in software are not semantically related in English. On the other hand, many words that are semantically related in English are not semantically related in software. This paper proposes a simple and general technique to automatically infer semantically related words (referred to as rPairs) in software by leveraging the context of words in comments and code. In addition, we propose a ranking algorithm on the rPair results and study cross-project rPairs on two sets of software with similar functionality, i.e., media browsers and operating systems. We achieve a reasonable accuracy in nine large and popular code bases written in C and Java. Our further evaluation against the state of art shows that our technique can achieve a higher precision and recall. In addition, the proposed ranking algorithm improves the rPair extraction accuracy by bringing correct rPairs to the top of the list. Our cross-project study successfully discovers overlapping rPairs among projects of similar functionality and finds that cross-project rPairs are more likely to be correct than project-specific rPairs. Since the cross-project rPairs are highly likely to be general for software of the same type, the discovered overlapping rPairs can benefit other projects of the same type that have not been analyzed.
C1 [Yang, Jinqiu; Tan, Lin] Univ Waterloo, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Yang, JQ (corresponding author), Univ Waterloo, 200 Univ Ave West, Waterloo, ON N2L 3G1, Canada.
EM j223yang@uwaterloo.ca; lintan@uwaterloo.ca
OI Tan, Lin/0000-0002-6690-8332
FU National Science and Engineering Research Council of Canada; Google gift
   grant
FX We thank Emily Hill for providing us with the verb-DO pairs from their
   latest SWUM implementation and Chen Liu for help with verifying the word
   pairs. We thank the anonymous reviewers for their feedback. The work is
   partially supported by the National Science and Engineering Research
   Council of Canada and a Google gift grant.
CR Abebe Surafel Lemma, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P156, DOI 10.1109/ICPC.2010.29
   [Anonymous], 2007, P 6 JOINT M EUR SOFT
   [Anonymous], 1997, P 10 RES COMPUTATION
   [Anonymous], Natural Language Engineering, DOI DOI 10.1017/S1351324901002765
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Banerjee S., 2003, P 18 INT JOINT C ART, P805
   Binkley D, 2011, Proceedings of the Working Conference on Mining Software Repositories (MSR), P203
   Computer Dictionary Online, 2013, COMP SCI SPEC DICT
   FURNAS GW, 1987, COMMUN ACM, V30, P964, DOI 10.1145/32206.32212
   Gegick Michael, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P11, DOI 10.1109/MSR.2010.5463340
   Hill E., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P524, DOI 10.1109/ASE.2011.6100115
   Hill E., 2008, P 2008 INT WORKING C, P79
   Hill E, 2010, THESIS NEWARK
   Hill E, 2009, PROC INT CONF SOFTW, P232, DOI 10.1109/ICSE.2009.5070524
   Hill Emily., 2011, Proceedings of the 3rd International Workshop on Search-Driven Development: Users, Infrastructure, Tools, and Evaluation, SUITE '11, P37, DOI DOI 10.1145/1985429.1985439
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   Host EW, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P193, DOI 10.1109/SCAM.2007.18
   Host EW, 2009, LECT NOTES COMPUT SC, V5452, P322, DOI 10.1007/978-3-642-00434-6_20
   Janzen D., 2003, Proceedings of the 2nd Annual Conference on Aspect-Oriented Software Development (AOSD), P178, DOI 10.1145/643603.643622
   Ko AJ, 2005, PROC INT CONF SOFTW, P126
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lawrie D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P113, DOI 10.1109/ICSM.2011.6080778
   Lawrie Dawn, 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P3, DOI 10.1109/WCRE.2010.10
   Li Z, 2006, P 1 WORKSH ARCH SYST, P25, DOI DOI 10.1145/1181309.1181314
   Lin D., 1998, Machine Learning. Proceedings of the Fifteenth International Conference (ICML'98), P296
   Matter D, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P131, DOI 10.1109/MSR.2009.5069491
   Merriam-Webster, 2012, MERR WEBST ENGL DICT
   Pandita R, 2012, PROC INT CONF SOFTW, P815, DOI 10.1109/ICSE.2012.6227137
   Panichella Sebastiano, 2012, 2012 IEEE 20th International Conference on Program Comprehension, P63
   Park J.W., 2011, AAAI
   Poshyvanyk D, 2006, PROC IEEE INT CONF S, P334
   Poshyvanyk D, 2006, INT C PROGRAM COMPRE, P252, DOI 10.1109/ICPC.2006.32
   Resnik P, 1995, INT JOINT CONF ARTIF, P448
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Shepherd D, 2007, ACTION ORIENTED
   Shepherd D., 2006, Proc. of the International Conference on Aspect-Oriented Software Development (AOSD'06), P3
   Shepherd David, 2007, P 6 INT C ASP OR SOF, P212
   Sridhara G, 2008, INT C PROGRAM COMPRE, P123, DOI 10.1109/ICPC.2008.18
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Tan L, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P11, DOI 10.1145/1985793.1985796
   Tan Lin., 2007, P 21 ACM SIGOPS S OP, P145, DOI DOI 10.1145/1294261.1294276
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   WU ZB, 1994, 32ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P133
   Zaremski A. M., 1995, ACM Transactions on Software Engineering and Methodology, V4, P146, DOI 10.1145/210134.210179
   Zhong H, 2009, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2009.94
NR 46
TC 28
Z9 32
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2014
VL 19
IS 6
BP 1856
EP 1886
DI 10.1007/s10664-013-9264-x
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AR9QU
UT WOS:000343910700009
DA 2024-07-18
ER

PT J
AU Osaiweran, A
   Schuts, M
   Hooman, J
AF Osaiweran, Ammar
   Schuts, Mathijs
   Hooman, Jozef
TI Experiences with incorporating formal techniques into industrial
   practice
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Component-based development; Formal methods; Analytical software design;
   Test-driven development; Software quality
AB We report about experiences at Philips Healthcare with component-based development supported by formal techniques. The formal Analytical Software Design (ASD) approach of the company Verum has been incorporated into the industrial workflow. The commercial tool ASD:Suite supports both compositional verification and code generation for control components. For other components test-driven development has been used. We discuss the results of these combined techniques in a project which developed the power control service of an interventional X-ray system.
C1 [Osaiweran, Ammar] Eindhoven Univ Technol, NL-5600 MB Eindhoven, Netherlands.
   [Schuts, Mathijs] Philips Healthcare, Best, Netherlands.
   [Hooman, Jozef] Radboud Univ Nijmegen, Embedded Syst Innovat TNO, NL-6525 ED Nijmegen, Netherlands.
C3 Eindhoven University of Technology; Philips; Philips Healthcare; Radboud
   University Nijmegen
RP Osaiweran, A (corresponding author), Eindhoven Univ Technol, POB 513, NL-5600 MB Eindhoven, Netherlands.
EM a.a.h.osaiweran@tue.nl; mathijs.schuts@philips.com; hooman@cs.ru.nl
RI Hooman, Jozef/W-1613-2019
OI Osaiweran, Ammar/0000-0002-8018-3905
FU ITEA project Care4Me; COMMIT project Allegio
FX Supported by ITEA project Care4Me and COMMIT project Allegio.
CR Abrial J.-R., 1996, B BOOK ASSIGNING PRO
   Beck Kent L., 2003, Test Driven Development By Example
   Bicarregui JC, 2009, LECT NOTES COMPUT SC, V5850, P810, DOI 10.1007/978-3-642-05089-3_52
   Broadfoot G.H., 2005, DEDICATED SYSTEMS E, V1, P1
   Broadfoot GH, 2003, ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P49, DOI 10.1109/APSEC.2003.1254357
   ClearSy Atelier B, 2011, IND TOOL SUPP B METH
   CSK Systems Corporation, 2011, VDMTOOLS IND TOOL SU
   Esterel Technologies, 2011, SCADE SUIT MOD BAS D
   Fitzgerald J., 2005, Validated Designs for Object-oriented Systems
   Groote J. F., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P467, DOI 10.1109/ICSM.2011.6081983
   Groote JF, 2012, SAC2012 SOFTW ENG TR, P1183, DOI DOI 10.1145/2245276.2231962
   Hoare CAR., 1985, Communicating Sequential Processes
   HOOMAN J, 1991, LECT NOTES COMPUTER, V558
   Hooman J, 2011, LNCS, p[93, 92]
   Hopcroft PJ, 2005, ELECTRON NOTES THEOR, V128, P127, DOI 10.1016/j.entcs.2005.04.008
   LINGER RC, 1994, IEEE SOFTWARE, V11, P50, DOI 10.1109/52.268956
   McConnell Steve., 2004, Code Complete, V2nd ed
   MILLS HD, 1988, COMPUTER, V21, P23, DOI 10.1109/2.948
   Osaiweran A, 2012, P 9 INT WOR IN PRESS
   Osaiweran AAH, 2012, 1213 TU EINDH, P21
   Prowell S.J., 1999, SEI S SOFTW
   Prowell SJ, 2003, IEEE T SOFTWARE ENG, V29, P417, DOI 10.1109/TSE.2003.1199071
   Schuts M, 2010, THESIS RADBOUD U NIJ
   Stellman A., 2005, APPL SOFTWARE PROJEC
   Systems Formal, 2010, EUR LTD OXF U COMP L
   Woodcock J, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592436
NR 26
TC 5
Z9 5
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2014
VL 19
IS 4
BP 1169
EP 1194
DI 10.1007/s10664-013-9251-2
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH8LE
UT WOS:000336388500012
DA 2024-07-18
ER

PT J
AU Kagdi, H
   Gethers, M
   Poshyvanyk, D
AF Kagdi, Huzefa
   Gethers, Malcom
   Poshyvanyk, Denys
TI Integrating conceptual and logical couplings for change impact analysis
   in software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Change impact analysis; Information Retrieval; Conceptual and logical
   coupling; Mining software repositories; Open-source software; Software
   evolution and maintenance
ID INFORMATION-RETRIEVAL; CODE; TOOL; REQUIREMENTS; REPOSITORIES;
   DEPENDENCIES; RIPPLES
AB The paper presents an approach that combines conceptual and evolutionary techniques to support change impact analysis in source code. Conceptual couplings capture the extent to which domain concepts and software artifacts are related to each other. This information is derived using Information Retrieval based analysis of textual software artifacts that are found in a single version of software (e.g., comments and identifiers in a single snapshot of source code). Evolutionary couplings capture the extent to which software artifacts were co-changed. This information is derived from analyzing patterns, relationships, and relevant information of source code changes mined from multiple versions in software repositories. The premise is that such combined methods provide improvements to the accuracy of impact sets compared to the two individual approaches. A rigorous empirical assessment on the changes of the open source systems Apache httpd, ArgoUML, iBatis, KOffice, and jEdit is also reported. The impact sets are evaluated at the file and method levels of granularity for all the software systems considered in the empirical evaluation. The results show that a combination of conceptual and evolutionary techniques, across several cut-off points and periods of history, provides statistically significant improvements in accuracy over either of the two techniques used independently. Improvements in F-measure values of up to 14% (from 3% to 17%) over the conceptual technique in ArgoUML at the method granularity, and up to 21% over the evolutionary technique in iBatis (from 9% to 30%) at the file granularity were reported.
C1 [Kagdi, Huzefa] Wichita State Univ, Dept Elect Engn & Comp Sci, Wichita, KS USA.
   [Gethers, Malcom] Univ Maryland Baltimore Cty, Baltimore, MD 21250 USA.
   [Poshyvanyk, Denys] Coll William & Mary, Williamsburg, VA 23185 USA.
C3 Wichita State University; University System of Maryland; University of
   Maryland Baltimore County; William & Mary
RP Poshyvanyk, D (corresponding author), Coll William & Mary, Williamsburg, VA 23185 USA.
EM kagdi@cs.wichita.edu; mgethers@umbc.edu; denys@cs.wm.edu
OI Poshyvanyk, Denys/0000-0002-5626-7586
FU United States NSF [CCF-1016868, NSF CCF-0916260, NSF CCF-1156401, NSF
   CCF-1218129]; Direct For Computer & Info Scie & Enginr; Division of
   Computing and Communication Foundations [1218129, 1156401] Funding
   Source: National Science Foundation; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [0916260] Funding Source: National Science Foundation
FX We are grateful to the EMSE and WCRE 2010 reviewers, and WCRE 2010
   conference participants for their pertinent comments that helped us in
   improving the quality of this extended paper. We would also like to
   thank Bogdan Dit for his help on improving the presentation of this
   paper. This work is supported by United States NSF CCF-1016868, NSF
   CCF-0916260, NSF CCF-1156401, and NSF CCF-1218129 grants. Any opinions,
   findings, and conclusions expressed herein are the authors' and do not
   necessarily reflect those of the sponsors.
CR Abebe SL, 2009, EUR CON SFTWR MTNCE, P189, DOI 10.1109/CSMR.2009.61
   AGRAWAL R, 1995, 11 INT C DAT ENG TAI
   Alali A, 2008, 16 IEEE INT C PROGR
   [Anonymous], 2005, Proc. of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE'05)
   [Anonymous], 2007, P 6 JOINT M EUR SOFT
   [Anonymous], 2010, IEEE INT C SOFTWARE
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol Giuliano, 2007, 2007 IEEE International Conference on Software Maintenance, P14, DOI 10.1109/ICSM.2007.4362614
   Antoniol G., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P227, DOI 10.1109/CSMR.2000.827331
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   ARNAOUDOVA V., 2010, Proceedings of the International Conference on Software Maintenance (ICSM) - ERA Track, P1
   Basili V., 1994, The Goal Question Metric Approach, P528
   Binkley D, 2010, ENCY SOFTWARE ENG
   Binkley D, 2009, INT C PROGRAM COMPRE, P158, DOI 10.1109/ICPC.2009.5090039
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Briand LC, 2002, PROC IEEE INT CONF S, P252, DOI 10.1109/ICSM.2002.1167775
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Canfora G., 2010, IEEE INT C SOFTW MAI
   CANFORA G, 2005, P 11 IEEE INT S SOFT, P20
   Caprile C., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P112, DOI 10.1109/WCRE.1999.806952
   Chen KR, 2001, PROC IEEE INT CONF S, P230, DOI 10.1109/ICSM.2001.972736
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   Cleland-Huang J, 2010, 32 ACM IEEE INT C SO, P155
   Collard ML, 2003, PROG COMPREHEN, P134
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   Deissenböck F, 2005, PROG COMPREHEN, P97, DOI 10.1109/WPC.2005.14
   Deissenboeck F, 2006, SOFTWARE QUAL J, V14, P261, DOI 10.1007/s11219-006-9219-1
   Di Lucca GA, 2002, PROC IEEE INT CONF S, P93, DOI 10.1109/ICSM.2002.1167756
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dit Bogdan, 2012, EMPIRICAL SOFTWARE E
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Fluri B, 2005, FIFTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P66, DOI 10.1109/SCAM.2005.14
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   GALLAGHER KB, 1991, IEEE T SOFTWARE ENG, V17, P751, DOI 10.1109/32.83912
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Gethers M, 2012, 34 IEEE ACM INT C SO
   Haiduc S, 2008, INT C PROGRAM COMPRE, P113, DOI 10.1109/ICPC.2008.29
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hill E., 2007, Proceedings of the 22nd International Conference on Automated Software Engineering, P14
   Jeong G, 2009, 7 EUR SOFTW ENG C AC
   Kagdi H., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P512, DOI 10.1109/ICSM.2011.6080820
   Kagdi H., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P119, DOI 10.1109/WCRE.2010.21
   Kagdi H., 2006, P 2006 INT WORKSH MI, P47, DOI [DOI 10.1145/1137983.1137996, 10.1145/1137983.1137996]
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P315, DOI 10.1002/smr.355
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kagdi H, 2012, J SOFTW-EVOL PROC, V24, P3, DOI 10.1002/smr.530
   Kagdi H, 2009, INT C PROGRAM COMPRE, P273, DOI 10.1109/ICPC.2009.5090056
   Kagdi H, 2007, INT C PROGRAM COMPRE, P145
   Kosara R, 2003, IEEE COMPUT GRAPH, V23, P20, DOI 10.1109/MCG.2003.1210860
   Law J, 2003, PROC INT CONF SOFTW, P308, DOI 10.1109/ICSE.2003.1201210
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Maletic JI, 2004, PROC IEEE INT CONF S, P210, DOI 10.1109/ICSM.2004.1357805
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Moonen L, 2002, PROG COMPREHEN, P219, DOI 10.1109/WPC.2002.1021343
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Orso A., 2004, PROC IEEEACM INT C S, P776
   Petrenko M, 2009, INT C PROGRAM COMPRE, P10, DOI 10.1109/ICPC.2009.5090023
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2007, INT C PROGRAM COMPRE, P37
   Poshyvanyk D, 2006, PROC IEEE INT CONF S, P469
   Poshyvanyk D, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377660
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   QUEILLE JP, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P234, DOI 10.1109/ICSM.1994.336771
   Raghavan S, 2004, PROC IEEE INT CONF S, P188, DOI 10.1109/ICSM.2004.1357803
   Rajlich V, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P84, DOI 10.1109/ICSM.1997.624234
   Rajlich VT, 2000, COMPUTER, V33, P66, DOI 10.1109/2.869374
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Revelle Meghan, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P14, DOI 10.1109/ICPC.2010.10
   Revelle M, 2011, EMPIR SOFTW ENG, V16, P773, DOI 10.1007/s10664-011-9159-7
   Revelle M, 2009, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2009.5090045
   Robillard MP, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487691
   Rountev A, 2001, ACM SIGPLAN NOTICES, V36, P43, DOI 10.1145/504311.504286
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Tonella P, 2003, IEEE T SOFTWARE ENG, V29, P495, DOI 10.1109/TSE.2003.1205178
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Wilkie FG, 2000, J SYST SOFTWARE, V52, P157, DOI 10.1016/S0164-1212(99)00142-9
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Yu ZF, 2001, PROG COMPREHEN, P293, DOI 10.1109/WPC.2001.921739
   Zaki MJ, 2001, MACH LEARN, V42, P31, DOI 10.1023/A:1007652502315
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 84
TC 53
Z9 61
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2013
VL 18
IS 5
BP 933
EP 969
DI 10.1007/s10664-012-9233-9
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 192CP
UT WOS:000322462000004
DA 2024-07-18
ER

PT J
AU Bell, RM
   Ostrand, TJ
   Weyuker, EJ
AF Bell, Robert M.
   Ostrand, Thomas J.
   Weyuker, Elaine J.
TI The limited impact of individual developer data on software defect
   prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software faults; Buggy file ratio; Fault-prone; Prediction;
   Fault-percentile average; Regression model; Empirical study
ID NUMBER
AB Previous research has provided evidence that a combination of static code metrics and software history metrics can be used to predict with surprising success which files in the next release of a large system will have the largest numbers of defects. In contrast, very little research exists to indicate whether information about individual developers can profitably be used to improve predictions. We investigate whether files in a large system that are modified by an individual developer consistently contain either more or fewer faults than the average of all files in the system. The goal of the investigation is to determine whether information about which particular developer modified a file is able to improve defect predictions. We also extend earlier research evaluating use of counts of the number of developers who modified a file as predictors of the file's future faultiness. We analyze change reports filed for three large systems, each containing 18 releases, with a combined total of nearly 4 million LOC and over 11,000 files. A buggy file ratio is defined for programmers, measuring the proportion of faulty files in Release R out of all files modified by the programmer in Release R-1. We assess the consistency of the buggy file ratio across releases for individual programmers both visually and within the context of a fault prediction model. Buggy file ratios for individual programmers often varied widely across all the releases that they participated in. A prediction model that takes account of the history of faulty files that were changed by individual developers shows improvement over the standard negative binomial model of less than 0.13% according to one measure, and no improvement at all according to another measure. In contrast, augmenting a standard model with counts of cumulative developers changing files in prior releases produced up to a 2% improvement in the percentage of faults detected in the top 20% of predicted faulty files. The cumulative number of developers interacting with a file can be a useful variable for defect prediction. However, the study indicates that adding information to a model about which particular developer modified a file is not likely to improve defect predictions.
C1 [Bell, Robert M.; Ostrand, Thomas J.; Weyuker, Elaine J.] AT&T Labs Res, Florham Pk, NJ 07932 USA.
C3 AT&T
RP Ostrand, TJ (corresponding author), AT&T Labs Res, 180 Pk Ave, Florham Pk, NJ 07932 USA.
EM rbell@research.att.com; ostrand@research.att.com;
   weyuker@research.att.com
CR [Anonymous], 2008, P INT C SOFTW ENG, DOI DOI 10.1145/1370788.1370793
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   ARISHOLM E, 2006, P ACM IEEE ISESE RIO
   Bell R., 2006, Proc. 2006 International Symposium on Software Testing and Analysis, P61
   Bird C, 2009, P INT S SOFTW REL EN
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Khoshgoftaar TM, 2002, IEEE T RELIAB, V51, P455, DOI 10.1109/TR.2002.804488
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   McCullagh P., 2019, Generalized linear models
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ostrand T.J., 2007, Proceedings of the 2007 international symposium on Software testing and analysis (ISSTA '07), P219
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Ostrand TJ, 2010, P PROMISE 2010 TIM R
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Weyuker EJ, 2010, P 3 INT C SOFTW TEST
   Weyuker EJ, 2007, P 4 INT WORKSH PRED
   Weyuker EJ, 2008, EMPIR SOFTW ENG, V13, P539, DOI 10.1007/s10664-008-9082-8
   Weyuker EJ, 2010, EMPIR SOFTW ENG, V15, P277, DOI 10.1007/s10664-009-9111-2
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 25
TC 45
Z9 50
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2013
VL 18
IS 3
BP 478
EP 505
DI 10.1007/s10664-011-9178-4
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 155US
UT WOS:000319774300003
DA 2024-07-18
ER

PT J
AU Kläs, M
   Nakao, H
   Elberzhager, F
   Münch, J
AF Klaes, Michael
   Nakao, Haruka
   Elberzhager, Frank
   Muench, Juergen
TI Support planning and controlling of early quality assurance by combining
   expert judgment and defect data-a case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 19th International Symposium on Software Reliability Engineering
CY 2008
CL Microsoft Campus, Redmond, WA
HO Microsoft Campus
DE Software quality assurance; Quality management; Quality assurance
   effectiveness; Defect content estimation; Hybrid prediction model
ID CAPTURE-RECAPTURE; SOFTWARE; REGRESSION
AB Planning quality assurance (QA) activities in a systematic way and controlling their execution are challenging tasks for companies that develop software or software-intensive systems. Both require estimation capabilities regarding the effectiveness of the applied QA techniques and the defect content of the checked artifacts. Existing approaches for these purposes need extensive measurement data from historical projects. Due to the fact that many companies do not collect enough data for applying these approaches (especially for the early project lifecycle), they typically base their QA planning and controlling solely on expert opinion. This article presents a hybrid method combining commonly available measurement data and context-specific expert knowledge. To evaluate the method's applicability and usefulness, we conducted a case study in the context of independent verification and validation activities for critical software in the space domain. A hybrid defect content and effectiveness model was developed for the software requirements analysis phase and evaluated with available legacy data. One major result is that the hybrid model provides improved estimation accuracy when compared to applicable models based solely on data. The mean magnitude of relative error (MMRE) determined by cross-validation is 29.6% compared to 76.5% obtained by the most accurate data-based model.
C1 [Klaes, Michael; Elberzhager, Frank; Muench, Juergen] Fraunhofer Inst Expt Software Engn, D-67663 Kaiserslautern, Germany.
   [Nakao, Haruka] Japan Manned Space Syst Corp, Safety & Prod Assurance Dept, Tsuchiura, Ibaraki 3000033, Japan.
C3 Fraunhofer Gesellschaft
RP Kläs, M (corresponding author), Fraunhofer Inst Expt Software Engn, Fraunhofer Pl 1, D-67663 Kaiserslautern, Germany.
EM michael.klaes@iese.fraunhofer.de; haruka@jamss.co.jp;
   frank.elberzhager@iese.fraunhofer.de; juegen.muench@iese.fraunhofer.de
RI Münch, Jürgen/ABC-2316-2020; Kl\\{"a}s, Michael/B-6773-2012
OI Münch, Jürgen/0000-0003-0327-8094; 
CR ALLEN DM, 1974, TECHNOMETRICS, V16, P125, DOI 10.2307/1267500
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 2005, 10122004 IEEE
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   Bibi S, 2006, I C COMP SYST APPLIC, P330, DOI 10.1109/AICCSA.2006.205110
   BRIAND L, 1998, COBRA HYBRID METHOD
   BRIAND L, 2004, J SYST SOFTW
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 2000, IEEE T SOFTWARE ENG, V26, P518, DOI 10.1109/32.852741
   Briand LC, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P234, DOI 10.1109/ISSRE.1997.630870
   Cook T. D., 1979, QUASIEXPERIMENTATION
   EICK SG, 1992, 14TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING : PROCEEDINGS, P59
   El Emam K, 2000, J SYST SOFTWARE, V54, P119, DOI 10.1016/S0164-1212(00)00032-7
   Endres A., 2003, A Handbook of Software and Systems Engineering: Empirical Observations, Laws, and Theories
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fishman G.S., 1995, Monte Carlo: Concepts, algorithms, and applications
   FREIMUT B, 2006, MAGIC HYBRID MODELIN
   FRIEDMAN JH, 1991, ANN STAT, V19, P1, DOI 10.1214/aos/1176347963
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   HUANG L, 2005, INT S EMP SOFTW ENG
   *IESE FRAUNH, 2008, COBRIX TOOL
   Jacobs J, 2007, INFORM SOFTWARE TECH, V49, P774, DOI 10.1016/j.infsof.2006.09.002
   Jones C., 1996, APPL SOFTWARE MEASUR
   Juristo N, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P161, DOI 10.1109/ISESE.2002.1166935
   Kan S. H., 2003, METRICS MODELS SOFTW
   Kendall MG, 1939, ANN MATH STAT, V10, P275, DOI 10.1214/aoms/1177732186
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   KLAS M, 2008, ADV COMPUT, P115
   KOHTAKE N, 2008, IEEE AER C
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   MCKAY MD, 1979, TECHNOMETRICS, V21, P239, DOI 10.2307/1268522
   MEYER MA, 2001, ASA SIAM SERIES STAT, V7
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nakamura H, 2007, PROC IEEE MICR ELECT, P71
   *NIST, 2002, 023 NIST
   Petersson H, 2004, J SYST SOFTWARE, V72, P249, DOI 10.1016/S0164-1212(03)00090-6
   Ruhe M, 2003, PROC INT CONF SOFTW, P285, DOI 10.1109/ICSE.2003.1201208
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   Trendowicz A., 2006, 28th International Conference on Software Engineering Proceedings, P331, DOI 10.1145/1134285.1134332
   TRENDOWICZ A, 2008, LNCS
   Vose D., 1996, QUANTITATIVE RISK AN
   WELLER EF, 1994, COMPUTER, V27, P27, DOI 10.1109/2.312035
   Wohlin C, 1998, PROC INT CONF SOFTW, P400, DOI 10.1109/ICSE.1998.671393
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 45
TC 11
Z9 12
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2010
VL 15
IS 4
BP 423
EP 454
DI 10.1007/s10664-009-9112-1
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 593EN
UT WOS:000277435500005
DA 2024-07-18
ER

PT J
AU Turhan, B
   Menzies, T
   Bener, AB
   Di Stefano, J
AF Turhan, Burak
   Menzies, Tim
   Bener, Ayse B.
   Di Stefano, Justin
TI On the relative value of cross-company and within-company data for
   defect prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Defect prediction; Learning; Metrics (product metrics); Cross-company;
   Within-company; Nearest-neighbor filtering
ID STATIC CODE ATTRIBUTES; SOFTWARE
AB We propose a practical defect prediction approach for companies that do not track defect related data. Specifically, we investigate the applicability of cross-company (CC) data for building localized defect predictors using static code features. Firstly, we analyze the conditions, where CC data can be used as is. These conditions turn out to be quite few. Then we apply principles of analogy-based learning (i.e. nearest neighbor (NN) filtering) to CC data, in order to fine tune these models for localization. We compare the performance of these models with that of defect predictors learned from within-company (WC) data. As expected, we observe that defect predictors learned from WC data outperform the ones learned from CC data. However, our analyses also yield defect predictors learned from NN-filtered CC data, with performance close to, but still not better than, WC data. Therefore, we perform a final analysis for determining the minimum number of local defect reports in order to learn WC defect predictors. We demonstrate in this paper that the minimum number of data samples required to build effective defect predictors can be quite small and can be collected quickly within a few months. Hence, for companies with no local defect data, we recommend a two-phase approach that allows them to employ the defect prediction process instantaneously. In phase one, companies should use NN-filtered CC data to initiate the defect prediction process and simultaneously start collecting WC (local) data. Once enough WC data is collected (i.e. after a few months), organizations should switch to phase two and use predictors learned from WC data.
C1 [Turhan, Burak; Bener, Ayse B.] Bogazici Univ, Dept Comp Engn, Istanbul, Turkey.
   [Menzies, Tim; Di Stefano, Justin] Lane Dept Comp Sci & Elect Engn, Morgantown, WV USA.
C3 Bogazici University
RP Turhan, B (corresponding author), Bogazici Univ, Dept Comp Engn, Istanbul, Turkey.
EM turhanb@boun.edu.tr; tim@menzies.us; bener@boun.edu.tr;
   jdistefano@ismwv.com
RI Basar, Ayse/ABF-9265-2020; Turhan, Burak/G-7400-2011; Menzies,
   Tim/X-7680-2019
OI Basar, Ayse/0000-0003-4934-8326; Turhan, Burak/0000-0003-1511-2163;
   Menzies, Tim/0000-0002-5040-3196
CR [Anonymous], 2007, The promise repository of empirical software engineering data
   [Anonymous], 1995, MYTHICAL MAN MONTH
   [Anonymous], 1995, 12 INT C MACH LEARN
   [Anonymous], 1995, 11 C UNC ART INT SAN, DOI DOI 10.1109/TGRS.2004.834800
   [Anonymous], THESIS W VIRGINIA U
   [Anonymous], 1992, C4 5 PROGRAMS MACHIN
   [Anonymous], 2005, Data mining: Practical machine learning tools and techniques
   [Anonymous], 5 ACM IEEE INT S EMP
   [Anonymous], 2004, P WORKSH PRED SOFTW
   [Anonymous], THESIS W VIRGINIA U
   [Anonymous], 2002, P IEEE ASE 2002
   [Anonymous], 124 ART INT CTR SRI
   Arisholm E., 2006, ISESE 06
   BASILI VR, 2002, P 24 INT C SOFTW ENG
   BELL R, 2006, ISSTA 06
   BOEHM B, 2000, IEEE SOFTWARE    SEP
   BOEHM BW, 1988, IEEE T SOFTWARE ENG, V14, P1462, DOI 10.1109/32.6191
   CHAPMAN M, 2002, P NASA SOFTW ASS S C
   Chen Zhihoa., 2005, PROMISE 05
   DEKHTYAR A, 2004, INT WORKSH MIN SOFTW
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Domingos P, 1997, MACH LEARN, V29, P103, DOI 10.1023/A:1007413511361
   FAGAN ME, 1986, IEEE T SOFTWARE ENG, V12, P744, DOI 10.1109/TSE.1986.6312976
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   FENTON NE, 1995, SOFTWARE METRICS RIG
   GOSEVA K, 2007, 31 ANN IEEE INT COMP
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hall GA, 2000, J SYST SOFTWARE, V54, P111, DOI 10.1016/S0164-1212(00)00031-5
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   JIANG Y, 2007, ISSRE 07
   Khoshgoftaar TM, 2004, EMPIR SOFTW ENG, V9, P229, DOI 10.1023/B:EMSE.0000027781.18360.9b
   Khoshgoftaar TM, 2003, EMPIR SOFTW ENG, V8, P325, DOI 10.1023/A:1025316301168
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Koru AG, 2008, EMPIR SOFTW ENG, V13, P473, DOI 10.1007/s10664-008-9080-x
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Menzies T., 2008, P PROMISE 2008 WORKS
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Moser R., 2008, ICSE 08
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nagappan N., 2005, ICSE 2005
   Newman D., 1998, UCI REPOSITORY MACHI
   NIKORA A, 2003, 9 INT SOFTW METR S M
   OSTRAND T, 2007, ISSTA 07
   PORTER AA, 1990, IEEE SOFTWARE, V7, P46, DOI 10.1109/52.50773
   Quinlan J. R., 1992, Proceedings of the 5th Australian Joint Conference on Artificial Intelligence. AI '92, P343
   Rakitin StevenR., 2001, ART H COMP SCI LIBR, V2nd
   SHEPPERD M, 1994, J SYST SOFTWARE, V26, P197, DOI 10.1016/0164-1212(94)90011-6
   SHEPPERD M, 1997, IEEE T SOFTW ENG, V23
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   Shull F, 2000, COMPUTER, V33, P73, DOI 10.1109/2.869376
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   Tang W, 2004, PROC INT C TOOLS ART, P373
   TIAN J, 1995, IEEE T SOFTWARE ENG, V21, P641, DOI 10.1109/32.403788
   YANG Y, 2003, P 7 PAC AS C KNOWL D
   2008, POLYSPACE VERIFIER
NR 61
TC 441
Z9 490
U1 4
U2 29
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2009
VL 14
IS 5
BP 540
EP 578
DI 10.1007/s10664-008-9103-7
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 477UG
UT WOS:000268543800003
DA 2024-07-18
ER

PT J
AU Bunse, C
AF Bunse, C
TI Using patterns for the refinement and translationof UML models: A
   controlled experiment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE empirical evaluation; UML; patterns; understandability; verifiability
ID MAINTAINABILITY
AB This paper presents a controlled experiment, conducted at the University of Kaiserslautern which evaluates an approach known as SORT, for the systematic refinement and translation of UML Diagrams. Specifically, the experiment investigates the effects of SORT, with respect to the mapping of object-oriented UML design models to source code, by comparing the effects of different approaches to such mappings (SORT and ad-hoc(1)) on the quality attributes understandability, verifiability, and effort (time). The experimental results demonstrate that OO systems developed by applying SORT are more understandable and verifiable. In summary, SORT can help to improve the quality of software systems, but its application alone does not guarantee quality.
C1 Fraunhofer Inst Expt Software Engn, D-67663 Kaiserslautern, Germany.
C3 Fraunhofer Gesellschaft
RP Bunse, C (corresponding author), Fraunhofer Inst Expt Software Engn, Fraunhoferpl 1, D-67663 Kaiserslautern, Germany.
EM Christian.Bunse@iese.fraunhofer.de
CR [Anonymous], 1992, PRACTICAL SOFTWARE M
   [Anonymous], 1998, RATIONAL UNIFIED PRO
   [Anonymous], EMPIR SOFTW ENG
   [Anonymous], 1999, P 2 INT WORKSH OBJ O
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P521, DOI 10.1109/TSE.2004.43
   ASTELS D, 2002, P INT C EXTR PROGR F, P67
   Atkinson C., 2001, COMPONENT BASED PROD
   ATKINSON C, 1995, ION NOTATION GRAPHIC
   Bell AE, 1999, COMMUN ACM, V42, P55, DOI 10.1145/317665.317676
   Booch G., 2007, Object-Oriented Analysis and Design with Applications, Vthird
   Bortz J., 1993, Statistik fur Sozialwissenschaftler
   Briand LC, 2001, IEEE T SOFTWARE ENG, V27, P513, DOI 10.1109/32.926174
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   BRIAND LC, 1997, P 4 INT IEEE S SOFTW
   BRIAND LC, 1997, P EMP STUD PROGR 7 W, P1
   Bruegge Bernd., 2003, OBJECT ORIENTED SOFT, V2nd
   BUNSE C, 1999, P 2 INT C UN MOD LAN
   BUNSE C, 2001, PATTERN BASED REFINE
   BUNSE C, 1999, P 12 INT C SOFTW SYS
   Cheesman J., 2000, UML COMPONENTS SIMPL
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Coleman D., 1993, OBJECT ORIENTED DEV
   COPLIEN JO, 1995, PATTERN LANGUAGES OF PROGRAM DESIGN, P183
   CURTIS B, 1980, P IEEE, V68, P1144, DOI 10.1109/PROC.1980.11813
   D'Souza D., 1998, OBJECTS COMPONENTS F
   Daly J., 1996, Empirical Software Engineering, V1, P109, DOI 10.1007/BF00368701
   *DOD, 1983, REF MAN AD PROGR LAN
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GREEN S, 1990, SEL90002 NASASEL
   Herrington J., 2003, Code Generation in Action
   Hofstadter DouglasR., 1996, Metamagical Themas: Questing for the Essence of Mind and Pattern
   HOLUB A, 2002, WHEN IT COMES GOOD O
   JECKLE M, 2005, OVERVIEW UML CASE TO
   KAPLAN B, 1988, MIS QUART, V12, P571, DOI 10.2307/249133
   LEE RC, 1997, UL C PRACTICAL GUIDE
   LEITE J, 2000, LECT NOTES SOFTWARE, V1
   MARTIN RC, 1997, SOFTWARE PATTERNS SE
   Meyer B., 1992, Eiffel: The Language
   *OMG, 2001, OMG UN MOD LANG SPEC
   *OMG, 2005, OMG UML 2 0 SUP SPEC
   REED PR, 2001, DEV APPL JAVA UML
   Rumbaugh J., 1991, OBJECT ORIENTED MODE
   SATPATHY M, 2000, LECT NTOES COMPUTER, V2006, P94
   Sendall S., 2004, TAMING MODEL ROUND T
   SINGER B, 1986, NEW DEV STAT PSYCHOL, P129
   Stroustrup B., 1993, C PROGRAMMING LANGUA, VSecond
   TROCHIM W, 2002, THREATS CONCLUSION V
   Watt J.H., 1995, Research Methods for Communication Science
   Webster BruceF., 1995, PITFALLS OBJECT ORIE
   Welkowitz J., 1976, Introductory statistics for the behavioral sciences
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wood M, 1999, J SYST SOFTWARE, V48, P13, DOI 10.1016/S0164-1212(99)00042-4
NR 52
TC 6
Z9 6
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2006
VL 11
IS 2
BP 227
EP 267
DI 10.1007/s10664-006-6403-7
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 020RV
UT WOS:000235928900003
DA 2024-07-18
ER

PT J
AU Shahin, R
   Toledo, R
   Hackman, R
   Ramesh, S
   Atlee, JM
   Chechik, M
AF Shahin, Ramy
   Toledo, Rafael
   Hackman, Robert
   Ramesh, S.
   Atlee, Joanne M. M.
   Chechik, Marsha
TI Applying declarative analysis to industrial automotive software product
   line models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software product lines; Automotive; Declarative analysis; Visualization
AB Program analysis of automotive software has several unique challenges, including that the code base is ultra large, comprising over a hundred million lines of code running on a single vehicle; the code is structured as a software product line (SPL) for managing a family of related software products from a common set of artifacts; and the analysis results (despite being numerous and despite being variable) need to be presented to the engineer in a way that is manageable. In previous work, we reported on lifting declarative analyses to apply to a software product line, rather than to an individual product variant. This paper reports on milestone results from applying lifted declarative analyses (behaviour alteration, recursion analysis, simplifiable global variable analysis, and two of their variants) to automotive software product lines from General Motors and assessing the scalability of the analyses and the effectiveness of reporting to engineers conditional analysis results (i.e., results conditioned on SPL program variants). We also reflect on some of the lessons learned throughout this project.
C1 [Shahin, Ramy; Chechik, Marsha] Univ Toronto, Toronto, ON, Canada.
   [Toledo, Rafael; Hackman, Robert; Atlee, Joanne M. M.] Univ Waterloo, Waterloo, ON, Canada.
   [Ramesh, S.] Gen Motors, Warren, MI USA.
C3 University of Toronto; University of Waterloo; General Motors
RP Shahin, R (corresponding author), Univ Toronto, Toronto, ON, Canada.
EM rshahin@cs.toronto.edu; rftoledo@uwaterloo.ca; r2hackma@uwaterloo.ca;
   ramesh.s@gm.com; jmatlee@uwaterloo.ca; chechik@cs.toronto.edu
RI Atlee, Joanne/KCY-7928-2024
OI Shahin, Ramy/0000-0001-8724-3934
CR Anastasopoulos M., 2001, Software Engineering Notes, V26, P109, DOI 10.1145/379377.375269
   [Anonymous], 2008, PROC VISPLE SPLC 08
   Apel S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P421, DOI 10.1145/1985793.1985851
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Arendt T, 2010, LECT NOTES COMPUT SC, V6394, P121
   Asadi M, 2016, EMPIR SOFTW ENG, V21, P1706, DOI 10.1007/s10664-014-9353-5
   Benton William C., 2007, Proceedings of the 9th International ACM SIGPLAN Conference on Principles and Practice of Declarative Programming (PPDP'07), P13, DOI 10.1145/1273920.1273923
   Beuche D., 2016, SPLC, P262
   Bodden E, 2013, ACM SIGPLAN NOTICES, V48, P355, DOI 10.1145/2499370.2491976
   Botterweck G, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P77, DOI 10.1109/SPLC.2008.32
   Bravenboer M, 2009, ACM SIGPLAN NOTICES, V44, P243, DOI 10.1145/1639949.1640108
   BRYANT RE, 1992, COMPUT SURV, V24, P293, DOI 10.1145/136035.136043
   Ceri S., 1989, IEEE Transactions on Knowledge and Data Engineering, V1, P146, DOI 10.1109/69.43410
   Classen A., 2010, ICSE 10, V1, P335, DOI DOI 10.1145/1806799.1806850
   Classen A, 2013, IEEE T SOFTWARE ENG, V39, P1069, DOI 10.1109/TSE.2012.86
   Czarnecki K., 2006, GPCE, P211
   Dawson S., 1996, SIGPLAN Notices, V31, P117, DOI 10.1145/249069.231399
   Ernst MD, 2002, IEEE T SOFTWARE ENG, V28, P1146, DOI 10.1109/TSE.2002.1158288
   Gazzillo P, 2012, ACM SIGPLAN NOTICES, V47, P323, DOI 10.1145/2345156.2254103
   Grech N, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133926
   Kästner C, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211617
   Kästner C, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P805
   Kästner C, 2009, LECT NOTES BUS INF P, V33, P175
   Kang K. C., 1990, Technical Report
   Liebig J., 2013, P 2013 9 JOINT M FDN, P81, DOI DOI 10.1145/2491411.2491437
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Loesch F, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P151, DOI 10.1109/SPLINE.2007.31
   Midtgaard J, 2015, SCI COMPUT PROGRAM, V105, P145, DOI 10.1016/j.scico.2015.04.005
   Muscedere BJ, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P175, DOI [10.1109/saner.2019.8668042, 10.1109/SANER.2019.8668042]
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Reps T., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P49, DOI 10.1145/199448.199462
   Salay R, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P117, DOI 10.1145/2568225.2568267
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Shahin R, 2021, IN PRESS, DOI [10.36227/techrxiv.14870187.v1, DOI 10.36227/TECHRXIV.14870187.V1]
   Shahin R, 2021, 24TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS 2021), P145, DOI 10.1109/MODELS50736.2021.00023
   Shahin R, 2020, LECT NOTES COMPUT SC, V12007, P213, DOI 10.1007/978-3-030-39197-3_14
   Shahin R, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P39, DOI 10.1145/3338906.3338928
   Shahjahan RA, 2022, COMPARE, V52, P129, DOI 10.1080/03057925.2020.1746176
   Struber D, 2020, P 23 ACMIEEE INT C M, P240
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   von Landesberger T, 2011, COMPUT GRAPH FORUM, V30, P1719, DOI 10.1111/j.1467-8659.2011.01898.x
   Young B, 2017, 21ST INTERNATIONAL SYSTEMS & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 1, P175, DOI 10.1145/3106195.3106220
NR 42
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 40
DI 10.1007/s10664-023-10290-2
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9Y2DE
UT WOS:000950270600001
DA 2024-07-18
ER

PT J
AU Lee, J
   Shin, SY
   Nejati, S
   Briand, LC
AF Lee, Jaekwon
   Shin, Seung Yeob
   Nejati, Shiva
   Briand, Lionel C.
TI Optimal priority assignment for real-time systems: a coevolution-based
   approach
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Priority assignment; Schedulability analysis; Real-time systems;
   Coevolutionary search; Search-based software engineering
ID MULTIOBJECTIVE TECHNIQUE; ALGORITHMS; OPTIMIZATION; TESTS
AB In real-time systems, priorities assigned to real-time tasks determine the order of task executions, by relying on an underlying task scheduling policy. Assigning optimal priority values to tasks is critical to allow the tasks to complete their executions while maximizing safety margins from their specified deadlines. This enables real-time systems to tolerate unexpected overheads in task executions and still meet their deadlines. In practice, priority assignments result from an interactive process between the development and testing teams. In this article, we propose an automated method that aims to identify the best possible priority assignments in real-time systems, accounting for multiple objectives regarding safety margins and engineering constraints. Our approach is based on a multi-objective, competitive coevolutionary algorithm mimicking the interactive priority assignment process between the development and testing teams. We evaluate our approach by applying it to six industrial systems from different domains and several synthetic systems. The results indicate that our approach significantly outperforms both our baselines, i.e., random search and sequential search, and solutions defined by practitioners. Our approach scales to complex industrial systems as an offline analysis method that attempts to find near-optimal solutions within acceptable time, i.e., less than 16 hours.
C1 [Lee, Jaekwon; Shin, Seung Yeob; Nejati, Shiva; Briand, Lionel C.] Univ Luxembourg, SnT, Kirchberg, Luxembourg.
   [Lee, Jaekwon] Univ Ottawa, Ottawa, ON, Canada.
   [Nejati, Shiva] Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON, Canada.
   [Briand, Lionel C.] Univ Ottawa, Software Engn, Ottawa, ON, Canada.
C3 University of Luxembourg; University of Ottawa; University of Ottawa;
   University of Ottawa
RP Shin, SY (corresponding author), Univ Luxembourg, SnT, Kirchberg, Luxembourg.
EM jaekwon.lee@uni.lu; seungyeob.shin@uni.lu; snejati@uottawa.ca;
   lionel.briand@uni.lu
RI Shin, Seung Yeob/ACP-8090-2022; Nejati, Shiva/KBT-7650-2024
OI Shin, Seung Yeob/0000-0001-9025-7173; 
FU European Research Council (ERC) under the European Union [694277]; NSERC
   of Canada
FX We thank Yago Isasi Parache, LuxSpace, for his support in conducting our
   industrial case study. This project has received funding from the
   European Research Council (ERC) under the European Union's Horizon 2020
   research and innovation programme (grant agreement No 694277), and NSERC
   of Canada under the Discovery and CRC programs. The experiments
   presented in this paper were carried out using the HPC facilities of the
   University of Luxembourg (Varrette et al. 2014) - see hpc.uni.lu.
CR Andrade SS, 2013, INT CONF SELF SELF, P61, DOI 10.1109/SASO.2013.42
   [Anonymous], 2014, P 2014 INT S SOFTW T
   [Anonymous], 2010, P 2 INT C INFORM SCI
   [Anonymous], 2008, P MODELS 08 WORKSHOP
   [Anonymous], 2010, HDB METAHEURISTICS
   [Anonymous], 2013, ESSENTIALS METAHEURI
   Anssi Saoussen, 2011, 2011 Proceedings of IEEE 14th International Symposium on Object/Component/Service-Oriented Real-Time Distributed Computing (ISORC 2011), P152, DOI 10.1109/ISORC.2011.28
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Arcuri A, 2010, LECT NOTES COMPUT SC, V6435, P95, DOI 10.1007/978-3-642-16573-3_8
   Arpaci-Dusseau R. H., 2018, Operating systems: Three easy pieces
   Audsley N., 1991, Optimal priority assignment and feasibility of static priority tasks with arbitrary start times
   Audsley NC, 2001, INFORM PROCESS LETT, V79, P39, DOI 10.1016/S0020-0190(00)00165-4
   Baruah S. K., 2011, Proceedings of the 2011 IEEE 32nd Real-Time Systems Symposium (RTSS 2011), P34, DOI 10.1109/RTSS.2011.12
   Behrmann G, 2004, LECT NOTES COMPUT SC, V3185, P200
   Ben Abdessalem Raja, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P88, DOI 10.1145/3395363.3397386
   Bernat G, 2001, IEEE T COMPUT, V50, P308, DOI 10.1109/12.919277
   Boussaa Mohamed, 2013, Search Based Software Engineering. 5th International Symposium, SSBSE 2013. Proceedings: LNCS 8084, P50, DOI 10.1007/978-3-642-39742-4_6
   Briand LC, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1021
   Chen T, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3204459
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Chu YC, 2008, REAL-TIME SYST, V40, P241, DOI 10.1007/s11241-008-9058-1
   Davis RI, 2007, RTSS 2007: 28TH IEEE INTERNATIONAL REAL-TIME SYSTEMS SYMPOSIUM, PROCEEDINGS, P3, DOI 10.1109/RTSS.2007.11
   Davis RI, 2008, IEEE T COMPUT, V57, P1261, DOI 10.1109/TC.2008.66
   Davis RI, 2016, J SYST ARCHITECT, V65, P64, DOI 10.1016/j.sysarc.2016.04.002
   Davis RI, 2012, REAL TIM SYST SYMP P, P39, DOI 10.1109/RTSS.2012.57
   Davis RI, 2011, REAL-TIME SYST, V47, P1, DOI 10.1007/s11241-010-9106-5
   Davis RI, 2009, REAL-TIME SYST, V41, P152, DOI 10.1007/s11241-008-9065-2
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Di Alesio S., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P764, DOI 10.1109/ICST.2012.171
   Di Alesio S, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2818640
   Di Alesio S, 2013, PROC INT SYMP SOFTW, P158, DOI 10.1109/ISSRE.2013.6698915
   Dürr M, 2019, ACM T EMBED COMPUT S, V18, DOI 10.1145/3358181
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Emberson P., 2010, P 1 INT WORKSH AN TO, P1
   Ficici S. G., 2004, THESIS
   Fineberg M. S., 1967, P AFIPS FALL JOINT C, P1
   George L, 1996, RR2966 INRIA
   Goldberg D. E., 1985, P 1 INT C GEN ALG TH, P154
   Grass W, 2018, REAL-TIME SYST, V54, P1, DOI 10.1007/s11241-017-9282-7
   Guan N, 2009, REAL TIM SYST SYMP P, P387, DOI 10.1109/RTSS.2009.11
   Hatvani Leo, 2018, ACM SIGBED Review, V15, P43, DOI 10.1145/3199610.3199616
   Hemmati H, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430536.2430540
   Ishibuchi H, 2015, LECT NOTES COMPUT SC, V9019, P110, DOI 10.1007/978-3-319-15892-1_8
   Islam MM, 2012, EUR CON SFTWR MTNCE, P21, DOI 10.1109/CSMR.2012.13
   Knowles JD, 2000, EVOL COMPUT, V8, P149, DOI 10.1162/106365600568167
   Kroese DP, 2014, WIRES COMPUT STAT, V6, P386, DOI 10.1002/wics.1314
   Kwiatkowska Marta, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P585, DOI 10.1007/978-3-642-22110-1_47
   Langdon WB, 2010, J SYST SOFTWARE, V83, P2416, DOI 10.1016/j.jss.2010.07.027
   Lee H, 2020, IEEE ACCESS, V8, P185570, DOI 10.1109/ACCESS.2020.3029040
   Lee J, 2021, EVALUATION PACKAGE O
   Lee J, 2022, Arxiv, DOI arXiv:2007.10490
   Legay A, 2010, LECT NOTES COMPUT SC, V6418, P122, DOI 10.1007/978-3-642-16612-9_11
   LEUNG JYT, 1982, PERFORM EVALUATION, V2, P237, DOI 10.1016/0166-5316(82)90024-4
   Li M., 2020, IEEE Transactions on Software Engineering, P1
   Lin M, 2009, IEEE T IND INFORM, V5, P22, DOI 10.1109/TII.2009.2014055
   LIU CL, 1973, J ACM, V20, P46, DOI 10.1145/321738.321743
   Liu J., 2000, Real-Time Systems
   Locke CDouglass., 1990, Generic avionics software specification
   LuxSpace, 2021, ESAIL
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Marchetto A, 2016, IEEE T SOFTWARE ENG, V42, P918, DOI 10.1109/TSE.2015.2510633
   Meneghini IR, 2016, IEEE C EVOL COMPUTAT, P586, DOI 10.1109/CEC.2016.7743846
   Mikucionis M, 2010, LECT NOTES COMPUT SC, V6416, P175, DOI 10.1007/978-3-642-16561-0_21
   Nejati Shiva, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P759, DOI 10.1007/978-3-642-33666-9_48
   Nejati S, 2013, IEEE INT CONF AUTOM, P529, DOI 10.1109/ASE.2013.6693110
   Peng DT, 1997, IEEE T SOFTWARE ENG, V23, P745, DOI 10.1109/32.637388
   Popovici E., 2012, Handbook of Natural Computing, P987, DOI [DOI 10.1007/978-3-540-92910-9_31, 10.1007/978-3-540-92910-9\31]
   Ralph P, 2020, EMPIRICAL STANDARDS, V2010, P03525
   Sayyad Abdel Salam, 2013, Proceedings of the 2013 3rd International Workshop on Replication in Empirical Software Engineering Research (RESER 2013), P84, DOI 10.1109/RESER.2013.6
   Shin SY, 2020, I W S E ADAP SM SYS, P137, DOI 10.1145/3387939.3391603
   Shin SY, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P49, DOI 10.1145/3213846.3213852
   Sivanandam S., 2008, Introduction to genetic algorithms, DOI [10.1007/978-3-540-73190-0_7, DOI 10.1007/978-3-540-73190-0]
   Tan SH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/2950290.2950295
   TINDELL KW, 1994, REAL-TIME SYST, V6, P133, DOI 10.1007/BF01088593
   Traore Karim, 2006, P 2006 INT C AUTONOM, P11
   Van Veldhuizen D.A., 1998, MULTIOBJECTIVE EVOLU
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Varrette S, 2014, 2014 INTERNATIONAL CONFERENCE ON HIGH PERFORMANCE COMPUTING & SIMULATION (HPCS), P959, DOI 10.1109/HPCSim.2014.6903792
   Wang PH, 2020, CONCURR COMP-PRACT E, V32, DOI 10.1002/cpe.5464
   Wegener J, 1997, SOFTWARE QUAL J, V6, P127, DOI 10.1023/A:1018551716639
   Wegener J, 1998, REAL-TIME SYST, V15, P275, DOI 10.1023/A:1008096431840
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Whitley D., 1988, Proceedings of the Rocky Mountain Conference on Artificial Intelligence, P118
   Wilkerson J.L., 2010, P GECCO 2010 GENETIC, P1391
   Wilkerson JL, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1229, DOI 10.1145/2330163.2330333
   Yalcinkaya B, 2019, DES AUT TEST EUROPE, P1228, DOI [10.23919/DATE.2019.8715111, 10.23919/date.2019.8715111]
   Zeng HB, 2014, ACM T EMBED COMPUT S, V13, DOI 10.1145/2632160
   Zhang FX, 2009, IEEE T COMPUT, V58, P1250, DOI 10.1109/TC.2009.58
   Zhao YC, 2017, REAL TIM SYST SYMP P, P116, DOI 10.1109/RTSS.2017.00018
   Zitzler E, 1999, IEEE T EVOLUT COMPUT, V3, P257, DOI 10.1109/4235.797969
NR 91
TC 1
Z9 1
U1 1
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 142
DI 10.1007/s10664-022-10170-1
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3O4IB
UT WOS:000836798500007
PM 35949520
OA hybrid, Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Piskachev, G
   Späth, J
   Budde, I
   Bodden, E
AF Piskachev, Goran
   Spaeth, Johannes
   Budde, Ingo
   Bodden, Eric
TI Fluently specifying taint-flow queries with <i>fluent</i>TQL
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Taint analysis; Program analysis; Domain-specific language; User study;
   Usability
AB Previous work has shown that taint analyses are only useful if correctly customized to the context in which they are used. Existing domain-specific languages (DSLs) allow such customization through the definition of deny-listing data-flow rules that describe potentially vulnerable or malicious taint-flows. These languages, however, are designed primarily for security experts who are expected to be knowledgeable in taint analysis. Software developers, however, consider these languages to be complex. This paper thus presents fluent TQL, a query specification language particularly for taint-flows. fluentTQL is internal Java DSL and uses a fluent-interface design. fluentTQL queries can express various taint-style vulnerability types, e.g. injections, cross-site scripting or path traversal. This paper describes fluentTQL's abstract and concrete syntax and defines its runtime semantics. The semantics are independent of any underlying analysis and allows evaluation of fluent TQL queries by a variety of taint analyses. Instantiations of fluentTQL, on top of two taint analysis solvers, Boomerang and FlowDroid, show and validate fluent TQL expressiveness. Based on existing examples from the literature, we have used fluentTQL to implement queries for 11 popular security vulnerability types in Java. Using our SQL injection specification, the Boomerang-based taint analysis found all 17 known taint-flows in the OWASP WebGoat application, whereas with FlowDroid 13 taint-flows were found. Similarly, in a vulnerable version of the Java Spring PetClinic application, the Boomerang-based taint analysis found all seven expected taint-flows. In seven real-world Android apps with 25 expected malicious taint-flows, 18 taint-flows were detected. In a user study with 26 software developers, fluentTQL reached a high usability score. In comparison to CodeQL, the state-of-the-art DSL by Semmle/GitHub, participants found fluentTQL more usable and with it they were able to specify taint analysis queries in shorter time.
C1 [Piskachev, Goran; Budde, Ingo; Bodden, Eric] Fraunhofer IEM, Paderborn, Germany.
   [Spaeth, Johannes] CodeShield GmbH, Paderborn, Germany.
   [Bodden, Eric] Paderborn Univ, Dept Comp Sci, Paderborn, Germany.
C3 University of Paderborn
RP Piskachev, G (corresponding author), Fraunhofer IEM, Paderborn, Germany.
EM goran.piskachev@iem.fraunhofer.de
RI Bodden, Eric/AAE-1365-2021
OI Bodden, Eric/0000-0003-3470-3647; Piskachev, Goran/0000-0003-4424-5838;
   Budde, Ingo/0000-0003-0124-6291
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR [Anonymous], 2012, DYNAMIC TAINT TRACKI
   Antoniadis A, 2020, PROCEEDINGS OF THE 41ST ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '20), P794, DOI 10.1145/3385412.3386026
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Arzt Steven, 2013, SuSi: A Tool for the Fully Automated Classification and Categorization of Android Sources and Sinks
   Bodden E, 2018, COMPANION PROCEEDINGS FOR THE ISSTA/ECOOP 2018 WORKSHOPS, P85, DOI 10.1145/3236454.3236500
   Brooke J, 2013, J USABILITY STUD, V8, P29
   Chibotaru V, 2019, PROCEEDINGS OF THE 40TH ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION (PLDI '19), P760, DOI 10.1145/3314221.3314648
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Cook T., 1979, Quasi experimental design and analysis
   Developers T.S., 2021, SAGEMATH SAGE MATH S
   Dietl W, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P681, DOI 10.1145/1985793.1985889
   Do LNQ, 2022, IEEE T SOFTWARE ENG, V48, P835, DOI 10.1109/TSE.2020.3004525
   Feng Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P576, DOI 10.1145/2635868.2635869
   Girden E.R., 1992, ANOVA: Repeated Measures, V84
   Github S., 2020, DARKDISK MICROLENSIN
   Gordon MI, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23089
   Gotovchits I, 2018, NDSS
   Grammatech, 2020, CODESONAR
   Grech N, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P198, DOI 10.1145/3213846.3213860
   Johnson A, 2015, ACM SIGPLAN NOTICES, V50, P291, DOI [10.1145/2813885.2737957, 10.1145/2737924.2737957]
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Krger S, 2019, IEEE T SOFTW ENG
   Le W, 2011, P 2011 INT S SOFTW T
   Livshits B, 2009, ACM SIGPLAN NOTICES, V44, P75, DOI 10.1145/1543135.1542485
   Luo L, 2021, EMPIR SOFTW ENG, DOI DOI 10.1007/S10664-021-10013-5
   Luo Linghui, 2019, 33 EUROPEAN C OBJECT, V21, P1, DOI DOI 10.4230/LIPICS.ECOOP.2019.21,HTTP://DROPS.DAGSTUHL.DE/OPUS/VOLLTEXTE/2019/10813
   Martin M, 2005, ACM SIGPLAN NOTICES, V40, P365, DOI 10.1145/1103845.1094840
   Microfocus, 2020, FORTIFY
   Microsoft, 2020, LANG SERV PROT
   Mitre CWE, 2020, TRUST BOUND VIOL
   Mitre CWE, 2020, IMPR OUTP NEUTR LOGS
   Mitre CWE, 2020, CWE SANS TOP 25 MOST
   Mitre CWE, 2020, REL PATH TRAV
   Mitre CWE, 2020, CWE HOM PAG
   Mitre CWE, 2020, XML INJ
   Mitre CWE, 2020, IMPR NEUTR DAT XPATH
   Mitre CWE, 2020, URL RED UNTR SIT OP
   Naiakshina A, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376791
   Naiakshina A, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300370
   Naiakshina A, 2018, PROCEEDINGS OF THE FOURTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, P297
   Naiakshina A, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P311, DOI 10.1145/3133956.3134082
   Nguyen Quang Do L, 2020, IEEE T SOFTWARE ENG, P1, DOI DOI 10.1109/TSE.2020.3004525
   Optimoroute, 2020, RENEWABLES 2020, Patent No. 102303
   OWASP, 2020, OWASP BENCHM
   OWASP OWASP, 2020, OWASP TOP 10 MOST CR
   Pauck F, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P331, DOI 10.1145/3236024.3236029
   Piskachev G, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P181, DOI 10.1145/3293882.3330556
   Reichheld FF, 2003, HARVARD BUS REV, V81, P46
   Sas D, 2018, IEEE INT WORK C SO, P103, DOI 10.1109/SCAM.2018.00019
   Schwartz EJ, 2010, P IEEE S SECUR PRIV, P317, DOI 10.1109/SP.2010.26
   Smith J, 2020, PROCEEDINGS OF THE SIXTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY (SOUPS 2020), P221
   Smith J, 2019, IEEE T SOFTWARE ENG, V45, P877, DOI 10.1109/TSE.2018.2810116
   Song TY, 2019, IEEE ACCESS, V7, P52339, DOI 10.1109/ACCESS.2019.2911592
   Späth J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290361
   Sridharan M, 2011, ACM SIGPLAN NOTICES, V46, P1053, DOI 10.1145/2076021.2048145
   Stahl T., 2006, Model-driven software development: technology, engineering, management
   Szabó T, 2016, IEEE INT CONF AUTOM, P320, DOI 10.1145/2970276.2970298
   Thomé J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1004, DOI 10.1145/3106237.3122822
NR 58
TC 3
Z9 3
U1 2
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2022
VL 27
IS 5
AR 104
DI 10.1007/s10664-022-10165-y
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1U7GT
UT WOS:000805577100005
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Gezici, B
   Tarhan, AK
AF Gezici, Bahar
   Tarhan, Ayca Kolukisa
TI Systematic literature review on software quality for AI-based software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Artificial intelligence; Machine learning; Software quality; Quality
   attributes; Quality metrics; Measurement; Product quality model
ID ARTIFICIAL-INTELLIGENCE; MANAGEMENT
AB There is a widespread demand for Artificial Intelligence (AI) software, specifically Machine Learning (ML). It is getting increasingly popular and being adopted in various applications we use daily. AI-based software quality is different from traditional software quality because it generally addresses distinct and more complex kinds of problems. With the fast advance of AI technologies and related techniques, how to build high-quality AI-based software becomes a very prominent subject. This paper aims at investigating the state of the art on software quality (SQ) for AI-based systems and identifying quality attributes, applied models, challenges, and practices that are reported in the literature. We carried out a systematic literature review (SLR) from 1988 to 2020 to (i) analyze and understand related primary studies and (ii) synthesize limitations and open challenges to drive future research. Our study provides a road map for researchers to understand quality challenges, attributes, and practices in the context of software quality for AI-based software better. From the empirical evidence that we have gathered by this SLR, we suggest future work on this topic be structured under three categories which are Definition/Specification, Design/Evaluation, and Process/Socio-technical.
C1 [Gezici, Bahar; Tarhan, Ayca Kolukisa] Hacettepe Univ, Inst Sci, Comp Engn Dept, Ankara, Turkey.
C3 Hacettepe University
RP Gezici, B (corresponding author), Hacettepe Univ, Inst Sci, Comp Engn Dept, Ankara, Turkey.
EM bahargezici@cs.hacettepe.edu.tr; atarhan@hacettepe.edu.tr
RI KOLUKISA, AYÇA/HKN-2117-2023
OI Gezici, Bahar/0000-0001-6704-3134
CR Aggarwal A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P625, DOI 10.1145/3338906.3338937
   Alamin MAA, 2021, ARXIV210501195
   Ali Z., QUALITY MEASUREMENT
   Anh ND, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1513, DOI 10.1145/3368089.3417039
   [Anonymous], 2008, Software engineering-Software product Quality Requirements and Evaluation (SQuaRE)-Data quality model: International Organization for Standardization
   [Anonymous], 2001, SOFTWARE ENG PRODUCT
   [Anonymous], 2011, 25010 ISOIEC
   [Anonymous], 2004, GUIDE SOFTWARE ENG B
   [Anonymous], 2005, ISO IEC 25000 SERIES
   [Anonymous], 2018, Road vehicles - Functional safety
   [Anonymous], 2013, SOFTWARE SYSTEMS ENG
   Arpteg A, 2018, EUROMICRO CONF PROC, P50, DOI 10.1109/SEAA.2018.00018
   Ben Braiek H, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110542
   Borg M., 2018, ARXIV181205389
   Bosch J., 2021, Artificial Intelligence Paradigms for Smart Cyber-Physical Systems, P1, DOI 10.4018/978-1-7998-5101-1.ch001
   Byrne C., 2017, Development Workflows for Data Scientists
   CHEN IR, 1995, IEEE T KNOWL DATA EN, V7, P4, DOI 10.1109/69.368522
   Cummaudo A, 2019, PROC IEEE INT CONF S, P333, DOI 10.1109/ICSME.2019.00051
   de Almeida Biolchini JC, 2007, ADV ENG INFORM, V21, P133, DOI 10.1016/j.aei.2006.11.006
   Deng L, 2018, IEEE SIGNAL PROC MAG, V35, P180, DOI 10.1109/MSP.2017.2762725
   Forward A, 2008, P 2008 C CTR ADV STU, P179
   Garousi V, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916008
   Geske F, 2021, 20 9 EUR C INF SYST
   Gezici B, 2019, FINAL POOL
   Hamada K., 2020, SEKE, P335
   Hannousse A, 2021, IET SOFTW, V15, P126, DOI 10.1049/sfw2.12011
   Henriksson J, 2018, PROCEEDINGS 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR AI IN AUTONOMOUS SYSTEMS (SEFAIAS), P47, DOI 10.1145/3194085.3194090
   Hopgood AA, 2005, ADV COMPUT, V65, P1, DOI 10.1016/S0065-2458(05)65001-2
   Horkoff J, 2019, INT REQUIR ENG CONF, P386, DOI 10.1109/RE.2019.00050
   Ishikawa Fuyuki, 2019, 2019 IEEE/ACM Joint 7th International Workshop on Conducting Empirical Studies in Industry (CESI) and 6th International Workshop on Software Engineering Research and Industrial Practice (SER&IP). Proceedings, P2, DOI 10.1109/CESSER-IP.2019.00009
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Kitchenham B., 2007, Joint Report
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Kuwajima H, 2018, ARXIV181203057
   Kuwajima H, 2020, MACH LEARN, V109, P1103, DOI 10.1007/s10994-020-05872-w
   Kuwajima H, 2019, IEEE INT SYMP SOFTW, P13, DOI 10.1109/ISSREW.2019.00035
   Lakshen GA, 2016, 2016 24TH TELECOMMUNICATIONS FORUM (TELFOR), P802
   Lenarduzzi V, 2021, LECT NOTES BUS INF P, V404, P43, DOI 10.1007/978-3-030-65854-0_4
   Lwakatare LE, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106368
   Malik V, 2020, J DISCRET MATH SCI C, V23, P187, DOI 10.1080/09720529.2020.1721883
   Mannarswamy S, 2020, ACM INT CONF PR SER, P373, DOI 10.1145/3371158.3371233
   Martinez-Fernandez S., 2021, ARXIV210501984
   Masuda S, 2018, IEEE ICST WORKSHOP, P279, DOI 10.1109/ICSTW.2018.00061
   Murphy Christian., 2006, A Framework for Quality Assurance of Machine Learning Applications
   Nakajima S, 2018, IEEE GLOB CONF CONSU, P601, DOI 10.1109/GCCE.2018.8574766
   Nakamichi K, 2020, INT REQUIR ENG CONF, P260, DOI 10.1109/RE48521.2020.00036
   Nascimento E., 2020, ARXIV201103751
   Nishi Y, 2018, IEEE ICST WORKSHOP, P273, DOI 10.1109/ICSTW.2018.00060
   Ongsulee P, 2017, INT CONF ICT KNOWL, P92
   Park SH, 2017, TOTAL QUAL MANAG BUS, V28, P934, DOI 10.1080/14783363.2017.1310703
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Pons L, 2019, ARXIV191102912
   Poth A, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P22, DOI 10.1109/QRS51102.2020.00016
   Rahman MS, 2020, INT CONF ELECTRO INF, P25, DOI [10.1109/eit48999.2020.9208288, 10.1109/EIT48999.2020.9208288]
   Riccio V, 2020, EMPIR SOFTW ENG, V25, P5193, DOI 10.1007/s10664-020-09881-0
   Rushby J., 1988, QUALITY MEASURES ASS, V18
   Russel S. J., 2009, ARTIF INTELL, V3rd
   SAMOILI S, 2020, 30117 EUR EN
   Siebert J., 2020, Quality of Information and Communications Technology, P17
   Taleb I, 2018, IEEE INT CONGR BIG, P166, DOI 10.1109/BigDataCongress.2018.00029
   Tao C, 2017, SEKE, P345
   Tao CQ, 2019, IEEE ACCESS, V7, P120164, DOI 10.1109/ACCESS.2019.2937107
   Tsintzira Angeliki-Agathi, 2020, INT C QUALITY INFORM, P53, DOI DOI 10.1007/978-3-030-58793-2_5
   Turhan B, 2007, I C DATA ENGIN WORKS, P912, DOI 10.1109/ICDEW.2007.4401084
   Vinayagasundaram B., 2007, Information Technology Journal, V6, P835
   Vogelsang A, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P245, DOI 10.1109/REW.2019.00050
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1331, DOI 10.1109/TSE.2019.2921343
   Wieringa R.J., 2014, Design Science Methodology: For Information Systems and Software Engineering, DOI DOI 10.1007/978-3-662-43839-8
   Wohlin C., 2012, Experimentation in Software Engineering
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Yang Liu, 2019, Formal Methods and Software Engineering. 21st International Conference on Formal Engineering Methods, ICFEM 2019. Proceedings. Lecture Notes in Computer Science (LNCS 11852), P3, DOI 10.1007/978-3-030-32409-4_1
   Zhang JM, 2022, IEEE T SOFTWARE ENG, V48, P1, DOI 10.1109/TSE.2019.2962027
   Zhang P, 2020, ARXIV200201759
NR 73
TC 8
Z9 9
U1 4
U2 30
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 66
DI 10.1007/s10664-021-10105-2
PG 65
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZV2BV
UT WOS:000770339500008
DA 2024-07-18
ER

PT J
AU Mondal, S
   Rahman, MM
   Roy, CK
   Schneider, K
AF Mondal, Saikat
   Rahman, Mohammad Masudur
   Roy, Chanchal K.
   Schneider, Kevin
TI The reproducibility of programming-related issues in Stack Overflow
   questions
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Issue reproducibility; Stack overflow; Code segments; Code level
   modifications; Reproducibility challenges
ID UNDERSTANDABILITY
AB Software developers often look for solutions to their code-level problems using the Stack Overflow Q&A website. To receive help, developers frequently submit questions that contain sample code segments along with the description of the programming issue. Unfortunately, it is not always possible to reproduce the issues from the code segments they provide. Issues that are not easily reproducible may impede questions from receiving prompt and appropriate solutions. We conducted an exploratory study on the reproducibility of issues discussed in 400 Java and 400 Python questions. We parsed, compiled, executed, and carefully examined the code segments from these questions to reproduce the reported programming issues, expending 300 person-hours of effort. The outcomes of our study are three-fold. First, we can reproduce the issues for approximately 68% of Java and 71% of Python code segments. In contrast, we were unable to reproduce approximately 22% of Java and 19% of Python issues. Of the reproducible issues, approximately 67% of the Java and 20% of the Python code segments required minor or major modifications to reproduce the issues. Second, we carefully investigated why programming issues could not be reproduced and provided evidence-based guidelines to write effective code examples for Stack Overflow questions. Third, we investigated the correlation between the issue reproducibility status of questions and the corresponding answer meta-data, such as the presence of an accepted answer. According to our analysis, a reproducible question has at least two times higher chance of receiving an accepted answer than an irreproducible question. Besides, the median time delay in receiving accepted answers is double if the issues reported in questions could not be reproduced. We also investigated the confounding factors (e.g., user reputation) that can affect questions receiving answers besides reproducibility. We found that such factors do not hurt the correlation between reproducibility status and answer meta-data.
C1 [Mondal, Saikat; Roy, Chanchal K.; Schneider, Kevin] Univ Saskatchewan, Dept Comp Sci, Software Res Lab, Saskatoon, SK, Canada.
   [Rahman, Mohammad Masudur] Dalhousie Univ, Fac Comp Sci, Halifax, NS, Canada.
C3 University of Saskatchewan; Dalhousie University
RP Mondal, S (corresponding author), Univ Saskatchewan, Dept Comp Sci, Software Res Lab, Saskatoon, SK, Canada.
EM saikat.mondal@usask.ca; masud.rahman@dal.ca; chanchal.roy@usask.ca;
   kevin.schneider@usask.ca
RI Mondal, Saikat/HNC-4415-2023; Schneider, Kevin/KQV-5113-2024
OI Schneider, Kevin/0000-0003-1113-1754; Mondal, Saikat/0000-0003-1767-6392
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Canada First Research Excellence Fund (CFREF) grant; Tenure-track
   Startup Fund, Dalhousie University
FX This research is supported by the Natural Sciences and Engineering
   Research Council of Canada (NSERC), Canada First Research Excellence
   Fund (CFREF) grant coordinated by the Global Institute for Food Security
   (GIFS), and Tenure-track Startup Fund, Dalhousie University.
CR Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Boettiger Carl, 2015, ACM SIGOPS Operating Systems Review, V49, P71
   Bosu A, 2013, IEEE WORK CONF MIN S, P89, DOI 10.1109/MSR.2013.6624013
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, P121
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Calefato F, 2018, INFORM SOFTWARE TECH, V94, P186, DOI 10.1016/j.infsof.2017.10.009
   Calefato F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P430, DOI 10.1109/MSR.2015.56
   Cito J, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P906, DOI 10.1145/2889160.2891057
   Cohen-Boulakia S, 2017, FUTURE GENER COMP SY, V75, P284, DOI 10.1016/j.future.2017.01.012
   Crick T., 2014, ARXIV14075981
   Daka E, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P107, DOI 10.1145/2786805.2786838
   Dalle O, 2012, WINT SIMUL C PROC
   Neto FGD, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P575, DOI 10.1109/ICSE.2015.197
   Dit B, 2015, EMPIR SOFTW ENG, V20, P1198, DOI 10.1007/s10664-014-9339-3
   Duijn M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P410, DOI 10.1109/MSR.2015.51
   Ebert F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P49, DOI [10.1109/SANER.2019.8668024, 10.1109/saner.2019.8668024]
   Exchange S, 2019, STACKEXCHAGE API
   Exchange S, 2021, DOES REP WORK
   Fazzini M, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P141, DOI 10.1145/3213846.3213869
   Ferro N, 2017, ACM J DATA INF QUAL, V8, DOI 10.1145/3020206
   Ford D, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174182
   Freire J., 2012, P ACM SIGMOD INT C M, P593, DOI 10.1145/2213836.2213908
   Goecks J, 2010, GENOME BIOL, V11, DOI 10.1186/gb-2010-11-8-r86
   Grüning B, 2018, CELL SYST, V6, P631, DOI 10.1016/j.cels.2018.03.014
   Horton E, 2019, PROC INT CONF SOFTW, P328, DOI 10.1109/ICSE.2019.00047
   Horton E, 2018, PROC IEEE INT CONF S, P217, DOI 10.1109/ICSME.2018.00031
   Jimenez I, 2017, IEEE SYM PARA DISTR, P1561, DOI 10.1109/IPDPSW.2017.157
   Joorabchi ME, 2014, P 11 WORK C MIN SOFT, P62, DOI [10.1145/2597073.2597098, DOI 10.1145/2597073.2597098]
   Liem C, 2020, ARXIV201208387
   Lin JC, 2008, IEEE INT CONF FUZZY, P887, DOI 10.1109/FUZZY.2008.4630475
   Liu DM, 2019, SOCIUS, V5
   Marwick B, 2017, J ARCHAEOL METHOD TH, V24, P424, DOI 10.1007/s10816-015-9272-9
   McHugh ML, 2013, BIOCHEM MEDICA, V23, P143, DOI 10.11613/BM.2013.018
   Mondal Saikat, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P479, DOI 10.1109/MSR.2019.00074
   Mondal S, 2021, REPRODUCIBILITY PROG
   Mondal S, 2021, 14 INN SOFTW ENG C F, P1
   Moran K, 2016, IEEE INT CONF SOFTW, P33, DOI 10.1109/ICST.2016.34
   Mu DL, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P919
   Overflow S, 2021, WHAT DOES IT MEAN QU
   Playford CJ, 2016, BIG DATA SOC, V3, DOI 10.1177/2053951716684143
   Poldrack RA, 2015, TRENDS COGN SCI, V19, P59, DOI 10.1016/j.tics.2014.11.008
   Ponzanelli L, 2014, INT CONF QUAL SOFTW, P343, DOI 10.1109/QSIC.2014.27
   Posnett D, 2011, P 8 WORKING C MINING, P73
   Rahman MM, 2020, P 36 INT C SOFTWARE
   Rahman MM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P426, DOI 10.1109/MSR.2015.55
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Scalabrino S, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
   Scheitle Q, 2017, PROCEEDINGS OF THE 2017 REPRODUCIBILITY WORKSHOP (REPRODUCIBILITY '17), P5, DOI 10.1145/3097766.3097768
   Silvello G., 2016, B IEEE TECH COMM DIG, V12, P1
   Skeet J, 2010, GOLDEN RULE IMAGINE
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Soltani M, 2017, PROC INT CONF SOFTW, P209, DOI 10.1109/ICSE.2017.27
   Squire M, 2014, P ANN HICSS, P1425, DOI 10.1109/HICSS.2014.185
   Tahaei M, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376768
   Teran-Somohano A, 2014, WINT SIMUL C PROC, P2726, DOI 10.1109/WSC.2014.7020116
   Terragni V., 2016, P 25 INT S SOFTW TES
   Tian Y, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P44, DOI 10.1109/CSMR-WCRE.2014.6747213
   Treude C, 2017, PROC IEEE INT CONF S, P509, DOI 10.1109/ICSME.2017.24
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Trockman A, 2018, IEEE WORK CONF MIN S, P314, DOI 10.1145/3196398.3196441
   Walters WP, 2013, J CHEM INF MODEL, V53, P1529, DOI 10.1021/ci400197w
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   White M, 2015, INT C PROGRAM COMPRE, P48, DOI 10.1109/ICPC.2015.14
   Yang D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P391, DOI [10.1109/MSR.2016.047, 10.1145/2901739.2901767]
NR 65
TC 1
Z9 1
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 62
DI 10.1007/s10664-021-10113-2
PG 52
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZV2BV
UT WOS:000770339500005
DA 2024-07-18
ER

PT J
AU Xiao, D
   Hang, DJ
   Ai, L
   Li, SP
   Liang, HL
AF Xiao, Da
   Hang, Dengji
   Ai, Lu
   Li, Shengping
   Liang, Hongliang
TI Path context augmented statement and network for learning programs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Statement context; Graph neural network; Self attention; Code clone
   detection
ID CODE
AB Applying machine learning techniques in program analysis has attracted much attention. Recent research efforts in detecting code clones and classifying code have shown that neural models based on abstract syntax trees (ASTs) can better represent source code than other approaches. However, existing AST-based approaches do not take into account contextual information of a program, like statement context. To address this issue, we propose a novel approach path context to capture the context of statements, and a path context augmented network (PCAN) to learn a program. We evaluate PCAN on code clone detection, source code classification, and method naming. The results show that compared to state-of-the-art approaches, PCAN performs the best on code clone detection and has comparable performance on code classification and method naming.
C1 [Xiao, Da; Hang, Dengji; Ai, Lu; Liang, Hongliang] Beijing Univ Posts & Telecommun, Beijing, Peoples R China.
   [Li, Shengping] Colorful Clouds Technol Co Ltd, Beijing, Peoples R China.
C3 Beijing University of Posts & Telecommunications
RP Liang, HL (corresponding author), Beijing Univ Posts & Telecommun, Beijing, Peoples R China.
EM xiaoda99@bupt.edu.cn; hangdengji@bupt.edu.cn; ailu@bupt.edu.cn;
   lixingping2011@126.com; hliang@bupt.edu.cn
CR Ahmadi M, 2021, PROCEEDINGS OF THE 30TH USENIX SECURITY SYMPOSIUM, P2025
   Allamanis M., 2018, INT C LEARN REPR ICL
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alon U, 2018, ACM SIGPLAN NOTICES, V53, P404, DOI [10.1145/3192366.3192412, 10.1145/3296979.3192412]
   Alon Uri, 2019, INT C LEARN REPR
   [Anonymous], 2015, P 2015 C EMP METH NA, DOI [10.18653/v1/D15-1166, DOI 10.48550/ARXIV.1508.04025]
   [Anonymous], 2015, PROC 3 INT C LEARN R
   Cai D, 2020, AAAI CONF ARTIF INTE, V34, P7464
   Cho Kyunghyun, 2014, SYNTAX SEMANTICS STR, P5, DOI [10.3115/v1/w14-4012, 10.3115 /v1/D14-1179, DOI 10.3115/V1/D14-1179]
   Chunrong Fang, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P516, DOI 10.1145/3395363.3397362
   Cummins C., 2020, ARXIV200310536
   Falke R, 2008, EMPIR SOFTW ENG, V13, P601, DOI 10.1007/s10664-008-9073-9
   Fernandes P., 2018, CoRR abs/1811.01824
   Gilmer J, 2017, PR MACH LEARN RES, V70
   Goffi A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P366, DOI 10.1145/2635868.2635888
   Hellendoorn VJ, 2019, INT C LEARN REPR
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Hu Xing, 2020, EMPIR SOFTW ENG, V25, P2179, DOI DOI 10.1007/s10664-019-09730-9
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Khandelwal U, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P284
   Li LQ, 2017, PROC IEEE INT CONF S, P249, DOI 10.1109/ICSME.2017.46
   Li YJ, 2019, PR MACH LEARN RES, V97
   Linares-Vasquez M, 2014, EMPIR SOFTW ENG, V19, P582, DOI 10.1007/s10664-012-9230-z
   Mikolov Tomas, 2013, Preprints
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Nafi KW, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1026, DOI 10.1109/ASE.2019.00099
   Narayanan A., 2017, ARXIV PREPRINT ARXIV
   Ragkhitwetsagul C, 2019, EMPIR SOFTW ENG, V24, P2236, DOI 10.1007/s10664-019-09697-7
   Roy CK, 2008, INT C PROGRAM COMPRE, P172, DOI 10.1109/ICPC.2008.41
   Saini V, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P354, DOI 10.1145/3236024.3236026
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Socher R., 2011, P C EMP METH NAT LAN, P151
   Sui YL, 2013, INT SYM CODE GENER, P1
   Tai KS, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P1556
   Tufano M, 2018, IEEE WORK CONF MIN S, P542, DOI 10.1145/3196398.3196431
   Vaswani A, 2017, ADV NEUR IN, V30
   Wang WH, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3409331
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/SANER48275.2020.9054857, 10.1109/saner48275.2020.9054857]
   Wang Y, 2020, P ACM PROGRAM LANG, V4, DOI 10.1145/3428205
   Wei HH, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3034
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Ziyuan Lin, 2017, Machine Learning and Data Mining in Pattern Recognition. 13th International Conference, MLDM 2017. Proceedings: LNAI 10358, P1, DOI 10.1007/978-3-319-62416-7_1
NR 44
TC 3
Z9 3
U1 1
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 37
DI 10.1007/s10664-021-10098-y
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YD2VK
UT WOS:000740234100001
DA 2024-07-18
ER

PT J
AU Yang, YL
   He, TX
   Feng, Y
   Liu, SY
   Xu, BW
AF Yang, Yilin
   He, Tianxing
   Feng, Yang
   Liu, Shaoying
   Xu, Baowen
TI Mining Python fix patterns via analyzing fine-grained source code
   changes
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Pattern mining; Fix pattern; Program repair; Bug fix changes
AB Many code changes are inherently repetitive, and researchers employ repetitiveness of the code changes to generate bug fix patterns. Automatic Program Repair (APR) can automatically detect and fix bugs, thus helping developers to improve the quality of software products. As a critical component of APR, software bug fix patterns have been revealed by existing studies to be very effective in detecting and fixing bugs in different programming languages (e.g., Java/C++); yet the fix patterns proposed by these studies can not be directly applied to improve Python programs because of syntactic incompatibilities and lack of analysis of dynamic features. In this paper, we proposed a mining approach to identify fix patterns of Python programs by extracting fine-grained bug-fixing code changes. We first collected bug reports from GitHub repository and employed the abstract syntax tree edit distance to cluster similar bug-fixing code changes to generate fix patterns. We then evaluated the effectiveness of these fix patterns by applying them to single-hunk bugs in two benchmarks (BugsInPy and QuixBugs). The results show that 13 out of 101 real bugs can be fixed without human intervention; that is, the generated bug patch is identical or semantically equivalent with developer's patches. Also, we evaluated the fix patterns in the wild. For each complex bug, 15% of the bug code could be fixed, and 37% of the bug code could be matched by fix patterns.
C1 [Yang, Yilin; He, Tianxing; Feng, Yang; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, 22 Hankou Rd, Nanjing 210093, Jiangsu, Peoples R China.
   [Liu, Shaoying] Hiroshima Univ, Grad Sch Adv Sci & Engn, Higashihiroshima, Japan.
C3 Nanjing University; Hiroshima University
RP Yang, YL (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, 22 Hankou Rd, Nanjing 210093, Jiangsu, Peoples R China.
EM yilin.yang@smail.nju.edu.cn; mf20320060@smail.nju.edu.cn;
   fengyang@nju.edu.cn; sliu@hiroshima-u.ac.jp; bwxu@nju.edu.cn
RI Xu, Baowen/IXW-4882-2023
OI Xu, Baowen/0000-0001-7743-1296
FU National Natural Science Foundation of China [62172209]; Key Program of
   the National Natural Science Foundation of China [61832009]; Cooperation
   Fund of Huawei-Nanjing University Next Generation Programming Innovation
   Lab [YBN2019105178SW23]
FX We thank the anonymous reviewers for their constructive comments. This
   work is partially supported by the the National Natural Science
   Foundation of China (No.62172209), the Key Program of the National
   Natural Science Foundation of China (No.61832009) and Cooperation Fund
   of Huawei-Nanjing University Next Generation Programming Innovation Lab
   (No. YBN2019105178SW23).
CR Akerblom B., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P292
   Akimova EN, 2021, MATHEMATICS-BASEL, V9, DOI 10.3390/math9111180
   Cadar C., 2008, Proceedings of the 8th USENIX conference on Operating systems design and implementation, OSDI'08, (USA), P209
   Chakraborty S., 2018, ARXIV181000314
   Chen ZF, 2018, SCI CHINA INFORM SCI, V61, DOI 10.1007/s11432-017-9153-3
   Cotroneo D, 2019, ANAL CONTEXT BUG FIX
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Durieux T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P349, DOI 10.1109/SANER.2017.7884635
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Fluri Beat, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P463, DOI 10.1109/ASE.2008.74
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Habib A, 2018, IEEE INT CONF AUTOM, P317, DOI 10.1145/3238147.3238213
   Hallgren Kevin A, 2012, Tutor Quant Methods Psychol, V8, P23
   Hanam Q, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P144, DOI 10.1145/2950290.2950308
   Higo Y, 2020, EMPIR SOFTW ENG, V25, P1951, DOI 10.1007/s10664-020-09807-w
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Holkner Alex, 2009, P 32 AUSTR C COMP SC, V91, P19
   Hong S, 2013, J SYST SOFTWARE, V86, P377, DOI 10.1016/j.jss.2012.08.063
   Hu M, 2020, PYTHON C API EVOLUTI
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Jiang LX, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P81
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Lin Derrick, 2017, P COMPANION 2017 ACM, P55, DOI [10.1145/3135932, DOI 10.1145/3135932, 10.1145/3135932.3135941]
   Liu K, 2019, AVATAR FIXING SEMANT
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Liu K, 2021, IEEE T SOFTWARE ENG, V47, P165, DOI 10.1109/TSE.2018.2884955
   Liu XL, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P118, DOI 10.1109/SANER.2018.8330202
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Mechtaev S, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P448, DOI 10.1109/ICSE.2015.63
   Monat R., 2020, EUR C OBJ OR PROGR E
   Negara S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P803, DOI 10.1145/2568225.2568317
   Nguyen H A, 2013, STUDY REPETITIVENESS
   Noda K, 2020, EXPERIENCE REPORT EF
   Nugroho YS, 2020, EMPIR SOFTW ENG, V25, P790, DOI 10.1007/s10664-019-09772-z
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Pawlik M, 2016, INFORM SYST, V56, P157, DOI 10.1016/j.is.2015.08.004
   Pawlik M, 2015, ACM T DATABASE SYST, V40, DOI 10.1145/2699485
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Saha S, 2019, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE.2019.00020
   Sanner MF, 1999, J MOL GRAPH MODEL, V17, P57
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   SHROUT PE, 1979, PSYCHOL BULL, V86, P420, DOI 10.1037/0033-2909.86.2.420
   Tratt L, 2009, ADV COMPUT, V77, P149, DOI 10.1016/S0065-2458(09)01205-4
   Van Rossum G, 1995, PYTHON TUTORIAL, V620
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wang B, 2015, Soc. Sci. Res, P134
   Wang Y, 2018, EMPIRICAL STUDY MULT
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wen M, 2016, LOCUS LOCATING BUGS
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Widyasari R, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1556, DOI 10.1145/3368089.3417943
   Xia X, 2019, PRACTITIONERS PERCEI
   Xin Q, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P226, DOI 10.1145/3092703.3092718
   Xu ZG, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/2950290.2950357
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Ye H, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110825
   Zhang YH, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P129, DOI 10.1145/3213846.3213866
NR 62
TC 8
Z9 8
U1 0
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 48
DI 10.1007/s10664-021-10087-1
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YQ3KY
UT WOS:000749212400002
DA 2024-07-18
ER

PT J
AU Quach, S
   Lamothe, M
   Adams, B
   Kamei, Y
   Shang, WY
AF Quach, Sophia
   Lamothe, Maxime
   Adams, Bram
   Kamei, Yasutaka
   Shang, Weiyi
TI Evaluating the impact of falsely detected performance bug-inducing
   changes in JIT models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Defect prediction bugs; Just-in-time; Performance
ID SOFTWARE
AB Performance bugs bear a heavy cost on both software developers and end-users. Tools to reduce the occurrence, impact, and repair time of performance bugs, can therefore provide key assistance for software developers racing to fix these bugs. Classification models that focus on identifying defect-prone commits, referred to as Just-In-Time (JIT) Quality Assurance are known to be useful in allowing developers to review risky commits. These commits can be reviewed while they are still fresh in developers' minds, reducing the costs of developing high-quality software. JIT models, however, leverage the SZZ approach to identify whether or not a change is bug-inducing. The fixes to performance bugs may be scattered across the source code, separated from their bug-inducing locations. The nature of performance bugs may make SZZ a sub-optimal approach for identifying their bug-inducing commits. Yet, prior studies that leverage or evaluate the SZZ approach do not distinguish performance bugs from other bugs, leading to potential bias in the results. In this paper, we conduct an empirical study on the JIT defect prediction for performance bugs. We concentrate on SZZ's ability to identify the bug-inducing commits of performance bugs in two open-source projects, Cassandra, and Hadoop. We verify whether the bug-inducing commits found by SZZ are truly bug-inducing commits by manually examining these identified commits. Our manual examination includes cross referencing fix commits and JIRA bug reports. We evaluate model performance for JIT models by using them to identify bug-inducing code commits for performance related bugs. Our findings show that JIT defect prediction classifies non-performance bug-inducing commits better than performance bug-inducing commits, i.e., the SZZ approach does introduce errors when identifying bug-inducing commits. However, we find that manually correcting these errors in the training data only slightly improves the models. In the absence of a large number of correctly labelled performance bug-inducing commits, our findings show that combining all available training data (i.e., truly performance bug-inducing commits, non-performance bug-inducing commits, and non-bug-inducing commits) yields the best classification results.
C1 [Quach, Sophia; Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
   [Lamothe, Maxime] Polytech, Dept Comp & Software Engn, Montreal, PQ, Canada.
   [Adams, Bram] Queens Univ, Queens Sch Comp, Kingston, ON, Canada.
   [Kamei, Yasutaka] Kyushu Univ, Fac Informat Sci & Elect Engn, Kyushu, Japan.
C3 Concordia University - Canada; Universite de Montreal; Polytechnique
   Montreal; Queens University - Canada; Kyushu University
RP Quach, S (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
EM s_quach@encs.concordia.ca; max_lam@encs.concordia.ca;
   bram@cs.queensu.ca; kamei@ait.kyushu-u.ac.jp; shang@encs.concordia.ca
RI Lamothe, Maxime/AAE-1490-2022
OI Lamothe, Maxime/0000-0003-3705-6238; /0000-0001-5850-1375; Adams,
   Bram/0000-0001-7213-4006
FU JSPS KAKENHI Japan [21H04877, JP18H03222]; SNSF (Project "SENSOR"); JSPS
   International Joint Research Program; Grants-in-Aid for Scientific
   Research [21H04877] Funding Source: KAKEN
FX This research was partially supported by JSPS KAKENHI Japan (Grant
   Numbers: 21H04877, JP18H03222) and JSPS International Joint Research
   Program with SNSF (Project "SENSOR").
CR Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   [Anonymous], Jpace jpace/diffj
   [Anonymous], 2020, CORRELATION PEARSON
   [Anonymous], 2019, APACHE APACHE CASSAN APACHE APACHE CASSAN
   Bryant RE, 2015, Computer Systems: A Programmer's Perspective
   Catolino G, 2017, JUST IN TIME BUG PRE, P05
   Catolino G, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P99, DOI 10.1109/MOBILESoft.2019.00023
   Chen JF, 2017, PROC IEEE INT CONF S, P341, DOI 10.1109/ICSME.2017.13
   CHEN JW, 2020, POLYM REV 0307, DOI DOI 10.1016/j.tca.2014.04.007
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Davies S, 2014, J SOFTW-EVOL PROC, V26, P107, DOI 10.1002/smr.1619
   Ding Z, 2020, 42 INT C SOFTW ENG S 42 INT C SOFTW ENG S
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Fukushima T., 2014, EMPIR SOFTW ENG, V21, P05
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Guindon C., SWT STANDARD WIDGET
   Guo P J, 2010, P 32 ACMIEEE INT C S, P495
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hamill M, 2014, SOFTW TEST VERIF REL, V24, P684, DOI 10.1002/stvr.1518
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kondo M., 2020, EMPIR SOFTW ENG, V25, P01, DOI [10.1007/s10664-019-09738-1, DOI 10.1007/S10664-019-09738-1]
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Li H, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P467
   McDonald JH., 2014, HDB BIOL STAT, V3, P186
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Molyneaux I., 2009, The Art of Application Performance Testing: Help for Programmers and Quality Assurance, V1st
   Nayrolles M, 2018, IEEE WORK CONF MIN S, P153, DOI 10.1145/3196398.3196438
   Neto E, 2018, IMPACT REFACTORING C, P03
   Nistor A, 2013, IEEE WORK CONF MIN S, P237, DOI 10.1109/MSR.2013.6624035
   Radu Aida, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P399, DOI 10.1109/MSR.2019.00066
   Rodriguezperez Gema, 2020, IEEE Transactions on Software Engineering
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Sawilowsky SS, 2009, J MOD APPL STAT METH, V8, P597, DOI 10.22237/jmasm/1257035100
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Syer MD, 2017, AUTOMAT SOFTW ENG, V24, P189, DOI 10.1007/s10515-016-0196-8
   Tabassum S, 2020, INVESTIGATION CROSS, P06
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Team J, ECLIPSE JAVA DEV TOO
   Tsakiltsidis S, 2016, IEEE INT SYMP SOFTW, P132, DOI 10.1109/ISSREW.2016.43
   Williams C, 2008, P 2008 WORKSHOP DEFE, P32
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
NR 48
TC 2
Z9 2
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 97
DI 10.1007/s10664-021-10004-6
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA TI0JD
UT WOS:000672466500001
DA 2024-07-18
ER

PT J
AU Daoudi, N
   Allix, K
   Bissyandé, TF
   Klein, J
AF Daoudi, Nadia
   Allix, Kevin
   Bissyande, Tegawende F.
   Klein, Jacques
TI Lessons Learnt on Reproducibility in Machine Learning Based Android
   Malware Detection
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Android malware dection; Machine learning; Reproducibility;
   Replicability
ID CONTEXT-AWARE; PERMISSION; SEMANTICS
AB A well-known curse of computer security research is that it often produces systems that, while technically sound, fail operationally. To overcome this curse, the community generally seeks to assess proposed systems under a variety of settings in order to make explicit every potential bias. In this respect, recently, research achievements on machine learning based malware detection are being considered for thorough evaluation by the community. Such an effort of comprehensive evaluation supposes first and foremost the possibility to perform an independent reproduction study in order to sharpen evaluations presented by approaches' authors. The question Can published approaches actually be reproduced? thus becomes paramount despite the little interest such mundane and practical aspects seem to attract in the malware detection field. In this paper, we attempt a complete reproduction of five Android Malware Detectors from the literature and discuss to what extent they are "reproducible". Notably, we provide insights on the implications around the guesswork that may be required to finalise a working implementation. Finally, we discuss how barriers to reproduction could be lifted, and how the malware detection field would benefit from stronger reproducibility standards-like many various fields already have.
C1 [Daoudi, Nadia; Allix, Kevin; Bissyande, Tegawende F.; Klein, Jacques] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, 29 Ave JF Kennedy, L-1855 Luxembourg, Luxembourg.
C3 University of Luxembourg
RP Daoudi, N (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, 29 Ave JF Kennedy, L-1855 Luxembourg, Luxembourg.
EM nadia.daoudi@uni.lu; kevin.allix@uni.lu; tegawende.bissyande@uni.lu;
   jacques.klein@uni.lu
RI Allix, Kevin/AAF-3197-2021
OI Allix, Kevin/0000-0003-3221-7266; Klein, Jacques/0000-0003-4052-475X;
   Daoudi, Nadia/0000-0002-1437-667X
FU Fonds National de la Recherche (FNR), Luxembourg under project
   CHARACTERIZE [C17/IS/11693861]; University of Luxembourg; SPARTA project
   - European Union [830892]; Luxembourg Ministry of Foreign and European
   Affairs through their Digital4Development (D4D) portfolio under project
   LuxWAyS
FX This work was partially supported (a) by the Fonds National de la
   Recherche (FNR), Luxembourg, under project CHARACTERIZE C17/IS/11693861,
   (b) by the University of Luxembourg under the HitDroid grant, (c) by the
   SPARTA project, which has received funding from the European Union's
   Horizon 2020 research and innovation program under grant agreement No
   830892, and (d) by the Luxembourg Ministry of Foreign and European
   Affairs through their Digital4Development (D4D) portfolio under project
   LuxWAyS.
CR Aafer Y, 2013, L N INST COMP SCI SO, V127, P86
   Abaid Z, 2017, 2017 IEEE 16TH INTERNATIONAL SYMPOSIUM ON NETWORK COMPUTING AND APPLICATIONS (NCA), P375
   Allix K, 2015, Engineering Secure Software and Systems, P51, DOI [10.1007/978-3-319-15618-7_5, DOI 10.1007/978-3-319-15618-7_5]
   Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Allix K, 2016, EMPIR SOFTW ENG, V21, P183, DOI 10.1007/s10664-014-9352-6
   [Anonymous], 2002, LOGIC SCI DISCOVERY
   Arp D, 2014, P ISOC NETW DISTR SY
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Association for Computer Machinery, 2020, ART REV BADG
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Avdiienko V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P426, DOI 10.1109/ICSE.2015.61
   Baker M, 2016, NATURE, V533, P452, DOI 10.1038/533452a
   Bartel Alexandre, 2012, P ACM SIGPLAN INT WO, P27
   Bayens C, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P1181
   Breiman L., 2001, Mach. Learn., V45, P5
   Burman LE, 2010, PUBLIC FINANC REV, V38, P787, DOI 10.1177/1091142110385210
   Cai HP, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3371924
   Cai HP, 2019, IEEE T INF FOREN SEC, V14, P1455, DOI 10.1109/TIFS.2018.2879302
   Canfora G, 2019, IEEE T SOFTWARE ENG, V45, P1230, DOI 10.1109/TSE.2018.2834344
   Caviglione L, 2016, IEEE T INF FOREN SEC, V11, P799, DOI 10.1109/TIFS.2015.2510825
   Chandramohan M, 2013, IEEE INT CONF AUTOM, P312, DOI 10.1109/ASE.2013.6693090
   Chen S, 2019, 2019 IEEE 1ST INTERNATIONAL WORKSHOP ON ARTIFICIAL INTELLIGENCE FOR MOBILE (AI4MOBILE '19), P21, DOI [10.1109/AI4Mobile.2019.8672691, 10.1109/ai4mobile.2019.8672691]
   Chen S, 2018, COMPUT SECUR, V73, P326, DOI 10.1016/j.cose.2017.11.007
   Chen S, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P377, DOI 10.1145/2897845.2897860
   Chen W, 2014, BRIT J RADIOL, V87, DOI 10.1259/bjr.20140016
   Curtsinger C, 2011, 20 USENIX SEC S SAN
   Das S, 2016, IEEE T INF FOREN SEC, V11, P289, DOI 10.1109/TIFS.2015.2491300
   Demontis A, 2019, IEEE T DEPEND SECURE, V16, P711, DOI 10.1109/TDSC.2017.2700270
   Desnos A, 2011, BLACK HAT ABU DHABI
   Du P, 2018, IEEE T INF FOREN SEC, V13, P2965, DOI 10.1109/TIFS.2018.2833292
   Duvendack M, 2015, ECON J WATCH, V12, P164
   Fan M, 2019, PROC INT CONF SOFTW, P771, DOI 10.1109/ICSE.2019.00085
   Fan M, 2018, IEEE T INF FOREN SEC, V13, P1890, DOI 10.1109/TIFS.2018.2806891
   Fan YJ, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P253, DOI 10.1145/3219819.3219862
   Feng Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P576, DOI 10.1145/2635868.2635869
   FREEMAN LC, 1979, SOC NETWORKS, V1, P215, DOI 10.1016/0378-8733(78)90021-7
   Freire N, P 51 ANN M ASS COMP, P1691
   Gao S, 2018, PROCEEDINGS OF THE 2018 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIACCS'18), P413, DOI 10.1145/3196494.3196519
   Garcia J, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3162625
   Gascon Hugo, 2013, P 2013 ACM WORKSH AR, P45
   Giuffrida C, 2019, EUR C SEC PRIV EURS
   Gong LY, 2020, PROCEEDINGS OF THE FIFTEENTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS (EUROSYS'20), DOI 10.1145/3342195.3387530
   Gu G, 2014, 21 ANN NETW DISTR SY
   Gundersen OE, 2018, P 32 AAAI C ART INT
   Hammad M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P421, DOI 10.1145/3180155.3180228
   Hearst MA, 1998, IEEE INTELL SYST APP, V13, P18, DOI 10.1109/5254.708428
   Hou SF, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5279
   Hou SF, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1507, DOI 10.1145/3097983.3098026
   Hutson M, 2018, SCIENCE, V359, P725, DOI 10.1126/science.359.6377.725
   Jerome Q, 2014, IEEE ICC, P914, DOI 10.1109/ICC.2014.6883436
   Jiang X, 2013, P 8 ACM SIGSAC S INF, P329
   Jordaney R, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P625
   Jordaney Roberto., 2016, Misleading metrics: On evaluating machine learning for malware with confidence. Tech. Rep
   Kadir A.F. A., 2015, Network and System Security-9th International Conference, NSS 2015, New York, NY, USA, November 3-5, 2015, Proceedings, volume 9408 of NSS'15, V9408, P78
   Kapravelos Alexandros., 2013, P 22 USENIX C SECURI, P637
   Katz L., 1953, Psychometrika, V18, P39, DOI [10.1007/BF02289026, DOI 10.1007/BF02289026]
   Khatter K., 2015, INT J APPL ENG RES, V10, P98
   Kim T, 2019, IEEE T INF FOREN SEC, V14, P773, DOI 10.1109/TIFS.2018.2866319
   KING G, 1995, PS, V28, P444, DOI 10.2307/420301
   Kirat D, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P287
   Kolbitsch C, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P285
   Kong DG, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1357
   Kruegel C, 2009, 18 USENIX SEC S MONT, P351
   Lam P, 2011, CET US COMP INF WORK
   Li L, 2017, IEEE T INF FOREN SEC, V12, P1269, DOI 10.1109/TIFS.2017.2656460
   Ma XB, 2014, IEEE T INF FOREN SEC, V9, P1906, DOI 10.1109/TIFS.2014.2357251
   Maiorca Davide., 2013, P 8 ACM SIGSAC S INF, P119, DOI DOI 10.1145/2484313.2484327
   Marchiori M, 2000, PHYSICA A, V285, P539, DOI 10.1016/S0378-4371(00)00311-3
   Mariconti E., 2016, ARXIV161204433
   Mariconti E, 2017, ISOC NETW DISTR SYST
   McCullough BD, 2006, J MONEY CREDIT BANK, V38, P1093, DOI 10.1353/mcb.2006.0061
   Meng GZ, 2019, IEEE T INF FOREN SEC, V14, P1944, DOI 10.1109/TIFS.2018.2889924
   Meng GZ, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P365, DOI 10.1145/2897845.2897856
   Mirzaei O, 2019, PROCEEDINGS OF THE 2019 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIACCS '19), P307, DOI 10.1145/3321705.3329854
   Mobley A, 2013, PLOS ONE, V8, DOI 10.1371/journal.pone.0063221
   Narayanan A, 2018, EMPIR SOFTW ENG, V23, P1222, DOI 10.1007/s10664-017-9539-8
   Narayanan A, 2017, IEEE TETCI, V1, P157, DOI 10.1109/TETCI.2017.2699220
   Naval S, 2015, IEEE T INF FOREN SEC, V10, P2591, DOI 10.1109/TIFS.2015.2469253
   Neupane A, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P479, DOI 10.1145/2810103.2813660
   Nissim N, 2017, IEEE T INF FOREN SEC, V12, P631, DOI 10.1109/TIFS.2016.2631905
   Nuijten MB, 2019, DEV MED CHILD NEUROL, V61, P535, DOI 10.1111/dmcn.14054
   O'Kane P, 2013, IEEE T INF FOREN SEC, V8, P500, DOI 10.1109/TIFS.2013.2242890
   Onwuzurike L, 2019, ACM T PRIV SECUR, V22, DOI 10.1145/3313391
   Pang M, 2018, P 32 INT C NEUR INF, P6976
   Pei XJ, 2020, COMPUT SECUR, V93, DOI 10.1016/j.cose.2020.101792
   Pendlebury F, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P729
   Plesser HE, 2018, FRONT NEUROINFORM, V11, DOI 10.3389/fninf.2017.00076
   Poeplau S, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23328
   Precup D, 2017, REPR MACH LEARN WORK
   Rahbarinia B, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P783, DOI 10.1145/2897845.2897918
   Rasthofer S, 2017, PROC INT CONF SOFTW, P300, DOI 10.1109/ICSE.2017.35
   Rastogi V, 2014, IEEE T INF FOREN SEC, V9, P99, DOI 10.1109/TIFS.2013.2290431
   Reaves B, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2996358
   Rossow C, 2012, P IEEE S SECUR PRIV, P65, DOI 10.1109/SP.2012.14
   Rougier NP, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.142
   Scalas M, 2019, COMPUT SECUR, V86, P168, DOI 10.1016/j.cose.2019.06.004
   Schmicker Robert, 2019, Digital Forensics and Cyber Crime. 10th International EAI Conference, ICDF2C 2018. Proceedings. Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering (LNICST 259), P66, DOI 10.1007/978-3-030-05487-8_4
   Sen S, 2018, IEEE T INF FOREN SEC, V13, P2563, DOI 10.1109/TIFS.2018.2824250
   Skovoroda A, 2017, ANN CONF PRIV SECUR, P243, DOI 10.1109/PST.2017.00036
   Smutz C, 2016, 23 ANN NETW DISTR SY
   Song F., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, P607
   Srndic N, 2013, 20 ANN NETW DISTR SY
   Sun MS, 2017, IEEE T INF FOREN SEC, V12, P1103, DOI 10.1109/TIFS.2016.2646641
   Tam K, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23145
   Tamersoy A, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P1524, DOI 10.1145/2623330.2623342
   Tan TH, 2015, P 10 ACM S INF COMP, P109
   Vallee-Rai R., 1999, Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative Research, CASCON'99, page, P13
   Viennot N., 2014, 2014 ACM INT C MEAS, P221, DOI DOI 10.1145/2637364.2592003
   Vigna G, P NETW DISTR SYST SE
   Wang G, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P239
   Wang SS, 2018, IEEE T INF FOREN SEC, V13, P1096, DOI 10.1109/TIFS.2017.2771228
   Wang S, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3762
   Wang W, 2014, IEEE T INF FOREN SEC, V9, P1869, DOI 10.1109/TIFS.2014.2353996
   Wei S, 2011, IEEE T INF FOREN SEC, V6, P1136, DOI 10.1109/TIFS.2011.2157341
   Wong MY, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23118
   Wu Y, 2019, 34 IEEEACM INT C, P139, DOI DOI 10.1109/ASE.2019.00023
   Wuchner T., 2014, Proceedings of the 9th ACM Symposium on Information, Computer and Communications Security - ASIA CCS '14, P271
   Xia ZH, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2012, DOI 10.1145/3292500.3330702
   Xing LY, 2014, P IEEE S SECUR PRIV, P393, DOI 10.1109/SP.2014.32
   Xu FH, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23482
   Xu K, 2016, IEEE T INF FOREN SEC, V11, P1252, DOI 10.1109/TIFS.2016.2523912
   Xue L, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P289
   Xue YX, 2017, IEEE T INF FOREN SEC, V12, P1529, DOI 10.1109/TIFS.2017.2661723
   Yan G, P 10 ACM S INF COMP, P121
   Yan L.K., 2012, P 21 USENIX C SECURI
   Yang W, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P384, DOI 10.1145/3180155.3180223
   Yang W, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P303, DOI 10.1109/ICSE.2015.50
   Ye Y., 2011, P 17 ACM SIGKDD INT, P222
   Ye YF, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4150
   Ye YF, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1385
   Zhang H, 2014, P 9 ACM S INF COMP C, P39
   Zhang M, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1105, DOI 10.1145/2660267.2660359
   Zhao K, 2015, 2015 IEEE SYMPOSIUM ON COMPUTERS AND COMMUNICATION (ISCC), P714, DOI 10.1109/ISCC.2015.7405598
   Zhongyang Y., 2013, 8th ACM Symposium on Information, Computer and Communications Security, ASIA CCS '13, Hangzhou, China-May 08-10, 2013, ASIACCS'13, P353, DOI 10.1145/2484313.2484359
   Zhou Y, 2012, P 19 NETW DISTR SYST
   Zhou YJ, 2012, P IEEE S SECUR PRIV, P95, DOI 10.1109/SP.2012.16
   Zhu Ziyun, 2016, P ACM SIGSAC C COMP, P767
NR 137
TC 9
Z9 9
U1 0
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 74
DI 10.1007/s10664-021-09955-7
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA SG9LY
UT WOS:000653762700001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Quach, S
   Lamothe, M
   Kamei, Y
   Shang, WY
AF Quach, Sophia
   Lamothe, Maxime
   Kamei, Yasutaka
   Shang, Weiyi
TI An empirical study on the use of SZZ for identifying inducing changes of
   non-functional bugs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug inducing changes SZZ; Non-functional bugs; Mining software
   repositories
ID SOFTWARE
AB Non-functional bugs, e.g., performance bugs and security bugs, bear a heavy cost on both software developers and end-users. For example, IBM estimates the cost of a single data breach to be millions of dollars. Tools to reduce the occurrence, impact, and repair time of non-functional bugs can therefore provide key assistance for software developers racing to fix these issues. Identifying bug-inducing changes is a critical step in software quality assurance. In particular, the SZZ approach is commonly used to identify bug-inducing commits. However, the fixes to non-functional bugs may be scattered and separate from their bug-inducing locations in the source code. The nature of non-functional bugs may therefore make the SZZ approach a sub-optimal approach for identifying bug-inducing changes. Yet, prior studies that leverage or evaluate the SZZ approach do not consider non-functional bugs, leading to potential bias on the results. In this paper, we conduct an empirical study on the results of the SZZ approach when used to identify the inducing changes of the non-functional bugs in the NFBugs dataset. We eliminate a majority of the bug-inducing commits as they are not in the same method or class level. We manually examine whether each identified bug-inducing change is indeed the correct bug-inducing change. Our manual study shows that a large portion of non-functional bugs cannot be properly identified by the SZZ approach. By manually identifying the root causes of the falsely detected bug-inducing changes, we uncover root causes for false detection that have not been found by previous studies. We evaluate the identified bug-inducing changes based on three criteria from prior research, i.e., the earliest bug appearance, the future impact of changes, and the realism of bug introduction. We find that prior criteria may be irrelevant for non-functional bugs. Our results may be used to assist in future research on non-functional bugs, and highlight the need to complement SZZ to accommodate the unique characteristics of non-functional bugs.
C1 [Quach, Sophia; Lamothe, Maxime; Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
   [Kamei, Yasutaka] Kyushu Univ, Fac Informat Sci & Elect Engn, Fukuoka, Japan.
C3 Concordia University - Canada; Kyushu University
RP Quach, S (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
EM s_quach@encs.concordia.ca; max_lam@encs.concordia.ca;
   kamei@ait.kyushu-u.ac.jp; shang@encs.concordia.ca
CR Borg M, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P7, DOI 10.1145/3340482.3342742
   Bryant RE, 2015, Computer Systems: A Programmer's Perspective
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Davies S, 2014, J SOFTW-EVOL PROC, V26, P107, DOI 10.1002/smr.1619
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   Glinz M, 2007, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2007.45
   Grubb P, 2003, SOFTWARE MAINTENANCE, V2nd, P01
   Guindon C., SWT STANDARD WIDGET
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hamill M, 2014, SOFTW TEST VERIF REL, V24, P684, DOI 10.1002/stvr.1518
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Jpace, 2018, JPAC DIFFJ
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim M, 2018, PROC IEEE ACM INT C, P248, DOI 10.1145/3183440.3194954
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kotonya G., 1998, Requirements engineering: processes and techniques
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Liu Ping, 2011, Proceedings of the 2011 International Conference on Computer Science and Network Technology (ICCSNT), P1873, DOI 10.1109/ICCSNT.2011.6182335
   Mahrous H., 2018, P 2018 16 ANN C PRIV, P1, DOI [10.1109/PST.2018.8514187, DOI 10.1109/PST.2018.8514187]
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Molyneaux I., 2009, The Art of Application Performance Testing: Help for Programmers and Quality Assurance, V1st
   Neto C, 2018, ENHANCING SZZ ALGORI
   Nistor A, 2013, IEEE WORK CONF MIN S, P237, DOI 10.1109/MSR.2013.6624035
   Nugroho YS, 2020, EMPIR SOFTW ENG, V25, P790, DOI 10.1007/s10664-019-09772-z
   Ohira M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P518, DOI 10.1109/MSR.2015.78
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Radu Aida, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P399, DOI 10.1109/MSR.2019.00066
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Steidl Daniela, 2014, P WORK C MIN SOFTW R, P42
   Team J, ECL JAV DEV TOOLS JD
   Williams C, 2008, P 2008 WORKSHOP DEFE, P32
   Williams L, 2018, IEEE SOFTWARE, V35, P76, DOI 10.1109/MS.2018.290110854
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
NR 38
TC 4
Z9 4
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 71
DI 10.1007/s10664-021-09970-8
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZA4DR
UT WOS:000756116700002
DA 2024-07-18
ER

PT J
AU Russo, D
   Hanel, PHP
   Altnickel, S
   van Berkel, N
AF Russo, Daniel
   Hanel, Paul H. P.
   Altnickel, Seraphina
   van Berkel, Niels
TI Predictors of well-being and productivity among software professionals
   during the COVID-19 pandemic - a longitudinal study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Pandemic; COVID-19; Productivity; Well-being; Longitudinal study; Remote
   work
ID PSYCHOLOGICAL IMPACT; GENDER-DIFFERENCES; BOREDOM PRONENESS; STATISTICAL
   POWER; COPING STRATEGIES; ANXIETY DISORDER; STRESS REDUCTION; HEALTH;
   MINDFULNESS; TELEWORKING
AB The COVID-19 pandemic has forced governments worldwide to impose movement restrictions on their citizens. Although critical to reducing the virus' reproduction rate, these restrictions come with far-reaching social and economic consequences. In this paper, we investigate the impact of these restrictions on an individual level among software engineers who were working from home. Although software professionals are accustomed to working with digital tools, but not all of them remotely, in their day-to-day work, the abrupt and enforced work-from-home context has resulted in an unprecedented scenario for the software engineering community. In a two-wave longitudinal study (N = 192), we covered over 50 psychological, social, situational, and physiological factors that have previously been associated with well-being or productivity. Examples include anxiety, distractions, coping strategies, psychological and physical needs, office set-up, stress, and work motivation. This design allowed us to identify the variables that explained unique variance in well-being and productivity. Results include (1) the quality of social contacts predicted positively, and stress predicted an individual's well-being negatively when controlling for other variables consistently across both waves; (2) boredom and distractions predicted productivity negatively; (3) productivity was less strongly associated with all predictor variables at time two compared to time one, suggesting that software engineers adapted to the lockdown situation over time; and (4) longitudinal analyses did not provide evidence that any predictor variable causal explained variance in well-being and productivity. Overall, we conclude that working from home was per se not a significant challenge for software engineers. Finally, our study can assess the effectiveness of current work-from-home and general well-being and productivity support guidelines and provides tailored insights for software professionals.
C1 [Russo, Daniel; van Berkel, Niels] Aalborg Univ, Dept Comp Sci, Aalborg, Denmark.
   [Hanel, Paul H. P.] Univ Essex, Dept Psychol, Colchester, Essex, England.
   [Altnickel, Seraphina] Mia Raeumerei GmbH, Berlin, Germany.
C3 Aalborg University; University of Essex
RP Russo, D (corresponding author), Aalborg Univ, Dept Comp Sci, Aalborg, Denmark.
EM daniel.russo@cs.aau.dk
RI Hanel, Paul/AAB-3287-2020; Russo, Daniel/O-3002-2019
OI Hanel, Paul/0000-0002-3225-1395; Russo, Daniel/0000-0001-7253-101X
FU Carlsberg Foundation [CF20-0322]
FX We thank the Editors-in-Chief for fast-tracking our manuscript and the
   anonymous reviewers for the supportive constructive feedback. The
   authors would also like to thank Gabriel Lins de Holanda Coelho for
   initial feedback on this project. This work was supported, in part, by
   the Carlsberg Foundation under grant agreement number CF20-0322 (PanTra
   - Pandemic Transformation).
CR Anand G, 2012, OPER MANAGE RES, V5, P70, DOI 10.1007/s12063-012-0068-8
   Anderson AJ, 2015, EUR J WORK ORGAN PSY, V24, P882, DOI 10.1080/1359432X.2014.966086
   Anderson RM, 2020, LANCET, V395, P931, DOI 10.1016/S0140-6736(20)30567-5
   [Anonymous], 2020, CNN
   [Anonymous], 2006, Regression Analysis by Example, DOI DOI 10.1002/0470055464
   Anumanchipalli GK, 2019, NATURE, V568, P493, DOI 10.1038/s41586-019-1119-1
   Bai Y, 2004, PSYCHIAT SERV, V55, P1055, DOI 10.1176/appi.ps.55.9.1055
   Baltes Sebastian, 2020, ARXIV200207764
   Baruch Y, 2000, NEW TECH WORK EMPLOY, V15, P34, DOI 10.1111/1468-005X.00063
   Bassett-Jones N, 2005, J MANAG DEV, V24, P929, DOI 10.1108/02621710510627064
   Bazarko D, 2013, J WORKPLACE BEHAV HE, V28, P107, DOI 10.1080/15555240.2013.779518
   Berens SC, 2020, NAT HUM BEHAV, V4, P866, DOI 10.1038/s41562-020-0888-8
   Bethlehem J, 2010, INT STAT REV, V78, P161, DOI 10.1111/j.1751-5823.2010.00112.x
   Birditt KS, 2007, J FAM PSYCHOL, V21, P595, DOI 10.1037/0893-3200.21.4.595
   Bloom N, 2015, Q J ECON, V130, P165, DOI 10.1093/qje/qju032
   Boateng GO, 2018, FRONT PUBLIC HEALTH, V6, DOI 10.3389/fpubh.2018.00149
   Brooks SK, 2020, LANCET, V395, P912, DOI 10.1016/S0140-6736(20)30460-8
   Buchanan KE, 2010, J SOC PSYCHOL, V150, P235, DOI 10.1080/00224540903365554
   Buffer, 2020, The 2020 state of remote work
   Caleo G, 2018, BMC PUBLIC HEALTH, V18, DOI 10.1186/s12889-018-5158-6
   Calvo RA, 2020, BMJ-BRIT MED J, V369, DOI 10.1136/bmj.m1373
   Cardenas R.A., 2004, Int. J. Stress Manag., V11, P346, DOI DOI 10.1037/1072-5245.11.4.346
   Carolan S, 2017, J MED INTERNET RES, V19, DOI 10.2196/jmir.7583
   Carvalho LD, 2020, TRENDS PSYCHIATR PSY, V42, P179, DOI 10.1590/2237-6089-2020-0029
   Carver CS, 1997, INT J BEHAV MED, V4, P92, DOI 10.1207/s15327558ijbm0401_6
   CARVER CS, 1989, J PERS SOC PSYCHOL, V56, P267, DOI 10.1037/0022-3514.56.2.267
   Cascio WF, 2000, ACAD MANAGE EXEC, V14, P81, DOI 10.5465/AME.2000.4468068
   Chalmers RP, 2012, J STAT SOFTW, V48, P1
   CIPD, 2020, Getting the Most from Remote Working
   City of New York, 2020, HELP NOW NYC
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   COHEN S, 1988, CLAR SYMP, P31
   Danish Health Authority, 2020, Questions and Answers on Novel Coronavirus
   Davidson B, 2015, TEACH LEARN MED, V27, P99, DOI 10.1080/10401334.2014.979183
   De Castella K, 2014, AUST J PSYCHOL, V66, P139, DOI 10.1111/ajpy.12053
   Gierveld JD, 2006, RES AGING, V28, P582, DOI 10.1177/0164027506289723
   de Vries RE, 2013, J RES PERS, V47, P871, DOI 10.1016/j.jrp.2013.09.003
   Dictionary C, 2020, GETT MOST REM WORK
   DIENER E, 1985, J PERS ASSESS, V49, P71, DOI 10.1207/s15327752jpa4901_13
   Diener E, 2009, SOC INDIC RES SER, V37, P103, DOI 10.1007/978-90-481-2350-6_5
   Dieste O, 2017, EMPIR SOFTW ENG, V22, P2457, DOI 10.1007/s10664-016-9471-3
   Dittmar H, 2014, J PERS SOC PSYCHOL, V107, P879, DOI 10.1037/a0037409
   Donnelly N, 2015, NEW TECH WORK EMPLOY, V30, P47, DOI 10.1111/ntwe.12040
   European Social Survey, 2014, ESS ROUND 7 EUR SOC, DOI DOI 10.21338/NSD-ESS7-2014
   FARMER R, 1986, J PERS ASSESS, V50, P4, DOI 10.1207/s15327752jpa5001_2
   Faul F, 2009, BEHAV RES METHODS, V41, P1149, DOI 10.3758/BRM.41.4.1149
   FEINGOLD A, 1994, PSYCHOL BULL, V116, P429, DOI 10.1037/0033-2909.116.3.429
   Fetzer T., 2020, Global behaviors and perceptions in the covid-19 pandemic, DOI [DOI 10.31234/OSF.IO/3KFMH, 10.31234/osf.io/3kfmh]
   Fischer R, 2020, FRONT PSYCHOL, V11, DOI 10.3389/fpsyg.2020.563876
   Freeman D, 2017, SOC PSYCH PSYCH EPID, V52, P595, DOI 10.1007/s00127-017-1354-4
   Gagné M, 2015, EUR J WORK ORGAN PSY, V24, P178, DOI 10.1080/1359432X.2013.877892
   Gallup, 2020, IS WORK REM EFF GALL
   Gana K., 2019, Structural Equation with Lavaan, P1
   Gignac GE, 2016, PERS INDIV DIFFER, V102, P74, DOI 10.1016/j.paid.2016.06.069
   Glei DA, 2019, PLOS ONE, V14, DOI 10.1371/journal.pone.0214947
   GODIN G, 1985, Canadian Journal of Applied Sport Sciences, V10, P141
   Green JW, 2009, THESIS NORTHCENTRAL
   Gren L, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267437
   Grossman P, 2004, J PSYCHOSOM RES, V57, P35, DOI 10.1016/S0022-3999(03)00573-7
   Hair JF, 2010, Multivariate data analysis
   Hale T., 2020, Oxford COVID-19 Government Response Tracker
   Hawryluck L, 2004, EMERG INFECT DIS, V10, P1206, DOI 10.3201/eid1007.030703
   Hermida R., 2015, Computational Methods in Social Sciences, V3, P5
   Herzberg F., 2017, MOTIVATION WORK
   Hosio S, 2020, COMPUTER, V53, P63, DOI 10.1109/MC.2019.2902542
   Howell AJ, 2008, PERS INDIV DIFFER, V45, P773, DOI 10.1016/j.paid.2008.08.005
   INMAN HF, 1989, COMMUN STAT THEORY, V18, P3851, DOI 10.1080/03610928908830127
   International Monetary Fund (IMF), 2020, WORLD EC OUTLOOK, DOI DOI 10.1787/557A761B-EN
   Jarvela S., 2002, Interactive Learning Environments, V10, P1, DOI 10.1076/ilee.10.1.1.3613
   Johnston J., 2020, VET NURSING J, V35, P217, DOI DOI 10.1080/17415349.2020.1850798
   Karesh WB, 2012, LANCET, V380, P1936, DOI 10.1016/S0140-6736(12)61678-X
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Kessler RC, 2003, J OCCUP ENVIRON MED, V45, P156, DOI 10.1097/01.jom.0000052967.43131.51
   Keyes CLM, 2003, CROSS CONT, P477
   Kim Y, 2015, DISASTER MED PUBLIC, V9, P145, DOI 10.1017/dmp.2014.87
   Kline R.B., 2016, Principles and Practice of Structural Equation Modeling, VFourth
   Ko Amy J., 2019, Rethinking Productivity in Software Engineering, P21
   Kossivi B., 2016, Open Journal of Social Sciences, V4, P261, DOI [10.4236/jss.2016.45029, DOI 10.4236/JSS.2016.45029]
   Kotera Y, 2020, INT J ENV RES PUB HE, V17, DOI 10.3390/ijerph17145080
   Kowatsch T, 2015, P 2EUR C INF SYST AS
   Kraft-Todd GT, 2018, NATURE, V563, P245, DOI 10.1038/s41586-018-0647-4
   Krekel C., 2019, SSRN Electron. J, DOI [DOI 10.2139/SSRN.3356581, https://doi.org/10.2139/ssrn.3356581]
   Lascau L, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300649
   LaToza TD, 2020, EMPIR SOFTW ENG, V25, P2416, DOI 10.1007/s10664-020-09810-1
   Lee S, 2005, SOC SCI MED, V61, P2038, DOI 10.1016/j.socscimed.2005.04.010
   Legault L, 2006, J EDUC PSYCHOL, V98, P567, DOI 10.1037/0022-0663.98.3.567
   Li PL, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P700, DOI 10.1109/ICSE.2015.335
   Linton MJ, 2016, BMJ OPEN, V6, DOI 10.1136/bmjopen-2015-010641
   Lipsitch M, 2020, NEW ENGL J MED, V382, P1194, DOI 10.1056/NEJMp2002125
   Liu XH, 2012, COMPR PSYCHIAT, V53, P15, DOI 10.1016/j.comppsych.2011.02.003
   LUDVIGH EJ, 1974, BRIT J PSYCHOL, V65, P359, DOI 10.1111/j.2044-8295.1974.tb01410.x
   MACCALLUM RC, 1992, PSYCHOL BULL, V111, P490, DOI 10.1037/0033-2909.111.3.490
   Maio GR, 2020, IMPORTANCE SHA UNPUB
   Mann S, 2003, NEW TECH WORK EMPLOY, V18, P196, DOI 10.1111/1468-005X.00121
   Marjanovic Z, 2007, INT J NURS STUD, V44, P991, DOI 10.1016/j.ijnurstu.2006.02.012
   Mark G, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173666
   Masi CM, 2011, PERS SOC PSYCHOL REV, V15, P219, DOI 10.1177/1088868310377394
   Meister J., 2020, TOP 10 HR TRENDS MAT
   Naik G Sunil, 2018, Int J Yoga, V11, P53, DOI 10.4103/ijoy.IJOY_41_16
   National Health Service (NHS), 2020, YOUR NHS NEEDS YOU N
   Nelson B., 2020, PSYCHOL EPIDEMIOLOGI
   NHS, 2020, Mental wellbeing while staying at home
   Oakes JM, 2001, EVALUATION REV, V25, P3, DOI 10.1177/0193841X0102500101
   Owl Labs, 2019, Report
   Palan S, 2018, J BEHAV EXP FINANC, V17, P22, DOI 10.1016/j.jbef.2017.12.004
   Pavot W, 2009, SOC INDIC RES SER, V39, P101, DOI 10.1007/978-90-481-2354-4_5
   Peer E, 2017, J EXP SOC PSYCHOL, V70, P153, DOI 10.1016/j.jesp.2017.01.006
   Pilcher JJ, 1997, J PSYCHOSOM RES, V42, P583, DOI 10.1016/S0022-3999(97)00004-4
   Prati G, 2011, RISK ANAL, V31, P645, DOI 10.1111/j.1539-6924.2010.01529.x
   Ralph P, 2020, EMPIR SOFTW ENG, V25, P4927, DOI 10.1007/s10664-020-09875-y
   Reynolds DL, 2008, EPIDEMIOL INFECT, V136, P997, DOI 10.1017/S0950268807009156
   Rocklöv J, 2020, J TRAVEL MED, V27, DOI 10.1093/jtm/taaa030
   ROGOSA D, 1980, PSYCHOL BULL, V88, P245, DOI 10.1037/0033-2909.88.2.245
   Russo Daniel, 2019, 2019 IEEE/ACM Joint 7th International Workshop on Conducting Empirical Studies in Industry (CESI) and 6th International Workshop on Software Engineering Research and Industrial Practice (SER&IP). Proceedings, P30, DOI 10.1109/CESSER-IP.2019.00013
   Russo D, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P364, DOI 10.1109/ICSE-SEIP52600.2021.00048
   Russo D, 2022, IEEE T SOFTWARE ENG, V48, P819, DOI 10.1109/TSE.2020.3003413
   Ryan RM, 2000, AM PSYCHOL, V55, P68, DOI 10.1037/0003-066X.55.1.68
   Sheldon KM, 2012, MOTIV EMOTION, V36, P439, DOI 10.1007/s11031-012-9279-4
   Simmons JP, 2011, PSYCHOL SCI, V22, P1359, DOI 10.1177/0956797611417632
   slack, 2020, GRAB REM DON COFF
   Solomon Z, 2005, SOC PSYCH PSYCH EPID, V40, P947, DOI 10.1007/s00127-005-0973-3
   Spitzer RL, 2006, ARCH INTERN MED, V166, P1092, DOI 10.1001/archinte.166.10.1092
   Sprang G, 2013, DISASTER MED PUBLIC, V7, P105, DOI 10.1017/dmp.2013.22
   Struk AA, 2017, ASSESSMENT, V24, P346, DOI 10.1177/1073191115609996
   Tangney JP, 2004, J PERS, V72, P271, DOI 10.1111/j.0022-3506.2004.00263.x
   Taylor MR, 2008, BMC PUBLIC HEALTH, V8, DOI 10.1186/1471-2458-8-347
   Teo AR, 2013, PLOS ONE, V8, DOI 10.1371/journal.pone.0062396
   Ucok O, 2006, J MANAG DEV, V25, P1024, DOI 10.1108/02621710610708676
   van Tilburg WAP, 2012, MOTIV EMOTION, V36, P181, DOI 10.1007/s11031-011-9234-9
   Vega RP, 2015, J BUS PSYCHOL, V30, P313, DOI 10.1007/s10869-014-9359-4
   Walton Sara, 2020, Technical Report
   Wang JCK, 2016, BUILDING AUTONOMOUS LEARNERS: PERSPECTIVES FROM RESEARCH AND PRACTICE USING SELF-DETERMINATION THEORY, P227, DOI 10.1007/978-981-287-630-0_12
   Webb TL, 2012, PSYCHOL BULL, V138, P775, DOI 10.1037/a0027600
   Wei M, 2020, FRONT PSYCHOL, V11, DOI 10.3389/fpsyg.2020.561609
   Westfall J, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0152719
   Wilken JA, 2017, PREHOSP DISASTER MED, V32, P673, DOI [10.1017/s1049023x17006720, 10.1017/S1049023X17006720]
   Wood MJ, 2017, BRIT J PSYCHOL, V108, P507, DOI 10.1111/bjop.12231
   World Health Organization, 2020, Tech. rep
NR 138
TC 71
Z9 76
U1 5
U2 82
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 62
DI 10.1007/s10664-021-09945-9
PG 63
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA RU3SJ
UT WOS:000645068700001
PM 33942010
OA Green Submitted, Green Accepted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Wang, XJ
   Hu, CZ
   Ma, R
   Tian, DH
   He, JY
AF Wang, Xiajing
   Hu, Changzhen
   Ma, Rui
   Tian, Donghai
   He, Jinyuan
TI CMFuzz: context-aware adaptive mutation for fuzzers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Fuzzing; Seed mutation; Context-aware; Bandit algorithm
AB Mutation-based fuzzing is a simple yet effective technique to discover bugs and security vulnerabilities in software. Given a set of well-formed initial seeds, mutation-based fuzzers continually generate interesting seeds by applying specific mutation strategy in order to maximize code coverage or the number of unique bugs explored at any point-in-time. However, existing fuzzers remain limited in the paths it could cover since it simply follows a uniform distribution to choose mutation operators. In this paper, we proposed a novel context-aware adaptive mutation scheme, namely CMFuzz, which utilizes a contextual bandit algorithm LinUCB to effectively choose optimal mutation operators for various seed files. To this end, CMFuzz dynamically extracts and encodes file characteristics, which allows mutation-based fuzzers to perform context-aware mutation. We apply this scheme on top of several state-of-the-art fuzzers, i.e., PTfuzz, AFL, and AFLFast, and implement CMFuzz-PT, CMFuzz-AFL, and CMFuzz-AFLFast, respectively. We conduct evaluation on 12 real-world open source applications and LAVA-M dataset against their counterparts. Extensive evaluations demonstrate that CMFuzz-based fuzzers achieve higher code coverage and find more crashes at a faster rate than their counterparts on most cases. Furthermore, we also utilize other mainstream bandit algorithms, e.g., Thompson Sample and epsilon-greedy, and implement Thompson-PT and Greedy-PT based on PTfuzz to examine the performance of proposed model. CMFuzz-PT significantly outperforms Thompson-PT especially in terms of unique crashes and paths, i.e., found 1.79x unique crashes and 1.29x unique paths on average. Compared to Greedy-PT, our approach still increases the amount of unique crashes and paths by 1.11x and 1.05x, respectively.
C1 [Wang, Xiajing; Hu, Changzhen; Ma, Rui; Tian, Donghai; He, Jinyuan] Beijing Inst Technol, Sch Comp Sci & Technol, Beijing Key Lab Software Secur Engn Technol, Beijing 100081, Peoples R China.
C3 Beijing Institute of Technology
RP Ma, R (corresponding author), Beijing Inst Technol, Sch Comp Sci & Technol, Beijing Key Lab Software Secur Engn Technol, Beijing 100081, Peoples R China.
EM xiajing.wang@foxmail.com; chzhoo@bit.edu.cn; mary@bit.edu.cn;
   donghaitad@gmail.com; jyuan.h@qq.com
RI Wang, Xiajing/V-5840-2019
OI Wang, Xiajing/0000-0002-9897-0579
FU National Key R&D Program of China [2016QY07X1404]
FX We would like to thank all practitioners who participated in the focus
   group discussions, as well as we thank the anonymous reviewers for their
   constructive comments to improve the paper. This work was supported by
   the National Key R&D Program of China under Grant 2016QY07X1404.
CR Adobe, BASIC DISTRIBUTED FU
   [Anonymous], American Fuzzy Lop
   [Anonymous], 2019, clusterfuzz
   [Anonymous], INT PROC TRAC
   [Anonymous], oss-fuzz
   Aschermann C, 2019, 26TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2019), DOI 10.14722/ndss.2019.23371
   Böttinger K, 2018, 2018 IEEE SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (SPW 2018), P116, DOI 10.1109/SPW.2018.00026
   Böhme M, 2019, IEEE T SOFTWARE ENG, V45, P489, DOI 10.1109/TSE.2017.2785841
   Böhme M, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2329, DOI 10.1145/3133956.3134020
   Cha SK, 2015, P IEEE S SECUR PRIV, P725, DOI 10.1109/SP.2015.50
   Chen HX, 2018, PROCEEDINGS OF THE 2018 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (CCS'18), P2095, DOI 10.1145/3243734.3243849
   Chen P, 2018, P IEEE S SECUR PRIV, P711, DOI 10.1109/SP.2018.00046
   Dolan-Gavitt B, 2016, P IEEE S SECUR PRIV, P110, DOI 10.1109/SP.2016.15
   Gan ST, 2018, P IEEE S SECUR PRIV, P679, DOI 10.1109/SP.2018.00040
   Godefroid P, 2017, IEEE INT CONF AUTOM, P50, DOI 10.1109/ASE.2017.8115618
   Godefroid P, 2012, COMMUN ACM, V55, P40, DOI 10.1145/2093548.2093564
   Goyal N., 2011, J MACH LEARN RES, V23, P1
   Han H, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2345, DOI 10.1145/3133956.3134103
   Jain V, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P505, DOI 10.1145/3274694.3274746
   Jibesh Patra MP, 2016, LEARNING FUZZ APPL I, V1, P123
   Karamcheti S, 2018, AISEC'18: PROCEEDINGS OF THE 11TH ACM WORKSHOP ON ARTIFICIAL INTELLIGENCE AND SECURITY, P37, DOI 10.1145/3270101.3270108
   Lee DD, 1999, NATURE, V401, P788, DOI 10.1038/44565
   Lee DD, 2001, ADV NEUR IN, V13, P556
   Lemieux C, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P254, DOI 10.1145/3213846.3213874
   Lemieux C, 2018, IEEE INT CONF AUTOM, P475, DOI 10.1145/3238147.3238176
   Li L., 2010, P 19 INT C WORLD WID, DOI [10.1145/1772690.1772758, DOI 10.1145/1772690.1772758]
   Li Y, 2018, COMPUTING RES REPOSI, P1
   Li Y., 2019, ARTIF INTELL REV, P1, DOI 10.5194/acp-2019-76
   Li YK, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P627, DOI 10.1145/3106237.3106295
   Lyu C., 2019, P 2019 USENIX SEC S, P1
   McCaffrey J, EPSILON GREEDY ALGOR
   Peng H, 2018, P IEEE S SECUR PRIV, P697, DOI 10.1109/SP.2018.00056
   Rajpal M., 2017, Not all bytes are equal: Neural byte sieve for fuzzing, P1
   Rawat S, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23404
   Rebert A, 2014, PROCEEDINGS OF THE 23RD USENIX SECURITY SYMPOSIUM, P861
   Schumilo S, 2017, PROCEEDINGS OF THE 26TH USENIX SECURITY SYMPOSIUM (USENIX SECURITY '17), P167
   Serebryany K., libFuzzer
   She D., 2018, NEUZZ: Efficient Fuzzing with Neural Program Smoothing
   Slivkins A, 2019, FOUND TRENDS MACH LE, V12, P1, DOI 10.1561/2200000068
   Spieker H, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P12, DOI 10.1145/3092703.3092709
   Sra S., 2005, P ADV NEUR INF PROC, P283
   Stephens N, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23368
   Wagner MD, 2018, ARXIV E PRINTS
   Wang J, P 2019 INT S RES ATT, P1
   Wang JJ, 2017, P IEEE S SECUR PRIV, P579, DOI 10.1109/SP.2017.23
   Wang YC, 2019, IEEE ACCESS, V7, P36340, DOI 10.1109/ACCESS.2019.2903291
   WATKINS CJCH, 1992, MACH LEARN, V8, P279, DOI 10.1007/BF00992698
   Woo M, 2013, P 2013 ACM SIGSAC C, P511
   Xu W, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2313, DOI 10.1145/3133956.3134046
   You W, 2019, P IEEE S SECUR PRIV, P769, DOI 10.1109/SP.2019.00057
   You W, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2139, DOI 10.1145/3133956.3134085
   Yun I, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P745
   Zhang C, 2020, P 2020 USENIX SEC S, P1
   Zhang G, 2018, IEEE ACCESS, V6, P37302, DOI 10.1109/ACCESS.2018.2851237
   Zhao LL, 2019, PREP BIOCHEM BIOTECH, V49, P360, DOI 10.1080/10826068.2019.1573193
NR 55
TC 3
Z9 3
U1 1
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2021
VL 26
IS 1
AR 10
DI 10.1007/s10664-020-09927-3
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PS7OB
UT WOS:000608114500001
DA 2024-07-18
ER

PT J
AU Soltani, M
   Hermans, F
   Bäck, T
AF Soltani, Mozhan
   Hermans, Felienne
   Back, Thomas
TI The significance of bug report elements
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software debugging; Mining repositories; Empirical software engineering
AB Open source software projects often use issue repositories, where project contributors submit bug reports. Using these repositories, more bugs in software projects may be identified and fixed. However, the content and therefore quality of bug reports vary. In this study, we aim to understand the significance of different elements in bug reports. We interviewed 35 developers to gain insights into their perceptions on the importance of various contents in bug reports. To assess our findings, we surveyed 305 developers. The results show developers find it highly important that bug reports include crash description, reproducing steps or test cases, and stack traces. Software version, fix suggestions, code snippets, and attached contents have lower importance for software debugging. Furthermore, to evaluate the quality of currently available bug reports, we mined issue repositories of 250 most popular projects on Github. Statistical analysis on the mined issues shows that crash reproducing steps, stack traces, fix suggestions, and user contents, have statistically significant impact on bug resolution times, for similar to 70%, similar to 76%, similar to 55%, and similar to 33% of the projects. However, on avarage, over 70% of bug reports lack these elements.
C1 [Soltani, Mozhan; Hermans, Felienne; Back, Thomas] Leiden Univ, Leiden, Netherlands.
C3 Leiden University; Leiden University - Excl LUMC
RP Soltani, M (corresponding author), Leiden Univ, Leiden, Netherlands.
EM m.soltani@liacs.leidenuniv.nl; f.f.j.hermans@liacs.leidenuniv.nl;
   t.h.w.baeck@liacs.leidenuniv.nl
RI Hermans, Felienne/AAS-2175-2021
OI Back, Thomas/0000-0001-6768-1478
CR Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   [Anonymous], 2004, FORUM QUALITATIVE SO
   [Anonymous], 2018, IEEE T SOFTW ENG
   [Anonymous], 2007, THEMATIC CODING CATE
   [Anonymous], 2007, P 22 IEEE ACM INT C, DOI DOI 10.1145/1321631.1321639
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   BARRIBALL KL, 1994, J ADV NURS, V19, P328
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Borges H., 2015, ARXIV150700604
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Chen N, 2015, IEEE T SOFTWARE ENG, V41, P198, DOI 10.1109/TSE.2014.2363469
   Fink A., 2003, The survey handbook, V1
   Hih-Pei H.U., 2017, Journal of Social and Administrative Sciences, V4, P205, DOI DOI 10.1453/JSAS.V4I2.1313
   Hove S. E., 2005, Experiences from conducting semi-structured interviews in empirical software engineering research. Paper presented at: IEEE International Software Metrics Symposium (METRICS), P10, DOI DOI 10.1109/METRICS.2005.24
   Jacob SA, 2012, QUAL REP, V17
   Kitchenham B., 2002, Software Engineering Notes, V27, P20, DOI 10.1145/638574.638580
   Likert R., 1932, ARCH PSYCHOL, V22, P55
   Moghaddam A, 2006, ISS EDUC RES, V16, P52
   Myers M. D., 2007, Information and Organization, V17, P2, DOI 10.1016/j.infoandorg.2006.11.001
   Nayrolles M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P101, DOI 10.1109/SANER.2015.7081820
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vaus Davidde., 2013, Surveys in social research
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Zeng H, 2004, P INT COMP SOFTW APP, P20
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 27
TC 14
Z9 20
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 5255
EP 5294
DI 10.1007/s10664-020-09882-z
EA SEP 2020
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4BB
UT WOS:000569291600003
OA hybrid
DA 2024-07-18
ER

PT J
AU Abualhaija, S
   Arora, C
   Sabetzadeh, M
   Briand, LC
   Traynor, M
AF Abualhaija, Sallam
   Arora, Chetan
   Sabetzadeh, Mehrdad
   Briand, Lionel C.
   Traynor, Michael
TI Automated demarcation of requirements in textual specifications: a
   machine learning-based approach
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Textual requirements; Requirements identification and classification;
   Machine learning; Natural language processing
ID CLASSIFICATION
AB A simple but important task during the analysis of a textual requirements specification is to determine which statements in the specification represent requirements. In principle, by following suitable writing and markup conventions, one can provide an immediate and unequivocal demarcation of requirements at the time a specification is being developed. However, neither the presence nor a fully accurate enforcement of such conventions is guaranteed. The result is that, in many practical situations, analysts end up resorting to after-the-fact reviews for sifting requirements from other material in a requirements specification. This is both tedious and time-consuming. We propose an automated approach for demarcating requirements in free-form requirements specifications. The approach, which is based on machine learning, can be applied to a wide variety of specifications in different domains and with different writing styles. We train and evaluate our approach over an independently labeled dataset comprised of 33 industrial requirements specifications. Over this dataset, our approach yields an average precision of 81.2% and an average recall of 95.7%. Compared to simple baselines that demarcate requirements based on the presence of modal verbs and identifiers, our approach leads to an average gain of 16.4% in precision and 25.5% in recall. We collect and analyze expert feedback on the demarcations produced by our approach for industrial requirements specifications. The results indicate that experts find our approach useful and efficient in practice. We developed a prototype tool, named DemaRQ, in support of our approach. To facilitate replication, we make available to the research community this prototype tool alongside the non-proprietary portion of our training data.
C1 [Abualhaija, Sallam; Arora, Chetan; Sabetzadeh, Mehrdad; Briand, Lionel C.] Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, Alzette, Luxembourg.
   [Arora, Chetan] Deakin Univ, Sch Informat Technol, Geelong, Vic, Australia.
   [Sabetzadeh, Mehrdad; Briand, Lionel C.] Univ Ottawa, Sch Elect Engn & Comp Sci, Ottawa, ON, Canada.
   [Traynor, Michael] QRA Corp, Halifax, NS, Canada.
C3 University of Luxembourg; Deakin University; University of Ottawa
RP Abualhaija, S (corresponding author), Univ Luxembourg, SnT Ctr Secur Reliabil & Trust, Alzette, Luxembourg.
EM sallam.abualhaija@uni.lu; chetan.arora@deakin.edu.au;
   m.sabetzadeh@uottawa.ca; lbriand@uottawa.ca; miket@qracorp.com
OI Arora, Chetan/0000-0003-1466-7386; Abualhaija,
   Sallam/0000-0001-6095-447X
FU QRA Corp; Luxembourg's National Research Fund [BRIDGES18/IS/12632261];
   European Research Council under the European Union's Horizon 2020
   research and innovation programme [694277]; NSERC of Canada under the
   Discovery Accelerator program; NSERC of Canada under CRC program; NSERC
   of Canada under the Discovery program
FX This project has received funding from QRA Corp, Luxembourg's National
   Research Fund under the grant BRIDGES18/IS/12632261, the European
   Research Council under the European Union's Horizon 2020 research and
   innovation programme (grant agreement No 694277), and NSERC of Canada
   under the Discovery, Discovery Accelerator and CRC programs.
CR Abualhaija S, 2019, P 27 IEEE INT REQ EN
   Aggarwal Charu C., 2018, MACHINE LEARNING TEX
   [Anonymous], 2022, SPEECH LANGUAGE PROC
   [Anonymous], 2006, Proceedings of the Fifth International Conference on Language Resources and Evaluation, LREC 2006, Genoa, Italy, May 22-28
   [Anonymous], 2011, 291482011 ISOIECIEEE
   [Anonymous], 2011, JWNL JAVA WORDNET LI
   [Anonymous], 2010, About WordNet
   [Anonymous], 2018, WEKA MULTISEARCH PAR
   Arora C, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3293454
   Arora C, 2017, IEEE T SOFTWARE ENG, V43, P918, DOI 10.1109/TSE.2016.2635134
   Arora C, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P250, DOI 10.1145/2976767.2976769
   Arora C, 2015, IEEE T SOFTWARE ENG, V41, P944, DOI 10.1109/TSE.2015.2428709
   AsposeWords, 2018, JAVA WORD DOCUMENTS
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Berry D. M., 2003, From contract drafting to software specification: Linguistic sources of ambiguity
   Berry DM, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P284, DOI 10.1109/REW.2017.25
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Caddy SL, 2016, GENOME ANNOUNCEMENTS, V4, DOI 10.1128/genomeA.00931-16
   Casamayor A, 2010, INFORM SOFTWARE TECH, V52, P436, DOI 10.1016/j.infsof.2009.10.010
   Cleland-Huang J, 2007, REQUIR ENG, V12, P103, DOI 10.1007/s00766-007-0045-1
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cook WalterAnthony., 1989, Case Grammar Theory
   Covington Michael A, 2001, Proceedings of the 39th Annual ACM Southeast Conference, P95
   Cunningham H, 2013, PLOS COMPUT BIOL, V9, DOI 10.1371/journal.pcbi.1002854
   Dalpiaz F, 2019, P 27 IEEE INT REQ EN
   Dietterich TG, 1998, NEURAL COMPUT, V10, P1895, DOI 10.1162/089976698300017197
   Eckart deCastilho R., 2014, ASS COMPUTATIONAL LI, P1, DOI DOI 10.3115/V1/W14-5201
   Emenecker J., 2010, P 32 ACM IEEE INT C, V1, P155, DOI DOI 10.1145/1806799.1806825
   Falkner A, 2019, LECT NOTES COMPUT SC, V11412, P176, DOI 10.1007/978-3-030-15538-4_13
   Fetzer A, 2010, INT J CORPUS LINGUIS, V15, P240, DOI 10.1075/ijcl.15.2.05fet
   Geller J, 1997, PARALLEL PROCESSING, V3
   Guzman E, 2017, INT REQUIR ENG CONF, P11, DOI 10.1109/RE.2017.88
   Habernal I., 2014, ArgNLP
   Habernal I, 2017, COMPUT LINGUIST, V43, P125, DOI 10.1162/COLI_a_00276
   Hirschberg J, 2015, SCIENCE, V349, P261, DOI 10.1126/science.aaa8685
   Hui Yang, 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P11, DOI 10.1109/RE.2012.6345795
   IBM DOORS, 2020, IBM RAT DOORS
   Indurkhya N, 2010, CH CRC MACH LEARN PA, pXXI
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P490, DOI 10.1109/RE.2017.82
   Kurtanovic Z, 2017, INT REQUIR ENG CONF, P61, DOI 10.1109/RE.2017.86
   Leimbach A, 2016, GENOME ANNOUNCEMENTS, V4, DOI 10.1128/genomeA.00753-16
   Li CY, 2018, J SYST SOFTWARE, V138, P108, DOI 10.1016/j.jss.2017.12.028
   Likert R, 1932, ARCH PSYCHOL, V22, P140
   Louppe G., 2014, UNDERSTANDING RANDOM
   Louridas P, 2016, IEEE SOFTWARE, V33, P110, DOI 10.1109/MS.2016.114
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Manning Christopher D., 2008, INTRO INFORM RETRIEV
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Mich L, 2004, REQUIR ENG, V9, P40, DOI 10.1007/s00766-003-0179-8
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Ott Daniel, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P50, DOI 10.1007/978-3-642-37422-7_4
   Perini A, 2013, IEEE T SOFTWARE ENG, V39, P445, DOI 10.1109/TSE.2012.52
   Petrov S, 2006, COLING/ACL 2006, VOLS 1 AND 2, PROCEEDINGS OF THE CONFERENCE, P433
   Pohl K, 2010, REQUIREMENTS ENGINEERING: FUNDAMENTALS, PRINCIPLES, AND TECHNIQUES, P1, DOI 10.1007/978-3-642-12578-2
   Pohl K., 2011, Requirements Engineering Fundamentals, V1st
   Ramshaw L. A, 1999, TEXT SPEECH LANG TEC, P157
   Riaz M, 2014, INT REQUIR ENG CONF, P183, DOI 10.1109/RE.2014.6912260
   Rodeghero P, 2017, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.2017.13
   ROLLAND C, 1992, LECT NOTES COMPUT SC, V593, P257, DOI 10.1007/BFb0035136
   Stamatatos E, 2009, J AM SOC INF SCI TEC, V60, P538, DOI 10.1002/asi.21001
   Sultanov H, 2013, S VIS LANG HUM CEN C, P52, DOI 10.1109/RE.2013.6636705
   Suthaharan S, 2016, INTEGR SER INFORM SY, V36, P123, DOI 10.1007/978-1-4899-7641-3_6
   van Lamsweerde A., 2009, REQUIREMENTS ENG SYS
   Wang B, 2017, INT CONF E BUS ENG, P255, DOI 10.1109/ICEBE.2017.48
   Wang F, 2019, IEEE T SYST MAN CY-S, P1, DOI DOI 10.1109/TSMC.2019.2896772
   Williams G, 2017, INT REQUIR ENG CONF, P1, DOI 10.1109/RE.2017.14
   Winkler J, 2016, 2016 IEEE 24TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P39, DOI [10.1109/REW.2016.16, 10.1109/REW.2016.021]
   Winkler JP, 2018, LECT NOTES COMPUT SC, V10753, P57, DOI 10.1007/978-3-319-77243-1_4
   Winkler JP, 2019, P 27 IEEE INT REQ EN
   Yang H., 2010, Proceedings of the IEEE/ACM international conference on Automated software engineering, P53
   Zhao L, 2020, BATISTA NAVARRO RT N
NR 74
TC 18
Z9 18
U1 3
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 5454
EP 5497
DI 10.1007/s10664-020-09864-1
EA SEP 2020
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4BB
UT WOS:000568974100001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Fakhoury, S
   Roy, D
   Ma, Y
   Arnaoudova, V
   Adesope, O
AF Fakhoury, Sarah
   Roy, Devjeet
   Ma, Yuzhan
   Arnaoudova, Venera
   Adesope, Olusola
TI Measuring the impact of lexical and structural inconsistencies on
   developers' cognitive load during bug localization
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Program comprehension; Cognitive load; fNIRS; Biometrics; Linguistic
   Antipatterns; Readability
AB A large portion of the cost of any software lies in the time spent by developers in understanding a program's source code before any changes can be undertaken. Measuring program comprehension is not a trivial task. In fact, different studies use self-reported and various psycho-physiological measures as proxies. In this research, we propose a methodology using functional Near Infrared Spectroscopy (fNIRS) and eye tracking devices as an objective measure of program comprehension that allows researchers to conduct studies in environments close to real world settings, at identifier level of granularity. We validate our methodology and apply it to study the impact of lexical, structural, and readability issues on developers' cognitive load during bug localization tasks. Our study involves 25 undergraduate and graduate students and 21 metrics. Results show that the existence of lexical inconsistencies in the source code significantly increases the cognitive load experienced by participants not only on identifiers involved in the inconsistencies but also throughout the entire code snippet. We did not find statistical evidence that structural inconsistencies increase the average cognitive load that participants experience, however, both types of inconsistencies result in lower performance in terms of time and success rate. Finally, we observe that self-reported task difficulty, cognitive load, and fixation duration do not correlate and appear to be measuring different aspects of task difficulty.
C1 [Fakhoury, Sarah; Roy, Devjeet; Arnaoudova, Venera] Washington State Univ, Sch EECS, SEL Lab, 355 NE Spokane St,Sloan 326, Pullman, WA 99164 USA.
   [Ma, Yuzhan] Amazon, Washington, DC USA.
   [Adesope, Olusola] Washington State Univ, Coll Educ, Pullman, WA 99164 USA.
C3 Washington State University; Amazon.com; Washington State University
RP Fakhoury, S; Arnaoudova, V (corresponding author), Washington State Univ, Sch EECS, SEL Lab, 355 NE Spokane St,Sloan 326, Pullman, WA 99164 USA.
EM sarah.fakhoury@wsu.edu; devjeet.roy@wsu.edu; yuzhanm@amazon.com;
   venera.arnaoudova@wsu.edu; olusola.adesope@wsu.edu
CR Abebe S. L., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P235, DOI 10.1109/WCRE.2012.33
   Afergan D, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P3797, DOI 10.1145/2556288.2557230
   Aghajani E, 2018, PROC IEEE INT CONF S, P25, DOI 10.1109/ICSME.2018.00012
   [Anonymous], SOFTWARE ENG ARTIFIC
   [Anonymous], 2012, 20 IEEE INT C PROGR
   Arnaoudova V, 2016, EMPIR SOFTW ENG, V21, P104, DOI 10.1007/s10664-014-9350-8
   Arnaoudova V, 2013, EUR CON SFTWR MTNCE, P187, DOI 10.1109/CSMR.2013.28
   Baker WB, 2014, BIOMED OPT EXPRESS, V5, P4053, DOI 10.1364/BOE.5.004053
   Binkley D, 2013, EMPIR SOFTW ENG, V18, P219, DOI 10.1007/s10664-012-9201-4
   Binkley D, 2009, INT C PROGRAM COMPRE, P158, DOI 10.1109/ICPC.2009.5090039
   Binkley D, 2009, SCI COMPUT PROGRAM, V74, P430, DOI 10.1016/j.scico.2009.02.006
   BIOPAC, 2018, BIOP HOM
   BIOPAC, 2018, FNIRSOFT US MAN
   Blackwell AlanF., 2006, PPIG, page, P8
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Butler S, 2009, WORK CONF REVERSE EN, P31, DOI 10.1109/WCRE.2009.50
   Castelhano J, 2019, BRAIN IMAGING BEHAV, V13, P623, DOI 10.1007/s11682-018-9885-1
   Causse M, 2017, SCI REP-UK, V7, DOI 10.1038/s41598-017-05378-x
   Deissenboeck F, 2006, SOFTWARE QUAL J, V14, P261, DOI 10.1007/s11219-006-9219-1
   DELPY DT, 1988, PHYS MED BIOL, V33, P1433, DOI 10.1088/0031-9155/33/12/008
   Duraes J, 2016, PROC INT SYMP SOFTW, P87, DOI 10.1109/ISSRE.2016.53
   Eclipse, 2018, ECLIPSE IDE
   Ehlis AC, 2014, NEUROIMAGE, V85, P478, DOI 10.1016/j.neuroimage.2013.03.067
   EyeTribe, 2018, EYE TRIBE HOMEPAGE
   Fakhoury S, 2018, EFFECT POOR SOURCE C
   Fakhoury Sarah, 2018, ONLINE REPLICATION P
   Fishburn FA, 2014, FRONT HUM NEUROSCI, V8, DOI 10.3389/fnhum.2014.00076
   Floyd B, 2017, PROC INT CONF SOFTW, P175, DOI 10.1109/ICSE.2017.24
   Fritz T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P402, DOI 10.1145/2568225.2568266
   Girouard A, 2009, LECT NOTES COMPUT SC, V5726, P440, DOI 10.1007/978-3-642-03655-2_50
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Herff C, 2014, FRONT HUM NEUROSCI, V7, DOI 10.3389/fnhum.2013.00935
   Hochstein L., 2005, PROC 10 EUROPEAN SOF, P356, DOI [DOI 10.1145/1095430.1081762, 10.1145/1081706.1081762, DOI 10.1145/1081706.1081762]
   Jaafar F, 2013, WORK CONF REVERSE EN, P351, DOI 10.1109/WCRE.2013.6671310
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Kruggel F, 1999, HUM BRAIN MAPP, V8, P259, DOI 10.1002/(SICI)1097-0193(1999)8:4<259::AID-HBM9>3.3.CO;2-B
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lee S, 2017, INT J URBAN SCI, V21, P1, DOI 10.1080/12265934.2017.1320822
   Liblit B., 2006, PPIG, P11
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Müller SC, 2016, PROC INT CONF SOFTW, P452, DOI 10.1145/2884781.2884803
   Nakagawa T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P448, DOI 10.1145/2591062.2591098
   Ooms K, 2015, J EYE MOVEMENT RES, V8, DOI 10.16910/jemr.8.1.5
   Peitek N, 2018, BRECHMANN SIMULTANEO
   Poshyvanyk D, 2006, INT C PROGRAM COMPRE, P137, DOI 10.1109/ICPC.2006.17
   Posnett D, 2011, P 8 WORKING C MINING, P73
   Rayner K, 1998, PSYCHOL BULL, V124, P372, DOI 10.1037/0033-2909.124.3.372
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Scalabrino S, 2016, 2016 IEEE 24 INT C P, P1
   Scanniello G, 2013, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.2013.30
   Shaffer TR, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P954, DOI 10.1145/2786805.2803188
   Sharafi Z, 2015, ASIA PAC SOFWR ENG, P96, DOI 10.1109/APSEC.2015.53
   Sharafi Z, 2015, INFORM SOFTWARE TECH, V67, P79, DOI 10.1016/j.infsof.2015.06.008
   Shard B., 2012, P S EYE TRACK RES AP, P381
   Siegmund J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P140, DOI 10.1145/3106237.3106268
   Siegmund J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P378, DOI 10.1145/2568225.2568252
   SOKAL ROBERT R., 1958, UNIV KANSAS SCI BULL, V38, P1409
   Solovey ET, 2015, ACM T COMPUT-HUM INT, V21, DOI 10.1145/2687926
   Takang AA, 1996, J PROGRAM LANG, V4, P143
   Whiston S.C., 1993, J CAREER DEV, V19, P175
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 63
TC 22
Z9 22
U1 1
U2 16
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2020
VL 25
IS 3
SI SI
BP 2140
EP 2178
DI 10.1007/s10664-019-09751-4
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LL7FD
UT WOS:000531720100013
DA 2024-07-18
ER

PT J
AU Lee, DN
   Lin, DY
   Bezemer, CP
   Hassan, AE
AF Lee, Daniel
   Lin, Dayi
   Bezemer, Cor-Paul
   Hassan, Ahmed E.
TI Building the perfect game - an empirical study of game modifications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Gaming; Game development; Nexus Mods
AB Prior work has shown that gamer loyalty is important for the sales of a developer's future games. Therefore, it is important for game developers to increase the longevity of their games. However, game developers cannot always meet the growing and changing needs of the gaming community, due to the often already overloaded schedules of developers. So-called modders can potentially assist game developers with addressing gamers' needs. Modders are enthusiasts who provide modifications or completely new content for a game. By supporting modders, game developers can meet the rapidly growing and varying needs of their gamer base. Modders have the potential to play a role in extending the life expectancy of a game, thereby saving game developers time and money, and leading to a better overall gaming experience for their gamer base. In this paper, we empirically study the metadata of 9,521 mods that were extracted from the Nexus Mods distribution platform. The Nexus Mods distribution platform is one of the largest mod distribution platforms for PC games at the time of our study. The goal of our paper is to provide useful insights about mods on the Nexus Mods distribution platform from a quantitative perspective, and to provide researchers a solid foundation to further explore game mods. To better understand the potential of mods to extend the longevity of a game we study their characteristics, and we study their release schedules and post-release support (in terms of bug reports) as a proxy for the willingness of the modding community to contribute to a game. We find that providing official support for mods can be beneficial for the perceived quality of the mods of a game: games for which a modding tool is provided by the original game developer have a higher median endorsement ratio than mods for games that do not have such a tool. In addition, mod users are willing to submit bug reports for a mod. However, they often fail to do this in a systematic manner using the bug reporting tool of the Nexus Mods platform, resulting in low-quality bug reports which are difficult to resolve. Our findings give the first insights into the characteristics, release schedule and post-release support of game mods. Our findings show that some games have a very active modding community, which contributes to those games through mods. Based on our findings, we recommend that game developers who desire an active modding community for their own games provide the modding community with an officially-supported modding tool. In addition, we recommend that mod distribution platforms, such as Nexus Mods, improve their bug reporting system to receive higher quality bug reports.
C1 [Lee, Daniel; Lin, Dayi; Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON, Canada.
   [Bezemer, Cor-Paul] Univ Alberta, Analyt Software Games & Repository Data ASGAARD L, Edmonton, AB, Canada.
C3 Queens University - Canada; University of Alberta
RP Bezemer, CP (corresponding author), Univ Alberta, Analyt Software Games & Repository Data ASGAARD L, Edmonton, AB, Canada.
EM dlee@cs.queensu.ca; dayi.lin@cs.queensu.ca; bezemer@ualberta.ca;
   ahmed@cs.queensu.ca
RI Lin, Dayi/AAS-8054-2020; KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Bezemer,
   Cor-Paul/0000-0002-0474-5718; Lin, Dayi/0000-0002-4034-6650
CR Ahmed F, 2017, ENTERTAIN COMPUT, V21, P1, DOI 10.1016/j.entcom.2017.04.001
   Ampatzoglou A, 2010, INFORM SOFTWARE TECH, V52, P888, DOI 10.1016/j.infsof.2010.05.004
   Anvik John, 2005, P 2005 OOPSLA WORKSH, P35
   Arakji RY, 2007, J MANAGE INFORM SYST, V24, P195, DOI 10.2753/MIS0742-1222240208
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Blackburn J, 2014, ACM T INTERNET TECHN, V13, DOI 10.1145/2602570
   BOSTAN B, 2010, GAMEON ASIA EUROSIS, P1
   Chambers C., 2005, P 5 ACM SIGCOMM C IN, P1
   Cheung GiffordK., 2014, P 1 ACM SIGCHI ANN S, P57, DOI DOI 10.1145/2658537.2658540
   Consalvo M., 2007, Cheating: Gaining advantage in videogames
   Daneva M, 2017, J SYST SOFTWARE, V134, P54, DOI 10.1016/j.jss.2017.08.009
   Dey T, 2016, CHI PLAY 2016: PROCEEDINGS OF THE ANNUAL SYMPOSIUM ON COMPUTER-HUMAN INTERACTION IN PLAY COMPANION, P133, DOI 10.1145/2968120.2987724
   GALLAGHER R, 2017, LOADING, V10, P1
   Graham T. C. N., 2006, Interactive Systems. Design, Specification, and Verification. 13th International Workshop, DSVIS 2006. Revised Papers (Lecture Notes in Computer Science Vol. 4323), P248
   Guana V, 2015, 2015 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON GAMES AND SOFTWARE ENGINEERING, P15, DOI 10.1109/GAS.2015.11
   Hansen M., 2018, Fallout 76 is already being fixed by modders
   HASSAN S, 2018, IEEE T SOFTWARE ENG
   Hassan S, 2017, EMPIR SOFTW ENG, V22, P505, DOI 10.1007/s10664-016-9435-7
   Bécares JH, 2017, ENTERTAIN COMPUT, V18, P79, DOI 10.1016/j.entcom.2016.08.002
   HIRVONEN E, 2017, THESIS U JYVASKYLA
   HRUSKA J, 2016, COMP SKYRIM ENHANCED
   JEPPESEN LB, 2004, TECHNICAL REPORT
   Kanode CM, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P260, DOI 10.1109/ITNG.2009.74
   Kasurinen J, 2017, INT WORKS EMERG TREN, P15, DOI 10.1109/WETSoM.2017.3
   Kohler B., 2012, Proceedings 2012 2nd International Workshop on Games and Software Engineering: Realizing User Engagement with Game Engineering Techniques (GAS 2012), P42, DOI 10.1109/GAS.2012.6225926
   Koleva Boriana., 2015, Proceedings of the 2015 Annual Symposium on Computer-Human Interaction in Play, P141, DOI DOI 10.1145/2793107.2793131
   Laukkanen T., 2005, Modding Scenes-Introduction to user-created content in computer gaming
   LEE D, 2019, SUPPLEMENTARY MAT OU
   Lewis C.L., 2011, PUBLIC OPINION CLASS, P1
   Lewis PG, 2010, NATIONAL POLITICS AND EUROPEAN INTEGRATION: FROM THE CONSTITUTION TO THE LISBON TREATY, P108
   Lin DY, 2019, EMPIR SOFTW ENG, V24, P170, DOI 10.1007/s10664-018-9627-4
   Lin DY, 2018, EMPIR SOFTW ENG, V23, P771, DOI 10.1007/s10664-017-9531-3
   Lin D, 2017, EMPIR SOFTW ENG, V22, P2095, DOI 10.1007/s10664-016-9480-2
   Lin Dayi, 2019, Empirical Software Engineering, V28, P1
   Long D. Feng, 2003, Handbook of psychology, P635, DOI [10.1002/0471264385.wei0225, DOI 10.1002/0471264385.WEI0225]
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1346, DOI 10.1007/s10664-015-9388-2
   Murphy-Hill E, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1, DOI 10.1145/2568225.2568226
   Nieborg DB, 2008, EUR J CULT STUD, V11, P177, DOI 10.1177/1367549407088331
   Pascarella L, 2018, IEEE WORK CONF MIN S, P392, DOI [10.1145/3196398.3196423, 10.1145/3196398.3196418]
   Peterson S., 2014, Gamer loyalty plays into profits
   Politowski C, 2016, 2016 IEEE/ACM 5TH INTERNATIONAL WORKSHOP ON GAMES AND SOFTWARE ENGINEERING (GAS), P22, DOI [10.1145/2896958.2896960, 10.1109/GAS.2016.012]
   Poretski L, 2017, CSCW'17: PROCEEDINGS OF THE 2017 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING, P480, DOI 10.1145/2998181.2998301
   Postigo Hector., 2007, GAMES CULT, V2, P300
   Ramadan R., 2016, Does game modding require programming?
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Scacchi Walt, 2010, First Monday, V15, DOI 10.5210/fm.v15i5.2965
   Scacchi W, 2015, C FDN DIG GAM
   Scacchi W., 2011, Proceedings of the 1st international workshop on Games and software engineering, P5, DOI DOI 10.1145/1984674.1984677
   Scacchi W, 2011, IFIP ADV INF COMM TE, V365, P62
   Sifa R., 2014, 2014 IEEE Conference on Computational Intelligence and Games, P1, DOI [10.1109/CIG.2014.6932906, DOI 10.1109/CIG.2014.6932906]
   SOTAMAA O, 2003, NEW MEDIA, P1
   Sotamaa O, 2010, GAMES CULT, V5, P239, DOI 10.1177/1555412009359765
   *STEAMCH, 2018, DOT 2 STEAM CHARTS
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Washburn M, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P280, DOI 10.1145/2889160.2889253
   Wijman T., 2018, Mobile revenues account for more than 50% of the global games market as it reaches 37.9 billion in 2018
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   2017, ESSENTIAL SKYRIM MOD
   2019, WITCHER 3 MODDING TO
   2016, WHY ARE BETHESDA GAM
   2017, LIST PERFORMANCE MOD
NR 62
TC 9
Z9 9
U1 2
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2020
VL 25
IS 4
BP 2485
EP 2518
DI 10.1007/s10664-019-09783-w
EA MAR 2020
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MD8CQ
UT WOS:000521860700001
DA 2024-07-18
ER

PT J
AU Wang, X
   Chen, CY
   Xing, ZC
AF Wang, Xu
   Chen, Chunyang
   Xing, Zhenchang
TI Domain-specific machine translation with recurrent neural network for
   software localization
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software localization; Neural machine translation; Mobile apps
AB Software localization is the process of adapting a software product to the linguistic, cultural and technical requirements of a target market. It allows software companies to access foreign markets that would be otherwise difficult to penetrate. Many studies have been carried out to locate need-to-translate strings in software and adapt UI layout after text translation in the new language. However, no work has been done on the most important and time-consuming step of software localization process, i.e., the translation of software text. Due to some unique characteristics of software text, for example, application-specific meanings, context-sensitive translation, domain-specific rare words, general machine translation tools such as Google Translate cannot properly address linguistic and technical nuance in translating software text for software localization. In this paper, we propose a neural-network based translation model specifically designed and trained for mobile application text translation. We collect large-scale human-translated bilingual sentence pairs inside different Android applications, which are crawled from Google Play store. We customize the original RNN encoder-decoder neural machine translation model by adding categorical information addressing the domain-specific rare word problem which is common phenomenon in software text. We evaluate our approach in translating the text of testing Android applications by both BLEU score and exact match rate. The results show that our method outperforms the general machine translation tool, Google Translate, and generates more acceptable translation for software localization with less needs for human revision. Our approach is language independent, and we show the generality of our approach between English and the other five official languages used in United Nation (UN).
C1 [Wang, Xu; Xing, Zhenchang] Australian Natl Univ, Coll Engn & Comp Sci, Canberra, ACT, Australia.
   [Chen, Chunyang] Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
C3 Australian National University; Monash University
RP Chen, CY (corresponding author), Monash Univ, Fac Informat Technol, Clayton, Vic 3800, Australia.
EM u5833088@anu.edu.au; chunyang.chen@monash.edu; zhenchang.xing@anu.edu.au
OI Chen, Chunyang/0000-0003-2011-9618
CR Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Nguyen AT, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P544, DOI 10.1145/2591062.2591072
   Nguyen AT, 2015, IEEE INT CONF AUTOM, P585, DOI 10.1109/ASE.2015.74
   [Anonymous], AUTOMATIC COMMENT GE
   [Anonymous], P 10 ACM IEEE INT S
   [Anonymous], 2013, P 6 WORKSHOP BUILDIN
   [Anonymous], DETECTING LOCALIZING
   [Anonymous], 2017, ARXIV170407734
   [Anonymous], TRANS LOC PLATF TRAN
   [Anonymous], 2012, P 16 ANN EUR ASS MAC
   [Anonymous], 2004, COLING 2004
   [Anonymous], APKTOOL TOOL REVERSE
   [Anonymous], 2019, IEEE T SOFTW ENG
   [Anonymous], 2014, INT C MACH LEARN ICM
   [Anonymous], EMPIRICAL STUDY STAT
   [Anonymous], 2018, 2018 IEEE INT C, DOI DOI 10.1109/SmartIoT.2018.00011
   [Anonymous], ARXIV160508535
   [Anonymous], 31 IEEE ACM INT C AU
   [Anonymous], SMARTL GLOB CONT TRA
   [Anonymous], 2019 IEEE 26 INT C S
   [Anonymous], SOFTW TRANSL MAN
   [Anonymous], ANAL GOOGLE TRANSLAT
   [Anonymous], 2014, ARXIV14108206
   [Anonymous], 2010, INTERSPEECH, DOI DOI 10.1016/J.CSL.2010.08.008
   [Anonymous], 2013, AD VANCES NEURAL INF
   Bengio Y., 2014, TECHNICAL REPORT
   Borgelt C, 2012, WIRES DATA MIN KNOWL, V2, P437, DOI 10.1002/widm.1074
   Burukhin A, 2007, US Patent App, Patent No. [11/869,083, 11869083]
   Chen CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P665, DOI 10.1145/3180155.3180222
   Chen CY, 2017, PROC INT CONF SOFTW, P450, DOI 10.1109/ICSE.2017.48
   Chen CY, 2016, PROC IEEE INT CONF S, P356, DOI 10.1109/ICSME.2016.17
   Chen CY, 2016, IEEE INT CONF AUTOM, P834, DOI 10.1145/2970276.2970290
   Chen CY, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P338, DOI 10.1109/SANER.2016.21
   Chung Tagyoung., 2009, P 2009 C EMPIRICAL M, P718, DOI [DOI 10.3115/1699571.1699606, 10.3115/1699571.1699606]
   Chunyang Chen, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274302
   Chunyang Chen, 2017, Proceedings of the ACM on Human-Computer Interaction, V1, DOI 10.1145/3134667
   Fitzpatrick C, 2013, US Patent, Patent No. [8,612,893, 8612893]
   Fraser A, 2007, COMPUT LINGUIST, V33, P293, DOI 10.1162/coli.2007.33.3.293
   Graves A, 2013, INT CONF ACOUST SPEE, P6645, DOI 10.1109/ICASSP.2013.6638947
   Green ML, 2014, PROCEEDINGS OF THE INTERNATIONAL CONGRESS OF MATHEMATICIANS (ICM 2014), VOL I, P114
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Huang Y, 2018, IEEE INT CONF AUTOM, P214, DOI 10.1145/3238147.3238208
   Koehn Philipp, 2003, HLT NAACL 2003 HUMAN, P48
   Mikolov T., 2011, 2011 IEEE Workshop on Automatic Speech Recognition & Understanding (ASRU), P196, DOI 10.1109/ASRU.2011.6163930
   Mikolov T, 2013, ICLR WORKSHOP POSTER
   Nguyen A.T., 2013, P 2013 9 JOINT M FDN, P651
   O'Brien M, 1998, LABOUR-TRAVAIL, P115
   Oda Y, 2015, IEEE INT CONF AUTOM, P574, DOI 10.1109/ASE.2015.36
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Ren Z., 2009, Proceedings of the Workshop on Multiword Expressions: Identification, Interpretation, Disambiguation and Applications, P47
   RICE WR, 1989, EVOLUTION, V43, P223, DOI 10.1111/j.1558-5646.1989.tb04220.x
   Rich DP, 2011, US Patent, Patent No. [7,987,087, 7987087]
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Sutskever I, 2014, ADV NEUR IN, V27
   Turian J, 2010, ACL 2010: 48TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, P384
   Wang X, 2010, PROCEEDINGS OF THE 6TH EURO-ASIA CONFERENCE ON ENVIRONMENT AND CSR: TECHNOLOGICAL INNOVATION AND MANAGEMENT SCIENCE SESSION, PT I, P87
   WERBOS PJ, 1990, P IEEE, V78, P1550, DOI 10.1109/5.58337
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   Wu H., 2008, P 22 INT C COMPUTATI, P993
   Wu Yonghui, 2016, P C ASS MACH TRANSL
   Xia X, 2013, IEEE INT C ENG COMP, P222, DOI 10.1109/ICECCS.2013.40
   Zens R, 2002, LECT NOTES ARTIF INT, V2479, P18
   Zhang J., 2013, P 51 ANN M ASS COMP, P1425
NR 64
TC 36
Z9 40
U1 1
U2 19
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3514
EP 3545
DI 10.1007/s10664-019-09702-z
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JT6XW
UT WOS:000501131100009
DA 2024-07-18
ER

PT J
AU Coppola, R
   Morisio, M
   Torchiano, M
   Ardito, L
AF Coppola, Riccardo
   Morisio, Maurizio
   Torchiano, Marco
   Ardito, Luca
TI Scripted GUI testing of Android open-source apps: evolution of test code
   and fragility causes
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mobile development; Automated software testing; GUI testing; Software
   evolution; Software maintenance
AB Evidence from empirical studies suggests that mobile applications are not thoroughly tested as their desktop counterparts. In particular, GUI testing is generally limited. Like web-based applications, mobile apps suffer from GUI testing fragility, i.e., GUI test classes failing or needing interventions because of modifications in the AUT or in its GUI arrangement and definition. The objective of our study is to examine the diffusion of test classes created with a set of popular GUI Automation Frameworks for Android apps, the amount of changes required to keep test classes up to date, and the amount of code churn in existing test suites, along with the underlying modifications in the AUT that caused such modifications. We defined 12 metrics to characterize the evolution of test classes and test methods, and a taxonomy of 28 possible causes for changes to test code. To perform our experiments, we selected six widely used open-source GUI Automation Frameworks for Android apps. We evaluated the diffusion of the tools by mining the GitHub repositories featuring them, and computed our set of metrics on the projects. Applying the Grounded Theory technique, we then manually analyzed diff files of test classes written with the selected tools, to build from the ground up a taxonomy of causes for modifications of test code. We found that none of the considered GUI automation frameworks achieved a major diffusion among open-source Android projects available on GitHub. For projects featuring tests created with the selected frameworks, we found that test suites had to be modified often - specifically, about 8% of developers' modified LOCs belonged to test code and that a relevant portion (around 50% on average) of those modifications were induced by modifications in GUI definition and arrangement. Test code written with GUI automation fromeworks proved to need significant interventions during the lifespan of a typical Android open-source project. This can be seen as an obstacle for developers to adopt this kind of test automation. The evaluations and measurements of the maintainance needed by test code wrtitten with GUI automation frameworks, and the taxonomy of modification causes, can serve as a benchmark for developers, and the basis for the formulation of actionable guidelines and the development of automated tools to help mitigating the issue.
C1 [Coppola, Riccardo; Morisio, Maurizio; Torchiano, Marco; Ardito, Luca] Politecn Torino, Dept Comp & Automat Engn, Corso Duca Abruzzi 24, Turin, Italy.
C3 Polytechnic University of Turin
RP Coppola, R (corresponding author), Politecn Torino, Dept Comp & Automat Engn, Corso Duca Abruzzi 24, Turin, Italy.
EM riccardo.coppola@polito.it; maurizio.morisio@polito.it;
   marco.torchiano@polito.it; luca.ardito@polito.it
RI Ardito, Luca/AAE-2757-2019; Coppola, Riccardo/Y-7159-2019
OI Coppola, Riccardo/0000-0003-4601-7425; Torchiano,
   Marco/0000-0001-5328-368X; ARDITO, LUCA/0000-0002-0501-7886
CR Alégroth E, 2015, EMPIR SOFTW ENG, V20, P694, DOI 10.1007/s10664-013-9293-5
   Amalfitano D, 2015, IEEE SOFTWARE, V32, P53, DOI 10.1109/MS.2014.55
   Amalfitano D, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P650, DOI 10.1109/ICSM.2012.6405345
   [Anonymous], 2014, International_Journal_of_Current_Engineering_and_Technology
   Charmaz K., 2006, CONSTRUCTING GROUNDE, DOI DOI 10.7748/NR.13.4.84.S4
   Choi W, 2013, ACM SIGPLAN NOTICES, V48, P623, DOI [10.1145/2544173.2509552, 10.1145/2509136.2509552]
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Coppola R, 2017, P 13 INT C PRED MOD, P22, DOI [10.1145/3127005.3127008, DOI 10.1145/3127005.3127008]
   Coppola R, 2018, P 1 IEEE WORKSH NEXT
   Coppola R., 2016, Proceedings of the 2Nd International Workshop on User Interface Test Automation. Coll.  INTUITEST 2016, P11
   Coppola R, 2019, IEEE T RELIAB, V68, P67, DOI 10.1109/TR.2018.2869227
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Cruz L, 2018, ATTENTION MOBILE SOF
   Dong XJ, 2013, IEEE IMAGE PROC, P250, DOI 10.1109/ICIP.2013.6738052
   Gao J, 2014, COMPUTER, V47, P46, DOI 10.1109/MC.2013.445
   Gao ZB, 2016, IEEE T SOFTWARE ENG, V42, P170, DOI 10.1109/TSE.2015.2454510
   Garousi V, 2016, IEEE SOFTWARE, V33, P68, DOI 10.1109/MS.2016.30
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Gomez L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P72, DOI 10.1109/ICSE.2013.6606553
   Grechanik M, 2009, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2009.5070540
   Grgurina R., 2011, 2011 Proceedings of 34th International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO 20111), P1693
   Jensen C S, 2013, P 2013 INT S SOFTW T, P67, DOI [10.1145/2483760.2483777, DOI 10.1145/2483760.2483777]
   Kaasila J., 2012, Proceedings of the 11th International Conference on Mobile and Ubiquitous Multimedia p, P28
   Kaur A., 2015, INT J ADV RES COMPUT, V4, P503, DOI [10.17148/IJARCCE.2015.410114, DOI 10.17148/IJARCCE.2015.410114]
   Knych TW, 2014, PROCEEDINGS OF THE 1ST INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2014), P37, DOI 10.1145/2593902.2593910
   Kochhar P. S., 2015, ICST'15, P1
   Kropp M, 2010, TESTING SOFTWARE SYS, P67
   Leotta M, 2014, LECT NOTES COMPUT SC, V8541, P322, DOI 10.1007/978-3-319-08245-5_19
   Leotta M, 2013, WORK CONF REVERSE EN, P272, DOI 10.1109/WCRE.2013.6671302
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSME.2017.27
   Linares-Vásquez M, 2017, PROC IEEE INT CONF S, P613, DOI 10.1109/ICSME.2017.47
   Linares-Vásquez M, 2015, PROC IEEE INT CONF S, P352, DOI 10.1109/ICSM.2015.7332486
   Linares-Vásquez M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P763, DOI 10.1109/ICSE.2015.242
   Liu CH, 2014, 2014 INTERNATIONAL SYMPOSIUM ON COMPUTER, CONSUMER AND CONTROL (IS3C 2014), P1129, DOI 10.1109/IS3C.2014.293
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Memon AM, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1416563.1416564
   Milano Diego., 2011, Android Application Testing Guide
   Mirzaei Nariman, 2012, ACM SIGSOFT Software Engineering Notes, V37, P1, DOI DOI 10.1145/2382756.2382798
   Moran K, 2017, PROC IEEE ACM INT C, P15, DOI 10.1109/ICSE-C.2017.16
   Muccini H., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P29, DOI 10.1109/IWAST.2012.6228987
   Pinto LeandroSales., 2012, P ACM SIGSOFT 20 INT, p33:1
   Pun K, 2014, 2014 15TH INTERNATIONAL CONFERENCE ON ELECTRONIC PACKAGING TECHNOLOGY (ICEPT), P1, DOI 10.1109/ICEPT.2014.6922552
   Ralph P, 2018, IEEE T SOFTW ENG
   Scott TJ, 2012, SIGDOC '12: PROCEEDINGS OF THE 30TH ACM INTERNATIONAL CONFERENCE ON DESIGN OF COMMUNICATION, P197
   Sedano T, 2017, PROC INT CONF SOFTW, P130, DOI 10.1109/ICSE.2017.20
   Singh Shiwangi., 2014, International Journal of Current Engineering and Technology (IJCET), V4, P3627
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   TAN M. X., 2016, INFORM TECHNOLOGY, V5, P035
   Tang J, 2015, IEEE ICC, P1, DOI 10.1109/ICC.2015.7248289
   Yusifoglu VG, 2015, INFORM SOFTWARE TECH, V58, P123, DOI 10.1016/j.infsof.2014.06.009
   Zadgaonkar Hrushikesh, 2013, Robotium automated testing for android
   Zhauniarovich Y, 2015, PROCEEDINGS 10TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY ARES 2015, P501, DOI 10.1109/ARES.2015.70
NR 53
TC 14
Z9 15
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2019
VL 24
IS 5
SI SI
BP 3205
EP 3248
DI 10.1007/s10664-019-09722-9
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IS1CL
UT WOS:000481889700013
DA 2024-07-18
ER

PT J
AU Baltes, S
   Diehl, S
AF Baltes, Sebastian
   Diehl, Stephan
TI Usage and attribution of Stack Overflow code snippets in GitHub projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code snippets; Licensing; Stack Overflow; GitHub; Online survey; Mining
   software repositories
ID REUSE
AB Stack Overflow (SO) is the most popular question-and-answer website for software developers, providing a large amount of copyable code snippets. Using those snippets raises maintenance and legal issues. SO's license (CC BY-SA 3.0) requires attribution, i.e., referencing the original question or answer, and requires derived work to adopt a compatible license. While there is a heated debate on SO's license model for code snippets and the required attribution, little is known about the extent to which snippets are copied from SO without proper attribution. We present results of a large-scale empirical study analyzing the usage and attribution of non-trivial Java code snippets from SO answers in public GitHub (GH) projects. We followed three different approaches to triangulate an estimate for the ratio of unattributed usages and conducted two online surveys with software developers to complement our results. For the different sets of projects that we analyzed, the ratio of projects containing files with a reference to SO varied between 3.3% and 11.9%. We found that at most 1.8% of all analyzed repositories containing code from SO used the code in a way compatible with CC BY-SA 3.0. Moreover, we estimate that at most a quarter of the copied code snippets from SO are attributed as required. Of the surveyed developers, almost one half admitted copying code from SO without attribution and about two thirds were not aware of the license of SO code snippets and its implications.
C1 [Baltes, Sebastian; Diehl, Stephan] Univ Trier, Software Engn Grp, Trier, Germany.
C3 Universitat Trier
RP Baltes, S (corresponding author), Univ Trier, Software Engn Grp, Trier, Germany.
EM research@sbaltes.com; diehl@uni-trier.de
OI Diehl, Stephan/0000-0002-4287-7447
CR Abdalkareem R, 2017, INFORM SOFTWARE TECH, V88, P148, DOI 10.1016/j.infsof.2017.04.005
   Acar Y, 2016, P IEEE S SECUR PRIV, P289, DOI 10.1109/SP.2016.25
   Achte Z, 2016, AZ I 8 O 294 15
   Agresti A., 2007, INTRO CATEGORICAL DA, V2nd ed
   Aioobe, 2010, CONV BYT SIZ HUM REA
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   Almeida DA, 2018, EMPIR SOFTW ENG, V11, P730
   An L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P283, DOI 10.1109/SANER.2017.7884629
   [Anonymous], 2014, INT C COMP SCI SOFTW
   [Anonymous], 2018, NEW 2018 UPD OUR TER
   Baltes S, 2018, USAGE ATTRIBUTION ST, DOI [10.5281/zenodo.1148069, DOI 10.5281/ZEN0D0.1148069]
   Baltes S, 2018, PROCEEDINGS OF THE 4TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN'18), P1, DOI 10.1145/3278142.3278143
   Bartlett J E, 2001, INFORM TECHNOLOGY LE, V19, P1, DOI DOI 10.1109/LPT.2009.2020494
   Bosu A, 2013, IEEE WORK CONF MIN S, P89, DOI 10.1109/MSR.2013.6624013
   Brandt J, 2010, CHI2010: PROCEEDINGS OF THE 28TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P513
   Burrows S, 2007, SOFTWARE PRACT EXPER, V37, P151, DOI 10.1002/spe.750
   Campbell BA, 2017, PROC IEEE INT CONF S, P628, DOI 10.1109/ICSME.2017.56
   Cavaretta MJ, 2015, OPEN SOURCE ISSUES M
   CHEN HY, 2013, 28 ANN ACM S APPL CO, P1019
   Cochran W.G., 1977, Sampling techniques, V3rd ed.
   Creative Commons Corporation, 2007, ATTR SHAREALIKE 3 0
   Creative Commons Corporation, 2017, COMP LIC
   Creative Commons Corporation, 2017, FREQ ASK QUEST
   Duijn M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P410, DOI 10.1109/MSR.2015.51
   Engelfriet A, 2016, WHAT IS LICENSE STAT
   Fazunenko D, 2016, GET RID HUMANREADABL
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   German DM, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P81, DOI 10.1109/MSR.2009.5069483
   German DM, 2009, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.2009.5070520
   Gharehyazie M, 2017, IEEE WORK CONF MIN S, P291, DOI 10.1109/MSR.2017.15
   GitHub Inc, 2018, STAT OCT 2017
   GitHub Inc, 2017, CHOOSEALICENSE COM N
   GitHub Inc, 2017, GITHUB DEV API
   Google Cloud Platform, 2017, STACK OV DAT
   Google Cloud Platform, 2017, GITHUB DAT
   Gousios G, 2017, GHTORRENT GOOGLE CLO
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Lancaster T., 2004, J COMP SCI ED, V14, P2, DOI DOI 10.1080/08993400412331363843
   Lopes CV, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133908
   Martins V.T., 2014, P 3 S LANG APPL TECH, VVolume 38, P143, DOI [DOI 10.4230/OASICS.SLATE.2014.143, 10.4230/OASIcs.SLATE.2014.143]
   Meloca R, 2018, 15 INT C MIN SOFTW R, P1
   Morrison BR, 2013, RES SECOND LANG LEAR, P69
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   NEDERHOF AJ, 1985, EUR J SOC PSYCHOL, V15, P263, DOI 10.1002/ejsp.2420150303
   PMD, 2016, FIND DUPL COD
   Ponzanelli L, 2014, INT CONF QUAL SOFTW, P343, DOI 10.1109/QSIC.2014.27
   Ponzanelli L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1295, DOI 10.1109/ICSE.2013.6606701
   Poteat H, 2016, GITHUBS 2015 TRANSPA
   Prechelt L, 2002, J UNIVERS COMPUT SCI, V8, P1016
   Ragkhitwetsagul C, 2016, PROC IEEE INT CONF S, P626, DOI 10.1109/ICSME.2016.18
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Scalabrino S, 2017, IEEE INT CONF AUTOM, P417, DOI 10.1109/ASE.2017.8115654
   Schenk Dennis., 2013, Proceedings of the 2013 International Workshop on Social Software Engineering, P21, DOI DOI 10.1145/2501535.2501540
   Silvestri G., 2015, KDWEB, V1489, P41
   Sojer M, 2011, COMMUN ACM, V54, P74, DOI 10.1145/2043174.2043193
   St Laurent A. M., 2004, Understanding Open Source and Free Software Licensing
   Stack Exchange Inc, 2016, STACK EXCH API V2 2
   Stack Exchange Inc, 2018, STACK EXCH NETW TERM
   Stack Exchange Inc, 2015, STACK EXCH DAT DUMP
   Stack Exchange Inc, 2017, STACK EXCH DAT DUMP
   Stack Exchange Meta, 2009, WHAT IS SOURC COD LI
   Stack Exchange Meta, 2013, DO I HAV WORR COP IS
   Stack Exchange Meta, 2016, NEW COD LIC MIT THIS
   Stack Exchange Meta, 2015, CAN WE GET SOM EXPL
   Subramanian S, 2013, IEEE WORK CONF MIN S, P85, DOI 10.1109/MSR.2013.6624012
   TIOBE software BV, 2017, TIOBE IND FEBR 2017
   Treude C, 2017, PROC IEEE INT CONF S, P509, DOI 10.1109/ICSME.2017.24
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Vasilescu B, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P188, DOI 10.1109/SocialCom.2013.35
   Vasilescu B, 2012, PROCEEDINGS OF THE 2012 ASE INTERNATIONAL CONFERENCE ON SOCIAL INFORMATICS (SOCIALINFORMATICS 2012), P332, DOI 10.1109/SocialInformatics.2012.81
   Vendome C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P772, DOI 10.1109/ICSE.2015.245
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Yang D, 2017, IEEE WORK CONF MIN S, P280, DOI 10.1109/MSR.2017.13
   Yang D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P391, DOI [10.1109/MSR.2016.047, 10.1145/2901739.2901767]
   Yang J, 2014, P 25 ACM C HYP SOC M, P179
   Zagalsky A., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P38, DOI 10.1109/RSSE.2012.6233407
   Zhang T, 2018, 40 INT C SOFTW ENG I, P1
NR 81
TC 42
Z9 47
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2019
VL 24
IS 3
BP 1259
EP 1295
DI 10.1007/s10664-018-9650-5
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ID9YT
UT WOS:000472043800007
OA hybrid
DA 2024-07-18
ER

PT J
AU Hu, WH
   Carver, JC
   Anu, V
   Walia, GS
   Bradshaw, GL
AF Hu, Wenhua
   Carver, Jeffrey C.
   Anu, Vaibhav
   Walia, Gursimran S.
   Bradshaw, Gary L.
TI Using human error information for error prevention
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Human errors; Software requirements; Error prevention; Fault prevention;
   Empirical study; Human factors
ID CLASSIFICATION
AB Developing error-free software requirements is of critical importance to the success of a software project. Problems that occur during requirements collection and specification, if not fixed early, are costly to fix later. Therefore, it is important to develop techniques that help requirements engineers detect and prevent requirements problems. As a human-centric activity, requirements engineering can be influenced by psychological research about human errors, which are the failings of human cognition during the process of planning and executinge a task. We have employed human error research to describe the types of problems that occur during requirements engineering. The goals of this research are: (1) to evaluate whether understanding human errors contributes to the prevention of errors and concomitant faults during requirements engineering and (2) to identify error prevention techniques used in industrial practice. We conducted a controlled classroom experiment to evaluate the benefits that knowledge of errors has on error prevention. We then analyzed data from two industrial surveys to identify specific prevention and mitigation approaches employed in practice. The classroom study showed that the better a requirements engineer understands human errors, the fewer errors and concomitant faults that engineer makes when developing a new requirements document. Furthermore, different types of Human Errors have different impacts on fault prevention. The industry study results identified prevention and mitigation mechanisms for each error type. Human error information is useful for fault prevention during requirements engineering. There are practices that requirements engineers can employ to prevent or mitigate specific human errors.
C1 [Hu, Wenhua] Kennesaw State Univ, Dept Software Engn & Game Dev, Marietta, GA USA.
   [Carver, Jeffrey C.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
   [Anu, Vaibhav; Walia, Gursimran S.] North Dakota State Univ, Dept Comp Sci, Fargo, ND 58105 USA.
   [Bradshaw, Gary L.] Mississippi State Univ, Dept Psychol, Starkville, MS USA.
C3 University System of Georgia; Kennesaw State University; University of
   Alabama System; University of Alabama Tuscaloosa; North Dakota State
   University Fargo; Mississippi State University
RP Carver, JC (corresponding author), Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
EM whu4@kennesaw.edu; carver@cs.ua.edu; vaibhavanu.x@gmail.com;
   gursimran.walia@ndsu.edu; glb2@psychology.msstate.edu
RI Carver, Jeffrey/AAM-8202-2020; Anu, Vaibhav/Y-6008-2019; Carver,
   Jeffrey/AFP-1987-2022
OI Carver, Jeffrey/0000-0002-7824-9151; Anu, Vaibhav/0000-0001-8104-4942;
   Carver, Jeffrey/0000-0002-7824-9151
FU NSF awards [1421006, 1423279]; Direct For Computer & Info Scie & Enginr;
   Division of Computing and Communication Foundations [1421006] Funding
   Source: National Science Foundation; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1423279] Funding Source: National Science Foundation
FX This work was supported by NSF awards 1421006 and 1423279.
CR [Anonymous], 1995, COCKPIT RESOURCE MAN
   [Anonymous], 247652017 IEEE
   [Anonymous], P 10 ACM IEEE INT S
   [Anonymous], 2005, DEVELOPING METHODOLO
   [Anonymous], P NAT C REC RES TREN
   [Anonymous], 2009 2 INT C COMP CO
   [Anonymous], INT J ADV INTELL SYS
   [Anonymous], NDSUCSTR16001
   Anthony D., 1987, AIAA Guidance, Navigation and Control Conference, Monterey, CA, Technical Papers, American Institute of Aeronautics and Astronautics, New York, V2, P1579
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Card DN, 1998, IEEE SOFTWARE, V15, P56, DOI 10.1109/52.646883
   Chen JC, 2009, J SYST SOFTWARE, V82, P981, DOI 10.1016/j.jss.2008.12.036
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Diller T, 2014, AM J MED QUAL, V29, P181, DOI 10.1177/1062860613491623
   Ericsson K. A., 1993, PROTOCOL ANAL VERBAL
   Femmer H., 2014, PROC 1 INT WORKSHOP, P10
   Fernández DM, 2017, EMPIR SOFTW ENG, V22, P2298, DOI 10.1007/s10664-016-9451-7
   Grady RB, 1996, HEWLETT-PACKARD J, V47, P15
   Graham M., 2005, Software defect prevention using orthogonal defect prevention
   Hamill M, 2009, IEEE T SOFTWARE ENG, V35, P484, DOI 10.1109/TSE.2009.3
   Hu WH, 2017, LECT NOTES COMPUT SC, V10153, P61, DOI 10.1007/978-3-319-54045-0_5
   Kamsties E., 2001, P 1 WORKSH INSP SOFT
   Kumaresh S., 2012, Proceedings of the 2012 International Conference on Recent Advances in Computing and Software Systems (RACSS), P293, DOI 10.1109/RACSS.2012.6212683
   Lanubile F, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P114, DOI 10.1109/METRIC.1998.731236
   Leszak M., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P428, DOI 10.1109/ICSE.2000.870433
   MAYS RG, 1990, IBM SYST J, V29, P4, DOI 10.1147/sj.291.0004
   Nolan TW, 2000, BMJ-BRIT MED J, V320, P771, DOI 10.1136/bmj.320.7237.771
   Pooley R, 2002, IEEE SOFTWARE, V19, P52, DOI 10.1109/52.976941
   REASON J, 1990, ERGONOMICS, V33, P1315, DOI 10.1080/00140139008925335
   Reason J., 1991, HUMAN ERROR
   Reason J.T., 2008, The human contribution: Unsafe acts, accidents, and heroic recoveries
   Saha Goutam Kumar, 2006, SOFTWARE BASED FAULT, DOI [10.1145/1149633.1147995, DOI 10.1145/1149633.1147995]
   Shappell S.A., 2001, Human Factors and Aerospace Safety, V1, P59, DOI DOI 10.1177/1062860613491623
   Sommerville I., 2010, SOFTWARE ENG
   Walia Gursimran S., 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P81, DOI 10.1109/ISSRE.2010.41
   Walia GS, 2013, EMPIR SOFTW ENG, V18, P625, DOI 10.1007/s10664-012-9202-3
   Walia GS, 2009, INFORM SOFTWARE TECH, V51, P1087, DOI 10.1016/j.infsof.2009.01.004
   Wickens C.D., 2015, ENG PSYCHOL HUMAN PE, DOI DOI 10.4324/9781315665177
   Zhang JJ, 2004, J BIOMED INFORM, V37, P193, DOI 10.1016/j.jbi.2004.04.004
NR 39
TC 14
Z9 15
U1 5
U2 36
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2018
VL 23
IS 6
BP 3768
EP 3800
DI 10.1007/s10664-018-9623-8
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC1WE
UT WOS:000451593200019
DA 2024-07-18
ER

PT J
AU Motwani, M
   Sankaranarayanan, S
   Just, R
   Brun, Y
AF Motwani, Manish
   Sankaranarayanan, Sandhya
   Just, Rene
   Brun, Yuriy
TI Do automated program repair techniques repair hard and important bugs?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automated program repair; Repairability
AB Existing evaluations of automated repair techniques focus on the fraction of the defects for which the technique can produce a patch, the time needed to produce patches, and how well patches generalize to the intended specification. However, these evaluations have not focused on the applicability of repair techniques and the characteristics of the defects that these techniques can repair. Questions such as "Can automated repair techniques repair defects that are hard for developers to repair?" and "Are automated repair techniques less likely to repair defects that involve loops?" have not, as of yet, been answered. To address such questions, we annotate two large benchmarks totaling 409 C and Java defects in real-world software, ranging from 22K to 2.8M lines of code, with measures of the defect's importance, the developer-written patch's complexity, and the quality of the test suite. We then analyze relationships between these measures and the ability to produce patches for the defects of seven automated repair techniques -AE, GenProg, Kali, Nopol, Prophet, SPR, and TrpAutoRepair. We find that automated repair techniques are less likely to produce patches for defects that required developers to write a lot of code or edit many files, or that have many tests relevant to the defect. Java techniques are more likely to produce patches for high-priority defects. Neither the time it took developers to fix a defect nor the test suite's coverage correlate with the automated repair techniques' ability to produce patches. Finally, automated repair techniques are less capable of fixing defects that require developers to add loops and new function calls, or to change method signatures. These findings identify strengths and shortcomings of the state-of-the-art of automated program repair along new dimensions. The presented methodology can drive research toward improving the applicability of automated repair techniques to hard and important bugs.
C1 [Motwani, Manish; Sankaranarayanan, Sandhya; Just, Rene; Brun, Yuriy] Univ Massachusetts, Coll Informat & Comp Sci, Amherst, MA 01003 USA.
C3 University of Massachusetts System; University of Massachusetts Amherst
RP Motwani, M (corresponding author), Univ Massachusetts, Coll Informat & Comp Sci, Amherst, MA 01003 USA.
EM mmotwani@cs.umass.edu; ssankar@cs.umass.edu; rjust@cs.umass.edu;
   brun@cs.umass.edu
RI Motwani, Manish/V-3320-2019
OI Motwani, Manish/0000-0001-5129-3980; Brun, Yuriy/0000-0003-3027-7986
FU National Science Foundation [CCF-1453474, CCF-1564162]; Direct For
   Computer & Info Scie & Enginr; Division of Computing and Communication
   Foundations [1564162] Funding Source: National Science Foundation;
   Division of Computing and Communication Foundations; Direct For Computer
   & Info Scie & Enginr [1453474, 1563797, 1645136] Funding Source:
   National Science Foundation
FX This work is supported by the National Science Foundation under grants
   CCF-1453474 and CCF-1564162.
CR Alkhalaf M., 2014, P 2014 INT S SOFTWAR, P225
   Ammann Paul, 2008, Introduction to software testing, V1st
   [Anonymous], AUTOMATIC REPAIR CON
   [Anonymous], 2006, P 2006 INT S SOFTWAR
   [Anonymous], EUR J INF SYST
   [Anonymous], INT C SOFTW ENG ICSE
   [Anonymous], IEEE ACM INT C AUT S
   [Anonymous], 15 MOST POP BUG TRAC
   [Anonymous], EUR SOFTW ENG C ACM
   [Anonymous], INT C SOFTW ENG ICSE
   [Anonymous], ARXIV150507002
   [Anonymous], INT WORKSH ENG FAULT
   [Anonymous], INT C AUT SOFTW ENG
   [Anonymous], INT S SOFTW TEST AN
   [Anonymous], SOFTWARE ENG ADAPTIV
   [Anonymous], 2013, Tech. Rep.
   [Anonymous], INT C MAN DAT SIGMOD
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   Brun Y, 2015, IEEE T SOFTWARE ENG, V41, P764, DOI 10.1109/TSE.2015.2412134
   Burt R. S., 2005, BROKERAGE CLOSURE IN
   Carzaniga A., 2010, Proceedings of the eighteenth ACM SIGSOFT international symposium on Foundations of software engineering, P237
   Carzaniga A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P782, DOI 10.1109/ICSE.2013.6606624
   Coker Z, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P792, DOI 10.1109/ICSE.2013.6606625
   Dallmeier V, 2009, IEEE INT CONF AUTOM, P550, DOI 10.1109/ASE.2009.15
   Debroy Vidroha, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P65, DOI 10.1109/ICST.2010.66
   DeMarco F, 2014, P 6 INT WORKSHOP CON, P30, DOI 10.1145/2593735.2593740
   Elkarablieh B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P855, DOI 10.1145/1368088.1368222
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Ferguson CJ, 2009, PROF PSYCHOL-RES PR, V40, P532, DOI 10.1037/a0015808
   Fry Z.P., 2012, INT S SOFTWARE TESTI, P177, DOI 10.1145/04000800.2336775
   Galhotra S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P498, DOI 10.1145/3106237.3106277
   Gopinath D, 2011, LECT NOTES COMPUT SC, V6605, P173, DOI 10.1007/978-3-642-19835-9_15
   Guowei Yang, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P455, DOI 10.1007/978-3-642-32759-9_37
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Jeffrey D, 2009, INT C PROGRAM COMPRE, P70, DOI 10.1109/ICPC.2009.5090029
   Jiang MY, 2017, J SYST SOFTWARE, V126, P127, DOI 10.1016/j.jss.2016.04.002
   Jin GL, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P389
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kong XL, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P194, DOI 10.1109/ISSRE.2015.7381813
   Koza J.R., 1992, GENETIC PROGRAMMING, VVolume 1
   Langdon WB, 2016, LECT NOTES COMPUT SC, V9962, P224, DOI 10.1007/978-3-319-47106-8_16
   Le Goues C., 2012, IEEE Transactions on Software Engineering, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le Roy M.K., 2009, Research methods in political science, V7th
   Liu P, 2012, PROC INT CONF SOFTW, P299, DOI 10.1109/ICSE.2012.6227184
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   Mu K., 2013, ESEC FSE NEW IDEAS T, P631, DOI DOI 10.1145/2491411.2494580
   Newson R, 2002, STATA J, V2, P45, DOI 10.1177/1536867X0200200103
   Orlov M, 2011, IEEE T EVOLUT COMPUT, V15, P166, DOI 10.1109/TEVC.2010.2052622
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Perkins JH, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P87
   Petke J, 2018, IEEE T EVOLUT COMPUT, V22, P415, DOI 10.1109/TEVC.2017.2693219
   Qi YH, 2013, PROC IEEE INT CONF S, P180, DOI 10.1109/ICSM.2013.29
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Reichertz J., 2007, The sage handbook of grounded theory
   Schulte E, 2014, ACM SIGPLAN NOTICES, V49, P639, DOI 10.1145/2541940.2541980
   Sidiroglou S, 2005, IEEE SECUR PRIV, V3, P41, DOI 10.1109/MSP.2005.144
   Sidiroglou-Douskos S, 2015, ACM SIGPLAN NOTICES, V50, P43, DOI [10.1145/2813885.2737988, 10.1145/2737924.2737988]
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Soto M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P512, DOI [10.1145/2901739.2903495, 10.1109/MSR.2016.067]
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wilkerson JL, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1229, DOI 10.1145/2330163.2330333
NR 71
TC 35
Z9 42
U1 1
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2018
VL 23
IS 5
BP 2901
EP 2947
DI 10.1007/s10664-017-9550-0
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO5AW
UT WOS:000440031100013
DA 2024-07-18
ER

PT J
AU Kopec, W
   Balcerzak, B
   Nielek, R
   Kowalik, G
   Wierzbicki, A
   Casati, F
AF Kopec, Wieslaw
   Balcerzak, Bartlomiej
   Nielek, Radoslaw
   Kowalik, Grzegorz
   Wierzbicki, Adam
   Casati, Fabio
TI Older adults and hackathons: a qualitative study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Older adults; Elderly; Participatory design; Co-design; User-centered
   design; User experience; Hackathons; Qualitative methods;
   Intergenerational interaction; Intergenerational cooperation
ID SOCIAL IDENTITY; SELF-CATEGORIZATION; EXPERIENCES; PEOPLE
AB Globally observed trends in aging indicate that older adults constitute a growing share of the population and an increasing demographic in the modern technologies marketplace. Therefore, it has become important to address the issue of participation of older adults in the process of developing solutions suitable for their group. In this study, we approached this topic by organizing a hackathon involving teams of young programmers and older adults participants. Below we describe a case study of that hackathon, in which our objective was to motivate older adults to participate in software engineering processes. Based on our results from an array of qualitative methods, we propose a set of good practices that may lead to improved older adult participation in similar events and an improved process of developing apps that target older adults.
C1 [Kopec, Wieslaw; Balcerzak, Bartlomiej; Nielek, Radoslaw; Kowalik, Grzegorz; Wierzbicki, Adam] Polish Japanese Acad Informat Technol, Ul Koszykowa 86, PL-02008 Warsaw, Poland.
   [Casati, Fabio] Univ Trento, Via Sommarive 9, I-38123 Povo, TN, Italy.
   [Casati, Fabio] Tomsk Polytech Univ, Tomsk 634050, Russia.
C3 Polsko-Japonska Akademia Technik Komputerowych; University of Trento;
   Tomsk Polytechnic University
RP Kopec, W (corresponding author), Polish Japanese Acad Informat Technol, Ul Koszykowa 86, PL-02008 Warsaw, Poland.
EM kopec@pja.edu.pl
RI Kopeć, Wiesław/R-3082-2017; Casati, Fabio/I-7952-2013; Nielek,
   Radoslaw/L-1183-2015; Wierzbicki, Adam/C-7869-2013
OI Kopeć, Wiesław/0000-0001-9132-4171; Casati, Fabio/0000-0001-7591-9562;
   Nielek, Radoslaw/0000-0002-5794-7532; Wierzbicki,
   Adam/0000-0003-0075-7030
FU European Unions Horizon 2020 Research and Innovation Programme under the
   Marie Skodowska-Curie grant [690962]; Regional Operational Programme of
   Mazovia Voivodeship
FX This project has received funding from the European Unions Horizon 2020
   Research and Innovation Programme under the Marie Skodowska-Curie grant
   agreement No 690962. This project was partially supported by the
   infrastructure bought within the project Heterogenous Computation Cloud
   funded by the Regional Operational Programme of Mazovia Voivodeship.
CR Allport G. W., 1954, NATURE PREJUDICE
   [Anonymous], 2007, PROC MOBILEHCI2007
   [Anonymous], P 38 ANN HAW INT C S
   [Anonymous], 2016, THESIS
   [Anonymous], INT 2009 C US EXP EV
   [Anonymous], GERONTOLOGIST
   [Anonymous], 2007, THESIS
   [Anonymous], 2010, SOCIAL IDENTITY INTE
   [Anonymous], 2008, GUIDE ADV EMPIRICAL
   [Anonymous], 2010, P 6 INT S WIK OP COL
   [Anonymous], 9 INT SOFTW METR S
   [Anonymous], ERG HUM SYST INT 210
   ASHFORTH BE, 1989, ACAD MANAGE REV, V14, P20, DOI 10.2307/258189
   Bargas-Avila JA, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2689
   Briscoe G., 2014, DIGITAL INNOVATION H
   Convertino G, 2007, BEHAV INFORM TECHNOL, V26, P275, DOI 10.1080/01449290601173473
   Davidson JL, 2013, C&C'13: PROCEEDINGS OF THE 9TH ACM CONFERENCE ON CREATIVITY & COGNITION 2013, P114
   DeWalt K.M., 2010, PARTICIPANT OBSERVAT
   Elsass PM, 1997, ACAD MANAGE REV, V22, P946, DOI 10.2307/259250
   Filippova A, 2017, PROC INT CONF SOFTW, P152, DOI 10.1109/ICSE.2017.22
   Fowler A., 2016, P INT C GAME JAMS HA, P38, DOI DOI 10.1145/2897167.2897179
   Glaser BG., 1967, Nurs. Res., DOI [DOI 10.4324/9780203793206, 10.1097/00006199-196807000-00014]
   Haslam SA, 2000, APPL PSYCHOL-INT REV, V49, P319, DOI 10.1111/1464-0597.00018
   Hassenzahl M, 2006, BEHAV INFORM TECHNOL, V25, P91, DOI 10.1080/01449290500330331
   HASSENZAHL M., 2008, 20 INT C ASS FRANCOP, P11
   Hennink MM, 2007, INTERNATIONAL FOCUS GROUP RESEARCH: A HANDBOOK FOR THE HEALTH AND SOCIAL SCIENCES, P1, DOI 10.1017/CBO9780511619458
   Hogg MA, 2000, ACAD MANAGE REV, V25, P121, DOI 10.1093/cdj/bsi087
   Jones GM, 2015, J LINGUIST ANTHROPOL, V25, P322, DOI 10.1111/jola.12104
   Joyce K., 2007, Indian Journal of Gerontology, V21, P110
   Kankainen A., 2011, P 8 ACM C CREATIVITY, P175
   Karapanos E., 2013, MODELING USERSEXPERI, P57, DOI [10.1007/978-3-642-31000-3_4., DOI 10.1007/978-3-642-31000-3_4]
   Kawulich B., 2005, Forum: Qualitative Social Research, V2
   Kontio J., 2008, Guide to Advanced Empirical Software Engineering, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, 10.1007/978-1-84800-044-54, DOI 10.1007/978-1-84800-044-54]
   Kopec W, 2017, 2017 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE (WI 2017), P1085, DOI 10.1145/3106426.3109040
   Kopec W, 2017, L N INST COMP SCI SO, V181, P84, DOI 10.1007/978-3-319-49655-9_12
   Ladner R. E., 2015, Interactions, V22, P24, DOI DOI 10.1145/2723869
   Lapp H, 2007, EVOL BIOINFORM, V3, P287
   Law E, 2008, Proceeding of the Twenty-Sixth Annual CHI Conference Extended Abstracts, P2395, DOI [10.1086/521592, DOI 10.1086/521592]
   Law ELC, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P719
   Lindsay S., 2012, P SIGCHI C HUMAN FAC, P1199, DOI DOI 10.1145/2207676.2208570
   Malterud K, 2001, LANCET, V358, P483, DOI 10.1016/S0140-6736(01)05627-6
   Marshall C., 2014, DESIGNING QUALITATIV
   Massimi M, 2007, ASSETS'07: PROCEEDINGS OF THE NINTH INTERNATIONAL ACM SIGACCESS CONFERENCE ON COMPUTERS AND ACCESSIBILITY, P155
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Moran Alberto L., 2014, Ambient Assisted Living and Daily Activities. 6th International Work-Conference, IWAAL 2014. Proceedings: LNCS 8868, P203, DOI 10.1007/978-3-319-13105-4_31
   Morris M, 2003, LECT NOTES COMPUT SC, V2864, P227
   Nandi A., 2016, SIGCSE 16, P346, DOI [10.1145/2839509.2844590, DOI 10.1145/2839509.2844590, https://doi.org/10.1145/2839509.2844590, 10.1145/2839509]
   Nicol Emma, 2015, P MOBILEHCI 15, P908, DOI [10.1145/2786567.2795395, DOI 10.1145/2786567.2795395]
   Oliver M., 2012, SOCIAL WORK DISABLED
   Ortman J.M., 2014, National Vital Statistics Report: Births: Preliminary Data for 2014, P25
   Pettigrew TF, 1998, ANNU REV PSYCHOL, V49, P65, DOI 10.1146/annurev.psych.49.1.65
   Pettigrew TF, 2006, J PERS SOC PSYCHOL, V90, P751, DOI 10.1037/0022-3514.90.5.751
   Rainer A, 2003, J SYST SOFTWARE, V66, P7, DOI 10.1016/S0164-1212(02)00059-6
   Reicher S.D., 1987, REDISCOVERING SOCIAL
   Richard G.T., 2015, Proceedings of the 46th ACM technical symposium on computer science education, P114, DOI [DOI 10.1145/2676723, 10.1145/2676723.2677310, DOI 10.1145/2676723.2677310]
   Robson C., 2002, Real world research
   Rossman G. B., 2003, LEARNING FIELD INTRO
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   RYAN EB, 1992, J GERONTOL, V47, pP96, DOI 10.1093/geronj/47.2.P96
   Sanders Elizabeth B.-N, 2008, CoDesign, V4, P5, DOI 10.1080/15710880701875068
   Sanders EBN, 2002, DESIGN AND THE SOCIAL SCIENCES: MAKING CONNECTIONS, P1
   Schloegel U, 2016, J SYST SOFTWARE, V121, P1, DOI 10.1016/j.jss.2016.07.041
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Seron C, 2016, WORK OCCUPATION, V43, P178, DOI 10.1177/0730888415618728
   Shull F., 2008, Guide to advanced empirical software engineering, Band, V93
   Szebeko D, 2010, AUSTRALAS MED J, V3, P580, DOI 10.4066/AMJ.2010.378
   TAJFEL H, 1974, SOC SCI INFORM, V13, P65, DOI 10.1177/053901847401300204
   Tajfel H., 1981, Human Groups and Social Categories
   Taylor SJ., 1984, INTRO QUALITATIVE RE
   Trainer E.H., 2014, P 18 INT C SUPP GROU, P111, DOI DOI 10.1145/2660398.2660420
   Trainer EH, 2016, ACM CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW 2016), P1118, DOI 10.1145/2818048.2819946
   Tuch AN, 2012, COMPUT HUM BEHAV, V28, P1596, DOI 10.1016/j.chb.2012.03.024
   Turek P, 2011, IEEE POTENTIALS, V30, P15, DOI 10.1109/MPOT.2011.940892
   Turner P, 2007, BEHAV INFORM TECHNOL, V26, P287, DOI 10.1080/01449290601173499
   UN, 2015, WORLD POP AG 2015
   Wilkowska W, 2009, LECT NOTES COMPUT SC, V5889, P81
   Wohlin C., 2012, Experimentation in Software Engineering
   Yin D.R. K., 2017, Case Study Research and Applications: Design and Methods
   Yin R.K., 2015, QUALITATIVE RES STAR, V2nd ed.
   Zucker DM, 2009, TEACHING RESEARCH METHODS IN THE SOCIAL SCIENCES, P171
NR 80
TC 20
Z9 23
U1 1
U2 16
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2018
VL 23
IS 4
BP 1895
EP 1930
DI 10.1007/s10664-017-9565-6
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GK0MK
UT WOS:000435804100002
OA hybrid
DA 2024-07-18
ER

PT J
AU Chowdhury, S
   Di Nardo, S
   Hindle, A
   Jiang, ZM
AF Chowdhury, Shaiful
   Di Nardo, Silvia
   Hindle, Abram
   Jiang, Zhen Ming (Jack)
TI An exploratory study on assessing the energy impact of logging on
   Android applications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Logging; Energy consumption; Android
AB Execution logs are debug statements that developers insert into their code. Execution logs are used widely to monitor and diagnose the health of software applications. However, logging comes with costs, as it uses computing resources and can have an impact on an application's performance. Compared with desktop applications, one additional critical computing resource for mobile applications is battery power. Mobile application developers want to deploy energy efficient applications to end users while still maintaining the ability to monitor. Unfortunately, there is no previous work that study the energy impact of logging within mobile applications. This exploratory study investigates the energy cost of logging in Android applications using GreenMiner, an automated energy test-bed for mobile applications. Around 1000 versions from 24 Android applications (e.g., Calculator, FeedEx, Firefox, and VLC) were tested with logging enabled and disabled. To further investigate the energy impacting factors for logging, controlled experiments on a synthetic application were performed. Each test was conducted multiple times to ensure rigorous measurement. Our study found that although there is little to no energy impact when logging is enabled for most versions of the studied applications, about 79% (19/24) of the studied applications have at least one version that exhibit medium to large effect sizes in energy consumption when enabling and disabling logging. To further assess the energy impact of logging, we have conducted a controlled experiment with a synthetic application. We found that the rate of logging and the number of disk flushes are significant factors of energy consumption attributable to logging. Finally, we have examined the relation between the generated OS level execution logs and mobile energy consumption. In addition to the common cross-application log events relevant to garbage collection and graphics systems, some mobile applications also have workload-specific log events that are highly correlated with energy consumption. The regression models built with common log events show mixed performance. Mobile application developers do not need to worry about conservative logging (e.g., logs generated at rates of 1 message per second), as they are not likely to impact energy consumption. Logging has a negligible effect on energy consumption for most of the mobile applications tested. Although logs have been used effectively to diagnose and debug functional problems, it is still an open problem on how to leverage software instrumentation to debug energy problems.
C1 [Chowdhury, Shaiful; Hindle, Abram] Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
   [Di Nardo, Silvia] Gideon Smart Home, London, England.
   [Jiang, Zhen Ming (Jack)] York Univ, Software Construct AnaLyt & Evaluat SCALE Lab, Toronto, ON, Canada.
C3 University of Alberta; York University - Canada
RP Chowdhury, S (corresponding author), Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
EM shaiful@ualberta.ca; silvia@gideon.ai; abram.hindle@ualberta.ca;
   zmjiang@cse.yorku.ca
OI Hindle, Abram/0000-0002-4373-4958
FU Alberta Innovates - Technology Futures (AITF); NSERC
FX Shaiful Chowdhury is grateful to the Alberta Innovates - Technology
   Futures (AITF) to support his PhD research. Both Abram Hindle and Zhen
   Ming (Jack) Jiang are supported by an NSERC Discovery Grant.
CR Aggarwal K, 2014, P 2014 C CTR ADV STU
   Aggarwal K, 2015, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSM.2015.7332477
   Android Open Source Project, ANDR API LOGG
   [Anonymous], P 24 IEEE INT C SOFT
   [Anonymous], 2011, P 16 INT C ARCH SUPP
   [Anonymous], 2014, 2014 DES AUT TEST EU
   [Anonymous], P 22 ANN ACM SIGPLAN
   [Anonymous], 2012, P 34 INT C SOFTW ENG
   [Anonymous], P 10 ACM WORKSH HOT
   [Anonymous], 2014, P 11 WORKING C MININ
   [Anonymous], 2009, P ACM SIGOPS 22 S OP
   Banerjee A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P588, DOI 10.1145/2635868.2635871
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Carroll A., 2010, P USENIXATC 10
   Chowdhury S., 2016, SANER 16
   Chowdhury SA, 2016, P 13 INT C MIN SOFTW
   Chowdhury SA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P508, DOI [10.1145/2901739.2903494, 10.1109/MSR.2016.066]
   Ding R, 2015, 2015 USENIX ANN TECH
   Dong Mian., 2011, MobiSys '11, P335, DOI DOI 10.1145/1999995.2000027
   Fedotyev A, 2014, REAL COST LOGGING
   Flinn J, 1999, WMCSA '99, SECOND IEEE WORKSHOP ON MOBILE COMPUTING SYSTEMS AND APPLICATIONS, PROCEEDINGS, P2, DOI 10.1109/MCSA.1999.749272
   Fu Q., 2014, COMP P 36 INT C SOFT
   Grabner A, 2012, TOP PERFORMANCE MIST
   Gurumurthi S, 2002, EIGHTH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE COMPUTER ARCHITECTURE, PROCEEDINGS, P141
   Hao S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P92, DOI 10.1109/ICSE.2013.6606555
   Hasan S, 2016, PROC INT CONF SOFTW, P225, DOI 10.1145/2884781.2884869
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P374, DOI 10.1007/s10664-013-9276-6
   Hlavac M., 2015, STARGAZER WELL FORMA
   Hopkins WG, 2016, NEW VIEW STAT
   Jabbarvand R., 2016, P 25 INT S SOFTWARE, P425, DOI DOI 10.1145/2931037.2931067
   Jay A, DO UNUSED LOGGING ST
   Jay A, LOG D IMPACT PERFORM
   Jiang ZM, 2008, J SOFTW MAINT EVOL-R, V20, P249, DOI 10.1002/smr.374
   Jojo, DOES LOGGING SLOW PR
   Kalibera T, 2013, P 2013 INT S MEM MAN
   Li D, 2014, P 30 INT C SOFTW MAI
   Li D, 2014, P 2014 INT S SOFTW T
   Li D, 2016, PROC INT CONF SOFTW, P249, DOI 10.1145/2884781.2884867
   Li D, 2013, IEEE SYMP DIFF EVOL
   Liu Y, 2016, FSE 2014
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   Mytkowicz T., 2009, P 14 INT C ARCH SUPP
   Neill J., 2008, Why use effect sizes instead of significance testing in program tvaluation?
   Oliner A, 2012, COMMUN ACM, V55, P63, DOI 10.1145/2076450.2076466
   Pang C, 2016, IEEE SOFTWARE, V33, P83, DOI 10.1109/MS.2015.83
   Pathak Abhijit D., 2012, Proceedings of the PCIM ASIA 2012. International Conference and Exhibition for Power Electronics, Intelligent Motion, Renewable Energy and Energy Management, P29
   Pathak A, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P153
   Patil PS, 2015, IEEE INT ADV COMPUT, P883, DOI 10.1109/IADCC.2015.7154832
   PINTO G, 2014, P 11 WORK C MIN SOFT
   Rasmussen K., 2014, P 3 INT WORKSHOP GRE, P38
   Romano J., 2006, ANN M FLORIDA ASS IN
   Romansky S, 2014, P 2014 C CTR ADV STU
   Sahin C, 2014, P 8 ACM IEEE INT S E, P1
   Sahin C., 2014, P 30 IEEE INT C SOFT
   Seo C, 2008, LECT NOTES COMPUT SC, V5282, P97
   Shang  W., 2011, P 18 WORK C REV ENG
   Shang W, 2013, P 35 INT C SOFTW ENG
   Shang WY, 2015, EMPIR SOFTW ENG, V20, P1, DOI 10.1007/s10664-013-9274-8
   Shye Alex, 2009, Proceedings of the 2009 42nd Annual IEEE/ACM International Symposium on Microarchitecture (MICRO 2009), P168, DOI 10.1145/1669112.1669135
   Sigelman Benjamin H, 2010, Technical Report
   T. INSTRUMENTS, 2015, INA219 ZER DRIFT BID
   Thompson B., 2000, A suggested revision to the forthcoming 5th edition of the APA Publication Manual
   Vasquez ML, 2014, P 11 WORK C MIN SOFT
   Wang XG, 2014, 2014 IEEE 12th International Conference on Dependable, Autonomic and Secure Computing (DASC)/2014 IEEE 12th International Conference on Embedded Computing (EmbeddedCom)/2014 IEEE 12th International Conf on Pervasive Intelligence and Computing (PICom), P429, DOI 10.1109/DASC.2014.83
   Woodside M, 2007, P FUT SOFTW ENG FOSE
   Xu W, 2009, P 9 IEEE INT C DAT M
   Yuan Ding, 2010, P 15 ED ASPLOS ARCH
   Zhang Lide, 2010, P 8 IEEE ACM IFIP IN
NR 68
TC 28
Z9 31
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2018
VL 23
IS 3
BP 1422
EP 1456
DI 10.1007/s10664-017-9545-x
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GH6DH
UT WOS:000433532300008
DA 2024-07-18
ER

PT J
AU Huang, Q
   Shihab, E
   Xia, X
   Lo, D
   Li, SP
AF Huang, Qiao
   Shihab, Emad
   Xia, Xin
   Lo, David
   Li, Shanping
TI Identifying self-admitted technical debt in open source projects using
   text mining
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Technical debt; Source code comments; Text mining
ID INFORMATION-RETRIEVAL; BUGS
AB Technical debt is a metaphor to describe the situation in which long-term code quality is traded for short-term goals in software projects. Recently, the concept of self-admitted technical debt (SATD) was proposed, which considers debt that is intentionally introduced, e.g., in the form of quick or temporary fixes. Prior work on SATD has shown that source code comments can be used to successfully detect SATD, however, most current state-of-the-art classification approaches of SATD rely on manual inspection of the source code comments. In this paper, we proposed an automated approach to detect SATD in source code comments using text mining. In our approach, we utilize feature selection to select useful features for classifier training, and we combine multiple classifiers from different source projects to build a composite classifier that identifies SATD comments in a target project. We investigate the performance of our approach on 8 open source projects that contain 212,413 comments. Our experimental results show that, on every target project, our approach outperforms the state-of-the-art and the baselines approaches in terms of F1-score. The F1-score achieved by our approach ranges between 0.518 - 0.841, with an average of 0.737, which improves over the state-of-the-art approach proposed by Potdar and Shihab by 499.19%. When compared with the text mining-based baseline approaches, our approach significantly improves the average F1-score by at least 58.49%. When compared with a natural language processing-based baseline, our approach also significantly improves its F1-score by 27.95%. Our proposed approach can be used by project personnel to effectively identify SATD with minimal manual effort.
C1 [Huang, Qiao; Xia, Xin; Li, Shanping] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
   [Shihab, Emad] Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ, Canada.
   [Xia, Xin] Univ British Columbia, Dept Comp Sci, Vancouver, BC, Canada.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
C3 Zhejiang University; Concordia University - Canada; University of
   British Columbia; Singapore Management University
RP Xia, X (corresponding author), Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.; Xia, X (corresponding author), Univ British Columbia, Dept Comp Sci, Vancouver, BC, Canada.
EM tkdsheep@zju.edu.cn; eshihab@encs.concordia.ca; xxia@zju.edu.cn;
   davidlo@smu.edu.sg; shan@zju.edu.cn
RI Xia, Xin/AAD-6217-2022; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201
FU NSFC [61602403, 61572426]; National Key Technology R&D Program of the
   Ministry of Science and Technology of China [2015BAH17F01]
FX The authors thank to all the developers who participated in this study.
   This research was supported by NSFC Program (No. 61602403 and 61572426),
   and National Key Technology R&D Program of the Ministry of Science and
   Technology of China (No. 2015BAH17F01).
CR Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], P 14 INT C MACH LEAR
   Arisholm E, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2007.22
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   COHEN J, 1968, PSYCHOL BULL, V70, P213, DOI 10.1037/h0026256
   Cunningham W., 1993, OOPS MESSENGER, V4, P29, DOI DOI 10.1145/157710.157715
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall M. A., 1999, Proceedings of the Twelfth International Florida AI Research Society Conference, P235
   Han J., 2006, DATA MINING CONCEPTS, DOI 10.1016/C2009-0-61819-5
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Khamis N, 2010, LECT NOTES COMPUT SC, V6177, P68, DOI 10.1007/978-3-642-13881-2_7
   Kruchten Philippe, 2013, ACM SIGSOFT Software Engineering Notes, V38, P51
   Lim E, 2012, IEEE SOFTWARE, V29, P22, DOI 10.1109/MS.2012.130
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   Maldonado Everton, 2017, IEEE T SOFTWARE ENG
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Malik H, 2008, PROC IEEE INT CONF S, P167, DOI 10.1109/ICSM.2008.4658065
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Marinescu R, 2010, EUR CON SFTWR MTNCE, P274, DOI 10.1109/CSMR.2010.44
   McCallum A., 1998, AAAI 98 WORKSH LEARN, V752, P41, DOI DOI 10.1109/TSMC.1985.6313426
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Padioleau Y, 2009, PROC INT CONF SOFTW, P331, DOI 10.1109/ICSE.2009.5070533
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Seaman C., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P45, DOI 10.1109/MTD.2012.6225999
   Sebastiani F, 2002, ACM COMPUT SURV, V34, P1, DOI 10.1145/505282.505283
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Shin Hwei Tan, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P260, DOI 10.1109/ICST.2012.106
   Storey MA, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P251, DOI 10.1145/1368088.1368123
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Sun C, 2011, INT J CHEM ENG, V2011, DOI 10.1155/2011/545234
   Tang YB, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON CONSUMER ELECTRONICS-TAIWAN (ICCE-TW), P101
   Tian Y, 2012, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2012.6227176
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Vassallo C, 2016, P INT C SOFTW MAINT
   Wehaibi S, 2016, P 23 IEEE INT C SOFT
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xia X, 2016, P 10 ACM IEEE INT S, P29
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Xia X, 2016, IEEE T RELIAB, V65, P1810, DOI 10.1109/TR.2016.2588139
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xia X, 2015, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSM.2015.7332472
   Xia X, 2015, INFORM SOFTWARE TECH, V61, P93, DOI 10.1016/j.infsof.2014.12.006
   Xia X, 2015, J SOFTW-EVOL PROC, V27, P195, DOI 10.1002/smr.1706
   Xia X, 2015, AUTOMAT SOFTW ENG, V22, P75, DOI 10.1007/s10515-014-0162-2
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Xie X, 2014, P INT COMP SOFTW APP, P107, DOI 10.1109/COMPSAC.2014.17
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Yang XL, 2017, J COMPUT SCI TECH-CH, V32, P181, DOI 10.1007/s11390-017-1713-3
   Yang XL, 2016, PROC INT SYMP SOFTW, P127, DOI 10.1109/ISSRE.2016.33
   Yuepu Guo, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P528, DOI 10.1109/ICSM.2011.6080824
   Zazworka N., 2013, Proceedings of the 17th International Conference on Evaluation and Assessment in Software Engineering, DOI DOI 10.1145/2460999.2461005.ASSOCIATIONFORCOMPUTINGMACHINERY
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 61
TC 76
Z9 83
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2018
VL 23
IS 1
BP 418
EP 451
DI 10.1007/s10664-017-9522-4
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FU9TG
UT WOS:000424199400011
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Munir, H
   Linåker, J
   Wnuk, K
   Runeson, P
   Regnell, B
AF Munir, Hussan
   Linaker, Johan
   Wnuk, Krzysztof
   Runeson, Per
   Regnell, Bjorn
TI Open innovation using open source tools: a case study at Sony Mobile
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Open innovation; Open source; OSS communities; Jenkins; Gerrit; Case
   study
ID OPEN SOURCE SOFTWARE; FIRMS; COMMUNITIES; CHALLENGES; COMPANIES
AB Despite growing interest of Open Innovation (OI) in Software Engineering (SE), little is known about what triggers software organizations to adopt it and how this affects SE practices. OI can be realized in numerous of ways, including Open Source Software (OSS) involvement. Outcomes from OI are not restricted to product innovation but also include process innovation, e.g. improved SE practices and methods. This study explores the involvement of a software organization (Sony Mobile) in OSS communities from an OI perspective and what SE practices (requirements engineering and testing) have been adapted in relation to OI. It also highlights the innovative outcomes resulting from OI. An exploratory embedded case study investigates how Sony Mobile use and contribute to Jenkins and Gerrit; the two central OSS tools in their continuous integration tool chain. Quantitative analysis was performed on change log data from source code repositories in order to identify the top contributors and triangulated with the results from five semi-structured interviews to explore the nature of the commits. The findings of the case study include five major themes: i) The process of opening up towards the tool communities correlates in time with a general adoption of OSS in the organization. ii) Assets not seen as competitive advantage nor a source of revenue are made open to OSS communities, and gradually, the organization turns more open. iii) The requirements engineering process towards the community is informal and based on engagement. iv) The need for systematic and automated testing is still in its infancy, but the needs are identified. v) The innovation outcomes included free features and maintenance, and were believed to increase speed and quality in development. Adopting OI was a result of a paradigm shift of moving from Windows to Linux. This shift enabled Sony Mobile to utilize the Jenkins and Gerrit communities to make their internal development process better for its software developers and testers.
C1 [Munir, Hussan; Linaker, Johan; Runeson, Per; Regnell, Bjorn] Lund Univ, Dept Comp Sci, Box 118, S-22100 Lund, Sweden.
   [Wnuk, Krzysztof] Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
C3 Lund University; Blekinge Institute Technology
RP Munir, H (corresponding author), Lund Univ, Dept Comp Sci, Box 118, S-22100 Lund, Sweden.
EM hussan.munir@cs.lth.se; johan.linaker@cs.lth.se; krzysztof.wnuk@bth.se;
   per.runeson@cs.lth.se; bjorn.regnell@cs.lth.se
RI Munir, Hussan/HKV-4509-2023; Linåker, Johan/AAR-3849-2021; Runeson,
   Per/H-5113-2019
OI Munir, Hussan/0000-0001-9376-9844; Linåker, Johan/0000-0001-9851-1404;
   Runeson, Per/0000-0003-2795-4851; Regnell, Bjorn/0000-0002-9380-6120
CR Alspaugh TA, 2013, S VIS LANG HUM CEN C, P165, DOI 10.1109/RE.2013.6636716
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2014, NEW FRONTIERS OPEN I
   [Anonymous], 2004, P R D MAN C LISB POR
   [Anonymous], 2002, P M CHALL SURV SUCC
   Assink M, 2006, EUR J INNOV MANAG, V9, P215, DOI 10.1108/14601060610663587
   Beck K., 2011, MANIFESTO AGILE SOFT
   Bjarnason E, 2015, LECT NOTES BUS INF P, V212, P27, DOI 10.1007/978-3-319-18612-2_3
   Chesbrough H., 2003, OPEN INNOVATION, DOI [10.1016/j.jengtecman.2004.05.003, DOI 10.1016/J.JENGTECMAN.2004.05.003]
   Chesbrough H., 2006, OPEN INNOVATION RES
   Chesbrough HW, 2007, CALIF MANAGE REV, V50, P57, DOI 10.2307/41166416
   Cruzes DS, 2015, EMPIR SOFTW ENG, V20, P1634, DOI 10.1007/s10664-014-9326-8
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Dahlander L, 2005, RES POLICY, V34, P481, DOI 10.1016/j.respol.2005.02.003
   Dahlander L, 2006, RES POLICY, V35, P1243, DOI 10.1016/j.respol.2006.09.011
   Dahlander L, 2008, LONG RANGE PLANN, V41, P629, DOI 10.1016/j.lrp.2008.09.003
   Edison H, 2013, J SYST SOFTWARE, V86, P1390, DOI 10.1016/j.jss.2013.01.013
   Enkel E, 2009, R&D MANAGE, V39, P311, DOI 10.1111/j.1467-9310.2009.00570.x
   Ernst N. A., 2012, Proceedings of the 2012 IEEE Second International Workshop on Empirical Requirements Engineering (EmpiRE), P25, DOI 10.1109/EmpiRE.2012.6347678
   Fricker S, 2010, LECT NOTES COMPUT SC, V6182, P60, DOI 10.1007/978-3-642-14192-8_7
   Gonzalez-Barahona JM, 2013, IEEE SOFTWARE, V30, P38, DOI 10.1109/MS.2013.95
   Grotnes E, 2009, INFORM TECHNOL PEOPL, V22, P367, DOI 10.1108/09593840911002469
   Hattori Lile P., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P63, DOI 10.1109/ASEW.2008.4686322
   Henkel J, 2006, RES POLICY, V35, P953, DOI 10.1016/j.respol.2006.04.010
   Henkel J, 2014, RES POLICY, V43, P879, DOI 10.1016/j.respol.2013.08.014
   Henkel J, 2009, IND CORP CHANGE, V18, P435, DOI 10.1093/icc/dtn046
   Hüsig S, 2011, COMPUT IND, V62, P407, DOI 10.1016/j.compind.2010.12.003
   Jansen S, 2012, J SYST SOFTWARE, V85, P1495, DOI 10.1016/j.jss.2011.12.007
   Jensen C, 2007, PROC INT CONF SOFTW, P364
   Jensen C, 2010, IFIP ADV INF COMM TE, V319, P130
   Knauss E, 2014, INT REQUIR ENG CONF, P213, DOI 10.1109/RE.2014.6912263
   Lakhani KR, 2003, RES POLICY, V32, P923, DOI 10.1016/S0048-7333(02)00095-1
   Lee GK, 2003, ORGAN SCI, V14, P633, DOI 10.1287/orsc.14.6.633.24866
   Lee SYT, 2009, OMEGA-INT J MANAGE S, V37, P426, DOI 10.1016/j.omega.2007.05.005
   Lerner J, 2002, J IND ECON, V50, P197, DOI 10.1111/1467-6451.00174
   Lieberman M.B., 1998, 1 MOVER DISADVANTAGE
   Linåker J, 2016, LECT NOTES COMPUT SC, V9619, P63, DOI 10.1007/978-3-319-30282-9_5
   Linåker J, 2014, LECT NOTES COMPUT SC, V8892, P149, DOI 10.1007/978-3-319-13835-0_11
   Lindman J, 2008, INT FED INFO PROC, V275, P381, DOI 10.1007/978-0-387-09684-1_36
   Morgan L, 2010, DATA BASE ADV INF SY, V41, P76
   Mowery DC, 2009, IND CORP CHANGE, V18, P1, DOI 10.1093/icc/dtn049
   Munga N., 2009, P 2009 ANN RES C S A, P112, DOI DOI 10.1145/1632149.1632165
   Munir H, 2016, EMPIR SOFTW ENG, V21, P684, DOI 10.1007/s10664-015-9380-x
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Organisation for Economic Cooporation and Development (OCED), 2005, OSL MAN GUID COLL IN, DOI 10.1787/9789264013100-en
   Panjer L., 2008, Proceedings of the International Workshop on Cooperative and Human Aspects of Software Engineering (CHASE), P77
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Rolandsson B, 2011, RES POLICY, V40, P576, DOI 10.1016/j.respol.2010.11.003
   Scacchi W., 2002, IEE Proceedings-Software, V149, P24, DOI 10.1049/ip-sen:20020202
   Scacchi W, 2010, COLLABORATIVE SOFTWARE ENGINEERING, P307, DOI 10.1007/978-3-642-10294-3_15
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Stam W, 2009, RES POLICY, V38, P1288, DOI 10.1016/j.respol.2009.06.004
   Stol KJ, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2533685
   Stuermer M, 2009, R&D MANAGE, V39, P170, DOI 10.1111/j.1467-9310.2009.00548.x
   van der Hinden F, 2009, IEEE SOFTWARE, V26, P77, DOI 10.1109/MS.2009.88
   Ven K, 2008, INFORM SOFTWARE TECH, V50, P991, DOI 10.1016/j.infsof.2007.09.001
   Wesselius J, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.79
   West J, 2003, RES POLICY, V32, P1259, DOI 10.1016/S0048-7333(03)00052-0
   West J., 2008, CREATING EVOLVING OP
   West J, 2006, R&D MANAGE, V36, P319, DOI 10.1111/j.1467-9310.2006.00436.x
   West J, 2013, ADV STRATEG MANAGE, V30, P27, DOI 10.1108/S0742-3322(2013)0000030005
   West J, 2014, J PROD INNOVAT MANAG, V31, P814, DOI 10.1111/jpim.12125
   Wnuk K, 2012, INT SYMP EMP SOFTWAR, P271, DOI 10.1145/2372251.2372301
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 72
TC 20
Z9 21
U1 2
U2 23
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2018
VL 23
IS 1
BP 186
EP 223
DI 10.1007/s10664-017-9511-7
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FU9TG
UT WOS:000424199400005
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Dieste, O
   Aranda, AM
   Uyaguari, F
   Turhan, B
   Tosun, A
   Fucci, D
   Oivo, M
   Juristo, N
AF Dieste, Oscar
   Aranda, Alejandrina M.
   Uyaguari, Fernando
   Turhan, Burak
   Tosun, Ayse
   Fucci, Davide
   Oivo, Markku
   Juristo, Natalia
TI Empirical evaluation of the effects of experience on code quality and
   programmer productivity: an exploratory study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Experience; Industry; Academy; Programming; Iterative test-last
   development; External quality; Productivity; Performance
ID SOFTWARE-DESIGN; EXPERT; NOVICE; PERFORMANCE; ACQUISITION; SIZE; TASK
AB There is a widespread belief in both SE and other branches of science that experience helps professionals to improve their performance. However, cases have been reported where experience not only does not have a positive influence but sometimes even degrades the performance of professionals.
   Determine whether years of experience influence programmer performance.
   We have analysed 10 quasi-experiments executed both in academia with graduate and postgraduate students and in industry with professionals. The experimental task was to apply ITLD on two experimental problems and then measure external code quality and programmer productivity.
   Programming experience gained in industry does not appear to have any effect whatsoever on quality and productivity. Overall programming experience gained in academia does tend to have a positive influence on programmer performance. These two findings may be related to the fact that, as opposed to deliberate practice, routine practice does not appear to lead to improved performance. Experience in the use of productivity tools, such as testing frameworks and IDE also has positive effects.
   Years of experience are a poor predictor of programmer performance. Academic background and specialized knowledge of task-related aspects appear to be rather good predictors.
C1 [Dieste, Oscar; Aranda, Alejandrina M.; Uyaguari, Fernando; Juristo, Natalia] Univ Politecn Madrid, Escuela Tecn Super Ingenieros Informat, Campus Montegancedo, Boadilla Del Monte 28660, Spain.
   [Turhan, Burak; Fucci, Davide; Oivo, Markku; Juristo, Natalia] Univ Oulu, Dept Informat Proc Sci, POB 3000, Oulu 90014, Finland.
   [Tosun, Ayse] Istanbul Tech Univ, Fac Comp & Informat, TR-34469 Maslakistanbul, Turkey.
C3 Universidad Politecnica de Madrid; University of Oulu; Istanbul
   Technical University
RP Dieste, O (corresponding author), Univ Politecn Madrid, Escuela Tecn Super Ingenieros Informat, Campus Montegancedo, Boadilla Del Monte 28660, Spain.
EM odieste@fi.upm.es; alearanda@gmail.com; fuyaguari01@gmail.com;
   Burak.Turhan@oulu.fi; tosunmisirli@itu.edu.tr; Davide.Fucci@oulu.fi;
   Markku.Oivo@oulu.fi; Natalia.Juristo@oulu.fi
RI Fucci, Davide/C-1463-2015; Tosun, Ayse/B-4794-2014; Turhan,
   Burak/G-7400-2011; Dieste, Oscar/K-6193-2014
OI Fucci, Davide/0000-0002-0679-4361; Tosun, Ayse/0000-0003-1859-7872;
   Turhan, Burak/0000-0003-1511-2163; Dieste, Oscar/0000-0002-3060-7853;
   Oivo, Markku/0000-0002-1698-2323
CR ADELSON B, 1981, MEM COGNITION, V9, P422, DOI 10.3758/BF03197568
   ADELSON B, 1984, J EXP PSYCHOL LEARN, V10, P483, DOI 10.1037/0278-7393.10.3.483
   Agarwal R., 1991, Knowledge Acquisition, V3, P421, DOI 10.1016/S1042-8143(05)80027-5
   [Anonymous], 2013, STAT ANAL DATA DISPL
   [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], 2016, THOUGHT CHOICE CHESS
   [Anonymous], 1981, COGNITIVE SKILLS THE
   Aranda A., 2014, P 18 INT C EV ASS SO, DOI DOI 10.1145/2601248.2601291
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   Armour PG, 2004, COMMUN ACM, V47, P21, DOI 10.1145/971617.971635
   Askar P, 2009, TURK ONLINE J EDUC T, V8, P26
   Belsley D., 1991, CONDITIONING DIAGNOS
   Bob U, 2005, BOWLING GAME KATA
   Brandmaier AM, 2013, PSYCHOL METHODS, V18, P71, DOI 10.1037/a0030001
   Burkhardt J, 1997, MENTAL REPRESENTATIO, P339
   Burkhardt J.-M., 2002, Empirical Software Engineering, V7, P115, DOI 10.1023/A:1015297914742
   Camerer ColinF., 1997, Research on judgment and decision making: Currents, connections, and controversies, V342
   Campbell RL, 1996, J EXP THEOR ARTIF IN, V8, P277, DOI 10.1080/095281396147339
   Chase W.G., 1973, The mind's eye in chess
   Chmiel R., 2004, SIGCSE Bulletin, V36, P17, DOI 10.1145/1028174.971310
   Cohen J., 1988, STAT POWER ANAL BEHA
   Colvin Geoffrey., 2008, Talent is Overrated: What Really Separates World-class Performers from Everybody Else
   Crosby Martha E, 2002, 14 WORKSH PSYCH PROG, P58
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Curtis B, 1984, FIFTEEN YEARS OF PSYCHOLOGY IN SOFTWARE ENGINEERING: INDIVIDUAL DIFFERENCES AND COGNITIVE SCIENCE
   Darcy DP, 2005, P 38 ANN HAW INT C S, V314a
   Daun Marian., 2015, Proceedings of the 19th International Conference on Evaluation and Assessment in Software Engineering. EASE'15, p29:1, DOI DOI 10.1145/2745802.2745829
   ElliottSim S, 2006, UCIISR066
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Ericsson KA, 2006, CAMBRIDGE HANDBOOK OF EXPERTISE AND EXPERT PERFORMANCE, P683
   Ericsson KA, 2006, CAMBRIDGE HANDBOOK OF EXPERTISE AND EXPERT PERFORMANCE, P3
   ERICSSON KA, 1994, AM PSYCHOL, V49, P725, DOI 10.1037/0003-066X.49.8.725
   ERICSSON KA, 1993, PSYCHOL REV, V100, P363, DOI 10.1037/0033-295X.100.3.363
   Ericsson KA, 1996, ANNU REV PSYCHOL, V47, P273, DOI 10.1146/annurev.psych.47.1.273
   Faul F, 2007, BEHAV RES METHODS, V39, P175, DOI 10.3758/BF03193146
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Field A., 2013, DISCOVERING STAT USI
   Glenwick D., 2016, Handbook of methodological approaches to community-based research: Qualitative, quantitative
   GREEN SB, 1991, MULTIVAR BEHAV RES, V26, P499, DOI 10.1207/s15327906mbr2603_7
   Hedges L. V., 1984, STAT METHODS METAANA, V24, P25, DOI [DOI 10.1002/EV.1376, 10.1016/C2009-0-03396-0, DOI 10.1016/C2009-0-03396-0, 10.1002/ev.1376]
   ISO I, 2011, IEC25010
   Jorgensen M, 2007, J SYST SOFTWARE, V80, P1472, DOI 10.1016/j.jss.2006.09.047
   Kitchenham B, 2004, IEEE T SOFTWARE ENG, V30, P1023, DOI 10.1109/TSE.2004.104
   LARKIN J, 1980, SCIENCE, V208, P1335, DOI 10.1126/science.208.4450.1335
   Lee WK, 2001, J SYST ARCHITECT, V47, P427, DOI 10.1016/S1383-7621(01)00003-0
   Lui KM, 2006, INT J HUM-COMPUT ST, V64, P915, DOI 10.1016/j.ijhcs.2006.04.010
   MacCallum R, 2002, PRACTICE DICHOTOMIZA, V7, P10
   MacDorman KF, 2011, INT J HUM-COMPUT INT, V27, P280, DOI 10.1080/10447318.2011.540472
   Madeyski L, 2005, FRONT ARTIF INTEL AP, V130, P113
   Marakas GM, 1998, INFORM SYST RES, V9, P37, DOI 10.1287/isre.9.1.37
   Mayer R. E., 1997, HDB HUMAN COMPUTER I, P781, DOI 10.1016/B978-0-444-70536-5.50030-0
   MCDANIEL MA, 1988, J APPL PSYCHOL, V73, P327, DOI 10.1037/0021-9010.73.2.327
   MCKEITHEN KB, 1981, COGNITIVE PSYCHOL, V13, P307, DOI 10.1016/0010-0285(81)90012-8
   Miles J., 2001, APPL REGRESSION CORR
   Müller MM, 2007, EMPIR SOFTW ENG, V12, P593, DOI 10.1007/s10664-007-9048-2
   Müller MM, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P151, DOI 10.1109/METRIC.2004.1357899
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Nisbet R., 2009, HDB STAT ANAL DATA M
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Ricca F, 2007, PROC INT CONF SOFTW, P375
   Riley RD, 2010, BMJ-BRIT MED J, V340, DOI 10.1136/bmj.c221
   SHEPPARD SB, 1979, COMPUTER, V12, P41, DOI 10.1109/MC.1979.1658575
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   SOLOWAY E, 1983, COMMUN ACM, V26, P853, DOI 10.1145/182.358436
   SOLOWAY E, 1984, IEEE T SOFTWARE ENG, V10, P595, DOI 10.1109/TSE.1984.5010283
   Sonnentag S, 1998, J APPL PSYCHOL, V83, P703, DOI 10.1037/0021-9010.83.5.703
   Sonnentag S, 1995, BEHAV INFORM TECHNOL, V14, P289, DOI 10.1080/01449299508914648
   Votta LG, 1994, 9 INT SOFTW PROC WOR, P93
   Weisberg S, 2014, APPL LINEAR REGRESSI
   WEISER M, 1983, INT J MAN MACH STUD, V19, P391, DOI 10.1016/S0020-7373(83)80061-3
   Weiser M., 1981, PROGRAM SLICING
   WIEDENBECK S, 1985, INT J MAN MACH STUD, V23, P383, DOI 10.1016/S0020-7373(85)80041-9
   Williams Laurie, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P81, DOI 10.1109/ISSRE.2009.32
   WINSHIP C, 1984, AM SOCIOL REV, V49, P512, DOI 10.2307/2095465
   YE N, 1994, INT J HUM-COMPUT INT, V6, P105
NR 75
TC 34
Z9 35
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2017
VL 22
IS 5
BP 2457
EP 2542
DI 10.1007/s10664-016-9471-3
PG 86
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FE0PC
UT WOS:000407921200007
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Li, H
   Shang, WY
   Hassan, AE
AF Li, Heng
   Shang, Weiyi
   Hassan, Ahmed E.
TI Which log level should developers choose for a new logging statement?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Logging statement; Log level; Ordinal regression model
AB Logging statements are used to record valuable runtime information about applications. Each logging statement is assigned a log level such that users can disable some verbose log messages while allowing the printing of other important ones. However, prior research finds that developers often have difficulties when determining the appropriate level for their logging statements. In this paper, we propose an approach to help developers determine the appropriate log level when they add a new logging statement. We analyze the development history of four open source projects (Hadoop, Directory Server, Hama, and Qpid), and leverage ordinal regression models to automatically suggest the most appropriate level for each newly-added logging statement. First, we find that our ordinal regression model can accurately suggest the levels of logging statements with an AUC (area under the curve; the higher the better) of 0.75 to 0.81 and a Brier score (the lower the better) of 0.44 to 0.66, which is better than randomly guessing the appropriate log level (with an AUC of 0.50 and a Brier score of 0.80 to 0.83) or naively guessing the log level based on the proportional distribution of each log level (with an AUC of 0.50 and a Brier score of 0.65 to 0.76). Second, we find that the characteristics of the containing block of a newly-added logging statement, the existing logging statements in the containing source code file, and the content of the newly-added logging statement play important roles in determining the appropriate log level for that logging statement.
C1 [Li, Heng; Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON, Canada.
   [Shang, Weiyi] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
C3 Queens University - Canada; Concordia University - Canada
RP Li, H (corresponding author), Queens Univ, SAIL, Kingston, ON, Canada.
EM hengli@cs.queensu.ca; shang@encs.concordia.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan, Ahmed/AAB-7241-2019; Ali,
   Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; 
CR Aguinis H., 2004, Regression analysis for categorical moderators
   [Anonymous], 2010, PROC ACMIEEE INT S E
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2011, INT GEOPHYS SERIES
   Brier G. W., 1950, MON WEATHER REV, V78, P1, DOI 10.1175/1520-0493(1950)078andlt;0001:VOFEITandgt;2.0.CO;2
   Cohen J., 2013, APPL MULTIPLE REGRES
   Cullmann A.D., 2015, HANDTILL2001 MULTIPL
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Eberhardt C., 2014, THE ART OF LOGGING
   EFRON B, 1986, J AM STAT ASSOC, V81, P461, DOI 10.2307/2289236
   EFRON B, 1979, ANN STAT, V7, P1, DOI 10.1214/aos/1176344552
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Gulcu C., 2003, COMPLETE LOG4J MANUA
   Hand DJ, 2001, MACH LEARN, V45, P171, DOI 10.1023/A:1010920819831
   Harrell FE, 2015, SPRINGER SER STAT, DOI 10.1007/978-3-319-19425-7
   Harrell Jr FE, 2014, CONTRIBUTIONS C DUPO
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Kabinna S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P154, DOI [10.1145/2901739.2901769, 10.1109/MSR.2016.025]
   Kabinna S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P326, DOI 10.1109/SANER.2016.29
   Kuhn M., 2018, APPL PREDICTIVE MODE
   LAWLESS JF, 1978, BIOMETRICS, V34, P318, DOI 10.2307/2530022
   Mant J, 2009, HEALTH TECHNOL ASSES, V13, pIX, DOI 10.3310/hta13320
   MANTEL N, 1970, TECHNOMETRICS, V12, P621, DOI 10.2307/1267207
   Mariani Leonardo, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P117, DOI 10.1109/ISSRE.2008.48
   Mariani L, 2009, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2009.5070556
   MCCULLAGH P, 1980, J ROY STAT SOC B MET, V42, P109
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   MCKELVEY RD, 1975, J MATH SOCIOL, V4, P103, DOI 10.1080/0022250X.1975.9989847
   MSDN, 2011, LOGG AN EXC
   Oliner A, 2012, COMMUN ACM, V55, P63, DOI 10.1145/2076450.2076466
   Pecchia A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P169, DOI 10.1109/ICSE.2015.145
   Shang W., 2011, P 2011 18 WORKING C, P335, DOI DOI 10.1109/WCRE.2011.48
   Shang WY, 2014, J SOFTW-EVOL PROC, V26, P3, DOI 10.1002/smr.1579
   Sommer S, 1996, J R STAT SOC C-APPL, V45, P15
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yuan D., 2012, P 2012 USENIX S OP S, P293
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P143
   Yuan D, 2011, ACM SIGPLAN NOTICES, V46, P3, DOI 10.1145/1961296.1950369
   Yuan Ding, 2014, 11 USENIX S OPERATIN, P249
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 43
TC 70
Z9 76
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2017
VL 22
IS 4
BP 1684
EP 1716
DI 10.1007/s10664-016-9456-2
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FB6ZI
UT WOS:000406290500003
DA 2024-07-18
ER

PT J
AU Allix, K
   Bissyandé, TF
   Jérome, Q
   Klein, J
   State, R
   Le Traon, Y
AF Allix, Kevin
   Bissyande, Tegawende F.
   Jerome, Quentin
   Klein, Jacques
   State, Radu
   Le Traon, Yves
TI Empirical assessment of machine learning-based malware detectors for
   Android Measuring the gap between in-the-lab and in-the-wild validation
   scenarios
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning; Ten-Fold; Malware; Android
ID CLASSIFICATION; EXECUTABLES
AB To address the issue of malware detection through large sets of applications, researchers have recently started to investigate the capabilities of machine-learning techniques for proposing effective approaches. So far, several promising results were recorded in the literature, many approaches being assessed with what we call in the lab validation scenarios. This paper revisits the purpose of malware detection to discuss whether such in the lab validation scenarios provide reliable indications on the performance of malware detectors in real-world settings, aka in the wild. To this end, we have devised several Machine Learning classifiers that rely on a set of features built from applications' CFGs. We use a sizeable dataset of over 50 000 Android applications collected from sources where state-of-the art approaches have selected their data. We show that, in the lab, our approach outperforms existing machine learning-based approaches. However, this high performance does not translate in high performance in the wild. The performance gap we observed-F-measures dropping from over 0.9 in the lab to below 0.1 in the wild-raises one important question: How do state-of-the-art approaches perform in the wild?
C1 [Allix, Kevin; Bissyande, Tegawende F.; Jerome, Quentin; Klein, Jacques; State, Radu; Le Traon, Yves] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, 4 Rue Alphonse Weicker, L-2721 Luxembourg, Luxembourg.
C3 University of Luxembourg
RP Allix, K (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, 4 Rue Alphonse Weicker, L-2721 Luxembourg, Luxembourg.
EM kevin.allix@uni.lu
RI Allix, Kevin/AAF-3197-2021; LE TRAON, Yves/T-2911-2019
OI Allix, Kevin/0000-0003-3221-7266; State, Radu/0000-0002-4751-9577; LE
   TRAON, Yves/0000-0002-1045-4861; Klein, Jacques/0000-0003-4052-475X
CR Allix K, 2014, COMP SOFTW APPL C CO
   Amos B, 2013, INT WIREL COMMUN, P1666, DOI 10.1109/IWCMC.2013.6583806
   AndroGuard, 2013, APKTOOL REV ENG ANDR
   [Anonymous], 2014, P 4 ACM C DAT APPL S
   AppBrain, 2013, COMP FREE PAID ANDR
   AppBrain, 2013, NUMB AV ANDR APPL
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Canfora G, 2013, 2013 8 INT C AV REL
   Cesare S., 2010, Proceedings of the Eighth Australasian Symposium on Parallel and Distributed Computing, V107, P61
   Cohen W.W., 1995, P 12 INT C MACH LEAR, P115, DOI [DOI 10.1016/B978-1-55860-377-6.50023-2, 10.1016/B978-1-55860-377-6.50023-2]
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Demme J., 2013, P 40 ANN INT S COMP, P559, DOI [DOI 10.1145/2485922.2485970, 10.1145/2485922]
   Enck W, 2011, P 20 USENIX C SEC SE, P2
   Felt A. P., 2011, P 1 ACM WORKSH SEC P, P3, DOI DOI 10.1145/2046614.2046618
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Henchiri O, 2006, IEEE DATA MINING, P891
   Jacob A., 2007, P 1 INT WORKSHOP HIG, P31
   Kephart J. O., 1994, Artificial Life IV. Proceedings of the Fourth International Workshop on the Synthesis and Simulation of Living Systems, P130
   Kolter JZ, 2006, J MACH LEARN RES, V7, P2721
   McLachlan G., 2005, ANAL MICROARRAY GENE, V422
   Perdisci R, 2008, PATTERN RECOGN LETT, V29, P1941, DOI 10.1016/j.patrec.2008.06.016
   Perdisci R, 2008, ANN COMPUT SECURITY, P301, DOI 10.1109/ACSAC.2008.22
   Pieterse H., 2012, Information Security for South Africa, P1
   Pouik G0rfi31d, 2012, PHRACK, V14
   Quinlan J.R.C., 1993, C4 5 PROGRAMS MACHIN
   Rossow C, 2012, P IEEE S SECUR PRIV, P65, DOI 10.1109/SP.2012.14
   Sahs J., 2012, 2012 European Intelligence and Security Informatics Conference (EISIC), P141, DOI 10.1109/EISIC.2012.34
   Santos I, 2009, ICEIS 2009 : PROCEEDINGS OF THE 11TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL AIDSS, P317
   Schultz MG, 2001, P IEEE S SECUR PRIV, P38, DOI 10.1109/SECPRI.2001.924286
   Tahan G, 2012, J MACH LEARN RES, V13, P949
   Van Hulse J., 2007, P 24 INT C MACH LEAR, DOI [DOI 10.1145/1273496.1273614, 10.1145/1273496.1273614]
   Wu DJ, 2012, ASIA JT CONF INF SEC, P62, DOI 10.1109/AsiaJCIS.2012.18
   Yerima SY, 2013, INT CON ADV INFO NET, P121, DOI 10.1109/AINA.2013.88
   Zhang BY, 2007, LECT NOTES COMPUT SC, V4610, P468
   Zhou YJ, 2012, P IEEE S SECUR PRIV, P95, DOI 10.1109/SP.2012.16
NR 36
TC 73
Z9 83
U1 0
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2016
VL 21
IS 1
BP 183
EP 211
DI 10.1007/s10664-014-9352-6
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI2SQ
UT WOS:000373349300007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Eyolfson, J
   Tan, L
   Lam, P
AF Eyolfson, Jon
   Tan, Lin
   Lam, Patrick
TI Correlations between bugginess and time-based commit characteristics
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug detection; Empirical study; Source control system
ID SOFTWARE; FAULTS
AB Modern software is often developed over many years with hundreds of thousands of commits. Commit metadata is a rich source of time-based characteristics, including the commit's time of day and the commit frequency and seniority of its author. The "bugginess" of a commit is also a critical property of that commit. In this paper, we investigate the correlation between a commit's time-based characteristics and its "bugginess"; such results can be useful for software developers and software engineering researchers. For instance, developers or code reviewers might be well-advised to thoroughly verify commits that are more likely to be buggy. In this paper, we study the correlation between a commit's bugginess and the time of day of the commit, the day of week of the commit, the commit frequency and seniority of the commit authors, and whether or not the developers have marked a commit as a "stable" commit. We survey three widely-used open source projects: the Linux kernel, PostgreSQL, and the Xorg server. Our main findings include: (1) commits between midnight and 4 AM (referred to as late-night commits) are significantly buggier and commits between 8 AM and noon are less buggy, implying that developers may want to double-check their own late-night commits; (2) daily-committing developers produce less-buggy commits, indicating that we may want to promote the practice of daily-committing developers reviewing other developers' commits; (3) the bugginess of commits versus day-of-week varies for different software projects; and (4) stable commits are significantly less buggy than commits in general.
C1 [Eyolfson, Jon; Tan, Lin; Lam, Patrick] Univ Waterloo, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Eyolfson, J (corresponding author), Univ Waterloo, Waterloo, ON N2L 3G1, Canada.
EM jon@eyolfson.com; lintan@uwaterloo.ca; p.lam@ece.uwaterloo.ca
OI Tan, Lin/0000-0002-6690-8332
FU Canada's Natural Science and Engineering Research Council; Ontario
   Graduate Scholarship
FX This submission extends a previous publication on the same subject. A
   paragraph at the end of Section 1 explains the relationship of this work
   with our previous work. This work is supported by Canada's Natural
   Science and Engineering Research Council and an Ontario Graduate
   Scholarship. We would also like to acknowledge help from the Statistical
   Consulting Service at the University of Waterloo. We thank Tian Jiang
   for identifying the precision and recall of the heuristic for
   identifying bug-fixing commits in Xorg.
CR [Anonymous], 2008, ICSE
   [Anonymous], ICSE
   [Anonymous], ASE
   [Anonymous], 2007, PROMISE
   Benjamini Y, 2001, ANN STAT, V29, P1165
   Bird C, 2012, P INT WORK C MIN SOF
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bird C, 2009, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2009.5070550
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Chou Andy, 2001, SOSP, P73, DOI 10.1145/502034.502042
   Engler D., 2001, Operating Systems Review, V35, P57, DOI 10.1145/502059.502041
   Eyolfson J, 2011, MSR
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Guo L, 2004, ISSRE
   Haas R, 2012, SO WHY ISNT POSTGRES
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herraiz Israel, 2007, 2007 IEEE International Conference on Software Maintenance, P405, DOI 10.1109/ICSM.2007.4362653
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Sliwerski J., 2005, Proc. MSR 2005, P24
   Spinellis D., 2006, GSD 06, P73
   Spinellis D J, 2006, GSD 06, p[73, 79]
   Swift M. M., 2003, Operating Systems Review, V37, P207, DOI 10.1145/1165389.945466
   Tian Y, 2012, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2012.6227176
   Zimmermann T, 2004, MSR, P2
NR 33
TC 27
Z9 27
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2014
VL 19
IS 4
BP 1009
EP 1039
DI 10.1007/s10664-013-9245-0
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH8LE
UT WOS:000336388500007
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lavazza, L
AF Lavazza, Luigi
TI An evaluation of the statistical convertibility of Function Points into
   COSMIC Function Points
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Functional size measurement; Function point analysis; COSMIC function
   points; Functional size measure convertibility; Statistical confidence
ID IFPUG
AB Since the introduction of COSMIC Function Points, the problem of converting historical data measured using traditional Function Points into COSMIC measures have arisen. To this end, several researchers have investigated the possibility of identifying the relationship between the two measures by means of statistical methods. This paper aims at improving statistical convertibility of Function Points into COSMIC Function Points by improving previous work with respect to aspects-like outlier identification and exclusion, model non-linearity, applicability conditions, etc.-which up to now were not adequately considered, with the purpose of confirming, correcting or enhancing current models. Available datasets including software sizes measured both in Function Points and COSMIC Function Points were analyzed. The role of outliers was studied; non linear models and piecewise linear models were derived, in addition to linear models. Models based on transactions only were also derived. Confidence intervals were used throughout the paper to assess the values of the models' parameters. The dependence of the ratio between Function Points and COSMIC Function Points on size was studied. The union of all the available datasets was also studied, to overcome problems due to the relatively small size of datasets. It is shown that outliers do affect the linear models, typically increasing the slope of the regression lines; however, this happens mostly in small datasets: in the union of the available datasets there is no outlier that can influence the model. Conditions for the applicability of the statistical conversion are identified, in terms of relationships that must hold among the basic functional components of Function Point measures. Non-linear models are shown to represent well the relationships between the two measures, since the ratio between COSMIC Function Points and Function Points appears to increase with size. In general, it is confirmed that convertibility can be modeled by different types of models. This is a problem for practitioners, who have to choose one of these models. Anyway, a few practical suggestions can be derived from the results reported here. The model assuming that one FP is equal to one CFP causes the biggest conversion errors observed and is not generally supported. All the considered datasets are characterized by a ratio of transaction to data functions that is fairly constant throughout each dataset: this can be regarded as a condition for the applicability of current models; under this condition non-linear (log-log) models perform reasonably well. The fact that in Function Point Analysis the size of a process is limited, while it is not so in the COSMIC method, seems to be the cause of non linearity of the relationship between the two measures. In general, it appears that the conversion can be successfully based on transaction functions alone, without losing in precision.
C1 Univ Insubria, Dipartimento Sci Teor & Applicate, I-21100 Varese, Italy.
C3 University of Insubria
RP Lavazza, L (corresponding author), Univ Insubria, Dipartimento Sci Teor & Applicate, Via Mazzini 5, I-21100 Varese, Italy.
EM luigi.lavazza@uninsubria.it
RI Lavazza, Luigi/AAF-5323-2020
OI Lavazza, Luigi/0000-0002-5226-4337
FU project "Metodi, tecniche e strumenti per l'analisi, l'implementazione e
   la valutazione di sistemi software"; Universita degli Studi
   dell'Insubria
FX The research presented in this paper has been partially funded by the
   project "Metodi, tecniche e strumenti per l'analisi, l'implementazione e
   la valutazione di sistemi software" funded by the Universita degli Studi
   dell'Insubria.
CR [Anonymous], COMP STUDY CASE COSM
   [Anonymous], IEEE 5 INT S SOFTW M
   [Anonymous], 11 IEEE INT S SOFTW
   [Anonymous], IEEE 11 INT S SOFTW
   [Anonymous], 209262003 ISOIEC
   [Anonymous], ACM P 5 INT C PRED M
   [Anonymous], 19761 COSMIC ISOIEC
   [Anonymous], 2003, P 13 INT WORKSH SOFT
   [Anonymous], SOFTWARE MEASUREMENT
   [Anonymous], 2018, US COSMIC FUNCT SIZ
   [Anonymous], 247502005 ISOIEC
   [Anonymous], 2009, WORLDW SOFTW DEV BEN
   [Anonymous], 20 INT WORKSH SOFTW
   [Anonymous], 2010, FUNCT POINT COUNT PR
   [Anonymous], P JOINT SHARE GUIDE
   [Anonymous], ACM P 5 INT C PRED M
   [Anonymous], UKSMA COSMIC INT C S
   [Anonymous], CITESEER
   [Anonymous], P JOINT C 22 INT WOR
   [Anonymous], T SOFTW ENG
   [Anonymous], P IWSM 05 MONTR CAN
   [Anonymous], MENS 2006 4 5 NOV 20
   Cook R.D., 1982, RESIDUALS INFLUENCE, V5
   Cuadrado-Gallego JJ, 2007, LECT NOTES COMPUT SC, V4589, P273
   Cuadrado-Gallego JJ, 2008, J SYST SOFTWARE, V81, P661, DOI 10.1016/j.jss.2007.07.042
   Cuadrado-Gallego JJ, 2010, INFORM SOFTWARE TECH, V52, P347, DOI 10.1016/j.infsof.2009.12.001
   Cuadrado-Gallego JJ, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P427, DOI 10.1109/SEAA.2008.75
   Demirors O, 2009, IEEE SOFTWARE, V26, P71, DOI 10.1109/MS.2009.60
   JONES C, 1995, COMPUTER, V28, P87, DOI 10.1109/2.471193
   Kitchenham B, 1997, IEEE SOFTWARE, V14, P29, DOI 10.1109/MS.1997.582972
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   Lavazza L, 2011, INFORM SOFTWARE TECH, V53, P874, DOI 10.1016/j.infsof.2011.02.005
   Mendes Emilia., 2008, COST ESTIMATION TECH
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
NR 34
TC 2
Z9 2
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2014
VL 19
IS 4
BP 1075
EP 1110
DI 10.1007/s10664-013-9246-z
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH8LE
UT WOS:000336388500009
DA 2024-07-18
ER

PT J
AU Seo, YS
   Bae, DH
AF Seo, Yeong-Seok
   Bae, Doo-Hwan
TI On the value of outlier elimination on software effort estimation
   research
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software cost estimation; Software effort estimation; Outlier
   elimination; Software data quality
ID REGRESSION-MODELS; COST ESTIMATION; COMPANY
AB Producing accurate and reliable software effort estimation has always been a challenge for both academic research and software industries. Regarding this issue, data quality is an important factor that impacts the estimation accuracy of effort estimation methods. To assess the impact of data quality, we investigated the effect of eliminating outliers on the estimation accuracy of commonly used software effort estimation methods. Based on three research questions, we associatively analyzed the influence of outlier elimination on the accuracy of software effort estimation by applying five methods of outlier elimination (Least trimmed squares, Cook's distance, K-means clustering, Box plot, and Mantel leverage metric) and two methods of effort estimation (Least squares regression and Estimation by analogy with the variation of the parameters). Empirical experiments were performed using industrial data sets (ISBSG Release 9, Bank and Stock data sets that are collected from financial companies, and a Desharnais data set in the PROMISE repository). In addition, the effect of the outlier elimination methods is evaluated by the statistical tests (the Friedman test and the Wilcoxon signed rank test). The experimental results derived from the evaluation criteria showed that there was no substantial difference between the software effort estimation results with and without outlier elimination. However, statistical analysis indicated that outlier elimination leads to a significant improvement in the estimation accuracy on the Stock data set (in case of some combinations of outlier elimination and effort estimation methods). In addition, although outlier elimination did not lead to a significant improvement in the estimation accuracy on the other data sets, our graphical analysis of errors showed that outlier elimination can improve the likelihood to produce more accurate effort estimates for new software project data to be estimated. Therefore, from a practical point of view, it is necessary to consider the outlier elimination and to conduct a detailed analysis of the effort estimation results to improve the accuracy of software effort estimation in software organizations.
C1 [Seo, Yeong-Seok; Bae, Doo-Hwan] Korea Adv Inst Sci & Technol, Coll Informat Sci & Technol, Dept Comp Sci, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Seo, YS (corresponding author), Korea Adv Inst Sci & Technol, Coll Informat Sci & Technol, Dept Comp Sci, Taejon 305701, South Korea.
EM ysseo@se.kaist.ac.kr; bae@se.kaist.ac.kr
RI Bae, Doo-Hwan/C-1538-2011; Seo, Yeong-Seok/AAF-2849-2019
OI Seo, Yeong-Seok/0000-0002-5319-7674
FU Defense Acquisition Program Administration; Agency for Defense
   Development
FX The authors would like to thank the anonymous reviewers for their
   valuable comments and suggestions to improve the quality of the paper.
   This work was partially supported by Defense Acquisition Program
   Administration and Agency for Defense Development under the contract.
CR Agullò J, 2008, J MULTIVARIATE ANAL, V99, P311, DOI 10.1016/j.jmva.2006.06.005
   Alpaydin E, 2004, INTRO MACHINE LEARNI
   [Anonymous], 2007, The promise repository of empirical software engineering data
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 2005, P INT S EMP SOFTW EN
   [Anonymous], 2002, Applied Statistics for Software Managers
   [Anonymous], 2003, CMMI guidlines for process integration and product improvement
   Barret V., 1994, Outliers in statistical data
   Cartwright MH, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P154, DOI 10.1109/METRIC.2003.1232464
   Chan VKY, 2007, APPLIED COMPUTING 2007, VOL 1 AND 2, P1484, DOI 10.1145/1244002.1244319
   Chiu NH, 2007, J SYST SOFTWARE, V80, P628, DOI 10.1016/j.jss.2006.06.006
   COOK RD, 1977, TECHNOMETRICS, V19, P15, DOI 10.2307/1268249
   Tronto IFB, 2007, IEEE IJCNN, P771
   Desharnais J. M., 1989, Analyse statistique de la productivitie des projects informatique a partie de la technique des point des function
   Field A., 2009, Discovering statistics with SPSS, V3rd
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Hamilton LawrenceC., 1992, REGRESSION GRAPHICS
   Han J., 2006, DATA MINING CONCEPTS, DOI 10.1016/C2009-0-61819-5
   Huang SJ, 2006, INFORM SOFTWARE TECH, V48, P1034, DOI 10.1016/j.infsof.2005.12.020
   *IFPUG, 1994, FUNCT POINT COUNT PR
   Jain AK, 1999, ACM COMPUT SURV, V31, P264, DOI 10.1145/331499.331504
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jeffery R, 2000, INFORM SOFTWARE TECH, V42, P1009, DOI 10.1016/S0950-5849(00)00153-1
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Keung JW, 2008, IEEE T SOFTWARE ENG, V34, P471, DOI 10.1109/TSE.2008.34
   Kirsopp C., 2002, IEE Proceedings-Software, V149, P123, DOI 10.1049/ip-sen:20020695
   Kitchenham B, 1999, INFORM SCI DISCUSSIO
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Kultur Y., 2008, SIGSOFT '08/FSE-16: Proceedings of the 16th ACM SIGSOFT International Symposium on Foundations of software engineering, P330
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   Liu Q, 2008, SOFTWARE QUAL J, V16, P411, DOI 10.1007/s11219-007-9041-4
   Lokan Chris., 2006, 2006 ACMIEEE INT S E, P75, DOI DOI 10.1145/1159733.1159747
   MacDonell SG, 2003, J SYST SOFTWARE, V66, P91, DOI 10.1016/S0164-1212(02)00067-5
   Mendes E, 2008, EMPIR SOFTW ENG, V13, P3, DOI 10.1007/s10664-007-9045-5
   Mendes M., 2003, Pakistan Journal of Information and Technology, V2, P135
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P409, DOI 10.1007/s10515-010-0070-z
   Mittas N, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P70
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   MIYAZAKI Y, 1991, INFORM SOFTWARE TECH, V33, P239, DOI 10.1016/0950-5849(91)90139-3
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Ott R.L. Longnecker., 2008, An introduction to statistical methods and data analysis
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   Rousseeuw P.J., 1987, ROBUST REGRESSION OU
   Rousseeuw PJ, 2006, DATA MIN KNOWL DISC, V12, P29, DOI 10.1007/s10618-005-0024-4
   ROUSSEEUW PJ, 1987, J COMPUT APPL MATH, V20, P53, DOI 10.1016/0377-0427(87)90125-7
   ROUSSEEUW PJ, 1984, J AM STAT ASSOC, V79, P871, DOI 10.2307/2288718
   Seo YS, 2009, ASIA PAC SOFWR ENG, P3, DOI 10.1109/APSEC.2009.57
   Seo Yeong-Seok., 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, P25
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Strike K, 2001, IEEE T SOFTWARE ENG, V27, P890, DOI 10.1109/32.962560
   Van Hulse J, 2008, J SYST SOFTWARE, V81, P691, DOI 10.1016/j.jss.2007.07.043
   Wen JF, 2009, ASIA PAC SOFWR ENG, P179, DOI 10.1109/APSEC.2009.40
NR 55
TC 33
Z9 36
U1 0
U2 24
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2013
VL 18
IS 4
BP 659
EP 698
DI 10.1007/s10664-012-9207-y
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 174AX
UT WOS:000321126100002
DA 2024-07-18
ER

PT J
AU Sim, SE
   Alspaugh, TA
AF Sim, Susan Elliott
   Alspaugh, Thomas A.
TI Getting the whole story: an experience report on analyzing data elicited
   using the war stories procedure
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Qualitative data analysis; Figuration; Methodical; Amethodical
AB When analyzing data elicited using the "war stories" technique, previously introduced by Lutters and Seaman (Inf Softw Technol 49(6):576-587, 2007), we encountered unexpected challenges in applying standard qualitative analysis techniques. After reviewing the literature on stories and storytelling, we realized that a richer analysis would be possible if we accorded more respect to the data's structure and nature as stories, rather than treating our participants' utterances simply as textual data. We report on five lessons learned regarding how we can better analyze war stories as stories: 1) war stories tend to be about exceptional situations; 2) war stories tend to be diverse and resistant to being combined into a single grand narrative; 3) the humanities can be a valuable resource for analyzing war stories; 4) war stories are not just text, they are also performances; and 5) war stories are not just data, they are also instructive and evocative.
C1 [Sim, Susan Elliott] Univ Calif Irvine, Dept Informat, Irvine, CA 92697 USA.
   [Alspaugh, Thomas A.] Georgetown Univ, Dept Comp Sci, Washington, DC 20057 USA.
C3 University of California System; University of California Irvine;
   Georgetown University
RP Sim, SE (corresponding author), Univ Calif Irvine, Dept Informat, Irvine, CA 92697 USA.
EM ses@ics.uci.edu; thomas.alspaugh@cs.georgetown.edu
CR Aristotle, POETICS
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   BOJE DM, 1991, ADMIN SCI QUART, V36, P106, DOI 10.2307/2393432
   Brown J.S., 2002, SOCIAL LIFE INFORM
   BRUNER J, 2003, NARRATIVE INTELLIGEN, P63
   CAMPBELL RL, 1992, PSYCHOLOGY OF EXPERTISE, P269
   Chechik M, 2003, ACM T SOFTW ENG METH, V12, P371, DOI 10.1145/990010.990011
   Corbin J, 2008, Techniques and procedures for developing grounded theory, V3rd
   Czarniawska-Joerges Barbara., 1997, NARRATING ORG DRAMAS
   Dautenhahn K., 2003, NARRATIVE INTELLIGEN, P63
   Eisenstadt M, 1997, COMMUN ACM, V40, P30, DOI 10.1145/248448.248456
   ERICSSON KA, 1993, PSYCHOL REV, V100, P363, DOI 10.1037/0033-295X.100.3.363
   FLANAGAN JC, 1954, PSYCHOL BULL, V51, P327, DOI 10.1037/h0061470
   Fuggetta A., 2000, P C LIM IR FUT SOFTW, P25, DOI DOI 10.1145/336512.336521
   Geertz C., 2002, Culture: Critical concepts in sociology, P173
   Goguen J.A., 1993, 1993 P IEEE INT S RE, P152, DOI DOI 10.1109/ISRE.1993.324822
   Gremler DD, 2004, J SERV RES-US, V7, P65, DOI 10.1177/1094670504266138
   Guba E. G., 1989, 4 GENERATION EVALUAT
   Haley CB, 2008, IEEE T SOFTWARE ENG, V34, P133, DOI 10.1109/TSE.2007.70754
   Haraway D., 1997, FEMALEMAN MEETS ONCO
   Hettlage R., 2006, The Critical Incident Technique in knowledge management related contexts: a tool for exploration / planning, evaluation, and empowerment/animation
   Holstein J., 1995, ACTIVE INTERVIEW
   Holtzblatt K., 1997, CONTEXTUAL DESIGN DE
   KAY P, 1984, AM ANTHROPOL, V86, P65, DOI 10.1525/aa.1984.86.1.02a00050
   Kuhn T. S., 1970, STRUCTURE SCI REVOLU
   Lofland John., 1994, ANAL SOCIAL SETTINGS
   Lutters WG, 2007, INFORM SOFTWARE TECH, V49, P576, DOI 10.1016/j.infsof.2007.02.013
   Lyotard Jean-Francois., 1993, MORALITES POSTMODERN
   Maiden N, 2007, PROC INT CONF SOFTW, P632
   McCall M.W., 1988, The lessons of experience: How successful executives develop on the job
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Orr J., 1996, TALKING MACHINES
   Pentland BT, 1999, ACAD MANAGE REV, V24, P711
   Propp V., 1968, Morphology of the Folktale, V2 nd
   Sabetzadeh M, 2006, REQUIR ENG, V11, P174, DOI 10.1007/s00766-006-0032-y
   Schank R.C., 1995, Knowledge and memory, V8, P1, DOI 10.5860/choice.33-3602
   Schank Roger C., 1977, SCRIPTS PLANS GOALS
   Schneider Joseph., 2005, DONNA HARAWAY LIVE T
   SEAMAN CB, 2010, GUIDE ADV EMPIRICAL, pCH2
   Sharp H., 1999, P 10 INT WORKSH DAT, P387, DOI DOI 10.1109/DEXA.1999.795198
   Sim SE, 1998, PROG COMPREHEN, P180, DOI 10.1109/WPC.1998.693351
   Sim SE, 2008, INT REQUIR ENG CONF, P105, DOI 10.1109/RE.2008.52
   Strauss A.L., 1990, BASICS QUALITATIVE R
   Trochim W.M. K., 2010, RES METHODS KNOWLEDG, V3rd
   Truex D., 2000, Accounting, Management and Information Technologies, V10, P53, DOI 10.1016/S0959-8022(99)00009-0
   Umarji M, 2008, INT FED INFO PROC, V275, P257
   Viller S, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P6, DOI 10.1109/ISRE.1999.777980
NR 47
TC 3
Z9 4
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2011
VL 16
IS 4
SI SI
BP 460
EP 486
DI 10.1007/s10664-011-9157-9
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 778ZA
UT WOS:000291746700003
OA hybrid
DA 2024-07-18
ER

PT J
AU Garvin, BJ
   Cohen, MB
   Dwyer, MB
AF Garvin, Brady J.
   Cohen, Myra B.
   Dwyer, Matthew B.
TI Evaluating improvements to a meta-heuristic search for constrained
   interaction testing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Constrained combinatorial interaction testing; Configurable software;
   Search based software engineering
ID TEST SUITES; ALGORITHMS; GENERATION; STATE
AB Combinatorial interaction testing (CIT) is a cost-effective sampling technique for discovering interaction faults in highly-configurable systems. Constrained CIT extends the technique to situations where some features cannot coexist in a configuration, and is therefore more applicable to real-world software. Recent work on greedy algorithms to build CIT samples now efficiently supports these feature constraints. But when testing a single system configuration is expensive, greedy techniques perform worse than meta-heuristic algorithms, because greedy algorithms generally need larger samples to exercise the same set of interactions. On the other hand, current meta-heuristic algorithms have long run times when feature constraints are present. Neither class of algorithm is suitable when both constraints and the cost of testing configurations are important factors. Therefore, we reformulate one meta-heuristic search algorithm for constructing CIT samples, simulated annealing, to more efficiently incorporate constraints. We identify a set of algorithmic changes and experiment with our modifications on 35 realistic constrained problems and on a set of unconstrained problems from the literature to isolate the factors that improve performance. Our evaluation determines that the optimizations reduce run time by a factor of 90 and accomplish the same coverage objectives with even fewer system configurations. Furthermore, the new version compares favorably with greedy algorithms on real-world problems, and, though our modifications were aimed at constrained problems, it shows similar advantages when feature constraints are absent.
C1 [Garvin, Brady J.; Cohen, Myra B.; Dwyer, Matthew B.] Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
C3 University of Nebraska System; University of Nebraska Lincoln
RP Garvin, BJ (corresponding author), Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
EM bgarvin@cse.unl.edu; myra@cse.unl.edu; dwyer@cse.unl.edu
OI Dwyer, Matthew/0000-0002-1937-1544
FU Graduate Assistance in Areas of National Need (GAANN) [84.200A];
   National Science Foundation [CNS-0454203, CCF-0541263, CNS-0720654,
   CCF-0747009]; Air Force Office of Scientific Research
   [FA9550-09-1-0129]; Army Research Office [W91NF-04-1-0104]; Defense
   Advanced Research Projects Agency [HR0011-09-1-0031]; National
   Aeronautics and Space Administration [NNX08AV20A]; Direct For Computer &
   Info Scie & Enginr; Division of Computing and Communication Foundations
   [0747009] Funding Source: National Science Foundation
FX We would like to thank Jiangfan Shi for the use of his constrained mAETG
   tool and for supplying the CIT models for evaluation. Brady Garvin is
   supported in part by CFDA#84.200A: Graduate Assistance in Areas of
   National Need (GAANN). This work is supported in part by the National
   Science Foundation through awards CNS-0454203, CCF-0541263, CNS-0720654,
   and CCF-0747009, by the Air Force Office of Scientific Research through
   award FA9550-09-1-0129, the Army Research Office through DURIP award
   W91NF-04-1-0104, the Defense Advanced Research Projects Agency through
   award HR0011-09-1-0031 and through the National Aeronautics and Space
   Administration under grant number NNX08AV20A. Any opinions, findings,
   conclusions, or recommendations expressed in this material are those of
   the authors and do not necessarily reflect the position or policy of
   NSF, AFOSR, ARO, DARPA or NASA.
CR [Anonymous], THESIS SIMON FRASER
   Bryce RC, 2005, PROC INT CONF SOFTW, P146
   Bryce RC, 2006, INFORM SOFTWARE TECH, V48, P960, DOI 10.1016/j.infsof.2006.03.004
   Bryce RC, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1082
   CALVAGNA A, 2009, 3 INT C TESTS PROOFS, P27
   Chateauneuf M, 2002, J COMB DES, V10, P217, DOI 10.1002/jcd.10002
   Clements P., 2002, Software product lines
   Coello CAC, 2002, COMPUT METHOD APPL M, V191, P1245, DOI 10.1016/S0045-7825(01)00323-1
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen MB, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P394, DOI 10.1109/ISSRE.2003.1251061
   Cohen MB, 2003, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2003.1201186
   COHEN MB, 2007, 5 INT S SOFTW TEST A, P129
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Cohen MB, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P121, DOI 10.1109/TAIC.PART.2007.17
   Colbourn C.J., 2004, Le Matematiche, VLIX, P125
   Colbourn C.J., Covering array tables
   Colbourn CJ, 2004, PROCEEDINGS OF THE IASTED INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P345
   Czerwonka J., 2006, PROC 24 PACIFIC NW S, P419
   EEN N, 2007, MINISAT C V1 14 1
   FOUCHE S, 2009, 7 INT S SOFTW TEST A, P177
   Garousi V., 2008, 10 ANN C GENETIC EVO, P1743
   Garvin BJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/SSBSE.2009.25
   GRIESKAMP W, 2009, TEST COMM SYST INT W
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1029
   Hartman A, 2004, DISCRETE MATH, V284, P149, DOI 10.1016/j.disc.2003.11.029
   Hnich B, 2006, CONSTRAINTS, V11, P199, DOI 10.1007/s10601-006-7094-9
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Lei Y, 1998, THIRD IEEE INTERNATIONAL HIGH-ASSURANCE SYSTEMS ENGINEERING SYMPOSIUM, PROCEEDINGS, P254, DOI 10.1109/HASE.1998.731623
   Lei Y, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P549
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   MALIK S, 2004, ZCHAFF
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   MEMON A, 2004, 26 INT C SOFTW ENG
   Nurmela KJ, 2004, DISCRETE APPL MATH, V138, P143, DOI 10.1016/S0166-218X(03)00291-9
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   QU X, 2008, 6 INT S SOFTW TEST A, P75
   Stevens B., 1998, THESIS U TORONTO
   Tai KC, 2002, IEEE T SOFTWARE ENG, V28, P109, DOI 10.1109/32.979992
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
NR 41
TC 150
Z9 162
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2011
VL 16
IS 1
BP 61
EP 102
DI 10.1007/s10664-010-9135-7
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 718CJ
UT WOS:000287097200004
DA 2024-07-18
ER

PT J
AU Koru, G
   Liu, HF
   Zhang, DS
   El Emam, K
AF Koru, Gunes
   Liu, Hongfang
   Zhang, Dongsong
   El Emam, Khaled
TI Testing the theory of relative defect proneness for closed-source
   software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software metrics; Software science; Size-defect relationship; Planning
   for software quality assurance; Closed-source software; Software
   inspections; Software reviews; Software testing
ID QUANTITATIVE-ANALYSIS; NEURAL-NETWORKS; FAULTS; NUMBER; INEQUALITIES;
   MODELS; SIZE
AB Recent studies on open-source software (OSS) products report that smaller modules are proportionally more defect prone compared to larger ones. This phenomenon, referred to as the Theory of Relative Defect Proneness (RDP), challenges the traditional QA approaches that give a higher priority to larger modules, and it attracts growing interest from closed-source software (CSS) practitioners. In this paper, we report the findings of a study where we tested the theory of RDP using ten CSS products. The results clearly confirm the theory of RDP. We also demonstrate the useful practical implications of this theory in terms of defect-detection effectiveness. Therefore, this study does not only make research contributions by rigorously testing a scientific theory for a different category of software products, but also provides useful insights and evidence to practitioners for revising their existing QA practices.
C1 [Koru, Gunes; Zhang, Dongsong] Univ Maryland Baltimore Cty, Baltimore, MD 21250 USA.
   [Liu, Hongfang] Georgetown Univ, Med Ctr, Washington, DC 20007 USA.
   [El Emam, Khaled] Childrens Hosp Eastern Ontario, Ottawa, ON KL1 8L1, Canada.
C3 University System of Maryland; University of Maryland Baltimore County;
   Georgetown University; University of Ottawa; Children's Hospital of
   Eastern Ontario
RP Koru, G (corresponding author), Univ Maryland Baltimore Cty, Baltimore, MD 21250 USA.
EM gkoru@umbc.edu
RI Koru, Gunes/AAR-5819-2020; Liu, Hongfang/ISU-9369-2023
OI Liu, Hongfang/0000-0002-4352-2533
CR AKIYAMA F, 1971, INFORMATION PROCESSI, V71, P353
   Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   [Anonymous], ROI SOFTWARE QUALITY
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   BRIAND LC, 2001, J SYST SOFTW, V56, P11
   Chayes Felix., 1971, Ratio correlation; a manual for students of petrology and geochemistry
   COX DR, 1972, J R STAT SOC B, V34, P187
   CROUCHLEY R, 1993, BIOMETRICS, V49, P1067, DOI 10.2307/2532248
   El Emam K, 2002, IEEE T SOFTWARE ENG, V28, P494, DOI 10.1109/TSE.2002.1000452
   El Emam K, 2008, IEEE SOFTWARE, V25, P84, DOI 10.1109/MS.2008.107
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   FUNAMI Y, 1976, P MRI 24 INT S COMP, P133
   GAFFNEY JE, 1984, IEEE T SOFTWARE ENG, V10, P459, DOI 10.1109/TSE.1984.5010260
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   HAMER PG, 1982, ICSE 82, P197
   Harrell F.E., 2001, Regression modeling strategies: with applications to linear models, logistic regression, and survival analysis
   HARRELL FE, 2005, DESIGN DESIGN PACKAG
   Hatton L, 1998, IEEE SOFTWARE, V15, P46, DOI 10.1109/52.676735
   Hatton L, 1997, IEEE SOFTWARE, V14, P89, DOI 10.1109/52.582978
   Huber P. J., 1967, Proc Fifth Berkeley Symp Math Stat Probab, V5, P221
   Kakwani N, 1997, J ECONOMETRICS, V77, P87, DOI 10.1016/S0304-4076(96)01807-6
   Khoshgoftaar TM, 1997, IEEE T NEURAL NETWOR, V8, P902, DOI 10.1109/72.595888
   Khoshgoftaar TM, 1996, IEEE T RELIAB, V45, P456, DOI 10.1109/24.537016
   Koru AG, 2008, EMPIR SOFTW ENG, V13, P473, DOI 10.1007/s10664-008-9080-x
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   KORU G, 2007, PROMISE 07, P115, DOI DOI 10.1109/PROMISE.2007.9
   Koru G, 2007, J MED INTERNET RES, V9, DOI 10.2196/jmir.9.2.e8
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   LIPOW M, 1982, IEEE T SOFTWARE ENG, V8, P437, DOI 10.1109/TSE.1982.235579
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   *NASA 4 5 FAC, 2009, METR DAT PROGR
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   OTTENSTEIN LM, 1979, IEEE T SOFTWARE ENG, V5, P504, DOI 10.1109/TSE.1979.234211
   Popper K., 2005, The logic of scientific discovery
   Porter A., 1998, Empirical Software Engineering, V3, P355, DOI 10.1023/A:1009776104355
   PORTER AA, 1990, IEEE SOFTWARE, V7, P46, DOI 10.1109/52.50773
   *PROM, 2007, PROM DAT REP
   Raymond E., 1999, CATHEDRAL BAZAAR MUS
   Rosenberg J, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P137, DOI 10.1109/METRIC.1997.637174
   SELBY RW, 1991, IEEE T SOFTWARE ENG, V17, P141, DOI 10.1109/32.67595
   SHEN VY, 1985, IEEE T SOFTWARE ENG, V11, P317, DOI 10.1109/TSE.1985.232222
   SHULL F, 2003, LECT NOTES EMPIRICAL, P39
   THAYER R, 1978, SOFTWARE RELIABILITY
   Therneau TM, 2000, STAT BIOL HEALTH
   WAGSTAFF A, 1991, SOC SCI MED, V33, P545, DOI 10.1016/0277-9536(91)90212-U
   Zhao LY, 2003, J SYST SOFTWARE, V66, P65, DOI 10.1016/S0164-1212(02)00064-X
NR 51
TC 19
Z9 21
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2010
VL 15
IS 6
BP 577
EP 598
DI 10.1007/s10664-010-9132-x
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 653OB
UT WOS:000282100100001
DA 2024-07-18
ER

PT J
AU Cleary, B
   Exton, C
   Buckley, J
   English, M
AF Cleary, Brendan
   Exton, Chris
   Buckley, Jim
   English, Michael
TI An empirical analysis of information retrieval based concept location
   techniques in software comprehension
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Information retrieval; Software comprehension; Empirical analysis
ID FEATURES; CODE
AB Concept location, the problem of associating human oriented concepts with their counterpart solution domain concepts, is a fundamental problem that lies at the heart of software comprehension. Recent research has attempted to alleviate the impact of the concept location problem through the application of methods drawn from the information retrieval (IR) community. Here we present a new approach based on a complimentary IR method which also has a sound basis in cognitive theory. We compare our approach to related work through an experiment and present our conclusions. This research adapts and expands upon existing language modelling frameworks in IR for use in concept location, in software systems. In doing so it is novel in that it leverages implicit information available in system documentation. Surprisingly, empirical evaluation of this approach showed little performance benefit overall and several possible explanations are forwarded for this finding.
C1 [Cleary, Brendan; Exton, Chris; Buckley, Jim; English, Michael] Univ Limerick, Limerick, Ireland.
C3 University of Limerick
RP Cleary, B (corresponding author), Univ Limerick, Limerick, Ireland.
EM brendan.cleary@ul.ie; chris.exton@ul.ie; jim.buckley@ul.ie;
   michael.english@ul.ie
RI English, Michael/KIC-0937-2024
OI Buckley, Jim/0000-0001-6928-6746
CR [Anonymous], 1963, DISTRIBUTION FREE MU
   [Anonymous], 1997, P 1997 C CTR ADV STU
   [Anonymous], 1987, Term weighting approaches in automatic text retrieval
   [Anonymous], 2004, Software Factories
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   BAI J, 2005, 14 ACM INT C INF KNO
   BERRY M, 2007, SVDPACK
   BIGGERSTAFF TJ, 1994, COMMUN ACM, V37, P72, DOI 10.1145/175290.175300
   BIGGERSTAFF TJ, 1993, 15 INT C SOFTW ENG
   BRUZA PD, 2002, P 11 INT C INF KNOWL
   Buckley C., 2000, 23 ANN INT ACM SIGIR
   CANFORA G, 2006, INT WORKSH MIN SOFTW
   CANFORA G, 2005, 11 IEEE INT S SOFTW
   CHUNG W, 2005, WORKING IMPLICIT CON
   CLEARY B, 2006, 2 INT WORKSH SUPP KN
   CLEARY B, 2006, 10 INT C PROGR COMPR
   CLEARY B, 2007, COGNITIVE ASSIGNMENT
   CLEARY B, 2007, 19 ANN PSYCH PROGR W
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Diesner J., 2004, AUTOMAP 1 2 EXTRACT
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Friedman M, 1937, J AM STAT ASSOC, V32, P675, DOI 10.2307/2279372
   GAO J, 2004, 27 ANN INT ACM SIGIR
   HASSAN AE, 2004, P 12 IEEE INT WORKSH
   HILL E, 2007, 22 IEEE ACM INT C AU
   IEEE, 2000, IEEE REC PRACT ARCH
   KAGDI H, 2007, P 1K IEEE INT C PROG
   Kiczales Gregor, 1997, EUR C OBJ OR PROGR S
   Kishida Kazuaki, 2005, Property of average precision and its generalization: An examination of evaluation indicator for information retrieval experiments
   Knight C, 2002, PROG COMPREHEN, P147, DOI 10.1109/WPC.2002.1021336
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Le Gear A, 2005, PROG COMPREHEN, P279, DOI 10.1109/WPC.2005.4
   LITTMAN DC, 1986, 1 WORKSH EMP STUD PR
   Lund K, 1996, BEHAV RES METH INSTR, V28, P203, DOI 10.3758/BF03204766
   Manning C., 2007, INTRO INFORM RETRIEV
   MARCUS A, 2003, 25 INT C SOFTW ENG I
   MARCUS A, 2003, 1 IEEE INT WORKSH PR
   MARCUS A, 2004, 11 WORK C REV ENG WC
   Merlo E, 2003, J SOFTW MAINT EVOL-R, V15, P205, DOI 10.1002/smr.274
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   POSHYVANYK D, 2007, 15 IEEE INT C PROGR
   POSHYVANYK D, 2006, 14 IEEE INT C PROGR
   Rajlich V, 2002, PROG COMPREHEN, P271, DOI 10.1109/WPC.2002.1021348
   ROBILLARD MP, 2003, REPRESENTING CONCERN
   Rohde Doug., 2007, SVDLIBC
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Salton G., 1989, Automatic Text Processing: The Transformation, Analysis, and Retrieval of Information by Computer
   SAYYADSHIRABAB J, 1997, 5 INT WORKSH PROGR C, P97
   SCHNEIDEWIND N, 1999, IEEE INT C SOFTW MAI
   Shepherd D., 2007, INT C ASP OR SOFTW D
   SIMMERMANN T, 2006, 2 INT WORKSH SUPP KN
   SIMONYI C, 2005, INTENTIONAL PROGRAMM
   Song D, 2003, J AM SOC INF SCI TEC, V54, P321, DOI 10.1002/asi.10213
   Song D., 2001, Proceedings of the 24th International ACM SIGIR conference on Research and development in information retrieval, P327
   Sparck-Jones K, 2000, INFORM PROCESS MANAG, V36, P779, DOI 10.1016/S0306-4573(00)00015-7
   *TREC, 2007, TEXT RETRIEVAL C
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   Wilde N, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P68, DOI 10.1109/CSMR.2001.914970
   ZAYOUR L, 2001, 9 INT WORKSH PROGR C
   Zhai CX, 2004, ACM T INFORM SYST, V22, P179, DOI 10.1145/984321.984322
   ZHAO W, 2004, INT C SOFTW ENG ICSE
NR 63
TC 46
Z9 62
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2009
VL 14
IS 1
BP 93
EP 130
DI 10.1007/s10664-008-9095-3
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 414UU
UT WOS:000263891500005
DA 2024-07-18
ER

PT J
AU Miller, J
AF Miller, James
TI Triangulation as a basis for knowledge discovery in software engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE triangulation; knowledge discovery; software engineering
AB Everyone agrees that reliable empirical "facts" must be derived from a series of investigations. However, the question of what is an appropriate framework for this series is an unresolved issue. Other articles in this issue present replication as the basis for this framework (Shull FJ, Carver JC, Vegas S, Juristo N (2008) The role of replications in Empirical Software Engineering, J Empir Softw Eng (in press)); however, alternatives exist! This brief note argues triangulation should be considered as the basis for this knowledge discovery (from empirical evaluation) strategy.
C1 [Miller, James] Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB, Canada.
   [Miller, James] Univ Calgary, Dept Elect & Comp Engn, Calgary, AB T2N 1N4, Canada.
C3 University of Alberta; University of Calgary
RP Miller, J (corresponding author), Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB, Canada.
EM jm@ece.ualberta.ca
CR Anderson L., 2009, TAXONOMY LEARNING TE
   [Anonymous], 1963, EXPT QUASIEXPERIMENT
   [Anonymous], 2002, BOUNDED RATIONALITY
   BRATTHALL L, 2002, J EMPIRICAL SOFTWARE, V7, P9
   Brewer J., 1989, Multimethod Research: A Synthesis of Styles, DOI 10.1002/nur.4770140212
   Cresswell JohnW., 2002, Research Design: Qualitative and Quantitative Approaches, V2nd
   DALY J, 1996, THESIS U STRATHCLYDE
   DENZIN MK, 1970, RES ACT SOCIOLOGY
   DOWNWARD P, 2005, 505 U W ENGL PRESS B
   EHRENBERG ASC, 1993, J R STAT SOC A 1, V56, P167
   GOMORY RE, 1995, SCI AM, V272, P120, DOI 10.1038/scientificamerican0695-120
   Guindon R., 1990, HUM-COMPUT INTERACT, V5, P305, DOI 10.1080/07370024.1990.9667157
   GUION LA, 2002, FCS6014 U FLOR PRESS
   KIMCHI J, 1991, NURS RES, V40, P364
   Miller J, 2005, INFORM SOFTWARE TECH, V47, P233, DOI 10.1016/j.infsof.2004.08.005
   RITTEL HWJ, 1973, POLICY SCI, V4, P155, DOI 10.1007/BF01405730
   Simon H.A., 1996, The Sciences of the Artificial, V3rd ed
   Wood M, 1999, J SYST SOFTWARE, V48, P13, DOI 10.1016/S0164-1212(99)00042-4
NR 18
TC 12
Z9 17
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2008
VL 13
IS 2
BP 223
EP 228
DI 10.1007/s10664-008-9063-y
PG 6
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 284YB
UT WOS:000254743000007
DA 2024-07-18
ER

PT J
AU Basili, VR
   Zelkowitz, MV
   Sjoberg, DIK
   Johnson, P
   Cowling, AJ
AF Basili, Victor R.
   Zelkowitz, Marvin V.
   Sjoberg, Dag I. K.
   Johnson, Philip
   Cowling, Anthony J.
TI Protocols in the use of empirical software engineering artifacts
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 14th Annual Meeting of the
   International-Software-Engineering-Research-Network
CY SEP, 2006
CL Rio de Janeiro, BRAZIL
SP Int Software Engn Res Network
DE data sharing; experimentation; ownership of data; proper use and reuse
   of data and artifacts; testbeds
AB If empirical software engineering is to grow as a valid scientific endeavor, the ability to acquire, use, share, and compare data collected from a variety of sources must be encouraged. This is necessary to validate the formal models being developed within computer science. However, within the empirical software engineering community this has not been easily accomplished. This paper analyses experiences from a number of projects, and defines the issues, which include the following: (1) How should data, testbeds, and artifacts be shared? (2) What limits should be placed on who can use them and how? How does one limit potential misuse? (3) What is the appropriate way to credit the organization and individual that spent the effort collecting the data, developing the testbed, and building the artifact? (4) Once shared, who owns the evolved asset? As a solution to these issues, the paper proposes a framework for an empirical software engineering artifact agreement. Such an agreement is intended to address the needs for both creator and user of such artifacts and should foster a market in making available and using such artifacts. If this framework for sharing software engineering artifacts is commonly accepted, it should encourage artifact owners to make the artifacts accessible to others (gaining credit is more likely and misuse is less likely). It may be easier for other researchers to request artifacts since there will be a well-defined protocol for how to deal with relevant matters.
C1 Univ Maryland, Dept Comp Sci, College Pk, MD 20742 USA.
   Fraunhofer Ctr Maryland, College Pk, MD USA.
   Simula Res Lab, Lysaker, Norway.
   Univ Hawaii, Honolulu, HI 96822 USA.
   Univ Sheffield, Sheffield, S Yorkshire, England.
C3 University System of Maryland; University of Maryland College Park;
   University of Hawaii System; University of Sheffield
RP Zelkowitz, MV (corresponding author), Univ Maryland, Dept Comp Sci, AV Williams Bldg, College Pk, MD 20742 USA.
EM basili@cs.umd.edu; mvz@cs.umd.edu; dagsj@simula.no; Johnson@hawaii.edu;
   A.J.Cowling@dcs.shef.ac.uk
FU EPSRC [EP/D031516/1] Funding Source: UKRI
CR BASILI V, 2002, IEEE COMP SOC ACM IN
   Donzelli P, 2006, J SYST SOFTWARE, V79, P107, DOI 10.1016/j.jss.2005.03.011
   HOCHSTEIN L, 2005, HPC PROGR PROD CAS S
   HOLCOMBE M, 2003, P WORKSH FUT EMP STU, P35
   Johnson P. M., 2004, INT S EMP SOFTW ENG
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   SHULL F, 2002, INT S EMP SOFTW ENG
NR 7
TC 7
Z9 9
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2007
VL 12
IS 1
BP 107
EP 119
DI 10.1007/s10664-006-9030-4
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 130ML
UT WOS:000243803600004
DA 2024-07-18
ER

PT J
AU Waeselynck, H
   Thévenod-Fosse, P
   Abdellatif-Kaddour, O
AF Waeselynck, Helene
   Thevenod-Fosse, Pascale
   Abdellatif-Kaddour, Olfa
TI Simulated annealing applied to test generation:: landscape
   characterization and stopping criteria
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software testing; metaheuristic search; simulated annealing; measurement
ID SOFTWARE TEST DATA; SEARCH; ASSIGNMENT; ALGORITHMS
AB This paper investigates a measurement approach to support the implementation of Simulated Annealing (SA) applied to test generation. SA, like other metaheuristics, is a generic technique that must be tuned to the testing problem under consideration. Finding an adequate setting of SA parameters, that will offer good performance for the target problem, is known to be difficult. Our measurement approach is intended to guide the implementation choices to be made. It builds upon advanced research on how to characterize search problems and the dynamics of metaheuristic techniques applied to them. Central to this research is the concept of landscape. Existing measures of landscape have mainly been applied to combinatorial problems considered in complexity theory. We show that some of these measures can be useful for testing problems as well. The diameter and autocorrelation are retained to study the adequacy of alternative settings of SA parameters. A new measure, the Generation Rate of Better Solutions (GRBS), is introduced to monitor convergence of the search process and implement stopping criteria. The measurement approach is experimented on various case studies, and allows us to successfully revisit a problem issued from our previous work on testing control systems.
C1 CNRS, LAAS, F-31077 Toulouse 4, France.
C3 Centre National de la Recherche Scientifique (CNRS)
RP Waeselynck, H (corresponding author), CNRS, LAAS, 7 Av Colonel Roche, F-31077 Toulouse 4, France.
EM Helene.Waeselynck@laas.fr; Pascale.Thevenod@laas.fr
CR ABDELLATIFKADDO.O, 2003, P ACM S APPL COMP SA, P1128
   ABDELLATIFKADDO.O, 2003, 03573 LAAS POL NAT I
   ABDELLATIFKADDO.O, 2003, P ACS IEEE INT C COM
   ABRIAL JR, 1996, FORMAL METHODS IND A
   Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   Angel E, 2000, DISCRETE APPL MATH, V99, P261, DOI 10.1016/S0166-218X(99)00138-9
   Angel E, 1998, THEOR COMPUT SCI, V191, P229, DOI 10.1016/S0304-3975(97)00176-X
   Bélaidouni M, 2002, LECT NOTES COMPUT SC, V2310, P192
   Belaidouni M, 2000, LECT NOTES COMPUT SC, V1829, P242
   BELAIDOUNI M, 2001, THESIS U ANGERS FRAN
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   CONNOLLY DT, 1990, EUR J OPER RES, V46, P93, DOI 10.1016/0377-2217(90)90301-Q
   Eremeev AV, 2003, LECT NOTES COMPUT SC, V2611, P224
   Frank J, 1997, J ARTIF INTELL RES, V7, P249, DOI 10.6028/jres.102.019
   Gross H.-G., 2000, IEE Proceedings-Software, V147, P25, DOI 10.1049/ip-sen:20000525
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   Hordijk W, 1996, EVOL COMPUT, V4, P335, DOI 10.1162/evco.1996.4.4.335
   Jones BF, 1996, SOFTWARE ENG J, V11, P299, DOI 10.1049/sej.1996.0040
   Jones Terry, 1995, P 6 INT C GEN ALG, V95, P184
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   LAMMERMANN F, 2005, P 6 MET INT C MIC 20
   LUNDY M, 1986, MATH PROGRAM, V34, P111, DOI 10.1007/BF01582166
   MANIEZZO V, 1995, EUR J OPER RES, V81, P188, DOI 10.1016/0377-2217(93)E0128-K
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Merz P, 2000, IEEE T EVOLUT COMPUT, V4, P337, DOI 10.1109/4235.887234
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   NUGENT CE, 1968, OPER RES, V16, P150, DOI 10.1287/opre.16.1.150
   OSULLIVAN M, 1998, P 6 EUR C SOFTW TEST
   Pargas RoyP., 1999, Verification and Reliability, V9, P263
   Rayward-Smith V.J., 1996, Modern heuristic search methods
   Rose H., 1996, Parallel Problem Solving from Nature - PPSN IV. International Conference on Evolutionary Computation - The 4th International Conference on Parallel Problem Solving from Nature. Proceedings, P208, DOI 10.1007/3-540-61723-X_985
   SCHULTZ AC, 1995, HDB EVOLUTIONARY COM
   STADLER PF, 1992, PHYS LETT A, V161, P337, DOI 10.1016/0375-9601(92)90557-3
   TAILLARD E, 1991, PARALLEL COMPUT, V17, P443, DOI 10.1016/S0167-8191(05)80147-4
   Tracey N, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P285, DOI 10.1109/ASE.1998.732680
   Tracey N, 2000, SOFTWARE PRACT EXPER, V30, P61, DOI 10.1002/(SICI)1097-024X(200001)30:1<61::AID-SPE292>3.0.CO;2-9
   TRACEY N, 2000, THESIS U YORK UK
   TRACEY N, 1998, P INT S SOFTW TEST A, P73
   Vanneschi L, 2003, LECT NOTES COMPUT SC, V2610, P455
   Wegener J, 2004, LECT NOTES COMPUT SC, V3103, P1400
   Wegener J, 1997, SOFTWARE QUAL J, V6, P127, DOI 10.1023/A:1018551716639
   Wegener J., 2002, P GENETIC EVOLUTIONA, P1233
   WEINBERGER E, 1990, BIOL CYBERN, V63, P325, DOI 10.1007/BF00202749
   Yokoo M, 1997, LECT NOTES COMPUT SC, V1330, P356, DOI 10.1007/BFb0017451
NR 45
TC 16
Z9 18
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2007
VL 12
IS 1
BP 35
EP 63
DI 10.1007/s10664-006-7551-5
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 130ML
UT WOS:000243803600002
DA 2024-07-18
ER

PT J
AU Do, HS
   Elbaum, S
   Rothermel, G
AF Do, HS
   Elbaum, S
   Rothermel, G
TI Supporting controlled experimentation with testing techniques: An
   infrastructure and its potential impact
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software testing; regression testing; controlled experimentation;
   experiment infrastructure
AB Where the creation, understanding, and assessment of software testing and regression testing techniques are concerned, controlled experimentation is an indispensable research methodology. Obtaining the infrastructure necessary to support such experimentation, however, is difficult and expensive. As a result, progress in experimentation with testing techniques has been slow, and empirical data on the costs and effectiveness of techniques remains relatively scarce. To help address this problem, we have been designing and constructing infrastructure to support controlled experimentation with testing and regression testing techniques. This paper reports on the challenges faced by researchers experimenting with testing techniques, including those that inform the design of our infrastructure. The paper then describes the infrastructure that we are creating in response to these challenges, and that we are now making available to other researchers, and discusses the impact that this infrastructure has had and can be expected to have.
C1 Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
C3 University of Nebraska System; University of Nebraska Lincoln
RP Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
EM dohy@cse.unl.edu; elbaum@cse.unl.edu; grother@cse.unl.edu
CR ANDREWS J, 2005, P INT C SOFTW ENG MA
   [Anonymous], 1989, INSIGHTS REGRESSION
   [Anonymous], 2013, CASE STUDY RES DESIG
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], COMM ACM
   [Anonymous], P INT S SOFTW TEST A
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bible J, 2001, ACM T SOFTW ENG METH, V10, P149, DOI 10.1145/367008.367015
   Binkley D, 1997, IEEE T SOFTWARE ENG, V23, P498, DOI 10.1109/32.624306
   BINKLEY D, 2001, P INT C SOFTW MAINT
   BUDD TA, 1985, COMPUT LANG, V10, P63, DOI 10.1016/0096-0551(85)90011-6
   CHEN YF, 1994, PROC INT CONF SOFTW, P211
   COENPORISINI A, 2001, P ACM INT S FDN SOFT
   Delamaro ME, 2001, IEEE T SOFTWARE ENG, V27, P228, DOI 10.1109/32.910859
   DO H, 2005, P INT C SOFTW MAINT
   DO H, 2004, P INT C SOFTW REL EN
   Elbaum S, 2003, SOFTW TEST VERIF REL, V13, P65, DOI 10.1002/stvr.263
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P169, DOI 10.1109/METRIC.2001.915525
   ERNST M, 2000, INT C SOFTW ENG JUN
   Fewster M., 1999, Software test automation: effective use of test execution tools
   FRANKL PG, 1993, IEEE T SOFTWARE ENG, V19, P774, DOI 10.1109/32.238581
   HARDER M, 2003, P INT C SOFTW ENG MA
   HARTMANN J, 1990, IEEE SOFTWARE, V7, P31, DOI 10.1109/52.43047
   HOFFMAN D, 1989, ACM SIGSOFT, V14, P97, DOI 10.1145/75309.75320
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   JURISTO N, 2004, EMPIRICAL SOFTWARE E, V9
   KIM JM, 2002, P INT C SOFTW ENG MA
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Malishevsky AG, 2002, PROC IEEE INT CONF S, P204, DOI 10.1109/ICSM.2002.1167767
   Marré M, 2003, IEEE T SOFTWARE ENG, V29, P974, DOI 10.1109/TSE.2003.1245299
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Okun V., 2003, WSEAS Transactions on Systems, V2, P77
   OSTRAND TJ, 1988, COMMUN ACM, V31, P676, DOI 10.1145/62959.62964
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   RAPPS S, 1985, IEEE T SOFTWARE ENG, V11, P367, DOI 10.1109/TSE.1985.232226
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   ROTHERMEL G, 2002, P INT C SOFTW ENG MA
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   Trochim W.M. K., 2010, RES METHODS KNOWLEDG, V3rd
   Vokolos FI, 1998, PROC IEEE INT CONF S, P44, DOI 10.1109/ICSM.1998.738488
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   WEYUKER EJ, 1988, COMMUN ACM, V31, P668, DOI 10.1145/62959.62963
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wong WE, 1997, P INT COMP SOFTW APP, P522, DOI 10.1109/CMPSAC.1997.625062
   XIE T, 2002, P EDSER 4 MAY
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
NR 51
TC 677
Z9 777
U1 0
U2 16
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2005
VL 10
IS 4
BP 405
EP 435
DI 10.1007/s10664-005-3861-2
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 969PQ
UT WOS:000232247100001
DA 2024-07-18
ER

PT J
AU Dordevic, M
   Albonico, M
   Lewis, GA
   Malavolta, I
   Lago, P
AF Dordevic, Milica
   Albonico, Michel
   Lewis, Grace A.
   Malavolta, Ivano
   Lago, Patricia
TI Computation offloading for ground robotic systems communicating over
   WiFi - an empirical exploration on performance and energy trade-offs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Robotic system; Computation offloading; Software engineering; Empirical
   evaluation; Energy consumption
ID NAVIGATION
AB ContextRobotic systems are known to perform computation-intensive tasks with limited computational resources and battery life. Such systems might benefit from offloading heavy workloads to the Cloud; however, in some cases, this implies high network traffic that degrades performance and energy consumption.GoalIn this study, we aim at evaluating the impact of different computation offloading strategies on performance and energy consumption in the context of autonomous robots.MethodWe conduct two controlled experiments involving a robotic mission based on the Turtlebot3 robot and ROS 1. The mission consists of three tasks that are recurrent in robotics and good candidates for computation offloading in research, namely, SLAM mapping, navigation stack, and object recognition. Each of the tasks is either executed on board or offloaded in a full-factorial experiment design. The obtained measures are then statistically analyzed.ResultsThe results show that offloading the object recognition task causes a more significant decrease in resource utilization and energy consumption than both SLAM mapping and navigation. However, object recognition affects the volume of network traffic significantly to the extent that it can easily cause network congestion.ConclusionsIn the context of our experiments (i.e., those involving small-scale ground ROS-based mobile robots operating under WiFi networks), offloading object recognition is beneficial in terms of performance and energy consumption. Nevertheless, large network bandwidth needs to be available for object recognition offloading. While the image resolution and frame rate have a significant impact on not only the network traffic but also energy consumption and performance, these parameters need to be carefully set so that the results of this task can be always received in time, which is particularly crucial in real-time systems.
C1 [Dordevic, Milica; Malavolta, Ivano; Lago, Patricia] Vrije Univ Amsterdam, Amsterdam, Netherlands.
   [Albonico, Michel] Fed Univ Technol Parana UTFPR, Francisco Beltrao, Brazil.
   [Lewis, Grace A.] Carnegie Mellon Software Engn Inst, Pittsburgh, PA USA.
C3 Vrije Universiteit Amsterdam; Universidade Tecnologica Federal do
   Parana; Carnegie Mellon University
RP Malavolta, I (corresponding author), Vrije Univ Amsterdam, Amsterdam, Netherlands.
EM m.djordjevic@student.vu.nl; michelalbonico@utfpr.edu.br;
   glewis@sei.cmu.edu; i.malavolta@vu.nl; p.lago@vu.nl
RI Lago, Patricia/ABH-2308-2020; Al-obaidi, Abdullah Thair/P-8487-2017;
   Malavolta, Ivano/E-9018-2017
OI Lago, Patricia/0000-0002-2234-0845; Al-obaidi, Abdullah
   Thair/0000-0002-9971-5895; Malavolta, Ivano/0000-0001-5773-8346; Lewis,
   Grace/0000-0001-9128-9863
CR Abdelrasoul Y, 2016, 2016 2ND IEEE INTERNATIONAL SYMPOSIUM ON ROBOTICS AND MANUFACTURING AUTOMATION (ROMA)
   Albonico M, 2023, J SYST SOFTWARE, V197, DOI 10.1016/j.jss.2022.111574
   Anderson MJ, 2003, J STAT COMPUT SIM, V73, P85, DOI 10.1080/00949650215733
   Arumugam R, 2010, IEEE INT CONF ROBOT, P3084, DOI 10.1109/ROBOT.2010.5509469
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Benavidez P, 2015, ANN IEEE SYST CONF, P773, DOI 10.1109/SYSCON.2015.7116844
   Bistry H, 2010, IEEE INT C INT ROBOT, P3195, DOI 10.1109/IROS.2010.5653660
   Bonferroni C., 1963, Pubbl del R Ist Super di Sci Econ e Commericiali di Firenze, V8, P3
   Chinchali S, 2021, AUTON ROBOT, V45, P997, DOI 10.1007/s10514-021-09987-4
   Dey S, 2016, ADJUNCT PROCEEDINGS OF THE 13TH INTERNATIONAL CONFERENCE ON MOBILE AND UBIQUITOUS SYSTEMS: COMPUTING NETWORKING AND SERVICES (MOBIQUITOUS 2016), P153, DOI 10.1145/3004010.3004032
   Dordevi M, 2022, Study Replication Package
   Doriya R, 2012, 2012 INTERNATIONAL SYMPOSIUM ON CLOUD AND SERVICES COMPUTING (ISCOS 2012), P80, DOI 10.1109/ISCOS.2012.24
   Foote T, 2021, tf
   French A., 2008, MULTIVARIATE ANAL VA
   Fukui M, 2022, 2022 IEEE INTERNATIONAL CONFERENCE ON PERVASIVE COMPUTING AND COMMUNICATIONS WORKSHOPS AND OTHER AFFILIATED EVENTS (PERCOM WORKSHOPS), DOI 10.1109/PerComWorkshops53856.2022.9767431
   Garro R, 2014, 2014 IEEE BIENN C AR, P405
   Gomez K., 2011, 2011 IEEE Online Conference on Green Communications, P98, DOI 10.1109/GreenCom.2011.6082515
   Grisetti G, 2007, IEEE T ROBOT, V23, P34, DOI 10.1109/TRO.2006.889486
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hellou M, 2022, J Soc Robotics, P1
   Hu GQ, 2012, IEEE NETWORK, V26, P21, DOI 10.1109/MNET.2012.6201212
   Indelman V, 2013, ROBOT AUTON SYST, V61, P721, DOI 10.1016/j.robot.2013.05.001
   Ito P.K., 1980, Handbook of statistics 1. Analysis of variance, P199, DOI 10.1016/S0169-7161(80)01009-7
   Kassambara A, 2019, Anova in r: The ultimate guide
   Kassambara A, 2019, T-test in r: The ultimate guide
   Kehoe B, 2015, IEEE T AUTOM SCI ENG, V12, P398, DOI 10.1109/TASE.2014.2376492
   Koubaa A, 2020, Encycl Robot, P1
   Labbe M, 2021, find_object_2d
   Lee J, 2017, 2017 FIRST IEEE INTERNATIONAL CONFERENCE ON ROBOTIC COMPUTING (IRC), P36, DOI 10.1109/IRC.2017.77
   Macenski S, 2022, SCI ROBOT, V7, DOI 10.1126/scirobotics.abm6074
   Marder-Eppstein E, 2010, IEEE INT CONF ROBOT, P300, DOI 10.1109/ROBOT.2010.5509725
   Maruyama Y, 2016, 2016 PROCEEDINGS OF THE INTERNATIONAL CONFERENCE ON EMBEDDED SOFTWARE (EMSOFT), DOI 10.1145/2968478.2968502
   Masaba K, 2019, 2019 INT S MULT MULT, P1
   Mukhandi M, 2019, IEEE/SICE I S SYS IN, P608, DOI [10.1109/sii.2019.8700390, 10.1109/SII.2019.8700390]
   dos Reis WPN, 2019, 2019 19TH INTERNATIONAL CONFERENCE ON ADVANCED ROBOTICS (ICAR), P302, DOI 10.1109/ICAR46387.2019.8981601
   Nimmagadda Y, 2010, IEEE INT C INT ROBOT, P2449, DOI 10.1109/IROS.2010.5650303
   Parra S, 2021, 2021 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON ROBOTICS SOFTWARE ENGINEERING (ROSE 2021), P29, DOI 10.1109/RoSE52553.2021.00012
   Profanter S, 2019, IEEE INT CONF INDUST, P955, DOI 10.1109/ICIT.2019.8755050
   Putra Irham Arfakhsadz, 2019, 2019 International Seminar on Research of Information Technology and Intelligent Systems (ISRITI), P148, DOI 10.1109/ISRITI48646.2019.9034573
   Quigley M, 2009, IEEE INT CONF ROBOT, P3604
   Rad PA, 2021, IEEE INT C EMERG, DOI 10.1109/ETFA45728.2021.9613590
   Reichardt M, 2013, Electron Commun EASST, V60
   Reichardt M., 2013, IFAC Proc, V46, P150
   ROS wiki, 2021, Network setup in ros
   ROS wiki, 2021, Setup and configuration of the navigation stack on a robot
   ROS wiki, 2021, tag
   ROS wiki, 2021, Basic navigation tuning guide
   Santos JM, 2013, IEEE INT SYMP SAFE
   Sarker V.K., 2019, 2019 1 INT C ADV SCI, P1
   SCHULTZ BB, 1985, SYST ZOOL, V34, P449, DOI 10.2307/2413207
   Shakhimardanov A, 2011, IEEE INT C INT ROBOT, P1030, DOI 10.1109/IROS.2011.6048753
   Shamshiri RR, 2018, INT J AGR BIOL ENG, V11, P15, DOI 10.25165/j.ijabe.20181104.4032
   St-Onge David., 2022, The Robot Operating System (ROS1 2): Programming Paradigms and Deployment, P105
   STAHLE L, 1989, CHEMOMETR INTELL LAB, V6, P259, DOI 10.1016/0169-7439(89)80095-4
   Swanborn S, 2021, PROC IEEE ACM INT C, P33, DOI 10.1109/ICSE-Companion52605.2021.00029
   Thrun S, 2001, ARTIF INTELL, V128, P99, DOI 10.1016/S0004-3702(01)00069-8
   Tripathy A, 2022, 2022 IEEE 5 INT C IN, P1
   Webster C., 2022, Journal of Smart Tourism, V1, P33, DOI [10.52255/smarttourism.2022.2.1.4, DOI 10.52255/SMARTTOURISM.2022.2.1.4]
   WELCH BL, 1947, BIOMETRIKA, V34, P28, DOI 10.2307/2332510
   Wendt A, 2022, IEEE/SICE I S SYS IN, P265, DOI 10.1109/SII52469.2022.9708884
   Wienke J, 2018, 2018 SECOND IEEE INTERNATIONAL CONFERENCE ON ROBOTIC COMPUTING (IRC), P25, DOI 10.1109/IRC.2018.00013
   Wu HY, 2013, IEEE T IND ELECTRON, V60, P554, DOI 10.1109/TIE.2012.2186775
   Zheng K., 2017, ROS Navigation Tuning Guide, DOI DOI 10.1007/978-3-030-75472-3
NR 63
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 140
DI 10.1007/s10664-023-10351-6
PG 61
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA X3KI4
UT WOS:001097471500001
OA hybrid
DA 2024-07-18
ER

PT J
AU Hadi, MA
   Fard, FH
AF Hadi, Mohammad A.
   Fard, Fatemeh H. H.
TI Evaluating pre-trained models for user feedback analysis in software
   engineering: a study on classification of app-reviews
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Pre-trained neural language models; App review classification
ID SENTIMENT ANALYSIS; EVOLUTION
AB ContextAutomatic classification of mobile applications users' feedback is studied for different areas of software engineering. However, supervised classification requires a lot of manually labeled data, and with introducing new classes or new platforms, new labeled data and models are required. Employing Pre-trained neural Language Models (PLMs) have found success in the Natural Language Processing field. However, their applicability has not been explored for app review classification.ObjectiveWe evaluate using PLMs for issue classification from app reviews in multiple settings and compare them with the existing models.MethodWe set up different studies to evaluate the performance and time efficiency of PLMs compared to Prior approaches on six datasets: binary vs. multi-class, zero-shot, multi-task, and multi-resource settings. In addition, we train and study domain-specific (Custom) PLMs by incorporating app reviews in the pre-training. We report Micro and Macro Precision, Recall, and F1 scores and the time required for training and predicting with the models.ResultsOur results show that PLMs can classify the app issues with higher scores, except in multi-resource setting. On the largest dataset, results are improved by 13 and 8 micro- and macro-average F1-scores, respectively, compared to the Prior approaches. Domain-specific PLMs achieve the highest scores in all settings with less prediction time, and they benefit from pre-training with a larger number of app reviews. On the largest dataset, we obtain 98 and 92 micro- and macro-average F1-score (from 4.5 to 8.3 more F1-score compared to general pre-trained models), 71 F1-score in zero-shot setting, and 93 and 92 F1-score in multi-task and multi-resource settings, respectively, using the large domain-specific PLMs.ConclusionAlthough prior approaches achieve high scores in some settings, PLMs are the only models that can work well in the zero-shot setting. When trained on the app review dataset, the Custom PLMs have higher performance and lower prediction times.
C1 [Hadi, Mohammad A.; Fard, Fatemeh H. H.] Univ British Columbia, Dept Comp Sci, Kelowna, BC, Canada.
C3 University of British Columbia
RP Fard, FH (corresponding author), Univ British Columbia, Dept Comp Sci, Kelowna, BC, Canada.
EM mohammad.hadi@ubc.ca; fatemeh.fard@ubc.ca
OI Fard, Fatemeh/0000-0002-4505-6257
FU Natural Sciences and Engineering Research Council of Canada
   [RGPIN-2019-05175]
FX AcknowledgementsThis research is supported by a grant from the Natural
   Sciences and Engineering Research Council of Canada RGPIN-2019-05175.
CR Adhikari A, 2019, Arxiv, DOI arXiv:1904.08398
   Al-Hawari A, 2021, SOFTWARE QUAL J, V29, P667, DOI 10.1007/s11219-020-09529-8
   Al-Subaihin AA, 2021, IEEE T SOFTWARE ENG, V47, P300, DOI 10.1109/TSE.2019.2891715
   Ali Mohamed, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P79, DOI 10.1109/MOBILESoft.2017.3
   [Anonymous], 2018, P INT C LEARNING REP
   [Anonymous], 2020, P 2020 PREICIS SIGDS
   [Anonymous], 2019, P 31 INT C SOFTWARE, P398
   Aralikatte R, 2018, PROCEEDINGS OF THE ACM INDIA JOINT INTERNATIONAL CONFERENCE ON DATA SCIENCE AND MANAGEMENT OF DATA (CODS-COMAD'18), P57, DOI 10.1145/3152494.3152500
   Araujo Adailton., 2020, Anais do Encontro Nacional de Inteligencia Artificial e Computacional (ENIAC), SBC, P378, DOI DOI 10.5753/ENIAC.2020.12144
   Araujo AF, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-021-00301-1
   Aslam N, 2020, IEEE ACCESS, V8, P185619, DOI 10.1109/ACCESS.2020.3029634
   Bakiu E, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P182, DOI 10.1109/REW.2017.76
   Bataa E, 2019, Arxiv, DOI arXiv:1905.09642
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Beltagy I, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3615
   Ben Messaoud M, 2019, LECT NOTES ARTIF INT, V11775, P805, DOI 10.1007/978-3-030-29551-6_71
   Besmer AR, 2020, INT J INF SECUR PRIV, V14, P74, DOI 10.4018/IJISP.2020100105
   Biswas E, 2020, PROC IEEE INT CONF S, P162, DOI 10.1109/ICSME46990.2020.00025
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Cao Y, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2021), P120, DOI 10.1109/ASEW52652.2021.00033
   Chalkidis I, 2020, M ASS FOR COMPUTATIO
   Chang WC, 2020, Arxiv, DOI arXiv:1905.02331
   Chen FX, 2022, INT C PROGRAM COMPRE, P401, DOI 10.1145/3524610.3527917
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Cimasa A, 2019, EUROMICRO CONF PROC, P244, DOI 10.1109/SEAA.2019.00046
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Clinchant S., 2019, arXiv
   Deocadez Roger., 2017, Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering, P320
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Dhinakaran VT, 2018, INT REQUIR ENG CONF, P170, DOI 10.1109/RE.2018.00026
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Edunov S, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4052
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Finkelstein A., 2014, RN, V14, P10
   Forman George, 2010, ACM SIGKDD Explorations Newsletter, DOI DOI 10.1145/1882471.1882479
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Gao CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P48, DOI 10.1145/3180155.3180218
   Grano G, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P72, DOI 10.1109/SANER.2018.8330198
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Guo B, 2019, IEEE ACCESS, V7, P68557, DOI 10.1109/ACCESS.2019.2918325
   Guo D, 2021, P 2021 INT C LEARNIN
   Guo H, 2020, PROC INT CONF SOFTW, P628, DOI 10.1145/3377811.3380924
   Guzman E, 2017, INT REQUIR ENG CONF, P11, DOI 10.1109/RE.2017.88
   Guzman E, 2017, REQUIR ENG, V22, P387, DOI 10.1007/s00766-017-0274-x
   Guzman E, 2016, INT REQUIR ENG CONF, P96, DOI 10.1109/RE.2016.67
   Guzman E, 2015, IEEE INT CONF AUTOM, P771, DOI 10.1109/ASE.2015.88
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Hadi MA, 2022, INT C PROGRAM COMPRE, P309, DOI 10.1145/3524610.3527886
   Hadi MA, 2020, PROC IEEE INT CONF S, P593, DOI 10.1109/ICSME46990.2020.00062
   Haering M, 2021, PROC INT CONF SOFTW, P970, DOI 10.1109/ICSE43902.2021.00092
   Hakala K., 2019, P 5 WORKSH BIONLP OP, P56, DOI [DOI 10.18653/V1/D19-5709, 10.18653/v1/D19-5709]
   Harkous H, 2022, 2022 IEEE S SEC PRIV
   He DJ, 2019, IEEE WIREL COMMUN, V26, P110, DOI 10.1109/MWC.2019.1800322
   He H, 2013, IMBALANCED LEARNING: FOUNDATIONS, ALGORITHMS, AND APPLICATIONS, P1, DOI 10.1002/9781118646106
   Hemmatian F, 2019, ARTIF INTELL REV, V52, P1495, DOI 10.1007/s10462-017-9599-6
   Henao PR, 2021, 29TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2021), P80, DOI 10.1109/REW53955.2021.00019
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Howard J, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P328
   Huang Q, 2020, IEEE T SOFTWARE ENG, V46, P1098, DOI 10.1109/TSE.2018.2876340
   Imamura K., 2019, P 3 WORKSH NEUR GEN, P23, DOI 10.18653/v1/D19-5603
   Islam R., 2010, International Journal of Engineering Technology, V10, P104
   James G, 2013, SPRINGER TEXTS STAT, V103, P1, DOI [10.1007/978-1-4614-7138-7, 10.1007/978-1-4614-7138-7_1]
   Jha N, 2019, EMPIR SOFTW ENG, V24, P3659, DOI 10.1007/s10664-019-09716-7
   Johann T, 2017, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2017.71
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Ju Y, 2019, Arxiv, DOI arXiv:1909.10772
   Karimi A, 2021, INT C PATT RECOG, P8797, DOI 10.1109/ICPR48806.2021.9412167
   Karmakar A, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1332, DOI 10.1109/ASE51524.2021.9678927
   Kaur A, 2022, J KING SAUD UNIV-COM, V34, P1, DOI 10.1016/j.jksuci.2018.11.002
   Lan ZZ, 2020, Arxiv, DOI arXiv:1909.11942
   Letier E, 2019, LECT NOTES COMPUT SC, V11412, P183, DOI 10.1007/978-3-030-15538-4_14
   Li L, 2020, PROCEEDINGS OF THE 2020 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP), P6193
   Li X., 2019, P 5 WORKSH NOIS US G, P34
   Liu LY, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P1215
   Liu W, 2015, P 2015 WORKSHOP MOBI, P13
   Liu Yang, 2019, ARXIV
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Lu Mengmeng., 2017, P 21 INT C EVALUATIO, P344, DOI [10.1145/3084226.3084241, DOI 10.1145/3084226.3084241]
   Luong K, 2022, INT C PROGRAM COMPRE, P331, DOI 10.1145/3524610.3527918
   Maalej W, 2016, REQUIR ENG, V21, P311, DOI 10.1007/s00766-016-0251-9
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   McCallum A, 1999, IJCAI-99: PROCEEDINGS OF THE SIXTEENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, VOLS 1 & 2, P662
   Mekala RR, 2021, INT REQUIR ENG CONF, P139, DOI 10.1109/RE51729.2021.00020
   Mikolov T, 2013, P WORKSHOP ICLR 2013
   Mondal Arpita, 2022, IECON 2022 - 48th Annual Conference of the IEEE Industrial Electronics Society, P1, DOI 10.1109/IECON49645.2022.9969047
   Nayebi M, 2018, EMPIR SOFTW ENG, V23, P2764, DOI 10.1007/s10664-018-9601-1
   Novielli N, 2018, IEEE WORK CONF MIN S, P364, DOI 10.1145/3196398.3196403
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Pennington J., 2014, P 2014 C EMP METH NA, P1532
   Peters M, 2018, STUD LATEINAMERIKA, V32, P1, DOI 10.5771/9783845286846
   Peters ME, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1756, DOI 10.18653/v1/P17-1161
   Qiu XP, 2020, SCI CHINA TECHNOL SC, V63, P1872, DOI 10.1007/s11431-020-1647-3
   Rajpurkar P., 2016, P 2016 C EMP METH NA, V2016, P2383
   Reddy S, 2019, T ASSOC COMPUT LING, V7, P249, DOI 10.1162/tacl_a_00266
   Reimers N, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P567
   Ren YF, 2016, AAAI CONF ARTIF INTE, P3038
   Rietzler A, 2019, Arxiv, DOI arXiv:1908.11860
   Robbes R, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P29, DOI 10.1109/ICSE-NIER.2019.00016
   Ruder Sebastian, 2017, P 2017 C EMP METH NA, P372, DOI [10.18653/v1/d17-1038, 10.18653/v1/D17-1038, DOI 10.18653/V1/D17-1038]
   Rustam F, 2020, IEEE ACCESS, V8, P30234, DOI 10.1109/ACCESS.2020.2972632
   SantiagoWalser R, 2022, P 55 HAW INT C SYST
   Sarro F, 2015, INT REQUIR ENG CONF, P76, DOI 10.1109/RE.2015.7320410
   Scalabrino S, 2019, IEEE T SOFTWARE ENG, V45, P68, DOI 10.1109/TSE.2017.2759112
   Shah F.A., 2018, ICSOFT, P146
   SHEN VY, 1985, IEEE T SOFTWARE ENG, V11, P317, DOI 10.1109/TSE.1985.232222
   Silva CC, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10026-0
   Stanik C, 2019, 2019 IEEE 27TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW 2019), P220, DOI 10.1109/REW.2019.00046
   Subedi IM, 2021, ACMSE 2021: PROCEEDINGS OF THE 2021 ACM SOUTHEAST CONFERENCE, P130, DOI 10.1145/3409334.3452068
   Sulistya A, 2020, EMPIR SOFTW ENG, V25, P996, DOI 10.1007/s10664-019-09775-w
   Sun C, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P380
   Svyatkovskiy A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1433, DOI 10.1145/3368089.3417058
   Tang AKY, 2019, ELECTRON COMMER R A, V37, DOI 10.1016/j.elerap.2019.100885
   Nguyen TV, 2017, PROC IEEE ACM INT C, P183, DOI 10.1109/ICSE-C.2017.90
   Tu M, 2020, AAAI CONF ARTIF INTE, V34, P9073
   Vaswani A, 2017, ADV NEUR IN, V30
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   von der Mosel J, 2023, IEEE T SOFTWARE ENG, V49, P1487, DOI 10.1109/TSE.2022.3178469
   Wada S., 2020, PRETRAINING TECHNIQU
   Wallace E, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P2153
   Wan Y, 2022, PROC INT CONF SOFTW, P2377, DOI 10.1145/3510003.3510050
   Wang C, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267428
   Wang JY, 2020, WWW'20: COMPANION PROCEEDINGS OF THE WEB CONFERENCE 2020, P409, DOI 10.1145/3366424.3383756
   Wardhana JA., 2021, JURNAL RESTI REKAYAS, V5, P631, DOI [10.29207/resti.v5i4.3143, DOI 10.29207/RESTI.V5I4.3143]
   Wolf T, 2020, Arxiv, DOI arXiv:1910.03771
   Wu X, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P5271
   Xu B, 2022, 2022 IEEE INT C SOFT
   Xu H, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P2324
   Yang TY, 2021, WEB CONFERENCE 2021: COMPANION OF THE WORLD WIDE WEB CONFERENCE (WWW 2021), P708, DOI 10.1145/3442442.3458612
   Yang X, 2018, INFORM RETRIEVAL J, V21, P183, DOI 10.1007/s10791-017-9319-5
   Yang Z., 2019, NEURIPS, V5754, DOI [DOI 10.1109/ptc.2019.8810867, DOI 10.1080/10495398.2019.1653901]
   Yang Z, 2018, 2018 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2018), P2369
   Yatani K, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P1541
   Yin WP, 2019, 2019 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING AND THE 9TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING (EMNLP-IJCNLP 2019), P3914
   Zhang T, 2020, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSME46990.2020.00017
   Zhang XX, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P5059
   Zhang ZS, 2021, AAAI CONF ARTIF INTE, V35, P14506
   Zhao LL, 2019, FUTURE INTERNET, V11, DOI 10.3390/fi11020052
   Zhao W, 2018, IEEE T KNOWL DATA EN, V30, P185, DOI 10.1109/TKDE.2017.2756658
   Zhong Ming, 2020, P 58 ANN M ASS COMP, P6197, DOI DOI 10.18653/V1/2020.ACL-MAIN.552
   Zhou Y, 2021, IEEE T SOFTWARE ENG, V47, P2755, DOI 10.1109/TSE.2020.2967383
NR 143
TC 7
Z9 7
U1 5
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 88
DI 10.1007/s10664-023-10314-x
PG 75
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H2JT2
UT WOS:000994286000003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Peng, KW
   Kaltenecker, C
   Siegmund, N
   Apel, S
   Menzies, T
AF Peng, Kewen
   Kaltenecker, Christian
   Siegmund, Norbert
   Apel, Sven
   Menzies, Tim
TI VEER: enhancing the interpretability of model-based optimizations
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software analytics; Multi-objective optimization; Disagreement;
   Interpretable AI
ID PERFORMANCE; ALGORITHM
AB Context:Many software systems can be tuned for multiple objectives (e.g., faster runtime, less required memory, less network traffic or energy consumption, etc.). Such systems can suffer from "disagreement" where different models have different (or even opposite) insights and tactics on how to optimize a system. For configuration problems, we show that (a) model disagreement is rampant; yet (b) prior to this paper, it has barely been explored.Objective:We aim at helping practitioners and researchers better solve multi-objective configuration optimization problems, by resolving model disagreement.Method:We propose a dimension reduction method called VEER that builds a useful one-dimensional approximation to the original N-objective space. Traditional model-based optimizers use Pareto search to locate Pareto-optimal solutions to a multi-objective problem, which is computationally heavy on large-scale systems. VEER builds a surrogate that can replace the Pareto sorting step after deployment.Results:Compared to the prior state-of-the-art, for 11 configurable systems, VEER significantly reduces disagreement and execution time, without compromising the optimization performance in most cases. For our largest problem (with tens of thousands of possible configurations), optimizing with VEER finds as good or better optimizations with zero model disagreements, three orders of magnitude faster.Conclusion:When employing model-based optimizers for multi-objective optimization, we recommend to apply VEER, which not only improves the execution time, but also resolves the potential model disagreement problem.
C1 [Peng, Kewen; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   [Kaltenecker, Christian; Apel, Sven] Saarland Univ, Dept Comp Sci, Saarland Informat Campus, Saarbrucken, Germany.
   [Siegmund, Norbert] Univ Leipzig, Dept Comp Sci, Leipzig, Germany.
C3 North Carolina State University; Saarland University; Leipzig University
RP Peng, KW (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM kpeng@ncsu.edu; kaltenec@cs.uni-saarland.de;
   norbert.siegmund@informatik.uni-leipzig.de; apel@cs.uni-saarland.de;
   timm@ieee.org
RI Menzies, Tim/X-7680-2019
OI Menzies, Tim/0000-0002-5040-3196; Apel, Sven/0000-0003-3687-2233; Peng,
   Kewen/0000-0002-4884-1808
FU Laboratory for Analytical Sciences, North Carolina State University;
   German Research Foundation [AP 206/11, 389792660, TRR 248 - CPEC, SI
   2171/2-2]; Federal Ministry of Education and Research of Germany;
   Saechsische Staatsministerium fur Wissenschaft Kultur und Tourismus
   [ScaDS.AI]
FX This work was partially funded by a research grant from the Laboratory
   for Analytical Sciences, North Carolina State University. Apel's work
   has been funded by the German Research Foundation (AP 206/11 and Grant
   389792660 as part of TRR 248 - CPEC. Siegmunds work has been supported
   by the Federal Ministry of Education and Research of Germany and by the
   Saechsische Staatsministerium fur Wissenschaft Kultur und Tourismus in
   the program Center of Excellence for AI-research "Center for Scalable
   Data Analytics and Artificial Intelligence Dresden/Leipzig", project
   identification number: ScaDS.AI, and by the German Research Foundation
   (SI 2171/2-2).
CR Agrawal A, 2020, EMPIR SOFTW ENG, V25, P2099, DOI 10.1007/s10664-020-09808-9
   [Anonymous], 2001, TIK Rep
   Antkiewicz M, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P130
   Berger J, 2014, PHILOS PSYCHOL, V27, P829, DOI 10.1080/09515089.2013.771241
   Bergstra J., 2011, Adv. Neural Inf. Process. Syst., V24
   Brochu E, 2010, Arxiv, DOI arXiv:1012.2599
   Chen D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P456, DOI 10.1145/3236024.3236050
   Chen JN, 2020, IEEE T IND APPL, V56, P4478, DOI 10.1109/TIA.2019.2959550
   Coello CAC, 2004, LECT NOTES COMPUT SC, V2972, P688
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Gigerenzer G, 2008, PERSPECT PSYCHOL SCI, V3, P20, DOI 10.1111/j.1745-6916.2008.00058.x
   Golovin D, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1487, DOI 10.1145/3097983.3098043
   Guo JM, 2018, EMPIR SOFTW ENG, V23, P1826, DOI 10.1007/s10664-017-9573-6
   Herodotou H., 2011, C INN DAT SYST RES
   Hess M. R., 2004, ANN M AM ED RES ASS, P1
   HOLLAND JH, 1992, SCI AM, V267, P66, DOI 10.1038/scientificamerican0792-66
   Huband S, 2003, IEEE C EVOL COMPUTAT, P2284
   Hutter Frank, 2011, Learning and Intelligent Optimization. 5th International Conference, LION 5. Selected Papers, P507, DOI 10.1007/978-3-642-25566-3_40
   Jiarpakdee J., 2021, ARXIV
   Kaltenecker C, 2020, IEEE SOFTWARE, V37, P58, DOI 10.1109/MS.2020.2987024
   Kendall M. G., 1948, Rank correlation methods.
   Kolesnikov S, 2019, SOFTW SYST MODEL, V18, P2265, DOI 10.1007/s10270-018-0662-9
   Laumanns M, 2002, EVOL COMPUT, V10, P263, DOI 10.1162/106365602760234108
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Nair V, 2020, IEEE T SOFTWARE ENG, V46, P794, DOI 10.1109/TSE.2018.2870895
   Nair V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3106237.3106238
   Sarkar A, 2015, IEEE INT CONF AUTOM, P342, DOI 10.1109/ASE.2015.45
   Sawyer R, 2011, IJBIR, V2, P52, DOI 10.4018/IJBIR.2011070104
   Shrikanth NC, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P182, DOI 10.1145/3377813.3381367
   Siegmund N, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P284, DOI 10.1145/2786805.2786845
   Snoek J., 2012, NIPS, V2
   Song WY, 2015, J MANUF SYST, V37, P113, DOI 10.1016/j.jmsy.2015.09.001
   Tan SY, 2016, Arxiv, DOI [arXiv:1606.03510, DOI 10.48550/ARXIV.1606.03510]
   Tu H, 2021, IEEE WORK CONF MIN S, P1, DOI 10.1109/MSR52588.2021.00013
   Van Aken D, 2017, SIGMOD'17: PROCEEDINGS OF THE 2017 ACM INTERNATIONAL CONFERENCE ON MANAGEMENT OF DATA, P1009, DOI 10.1145/3035918.3064029
   Van Veldhuizen DA, 1999, Multiobjective evolutionary algorithms: classifications, analyses, and new innovations
   Xia T., 2018, arXiv
   Xu TY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P307, DOI 10.1145/2786805.2786852
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zhu H, 2017, ARXIV
   Zuluaga M, 2016, J MACH LEARN RES, V17
NR 43
TC 1
Z9 1
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2023
VL 28
IS 3
AR 61
DI 10.1007/s10664-023-10296-w
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA C6OE7
UT WOS:000963079800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Torre, D
   Mesadieu, F
   Chennamaneni, A
AF Torre, Damiano
   Mesadieu, Frantzy
   Chennamaneni, Anitha
TI Deep learning techniques to detect cybersecurity attacks: a systematic
   mapping study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Deep learning; Cybersecurity; Systematic mapping study; Systematic
   review
ID NETWORK INTRUSION DETECTION; ANOMALY DETECTION; CYBER-SECURITY;
   FRAMEWORK; IDENTIFICATION; AUTOENCODER; STRATEGY; SVM
AB ContextRecent years have seen a lot of attention into Deep Learning (DL) techniques used to detect cybersecurity attacks. DL techniques can swiftly analyze massive datasets, and automate the detection and mitigation of a wide variety of cybersecurity attacks with superior results. However, no systematic study exists that summarizes these DL techniques since most studies are informal literature surveys or focus on different subjects.ObjectiveTo deliver a comprehensive and systematic summary of the existing DL techniques used to detect cybersecurity attacks as they are described in the literature. To identify open challenges for future research.MethodWe conducted a systematic mapping study about DL techniques to detect cybersecurity attacks driven by eleven research questions. We followed existing guidelines when defining our research protocol to increase the repeatability and reliability of our results.ResultsFrom an initial set of 1839 papers, we identified 116 relevant primary studies, primarily published in the last three years. We investigated multiple aspects of the DL techniques, such as the cybersecurity attack types to detect, their application domains, the programming languages, libraries, operating systems, and frameworks used to implement the DL techniques, the datasets used to train the DL models, the types of research carried out (academic or industrial), the performance of the techniques, and the advantages and disadvantages of each technique. We present a new taxonomy comprising 36 different DL techniques. We identified 14 application domains, eight cybersecurity attacks, and 93 publicly available datasets, among other results.ConclusionsWe provide six lessons learned along with recommendations for future research directions. The most active research areas in DL techniques for the identification of cybersecurity attacks discuss CNN and LSTM techniques. DL techniques in cybersecurity is a rapidly growing and developing research area, with many open challenges, including the lack of (a) research conducted in industrial settings, (b) real-time datasets, (c) studies focusing on promising DL techniques and relevant cybersecurity attacks.
C1 [Torre, Damiano; Mesadieu, Frantzy; Chennamaneni, Anitha] Texas A&M Univ Cent Texas, Dept Comp Informat Syst, 1001 Leadership Pl, Killeen, TX 76549 USA.
C3 Texas A&M University System; Texas A&M University Central Texas
RP Torre, D (corresponding author), Texas A&M Univ Cent Texas, Dept Comp Informat Syst, 1001 Leadership Pl, Killeen, TX 76549 USA.
EM damiano.torre@tamuct.edu; f.mesadieu@tamuct.edu;
   anitha.chennamaneni@tamuct.edu
RI Torre, Damiano/KHC-4702-2024
OI Torre, Damiano/0000-0002-1656-3057
FU Air Force Research Laboratory (AFRL); Department of Homeland Security
   (DHS) Science and Technology (ST) Directorate [FA8750-19-C-0077]
FX This research was supported in part by the Air Force Research Laboratory
   (AFRL) and Department of Homeland Security (DHS) Science and Technology
   (S&T) Directorate under award FA8750-19-C-0077.
CR Abu Al-Haija Q, 2020, ELECTRONICS-SWITZ, V9, DOI 10.3390/electronics9122152
   Ahmed A, 2018, IEEE IND APPLIC SOC
   Al Hammadi AY, 2020, IEEE ACCESS, V8, P206222, DOI 10.1109/ACCESS.2020.3037979
   Al-Hawawreh Muna, 2021, IEEE Transactions on Network Science and Engineering, V8, P2968, DOI 10.1109/TNSE.2020.3032415
   Al-Qatf M, 2018, IEEE ACCESS, V6, P52843, DOI 10.1109/ACCESS.2018.2869577
   Alauthman M, 2020, J NETW COMPUT APPL, V150, DOI 10.1016/j.jnca.2019.102479
   Aldweesh A, 2020, KNOWL-BASED SYST, V189, DOI 10.1016/j.knosys.2019.105124
   Aleesa AM, 2020, NEURAL COMPUT APPL, V32, P9827, DOI 10.1007/s00521-019-04557-3
   Ali R, 2019, Big Data and Security, Communications in Computer and Information Science, P584
   Alom MZ, 2017, PROC NAECON IEEE NAT, P63, DOI 10.1109/NAECON.2017.8268746
   Alrawashdeh K, 2018, CONFERENCE PROCEEDINGS OF 2018 INTERNATIONAL CONFERENCE ON INFORMATION AND COMPUTER TECHNOLOGIES (ICICT), P128, DOI 10.1109/INFOCT.2018.8356855
   Alrawashdeh K, 2016, 2016 15TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2016), P195, DOI [10.1109/ICMLA.2016.167, 10.1109/ICMLA.2016.0040]
   Amma NGB, 2019, NEUROCOMPUTING, V340, P294, DOI 10.1016/j.neucom.2019.02.047
   Amodei D, 2016, PR MACH LEARN RES, V48
   Andriole SJ, 2020, IT PROF, V22, P13, DOI 10.1109/MITP.2019.2949165
   [Anonymous], 2011, INTERNET THINGSHOW N
   Anthi E, 2021, J INF SECUR APPL, V58, DOI 10.1016/j.jisa.2020.102717
   Araujo F, 2019, 35TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSA), P245, DOI 10.1145/3359789.3359822
   Ayoade G, 2020, 53 HAW INT C SYST SC, P1
   Bagaa M, 2020, IEEE ACCESS, V8, P114066, DOI 10.1109/ACCESS.2020.2996214
   Basumallik S, 2019, INT J ELEC POWER, V107, P690, DOI 10.1016/j.ijepes.2018.11.013
   Bengio Y, 2009, FOUND TRENDS MACH LE, V2, P1, DOI 10.1561/2200000006
   Benzaid C, 2020, IEEE NETWORK, V34, P140, DOI 10.1109/MNET.011.2000088
   Berman DS, 2019, INFORMATION, V10, DOI 10.3390/info10040122
   Bhamidipati Sriramya, 2019, Artificial Intelligence for Communications and Networks. First EAI International Conference, AICON 2019. Proceedings. Lecture Notes of the Institute for Computer Sciences, Social Informatics and Telecommunications Engineering (LNICST 287), P190, DOI 10.1007/978-3-030-22971-9_17
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Budgen D., 2008, P 20 ANN WORKSHOP PS, P20
   Canizo M, 2019, NEUROCOMPUTING, V363, P246, DOI 10.1016/j.neucom.2019.07.034
   Carrasco MAM, 2020, 2020 IEEE LATIN AM C, P1, DOI 10.1109/LATINCOM50620.2020.9282324
   Chockwanich Navaporn, 2019, 2019 21st International Conference on Advanced Communication Technology (ICACT), P654, DOI 10.23919/ICACT.2019.8701969
   Cui ZH, 2018, IEEE T IND INFORM, V14, P3187, DOI 10.1109/TII.2018.2822680
   Demertzis K, 2020, NEURAL COMPUT APPL, DOI 10.1007/s00521-020-05189-8
   Diro AA, 2018, FUTURE GENER COMP SY, V82, P761, DOI 10.1016/j.future.2017.08.043
   Dixit P, 2021, COMPUT SCI REV, V39, DOI 10.1016/j.cosrev.2020.100317
   Doriguzzi-Corin R, 2020, IEEE T NETW SERV MAN, V17, P876, DOI 10.1109/TNSM.2020.2971776
   Dutta V, 2020, SENSORS-BASEL, V20, DOI 10.3390/s20164583
   Ebrahimi M, 2020, J MANAGE INFORM SYST, V37, P694, DOI 10.1080/07421222.2020.1790186
   Erfani SM, 2016, PATTERN RECOGN, V58, P121, DOI 10.1016/j.patcog.2016.03.028
   Faker O, 2019, PROCEEDINGS OF THE 2019 ANNUAL ACM SOUTHEAST CONFERENCE (ACMSE 2019), P86, DOI 10.1145/3299815.3314439
   Fang X, 2019, EURASIP J INF SECUR, DOI 10.1186/s13635-019-0090-6
   Farukee M.B., 2020, ADV CYBER SECURITY, P118, DOI 10.1007/978-981-33-6835-4_8
   Fei Ding, 2020, ASIA CCS '20: Proceedings of the 15th ACM Asia Conference on Computer and Communications Security, P33, DOI 10.1145/3320269.3384727
   Maimó LF, 2018, IEEE ACCESS, V6, P7700, DOI 10.1109/ACCESS.2018.2803446
   Ferrag MA., 2020, J. Inform. Secur. Appl, V50, P1
   Fujita H, 2019, IEEE T CYBERNETICS, V49, P1835, DOI 10.1109/TCYB.2018.2815178
   Gamage S, 2020, J NETW COMPUT APPL, V169, DOI 10.1016/j.jnca.2020.102767
   García-Teodoro P, 2009, COMPUT SECUR, V28, P18, DOI 10.1016/j.cose.2008.08.003
   Ghanem WAHM, 2020, NEURAL COMPUT APPL, V32, P11665, DOI 10.1007/s00521-019-04655-2
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Habibi MR, 2021, IEEE J EM SEL TOP P, V9, P4629, DOI 10.1109/JESTPE.2021.3050851
   Haghnegandar L, 2020, NEURAL COMPUT APPL, V32, P9427, DOI 10.1007/s00521-019-04453-w
   Hanif S, 2019, 2019 IEEE 16TH INTERNATIONAL CONFERENCE ON SMART CITIES: IMPROVING QUALITY OF LIFE USING ICT, IOT AND AI (IEEE HONET-ICT 2019), P152, DOI 10.1109/honet.2019.8908122
   Hatcher WG, 2018, IEEE ACCESS, V6, P24411, DOI 10.1109/ACCESS.2018.2830661
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   He YB, 2017, IEEE T SMART GRID, V8, P2505, DOI 10.1109/TSG.2017.2703842
   Hemalatha J, 2021, ENTROPY-SWITZ, V23, DOI 10.3390/e23030344
   Hendler D, 2018, PROCEEDINGS OF THE 2018 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIACCS'18), P187, DOI 10.1145/3196494.3196511
   Highnam K1 K., 2021, SN Comput Sci., V2, P110, DOI [10.1007/s42979-021-00507-w, DOI 10.1007/S42979-021-00507-W]
   Hindy H, 2020, ELECTRONICS-SWITZ, V9, DOI 10.3390/electronics9101684
   Hinton G, 2012, IEEE SIGNAL PROC MAG, V29, P82, DOI 10.1109/MSP.2012.2205597
   Homayoun S, 2019, FUTURE GENER COMP SY, V90, P94, DOI 10.1016/j.future.2018.07.045
   Hou SF, 2016, 2016 IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE WORKSHOPS (WIW 2016), P104, DOI [10.1109/WIW.2016.040, 10.1109/WIW.2016.15]
   Hsien-De Huang T, 2018, IEEE INT CONF BIG DA, P2633, DOI 10.1109/BigData.2018.8622324
   Hu PF, 2017, IEEE INTERNET THINGS, V4, P1143, DOI 10.1109/JIOT.2017.2659783
   Hussain B, 2021, IEEE T IND INFORM, V17, P860, DOI 10.1109/TII.2020.2974520
   Ibor AE, 2020, CYBERSECURITY, V3, DOI 10.1186/s42400-020-00053-7
   Ibor AE, 2022, INF SECUR J, V31, P105, DOI 10.1080/19393555.2021.1883777
   Imtiaz SI, 2021, FUTURE GENER COMP SY, V115, P844, DOI 10.1016/j.future.2020.10.008
   Jagtap SS, 2021, FUTURE GENER COMP SY, V119, P84, DOI 10.1016/j.future.2021.02.001
   Jahromi AN, 2021, IEEE INTERNET THINGS, V8, P13712, DOI 10.1109/JIOT.2021.3067667
   Jahromi AN, 2020, IEEE TETCI, V4, P630, DOI 10.1109/TETCI.2019.2910243
   Javeed D, 2021, ELECTRONICS-SWITZ, V10, DOI 10.3390/electronics10080918
   Jia T, 2021, 21 IEEE INT C SOFTW
   Karbab EB, 2018, DIGIT INVEST, V24, pS48, DOI 10.1016/j.diin.2018.01.007
   Karimipour H, 2019, IEEE ACCESS, V7, P80778, DOI 10.1109/ACCESS.2019.2920326
   Kasim Ö, 2020, COMPUT NETW, V180, DOI 10.1016/j.comnet.2020.107390
   Kaur S, 2020, NEURAL COMPUT APPL, V32, P7859, DOI 10.1007/s00521-019-04187-9
   Khan FA, 2019, IEEE ACCESS, V7, P30373, DOI 10.1109/ACCESS.2019.2899721
   Kim A, 2020, IEEE ACCESS, V8, P70245, DOI 10.1109/ACCESS.2020.2986882
   Kim H, 2020, LECT NOTES COMPUT SC, V12583, P16, DOI 10.1007/978-3-030-65299-9_2
   Kim T, 2019, IEEE T INF FOREN SEC, V14, P773, DOI 10.1109/TIFS.2018.2866319
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kravchik M, 2022, IEEE T DEPEND SECURE, V19, P2179, DOI 10.1109/TDSC.2021.3050101
   Krishna CGL, 2017, 2017 IEEE INTERNATIONAL SYMPOSIUM ON SAFETY, SECURITY AND RESCUE ROBOTICS (SSRR), P194, DOI 10.1109/SSRR.2017.8088163
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Larriva-Novo XA, 2020, IEEE ACCESS, V8, P9005, DOI 10.1109/ACCESS.2019.2963407
   Lee J, 2019, IEEE ACCESS, V7, P165607, DOI 10.1109/ACCESS.2019.2953095
   Lee SJ, 2020, IEEE ACCESS, V8, P65520, DOI 10.1109/ACCESS.2020.2985089
   Lezzi M, 2018, COMPUT IND, V103, P97, DOI 10.1016/j.compind.2018.09.004
   Li D, 2019, LECT NOTES COMPUT SC
   Li Y, 2019, IEEE ACCESS, V7, P32765, DOI 10.1109/ACCESS.2019.2891588
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Lingam G, 2019, APPL INTELL, V49, P3947, DOI 10.1007/s10489-019-01488-3
   Liu HY, 2019, APPL SCI-BASEL, V9, DOI 10.3390/app9204396
   Liu J, 2012, IEEE COMMUN SURV TUT, V14, P981, DOI 10.1109/SURV.2011.122111.00145
   Lopez-Martin M, 2020, EXPERT SYST APPL, V141, DOI 10.1016/j.eswa.2019.112963
   Loukas G, 2018, IEEE ACCESS, V6, P3491, DOI 10.1109/ACCESS.2017.2782159
   Lu Y, 2019, IEEE INTERNET THINGS, V6, P2103, DOI 10.1109/JIOT.2018.2869847
   Mahdavifar S, 2020, NEURAL COMPUT APPL, V32, P14753, DOI 10.1007/s00521-020-04830-w
   Maimo Lorenzo Fern'andez, 2017, 2017 IEEE SMARTWORLD
   Maurya S, 2020, J STAT MANAG SYST, V23, P945, DOI 10.1080/09720510.2020.1799496
   McDermott CD, 2018, IEEE IJCNN
   Mendiratta Samaira, 2019, 2019 International Conference on contemporary Computing and Informatics (IC3I). Proceedings, P179, DOI 10.1109/IC3I46837.2019.9055571
   Michie D., 1994, MACHINE LEARNING NEU
   Mnih V, 2016, PR MACH LEARN RES, V48
   Moore SR, 2019, INT J HUM-COMPUT INT, V35, P630, DOI 10.1080/10447318.2018.1489580
   Naseer S, 2018, IEEE ACCESS, V6, P48231, DOI 10.1109/ACCESS.2018.2863036
   Ndichu S, 2019, APPL SOFT COMPUT, V84, DOI 10.1016/j.asoc.2019.105721
   Ni S, 2018, COMPUT SECUR, V77, P871, DOI 10.1016/j.cose.2018.04.005
   Niu WN, 2020, SENSORS-BASEL, V20, DOI 10.3390/s20133645
   Niu WN, 2020, MEASUREMENT, V152, DOI 10.1016/j.measurement.2019.107139
   Niyaz Q., 2017, ICST T SECURITY SAFE, V4, P153515, DOI DOI 10.4108/EAI.28-12-2017.153515
   Nunes E, 2016, IEEE INTERNATIONAL CONFERENCE ON INTELLIGENCE AND SECURITY INFORMATICS: CYBERSECURITY AND BIG DATA, P7, DOI 10.1109/ISI.2016.7745435
   Onishi H, 2014, IEEE CONF COMM NETW, P506, DOI 10.1109/CNS.2014.6997527
   Ouairy L, 2019, MOL PHYLOGENET EVOL
   Pan Y, 2019, J INTERNET SERV APPL, V10, DOI 10.1186/s13174-019-0115-x
   Parra GD, 2020, J NETW COMPUT APPL, V163, DOI 10.1016/j.jnca.2020.102662
   Pektas A, 2019, NEURAL COMPUT APPL, V31, P8021, DOI 10.1007/s00521-018-3595-x
   Petersen K., 2008, 12 INT C EV ASS SOFT, P26, DOI [10.14236/ewic/ease2008.8, DOI 10.14236/EWIC/EASE2008.8]
   Popoola SI, 2021, IEEE INTERNET THINGS, V8, P4944, DOI 10.1109/JIOT.2020.3034156
   Preuveneers D, 2018, APPL SCI-BASEL, V8, DOI 10.3390/app8122663
   Radford A., 2015, ARXIV
   Ramaiah M, 2021, T EMERG TELECOMMUN T, V32, DOI 10.1002/ett.4221
   Ravi V, 2023, IEEE T ENG MANAGE, V70, P249, DOI 10.1109/TEM.2021.3059664
   Rhode M, 2018, COMPUT SECUR, V77, P578, DOI 10.1016/j.cose.2018.05.010
   Ronen R., 2018, ARXIV180210135
   Rong C, 2020, TRANSNET UNSEEN MALW
   Roseline SA, 2019, COMPUTER VISION IMAG, V1148, P62, DOI [10.1007/978-981-15-4018, DOI 10.1007/978-981-15-4018]
   Russell S., 2020, ARTIF INTELL
   Saharkhizan M, 2020, IEEE INTERNET THINGS, V7, P8852, DOI 10.1109/JIOT.2020.2996425
   Shams EA, 2021, NEURAL COMPUT APPL, V33, P13647, DOI 10.1007/s00521-021-05994-9
   Shang LK, 2021, COMPUT NETW, V189, DOI 10.1016/j.comnet.2021.107937
   Sharma B., 2019, INT J ENG APPL SCI T, V4, P148, DOI [10.33564/IJEAST.2019.v04i08.023, DOI 10.33564/IJEAST.2019.V04I08.023]
   Sharmeen S, 2020, APPL SOFT COMPUT, V89, DOI 10.1016/j.asoc.2020.106089
   Shi WC, 2020, SOFT COMPUT, V24, P16605, DOI 10.1007/s00500-020-04963-z
   Shone N, 2018, IEEE T EM TOP COMP I, V2, P41, DOI 10.1109/TETCI.2017.2772792
   Shrivastava Vishal, 2020, Journal of Cyber Security Technology, V4, P153, DOI 10.1080/23742917.2020.1714195
   Siddiqui S, 2017, 2017 IEEE 16TH INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS & COGNITIVE COMPUTING (ICCI*CC), P297, DOI 10.1109/ICCI-CC.2017.8109765
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Srinivas J, 2019, FUTURE GENER COMP SY, V92, P178, DOI 10.1016/j.future.2018.09.063
   Sun CC, 2018, INT J ELEC POWER, V99, P45, DOI 10.1016/j.ijepes.2017.12.020
   Sun GS, 2021, IEEE T DEPEND SECURE, V18, P283, DOI 10.1109/TDSC.2018.2884928
   Taheri Shayan., 2018, Big Data and Cognitive Computing, V2, P37
   Thamilarasu G, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19091977
   Tian QT, 2020, APPL INTELL, V50, P3162, DOI 10.1007/s10489-020-01694-4
   Ullah F, 2019, IEEE ACCESS, V7, P124379, DOI 10.1109/ACCESS.2019.2937347
   Ussath Martin, 2017, 2017 IEEE 4th International Conference on Cyber-Security and Cloud Computing (CSCloud), P255, DOI 10.1109/CSCloud.2017.10
   Valliammal N., 2018, ITAL J PURE APPL MAT, V5, P489, DOI [10.19101/IJATEE.2018.547030, DOI 10.19101/IJATEE.2018.547030]
   Vinayakumar R, 2020, IEEE T IND APPL, V56, P4436, DOI 10.1109/TIA.2020.2971952
   Vinayakumar R, 2019, ADV SCI TECH SEC APP, P87, DOI 10.1007/978-3-030-16837-7_6
   Vinayakumar R, 2019, IEEE ACCESS, V7, P46717, DOI 10.1109/ACCESS.2019.2906934
   Vinayakumar R, 2019, IEEE ACCESS, V7, P41525, DOI 10.1109/ACCESS.2019.2895334
   Wang H, 2021, FUTURE GENER COMP SY, V117, P145, DOI 10.1016/j.future.2020.11.023
   Wei B, 2019, SENSORS-BASEL, V19, DOI 10.3390/s19194258
   Wieringa R, 2006, REQUIR ENG, V11, P102, DOI 10.1007/s00766-005-0021-6
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wu YH, 2016, Arxiv, DOI [arXiv:1609.08144, DOI 10.48550/ARXIV.1609.08144]
   Xin Y, 2018, IEEE ACCESS, V6, P35365, DOI 10.1109/ACCESS.2018.2836950
   Xiong R, 2018, APPL ENERG, V211, P538, DOI 10.1016/j.apenergy.2017.11.072
   Yamin MM, 2018, International Conference on Security for Information Technology and Communications, V1359, P157, DOI 10.1007/978-3-030-12942-2_13
   Yang J, 2021, IEEE ACCESS, V9, P39229, DOI 10.1109/ACCESS.2021.3064561
   Yang WC, 2019, IEEE ACCESS, V7, P29891, DOI 10.1109/ACCESS.2019.2895751
   Yerima SY, 2021, ELECTRONICS-SWITZ, V10, DOI 10.3390/electronics10040519
   Yin CL, 2017, IEEE ACCESS, V5, P21954, DOI 10.1109/ACCESS.2017.2762418
   Yousefi-Azar M, 2018, IEEE ACCESS, V6, P49418, DOI 10.1109/ACCESS.2018.2864871
   Yuan XY, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SMART COMPUTING (SMARTCOMP), P9, DOI 10.1109/smartcomp.2017.7946998
   Yuan YL, 2020, IEEE INFOCOM SER, P2449, DOI [10.1109/infocom41043.2020.9155487, 10.1109/INFOCOM41043.2020.9155487]
   Yuan ZL, 2016, TSINGHUA SCI TECHNOL, V21, P114
   Zhao J, 2019, EURASIP J INF SECUR, DOI 10.1186/s13635-019-0084-4
   Zhao J, 2020, INFORM SCIENCES, V537, P380, DOI 10.1016/j.ins.2020.03.113
   Zhao Y, 2020, SECURITY PRIVACY DIG, V1268, P219, DOI [10.1007/978-981-15-9129-7_16, DOI 10.1007/978-981-15-9129-7_16]
   Zhong M, 2021, SENSORS-BASEL, V21, DOI 10.3390/s21041113
   Zhong W, 2019, EXPERT SYST APPL, V133, P151, DOI 10.1016/j.eswa.2019.04.064
   Zhou HX, 2020, IEEE ACCESS, V8, P205444, DOI 10.1109/ACCESS.2020.3023434
NR 175
TC 1
Z9 1
U1 3
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2023
VL 28
IS 3
AR 76
DI 10.1007/s10664-023-10302-1
PG 71
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA F8OJ1
UT WOS:000984883400001
DA 2024-07-18
ER

PT J
AU Zhou, Z
   Bo, LL
   Wu, XX
   Sun, XB
   Zhang, T
   Li, B
   Zhang, JL
   Cao, SC
AF Zhou, Zhou
   Bo, Lili
   Wu, Xiaoxue
   Sun, Xiaobing
   Zhang, Tao
   Li, Bin
   Zhang, Jiale
   Cao, Sicong
TI SPVF: security property assisted vulnerability fixing via
   attention-based models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Vulnerability fixing; Software security; Attention-based models; Pointer
   generator
AB The past few years have witnessed the wide application of machine learning models to fix vulnerabilities automatically. However, existing approaches cannot capture the characteristics of vulnerabilities that are helpful to improve the effectiveness of automated vulnerability fixing. In this paper, we propose a novel approach for automatically fixing vulnerabilities, called SPVF. SPVF captures the security property from the descriptive information about the vulnerability. SPVF is based on the attention mechanism and uses the abstract syntax tree as well as the security properties, integrating them using the pointer generator. The experimental results on two public datasets show that SPVF outperforms the state-of-the-art approaches by 13% for C/C++ and 47% for Python. And SPVF is capable of successfully fixing 153 C/C++ vulnerabilities and 276 Python vulnerabilities.
C1 [Zhou, Zhou; Bo, Lili; Wu, Xiaoxue; Sun, Xiaobing; Li, Bin; Zhang, Jiale; Cao, Sicong] Yangzhou Univ, Sch Informat Engn, Yangzhou, Jiangsu, Peoples R China.
   [Bo, Lili; Sun, Xiaobing] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Zhang, Tao] Macau Univ Sci & Technol, Fac Informat Technol, Macau, Peoples R China.
C3 Yangzhou University; Nanjing University; Macau University of Science &
   Technology
RP Bo, LL; Sun, XB (corresponding author), Yangzhou Univ, Sch Informat Engn, Yangzhou, Jiangsu, Peoples R China.; Bo, LL; Sun, XB (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
EM 181303130@yzu.edu.cn; lilibo@yzu.edu.cn; xiaoxuewu@yzu.edu.cn;
   sundomore@163.com; tazhang@must.edu.mo; lb@yzu.edu.cn; zhangjle@163.com;
   mx120190439@yzu.edu.cn
RI zhang, clearle/IWU-4295-2023; Zhang, Tao/E-5634-2012; Zhang,
   Jiaqi/JCO-6818-2023
OI Zhang, Tao/0000-0002-6272-4069; Cao, Sicong/0000-0003-3688-4437
FU National Natural Science Foundation of China [61872312, 61972335,
   62002309]; Six Talent Peaks Project in Jiangsu Province [RJFW-053];
   Jiangsu "333" Project; Natural Science Foundation of the Jiangsu Higher
   Education Institutions of China [20KJB520016]; Open Funds of State Key
   Laboratory for Novel Software Technology of Nanjing University
   [KFKT2022B17, KFKT2020B16]; Yangzhou University Interdisciplinary
   Research Foundation for Animal Husbandry Discipline of Targeted
   [yzuxk202015]; Yangzhou city-Yangzhou University Science and Technology
   Cooperation Fund Project [YZ2021157]; Yangzhou University Top-level
   Talents Support Program (2019)
FX This work is supported by the National Natural Science Foundation of
   China (No.61872312, No.61972335, No.62002309); the Six Talent Peaks
   Project in Jiangsu Province (No. RJFW-053), the Jiangsu "333" Project;
   the Natural Science Foundation of the Jiangsu Higher Education
   Institutions of China (No. 20KJB520016); the Open Funds of State Key
   Laboratory for Novel Software Technology of Nanjing University
   (No.KFKT2022B17, No.KFKT2020B16), the Yangzhou University
   Interdisciplinary Research Foundation for Animal Husbandry Discipline of
   Targeted Support (yzuxk202015), the Yangzhou city-Yangzhou University
   Science and Technology Cooperation Fund Project (YZ2021157) and Yangzhou
   University Top-level Talents Support Program (2019).
CR Abhinav K, 2021, LECT NOTES ARTIF INT, V12748, P3, DOI 10.1007/978-3-030-78292-4_1
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Bird S., 2004, P ACL INTERACTIVE PO, P214
   Cao SC, 2022, PROC INT CONF SOFTW, P1456, DOI 10.1145/3510003.3510219
   Cao SC, 2021, INFORM SOFTWARE TECH, V136, DOI 10.1016/j.infsof.2021.106576
   Chakraborty S, 2020, Arxiv, DOI arXiv:2009.07235
   Chen ZB, 2021, IEEE T CYBERNETICS, V51, P451, DOI 10.1109/TCYB.2018.2889791
   Chen ZM, 2019, Arxiv, DOI arXiv:1912.02015
   Chen ZM, 2021, IEEE T SOFTWARE ENG, V47, P1943, DOI 10.1109/TSE.2019.2940179
   Cheng X, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3436877
   Chi J, 2020, arXiv
   Cooper N, 2021, PROC INT CONF SOFTW, P957, DOI 10.1109/ICSE43902.2021.00091
   CVE, 2021, COMM VULN EXP
   CWE, 2021, COMM WEAKN EN
   CWE, 2021, CWE CAT RES CONC
   Delamore B, 2015, 2015 IEEE TRUSTCOM/BIGDATASE/ISPA, VOL 1, P1129, DOI 10.1109/Trustcom.2015.493
   Durumeric Z, 2014, PROCEEDINGS OF THE 2014 ACM INTERNET MEASUREMENT CONFERENCE (IMC'14), P475, DOI 10.1145/2663716.2663755
   Exploit-DB, 2021, EXPL DAT
   Exploit-DB, 2021, ONL ENR MAN SYST PHP
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   Freitag Markus, 2017, P 1 WORKSH NEUR MACH, P56
   Github, 2007, GITH COD HOST PLATF
   Harer JA, 2018, ADV NEUR IN, V31
   Huang Z, 2019, P IEEE S SECUR PRIV, P539, DOI 10.1109/SP.2019.00071
   Jiang N, 2021, PROC INT CONF SOFTW, P1161, DOI 10.1109/ICSE43902.2021.00107
   KingmaDP BaJ, 2015, 3 INT C LEARNING REP
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Li B, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-022-00325-1
   Li F, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2201, DOI 10.1145/3133956.3134072
   Li Y, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P292, DOI 10.1145/3468264.3468597
   Li Z, 2018, Arxiv, DOI arXiv:1801.01681
   Lutellier Thibaud, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P101, DOI 10.1145/3395363.3397369
   Mesbah A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P925, DOI 10.1145/3338906.3340455
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Ni Z, 2020, J SYST SOFTWARE, V163, DOI 10.1016/j.jss.2020.110538
   Ott Myle, 2019, ARXIV190401038
   Palo Alto Networks, 2021, STAT EXPL DEV 80 EXP
   Pradel Michael, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P225, DOI 10.1145/3395363.3397356
   Python, 2021, PYTH PROGR AN MICR
   See A, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1073, DOI 10.18653/v1/P17-1099
   Sun XB, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-017-9459-5
   Tarlow D., 2020, P IEEEACM 42 INT C S, P19, DOI 10.1145/3387940.3392181
   Transformer, 2020, US
   Tufano M, 2018, IEEE INT CONF AUTOM, P832, DOI 10.1145/3238147.3240732
   Vaswani A, 2017, ADV NEUR IN, V30
   Vudenc, 2021, VULN DET DEEP LEARN
   Wartschinski L, 2019, VUDENC PYTHON CORPUS, DOI [DOI 10.5281/ZENODO.3559480, 10.5281/zenodo.3559480]
   Wei Y, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2376
   Wikipedia, 2021, SCR LANG WIK
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Yamaguchi F, JOERN PLATFORM ROBUS
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Yang SH, 2020, Arxiv, DOI arXiv:2002.07526
   Yasunaga M, 2020, INT C MACHINE LEARNI, P10799
   Zhou C, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10010-8
NR 55
TC 9
Z9 9
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 171
DI 10.1007/s10664-022-10216-4
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V4SY
UT WOS:000859469500015
DA 2024-07-18
ER

PT J
AU Ochoa, L
   Degueule, T
   Falleri, JR
   Vinju, J
AF Ochoa, Lina
   Degueule, Thomas
   Falleri, Jean-Remy
   Vinju, Jurgen
TI Breaking bad? Semantic versioning and impact of breaking changes in
   Maven Central An external and differentiated replication study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software evolution; API evolution; Breaking changes; Backwards
   compatibility; Maven Central
ID API; DEVELOPERS; EVOLUTION
AB Just like any software, libraries evolve to incorporate new features, bug fixes, security patches, and refactorings. However, when a library evolves, it may break the contract previously established with its clients by introducing Breaking Changes (BCs) in its API. These changes might trigger compile-time, link-time, or run-time errors in client code. As a result, clients may hesitate to upgrade their dependencies, raising security concerns and making future upgrades even more difficult. Understanding how libraries evolve helps client developers to know which changes to expect and where to expect them, and library developers to understand how they might impact their clients. In the most extensive study to date, Raemaekers et al. investigate to what extent developers of Java libraries hosted on the Maven Central Repository (MCR) follow semantic versioning conventions to signal the introduction of BCs and how these changes impact client projects. Their results suggest that BCs are widespread without regard for semantic versioning, with a significant impact on clients. In this paper, we conduct an external and differentiated replication study of their work. We identify and address some limitations of the original protocol and expand the analysis to a new corpus spanning seven more years of the MCR. We also present a novel static analysis tool for Java bytecode, Maracas, which provides us with: (i) the set of all BCs between two versions of a library, and; (ii) the set of locations in client code impacted by individual BCs. Our key findings, derived from the analysis of 119,879 library upgrades and 293,817 clients, contrast with the original study and show that 83.4% of these upgrades do comply with semantic versioning. Furthermore, we observe that the tendency to comply with semantic versioning has significantly increased over time. Finally, we find that most BCs affect code that is not used by any client, and that only 7.9% of all clients are affected by BCs. These findings should help (i) library developers to understand and anticipate the impact of their changes; (ii) library users to estimate library upgrading effort and to pick libraries that are less likely to break, and; (iii) researchers to better understand the dynamics of library-client co-evolution in Java.
C1 [Ochoa, Lina; Vinju, Jurgen] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Degueule, Thomas; Falleri, Jean-Remy] Univ Bordeaux, LaBRI, CNRS, Bordeaux INP, Bordeaux, France.
   [Falleri, Jean-Remy] Inst Univ France, Paris, France.
   [Vinju, Jurgen] Ctr Wiskunde, Informat, Amsterdam, Netherlands.
C3 Eindhoven University of Technology; Universite de Bordeaux; Centre
   National de la Recherche Scientifique (CNRS); Institut Universitaire de
   France
RP Ochoa, L (corresponding author), Eindhoven Univ Technol, Eindhoven, Netherlands.
EM l.m.ochoa.venegas@tue.nl; thomas.degueule@labri.fr; falleri@labri.fr;
   jurgen.vinju@cwi.nl
RI Degueule, Thomas/AEJ-3192-2022
OI Degueule, Thomas/0000-0002-5961-7940
FU European Union [732223]
FX This research has been carried out as part of the CROSSMINER project,
   which has received funding from the European Union's Horizon 2020
   Research and Innovation Programme under grant agreement No. 732223. The
   authors would like to thank Steven Raemaekers for sharing all the
   scripts and data of the replicated work, and the anonymous reviewers for
   their perceptive comments.
CR [Anonymous], 2007, EVOLVING JAVA BASED
   [Anonymous], 2014, The Java Language Specification, Java SE
   Basten B, 2015, 2015 IEEE 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN), P25, DOI 10.1109/SWAN.2015.7070485
   Bavota G, 2013, PROC IEEE INT CONF S, P280, DOI 10.1109/ICSM.2013.39
   Benelallam Amine, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P344, DOI 10.1109/MSR.2019.00060
   Benelallam A, 2018, **DATA OBJECT**, DOI 10.5281/zenodo.1489120
   Bogart C, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447245
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Brito A, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P255, DOI 10.1109/SANER.2018.8330214
   Businge J., 2010, EVOL IWPSE 10, P63, DOI [10.1145/1862372.1862389, DOI 10.1145/1862372.1862389]
   Businge J, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P117, DOI [10.1109/saner.2019.8668018, 10.1109/SANER.2019.8668018]
   Businge J, 2015, SOFTWARE QUAL J, V23, P107, DOI 10.1007/s11219-013-9221-3
   Cossette B.E., 2012, P ACM SIGSOFT 20 INT, p55:1, DOI DOI 10.1145/2393596.2393661
   Decan A, 2021, IEEE T SOFTWARE ENG, V47, P1226, DOI 10.1109/TSE.2019.2918315
   Dietrich J, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P64, DOI 10.1109/CSMR-WCRE.2014.6747226
   Dig D, 2005, PROC IEEE INT CONF S, P389
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Godfrey MW, 2014, J SOFTW-EVOL PROC, V26, P613, DOI 10.1002/smr.1636
   Gonzalez-Barahona J. M., 2017, IFIP Advances in Information and Communication Technology, P182
   Harrand N, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111134
   Hora A, 2018, SOFTWARE QUAL J, V26, P161, DOI 10.1007/s11219-016-9344-4
   Hora A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P278, DOI 10.1145/2950290.2950306
   Jezek K, 2017, J OBJECT TECHNOL, V16, DOI 10.5381/jot.2017.16.4.a2
   Jezek K, 2015, INFORM SOFTWARE TECH, V65, P129, DOI 10.1016/j.infsof.2015.02.014
   Ketkar A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P629, DOI 10.1145/3368089.3409725
   Klint P, 2010, LNCS
   Kuhne L, 2003, CLIRR MAVEN PLUGIN
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Kula RG, 2018, INFORM SOFTWARE TECH, V93, P186, DOI 10.1016/j.infsof.2017.09.007
   Lehman M. M., 1978, Programming methodology. A collection of articles by members of IFIP WG2.3, P42
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Mastrangelo L, 2015, ACM SIGPLAN NOTICES, V50, P695, DOI [10.1145/2814270.2814313, 10.1145/2858965.2814313]
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   Mostafa S, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P215, DOI 10.1145/3092703.3092721
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Preston-Werner Tom., 2013, Semantic Versioning 2.0.0
   Raemaekers S, 2017, J SYST SOFTWARE, V129, P140, DOI 10.1016/j.jss.2016.04.008
   Raemaekers S, 2013, MAVEN DEPENDENCY DAT
   Raemaekers S, 2014, IEEE INT WORK C SO, P215, DOI 10.1109/SCAM.2014.30
   Raemaekers S, 2013, IEEE WORK CONF MIN S, P221, DOI 10.1109/MSR.2013.6624031
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Robbes R., 2012, P ACM SIGSOFT 20 INT, P1, DOI 10.1145/2393596.2393662
   Sawant AA, 2019, THESIS DELFT U TECHN
   Sawant AA, 2016, PROC IEEE INT CONF S, P400, DOI 10.1109/ICSME.2016.64
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wu W, 2016, EMPIR SOFTW ENG, V21, P2366, DOI 10.1007/s10664-015-9411-7
   Xavier L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P138, DOI 10.1109/SANER.2017.7884616
   Xavier L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P392, DOI 10.1109/SANER.2017.7884640
   Xi YG, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI 10.1145/3361242.3361246
   Xu SZ, 2019, INT C PROGRAM COMPRE, P335, DOI 10.1109/ICPC.2019.00052
   Zerouali A, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2157
NR 53
TC 7
Z9 9
U1 2
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2022
VL 27
IS 3
AR 61
DI 10.1007/s10664-021-10052-y
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZV2BV
UT WOS:000770339500014
DA 2024-07-18
ER

PT J
AU Reis, S
   Abreu, R
   Cruz, L
AF Reis, Sofia
   Abreu, Rui
   Cruz, Luis
TI Fixing vulnerabilities potentially hinders maintainability
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software security; Software maintenance; Open-source software
ID CODE QUALITY; LARGE-SCALE; SOFTWARE; IMPACT
AB Security is a requirement of utmost importance to produce high-quality software. However, there is still a considerable amount of vulnerabilities being discovered and fixed almost weekly. We hypothesize that developers affect the maintainability of their codebases when patching vulnerabilities. This paper evaluates the impact of patches to improve security on the maintainability of open-source software. Maintainability is measured based on the Better Code Hub's model of 10 guidelines on a dataset, including 1300 security-related commits. Results show evidence of a trade-off between security and maintainability for 41.90% of the cases, i.e., developers may hinder software maintainability. Our analysis shows that 38.29% of patches increased software complexity and 37.87% of patches increased the percentage of LOCs per unit. The implications of our study are that changes to codebases while patching vulnerabilities need to be performed with extra care; tools for patch risk assessment should be integrate into the CI/CD pipeline; computer science curricula needs to be updated; and, more secure programming languages are necessary.
C1 [Reis, Sofia] Univ Lisbon, INESC ID, Lisbon, Portugal.
   [Reis, Sofia] Univ Lisbon, IST, Lisbon, Portugal.
   [Abreu, Rui] Univ Porto, INESC ID, Porto, Portugal.
   [Abreu, Rui] Univ Porto, FEUP, Porto, Portugal.
   [Cruz, Luis] Delft Univ Technol, Delft, Netherlands.
C3 INESC-ID; Universidade de Lisboa; Universidade de Lisboa; Universidade
   de Lisboa; Universidade do Porto; INESC-ID; Universidade do Porto; Delft
   University of Technology
RP Reis, S (corresponding author), Univ Lisbon, INESC ID, Lisbon, Portugal.; Reis, S (corresponding author), Univ Lisbon, IST, Lisbon, Portugal.
EM sofia.o.reis@tecnico.ulisboa.pt; rui@computer.org; L.Cruz@tudelft.nl
RI Abreu, Rui/K-7048-2019; Cruz, Luis/AAJ-1874-2021
OI Abreu, Rui/0000-0003-3734-3157; Cruz, Luis/0000-0002-1615-355X; Reis,
   Sofia/0000-0002-5690-2279
FU SIG's Better Code Hub team; FCT-Fundacao para a Ciencia e a Tecnologia
   [UIDB/50021/2020, SFRH/BD/143319/2019]; SecurityAware Project
   [CMU/TIC/0064/2019]; Carnegie Mellon Program; FaultLocker Project
   [PTDC/CCI-COM/29300/2017]; Fundação para a Ciência e a Tecnologia
   [SFRH/BD/143319/2019] Funding Source: FCT
FX We thank SIG's Better Code Hub team for all the support as well as help
   in validating our methodology and results; and, Pedro Ad ao for the
   invaluable feedback in the early stages of the project. This work is
   financed by National Funds through the Portuguese funding agency,
   FCT-Fundacao para a Ciencia e a Tecnologia with reference
   UIDB/50021/2020, a PhD scholarship (ref. SFRH/BD/143319/2019), the
   SecurityAware Project (ref. CMU/TIC/0064/2019)-also funded by the
   Carnegie Mellon Program-, and the FaultLocker Project (ref.
   PTDC/CCI-COM/29300/2017).
CR Abu Elkhail A, 2019, 2019 IEEE 5TH INTL CONFERENCE ON BIG DATA SECURITY ON CLOUD (BIGDATASECURITY) / IEEE INTL CONFERENCE ON HIGH PERFORMANCE AND SMART COMPUTING (HPSC) / IEEE INTL CONFERENCE ON INTELLIGENT DATA AND SECURITY (IDS), P7, DOI 10.1109/BigDataSecurity-HPSC-IDS.2019.00013
   Acar Y, 2017, 2017 IEEE CYBERSECURITY DEVELOPMENT (SECDEV), P22, DOI 10.1109/SecDev.2017.17
   Alves T. L., 2011, 2011 Proceedings of Joint Conf of 21st Int'l Workshop on Software Measurement and the 6th Int'l Conference on Software Process and Product Measurement (IWSM-MENSURA 2011), P20, DOI 10.1109/IWSM-MENSURA.2011.15
   Alves TL, 2010, PROC IEEE INT CONF S
   [Anonymous], 2006, FEAR THINKING SENSIB
   Baggen R, 2012, SOFTWARE QUAL J, V20, P287, DOI 10.1007/s11219-011-9144-9
   Berger ED, 2019, ARXIV 190110220
   Bijlsma D, 2012, SOFTWARE QUAL J, V20, P265, DOI 10.1007/s11219-011-9140-0
   Chowdhury I., 2010, Proceedings of the 2010 ACM Symposium on Applied Computing, P1963
   Common Criteria Working Group, 2009, TECH REP TECHNICAL R
   Cruz L, 2019, PROC IEEE INT CONF S, P29, DOI 10.1109/ICSME.2019.00013
   Darya K., 2014, P 5 WORKSH EV US PRO, P57
   di Biase M, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON TECHNICAL DEBT (TECHDEBT 2019), P113, DOI 10.1109/TechDebt.2019.00030
   Foundation TO, 2017, TECH REP
   Foundation TO, 2017, TECH REP
   Hegedus P, 2018, INFORM SOFTWARE TECH, V95, P313, DOI 10.1016/j.infsof.2017.11.012
   Hegedus P, 2012, COMM COM INF SC, V340, P138
   Heitlager I, 2007, QUATIC 2007: 6TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, PROCEEDINGS, P30, DOI 10.1109/QUATIC.2007.8
   International Organization for Standardization, 2011, INT STANDARD ISOIEC
   Islam MR, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 3, P8, DOI 10.1109/SANER.2016.90
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kataoka Y, 2002, PROC IEEE INT CONF S, P576, DOI 10.1109/ICSM.2002.1167822
   Khomh F, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P274
   Li F, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2201, DOI 10.1145/3133956.3134072
   Malavolta I, 2018, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2018.00042
   Maruyajna K, 2008, ASIA PAC SOFWR ENG, P445, DOI 10.1109/APSEC.2008.57
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McGraw G, 2004, IEEE SECUR PRIV, V2, P80, DOI 10.1109/MSECP.2004.1281254
   MCGRAW KO, 1992, PSYCHOL BULL, V111, P361, DOI 10.1037/0033-2909.111.2.361
   Nistor L, 2013, MASPEGHI 13, P9, DOI [DOI 10.1145/2489828, 10.1145/2489828.2489830]
   Olivari M, 2018, THESIS U AMSTERDAM
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Ponta Serena Elisa, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P383, DOI 10.1109/MSR.2019.00064
   Pothamsetty V., 2005, Proceedings of the 2nd annual conference on information security curriculum development, P54, DOI [10.1145/1107622.1107635, DOI 10.1145/1107622.1107635]
   PRATT JW, 1959, J AM STAT ASSOC, V54, P655, DOI 10.2307/2282543
   Ray B, 2017, COMMUN ACM, V60, P91, DOI 10.1145/3126905
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Rei Sofia, 2017, International Journal of Secure Software Engineering, V8, P1, DOI 10.4018/IJSSE.2017070101
   Reis S., 2017, P INT WORKSHOP SECUR, P70
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Slaughter SA, 1998, COMMUN ACM, V41, P67, DOI 10.1145/280324.280335
   Telang R, 2007, IEEE T SOFTWARE ENG, V33, P544, DOI [10.1109/TSE.2007.70712, 10.1109/TSE.2007.1015]
   The OWASP Foundation, 2009, TECH REP
   Visser J., 2016, Building Maintainable Software, C# Edition: Ten Guidelines for Future-Proof Code
   Visser J., 2020, SIGTUVIT EVALUATION
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xu HY, 2013, 2013 IEEE 7TH INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY - COMPANION (SERE-C), P232, DOI 10.1109/SERE-C.2013.11
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
   Zibran MF, 2011, 2011 16TH IEEE INTERNATIONAL CONFERENCE ON ENGINEERING OF COMPLEX COMPUTER SYSTEMS (ICECCS), P295, DOI 10.1109/ICECCS.2011.36
NR 49
TC 0
Z9 1
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 127
DI 10.1007/s10664-021-10019-z
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UT9AZ
UT WOS:000698402100001
DA 2024-07-18
ER

PT J
AU Wang, YY
   Kadiyala, H
   Rubin, J
AF Wang, Yingying
   Kadiyala, Harshavardhan
   Rubin, Julia
TI Promises and challenges of microservices: an exploratory study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Microservices; Cloud-native applications; Development practices;
   Empirical study
ID MIGRATION
AB Microservice-based architecture is a SOA-inspired principle of building complex systems as a composition of small, loosely coupled components that communicate with each other using language-agnostic APIs. This architectural principle is now becoming increasingly popular in industry due to its advantages, such as greater software development agility and improved scalability of deployed applications. In this work, we aim at collecting and categorizing best practices, challenges, and some existing solutions for these challenges employed by practitioners successfully developing microservice-based applications for commercial use. Specifically, we focus our study on "mature" teams developing microservice-based applications for at least two years, explicitly excluding "newcomers" to the field. We conduct a broad, mixed-method study that includes in-depth interviews with 21 practitioners and a follow-up online survey with 37 respondents, covering 37 companies in total. Our study shows that, in several cases, practitioners opt to deviate from the "standard" advice, e.g., instead of splitting microservices by business capabilities, they focus on resource consumption and intended deployment infrastructure. Some also choose to refrain from using multiple programming languages for implementing their microservices, as that practice hinders reuse opportunities. In fact, our study participants identified robust and shared infrastructural support established early on in the development process as one of the main factors contributing to their success. They also identified several pressing challenges related to the efficient managing of common code across services and the support of product variants. The results of our study can benefit practitioners who are interested to learn from each other, borrow successful ideas, and avoid common mistakes. It can also inform researchers and inspire novel solutions to some of the identified challenges.
C1 [Wang, Yingying; Kadiyala, Harshavardhan; Rubin, Julia] Univ British Columbia, Dept Elect & Comp Engn, 2332 Main Mall, Vancouver, BC V6T 1Z4, Canada.
C3 University of British Columbia
RP Wang, YY (corresponding author), Univ British Columbia, Dept Elect & Comp Engn, 2332 Main Mall, Vancouver, BC V6T 1Z4, Canada.
EM wyingying@ece.ubc.ca; devkhv129@ece.ubc.ca; mjulia@ece.ubc.ca
OI Wang, Yingying/0000-0002-6531-5420; Rubin, Julia/0000-0001-7280-1614
FU Huawei Technologies Sweden AB
FX We thank all of our interview and survey participants for sharing their
   experience on microservice-based development with us. We also thank
   Huawei Technologies Sweden AB, who partially funded this work.
CR Alshuqayran N, 2016, IEEE INT CONF SERV, P44, DOI 10.1109/SOCA.2016.15
   [Anonymous], 2000, ARCHITECTURAL STYLES
   Balalaie A, 2018, SOFTWARE PRACT EXPER, V48, P2019, DOI 10.1002/spe.2608
   Balalaie A, 2016, IEEE SOFTWARE, V33, P42, DOI 10.1109/MS.2016.64
   Bandeira Alan, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P255, DOI 10.1109/MSR.2019.00051
   Beck K., 2011, MANIFESTO AGILE SOFT
   Beschastnikh I, 2016, COMMUN ACM, V59, P32, DOI 10.1145/2909480
   Bogner J, 2019, PROC IEEE INT CONF S, P546, DOI 10.1109/ICSME.2019.00089
   Bucchiarone A, 2018, IEEE SOFTWARE, V35, P50, DOI 10.1109/MS.2018.2141026
   Carvalho L, 2019, P JOINT 7 INT WORKSH, P21
   Chen LP, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P39, DOI 10.1109/ICSA.2018.00013
   Clements P., 2002, Software product lines
   Cockroft A, 2014, MIGRATING MICROSERVI
   Di Francesco P, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P29, DOI 10.1109/ICSA.2018.00012
   Di Francesco P, 2019, J SYST SOFTWARE, V150, P77, DOI 10.1016/j.jss.2019.01.001
   Di Francesco P, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P21, DOI 10.1109/ICSA.2017.24
   Dragoni N., 2017, PRESENT ULTERIOR SOF, P195, DOI DOI 10.1007/978-3-319-67425-4_12
   Fenn J., 2005, GARTNERS HYPE CYCLE
   Flanigan T., 2008, AM ASS PUBLIC OPINIO, P4136, DOI DOI 10.4135/9781071909621.N12
   Fowler M., 2015, Microservice trade-offs
   Francis JJ, 2010, PSYCHOL HEALTH, V25, P1229, DOI 10.1080/08870440903194015
   Fritzsch J, 2019, PROC IEEE INT CONF S, P481, DOI 10.1109/ICSME.2019.00081
   Ghofrani J., 2018, PROC ZEUS, P1
   Goodman LA, 1961, SNOWBALL SAMPLING AN, V32, P170, DOI [10.1214/aoms/1177705148, DOI 10.1214/AOMS/1177705148]
   Google Cloud, 2019, CLIENT LIB EXPL
   Gouigoux JP, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ICSAW), P62, DOI 10.1109/ICSAW.2017.35
   Heinrich R, 2017, ICPE'17: COMPANION OF THE 2017 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P223, DOI 10.1145/3053600.3053653
   Hunt Andrew, 1999, The Pragmatic Programmer: From Journeyman to Master, V1
   Jackson D, 2000, J ADV NURS, V32, P1403, DOI 10.1046/j.1365-2648.2000.01622.x
   Jassim GA, 2014, SOC SCI MED, V107, P189, DOI 10.1016/j.socscimed.2014.01.031
   Jorgensen M., 2002, EMPIR SOFTW ENG, V7, P9, DOI [DOI 10.1023/A:1014866909191, 10.1023/A:1014866909191]
   Knoche H, 2019, ENTERP MODELLING INF, V14, DOI 10.18417/emisa.14.1
   Krippendorff K, 2011, COMMUN METHODS MEAS, V5, P93, DOI 10.1080/19312458.2011.568376
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Leitner P, 2019, J SYST SOFTWARE, V149, P340, DOI 10.1016/j.jss.2018.12.013
   Lewis J., 2014, MartinFowler. com
   Liu Xuezheng., 2008, Proceedings of the 5th USENIX Symposium on Networked Systems Design and Implementation, NSDI'08, P423
   Luz W, 2018, SBES'18: PROCEEDINGS OF THE XXXII BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING, P32, DOI 10.1145/3266237.3266262
   McLarty M, 2016, MICROSERVICE ARCHITE
   Mitra S, 2018, DILEMMA UTILITY MODU
   Morse JM, 1998, QUAL HEALTH RES, V8, P147, DOI 10.1177/104973239800800201
   MuleSoft, 2018, MICR DEVOPS BETT TOG
   Nadareishvili I., 2016, Microservice Architecture: Aligning Principles, Practices, and Culture
   Newcomer E., 2005, UNDERSTANDING SOA WE
   O'Connor C, 2020, INT J QUAL METH, V19, DOI 10.1177/1609406919899220
   Pahl C, 2016, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, VOL 1 (CLOSER), P137, DOI 10.5220/0005785501370146
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Postel J, 1980, RFC, V761, P1
   Richardson C, 2018, PATTERN DISTRIBUTED
   Richardson C, 2018, PATTERN API GATEWAYB
   Richardson C, 2014, MICROSERVICE ARCHITE
   Richardson C, 2018, WHO IS USING MICROSE
   Rossi C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P12, DOI 10.1145/2950290.2994157
   Seifermann V, 2017, THESIS U STUTTGART
   Sinkowitz-Cochran RL, 2013, CLIN INFECT DIS, V56, P1159, DOI 10.1093/cid/cit005
   Soldani J, 2018, J SYST SOFTWARE, V146, P215, DOI 10.1016/j.jss.2018.09.082
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Taibi D, 2020, MICROSERVICES: SCIENCE AND ENGINEERING, P111, DOI 10.1007/978-3-030-31646-4_5
   Taibi D, 2018, IEEE SOFTWARE, V35, P56, DOI 10.1109/MS.2018.2141031
   Taibi D, 2017, IEEE CLOUD COMPUT, V4, P22, DOI 10.1109/MCC.2017.4250931
   Viggiato M., 2018, ARXIV180804836, P1
   Vural H, 2017, LECT NOTES COMPUT SC, V10409, P203, DOI 10.1007/978-3-319-62407-5_14
   Wang Y, 2020, PROMISES CHALLENGES
   Weiss D.M., 1999, Software Product-Line Engineering-A Family-Based Software Development Process
   Zhang H, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P51, DOI 10.1109/ICSA.2019.00014
   Zhou X, 2021, IEEE T SOFTWARE ENG, V47, P243, DOI 10.1109/TSE.2018.2887384
   Zimmermann O, 2017, COMPUT SCI-RES DEV, V32, P301, DOI 10.1007/s00450-016-0337-0
NR 67
TC 19
Z9 20
U1 0
U2 28
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 63
DI 10.1007/s10664-020-09910-y
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA RX6LS
UT WOS:000647333500001
DA 2024-07-18
ER

PT J
AU Zhang, M
   Marculescu, B
   Arcuri, A
AF Zhang, Man
   Marculescu, Bogdan
   Arcuri, Andrea
TI Resource and dependency based test case generation for RESTful Web
   services
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based software testing; RESTful APIs; Web services; Test case
   generation
AB Nowadays, RESTful web services are widely used for building enterprise applications. REST is not a protocol, but rather it defines a set of guidelines on how to design APIs to access and manipulate resources using HTTP over a network. In this paper, we propose an enhanced search-based method for automated system test generation for RESTful web services, by exploiting domain knowledge on the handling of HTTP resources. The proposed techniques use domain knowledge specific to RESTful web services and a set of effective templates to structure test actions (i.e., ordered sequences of HTTP calls) within an individual in the evolutionary search. The action templates are developed based on the semantics of HTTP methods and are used to manipulate the web services' resources. In addition, we propose five novel sampling strategies with four sampling methods (i.e., resource-based sampling) for the test cases that can use one or more of these templates. The strategies are further supported with a set of new, specialized mutation operators (i.e., resource-based mutation) in the evolutionary search that take into account the use of these resources in the generated test cases. Moreover, we propose a novel dependency handling to detect possible dependencies among the resources in the tested applications. The resource-based sampling and mutations are then enhanced by exploiting the information of these detected dependencies. To evaluate our approach, we implemented it as an extension to the EvoMaster tool, and conducted an empirical study with two selected baselines on 7 open-source and 12 synthetic RESTful web services. Results show that our novel resource-based approach with dependency handling obtains a significant improvement in performance over the baselines, e.g., up to + 130.7% relative improvement (growing from + 27.9% to + 64.3%) on line coverage.
C1 [Zhang, Man; Marculescu, Bogdan] Kristiania Univ Coll, Artificial Intelligence Software Engn AISE Lab, Oslo, Norway.
   [Arcuri, Andrea] Kristiania Univ Coll, Software Engn, Oslo, Norway.
   [Arcuri, Andrea] Oslo Metropolitan Univ, Software Engn, Oslo, Norway.
C3 Kristiania University College; Kristiania University College; Oslo
   Metropolitan University (OsloMet)
RP Zhang, M (corresponding author), Kristiania Univ Coll, Artificial Intelligence Software Engn AISE Lab, Oslo, Norway.
EM man.zhang@kristiania.no; bogdan.marculescu@kristiania.no;
   andrea.arcuri@kristiania.no
RI Zhang, Man/AGR-7496-2022
OI Zhang, Man/0000-0003-1204-9322
FU Research Council of Norway [274385]
FX This work is supported by the Research Council of Norway (project on
   Evolutionary Enterprise Testing, grant agreement No 274385).
CR Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Allamaraju S., 2010, Restful web services cookbook: solutions for improving scalability and simplicity
   Alshraideh M, 2006, SOFTW TEST VERIF REL, V16, P175, DOI 10.1002/stvr.354
   [Anonymous], 2000, Dissertation
   Arcuri A, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3391533
   Arcuri A, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'19), P1390, DOI 10.1145/3321707.3321732
   Arcuri A, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3293455
   Arcuri A, 2018, INFORM SOFTWARE TECH, V104, P195, DOI 10.1016/j.infsof.2018.05.003
   Arcuri A, 2018, IEEE INT CONF SOFTW, P394, DOI 10.1109/ICST.2018.00046
   Arcuri A, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P9, DOI 10.1109/QRS.2017.11
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri Andrea., 2011, ISSTA
   Atlidakis V, 2019, PROC INT CONF SOFTW, P748, DOI 10.1109/ICSE.2019.00083
   Bozkurt M, 2013, SOFTW TEST VERIF REL, V23, P261, DOI 10.1002/stvr.1470
   Canfora Gerardo, 2009, Software Engineering. International Summer Schools ISSSE 2006-2008. Revised Tutorial Lectures, P78, DOI 10.1007/978-3-540-95888-8_4
   Chakrabarti SK, 2009, 2009 COMPUTATION WORLD: FUTURE COMPUTING, SERVICE COMPUTATION, COGNITIVE, ADAPTIVE, CONTENT, PATTERNS, P302, DOI 10.1109/ComputationWorld.2009.116
   Chakrabarti Sujit Kumar, 2010, 3 IND SOFTW ENG C, P143
   Droste S, 1998, LECT NOTES COMPUT SC, V1498, P13, DOI 10.1007/BFb0056845
   Ed-douibi H, 2018, IEEE INT ENTERP DIST, P181, DOI 10.1109/EDOC.2018.00031
   Fertig T, 2015, WWW'15 COMPANION: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P1497, DOI 10.1145/2740908.2743045
   Fraser G, 2012, PROC INT CONF SOFTW, P178, DOI 10.1109/ICSE.2012.6227195
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Karlsson S, 2020, IEEE INT CONF SOFTW, P131, DOI 10.1109/ICST46399.2020.00023
   Kay M, 2019, ARTOOL ALIGNED RANK, DOI [10.5281/zenodo.594511https://github.com/mjskay/ARTool, DOI 10.5281/ZENODO.594511HTTPS://GITHUB.COM/MJSKAY/ARTOOL]
   Lamela Seijas P., 2013, Proceedings of the twelfth ACM SIGPLAN workshop on Erlang, P77
   Martin S, 1998, SPEECH COMMUN, V24, P19, DOI 10.1016/S0167-6393(97)00062-9
   Pinheiro Pedro Victor Pontes, 2013, BRAZ WORKSH SYST AUT
   Rojas JM, 2017, EMPIR SOFTW ENG, V22, P852, DOI 10.1007/s10664-015-9424-2
   Segura S, 2018, IEEE T SOFTWARE ENG, V44, P1083, DOI 10.1109/TSE.2017.2764464
   Viglianisi E, 2020, IEEE INT CONF SOFTW, P142, DOI 10.1109/ICST46399.2020.00024
   Wobbrock JO, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P143, DOI 10.1145/1978942.1978963
   Zhang M, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'19), P1426, DOI 10.1145/3321707.3321815
NR 32
TC 15
Z9 16
U1 1
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 76
DI 10.1007/s10664-020-09937-1
PG 61
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SM0KQ
UT WOS:000657302100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Spiegler, SV
   Heinecke, C
   Wagner, S
AF Spiegler, Simone, V
   Heinecke, Christoph
   Wagner, Stefan
TI An empirical study on changing leadership in agile teams
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Agile working; Development team; Scrum master; Maturity; Leadership
ID SOFTWARE-DEVELOPMENT; SHARED LEADERSHIP; CHALLENGES; MANAGEMENT;
   FRAMEWORK
AB An increasing number of companies aim to enable their development teams to work in an agile manner. When introducing agile teams, companies face several challenges. This paper explores the kind of leadership needed to support teams to work in an agile way. One theoretical agile leadership concept describes a Scrum Master who is supposed to empower the team to lead itself. Empirical findings on such a leadership role are controversial. We still have not understood how leadership unfolds in a team that is by definition self-organizing. Further exploration is needed to better understand leadership in agile teams. Our goal is to explore how leadership changes while the team matures using the example of the Scrum Master. Through a grounded theory study containing 75 practitioners from 11 divisions at the Robert Bosch GmbH we identified a set of nine leadership roles that are transferred from the Scrum Master to the Development Team while it matures. We uncovered that a leadership gap and a supportive internal team climate are enablers of the role transfer process, whereas role conflicts may diminish the role transfer. To make the Scrum Master change in a mature team, team members need to receive trust and freedom to take on a leadership role which was previously filled by the Scrum Master. We conclude with practical implications for managers, Product Owners, Development Teams and Scrum Masters which they can apply in real settings.
C1 [Spiegler, Simone, V; Wagner, Stefan] Univ Stuttgart, Inst Software Engn, Stuttgart, Germany.
   [Spiegler, Simone, V] Robert Bosch Automot Steering GmbH, Schwabisch Gmund, Germany.
   [Heinecke, Christoph] Robert Bosch GmbH, Stuttgart, Germany.
C3 University of Stuttgart; Bosch
RP Spiegler, SV (corresponding author), Univ Stuttgart, Inst Software Engn, Stuttgart, Germany.
EM simone.spiegler@iste.uni-stuttgart.de
RI Wagner, Stefan/A-5200-2018
OI Wagner, Stefan/0000-0002-5256-8429; Spiegler, Simone
   V./0000-0002-1234-827X
FU Robert Bosch Automotive Steering GmbH
FX Open Access funding enabled and organized by Projekt DEAL. This project
   is part of a larger PhD project on the Scrum Master role by Simone V.
   Spiegler and is funded by the Robert Bosch Automotive Steering GmbH.
CR Adolph S., 2008, Conference of the Center for Advanced Studies on Collaborative Research CASCON, P166, DOI DOI 10.1145/1463788.1463806
   [Anonymous], 2002, Agile software development
   Bäcklander G, 2019, CREAT INNOV MANAG, V28, P42, DOI 10.1111/caim.12303
   BALES RF, 1951, J ABNORM SOC PSYCH, V46, P485, DOI 10.1037/h0059886
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   Bryant A., 2007, Grounded Theory
   Carson JB, 2007, ACAD MANAGE J, V50, P1217, DOI 10.5465/20159921
   Charmaz K, 2016, DEV GROUNDED THEORY, V3, P127
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   Edmondson A, 1999, ADMIN SCI QUART, V44, P350, DOI 10.2307/2666999
   Fiedler F.E., 1967, THEORY LEADERSHIP EF
   GERSICK CJG, 1989, ACAD MANAGE J, V32, P274, DOI 10.5465/256363
   Ginnett R., 2019, Crew Resource Management, P73, DOI [DOI 10.1016/B978-0-12-812995-1.00003-8, 10.1016/B978-0-12-812995-1.00003-8]
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Gren L, 2020, LECT NOTES BUS INF P, V383, P178, DOI 10.1007/978-3-030-49392-9_12
   Gren L, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2244
   Gren L, 2017, J SYST SOFTWARE, V124, P104, DOI 10.1016/j.jss.2016.11.024
   GUZZO RA, 1993, BRIT J SOC PSYCHOL, V32, P87, DOI 10.1111/j.2044-8309.1993.tb00987.x
   Hersey P., 2007, Management of organizational behavior, V9th
   Hoda R., 2011, Self-Organizing Agile Teams: A Grounded Theory
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Hoda R, 2012, EMPIR SOFTW ENG, V17, P609, DOI 10.1007/s10664-011-9161-0
   Kozlowski SWJ, 2009, SIOP ORGAN FRONT SER, P113
   Levesque LL, 2001, J ORGAN BEHAV, V22, P135, DOI 10.1002/job.87
   Magpili NC, 2018, SMALL GR RES, V49, P3, DOI 10.1177/1046496417710500
   MANZ CC, 1987, ADMIN SCI QUART, V32, P106, DOI 10.2307/2392745
   Marks MA, 2001, ACAD MANAGE REV, V26, P356, DOI 10.5465/AMR.2001.4845785
   Moe NB, 2012, INFORM SOFTWARE TECH, V54, P853, DOI 10.1016/j.infsof.2011.11.006
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Moe NB, 2009, IEEE SOFTWARE, V26, P20, DOI 10.1109/MS.2009.182
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Neuman GA, 1999, J APPL PSYCHOL, V84, P376, DOI 10.1037/0021-9010.84.3.376
   Noll J, 2017, LECT NOTES COMPUT SC, V10611, P307, DOI 10.1007/978-3-319-69926-4_22
   Parizi Reza Meimandi, 2014, 2014 8th Malaysian Software Engineering Conference (MySEC), P246, DOI 10.1109/MySec.2014.6986022
   Schwaber K., 1997, BUSINESS OBJECT DESI, DOI [10.1007/978-1-4471-0947-1_11, DOI 10.1007/978-1-4471-0947-1_11]
   Spiegler SV, 2019, LECT NOTES BUS INF P, V355, P37, DOI 10.1007/978-3-030-19034-7_3
   Spiegler SV, 2018, INTERVIEW GUIDELINES, DOI DOI 10.5281/ZENODO.2243113
   Srivastava P, 2017, TEAM PERFORM MANAG, V23, P293, DOI 10.1108/TPM-06-2016-0033
   Stavru S, 2014, J SYST SOFTWARE, V94, P87, DOI 10.1016/j.jss.2014.03.041
   Stray V, 2016, J SYST SOFTWARE, V114, P101, DOI 10.1016/j.jss.2016.01.004
   Stray VG, 2011, LECT NOTES BUS INF P, V77, P146
   Sutherland J., 2017, The Definitive Guide to Scrum: The Rules of the Game
   Sutherland J., 2014, Currency
   TAKEUCHI H, 1986, HARVARD BUS REV, V64, P137
   Trist EL, 1951, HUM RELAT, V4, P3, DOI 10.1177/001872675100400101
   TUCKMAN BW, 1965, PSYCHOL BULL, V63, P384, DOI 10.1037/h0022100
   Wageman R, 1997, ORGAN DYN, V26, P49, DOI 10.1016/S0090-2616(97)90027-9
   Yang O, 1996, TOTAL QUAL MANAGE, V7, P521, DOI 10.1080/09544129610621
NR 49
TC 15
Z9 19
U1 8
U2 81
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2021
VL 26
IS 3
AR 41
DI 10.1007/s10664-021-09949-5
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA RA5LA
UT WOS:000631458700001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Bangash, AA
   Sahar, H
   Hindle, A
   Ali, K
AF Bangash, Abdul Ali
   Sahar, Hareem
   Hindle, Abram
   Ali, Karim
TI On the time-based conclusion stability of cross-project defect
   prediction models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Conclusion stability; Defect prediction; Time-aware evaluation
ID SOFTWARE; CODE; METRICS
AB Researchers in empirical software engineering often make claims based on observable data such as defect reports. Unfortunately, in many cases, these claims are generalized beyond the data sets that have been evaluated. Will the researcher's conclusions hold a year from now for the same software projects? Perhaps not. Recent studies show that in the area of Software Analytics, conclusions over different data sets are usually inconsistent. In this article, we empirically investigate whetherconclusionsin the area of cross-project defect prediction truly exhibitstabilitythroughout time or not. Our investigation applies a time-aware evaluation approach where models are trained only on the past, and evaluations are executed only on the future. Through this time-aware evaluation, we show that depending on which time period we evaluate defect predictors, their performance, in terms of F-Score, the area under the curve (AUC), and Mathews Correlation Coefficient (MCC), varies and their results are not consistent. The next release of a product, which is significantly different from its prior release, may drastically change defect prediction performance. Therefore, without knowing about the conclusion stability, empirical software engineering researchers should limit their claims of performance within the contexts of evaluation, because broad claims about defect prediction performance might be contradicted by the next upcoming release of a product under analysis.
C1 [Bangash, Abdul Ali; Sahar, Hareem; Hindle, Abram; Ali, Karim] Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
C3 University of Alberta
RP Bangash, AA (corresponding author), Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
EM bangash@ualberta.ca; hareeme@ualberta.ca; abram.hindle@ualberta.ca;
   karim.ali@ualberta.ca
CR Amasaki S, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P96, DOI 10.1109/SEAA.2015.25
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Ekanayake J, 2012, EMPIR SOFTW ENG, V17, P348, DOI 10.1007/s10664-011-9180-x
   Ekanayake J, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P51, DOI 10.1109/MSR.2009.5069480
   Fenton N, 2007, P 3 INT WORKSH PRED, V2007, P2, DOI DOI 10.1109/PROMISE.2007.11
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Gunes Koru A., 2005, P 2005 WORKSHOP PRED, P1
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herbold S., 2017, ARXIV170506429
   Herbold S, 2017, SHERBOLD REPLICATION
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Herbold S, 2015, 2015 30th IEEE/ACM International Conference on Automated Software Engineering Workshop (ASEW), P90, DOI 10.1109/ASEW.2015.8
   Hindle A, 2019, EMPIR SOFTW ENG, V24, P902, DOI 10.1007/s10664-018-9643-4
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Jimenez M, 2019, JOINT EUR SOFTW ENG
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Krishna R, 2018, IEEE T SOFTWARE ENG
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Martin R., 1994, OO DESIGN QUALITY ME
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Mei-Huei Tang, 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P242, DOI 10.1109/METRIC.1999.809745
   Menzies T, 2004, EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P129, DOI 10.1109/HASE.2004.1281737
   Menzies T., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P343, DOI 10.1109/ASE.2011.6100072
   Menzies T., 2004, P WORKSH PRED SOFTW, P1
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Morasca S, 2000, J SYST SOFTWARE, V53, P225, DOI 10.1016/S0164-1212(00)00014-5
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rakha MS, 2018, IEEE T SOFTWARE ENG, V44, P1245, DOI 10.1109/TSE.2017.2755005
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Watanabe S., 2008, P 4 INT WORKSH PRED, P19
   Witten IH, 2011, MOR KAUF D, P1
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Yap B.W., 2014, LNEE, V285, P13, DOI [DOI 10.1007/978-981-4585-18-7_2, 10.1007/978-981- 4585-18-7_2]
   Zhang Xiao-Dong, 2014, Cancer Biology Medicine, V11, P182, DOI 10.7497/j.issn.2095-3941.2014.03.004
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann T, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P227, DOI 10.1109/ISSRE.2007.19
NR 55
TC 24
Z9 25
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 5047
EP 5083
DI 10.1007/s10664-020-09878-9
EA SEP 2020
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4BB
UT WOS:000567738100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Said, W
   Quante, J
   Koschke, R
AF Said, Wasim
   Quante, Jochen
   Koschke, Rainer
TI Mining understandable state machine models from embedded code
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software reengineering; Program understanding; Static analysis; Model
   mining; State machines; Boolean minimization; Embedded software; Legacy
   code
ID PROGRAM COMPREHENSION; EXTRACTION; GRAPHS
AB Program understanding is a time-consuming and tedious activity for software developers. Manually building abstractions from source code requires in-depth analysis of the code. Automatic extraction of such models is possible, but cannot derive meaningful abstractions that are not already contained in the code. The automated extraction even has problems to decide which aspects of the code are important and which are not. Therefore, interactive semi-automatic approaches are the compromise of choice. In this article, we describe how state machines that describe the behaviour of a function can be extracted from code. The approach includes interaction - the user decides which aspects of the identified potentially relevant information is really relevant and which is not. This helps to reduce the resulting state machines to an understandable degree. However, these state machines in their raw form have transition conditions that are very complex and thus not understandable for humans. Therefore, we also introduce a technique to reduce these guards to an understandable form. The technique is a combination of heuristic logic minimization, exploitation of infeasible paths, and using transition priorities. We evaluate the approach on industrial embedded C code, first in a case study with hundreds of extracted state machines, and then in two experiments with professional developers. The results show that the approach is highly effective in making the guards understandable, and that guards reduced by our approach and presented with priorities are easier to understand than guards without priorities. We also show that the overall approach is beneficial for program comprehension. The guard reduction approach itself is quite generic and can also be applied to other problems. We demonstrate that for the simplification of mode switch logic.
C1 [Said, Wasim; Quante, Jochen] Robert Bosch GmbH, Renningen, Germany.
   [Koschke, Rainer] Univ Bremen, Bremen, Germany.
C3 Bosch; University of Bremen
RP Said, W (corresponding author), Robert Bosch GmbH, Renningen, Germany.
EM wasim.said@de.bosch.com; jochen.quante@de.bosch.com;
   koschke@informatik.uni-bremen.de
OI Said, Wasim/0000-0002-1128-4796; Quante, Jochen/0000-0002-4005-5124
CR Alimadadi S, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P776, DOI 10.1145/3180155.3180216
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   [Anonymous], 1986, TECHNICAL REPORT
   Bae JH, 2016, SOFTW SYST MODEL, V15, P847, DOI 10.1007/s10270-014-0440-2
   Bailey R A., 2008, Cambridge Series in Statistical and Probabilistic Mathematics No
   BRYANT RE, 1986, IEEE T COMPUT, V35, P677, DOI 10.1109/TC.1986.1676819
   Christensen L.B., 2001, Experimental Methodology, V8th
   Collins RW, 2008, INFORM SOFTWARE TECH, V50, P1165, DOI 10.1016/j.infsof.2008.04.001
   Corbett J. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P439, DOI 10.1109/ICSE.2000.870434
   Cornelissen B, 2011, IEEE T SOFTWARE ENG, V37, P341, DOI 10.1109/TSE.2010.47
   Coudert  O., 2002, 2 LEVEL LOGIC MINIMI, P1
   Cruz-Lemus JA, 2010, INFORM SCIENCES, V180, P2209, DOI 10.1016/j.ins.2010.01.026
   de Moura L, 2008, LECT NOTES COMPUT SC, V4963, P337, DOI 10.1007/978-3-540-78800-3_24
   Eisenbarth T, 2005, J SYST SOFTWARE, V77, P263, DOI 10.1016/j.jss.2004.04.028
   Fjeldstad RK, 1984, P GUIDE
   Godefroid Patrice, 2005, ACM SIGPLAN NOTICES, P213, DOI DOI 10.1145/1064978.1065036
   Gravino C, 2015, J VISUAL LANG COMPUT, V28, P23, DOI 10.1016/j.jvlc.2014.12.004
   Harel D., 1996, ACM Transactions on Software Engineering and Methodology, V5, P293, DOI 10.1145/235321.235322
   Knor R., 1998, Development and Evolution of Software Architectures for Product Families. Second International ESPRIT ARES Workshop Proceedings, P97
   Kumar A, 2009, 2009 IEEE INTERNATIONAL ADVANCE COMPUTING CONFERENCE, VOLS 1-3, P1556, DOI 10.1109/IADCC.2009.4809250
   KUNG D, 1994, P INT COMP SOFTW APP, P222, DOI 10.1109/CMPSAC.1994.342801
   Lind-Nielsen J., 1999, Buddy: a binary decision diagram package
   Lo D, 2007, KDD-2007 PROCEEDINGS OF THE THIRTEENTH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P460
   Minelli R, 2015, INT C PROGRAM COMPRE, P25, DOI 10.1109/ICPC.2015.12
   Murphy G. C., 1995, SIGSOFT Software Engineering Notes, V20, P18, DOI 10.1145/222132.222136
   PARNAS DL, 1994, PROC INT CONF SOFTW, P279, DOI 10.1109/ICSE.1994.296790
   Quante J, 2008, INT C PROGRAM COMPRE, P73, DOI 10.1109/ICPC.2008.15
   Ricca F, 2018, EMPIR SOFTW ENG, V23, P1743, DOI 10.1007/s10664-017-9563-8
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Said  W., 2018, P 34 INT C SOFTW MAI, P163
   Said W, 2019, INT C PROGRAM COMPRE, P191, DOI 10.1109/ICPC.2019.00038
   Said W, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P264, DOI [10.1109/saner.2019.8667983, 10.1109/SANER.2019.8667983]
   Said W, 2018, PROCEEDINGS OF THE 6TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P117, DOI 10.5220/0006593501170128
   Scanniello G, 2018, EMPIR SOFTW ENG, V23, P2695, DOI 10.1007/s10664-017-9591-4
   Sen K., 2005, P 10 EUR SOFTW ENG C, V30, P263, DOI DOI 10.1145/1081706.1081750
   Sen T, 2016, SOFTW SYST MODEL, V15, P497, DOI 10.1007/s10270-014-0415-3
   Shoham S, 2008, IEEE T SOFTWARE ENG, V34, P651, DOI 10.1109/TSE.2008.63
   Snelting G, 2006, ACM T SOFTW ENG METH, V15, P410, DOI 10.1145/1178625.1178628
   Somé SS, 2002, PROG COMPREHEN, P85, DOI 10.1109/WPC.2002.1021325
   Tao Xie, 2006, 28th International Conference on Software Engineering Proceedings, P835
   TARJAN RE, 1974, J COMPUT SYST SCI, V9, P355, DOI 10.1016/S0022-0000(74)80049-8
   Tonella  P., 2011, REVERSE ENG OBJECT O
   vandenBrand  M., 2008, P 7 BELG NETH SOFTW, P28
   Vasu S, 2018, INT STUTTGARTER S, V18, P981
   Walkinshaw N, 2008, SOFTW TEST VERIF REL, V18, P99, DOI 10.1002/stvr.380
   Whaley J., 2002, Software Engineering Notes, V27, P221, DOI 10.1145/566171.566212
   Xiao H, 2013, IEEE INT CONF AUTOM, P432, DOI 10.1109/ASE.2013.6693101
   ZIMMERMAN MK, 2002, J SPORT EXERCISE PSY, P33
NR 48
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 4759
EP 4804
DI 10.1007/s10664-020-09865-0
EA SEP 2020
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4BB
UT WOS:000568161200001
DA 2024-07-18
ER

PT J
AU Ibrahim, MH
   Sayagh, M
   Hassan, AE
AF Ibrahim, Md Hasan
   Sayagh, Mohammed
   Hassan, Ahmed E.
TI Too many images on DockerHub! How different are images for the same
   system?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Docker; Docker images; DockerHub; Containerization
AB Containerization is a technique used to encapsulate a software system and its dependencies into one isolated package, which is called a container. The goal of these containers is to deploy or replicate a software system on various platforms and environments without facing any compatibility or dependency issues. Developers can instantiate these containers from images using Docker; one of the most popular containerization platforms. Furthermore, many of these images are publicly available on DockerHub, on which developers can share their images with the community who in turn can leverage such publicly available image. However, DockerHub contains thousands of images for each software system, which makes the selection of an image a nontrivial task. In this paper, we investigate the differences among DockerHub images for five software systems and 936 images with the goal of helping Docker tooling creators and DockerHub better guide users select a suitable image. We observe that users tend to download the official images (images that are provided by Docker itself) when there exist a large number of image choices for each single software system on the community images (images that are provided by the community developers), which are in many cases more resource efficient (have less duplicate resources) and have less security vulnerabilities. In fact, we observe that 27% (median), 35% (median), 6% (median), and 9% (median) of the DockerHub Debian, Centos, Ubuntu, and Alpine based images are identical to another image across all the studied software systems. Furthermore, 26% (median), 49% (median), and 8% (median) of the Alpine, Debian, and Ubuntu based community images are more resource efficient than their respective official images across all the five studied software systems. 7% (median) of the community Debian based images have less security vulnerabilities than their respective official images across the four studied software systems, for which an official Debian based image exists. Unfortunately, the description of 78% of the studied images do not guide users when selecting an image (the description does not exist at all or it does not highlight the particularities of the image), we suggest that Docker tooling creators and DockerHub design approaches to distinguish DockerHub images and help users find the most suitable images for their needs.
C1 [Ibrahim, Md Hasan; Sayagh, Mohammed; Hassan, Ahmed E.] Queens Univ, Software Anal & Intelligence Lab, Kingston, ON, Canada.
C3 Queens University - Canada
RP Ibrahim, MH (corresponding author), Queens Univ, Software Anal & Intelligence Lab, Kingston, ON, Canada.
EM ibrahim.mdhasan@cs.queensu.ca; msayagh@cs.queensu.ca;
   ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Ibrahim, Md
   Hasan/0000-0002-0693-2795
CR Acharya A, 2018, EUR CONF NETW COMMUN, P282, DOI 10.1109/EuCNC.2018.8443248
   [Anonymous], 2014, DOCKER LIGHTWEIGHT L
   Bettini A., 2015, Vulnerability exploitation in docker container environments
   Brogi A, 2017, INT CONF CLOUD ENG, P273, DOI 10.1109/IC2E.2017.41
   Carter E., 2019, 2018 docker usage report
   Chen W, 2019, J COMPUT SCI TECH-CH, V34, P957, DOI 10.1007/s11390-019-1954-4
   Cito J, 2017, IEEE WORK CONF MIN S, P323, DOI 10.1109/MSR.2017.67
   CoreOS, 2019, COR QUAY
   Datadog, 2019, DOCK AD
   Debian, 2020, DEB PACK VULN
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   DockerHub, 2020, NGINX DOCK IM
   DockerHub, 2019, OFF IM DOCK
   Google, 2019, GOOGL CONT REG
   Li Z, 2017, INT CON ADV INFO NET, P955, DOI 10.1109/AINA.2017.79
   Lu ZG, 2019, IEEE ACCESS, V7, P63650, DOI 10.1109/ACCESS.2019.2905424
   Muhtaroglu N, 2017, 5 INT C PAR DISTR GR
   Serverwatch, 2019, CONT REV GROW 2 7B 2
   Shirinbab S, 2017, PROCEEDINGS OF 2017 3RD INTERNATIONAL CONFERENCE OF CLOUD COMPUTING TECHNOLOGIES AND APPLICATIONS (CLOUDTECH), P24
   Shu R, 2017, PROCEEDINGS OF THE SEVENTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY (CODASPY'17), P269, DOI 10.1145/3029806.3029832
   Snyk, 2019, SNYK DOCK AN
   Tak B, 2018, LECT NOTES COMPUT SC, V10966, P116, DOI 10.1007/978-3-319-94289-6_8
   Wagoodman, 2019, DIV
   Xu TY, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P49, DOI 10.1145/3183399.3183403
   Zerouali Ahmed, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P592, DOI 10.1109/MSR.2019.00089
   Zerouali A, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P491, DOI [10.1109/saner.2019.8668013, 10.1109/SANER.2019.8668013]
   Zhang Y, 2019, CLUSTERING BASED APP, V62
   Zhang Y, 2018, P INT COMP SOFTW APP, P138, DOI 10.1109/COMPSAC.2018.00026
   Zheng C., 2015, P 8 INT WORKSH VIRT, P31, DOI DOI 10.1145/2755979.2755984
NR 29
TC 9
Z9 10
U1 1
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 4250
EP 4281
DI 10.1007/s10664-020-09873-0
EA AUG 2020
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000564958400002
DA 2024-07-18
ER

PT J
AU Marsicano, G
   da Silva, FQB
   Seaman, CB
   Adaid-Castro, BG
AF Marsicano, George
   da Silva, Fabio Q. B.
   Seaman, Carolyn B.
   Adaid-Castro, Breno Giovanni
TI The Teamwork Process Antecedents (TPA) questionnaire: developing and
   validating a comprehensive measure for assessing antecedents of teamwork
   process quality
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Measurement instrument; Questionnaire; Exploratory
   factor analysis; Confirmatory factor analysis
ID DEVELOPMENT-PROJECTS; INNOVATIVE PROJECTS; MODERATING ROLE; PERFORMANCE;
   CONTEXT; MODEL; TECHNOLOGY; COMMITMENT; EXPERIENCE; LEADERSHIP
AB Context Most models of teamwork describe team behavior and effectiveness using an Input-Process-Output approach. In software engineering, the use of such models has focused on understanding and operationalizing the Process-Output components while less research effort has been applied to define and measure the Input-Process component. Objective To develop and validate a measure of teamwork process antecedents (inputs) that addresses specific characteristics of software teams in industrial practice. Method First, we reviewed the group work literature, identified and integrated previously described antecedents of work group process, and developed a measure to tap those antecedents. This measure is operationalized in the Teamwork Process Antecedents (TPA) questionnaire, which we then validated with 375 Brazilian software engineers from 100 companies, using exploratory and confirmatory factor analysis. Results We created a survey to operationalize two multidimensional antecedents of teamwork process, Team Structure and Team Composition, based on well-established models from the literature on work teams. We tailored the response items to the software engineering context to increase construct face validity. We reached a parsimonious set of five dimensions for Team Composition (16 response items) and four dimensions for Team Structure (11 response items). Our results show that our measure of TPA has excellent internal reliability and convergent and discriminant validity. Conclusions We created a novel measure of antecedents of teamwork process tailored to software teams, that captures the perception of team members about the adequacy of team composition and structure to achieve team goals. Further, we present the development of the TPA measure in the form of a guideline that may be used in the construction of other measurement instruments in empirical software engineering research. We believe both results are important contributions of this work.
C1 [Marsicano, George; da Silva, Fabio Q. B.] Fed Univ Pernambuco Recife, Ctr Informat, Recife, PE, Brazil.
   [Marsicano, George] Univ Brasilia, Brasilia, DF, Brazil.
   [da Silva, Fabio Q. B.; Seaman, Carolyn B.] Univ Maryland Baltimore Cty, Baltimore, MD 21228 USA.
   [Adaid-Castro, Breno Giovanni] Higher Educ Inst Brasilia, Brasilia, DF, Brazil.
C3 Universidade Federal de Pernambuco; Universidade de Brasilia; University
   System of Maryland; University of Maryland Baltimore County
RP Marsicano, G; da Silva, FQB (corresponding author), Fed Univ Pernambuco Recife, Ctr Informat, Recife, PE, Brazil.; Marsicano, G (corresponding author), Univ Brasilia, Brasilia, DF, Brazil.; da Silva, FQB (corresponding author), Univ Maryland Baltimore Cty, Baltimore, MD 21228 USA.
EM georgemarsicano@unb.br; fabio@cin.ufpe.br
FU CNPq [306856/2017-4]
FX Fabio Q. B. da Silva holds a research grant from CNPq 306856/2017-4. The
   authors would like to thank the anonymous reviewers and the EMSE editors
   for their feedback on the first version of this article, which helped to
   greatly improve this final version.
CR Aladwani AM, 2002, J MANAGE INFORM SYST, V19, P185
   [Anonymous], ADV PSYCHOL, DOI DOI 10.1016/S0166-4115(08)62601-1
   BAGOZZI RP, 1991, ADMIN SCI QUART, V36, P421, DOI 10.2307/2393203
   Brace I., 2018, Questionnaire design: How to plan, structure and write survey material for effective market research
   Brown TA., 2006, CONFIRMATORY FACTOR, DOI DOI 10.19030/AJBE.V6I3.7818
   BROWNE MW, 1984, BRIT J MATH STAT PSY, V37, P62, DOI 10.1111/j.2044-8317.1984.tb00789.x
   CAMPION MA, 1993, PERS PSYCHOL, V46, P823, DOI 10.1111/j.1744-6570.1993.tb01571.x
   Carpenter MA, 2002, STRATEGIC MANAGE J, V23, P275, DOI 10.1002/smj.226
   Carson J. B., 2006, THESIS
   Cattell R. B., 1978, The scientific use of factor analysis in behavioral life sciences
   Cha J, 2015, GROUP ORGAN MANAGE, V40, P715, DOI 10.1177/1059601114568244
   Clark LA, 1995, PSYCHOL ASSESSMENT, V7, P309, DOI 10.1037/1040-3590.7.3.309
   Cohen S.G., 1994, Advances in Interdisciplinary Studies of Work Teams: Theories of Self-Managing Work Teams, P67
   Damasio BF, 2012, USO ANALISE FATORIAL
   Dayan M, 2009, EUR J INNOV MANAG, V12, P129, DOI 10.1108/14601060910928201
   de Oliveira MLS, 2019, THESIS
   Dias Junior JJL, 2016, TRANSLATION METODOS, V1, P4
   Dickinson T.L., 1997, SER APPL PSYCHOL, P19
   Dokko G, 2009, ORGAN SCI, V20, P51, DOI 10.1287/orsc.1080.0357
   Dreesen T, 2018, P 51 HAW INT C SYST
   Easley RF, 2003, J MANAGE INFORM SYST, V19, P247
   Field A, 2012, DESCOBRINDO ESTATIST, P2
   Figueiredo Filho Dalson Brito, 2010, Opin. Publica, V16, P160
   FORNELL C, 1981, J MARKETING RES, V18, P39, DOI 10.2307/3151312
   George D, 2010, SPSS for Windows step by step: A simple guide and reference. 11.0 update
   GLADSTEIN DL, 1984, ADMIN SCI QUART, V29, P499, DOI 10.2307/2392936
   Hackman J.R., 1987, DESIGN WORK TEAMS HD, P315
   Hackman J.R. e., 1980, Work redesign
   Hair JF, 2009, ANALISE MULTIVARIADA, P6
   Hashmi A., 2017, International Journal of Economic Research, V14, P59
   Hashmi A., 2018, Asian Journal of Multidisciplinary Studies, V6, P5
   Hoegl M, 2001, ORGAN SCI, V12, P435, DOI 10.1287/orsc.12.4.435.10635
   Hoegl M, 2006, HUM RESOURCE MANAGE, V45, P67, DOI 10.1002/hrm.20092
   Hoegl M, 2006, R&D MANAGE, V36, P113, DOI 10.1111/j.1467-9310.2006.00420.x
   Hoegl M, 2004, RES POLICY, V33, P1153, DOI 10.1016/j.respol.2004.06.005
   Hoegl M, 2004, ORGAN SCI, V15, P38, DOI 10.1287/orsc.1030.0053
   Hoegl M, 2003, J ENG TECHNOL MANAGE, V20, P281, DOI 10.1016/j.jengtecman.2003.08.001
   Hoegl M, 2003, SMALL GR RES, V34, P3, DOI 10.1177/1046496402239575
   Hoegl M., 2005, BUS HORIZONS, V48, P209, DOI [10.1016/j.bushor.2004.10.013, DOI 10.1016/J.BUSHOR.2004.10.013, DOI 10.1016/j.bushor.2004.10.013]
   Hoegl M, 2006, INT J INNOV MANAG, V10, P299, DOI 10.1142/S136391960600151X
   Jehn KA, 2004, J ORGAN BEHAV, V25, P703, DOI 10.1002/job.257
   Kitchenham B., 2002, ACM SIGSOFT Softw. Eng. Notes, V27, P17
   Kline R. B., 2011, PRINCIPLES PRACTICE, V3rd, DOI [DOI 10.1038/156278A0, 10.1038/156278a0]
   Koufteros XA, 1999, J OPER MANAG, V17, P467, DOI 10.1016/S0272-6963(99)00002-9
   Kozlowski S. W. J., 2013, Handbook of psychology: Industrial and organizational psychology, V12, P412, DOI DOI https://doi.org/10.1002/0471264385.wei1214
   Laros J.A., 2012, Analise fatorial para pesquisadores, P141
   Lee G, 2010, MIS QUART, V34, P87
   LEVINE JM, 1990, ANNU REV PSYCHOL, V41, P585, DOI 10.1146/annurev.ps.41.020190.003101
   Littlepage G, 1997, ORGAN BEHAV HUM DEC, V69, P133, DOI 10.1006/obhd.1997.2677
   Liu ML, 2015, TECHNOL FORECAST SOC, V91, P295, DOI 10.1016/j.techfore.2014.03.014
   MACCALLUM R, 1986, PSYCHOL BULL, V100, P107, DOI 10.1037/0033-2909.100.1.107
   Marks MA, 2001, ACAD MANAGE REV, V26, P356, DOI 10.5465/AMR.2001.4845785
   Maroco J, 2014, ANALISE EQUACOES EST
   Maroco J, 2018, ANALISE ESTATISTICA, P7
   Marsicano G, 2017, INT SYMP EMP SOFTWAR, P235, DOI 10.1109/ESEM.2017.36
   Mathieu J, 2008, J MANAGE, V34, P410, DOI 10.1177/0149206308316061
   McGrath J.E., 1964, Social psychology: A brief introduction
   Mehta N, 2014, INFORM MANAGE-AMSTER, V51, P417, DOI 10.1016/j.im.2014.02.007
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Mom TJM, 2015, HUM RESOUR MANAGE-US, V54, pS133, DOI 10.1002/hrm.21663
   Morgenson F, 2012, HDB HUMAN FACTORS ER, V4, P441
   Morgeson FP, 2005, J APPL PSYCHOL, V90, P497, DOI 10.1037/0021-9010.90.3.497
   Murat D, 2010, CSH PERSPECT BIOL, V2, DOI 10.1101/cshperspect.a000422
   Nascimento TG, 2014, THESIS
   Neiva ER, 2007, ROTEIRO ANALISE FATO
   Osborne JW, 2014, BEST PRACTICES EXPLO
   Pasquali L., 2010, Instrumentacao psicologica: Fundamentos e praticas, P165
   PASQUALI L., 2012, Analise Fatorial para Pesquisadores
   Pereira DV, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2017), P70, DOI 10.1109/CHASE.2017.2
   Quinones M., 2004, International Review of Industrial and Organizational Psychology, V19, P119
   Raykov T., 2012, HDB STRUCTURAL EQUAT, P472
   Ringstad MA, 2011, COMM COM INF SC, V172, P167
   Salas E, 2005, SMALL GR RES, V36, P555, DOI 10.1177/1046496405277134
   Salas E, 2007, NEBR SYM MOTIV, V52, P185
   SPREITZER GM, 1995, ACAD MANAGE J, V38, P1442, DOI 10.5465/256865
   Stray V, 2016, LECT NOTES COMPUT SC, V10027, P458, DOI 10.1007/978-3-319-49094-6_31
   Tabachnick B.G., 2012, Using multivariate statistics, V6th
   Wageman R., 2005, J. Appl. Behav. Sci., V41, P373, DOI [10.1177/0021886305281984, DOI 10.1177/0021886305281984]
   Wickramasinghe V, 2015, INT J, V8, P138, DOI [10.1108/SO-02-2015-0007, DOI 10.1108/SO-02-2015-0007]
   Wolff HG, 2005, BEHAV RES METHODS, V37, P48, DOI 10.3758/BF03206397
   Yang LR, 2011, INT J PROJ MANAG, V29, P258, DOI 10.1016/j.ijproman.2010.03.006
NR 81
TC 8
Z9 9
U1 1
U2 16
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3928
EP 3976
DI 10.1007/s10664-020-09860-5
EA AUG 2020
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA NJ1FD
UT WOS:000561720200001
DA 2024-07-18
ER

PT J
AU Krishna, R
   Menzies, T
AF Krishna, Rahul
   Menzies, Tim
TI Learning actionable analytics from multiple software projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Data mining; Actionable analytics; Planning; Bellwethers; Defect
   prediction
ID DEFECT PREDICTION; ALGORITHM; METRICS; CLASSIFICATION; SELECTION;
   LESSONS
AB The current generation of software analytics tools are mostly prediction algorithms (e.g. support vector machines, naive bayes, logistic regression, etc). While prediction is useful, after prediction comesplanningabout what actions to take in order to improve quality. This research seeks methods that generate demonstrably useful guidance on "what to do" within the context of a specific software project. Specifically, we propose XTREE (for within-project planning) and BELLTREE (for cross-project planning) to generating plans that can improve software quality. Each such plan has the property that, if followed, it reduces the expected number of future defect reports. To find this expected number, planning was first applied to data from releasex. Next, we looked for change in releasex+ 1 that conformed to our plans. This procedure was applied using a range of planners from the literature, as well as XTREE. In 10 open-source JAVA systems, several hundreds of defects were reduced in sections of the code that conformed to XTREE's plans. Further, when compared to other planners, XTREE's plans were found to be easier to implement (since they were shorter) and more effective at reducing the expected number of defects.
C1 [Krishna, Rahul] Columbia Univ, Comp Sci, New York, NY 10027 USA.
   [Menzies, Tim] NC State Univ, Comp Sci, Raleigh, NC USA.
C3 Columbia University; North Carolina State University
RP Krishna, R (corresponding author), Columbia Univ, Comp Sci, New York, NY 10027 USA.
EM i.m.ralk@gmail.com; timm@ieee.org
RI Krishna, Rahul/AEX-7754-2022; Menzies, Tim/X-7680-2019; Krishna,
   Rahul/HJG-7915-2022; Krishna, Rahul/AAF-1168-2022
OI Krishna, Rahul/0000-0002-5899-6651; Menzies, Tim/0000-0002-5040-3196;
   Krishna, Rahul/0000-0002-5899-6651
FU NSF [1506586, 1302169]; Division of Computing and Communication
   Foundations; Direct For Computer & Info Scie & Enginr [1506586, 1302169]
   Funding Source: National Science Foundation
FX The work is partially funded by NSF awards #1506586 and #1302169.
CR Al Dallal J, 2010, INFORM SOFTWARE TECH, V52, P1346, DOI 10.1016/j.infsof.2010.08.006
   Altman E., 1999, Constrained Markov Decision Processes, V7
   Alves TL, 2010, PROC IEEE INT CONF S
   Andrews JH, 2011, IEEE T SOFTWARE ENG, V37, P80, DOI 10.1109/TSE.2010.46
   Andrews SC, 2007, BMC DEV BIOL, V7, DOI 10.1186/1471-213X-7-53
   [Anonymous], 2016, INFORM SOFTWAR UNPUB
   [Anonymous], 2015, ART SCI ANAL SOFTWAR
   [Anonymous], FSE
   [Anonymous], 2010, Product Release planning: methods, Tools and Applications
   [Anonymous], 1977, Elements of software science
   [Anonymous], 2016, The promise repository of empirical software engineering data. north carolina state university, department of computer science
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Begel A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P12, DOI 10.1145/2568225.2568233
   BELLMAN R, 1957, J MATH MECH, V6, P679, DOI 10.1512/iumj.1957.6.56038
   Bender R, 1999, BIOMETRICAL J, V41, P305, DOI 10.1002/(SICI)1521-4036(199906)41:3<305::AID-BIMJ305>3.0.CO;2-Y
   Blue D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P182, DOI 10.1109/ICSE.2013.6606564
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   Bryton S, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P570, DOI 10.1109/ICSEA.2009.90
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   CUI X, 2005, INT S
   Czerwonka Jacek, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P357, DOI 10.1109/ICST.2011.24
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Du Bois B, 2006, STUDY QUALITY IMPROV
   Elish Karim O., 2012, Journal of Software, V7, P408, DOI 10.4304/jsw.7.2.408-419
   Elish KO, 2011, ARAB J SCI ENG, V36, P1253, DOI 10.1007/s13369-011-0117-x
   FAYYAD UM, 1993, NASA JPL ARCH, P1022
   Ghallab M., 2004, AUTOMATED PLANNING T
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Green P, 2009, IEEE INT CONF AUTOM, P52, DOI 10.1109/ASE.2009.93
   Guo X, 2009, STOCH MOD APPL PROBA, V62, P9, DOI 10.1007/978-3-642-02547-1_2
   Han JW, 2007, DATA MIN KNOWL DISC, V15, P55, DOI 10.1007/s10618-006-0059-1
   Harman M, 2009, TR0903 DEP COMP SCI
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Henard C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P517, DOI 10.1109/ICSE.2015.69
   Hihn J, 2015, 2015 30TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOP (ASEW), P5, DOI 10.1109/ASEW.2015.27
   Jensen und A.C., 2010, Proceedings of the 12th Annual Conference on Genetic and Evolutionary Computation. GECCO '10, P1341
   Jorgensen M, 2009, IEEE T SOFTWARE ENG, V35, P368, DOI 10.1109/TSE.2009.2
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kataoka Y, 2002, PROC IEEE INT CONF S, P576, DOI 10.1109/ICSM.2002.1167822
   Kocaguneli E, 2015, EMPIR SOFTW ENG, V20, P813, DOI 10.1007/s10664-014-9300-5
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Kocaguneli E, 2011, INT SYMP EMP SOFTWAR, P255, DOI 10.1109/ESEM.2011.34
   Krall J, 2015, IEEE T SOFTWARE ENG, V41, P1001, DOI 10.1109/TSE.2015.2432024
   Krishna R, 2019, IEEE T SOFTWARE ENG, V45, P1081, DOI 10.1109/TSE.2018.2821670
   Krishna R, 2017, IEEE INT CONF AUTOM, P1002, DOI 10.1109/ASE.2017.8115719
   Krishna R, 2017, INFORM SOFTWARE TECH, V88, P53, DOI 10.1016/j.infsof.2017.03.012
   Krishna R, 2016, IEEE INT CONF AUTOM, P122, DOI 10.1145/2970276.2970339
   Krishna R, 2015, 2015 30TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOP (ASEW), P14, DOI 10.1109/ASEW.2015.23
   Le Goues C, 2015, IEEE T SOFTWARE ENG, V41, P1236, DOI 10.1109/TSE.2015.2454513
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Lemon B., 2009, IEEE ASE'09
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Lowry M, 1998, 13TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P322, DOI 10.1109/ASE.1998.732690
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mensah S, 2020, INT J CONSTR MANAG, V20, P801, DOI 10.1080/15623599.2018.1484860
   Menzies T, 2002, ASE 2002: 17TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, P183, DOI 10.1109/ASE.2002.1115012
   Menzies T., 2007, P 22 IEEE ACM INT C, P303, DOI [10.1145/1321631.1321676, DOI 10.1145/1321631.1321676]
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Menzies T, 2009, PROC INT CONF SOFTW, P540, DOI 10.1109/ICSE.2009.5070552
   Metzger A, 2014, SPRACHE SPRACHEN, P75
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Moghadam IH, 2011, LECT NOTES COMPUT SC, V6956, P70, DOI 10.1007/978-3-642-23716-4_9
   Nagappan N, 2005, PROC INT CONF SOFTW, P580, DOI 10.1145/1062455.1062558
   Nam J, 2018, IEEE T SOFTWARE ENG, V44, P874, DOI 10.1109/TSE.2017.2720603
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Nayrolles M, 2018, MINING SOFTWARE REPO
   O'Keeffe M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1114
   O'Keeffe M, 2008, J SOFTW MAINT EVOL-R, V20, P345, DOI 10.1002/smr.378
   Oliveira P, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P254, DOI 10.1109/CSMR-WCRE.2014.6747177
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Passos C, 2011, INT SYMP EMP SOFTWAR, P444, DOI 10.1109/ESEM.2011.63
   Peters F, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P801, DOI 10.1109/ICSE.2015.92
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rathore SS, 2019, ARTIF INTELL REV, V51, P255, DOI 10.1007/s10462-017-9563-5
   Ruhe G, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P262, DOI 10.1109/ISESE.2003.1237987
   Russell S., 1995, Prentice Hall series in artificial intelligence, V25, P27
   Sayyad AS, 2013, IEEE INT CONF AUTOM, P465, DOI 10.1109/ASE.2013.6693104
   Sharma A, 2016, PROC VLDB ENDOW, V9, P1281, DOI 10.14778/3007263.3007267
   Shatnawi R, 2008, J SYST SOFTWARE, V81, P1868, DOI 10.1016/j.jss.2007.12.794
   Shatnawi R, 2010, IEEE T SOFTWARE ENG, V36, P216, DOI 10.1109/TSE.2010.9
   Shull F, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P249, DOI 10.1109/METRIC.2002.1011343
   Sohrabi S, 2009, 21ST INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI-09), PROCEEDINGS, P1790
   Son TC, 2006, THEOR PRACT LOG PROG, V6, P559, DOI 10.1017/S1471068406002717
   Stroggylos K., 2007, P 5 INT WORKSH SOFTW, P10, DOI [10.1109/WOSQ.2007.11, DOI 10.1109/WOSQ.2007.11]
   Tallam Sriraman., 2005, PASTE 05, P35, DOI [10.1145/1108768.1108802, DOI 10.1145/1108768.1108802]
   Theisen C, 2015, ICSE 15
   Turhan B, 2011, EUROMICRO CONF PROC, P396, DOI 10.1109/SEAA.2011.59
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   WOOLDRIDGE M, 1995, KNOWL ENG REV, V10, P115, DOI 10.1017/S0269888900008122
   Ying R, 2018, KDD'18: PROCEEDINGS OF THE 24TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY & DATA MINING, P974, DOI 10.1145/3219819.3219890
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zitzler E, 2004, LECT NOTES COMPUT SC, V3242, P832
   Zitzler E, 2001, EVOLUTIONARY METHODS, P95, DOI DOI 10.1007/978-3-540-30217-9_84
NR 106
TC 6
Z9 6
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3468
EP 3500
DI 10.1007/s10664-020-09843-6
EA JUL 2020
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000551767500001
DA 2024-07-18
ER

PT J
AU Mills, C
   Parra, E
   Pantiuchina, J
   Bavota, G
   Haiduc, S
AF Mills, Chris
   Parra, Esteban
   Pantiuchina, Jevgenija
   Bavota, Gabriele
   Haiduc, Sonia
TI On the relationship between bug reports and queries for text
   retrieval-based bug localization
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug localization; Query formulation; Text retrieval
ID SOURCE CODE
AB As societal dependence on software continues to grow, bugs are becoming increasingly costly in terms of financial resources as well as human safety.Bug localizationis the process by which a developer identifies buggy code that needs to be fixed to make a system safer and more reliable. Unfortunately, manually attempting to locate bugs solely from the information in a bug report requires advanced knowledge of how a system is constructed and the way its constituent pieces interact. Therefore, previous work has investigated numerous techniques for reducing the human effort spent in bug localization. One of the most common approaches is Text Retrieval (TR) in which a system's source code is indexed into a search space that is then queried for code relevant to a given bug report. In the last decade, dozens of papers have proposed improvements to bug localization using TR with largely positive results. However, several other studies have called the technique into question. According to these studies, evaluations of TR-based approaches often lack sufficient controls on biases that artificially inflate the results, namely: misclassified bugs, tangled commits, and localization hints. Here we argue that contemporary evaluations of TR approaches also include a negative bias that outweighs the previously identified positive biases: while TR approaches expect a natural language query, most evaluations simply formulate this query as the full text of a bug report. In this study we show that highly performing queries can be extracted from the bug report text, in order to make TR effective even without the aforementioned positive biases. Further, we analyze the provenance of terms in these highly performing queries to drive future work in automatic query extraction from bug reports.
C1 [Mills, Chris; Parra, Esteban; Haiduc, Sonia] Florida State Univ, 600 W Coll Ave, Tallahassee, FL 32306 USA.
   [Pantiuchina, Jevgenija; Bavota, Gabriele] Univ Svizzera Italiana, Via Giuseppe Buffi 13, CH-6900 Lugano, Switzerland.
C3 State University System of Florida; Florida State University; Universita
   della Svizzera Italiana
RP Mills, C (corresponding author), Florida State Univ, 600 W Coll Ave, Tallahassee, FL 32306 USA.
EM cmills@cs.fsu.edu; parrarod@cs.fsu.edu; jevgenija.pantiuchina@usi.ch;
   gabriele.bavota@usi.ch; shaiduc@cs.fsu.edu
OI BAVOTA, Gabriele/0000-0002-2216-3148
FU National Science Foundation [CCF-1846142, CCF-1644285]; Swiss National
   Science Foundation through the JITRA project [172479]
FX Sonia Haiduc and Esteban Parra were supported in part by the National
   Science Foundation grants CCF-1846142 and CCF-1644285. Gabriele Bavota
   and Jevgenija Pantiuchina acknowledge the support by the Swiss National
   Science Foundation through the JITRA project, No. 172479.
CR [Anonymous], 2015, CHINESE PHYS B
   [Anonymous], 2012, P 34 IEEE ACM INT C
   [Anonymous], 1985, P 8 ANN INT ACM SIGI, DOI DOI 10.1145/253495.253506
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Carpineto C, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2071389.2071390
   Chaparro O, 2019, EMPIR SOFTW ENG, P1
   Chaparro O, 2017, PROC IEEE INT CONF S, P376, DOI 10.1109/ICSME.2017.100
   Chaparro O, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/3106237.3106285
   Chaparro O, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P716, DOI 10.1145/2889160.2892647
   Devore J., 1999, APPL STAT ENG SCI
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Haiduc S, 2012, PROC INT CONF SOFTW, P1273, DOI 10.1109/ICSE.2012.6227101
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kim M, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1752, DOI 10.1145/3297280.3297451
   Kochhar Pavneet Singh, 2014, P 2 ACM IEEE INT C, P803, DOI DOI 10.1145/2642937.2642997
   Lawrie D, 2018, PROC IEEE INT CONF S, P524, DOI 10.1109/ICSME.2018.00048
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Mills C, 2019, REPLICATION PACKAGE
   Mills C, 2018, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSME.2018.00046
   Mills C, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3078841
   Mitchell M., 1998, INTRO GENETIC ALGORI
   Poshyvanyk D, 2005, P 21 IEEE INT C SOFT, P25
   Rahman MM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P621, DOI 10.1145/3236024.3236065
   Rahman MM, 2017, IEEE INT CONF AUTOM, P428, DOI 10.1109/ASE.2017.8115655
   Rahman MM, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P79, DOI 10.1109/SANER.2017.7884611
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Razzaq A, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3280988
   Roldan-Vega M, 2013, PROC IEEE INT CONF S, P512, DOI 10.1109/ICSM.2013.84
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Savage T., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P255, DOI 10.1145/1810295.1810345
   Shepherd D, 2012, P ACM SIGSOFT 20 INT
   Shepherd David, 2007, P 6 INT C ASP OR SOF, P212
   Strasser H, 1999, MATH METHODS STAT, V2
   Wang SW, 2014, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSME.2014.39
   Ye X, 2016, IEEE T SOFTWARE ENG, V42, P379, DOI 10.1109/TSE.2015.2479232
   Youm KC, 2017, INFORM SOFTWARE TECH, V82, P177, DOI 10.1016/j.infsof.2016.11.002
   Zhao W, 2006, ACM T SOFTW ENG METH, V15, P195, DOI 10.1145/1131421.1131424
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
NR 48
TC 15
Z9 16
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3086
EP 3127
DI 10.1007/s10664-020-09823-w
EA JUL 2020
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000548162400001
DA 2024-07-18
ER

PT J
AU Cinque, M
   Della Corte, R
   Pecchia, A
AF Cinque, Marcello
   Della Corte, Raffaele
   Pecchia, Antonio
TI An empirical analysis of error propagation in critical software systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Error analysis; Error propagation; Critical systems; Monitoring
ID RELIABILITY; DETECTORS
AB Error propagation analysis is a consolidated practice to gain insights into error modes and effects that pertain to the activation of faults in software systems. A variety of approaches, such as architecture-based, source code instrumentation and variable tracing, have been proposed so far to address software error propagation analysis. Although valuable, existing approaches entail a substantial degree of system internals' knowledge, visibility and code manipulation that is not well-suited for real-life production environments. This paper proposes an empirical analysis of error propagation. We specifically address the challenges in using fault data and error events in the logs, which are a convenient byproduct of the system's execution. The approach puts forth the construction of error reporting graphs. We apply the approach to 2,042 failure data points from two real-world critical systems from the Air Traffic Control domain by a top industry provider. The approach contributes to develop a deep understanding on error modes and propagation paths, which can be leveraged by practitioners to make informed decisions on the placement of error detection mechanisms.
C1 [Cinque, Marcello; Della Corte, Raffaele; Pecchia, Antonio] Univ Napoli Federico II, DIETI, Via Claudio 21, I-80125 Naples, Italy.
C3 University of Naples Federico II
RP Della Corte, R (corresponding author), Univ Napoli Federico II, DIETI, Via Claudio 21, I-80125 Naples, Italy.
EM macinque@unina.it; raffaele.dellacorte2@unina.it;
   antonio.pecchia@unina.it
RI Della Corte, Raffaele/AAB-1605-2021; CINQUE, Marcello/AAV-6700-2020;
   Cinque, Marcello/B-6090-2012
OI CINQUE, Marcello/0000-0003-1455-8614; 
CR Abdelmoez W, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P384, DOI 10.1109/METRIC.2004.1357923
   [Anonymous], 1996, HDB SOFTWARE RELIABI
   [Anonymous], 1976, GRAPH THEORY APPL
   Arora A, 1998, INT CON DISTR COMP S, P436, DOI 10.1109/ICDCS.1998.679772
   Avizienis A, 2004, IEEE T DEPEND SECURE, V1, P11, DOI 10.1109/TDSC.2004.2
   Calhoun J, 2017, HPDC'17: PROCEEDINGS OF THE 26TH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE PARALLEL AND DISTRIBUTED COMPUTING, P131, DOI 10.1145/3078597.3078617
   Chan A, 2017, IEEE INT CONF SOFTW, P184, DOI 10.1109/ICST.2017.24
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Chuah E, 2015, 2015 ELEVENTH EUROPEAN DEPENDABLE COMPUTING CONFERENCE (EDCC), P225, DOI 10.1109/EDCC.2015.19
   Cinque M, 2016, IEEE T RELIAB, V65, P1665, DOI 10.1109/TR.2016.2570564
   Cinque M, 2013, IEEE T SOFTWARE ENG, V39, P806, DOI 10.1109/TSE.2012.67
   Cortellessa V, 2007, LECT NOTES COMPUT SC, V4608, P140
   Duraes JA, 2006, IEEE T SOFTWARE ENG, V32, P849, DOI 10.1109/TSE.2006.113
   Filieri A, 2010, LECT NOTES COMPUT SC, V6092, P1, DOI 10.1007/978-3-642-13238-4_1
   Hiller M, 2004, IEEE T COMPUT, V53, P512, DOI 10.1109/TC.2004.1275294
   Hiller M, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P135, DOI 10.1109/DSN.2002.1028894
   Hiller M., 2002, Software Engineering Notes, V27, P81, DOI 10.1145/566171.566184
   Hsueh MC, 1997, COMPUTER, V30, P75, DOI 10.1109/2.585157
   Jhumka A, 2001, SYM REL DIST SYST, P152, DOI 10.1109/RELDIS.2001.969769
   Jhumka A, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P40, DOI 10.1109/ISSRE.2011.34
   Johansson A, 2005, I C DEPEND SYS NETWO, P86, DOI 10.1109/DSN.2005.45
   Kabinna S, 2018, EMPIR SOFTW ENG, V23, P290, DOI 10.1007/s10664-017-9518-0
   Kalyanakrishnam M., 1999, Proceedings of the 18th IEEE Symposium on Reliable Distributed Systems, P178, DOI 10.1109/RELDIS.1999.805094
   Khoshgoftaar TM, 1999, ASSET'99: 1999 IEEE SYMPOSIUM ON APPLICATION-SPECIFIC SYSTEMS AND SOFTWARE ENGINEERING & TECHNOLOGY - PROCEEDINGS, P185, DOI 10.1109/ASSET.1999.756768
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Lau KK, 2007, IEEE T SOFTWARE ENG, V33, P709, DOI 10.1109/TSE.2007.70726
   Leeke Matthew, 2010, Proceedings of the 2010 Eighth European Dependable Computing Conference (EDCC 2010), P85, DOI 10.1109/EDCC.2010.20
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Makanju A, 2012, IEEE T KNOWL DATA EN, V24, P1921, DOI 10.1109/TKDE.2011.138
   Michael CC, 1997, COMPASS '97 - ARE WE MAKING PROGRESS TOWARDS COMPUTER ASSURANCE?, P68, DOI 10.1109/CMPASS.1997.613237
   Pattabiraman K, 2011, IEEE T DEPEND SECURE, V8, P640, DOI 10.1109/TDSC.2010.19
   Popic P, 2005, 16th IEEE International Symposium on Software Reliability Engineering, Proceedings, P53, DOI 10.1109/ISSRE.2005.18
   Rosenblum DS, 1995, IEEE T SOFTWARE ENG, P21
   Russo B, 2015, EMPIR SOFTW ENG, V20, P879, DOI 10.1007/s10664-014-9303-2
   Tian J, 2004, IEEE T SOFTWARE ENG, V30, P754, DOI 10.1109/TSE.2004.87
   Tucek Joseph, 2007, Operating Systems Review, V41, P131, DOI 10.1145/1323293.1294275
   Voas J, 1997, COMPUT CONTROL ENG J, V8, P269, DOI 10.1049/cce:19970607
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yuan D, 2010, ASPLOS XV: FIFTEENTH INTERNATIONAL CONFERENCE ON ARCHITECTURAL SUPPORT FOR PROGRAMMING LANGUAGES AND OPERATING SYSTEMS, P143
   Zheng Zibin., 2010, P 32 ACMIEEE INT C S, V1, P35, DOI DOI 10.1145/1806799.1806809
NR 40
TC 2
Z9 2
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2020
VL 25
IS 4
BP 2450
EP 2484
DI 10.1007/s10664-020-09801-2
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MD8CQ
UT WOS:000544196800003
DA 2024-07-18
ER

PT J
AU Han, JX
   Shihab, E
   Wan, ZY
   Deng, SG
   Xia, X
AF Han, Junxiao
   Shihab, Emad
   Wan, Zhiyuan
   Deng, Shuiguang
   Xia, Xin
TI What do Programmers Discuss about Deep Learning Frameworks
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical study; Deep learning frameworks; Tensorflow; Pytorch; Theano;
   LDA topic model
ID STACK OVERFLOW; SOURCE CODE; RETRIEVAL
AB Deep learning has gained tremendous traction from the developer and researcher communities. It plays an increasingly significant role in a number of application domains. Deep learning frameworks are proposed to help developers and researchers easily leverage deep learning technologies, and they attract a great number of discussions on popular platforms, i.e., Stack Overflow and GitHub. To understand and compare the insights from these two platforms, we mine the topics of interests from these two platforms. Specifically, we apply Latent Dirichlet Allocation (LDA) topic modeling techniques to derive the discussion topics related to three popular deep learning frameworks, namely, Tensorflow, PyTorch and Theano. Within each platform, we compare the topics across the three deep learning frameworks. Moreover, we make a comparison of topics between the two platforms. Our observations include 1) a wide range of topics that are discussed about the three deep learning frameworks on both platforms, and the most popular workflow stages are Model Training and Preliminary Preparation. 2) the topic distributions at the workflow level and topic category level on Tensorflow and PyTorch are always similar while the topic distribution pattern on Theano is quite different. In addition, the topic trends at the workflow level and topic category level of the three deep learning frameworks are quite different. 3) the topics at the workflow level show different trends across the two platforms. e.g., the trend of the Preliminary Preparation stage topic on Stack Overflow comes to be relatively stable after 2016, while the trend of it on GitHub shows a stronger upward trend after 2016. Besides, the Model Training stage topic still achieves the highest impact scores across two platforms. Based on the findings, we also discuss implications for practitioners and researchers.
C1 [Han, Junxiao; Wan, Zhiyuan; Deng, Shuiguang] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Peoples R China.
   [Shihab, Emad] Concordia Univ, Dept Comp Sci & Software Engn, 1455 Blvd Maisonneuve O, Montreal, PQ H3G 1M8, Canada.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Wellington Rd, Clayton, Vic 3800, Australia.
C3 Zhejiang University; Concordia University - Canada; Monash University
RP Deng, SG (corresponding author), Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Peoples R China.
EM junxiaohan@zju.edu.cn; eshihab@encs.concordia.ca; wanzhiyuan@zju.edu.cn;
   dengsg@zju.edu.cn; xin.xia@monash.edu
RI Xia, Xin/AAD-6217-2022
OI Xia, Xin/0000-0002-6302-3256; Deng, Shuiguang/0000-0001-5015-6095; Wan,
   Zhiyuan/0000-0001-7657-6653
FU National Key Research and Development Program of China [2017YFB1400601];
   Key Research and Development Project of Zhejiang Province [2017C01015];
   National Science Foundation of China [61772461]; Natural Science
   Foundation of Zhejiang Province [LR18F020003]
FX This research was partially supported by the National Key Research and
   Development Program of China (No. 2017YFB1400601), Key Research and
   Development Project of Zhejiang Province (No. 2017C01015), National
   Science Foundation of China (No. 61772461), Natural Science Foundation
   of Zhejiang Province (No. LR18F020003 and No.LY17F020014).
CR Abadi M, 2016, ACM SIGPLAN NOTICES, V51, P1, DOI [10.1145/3022670.2976746, 10.1145/2951913.2976746]
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], 2017, ARXIV171106061
   [Anonymous], 2014, ARXIV14122302
   Azad S, 2017, ACM T SOFTW ENG METH, V25, DOI 10.1145/2990497
   Bahrampour S., 2015, Comparative study of deep learning software frameworks
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Baltes S, 2018, IEEE WORK CONF MIN S, P319, DOI 10.1145/3196398.3196430
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bergstra J., 2010, Proc. Python Sci. Comput. Conf., V1, P3
   Bird S., 2006, P COLING ACL INT PRE, P69, DOI DOI 10.3115/1118108.1118117
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   BOVENS L, 2010, BAYESIAN EPISTEMOLOG
   Chen CY, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P338, DOI 10.1109/SANER.2016.21
   Chen TH, 2017, IEEE T RELIAB, V66, P806, DOI 10.1109/TR.2017.2699938
   Collobert R, 2011, BIGLEARN NIPS WORKSH, P1
   De Lucia A, 2014, EMPIR SOFTW ENG, V19, P1383, DOI 10.1007/s10664-013-9285-5
   Duan CQ, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4033
   Erickson BJ, 2017, J DIGIT IMAGING, V30, P400, DOI 10.1007/s10278-017-9965-6
   Hannun Awni, 2014, ARXIV
   Hinton GE, 2006, NEURAL COMPUT, V18, P1527, DOI 10.1162/neco.2006.18.7.1527
   Hoang C.D.V., 2017, P 2017 C EMPIRICAL M, P146
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hoffman M., 2010, ADV NEURAL INFORM PR, V23, P856
   Ketkar N, 2017, DEEP LEARNING PYTHON, P195, DOI [10.1007/978-1-4842-2766-4_12, DOI 10.1007/978-1-4842-2766-4_12]
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Ledig C, 2017, PROC CVPR IEEE, P105, DOI 10.1109/CVPR.2017.19
   Lee SR, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P926, DOI 10.1145/3106237.3117776
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Li HW, 2013, WORK CONF REVERSE EN, P142, DOI 10.1109/WCRE.2013.6671289
   Li Mu, 2014, USENIX OSDI, P583
   Liu H, 2018, IEEE INT CONF AUTOM, P385, DOI 10.1145/3238147.3238166
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   MILLER GA, 1995, COMMUN ACM, V38, P39, DOI 10.1145/219717.219748
   Mo WK, 2015, ASIA PAC SOFWR ENG, P56, DOI 10.1109/APSEC.2015.48
   Newman D., 2010, AUTOMATIC EVALUATION
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Röder M, 2015, WSDM'15: PROCEEDINGS OF THE EIGHTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P399, DOI 10.1145/2684822.2685324
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Russakovsky O, 2015, INT J COMPUT VISION, V115, P211, DOI 10.1007/s11263-015-0816-y
   Sanderson M, 2010, NAT LANG ENG, V16, P100, DOI 10.1017/S1351324909005129
   Schmidhuber J, 2015, NEURAL NETWORKS, V61, P85, DOI 10.1016/j.neunet.2014.09.003
   Spencer D., 2009, CARD SORTING DESIGNI
   Thomas S.W., 2012, MINING UNSTRUCTURED
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Vasilescu B, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P188, DOI 10.1109/SocialCom.2013.35
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1857, DOI 10.1109/TSE.2019.2937083
   Wan ZY, 2017, IEEE WORK CONF MIN S, P413, DOI 10.1109/MSR.2017.59
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Weng Rongxiang, 2017, EMNLP 2017
   Yang XL, 2016, J COMPUT SCI TECH-CH, V31, P910, DOI 10.1007/s11390-016-1672-0
   Yao Z., 2018, ARXIV180309371
   Ye DH, 2016, PROC IEEE INT CONF S, P389, DOI 10.1109/ICSME.2016.11
   Yu LG, 2014, LECT NOTES COMPUT SC, V8842, P457, DOI 10.1007/978-3-662-45550-0_46
   Zagalsky A, 2018, EMPIR SOFTW ENG, V23, P953, DOI 10.1007/s10664-017-9536-y
   ZHANG YH, 2018, EMPIRICAL STUDY TENS, P129
NR 60
TC 46
Z9 49
U1 2
U2 23
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2020
VL 25
IS 4
BP 2694
EP 2747
DI 10.1007/s10664-020-09819-6
EA APR 2020
PG 54
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MD8CQ
UT WOS:000528439800001
DA 2024-07-18
ER

PT J
AU Marques, R
   Costa, G
   da Silva, MM
   Gonçalves, D
   Gonçalves, P
AF Marques, Rita
   Costa, Goncalo
   da Silva, Miguel Mira
   Goncalves, Daniel
   Goncalves, Pedro
TI A gamification solution for improving Scrum adoption
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Gamification; Software development; Software process; Agile; Scrum;
   Motivation
ID SOFTWARE PROCESS IMPROVEMENT; DESIGN SCIENCE; CHALLENGES; MOTIVATION
AB Despite the wide adoption of agile methodologies, software development teams still struggle to meet requirements, partially due to practitioners' lack of motivation to apply agile techniques in practice. We propose a gamification software tool to make Scrum techniques more fun and engaging for practitioners. This paper presents the results of the first iteration of a larger research effort that follows the Design Science Research methodology, in which a prototype was developed as a Jira Software app and evaluated with a real-world Scrum team. The results suggest that gamification can positively impact practitioners' motivation by changing the atmosphere within the team, even if it does not contribute to the improvement of Scrum practices adoption. The metrics corresponding to Scrum techniques slightly increased after using the app, but this result probably cannot be attributed to practitioners' improved motivation. Quantitative analysis and interviews with the team members showed that the gamified experience should be more challenging. We conclude that gamification's potential can be better achieved if more and better studies are conducted based on mixed methods, even if the conditions are not ideal. The app has been improved based on the feedback received, and currently is being evaluated with other Scrum teams.
C1 [Marques, Rita; Costa, Goncalo; da Silva, Miguel Mira; Goncalves, Daniel] Univ Lisbon, Inst Super Tecn, Ave Rovisco Pais 1, P-1049001 Lisbon, Portugal.
   [Marques, Rita; Costa, Goncalo; da Silva, Miguel Mira] INOV Inesc Inovacao, Ave Duque de Avila 23, P-1000005 Lisbon, Portugal.
   [Goncalves, Daniel] INESC ID, Rua Alves Redol 9, P-1000029 Lisbon, Portugal.
   [Goncalves, Pedro] Xpand IT, Rua Fornelos 77, P-4900709 Viana Do Castelo, Portugal.
C3 Universidade de Lisboa; Universidade de Lisboa; INOV INESC Inovacao;
   Universidade de Lisboa; INESC-ID
RP Marques, R (corresponding author), Univ Lisbon, Inst Super Tecn, Ave Rovisco Pais 1, P-1049001 Lisbon, Portugal.; Marques, R (corresponding author), INOV Inesc Inovacao, Ave Duque de Avila 23, P-1000005 Lisbon, Portugal.
EM rita.marques@tecnico.ulisboa.pt; goncalo.m.da.costa@tecnico.ulisboa.pt;
   mms@tecnico.ulisboa.pt; daniel.goncalves@inesc-id.pt;
   pedro.goncalves@xpand-it.com
RI Mira da Silva, Miguel/A-2892-2009; Mira da Silva, Miguel/ABA-4774-2021;
   Goncalves, Daniel/M-6013-2013
OI Mira da Silva, Miguel/0000-0002-0489-4465; Mira da Silva,
   Miguel/0000-0002-0489-4465; Goncalves, Daniel/0000-0002-5121-6296;
   Marques, Rita/0000-0002-0672-9260
FU IAPMEI [XGamify/P2020/SIIDT/11497]
FX This work was partially funded by IAPMEI through project
   XGamify/P2020/SII&DT/11497.
CR Alsawaier RS, 2018, INT J INF LEARN TECH, V35, P56, DOI 10.1108/IJILT-02-2017-0009
   [Anonymous], PAC AS C INF SYST PA
   [Anonymous], 2018, CHAOS REP
   Barata G, 2017, COMPUT HUM BEHAV, V71, P550, DOI 10.1016/j.chb.2016.08.049
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Buchanan D., 2016, Organizational Behaviour
   Cho Juyun, 2008, Issues, V9, P188, DOI [DOI 10.48009/2_IIS_2008_188-195, 10.48009/2_iis_2008_188-195]
   Conboy K, 2011, IEEE SOFTWARE, V28, P48, DOI 10.1109/MS.2010.132
   Csikszentmihalyi M., 2008, FLOW PSYCHOL OPTIMAL
   Dal Sasso T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P261, DOI 10.1109/SANER.2017.7884627
   de Castro FS, 2016, USING GAMIFICATION C
   DeMarco T., 2013, Peopleware: productive projects and teams
   Deterding S., 2011, P 15 INT AC MINDTREK, P9, DOI [10.1145/2181037.2181040, DOI 10.1145/2181037.2181040]
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dorling A, 2012, COMM COM INF SC, V290, P295
   Dubois D.J., 2013, Proceedings of the 2013 ninth Joint Meeting on Foundations of Software Engineering, P659
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   eka BM, 2016, GAMIFICATION SCRUM S
   Falleri J.-R., 2019, EMPIR SOFTW ENG, P1
   Frana A.C.C., 2011, P C EV ASS SOFTW ENG, P154, DOI [10.1049/ic.2011.0019, DOI 10.1049/IC.2011.0019]
   Hajjdiab Hassan, 2012, Journal of Software, V7, P237, DOI 10.4304/jsw.7.1.237-242
   Herranz E, 2015, COMMUN COMPUT PHYS, P127
   Herranz E, 2014, J UNIVERS COMPUT SCI, V20, P885
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Hoda R, 2018, IEEE SOFTWARE, V35, P58, DOI 10.1109/MS.2018.290111318
   Hoda R, 2016, J SYST SOFTWARE, V117, P245, DOI 10.1016/j.jss.2016.02.049
   Hossain E, 2009, INT CONF GLOBAL SOFT, P175, DOI 10.1109/ICGSE.2009.25
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Kropp M, 2017, SWISS AGILE STUDY 20
   Kropp M., 2018, Proceedings of the 22nd International Conference on Evaluation and Assessment in Software Engineering 2018, V2018, P112, DOI DOI 10.1145/3210459.3210470
   Lombriser P., 2011, Improving the Quality of the Software Development Lifecycle with Gamification
   Loriggio A., 2013, 8 INT C ENG COMP ED, V8, P326
   Mahaney R.C., 2006, PROJ MANAG J, V37, P42
   Marchenko A, 2008, AGILE 2008, PROCEEDINGS, P15, DOI 10.1109/Agile.2008.77
   Marques R, 2018, COMPUT APPL MATH, V37, P220, DOI 10.1007/s40314-017-0506-1
   Marques R, 2018, 27 INT C INF SYST DE
   Marques R, 2017, P 25 EUR C INF SYST, P2445
   Marques R, 2018, 24 AM C INF SYST AMI
   Marques R, 2017, INT CONF GAMES VIRTU, P141, DOI 10.1109/VS-GAMES.2017.8056584
   McClean A., 2015, EXPLORATION USE GAMI
   Meyer AN, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P19, DOI 10.1145/2635868.2635892
   Mora A., 2015, 7 INT C GAM VIRT WOR
   Nicholson PG, 2015, SOIL IMPROVEMENT AND GROUND MODIFICATION METHODS, P1
   Overington S., 2011, U POWER ENG C AUPEC, P1
   Passos E.B., 2011, Games and Digital Entertainment (SBGAMES'11), P260
   Pedreira O, 2015, INFORM SOFTWARE TECH, V57, P157, DOI 10.1016/j.infsof.2014.08.007
   Peffers K, 2007, J MANAGE INFORM SYST, V24, P45, DOI 10.2753/MIS0742-1222240302
   Platonova V., 2018, INFORM TECHNOLOGY MA, V20, P58, DOI [10.1515/itms-2017-0010, DOI 10.1515/ITMS-2017-0010]
   Prause C. R., 2012, PSYCHOL PROGRAM INTE, V64, P175
   Reeves B., 2009, Total engagement: How games and virtual worlds are changing the way people work and businesses compete
   Riemenschneider CK, 2002, IEEE T SOFTWARE ENG, V28, P1135, DOI 10.1109/TSE.2002.1158287
   Ryan RM, 2000, CONTEMP EDUC PSYCHOL, V25, P54, DOI 10.1006/ceps.1999.1020
   Ryan RM, 2000, AM PSYCHOL, V55, P68, DOI 10.1037/0003-066X.55.1.68
   Schwaber Ken., 2016, The Scrum Guide
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Sekitoleko N., 2014, Agile processes in software engineering and extreme programming, P46, DOI DOI 10.1007/978-3-319-06862-6_4
   Singer L., 2012, Proceedings 2012 2nd International Workshop on Games and Software Engineering: Realizing User Engagement with Game Engineering Techniques (GAS 2012), P5, DOI 10.1109/GAS.2012.6225927
   Souza J. P., 2016, BRAZ WORKSH AG METH, P131
   Stettina Christoph Johann, 2011, P 29 ACM INT C DES C, P159, DOI DOI 10.1145/2038476.2038509
   Thaler R. H., 2021, NUDGE FINAL EDITION
   Turk D., 2002, P 3 INT C EXTREME PR
   Verner JM, 2014, J SYST SOFTWARE, V92, P115, DOI 10.1016/j.jss.2014.01.008
   Version One, 2019, 13 STAT AG REP
   Werbach K., 2012, For the win: How game thinking can revolutionize your business
   Williams L, 2003, COMPUTER, V36, P39, DOI 10.1109/MC.2003.1204373
   Wohlin C., 2012, Experimentation in Software Engineering
   Yilmaz M, 2016, TEH VJESN, V23, P237, DOI 10.17559/TV-20140922220409
   Zichermann G., 2011, GAMIFICATION DESIGN
NR 68
TC 9
Z9 10
U1 5
U2 45
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2020
VL 25
IS 4
BP 2583
EP 2629
DI 10.1007/s10664-020-09816-9
EA APR 2020
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA MD8CQ
UT WOS:000526221500001
DA 2024-07-18
ER

PT J
AU Garousi, V
   Borg, M
   Oivo, M
AF Garousi, Vahid
   Borg, Markus
   Oivo, Markku
TI Practical relevance of software engineering research: synthesizing the
   community's voice
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Research relevance; Research utility; Multi-vocal
   literature review (MLR); Evidence
ID MANAGEMENT RESEARCH; TECHNOLOGY-TRANSFER; TEST-CODE; INDUSTRY; RIGOR;
   GAP; GUIDELINES; KNOWLEDGE; REVIEWS; CONTEXT
AB Software engineering (SE) research should be relevant to industrial practice. There have been regular discussions in the SE community on this issue since the 1980's, led by pioneers such as Robert Glass. As we recently passed the milestone of "50 years of software engineering", some recent positive efforts have been made in this direction, e.g., establishing "industrial" tracks in several SE conferences. However, many researchers and practitioners believe that we, as a community, are still struggling with research relevance and utility. The goal of this paper is to synthesize the evidence and experience-based opinions shared on this topic so far in the SE community, and to encourage the community to further reflect and act on the research relevance. For this purpose, we have conducted a Multi-vocal Literature Review (MLR) of 54 systematically-selected sources (papers and non peer-reviewed articles). Instead of relying on and considering the individual opinions on research relevance, mentioned in each of the sources, the MLR aims to synthesize and provide the "holistic" view on the topic. The highlights of our MLR findings are as follows. The top three root causes of low relevance, discussed in the community, are: (1) Researchers having simplistic views (or wrong assumptions) about SE in practice; (2) Lack of connection with industry; and (3) Wrong identification of research problems. The top three suggestions for improving research relevance are: (1) Using appropriate research approaches such as action-research; (2) Choosing relevant (practical) research problems; and (3) Collaborating with industry. By synthesizing all the discussions on this important topic so far, this paper aims to encourage further discussions and actions in the community to increase our collective efforts to improve the research relevance. Furthermore, we raise the need for empirically-grounded and rigorous studies on the relevance problem in SE research, as carried out in other fields such as management science.
C1 [Garousi, Vahid] Queens Univ Belfast, Belfast, Antrim, North Ireland.
   [Borg, Markus] RISE Res Inst Sweden AB, Lund, Sweden.
   [Oivo, Markku] Univ Oulu, Oulu, Finland.
C3 Queens University Belfast; RISE Research Institutes of Sweden;
   University of Oulu
RP Garousi, V (corresponding author), Queens Univ Belfast, Belfast, Antrim, North Ireland.
EM v.garousi@qub.ac.uk; markus.borg@ri.se; markku.oivo@oulu.fi
RI Borg, Markus/F-3609-2010
OI Borg, Markus/0000-0001-7879-4371; Garousi, Vahid/0000-0001-6590-7576
CR Alshahwan N, 2018, LECT NOTES COMPUT SC, V11036, P3, DOI 10.1007/978-3-319-99241-9_1
   Anderson N, 2001, J OCCUP ORGAN PSYCH, V74, P391, DOI 10.1348/096317901167451
   Anderson V., 1997, Systems thinking basics: From concepts to causal loops
   Andriessen D., 2004, The Learning Organization, V11 Nos, P393, DOI DOI 10.1108/09696470410538288
   [Anonymous], 2019, The Washington Post
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], COMMUNICATION ASS IN
   Aranda J, 2019, PRACTITIONERS PERCEI
   Arcuri A, 2018, EMPIR SOFTW ENG, V23, P1959, DOI 10.1007/s10664-017-9570-9
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Averch H, 1975, Inquiry, V12, P231
   Awasthy R., 2016, Joint Proceedings of the 4th International Workshop on Quantitative Approaches to Software Quality (QuASoQ 2016) and 1st International Workshop on Technical Debt Analytics (TDA 2016) co-located with the 23rd Asia-Pacific Software Engineering Conference (APSEC 2016), Hamilton, New Zealand, December 6, 2016, P20
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   BARROCA LM, 1992, COMPUT J, V35, P579, DOI 10.1093/comjnl/35.6.579
   Basili V, 2018, IEEE SOFTWARE, V35, P44, DOI 10.1109/MS.2018.290110216
   Beecham S, 2018, SOFTWARE TECHNOLOGY
   Beecham S, 2014, COMPUTER, V47, P80, DOI 10.1109/MC.2014.92
   Beecham S, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P41, DOI 10.1109/ICGSE.2013.14
   Benbasat I, 1999, MIS QUART, V23, P3, DOI 10.2307/249403
   Bhat T., 2006, Proceedings of the 2006 ACM/IEEE International Symposium on Empirical Software Engineering (ISESE '06), P356, DOI [DOI 10.1145/1159733.1159787, 10.1145/1159733.1159787]
   Biffl S., 2006, Value-Based Software Engineering
   Biswas AK, 2009, WATER RESOUR DEV MAN, P1, DOI 10.1007/978-3-540-37224-0
   Biswas S, 2019, MECH BASED DES STRUC, V47, P430, DOI 10.1080/15397734.2018.1557528
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Boehm BW, 2000, P INT C SOFTW ENG
   Briand L, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.3571562
   Briand L, 2012, IEEE SOFTWARE, V29, P96, DOI 10.1109/MS.2012.86
   Brings J, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1981
   Calderón A, 2018, COMPUT STAND INTER, V57, P36, DOI 10.1016/j.csi.2017.11.003
   Carton G, 2017, MANAGEMENT, V20, P166, DOI 10.3917/mana.202.0166
   Carver JC, 2016, P ACM IEEE INT S EMP
   Catal C, 2009, EXPERT SYST APPL, V36, P7346, DOI 10.1016/j.eswa.2008.10.027
   Charters S., 2007, GUIDELINES PERFORMIN
   Coplien J, 2019, ACAD RELEVANCE
   Crick J, 2019, WHY SIMPLE IS SO COM
   D Lo, 2015, P JOINT M FDN SOFTW
   Davis A. M., 2002, Requirements Engineering, V7, P107, DOI 10.1007/s007660200007
   Desouza KC, 2005, INT C INF SYST, P957
   Dogan S, 2014, J SYST SOFTWARE, V91, P174, DOI 10.1016/j.jss.2014.01.010
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Ebert C, 2018, IEEE SOFTWARE, V35, P94, DOI 10.1109/MS.2018.3571228
   Emmerich W., 2007, Software Engineering Notes, V32, P21, DOI 10.1145/1226816.1226829
   Estabrooks CA, 1999, CANADIAN J NURSING R, V31
   Evans Data Corporation, 2019, GLOB DEV POP DEM STU, V1
   Felderer M, 2015, MODEL BASED SECURITY
   Felderer M, 2015, GERM SOFTW ENG MAN C, P238
   FLOYD C, 1985, LECT NOTES COMPUT SC, V186, P1
   Flynn BB, 2008, J SUPPLY CHAIN MANAG, V44, P63, DOI 10.1111/j.1745-493X.2008.00056.x
   Fox S, 2016, EUR MANAG J, V34, P457, DOI 10.1016/j.emj.2016.07.005
   Franch X, 2017, INT REQUIR ENG CONF, P382, DOI 10.1109/RE.2017.17
   FSE, 2018, PAN STAT SOFTW ENG R
   Fucci D, 2015, INFORM SOFTWARE TECH, V68, P82, DOI 10.1016/j.infsof.2015.08.004
   Garousi V., 2017, Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering - EASE'17, P224, DOI [DOI 10.1145/3084226.3084279, 10.1145/3084226, DOI 10.1145/3084226]
   Garousi V., 2016, P INT C EV ASS SOFTW, P171
   Garousi V., 2017, P 21 INT C EV ASS SO, P65
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Garousi V, 2018, INFORM SOFTWARE TECH, V103, P40, DOI 10.1016/j.infsof.2018.06.007
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Garousi V, 2017, IEEE SOFTWARE, V34, P38, DOI 10.1109/MS.2017.3641116
   Garousi V, 2017, INFORM SOFTWARE TECH, V85, P16, DOI 10.1016/j.infsof.2017.01.001
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Garousi V, 2016, IEEE INT CONF SOFTW, P213, DOI 10.1109/ICST.2016.7
   Garousi V, 2016, INFORM SOFTWARE TECH, V76, P92, DOI 10.1016/j.infsof.2016.04.015
   Garousi V, 2016, COMPUT SCI REV, V19, P56, DOI 10.1016/j.cosrev.2015.12.002
   Garousi V, 2013, J SYST SOFTWARE, V86, P1354, DOI 10.1016/j.jss.2012.12.051
   Ghaisas S, 2014, IEEE SOFTWARE, V31, P88, DOI 10.1109/MS.2014.10
   Giray G., 2018, International Journal of Informatics Technologies, V11, P131
   Glass R.L., 2006, SOFTWARE CREATIVITY
   Glass R.L., 2006, SOFTWARE CONFLICT 2
   Glass RL, 1996, COMMUN ACM, V39, P11, DOI 10.1145/240455.240458
   GLASS RL, 1994, IEEE SOFTWARE, V11, P6
   Glass RL, 2007, COMMUN ACM, V50, P21, DOI 10.1145/1230819.1241686
   Glass RL, 2006, IEEE SOFTWARE, V23, P55, DOI 10.1109/MS.2006.113
   Glass RL, 2009, IEEE SOFTWARE, V26, P96, DOI 10.1109/MS.2009.175
   Glegg G. L., 1969, THE DESIGN OF DESIGN
   Gorschek T, 2014, J SYST SOFTWARE, V95, P176, DOI 10.1016/j.jss.2014.03.082
   Gravett S, 2007, INT J LIFELONG EDUC, V26, P193, DOI 10.1080/02601370701219509
   Griswold WG, 2015, IEEE SOFTWARE, V32, P30, DOI 10.1109/MS.2015.107
   HAIRE M, 1964, CALIF MANAGE REV, V6, P3, DOI 10.2307/41165601
   Hamet J, 2018, EUR BUS REV, V30, P183, DOI 10.1108/EBR-01-2017-0025
   Harnett CK, 2017, ADV MATER TECHNOL-US, V2, DOI 10.1002/admt.201700087
   Haser F., 2014, P INT C EV ASS SOFTW
   Heleta S, 2019, ACAD CAN CHANGE WORL
   Hemlin S., 1998, RES EVAL, V7, P159, DOI [10.1093/rev/7.3.159, DOI 10.1093/REV/7.3.159]
   Hodgkinson GP, 2009, J MANAGE STUD, V46, P534, DOI 10.1111/j.1467-6486.2009.00832.x
   Hopewell S, 2007, COCHRANE DATABASE SY
   ICSE, 2011, WHAT IND WANTS RES
   ICST, 2018, PAN AR SOFTW TEST RE
   Ivanov V, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P890, DOI 10.1145/3106237.3117778
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Johnson B, 2019, IEEE T SOFTW ENG
   Jolly S. A., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P400, DOI 10.1109/ICST.2012.52
   Jones D, 2019, WORLD VIEW RES SOFTW
   Jones D, 2019, UNAPPRECIATED BUBBLE
   Jones D, 2019, WAITING FUNERALS CUL
   Kaindia H., 2002, Requirements Engineering, V7, P113, DOI 10.1007/s007660200008
   Kalliamvakou E, 2019, IEEE T SOFTWARE ENG, V45, P87, DOI 10.1109/TSE.2017.2768368
   Keen PG, 1991, INFORM SYSTEMS RES C, V27, P49
   Kieser A, 2015, ACAD MANAG ANN, V9, P143, DOI 10.1080/19416520.2015.1011853
   Kieser A, 2009, J MANAGE STUD, V46, P516, DOI 10.1111/j.1467-6486.2009.00831.x
   King S, 2019, ACAD SILICON VALLEY
   Kitchenham B., 2007, EVIDENCE BASED SOFTW
   Ko AJ, 2019, GRAND CHALLENGES PRO
   Ko AJ, 2015, BLACK HOLE SOFTWARE
   Ko AJ, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P3, DOI 10.1109/ICSE-SEIP.2017.29
   Lant M, 2019, OCCAMS RAZOR AND ART
   Lee AS, 1999, MIS QUART, V23, P29, DOI 10.2307/249407
   Lethbridge TC, 1999, TR9905 U OTT
   Lwakatare LE, 2016, LECT NOTES COMPUT SC, V10027, P399, DOI 10.1007/978-3-319-49094-6_27
   Mahaux M, 2013, S VIS LANG HUM CEN C, P353, DOI 10.1109/RE.2013.6636750
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Mäntylä MV, 2016, LECT NOTES COMPUT SC, V10027, P611, DOI 10.1007/978-3-319-49094-6_46
   Meyer B, 2010, OTHER IMPEDIMENT SOF
   Mikkonen T, 2018, INFORM SOFTWARE TECH, V95, P34, DOI 10.1016/j.infsof.2017.10.013
   Miles M.B., 2014, Qualitative data analysis: A methods sourcebook, V3rd
   Miller S, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P260
   Misirli A.T., 2014, P INT WORKSH COND EM
   Moeini M, 2019, J STRATEG INF SYST
   Mohacsi S, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P382, DOI 10.1109/SEAA.2015.18
   Moody D.L., 2000, Proceedings of the Twenty First International Conference on Information Systems, P351
   Mulkay M, 2014, SCI SOCIOLOGY KNOWLE
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Murphy G, 2019, IMPACTFUL SE RES SOM
   Myrbakken H, 2017, COMM COM INF SC, V770, P17, DOI 10.1007/978-3-319-67383-7_2
   Naitou K, 2018, INT C PROGRAM COMPRE, P332, DOI 10.1145/3196321.3196358
   Nicolai AT, 2004, J MANAGE STUD, V41, P951, DOI 10.1111/j.1467-6486.2004.00462.x
   de França BBN, 2016, THIRTIETH BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2016), P53, DOI 10.1145/2973839.2973845
   Norman DonaldA., 2010, interactions, V17, p9. issn, DOI DOI 10.1145/1806491.1806494
   Obrenovic Z, 2018, RES PRACTICE ESSAYS
   OGAWA RT, 1991, REV EDUC RES, V61, P265, DOI 10.3102/00346543061003265
   Osterweil LJ, 2008, COMPUTER, V41, P39, DOI 10.1109/MC.2008.85
   Parnas D. L., 1998, Software Engineering Notes, V23, P64, DOI 10.1145/279437.279464
   Parnas DL, 2011, COMPUTER, V44, P53, DOI 10.1109/MC.2011.268
   Parnas DL, 2010, COMPUTER, V43, P28, DOI 10.1109/MC.2010.22
   PARNAS DL, 1985, COMMUN ACM, V28, P1326, DOI 10.1145/214956.214961
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Pechenizkiy M, 2008, INTELL DATA ANAL, V12, P237, DOI 10.3233/IDA-2008-12206
   Petersen K., 2008, INT C EV ASS SOFTW E
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Pfleeger SL, 1999, COMPUTER, V32, P32, DOI 10.1109/2.796106
   POTTS C, 1993, IEEE SOFTWARE, V10, P19, DOI 10.1109/52.232392
   Rafi D. M., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P36, DOI 10.1109/IWAST.2012.6228988
   Ralph P, 2018, SCI COMPUT PROGRAM, V156, P68, DOI 10.1016/j.scico.2018.01.002
   Rautiainen A, 2017, MANAGE ACCOUNT RES, V34, P19, DOI 10.1016/j.mar.2016.07.001
   Riehle D, 2019, CHALLENGES MAKING SO
   Rohrer JE, 2000, HEALTH SERV RES, V34, P1307
   Rombach D, 2008, ACM SIGSOFT SOFTW EN, V33, P26
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Rynes SL, 2001, ACAD MANAGE J, V44, P340, DOI 10.5465/3069460
   Simon H., 1957, ADM BEHAV
   Slawson DC, 2001, J FAM PRACTICE, V50, P209
   Sommerville I, 2019, IRRELEVANCE ACAD SOF
   Srivastava SC, 2009, ENCY INFORM SCI TECH, P2004
   Tan A, 2019, TECHNICAL REPORT
   Tarhan A., 2017, P 21 INT C EVALUATIO, VF1286, P2, DOI 10.1145/3084226.3084261
   Tichy WalterF., 1993, SIGSOFT Softw. Eng. Notes, V18, P35
   Tkachenko O, 2017, HUM RESOUR DEV REV, V16, P235, DOI 10.1177/1534484317707562
   Toffel MW, 2016, PROD OPER MANAG, V25, P1493, DOI 10.1111/poms.12558
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Tyndall J, 2019, AACODS CHECKLIST
   Vizecky K., 2011, P ANN HAW INT C SYST, P1, DOI DOI 10.1109/HICSS.2011.239
   Wieringa RJ, 2006, REQUIR ENG, V11, P295, DOI 10.1007/s00766-006-0037-6
   Wilson D., 2004, The Handbook of Pragmatics, P607, DOI DOI 10.1002/9780470756959.CH27
   Wilson G, 2019, IT WILL NEV WORK THE
   Wilson G, 2019, 2 SOLITUDES ILLUSTRA
   Wohlin C, 1999, J SYST SOFTWARE, V49, P125, DOI 10.1016/S0164-1212(99)00085-0
   Wohlin C., 2012, Experimentation in Software Engineering
   Wohlin C, 2013, P INT JOINT C SOFTW
   Wohlin C, 2013, INT JOINT C SOFTW TE, pIS
   Wohlin C, 2014, 18 INT C EV ASS SOFT, P1, DOI DOI 10.1145/2601248.2601268
   Wohlin C, 2012, IEEE SOFTWARE, V29, P67, DOI 10.1109/MS.2011.92
   Wong WE, 2011, J SYST SOFTWARE, V84, P162, DOI 10.1016/j.jss.2010.09.036
   Xie J, 2011, PHYS REV E, V84, DOI 10.1103/PhysRevE.84.011130
   Xie T, 2019, RES METHODOLOGY PURS
   Yamashita A, 2015, Second International Workshop on Software Engineering Research and Industrial Practice SER&IP 2015, P11, DOI 10.1109/SERIP.2015.11
   Yusifoglu VG, 2015, INFORM SOFTWARE TECH, V58, P123, DOI 10.1016/j.infsof.2014.06.009
   Zeller A, 2019, ICSE 2018 NEW FAC S
   Zhi JJ, 2015, J SYST SOFTWARE, V99, P175, DOI 10.1016/j.jss.2014.09.042
   Zimmermann J, 2019, COST BENEFIT MODEL B
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 183
TC 22
Z9 23
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2020
VL 25
IS 3
SI SI
BP 1687
EP 1754
DI 10.1007/s10664-020-09803-0
EA MAR 2020
PG 68
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA LL7FD
UT WOS:000518304900003
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Viticchié, A
   Regano, L
   Basile, C
   Torchiano, M
   Ceccato, M
   Tonella, P
AF Viticchie, Alessio
   Regano, Leonardo
   Basile, Cataldo
   Torchiano, Marco
   Ceccato, Mariano
   Tonella, Paolo
TI Empirical assessment of the effort needed to attack programs protected
   with client/server code splitting
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code hardening; User study; Controlled experiment; Empirical study; Code
   tampering
ID OBFUSCATION
AB Context Code hardening is meant to fight malicious tampering with sensitive code executed on client hosts. Code splitting is a hardening technique that moves selected chunks of code from client to server. Although widely adopted, the effective benefits of code splitting are not fully understood and thoroughly assessed. Objective The objective of this work is to compare non protected code vs. code splitting protected code, considering two levels of the chunk size parameter, in order to assess the effectiveness of the protection - in terms of both attack time and success rate - and to understand the attack strategy and process used to overcome the protection. Method We conducted an experiment with master students performing attack tasks on a small application hardened with different levels of protection. Students carried out their task working at the source code level. Results We observed a statistically significant effect of code splitting on the attack success rate that, on the average, was reduced from 89% with unprotected clear code to 52% with the most effective protection. The protection variant that moved some small-sized code chunks turned out to be more effective than the alternative moving fewer but larger chunks. Different strategies were identified yielding different success rates. Moreover we discovered that successful attacks exhibited different process w.r.t. failed ones. Conclusions We found empirical evidence of the effect of code splitting, assessed the relative magnitude, and evaluated the influence of the chunk size parameter. Moreover we extracted the process used to overcome such obfuscation technique.
C1 [Viticchie, Alessio; Regano, Leonardo; Basile, Cataldo; Torchiano, Marco] Politecn Torino, Turin, Italy.
   [Ceccato, Mariano] Fdn Bruno Kessler, Trento, Italy.
   [Tonella, Paolo] USI, Lugano, Switzerland.
C3 Polytechnic University of Turin; Fondazione Bruno Kessler
RP Torchiano, M (corresponding author), Politecn Torino, Turin, Italy.
EM alessio.viticchie@polito.it; leonardo.regano@polito.it;
   cataldo.basile@polito.it; marco.torchiano@polito.it; ceccato@fbk.eu;
   paolo.tonella@usi.ch
RI Basile, Cataldo/U-3618-2019; Regano, Leonardo/Q-1949-2017; Tonella,
   Paolo/C-1702-2015
OI Regano, Leonardo/0000-0002-9259-5157; Ceccato,
   Mariano/0000-0001-7325-0316; Torchiano, Marco/0000-0001-5328-368X;
   BASILE, CATALDO/0000-0002-8016-1490
CR Anckaert B, 2007, QOP'07: PROCEEDINGS OF THE 2007 ACM WORKSHOP ON QUALITY OF PROTECTION, P15
   [Anonymous], 2001, LECT NOTES COMPUTER, DOI DOI 10.1007/3-540-44647-8_2
   Canavese D, 2017, LECT NOTES COMPUT SC, V10547, P193, DOI 10.1007/978-3-319-68063-7_13
   Ceccato M, 2017, INT C PROGRAM COMPRE, P154, DOI 10.1109/ICPC.2017.2
   Ceccato M., 2018, CRIME PREV SECUR MAN, P1
   Ceccato M, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P27
   Ceccato M, 2015, EMPIR SOFTW ENG, V20, P1486, DOI 10.1007/s10664-014-9321-0
   Ceccato M, 2014, EMPIR SOFTW ENG, V19, P1040, DOI 10.1007/s10664-013-9248-x
   Ceccato M, 2009, INT C PROGRAM COMPRE, P178, DOI 10.1109/ICPC.2009.5090041
   Ceccato M, 2009, AUTOMAT SOFTW ENG, V16, P235, DOI 10.1007/s10515-009-0047-y
   Collberg C., 1997, TAXONOMY OBFUSCATING
   Collberg CS, 2002, IEEE T SOFTWARE ENG, V28, P735, DOI 10.1109/TSE.2002.1027797
   Falcarin P, 2011, IEEE SOFTWARE, V28, P24, DOI 10.1109/MS.2011.34
   Feldt R, 2018, EMPIR SOFTW ENG, V23, P3801, DOI 10.1007/s10664-018-9655-0
   Futcher L., 2008, Proceedings of the 2008 Annual Research Conference of the South African Institute of computer Scientists and Information Technologists, V338, P56, DOI DOI 10.1145/1456659.1456667
   Goto H., 2000, Information Security. Third International Workshop, ISW 2000. Proceedings (Lecture Notes in Computer Science Vol.1975), P82
   Hänsch N, 2018, PROCEEDINGS OF THE FOURTEENTH SYMPOSIUM ON USABLE PRIVACY AND SECURITY, P341
   Krinke J, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P81, DOI 10.1109/SCAM.2003.1238034
   Linn Cullen, 2003, Obfuscation of Executable Code to Improve Resistance to Static Disassembly, P290, DOI [10.1145/948109.948149, DOI 10.1145/948109.948149]
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Raats M. M., 1991, Food Quality and Preference, V3, P89, DOI 10.1016/0950-3293(91)90028-D
   Sutherland I, 2006, COMPUT SECUR, V25, P221, DOI 10.1016/j.cose.2005.11.002
   Visaggio CA, 2013, INT J SECUR APPL, V7, P59
   Viticchié A, 2016, IEEE INT WORK C SO, P11, DOI 10.1109/SCAM.2016.17
   Viticchié A, 2016, SPRO'16: PROCEEDINGS OF THE 2016 ACM WORKSHOP ON SOFTWARE PROTECTION, P73, DOI 10.1145/2995306.2995315
   Weiser M., 1981, 5th International Conference on Software Engineering, P439
   Wheeler B, 2016, LMPERM PERMUTATION T
   Wohlin C., 2012, EXPT SOFTWARE ENG
NR 28
TC 7
Z9 7
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 1
EP 48
DI 10.1007/s10664-019-09738-1
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KP0WS
UT WOS:000515965100001
DA 2024-07-18
ER

PT J
AU Zeng, Y
   Chen, JF
   Shang, WY
   Chen, TH
AF Zeng, Yi
   Chen, Jinfu
   Shang, Weiyi
   Chen, Tse-Hsun (Peter)
TI Studying the characteristics of logging practices in mobile apps: a case
   study on F-Droid
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software logs; Logging practices; Logging performance; Mining software
   repositories
AB Logging is a common practice in software engineering. Prior research has investigated the characteristics of logging practices in system software (e.g., web servers or databases) as well as desktop applications. However, despite the popularity of mobile apps, little is known about their logging practices. In this paper, we sought to study logging practices in mobile apps. In particular, we conduct a case study on 1,444 open source Android apps in the F-Droid repository. Through a quantitative study, we find that although mobile app logging is less pervasive than server and desktop applications, logging is leveraged in almost all studied apps. However, we find that there exist considerable differences between the logging practices of mobile apps and the logging practices in server and desktop applications observed by prior studies. In order to further understand such differences, we conduct a firehouse email interview and a qualitative annotation on the rationale of using logs in mobile app development. By comparing the logging level of each logging statement with developers' rationale of using the logs, we find that all too often (35.4%), the chosen logging level and the rationale are inconsistent. Such inconsistency may prevent the useful runtime information to be recorded or may generate unnecessary logs that may cause performance overhead. Finally, to understand the magnitude of such performance overhead, we conduct a performance evaluation between generating all the logs and not generating any logs in eight mobile apps. In general, we observe a statistically significant performance overhead based on various performance metrics (response time, CPU and battery consumption). In addition, we find that if the performance overhead of logging is significantly observed in an app, disabling the unnecessary logs indeed provides a statistically significant performance improvement. Our results show the need for a systematic guidance and automated tool support to assist in mobile logging practices.
C1 [Zeng, Yi; Chen, Jinfu; Shang, Weiyi; Chen, Tse-Hsun (Peter)] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
C3 Concordia University - Canada
RP Zeng, Y (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
EM ze_yi@encs.concordia.ca; fu_chen@encs.concordia.ca;
   shang@encs.concordia.ca; peterc@encs.concordia.ca
OI Chen, Tse-Hsun/0000-0003-4027-0905; Zeng, Yi/0000-0001-7814-9524
CR Android, 2017, LOG
   [Anonymous], 2007, GUIDE ADV EMPIRICAL
   [Anonymous], 2012, INTRO PRACTICE STAT
   [Anonymous], 2008, PROC 1 USENIX C ANAL
   Boulon J., 2008, P CCA, V8, P1
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   Chen JF, 2017, PROC IEEE INT CONF S, P341, DOI 10.1109/ICSME.2017.13
   Chen TH, 2016, IEEE T SOFTWARE ENG, V42, P1148, DOI 10.1109/TSE.2016.2553039
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   Chowdhury S, 2017, EMPIR SOFTW ENG, P1
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Developer A, 2017, WRIT VIEW LOGS LOGC
   Ding Rui, 2015, P 2015 USENIX TECHN, P139
   Elye, 2018, DEB MESS YOUR RESP S
   F-Droid, 2017, FREE OP SOURC ANDR A
   FLEISS JL, 1973, EDUC PSYCHOL MEAS, V33, P613, DOI 10.1177/001316447303300309
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Harpstead E., 2015, P 2015 ANN S COMP HU, P369
   Hassan MK, 2019, ECON PAP, V38, P345, DOI 10.1111/1759-3441.12230
   Kabinna S, 2018, EMPIR SOFTW ENG, V23, P290, DOI 10.1007/s10664-017-9518-0
   Kabinna S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P154, DOI [10.1145/2901739.2901769, 10.1109/MSR.2016.025]
   Kabinna S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P326, DOI 10.1109/SANER.2016.29
   Kernighan B. W., 1999, The Practice of Programming, V1st
   Li H, 2018, EMPIR SOFTW ENG, V23, P2655, DOI 10.1007/s10664-018-9595-8
   Li H, 2017, EMPIR SOFTW ENG, V22, P1684, DOI 10.1007/s10664-016-9456-2
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Lin D, 2018, EXP LUNG RES, V44, P153, DOI 10.1080/01902148.2018.1459957
   Malik H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1012, DOI 10.1109/ICSE.2013.6606651
   Murphy-Hill E, 2015, IEEE T SOFTWARE ENG, V41, P65, DOI 10.1109/TSE.2014.2357438
   Mytkowicz T, 2009, ACM SIGPLAN NOTICES, V44, P265, DOI 10.1145/1508284.1508275
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Pinjia H, 2018, P 33 IEEE ACM INT C
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Shang W., 2011, P 2011 18 WORKING C, P335, DOI DOI 10.1109/WCRE.2011.48
   Shang WY, 2014, PROC IEEE INT CONF S, P21, DOI 10.1109/ICSME.2014.24
   Shang WY, 2015, EMPIR SOFTW ENG, V20, P1, DOI 10.1007/s10664-013-9274-8
   Shang WY, 2014, J SOFTW-EVOL PROC, V26, P3, DOI 10.1002/smr.1579
   StackOverflow, 2017, WHY DOESNT SYST OUT
   Syer MD, 2013, PROC IEEE INT CONF S, P110, DOI 10.1109/ICSM.2013.22
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yamane T., 1973, STAT INTRO ANAL
   Yuan D., 2012, P 2012 USENIX S OP S, P293
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2012, ACM T COMPUT SYST, V30, DOI 10.1145/2110356.2110360
   Zhao SY, 2017, 2017 6TH INTERNATIONAL SYMPOSIUM ON ADVANCED CONTROL OF INDUSTRIAL PROCESSES (ADCONIP), P565, DOI 10.1109/ADCONIP.2017.7983842
   Zhu JM, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P415, DOI 10.1109/ICSE.2015.60
NR 46
TC 33
Z9 37
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3394
EP 3434
DI 10.1007/s10664-019-09687-9
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JT6XW
UT WOS:000501131100006
DA 2024-07-18
ER

PT J
AU Chen, CY
   Xing, ZC
   Liu, Y
AF Chen, Chunyang
   Xing, Zhenchang
   Liu, Yang
TI What's Spain's Paris? Mining analogical libraries from Q&A discussions
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Analogical libraries; Word embedding; Knowledge graph; Relational
   knowledge; Categorical knowledge
AB Third-party libraries are an integral part of many software projects. It often happens that developers need to find analogical libraries that can provide comparable features to the libraries they are already familiar with for different programming languages or different mobile platforms. Existing methods to find analogical libraries are limited by the community-curated list of libraries, blogs, or Q&A posts, which often contain overwhelming or out-of-date information. In this paper, we present a new approach to recommend analogical libraries based on a knowledge base of analogical libraries mined from tags of millions of Stack Overflow questions. The novelty of our approach is to solve analogical-library questions by combining state-of-the-art word embedding technique and domain-specific relational and categorical knowledge mined from Stack Overflow. Given a library and a recommended analogical library, our approach further extracts questions and answer snippets in Stack Overflow about comparison of analogical libraries, which can potentially offer useful information scents for developers to further their investigation of the recommended analogical libraries. We implement our approach in a proof-of-concept web application and more than 34.8 thousands of users visited our website from November 2015 to August 2017. Our evaluation shows that our approach can make accurate recommendation of analogical libraries. We also demonstrate the usefulness of our analogical-library recommendations by using them to answer analogical-library questions in Stack Overflow. Google Analytics of our website traffic and analysis of the visitors' interaction with website contents provide the insights into the usage patterns and the system design of our web application.
C1 [Chen, Chunyang] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Xing, Zhenchang] Australian Natl Univ, Coll Engn & Comp Sci, Canberra, ACT, Australia.
   [Liu, Yang] Nanyang Technol Univ, Sch Comp Sci & Engn, Singapore, Singapore.
C3 Monash University; Australian National University; Nanyang Technological
   University
RP Chen, CY (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
EM chunyang.chen@monash.edu; zhenchang.xing@anu.edu.au; yangliu@ntu.edu.sg
RI yang, liu/GVU-8760-2022; Liu, Yang/D-2306-2013; liu, yang/HIU-0559-2022;
   LIU, YANG/HWQ-4615-2023; liu, yang/HQY-7531-2023; yang,
   liu/HTN-9175-2023; liu, yang/HHY-8583-2022; Liu, Yang/HNJ-6693-2023
OI Liu, Yang/0000-0001-7300-9215; Chen, Chunyang/0000-0003-2011-9618
FU Monash University
FX We'd like to appreciate the valuable review from reviewers. This work is
   partially supported by the seed grant from Monash University.
CR Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   Agrawal R., P 20 INT C VERY LARG
   [Anonymous], 1908, BIOMETRIKA, V6, P1
   [Anonymous], 2013, P 9 JOINT M EUR SOFT
   [Anonymous], 2007, P 2007 JOINT C EMPIR
   [Anonymous], 2015, GOOGLE TRENDS
   [Anonymous], 2008, INTRO INFORM RETRIEV, DOI DOI 10.1017/CBO9780511809071
   [Anonymous], 2007, P 22 IEEE ACM INT C
   [Anonymous], 2010, P 32 ACMIEEE INT C S, DOI DOI 10.1145/1806799.1806831
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bird S., 2004, P ACL INTERACTIVE PO, P214
   Blondel VD, 2008, J STAT MECH-THEORY E, DOI 10.1088/1742-5468/2008/10/P10008
   Chan W., 2012, PROC ACM SIGSOFT 20, P1, DOI DOI 10.1145/2393596.2393606
   Chen C, 2017, PACMHCI, V1, P32
   Chen CY, 2017, PROC INT CONF SOFTW, P450, DOI 10.1109/ICSE.2017.48
   Chen CY, 2016, PROC IEEE INT CONF S, P356, DOI 10.1109/ICSME.2016.17
   Chen CY, 2016, IEEE INT CONF AUTOM, P834, DOI 10.1145/2970276.2970290
   Chen CY, 2016, P INT COMP SOFTW APP, P83, DOI 10.1109/COMPSAC.2016.210
   Chen CY, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P338, DOI 10.1109/SANER.2016.21
   Chen G, 2014, PROC INT CONF RECON
   Chen GB, 2016, IEEE INT CONF AUTOM, P744, DOI 10.1145/2970276.2970317
   Cilibrasi RL, 2007, IEEE T KNOWL DATA EN, V19, P370, DOI 10.1109/TKDE.2007.48
   Deshmukh J, 2017, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME.2017.69
   Gligorov R., 2007, INT C WORLD WIDE WEB, P767
   Google, 2016, GOOGL AN POL
   Huang Y, 2018, IEEE INT CONF AUTOM, P214, DOI 10.1145/3238147.3238208
   Li G, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1080, DOI 10.1145/2675133.2675155
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   Mikolov T., 2013, P 2013 C N AM CHAPTE, P746
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mikolov T, 2013, ICLR WORKSHOP POSTER
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Nguyen A.T., 2014, P 29 ACM IEEE INT C, P457, DOI [10.1145/2642937.2643010, DOI 10.1145/2642937.2643010]
   Vu PM, 2016, IEEE INT CONF AUTOM, P726, DOI 10.1145/2970276.2970365
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   Teyton C., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P289, DOI 10.1109/WCRE.2012.38
   Teyton C, 2014, J SOFTW-EVOL PROC, V26, P1030, DOI 10.1002/smr.1660
   Teyton C, 2013, WORK CONF REVERSE EN, P192, DOI 10.1109/WCRE.2013.6671294
   Nguyen TV, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P749, DOI 10.1145/2889160.2892658
   Thung F, 2013, IEEE INT CONF AUTOM, P290, DOI 10.1109/ASE.2013.6693088
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Nguyen TD, 2017, PROC INT CONF SOFTW, P438, DOI 10.1109/ICSE.2017.47
   Nguyen TD, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P756, DOI 10.1145/2889160.2892661
   Turney PD, 2006, COMPUT LINGUIST, V32, P379, DOI 10.1162/coli.2006.32.3.379
   Vasilescu B, 2014, EMPIR SOFTW ENG, V19, P955, DOI 10.1007/s10664-013-9244-1
   Wang SW, 2014, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2014.51
   Wang YK, 2013, IEEE INT SYMP SIGNAL, P287, DOI 10.1109/ISSPIT.2013.6781895
   Webb Geoffrey I., 2006, P 12 ACM SIGKDD INT, P434, DOI DOI 10.1145/1150402.1150451
   Wu Y, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.134
   Xu BW, 2016, IEEE INT CONF AUTOM, P51, DOI 10.1145/2970276.2970357
   Xu C, 2014, PROC INT CONF DATA, P1210, DOI 10.1109/ICDE.2014.6816743
   Xu DML, 2005, JUNGLOID MINING HELP
   Yang G, 2018, ADV MATER, V30, DOI 10.1002/adma.201706023
   Ye Deheng., 2016, Proceedings of the 31st Annual ACM Symposium on Applied Computing, P1378
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
   Zhou GY, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P250
NR 57
TC 19
Z9 19
U1 1
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2019
VL 24
IS 3
BP 1155
EP 1194
DI 10.1007/s10664-018-9657-y
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ID9YT
UT WOS:000472043800004
DA 2024-07-18
ER

PT J
AU Spadini, D
   Aniche, M
   Bruntink, M
   Bacchelli, A
AF Spadini, Davide
   Aniche, Mauricio
   Bruntink, Magiel
   Bacchelli, Alberto
TI Mock objects for testing java systems: Why and how developers use them,
   and how they evolve
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Mocking practices; Mockito; Empirical software
   engineering
AB When testing software artifacts that have several dependencies, one has the possibility of either instantiating these dependencies or using mock objects to simulate the dependencies' expected behavior. Even though recent quantitative studies showed that mock objects are widely used both in open source and proprietary projects, scientific knowledge is still lacking on how and why practitioners use mocks. An empirical understanding of the situations where developers have (and have not) been applying mocks, as well as the impact of such decisions in terms of coupling and software evolution can be used to help practitioners adapt and improve their future usage. To this aim, we study the usage of mock objects in three OSS projects and one industrial system. More specifically, we manually analyze more than 2,000 mock usages. We then discuss our findings with developers from these systems, and identify practices, rationales, and challenges. These results are supported by a structured survey with more than 100 professionals. Finally, we manually analyze how the usage of mock objects in test code evolve over time as well as the impact of their usage on the coupling between test and production code. Our study reveals that the usage of mocks is highly dependent on the responsibility and the architectural concern of the class. Developers report to frequently mock dependencies that make testing difficult (e.g., infrastructure-related dependencies) and to not mock classes that encapsulate domain concepts/rules of the system. Among the key challenges, developers report that maintaining the behavior of the mock compatible with the behavior of original class is hard and that mocking increases the coupling between the test and the production code. Their perceptions are confirmed by our data, as we observed that mocks mostly exist since the very first version of the test class, and that they tend to stay there for its whole lifetime, and that changes in production code often force the test code to also change.
C1 [Spadini, Davide; Aniche, Mauricio] Delft Univ Technol, Delft, Netherlands.
   [Spadini, Davide] Software Improvement Grp, Amsterdam, Netherlands.
   [Bruntink, Magiel] Software Improvement Grp, Res, Amsterdam, Netherlands.
   [Bacchelli, Alberto] Univ Zurich, Fac Business Econ & Informat, Dept Informat, Empir Software Engn, Zurich, Switzerland.
C3 Delft University of Technology; University of Zurich
RP Spadini, D (corresponding author), Delft Univ Technol, Delft, Netherlands.; Spadini, D (corresponding author), Software Improvement Grp, Amsterdam, Netherlands.
EM D.Spadini@tudelft.nl; M.F.Aniche@tudelft.nl; m.bruntink@sig.eu;
   bacchelli@ifi.uzh.ch
RI Bacchelli, Alberto/ABG-5379-2020
OI Bacchelli, Alberto/0000-0003-0193-6823
FU European Union's H2020 programme under the Marie Sklodowska-Curie grant
   [642954]; Swiss National Science Foundation through the SNF
   [PP00P2_170529]; Marie Curie Actions (MSCA) [642954] Funding Source:
   Marie Curie Actions (MSCA)
FX This project has received funding from the European Union's H2020
   programme under the Marie Sklodowska-Curie grant agreement No 642954. A.
   Bacchelli gratefully acknowledge the support of the Swiss National
   Science Foundation through the SNF Project No. PP00P2_170529.
CR Aniche M, 2016, IEEE INT WORK C SO, P41, DOI 10.1109/SCAM.2016.19
   [Anonymous], 2009, Growing Object-Oriented Software, Guided by Tests
   [Anonymous], 2010, IEEE INT C SOFTW MAI
   [Anonymous], 2014, P ACM IEEE INT C AUT, DOI DOI 10.1145/2642937.2642986
   [Anonymous], 2012, CUCUMBER BOOK BEHAV
   [Anonymous], 2012, Develop Innovative Ideas, and Design Effective Solutions
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   Arcuri A, 2017, IEEE INT CONF SOFTW, P126, DOI 10.1109/ICST.2017.19
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Biegel B., 2011, Comparison of similarity metrics for refactoring detection, P53
   Bruntink M, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P136
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Evans E., 2011, DOMAIN DRIVEN DESIGN
   Fowler M, 2014, IS TDD DEAD
   Fowler M., 2002, Patterns of Enterprise Application Architecture
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Freeman S., 2004, Companion to the 19th annual ACM SIGPLAN Conference on Object-oriented Programming Systems, Languages, and Applications, OOPSLA '04, P236
   Greiler M, 2013, IEEE WORK CONF MIN S, P387, DOI 10.1109/MSR.2013.6624053
   Greiler M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P322, DOI 10.1109/ICST.2013.45
   Hamill Paul, 2004, Unit Test Frameworks: Tools for High-quality Software Development
   Henderson Fergus, 2017, ARXIV170201715
   Hess M., 2004, ROBUST CONFIDENCE IN
   Hunt Andy., 2004, PRAGMATIC UNIT TESTI
   Kaczanowski T., 2012, Practical Unit Testing with TestNG and Mockito
   Karlesky M, 2007, EMB SYST C SIL VALL
   Kim SS, 2016, Mocking embedded hardware for software validation
   Langr J., 2015, PRAGMATIC UNIT TESTI
   Li BY, 2016, IEEE INT CONF SOFTW, P341, DOI 10.1109/ICST.2016.30
   Mackinnon T, 2001, EXTREME PROGRAMMING
   Marri MR, 2009, 2009 ICSE WORKSHOP ON AUTOMATION OF SOFTWARE TEST, P149, DOI 10.1109/IWAST.2009.5069054
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Mostafa S, 2014, INT CONF QUAL SOFTW, P127, DOI 10.1109/QSIC.2014.19
   NEDERHOF AJ, 1985, EUR J SOC PSYCHOL, V15, P263, DOI 10.1002/ejsp.2420150303
   Osherove R, 2009, ART UNIT TESTING EXA
   Palomba F, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P5, DOI [10.1145/2897010.2897016, 10.1109/SBST.2016.010]
   Pereira F, 2014, MOCKISTS ARE DEAD LO
   Razali N. M., 2011, J. Stat. Model. and Anal., V2, P21, DOI DOI 10.1515/BILE-2015-0008
   Rugg G, 2005, EXPERT SYST, V22, P94, DOI 10.1111/j.1468-0394.2005.00300.x
   Runeson P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.91
   Samimi Hesam, 2013, DECLARATIVE MOCKING, P246
   Spadini D, 2017, IEEE WORK CONF MIN S, P402, DOI 10.1109/MSR.2017.61
   Spencer Donna., 2004, CARD SORTING DEFINIT
   Taneja K., 2010, ASE, P289, DOI DOI 10.1145/1858996.1859053
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Vahabzadeh A, 2015, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSM.2015.7332456
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Vonken F., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P29, DOI 10.1109/WCRE.2012.13
   Weyuker EJ, 1998, IEEE SOFTWARE, V15, P54, DOI 10.1109/52.714817
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Xie T., 2010, PROC FSESDP WORKSHOP, P415
   Zaidman Andy, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P220, DOI 10.1109/ICST.2008.47
NR 54
TC 27
Z9 27
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2019
VL 24
IS 3
BP 1461
EP 1498
DI 10.1007/s10664-018-9663-0
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ID9YT
UT WOS:000472043800013
OA hybrid, Green Published, Green Accepted
DA 2024-07-18
ER

PT J
AU Hofmeister, JC
   Siegmund, J
   Holt, DV
AF Hofmeister, Johannes C.
   Siegmund, Janet
   Holt, Daniel V.
TI Shorter identifier names take longer to comprehend
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Identifier names; Program comprehension; Professional C# developers;
   Psychology; Defect detection; Software quality
ID WORD; NUMBER
AB Developers spend the majority of their time reading code, a process in which identifier names play a key role. Although many identifier naming styles exist, they often lack an empirical basis and it is not clear whether short or long identifier names facilitate comprehension. In this paper, we investigate the effect of different identifier naming styles (single letters, abbreviations, and words) on program comprehension. We conducted an experimental study with 72 professional C# developers who had to locate defects in source code snippets. We used a within-subjects design, such that each developer worked with all three versions of identifier naming styles, and we measured the time it took them to find a defect. We found that word identifiers led to a 19% increase in speed to find defects compared to meaningless single letters and abbreviations, but we did not find a difference between letters and abbreviations. The results of our study suggest that code is more difficult to comprehend when it contains only letters and abbreviations as identifier names. Words as identifier names facilitate program comprehension and may help to save costs and improve software quality.
C1 [Hofmeister, Johannes C.; Siegmund, Janet] Univ Passau, Innstr 33, D-94032 Passau, Germany.
   [Holt, Daniel V.] Heidelberg Univ, Theoret & Cognit Psychol, Dept Psychol, Hauptstr 47-51, D-69117 Heidelberg, Germany.
C3 University of Passau; Ruprecht Karls University Heidelberg
RP Hofmeister, JC (corresponding author), Univ Passau, Innstr 33, D-94032 Passau, Germany.
EM johannes.hofmeister@uni-passau.de; siegmunj@fim.uni-passau.de;
   daniel.holt@psychologie.uni-heidelberg.de
FU DFG [SI 2045/2-1]; Bavarian State Ministry of Education, Science and the
   Arts
FX This work has been supported by the DFG grant SI 2045/2-1. Janet
   Siegmund's work is further funded by the Bavarian State Ministry of
   Education, Science and the Arts in the framework of the Centre
   Digitisation. Bavaria (ZD.B).
CR Anquetil N., 1998, C CTR ADV STUD COLL, P1
   BADDELEY AD, 1975, J VERB LEARN VERB BE, V14, P575, DOI 10.1016/S0022-5371(75)80045-4
   Bakeman R, 2005, BEHAV RES METHODS, V37, P379, DOI 10.3758/BF03192707
   BALOTA DA, 1985, J MEM LANG, V24, P89, DOI 10.1016/0749-596X(85)90017-8
   Binkley D, 2009, INT C PROGRAM COMPRE, P158, DOI 10.1109/ICPC.2009.5090039
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Ceccato M, 2014, EMPIR SOFTW ENG, V19, P1040, DOI 10.1007/s10664-013-9248-x
   Cohen J., 1988, STAT POWER ANAL BEHA
   COLLINS AM, 1975, PSYCHOL REV, V82, P407, DOI 10.1037/0033-295X.82.6.407
   Coltheart M, 2001, PSYCHOL REV, V108, P204, DOI 10.1037//0033-295X.108.1.204
   Cowan N, 2001, BEHAV BRAIN SCI, V24, P87, DOI 10.1017/S0140525X01003922
   Deissenboeck F, 2006, SOFTWARE QUAL J, V14, P261, DOI 10.1007/s11219-006-9219-1
   Hofmeister J, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P217, DOI 10.1109/SANER.2017.7884623
   Jansen AR, 2003, BEHAV RES METH INS C, V35, P57, DOI 10.3758/BF03195497
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Lawrie D, 2007, INNOV SYST SOFTW ENG, V3, P303, DOI 10.1007/s11334-007-0031-2
   Leonhart R., 2009, LEHRBUCH STAT EINSTI, V2
   MILLER GA, 1956, PSYCHOL REV, V63, P81, DOI 10.1037/h0043158
   MSDN, 2016, CLASS NAM GUID
   Posnett D, 2011, SIMPLER MODEL SOFTWA
   RATCLIFF R, 1993, PSYCHOL BULL, V114, P510, DOI 10.1037/0033-2909.114.3.510
   Scalabrino S, 2016, 2016 IEEE 24 INT C P, P1
   Sharif Bonita, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P196, DOI 10.1109/ICPC.2010.41
   Sneed HM, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P169, DOI 10.1109/WCRE.1996.558901
   SOLOWAY E, 1984, IEEE T SOFTWARE ENG, V10, P595, DOI 10.1109/TSE.1984.5010283
   Tichy WF, 1998, SHOULD COMPUTER SCI
   Weekes BS, 1997, Q J EXP PSYCHOL-A, V50, P439, DOI 10.1080/027249897392170
   Whelan R, 2008, PSYCHOL REC, V58, P475, DOI 10.1007/BF03395630
NR 29
TC 25
Z9 25
U1 1
U2 19
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2019
VL 24
IS 1
BP 417
EP 443
DI 10.1007/s10664-018-9621-x
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA HL3RV
UT WOS:000458634400014
DA 2024-07-18
ER

PT J
AU Ayala, C
   Nguyen-Duc, A
   Franch, X
   Höst, M
   Conradi, R
   Cruzes, D
   Babar, MA
AF Ayala, Claudia
   Anh Nguyen-Duc
   Franch, Xavier
   Host, Martin
   Conradi, Reidar
   Cruzes, Daniela
   Babar, Muhammad Ali
TI System requirements-OSS components: matching and mismatch resolution
   practices - an empirical study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Open Source software; OSS; Requirements engineering; Empirical study;
   Qualitative study; Survey
ID OPEN SOURCE SOFTWARE; QUALITY REQUIREMENTS; COTS; ADOPTION
AB Developing systems by integrating Open Source Software (OSS) is increasingly gaining importance in the software industry. Although the literature claims that this approach highly impacts Requirements Engineering (RE) practices, there is a lack of empirical evidence to demonstrate this statement. To explore and understand problems and challenges of current system requirement-OSS component matching and mismatches resolution practices in software development projects that integrate one or more OSS components into their software products. Semi-structured in-depth interviews with 25 respondents that have performed RE activities in software development projects that integrate OSS components in 25 different software development companies in Spain, Norway, Sweden, and Denmark. The study uncovers 15 observations regarding system requirements-OSS components matching and mismatch resolution practices used in industrial projects that integrate OSS components. The assessed projects focused mainly on pre-release stages of software applications that integrate OSS components in an opportunistic way. The results also provide details of a set of previously unexplored scenarios when solving system requirement-OSS component mismatches; and clarify some challenges and related problems. For instance, although licensing issues and the potential changes in OSS components by their corresponding communities and/or changes in system requirements have been greatly discussed in the RE literature as problems for OSS component integration, they did not appear to be relevant in our assessed projects. Instead, practitioners highlighted the problem of getting suitable OSS component documentation/information.
C1 [Ayala, Claudia; Franch, Xavier] Tech Univ Catalunya UPC, Campus Nord J Girona 1-3,Omega Bldg 117, Barcelona 08034, Spain.
   [Anh Nguyen-Duc; Conradi, Reidar] Norwegian Univ Sci & Technol NTNU, Trondheim, Norway.
   [Host, Martin] Lund Univ, Lund, Sweden.
   [Cruzes, Daniela] SINTEF ICT, Trondheim, Norway.
   [Babar, Muhammad Ali] Univ Adelaide, Adelaide, SA, Australia.
C3 Universitat Politecnica de Catalunya; Norwegian University of Science &
   Technology (NTNU); Lund University; SINTEF; University of Adelaide
RP Ayala, C (corresponding author), Tech Univ Catalunya UPC, Campus Nord J Girona 1-3,Omega Bldg 117, Barcelona 08034, Spain.
EM cayala@essi.upc.edu
RI Höst, Martin/KDN-4323-2024; Franch, Xavier/A-8588-2008
OI Höst, Martin/0000-0002-9360-8693; 
FU Spanish project [TIN2016-79269-R]
FX We would like to thank all of the people who participated in piloting an
   early version of the interview guide and the interview participants who
   took time from their workdays to participate in our interviews. This
   work has been partially supported by the Spanish project ref.
   TIN2016-79269-R.
CR Alspaugh TA, 2013, S VIS LANG HUM CEN C, P165, DOI 10.1109/RE.2013.6636716
   Alves C, 2003, INT J SOFTW ENG KNOW, V13, P473, DOI 10.1142/S0218194003001408
   Ameller D, 2013, IEEE SOFTWARE, V30, P61, DOI 10.1109/MS.2012.176
   Aminat S, 2008, COMMUN IBIMA, V2, P122
   [Anonymous], 2005, 19759 ISOIEC TR
   [Anonymous], 2017, TOOL FURTH INF
   Aversano L, 2013, INFORM SOFTWARE TECH, V55, P1260, DOI 10.1016/j.infsof.2013.01.007
   Ayala C, 2011, J SYST SOFTWARE, V84, P620, DOI 10.1016/j.jss.2010.10.019
   Badampudi D, 2016, J SYST SOFTWARE, V121, P105, DOI 10.1016/j.jss.2016.07.027
   Boehm B, 2000, COMPUTER, V33, P99, DOI 10.1109/2.869384
   Boehm B, 2008, IEEE SOFTWARE, V25, P56, DOI 10.1109/MS.2008.145
   Bonaccorsi A., 2006, Knowledge Technology & Policy, V18, P40, DOI 10.1007/s12130-006-1003-9
   Brownsword L, 2000, IEEE SOFTWARE, V17, P48, DOI 10.1109/52.854068
   Capra E, 2008, IEEE T SOFTWARE ENG, V34, P765, DOI 10.1109/TSE.2008.68
   Carvallo JP, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P323
   Ciolkowski M, 2008, LECT NOTES COMPUT SC, V5338, P316
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Cruzes DS, 2015, EMPIR SOFTW ENG, V20, P1634, DOI 10.1007/s10664-014-9326-8
   Cruzes DS, 2011, INFORM SOFTWARE TECH, V53, P440, DOI 10.1016/j.infsof.2011.01.004
   Dagdeviren H, 2005, ITI, P644
   Daneva M, 2015, IEEE SOFTWARE, V32, P84, DOI 10.1109/MS.2014.134
   Daneva M, 2014, J SYST SOFTWARE, V95, P1, DOI 10.1016/j.jss.2014.06.035
   del Bianco V, 2009, INT FED INFO PROC, V299, P199
   Dillon W.R., 1984, MULTIVARIATE ANAL ME
   Driver M., 2013, TECHNICAL REPORT
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   Dybå T, 2013, IEEE SOFTWARE, V30, P81, DOI 10.1109/MS.2013.4
   ERDOGMUS H, 2010, IEEE SOFTWARE, V27, P2, DOI DOI 10.1109/MS.2010.75
   Fernández DM, 2012, INFORM SOFTWARE TECH, V54, P162, DOI 10.1016/j.infsof.2011.09.001
   Franch X, 2004, LECT NOTES COMPUT SC, V2959, P11
   Golden B., 2004, SUCCEEDING OPEN SOUR
   Hand DJ, 1996, J ROY STAT SOC A STA, V159, P445, DOI 10.2307/2983326
   Hanson S., 2010, Structure and Vein Isotopic Signatures of a Cambro-Ordovician 360m Core from Saratoga Sprigns Region, New York State: Implications for Tectonics, Gas Exploration, and CO2 Sequestration, P1, DOI [10.1109/HICSS.2010.98, DOI 10.1109/HICSS.2010.98]
   Hauge O, 2010, INFORM SOFTWARE TECH, V52, P1133, DOI 10.1016/j.infsof.2010.05.008
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Hoving R, 2013, I C DIGIT ECOSYST TE, P13, DOI 10.1109/DEST.2013.6611322
   *INT ORG STAND, 2001, 9126 ISO
   Jadhav AS, 2009, INFORM SOFTWARE TECH, V51, P555, DOI 10.1016/j.infsof.2008.09.003
   Janson S, 2008, IEEE SOFTWARE, V25, P42, DOI 10.1109/MS.2008.155
   Jarke M, 2011, INFORM SYST, V36, P992, DOI 10.1016/j.is.2011.04.003
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kohl RJ, 2005, IEEE SOFTWARE, V22, P63, DOI 10.1109/MS.2005.104
   Kusumo DS, 2012, EASE, P233
   Land R, 2009, LECT NOTES COMPUT SC, V5791, P150
   Li JY, 2008, IEEE T SOFTWARE ENG, V34, P271, DOI 10.1109/TSE.2008.14
   Li JY, 2009, IEEE SOFTWARE, V26, P80, DOI 10.1109/MS.2009.33
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY
   López L, 2015, DATA KNOWL ENG, V99, P17, DOI 10.1016/j.datak.2015.06.007
   Mahmood S, 2007, IET SOFTW, V1, P57, DOI 10.1049/iet-sen:20060045
   Maiden NA, 1998, IEEE SOFTWARE, V15, P46, DOI 10.1109/52.663784
   Majchrowski M, 2008, EUROSPI, P176
   Merilinna J, 2006, EUROMICRO CONF PROC, P170, DOI 10.1109/EUROMICRO.2006.61
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mohamed A, 2007, ECBS 2007: 14TH ANNUAL IEEE INTERNATIONAL CONFERENCE AND WORKSHOPS ON THE ENGINEERING OF COMPUTER-BASED SYSTEMS, PROCEEDINGS, P103
   Mohamed A, 2011, J SOFTW MAINT EVOL-R, V23, P145, DOI 10.1002/smr.493
   Morad S, 2005, SWSTE, P110
   Morisio Maurizio, 2006, 1CSR2006
   Ncube C, 2008, IEEE SOFTWARE, V25, P38, DOI 10.1109/MS.2008.153
   Nguyen AD, 2012, REFSQ, P77
   Noll J, 2011, ESEM, P30
   Noll J, 2008, INT FED INFO PROC, V275, P69
   Open Source, 2005, OPEN SOURCE
   OpenBRR, 2005, BUS READ RAT OP SOUR
   Paech B, 2006, RE, P252
   Perrone V, 2004, ICCBSS, P146
   Robson C., 2002, Real World Research, V2nd
   ROSS DT, 1977, IEEE T SOFTWARE ENG, V3, P6, DOI 10.1109/TSE.1977.229899
   Rubython A, 2014, INT REQUIR ENG CONF, P394, DOI 10.1109/RE.2014.6912290
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Scacchi W., 2006, Software Process Improvement and Practice, V11, P95, DOI 10.1002/spip.255
   Scacchi W., 2002, IEE Proceedings-Software, V149, P24, DOI 10.1049/ip-sen:20020202
   Schuwer R, 2015, IEEE SOFTWARE, V32, P81, DOI 10.1109/MS.2015.111
   Semeteys R, 2006, TECHNICAL REPORT
   Sen R, 2012, DECIS SUPPORT SYST, V52, P364, DOI 10.1016/j.dss.2011.09.003
   Sen R, 2011, DECIS SUPPORT SYST, V52, P199, DOI 10.1016/j.dss.2011.07.004
   Spinellis D, 2012, J SYST SOFTWARE, V85, P666, DOI 10.1016/j.jss.2011.09.037
   Stewart KJ, 2006, INFORM SYST RES, V17, P126, DOI 10.1287/isre.1060.0082
   Stol K., 2010, FLOSS-3, P17, DOI [10.1145/1833272.1833276, DOI 10.1145/1833272.1833276]
   Stol KJ, 2015, IEEE SOFTWARE, V32, P60, DOI 10.1109/MS.2014.77
   Svensson RB, 2012, IEEE T SOFTWARE ENG, V38, P923, DOI 10.1109/TSE.2011.47
   Torchiano M, 2004, IEEE SOFTWARE, V21, P88, DOI 10.1109/MS.2004.1270770
   Vale T, 2016, J SYST SOFTWARE, V111, P128, DOI 10.1016/j.jss.2015.09.019
   Ven K, 2008, IEEE SOFTWARE, V25, P54, DOI 10.1109/MS.2008.73
   Weibing Chen, 2008, Software Process: Improvement and Practice, V13, P89, DOI 10.1002/spip.361
   Wesselius J, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.79
   Yang Y, 2005, IEEE SOFTWARE, V22, P54, DOI 10.1109/MS.2005.112
   Yin R., 1994, CASE STUDY RES DESIG
NR 87
TC 11
Z9 11
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2018
VL 23
IS 6
BP 3073
EP 3128
DI 10.1007/s10664-017-9594-1
PG 56
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC1WE
UT WOS:000451593200001
DA 2024-07-18
ER

PT J
AU Ferrari, A
   Gori, G
   Rosadini, B
   Trotta, I
   Bacherini, S
   Fantechi, A
   Gnesi, S
AF Ferrari, Alessio
   Gori, Gloria
   Rosadini, Benedetta
   Trotta, Iacopo
   Bacherini, Stefano
   Fantechi, Alessandro
   Gnesi, Stefania
TI Detecting requirements defects with NLP patterns: an industrial
   experience in the railway domain
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Natural language processing; Requirements engineering; Natural language
   requirements; Requirements analysis; Defect detection; Ambiguity;
   Precision; Recall; Industrial case study; Railway
ID LANGUAGE; INSPECTIONS; PERSPECTIVE; TOOLS; STATE
AB In the railway safety-critical domain requirements documents have to abide to strict quality criteria. Rule-based natural language processing (NLP) techniques have been developed to automatically identify quality defects in natural language requirements. However, the literature is lacking empirical studies on the application of these techniques in industrial settings. Our goal is to investigate to which extent NLP can be practically applied to detect defects in the requirements documents of a railway signalling manufacturer. To address this goal, we first identified a set of typical defects classes, and, for each class, an engineer of the company implemented a set of defect-detection patterns by means of the GATE tool for text processing. After a preliminary analysis, we applied the patterns to a large set of 1866 requirements previously annotated for defects. The output of the patterns was further inspected by two domain experts to check the false positive cases. Additional discard-patterns were defined to automatically remove these cases. Finally, SREE, a tool that searches for typically ambiguous terms, was applied to the requirements. The experiments show that SREE and our patterns may play complementary roles in the detection of requirements defects. This is one of the first works in which defect detection NLP techniques are applied on a very large set of industrial requirements annotated by domain experts. We contribute with a comparison between traditional manual techniques used in industry for requirements analysis, and analysis performed with NLP. Our experience shows that several discrepancies can be observed between the two approaches. The analysis of the discrepancies offers hints to improve the capabilities of NLP techniques with company specific solutions, and suggests that also company practices need to be modified to effectively exploit NLP tools.
C1 [Ferrari, Alessio; Gnesi, Stefania] CNR, ISTI, Via G Moruzzi 1, I-56124 Pisa, Italy.
   [Gori, Gloria; Fantechi, Alessandro] Univ Florence, Dipartimento Ingn Informaz, Via Santa Marta 3, I-50139 Florence, Italy.
   [Rosadini, Benedetta; Trotta, Iacopo; Bacherini, Stefano] Alstom Signalling Solut, Via Pietro Fanfani 21, I-50127 Florence, Italy.
C3 Consiglio Nazionale delle Ricerche (CNR); Istituto di Scienza e
   Tecnologie dell'Informazione "Alessandro Faedo" (ISTI-CNR); University
   of Florence
RP Ferrari, A (corresponding author), CNR, ISTI, Via G Moruzzi 1, I-56124 Pisa, Italy.
EM alessio.ferrari@isti.cnr.it; gloria.gori@unifi.it;
   benedetta.rosadini@alstomgroup.com; iacopo.trotta@alstomgroup.com;
   stefano.bacherini@alstomgroup.com; alessandro.fantechi@unifi.it;
   stefania.gnesi@isti.cnr.it
RI Ferrari, Alessio/J-1155-2019
OI Ferrari, Alessio/0000-0002-0636-5663; GORI, GLORIA/0000-0002-8482-2612
FU Shift2Rail Joint Undertaking under the European Union [777561]; ASTRail
   project; H2020 Societal Challenges Programme [777561] Funding Source:
   H2020 Societal Challenges Programme
FX The authors would like to thank the anonymous reviewers for their
   precious recommendations, which contributed to make the paper clearer
   and more complete. We are also extremely grateful to Daniel M. Berry,
   for providing the dictionaries of SREE, and to Daniel Mendez Fernandez
   for his valuable suggestions on reporting case studies in software
   engineering. This work has been partially funded by the ASTRail project.
   This project received funding from the Shift2Rail Joint Undertaking
   under the European Union's Horizon 2020 research and innovation
   programme under grant agreement No 777561. The content of this paper
   reflects only the authors' view and the Shift2Rail Joint Undertaking is
   not responsible for any use that may be made of the included
   information.
CR Alvarez SA, 2002, BCCS0201 BOST COLL
   Ambriola V., 2006, Automated Software Engineering, V13, P107, DOI 10.1007/s10515-006-5468-2
   Anda B., 2002, SEKE 02, P127
   [Anonymous], 1998, IEEE Standard 1233, P1
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2012, DO178C EUROCAE RTCA
   Arora C, 2015, IEEE T SOFTWARE ENG, V41, P944, DOI 10.1109/TSE.2015.2428709
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   Baskerville RL, 1996, J INFORM TECHNOL, V11, P235, DOI 10.1080/026839696345289
   Berry Daniel, 2012, Requirements Engineering: Foundation for Software Quality. Proceedings 18th International Working Conference, REFSQ 2012, P211, DOI 10.1007/978-3-642-28714-5_18
   Berry D. M., 2003, From contract drafting to software specification: Linguistic sources of ambiguity
   Berry DM, 2017, INT REQUIR ENG CONF, P570, DOI 10.1109/RE.2017.64
   Berry DM, 2005, IEEE SOFTWARE, V22, P55, DOI 10.1109/MS.2005.22
   Bonin F., 2010, P 7 INT C LANG RES E, P19
   Casamayor A, 2012, KNOWL-BASED SYST, V30, P78, DOI 10.1016/j.knosys.2011.12.009
   CENELEC, 2011, 501282011 CENELEC
   Chantree F, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P59
   Collinsthompson K, 2014, ITL-International Journal of Applied Linguistics, V165, P97, DOI DOI 10.1075/ITL.165.2.01COL
   Cunningham H, 2002, COMPUT HUMANITIES, V36, P223, DOI 10.1023/A:1014348124664
   Cutts M., 1996, The Plain English Guide
   Derczynski L, 2015, INFORM PROCESS MANAG, V51, P32, DOI 10.1016/j.ipm.2014.10.006
   Emenecker J., 2010, P 32 ACM IEEE INT C, V1, P155, DOI DOI 10.1145/1806799.1806825
   Fabbrini F., 2001, SEW 01, P97
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Falessi D, 2013, IEEE T SOFTWARE ENG, V39, P18, DOI 10.1109/TSE.2011.122
   Femmer H, 2014, P 8 ACM IEEE INT S E
   Femmer H, 2017, J SYST SOFTWARE, V123, P190, DOI 10.1016/j.jss.2016.02.047
   Ferrari Alessio, 2014, Requirements Engineering: Foundation for Software Quality. 20th International Working Conference, REFSQ 2014. Proceedings: LNCS 8396, P23, DOI 10.1007/978-3-319-05843-6_3
   Ferrari A., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P191, DOI 10.1109/RE.2012.6345803
   Ferrari A, 2016, REQUIR ENG, V21, P333, DOI 10.1007/s00766-016-0249-3
   Ferrari Alessio, 2017, IEEE SOFTWARE
   Gacitua R., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P5, DOI 10.1109/RE.2010.12
   Gervasi V, 2005, ACM T SOFTW ENG METH, V14, P277, DOI 10.1145/1072997.1072999
   Ghaisas S, 2013, IEEE-ACM INT WKSP CO, P37, DOI 10.1109/CESI.2013.6618468
   Gleich B, 2010, LECT NOTES COMPUT SC, V6182, P218, DOI 10.1007/978-3-642-14192-8_20
   Gnesi S, 2005, COMPUT SYST SCI ENG, V20, P53
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Goth G, 2016, COMMUN ACM, V59, P13, DOI 10.1145/2874915
   ISO/IEC, 2011, ISO/IEC 25010:2011 Systems and software engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality models
   Kamsties E, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P245, DOI 10.1007/3-540-28244-0_11
   Kamsties E., 2001, P 1 WORKSH INSP SOFT, P68
   Kang N, 2011, J BIOMED INFORM, V44, P354, DOI 10.1016/j.jbi.2010.10.005
   Kassab M, 2014, INNOV SYST SOFTW ENG, V10, P235, DOI 10.1007/s11334-014-0232-4
   Kiyavitskaya N, 2008, REQUIR ENG, V13, P207, DOI 10.1007/s00766-008-0063-7
   Kof L., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P391, DOI 10.1109/RE.2010.53
   Kof L, 2009, LECT NOTES COMPUT SC, V5512, P197, DOI 10.1007/978-3-642-02050-6_17
   Kof L, 2008, INT REQUIR ENG CONF, P331, DOI 10.1109/RE.2008.12
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lian XL, 2016, INT REQUIR ENG CONF, P156, DOI 10.1109/RE.2016.50
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Manning CD, 2011, LECT NOTES COMPUT SC, V6608, P171, DOI 10.1007/978-3-642-19400-9_14
   Mavin A, 2016, INT REQUIR ENG CONF, P276, DOI 10.1109/RE.2016.38
   Mavin A, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P317, DOI 10.1109/RE.2009.9
   Mich L, 2004, REQUIR ENG, V9, P40, DOI 10.1007/s00766-003-0179-8
   Mich L., 1996, Natural Language Engineering, V2, P161, DOI 10.1017/S1351324996001337
   Pohl K., 2011, Requirements Engineering Fundamentals, V1st
   Quirchmayr T, 2017, LECT NOTES COMPUT SC, V10153, P255, DOI 10.1007/978-3-319-54045-0_19
   Robeer M, 2016, INT REQUIR ENG CONF, P196, DOI 10.1109/RE.2016.40
   Rosadini B, 2017, LECT NOTES COMPUT SC, V10153, P344, DOI 10.1007/978-3-319-54045-0_24
   Rosenberg L. H., 1998, 15 ANN PAC NW SOFTW
   Shull F, 2000, COMPUTER, V33, P73, DOI 10.1109/2.869376
   Sultanov H, 2013, S VIS LANG HUM CEN C, P52, DOI 10.1109/RE.2013.6636705
   Terzakis J, 2016, INT REQUIR ENG CONF, P323, DOI 10.1109/RE.2016.9
   Tjong S. F., 2013, The design of SREE-a prototype potential ambiguity finder for requirements specifications and lessons learned, V7830, P80, DOI DOI 10.1007/978-3-642-37422-7_6
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Wilmink M, 2017, LECT NOTES COMPUT SC, V10153, P327, DOI 10.1007/978-3-319-54045-0_23
   Wilson WM, 1997, PROC INT CONF SOFTW, P161, DOI 10.1145/253228.253258
   Yang H, 2011, REQUIR ENG, V16, P163, DOI 10.1007/s00766-011-0119-y
   Yin D.R. K., 2017, Case Study Research and Applications: Design and Methods
   Yue T, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699697
   Zhang HH, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P363, DOI 10.1145/2976767.2976784
   Zowghi D, 2001, APSEC 2001: EIGHTH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P133, DOI 10.1109/APSEC.2001.991469
NR 72
TC 35
Z9 39
U1 0
U2 24
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2018
VL 23
IS 6
BP 3684
EP 3733
DI 10.1007/s10664-018-9596-7
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC1WE
UT WOS:000451593200017
DA 2024-07-18
ER

PT J
AU Yu, Z
   Kraft, NA
   Menzies, T
AF Yu, Zhe
   Kraft, Nicholas A.
   Menzies, Tim
TI Finding better active learners for faster literature reviews
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Active learning; Systematic literature review; Software engineering;
   Primary study selection
ID SYSTEMATIC REVIEWS; IDENTIFICATION; CLASSIFICATION; WORKLOAD; TOOLS
AB Literature reviews can be time-consuming and tedious to complete. By cataloging and refactoring three state-of-the-art active learning techniques from evidence-based medicine and legal electronic discovery, this paper finds and implements FASTREAD, a faster technique for studying a large corpus of documents, combining and parametrizing the most efficient active learning algorithms. This paper assesses FASTREAD using datasets generated from existing SE literature reviews (Hall, Wahono, Radjenovi, Kitchenham et al.). Compared to manual methods, FASTREAD lets researchers find 95% relevant studies after reviewing an order of magnitude fewer papers. Compared to other state-of-the-art automatic methods, FASTREAD reviews 20-50% fewer studies while finding same number of relevant primary studies in a systematic literature review.
C1 [Yu, Zhe; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   [Kraft, Nicholas A.] ABB Corp Res, Raleigh, NC USA.
C3 North Carolina State University; ABB
RP Menzies, T (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM zyu9@ncsu.edu; nicholas.a.kraft@us.abb.com; tim.menzies@gmail.com
RI Yu, Zhe/AAD-9710-2019; Menzies, Tim/X-7680-2019
OI Yu, Zhe/0000-0002-6841-1725; Menzies, Tim/0000-0002-5040-3196
CR [Anonymous], 2012, Proceedings of the 2nd International Workshop on Evidential Assessment of software technologies
   [Anonymous], 2010, U WISCONSIN MADISON, V52, P11, DOI DOI 10.1016/J.MATLET.2010.11.072
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Borg M, 2016, J SOFTW-EVOL PROC, V28, P427, DOI 10.1002/smr.1784
   Carver Jeffrey C., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P203, DOI 10.1109/ESEM.2013.28
   Cohen Aaron M, 2006, AMIA Annu Symp Proc, P161
   Cohen Aaron M, 2010, AMIA Annu Symp Proc, V2010, P121
   Cohen AM, 2011, J AM MED INFORM ASSN, V18, P104, DOI 10.1136/jamia.2010.008177
   Cohen AM, 2006, J AM MED INFORM ASSN, V13, P206, DOI 10.1197/jamia.M1929
   Cormack GV, 2014, SIGIR'14: PROCEEDINGS OF THE 37TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P153, DOI 10.1145/2600428.2609601
   Cormack Gordon V, 2015, ARXIV150406868
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Felizardo K., 2014, International Conference on Evaluation and Assessment in Software Engineering (EASE), P1
   Felizardo K.R., 2010, Proc. of EASE, V10, P1
   Felizardo KR, 2012, INFORM SOFTWARE TECH, V54, P1079, DOI 10.1016/j.infsof.2012.04.003
   Felizardo KatiaRomero., 2016, Proceedings of the 10th ACM/IEEE International Symposium on Empirical Software Engineering and Measurement, P53
   Fernández-Sáez AM, 2010, ICSOFT 2010: PROCEEDINGS OF THE FIFTH INTERNATIONAL CONFERENCE ON SOFTWARE AND DATA TECHNOLOGIES, VOL 2, P157
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Adeva JJG, 2014, EXPERT SYST APPL, V41, P1498, DOI 10.1016/j.eswa.2013.08.047
   Grossman M.R., 2013, Federal Courts Law Review, V7, P1
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hassler E, 2016, INFORM SOFTWARE TECH, V70, P122, DOI 10.1016/j.infsof.2015.10.011
   Hassler Edgar., 2014, 18th International Conference on Evaluation Assessment in Software Engineering, P31
   He Zhang, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P56, DOI 10.1049/ic.2011.0007
   Hernandes E., 2012, CLEI ELECT J, V15, P3, DOI DOI 10.19153/CLEIEJ.15.1.2
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Joachims T., 2006, P 12 ACM SIGKDD INT, P217, DOI [10.1145/1150402.1150429, DOI 10.1145/1150402.1150429]
   Keele S, 2007, GUIDELINES PERFORMIN
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   Kitchenham B, 2013, INFORM SOFTWARE TECH, V55, P2049, DOI 10.1016/j.infsof.2013.07.010
   Kitchenham B, 2010, INFORM SOFTWARE TECH, V52, P792, DOI 10.1016/j.infsof.2010.03.006
   Krishna R, 2016, 2016 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON BIG DATA SOFTWARE ENGINEERING (BIGDSE 2016), P65, DOI [10.1109/BIGDSE.2016.019, 10.1145/2896825.2896836]
   Liu J, 2018, INFORM SYST FRONT, V20, P195, DOI 10.1007/s10796-016-9724-0
   Malheiros Viviane, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P245
   Marshall C., 2015, Proceedings of the 19th international conference on evaluation and assessment in software engineering, P26
   Marshall C., 2013, 2013 ACM IEEE INT S, P296, DOI [10.1109/ESEM.2013.32, DOI 10.1109/ESEM.2013.32]
   Marshall C, 2014, P 18 INT C EV ASS SO, P1, DOI DOI 10.1145/2601248.2601270
   Miwa M, 2014, J BIOMED INFORM, V51, P242, DOI 10.1016/j.jbi.2014.06.005
   Molleri J.S., 2015, EASE 15 P 19 INT C E, P1, DOI DOI 10.1145/2745802.2745825
   Morais Y, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P1024, DOI 10.1109/ITNG.2009.82
   Nguyen A.T., 2015, 3 AAAI C HUM COMP CR
   O'Mara-Eves A, 2015, SYST REV-LONDON, V4, DOI 10.1186/2046-4053-4-5
   Olorisade B. K, 2016, P 20 INT C EV ASS SO, P1, DOI [10.1145/2915970.2915982, DOI 10.1145/2915970.2915982]
   Olorisade BK, 2017, J BIOMED INFORM, V73, P1, DOI 10.1016/j.jbi.2017.07.010
   Ouzzani M, 2016, SYST REV-LONDON, V5, DOI 10.1186/s13643-016-0384-4
   Paynter R, 2016, HHSA290201200004C SR
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Radjenovic D, 2013, INFORM SOFTWARE TECH, V55, P1397, DOI 10.1016/j.infsof.2013.02.009
   Roegiest Adam, 2015, P TREC 2015
   Ros Rasmus, 2017, P 21 INT C EV ASS SO, P118, DOI [10.1145/3084226.3084243, DOI 10.1145/3084226.3084243]
   Settles B., 2012, Active Learning, V6, P1, DOI DOI 10.1007/978-3-031-01560-1
   Shemilt I, 2016, SYST REV-LONDON, V5, DOI 10.1186/s13643-016-0315-4
   Thomas J., 2010, EPPI-Reviewer 4.0: software for research synthesis
   Wahono R. S., 2015, Journal of Software Engineering, V1, P1
   Wallace B.C., 2012, P INT HLTH INF S, DOI DOI 10.1145/2110363.2110464
   Wallace B. C., 2013, KDD WORKSHOP DATA MI
   Wallace B. C., 2011, Proceedings of the SIAM International Conference on Data Mining, SDM '11, P176
   Wallace BC, 2013, J COMP EFFECT RES, V2, P273, DOI [10.2217/CER.13.17, 10.2217/cer.13.17]
   Wallace BC, 2010, BMC BIOINFORMATICS, V11, DOI 10.1186/1471-2105-11-55
   Wallace Byron C., 2010, P 16 ACM SIGKDD INT, P173, DOI DOI 10.1145/1835804.1835829
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Wohlin Claes., 2016, 20th International Conference on Evaluation and Assessment in Software Engineering, P15
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
NR 65
TC 30
Z9 35
U1 1
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2018
VL 23
IS 6
BP 3161
EP 3186
DI 10.1007/s10664-017-9587-0
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC1WE
UT WOS:000451593200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Chari, K
   Agrawal, M
AF Chari, Kaushal
   Agrawal, Manish
TI Impact of incorrect and new requirements on waterfall software project
   outcomes
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements defects; Incorrect requirements; New requirements
ID CYCLE TIME; QUALITY; UNCERTAINTY; SUCCESS; COORDINATION; PRODUCTIVITY;
   PERFORMANCE; MODEL; RISK
AB This research compares the impacts of change requests due to requirement defects on the outcomes of software development projects developed using the Waterfall methodology. The three types of requirement defects examined are incorrect requirements, incomplete requirements and new requirements. Outcomes are measured in terms of total effort expended and software defects injected during software development. While prior literature has examined ways to minimize requirement defects, limited insights are available on the impacts of requirement defects that remain after baseline requirements have been gathered. A sample of 49 software projects following the Waterfall methodology from a large highly mature (CMMI level 5) software development organization was used to statistically estimate the hypothesized relationships between the variables. Using the coordination perspective to develop our model, we find that resolution of change requests due to new requirements increases defects injected as well as effort. The resolution of change requests due to incorrect requirements increases the number of new requirements as well as the number of defects injected. Resolution of change requests due to incomplete requirements do not have measurable impacts on software project outcomes. Efforts to minimize the number of change requests necessary due to new requirements, can therefore be an important factor in improving software project outcomes.
C1 [Chari, Kaushal; Agrawal, Manish] Univ S Florida, Dept Informat Syst & Decis Sci, Muma Coll Business, Tampa, FL 33620 USA.
C3 State University System of Florida; University of South Florida
RP Agrawal, M (corresponding author), Univ S Florida, Dept Informat Syst & Decis Sci, Muma Coll Business, Tampa, FL 33620 USA.
EM kchari@usf.edu; magrawal@usf.edu
CR Agrawal M, 2007, IEEE T SOFTWARE ENG, V33, P145, DOI 10.1109/TSE.2007.29
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   ANDERSON TW, 1954, J AM STAT ASSOC, V49, P765, DOI 10.2307/2281537
   [Anonymous], 2012, MCKINSEY Q
   [Anonymous], REQUIREMENTS ENG
   [Anonymous], EMPIRICAL SOFTWARE E
   [Anonymous], INC SOFTW REQ ASS MA
   [Anonymous], 91261 ISOIEC
   [Anonymous], AC MAN M DENV CO AUG
   [Anonymous], SCRUM CMMI LEVEL 5 M
   Austin RD, 2001, INFORM SYST RES, V12, P195, DOI 10.1287/isre.12.2.195.9699
   Baik J, 2002, IEEE T SOFTWARE ENG, V28, P1009, DOI 10.1109/TSE.2002.1049401
   BANKER RD, 1989, IEEE T SOFTWARE ENG, V15, P1199, DOI 10.1109/TSE.1989.559768
   Belsley D. A., 2005, Regression Diagnostics: Identifying Influential Data and Sources of Collinearity
   Berry DM, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P447, DOI 10.1109/RE.2005.74
   Boehm B., 2000, Software Cost Estimation with COCOMO II, P502
   BOEHM BW, 1973, DATAMATION, V19, P48
   Brooks F., 1995, The Mythical Man-Month - Essays on Software Engineering, P322
   CAMPBELL DJ, 1988, ACAD MANAGE REV, V13, P40, DOI 10.2307/258353
   Congleton R.D., 2001, Eastern Economic Journal, V27, P391
   Crowston K, 1998, IBM SYST J, V37, P227, DOI 10.1147/sj.372.0227
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Damian D, 2006, IEEE T SOFTWARE ENG, V32, P433, DOI 10.1109/TSE.2006.61
   Diaz M, 1997, IEEE SOFTWARE, V14, P75, DOI 10.1109/52.605934
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   Fox C, 1997, COMMUN ACM, V40, P24, DOI 10.1145/255656.255678
   GAFFNEY JE, 1984, IEEE T SOFTWARE ENG, V10, P459, DOI 10.1109/TSE.1984.5010260
   Gopal A, 2003, MANAGE SCI, V49, P1671, DOI 10.1287/mnsc.49.12.1671.25120
   Gopal A., 2002, Communications of the ACM, V45, P193
   Gorschek T, 2008, INFORM SOFTWARE TECH, V50, P67, DOI 10.1016/j.infsof.2007.10.003
   Harter DE, 2000, MANAGE SCI, V46, P451, DOI 10.1287/mnsc.46.4.451.12056
   Hofmann HF, 2001, IEEE SOFTWARE, V18, P58, DOI 10.1109/MS.2001.936219
   Hsu JSC, 2012, DECISION SCI, V43, P929, DOI 10.1111/j.1540-5915.2012.00368.x
   Jalali S, 2012, J SOFTW-EVOL PROC, V24, P643, DOI 10.1002/smr.561
   Jeremiah J., 2015, Survey: Is agile the new norm?
   Kaindl H, 2010, REQUIR ENG, V15, P307, DOI 10.1007/s00766-009-0095-7
   Kamata MI, 2007, INT REQUIR ENG CONF, P69, DOI 10.1109/RE.2007.31
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Klier J, 2016, REQUIR ENG, P1
   Knauss E, 2009, LECT NOTES BUS INF P, V32, P28
   Krishnan MS, 1999, IEEE T SOFTWARE ENG, V25, P800, DOI 10.1109/32.824401
   Krishnan MS, 2000, MANAGE SCI, V46, P745, DOI 10.1287/mnsc.46.6.745.11941
   Krishnan V, 1997, MANAGE SCI, V43, P437, DOI 10.1287/mnsc.43.4.437
   Liaskos S, 2011, REQUIR ENG, V16, P227, DOI 10.1007/s00766-011-0129-9
   MALONE TW, 1994, ACM COMPUT SURV, V26, P87, DOI 10.1145/174666.174668
   Maruping LM, 2009, INFORM SYST RES, V20, P377, DOI 10.1287/isre.1090.0238
   MATSON JE, 1994, IEEE T SOFTWARE ENG, V20, P275, DOI 10.1109/32.277575
   Maxwell K, 1999, MANAGE SCI, V45, P787, DOI 10.1287/mnsc.45.6.787
   McGee S, 2012, REQUIR ENG, V17, P133, DOI 10.1007/s00766-012-0149-0
   MUKHOPADHYAY T, 1992, MIS QUART, V16, P155, DOI 10.2307/249573
   NIDUMOLU S, 1995, INFORM SYST RES, V6, P191, DOI 10.1287/isre.6.3.191
   Nidumolu S. R., 1996, Journal of Management Information Systems, V13, P77
   Nidumolu SR, 1996, INFORM MANAGE, V31, P135, DOI 10.1016/S0378-7206(96)01073-7
   Salay R, 2013, REQUIR ENG, V18, P107, DOI 10.1007/s00766-013-0170-y
   Schmidt R, 2001, J MANAGE INFORM SYST, V17, P5, DOI 10.1080/07421222.2001.11045662
   Smith RP, 1997, MANAGE SCI, V43, P276, DOI 10.1287/mnsc.43.3.276
   Sosa ME, 2014, PROD OPER MANAG, V23, P1312, DOI 10.1111/poms.12005
   Sosa ME, 2004, MANAGE SCI, V50, P1674, DOI 10.1287/mnsc.1040.0289
   Sutcliffe AG, 1998, IEEE T SOFTWARE ENG, V24, P1072, DOI 10.1109/32.738340
   Verner J, 2005, AUSTRALAS J INF SYST, V13, P225
   Walia GS, 2009, INFORM SOFTWARE TECH, V51, P1087, DOI 10.1016/j.infsof.2009.01.004
   WEISS DM, 1985, IEEE T SOFTWARE ENG, V11, P157, DOI 10.1109/TSE.1985.232190
   WHITE H, 1980, ECONOMETRICA, V48, P817, DOI 10.2307/1912934
NR 63
TC 17
Z9 22
U1 4
U2 27
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2018
VL 23
IS 1
BP 165
EP 185
DI 10.1007/s10664-017-9506-4
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FU9TG
UT WOS:000424199400004
DA 2024-07-18
ER

PT J
AU Xia, X
   Bao, LF
   Lo, D
   Kochhar, PS
   Hassan, AE
   Xing, ZC
AF Xia, Xin
   Bao, Lingfeng
   Lo, David
   Kochhar, Pavneet Singh
   Hassan, Ahmed E.
   Xing, Zhenchang
TI What do developers search for on the web?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Search task; Understanding; Empirical study; Survey
AB Developers commonly make use of a web search engine such as Google to locate online resources to improve their productivity. A better understanding of what developers search for could help us understand their behaviors and the problems that they meet during the software development process. Unfortunately, we have a limited understanding of what developers frequently search for and of the search tasks that they often find challenging. To address this gap, we collected search queries from 60 developers, surveyed 235 software engineers from more than 21 countries across five continents. In particular, we asked our survey participants to rate the frequency and difficulty of 34 search tasks which are grouped along the following seven dimensions: general search, debugging and bug fixing, programming, third party code reuse, tools, database, and testing. We find that searching for explanations for unknown terminologies, explanations for exceptions/error messages (e.g., HTTP 404), reusable code snippets, solutions to common programming bugs, and suitable third-party libraries/services are the most frequent search tasks that developers perform, while searching for solutions to performance bugs, solutions to multi-threading bugs, public datasets to test newly developed algorithms or systems, reusable code snippets, best industrial practices, database optimization solutions, solutions to security bugs, and solutions to software configuration bugs are the most difficult search tasks that developers consider. Our study sheds light as to why practitioners often perform some of these tasks and why they find some of them to be challenging. We also discuss the implications of our findings to future research in several research areas, e.g., code search engines, domain-specific search engines, and automated generation and refinement of search queries.
C1 [Xia, Xin; Bao, Lingfeng] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
   [Xia, Xin] Univ British Columbia, Dept Comp Sci, Vancouver, BC, Canada.
   [Lo, David; Kochhar, Pavneet Singh] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Xing, Zhenchang] Australian Natl Univ, Res Sch Comp Sci, Canberra, ACT, Australia.
C3 Zhejiang University; University of British Columbia; Singapore
   Management University; Queens University - Canada; Australian National
   University
RP Bao, LF (corresponding author), Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
EM xxia@zju.edu.cn; lingfengbao@zju.edu.cn; davidlo@smu.edu.sg;
   kochharps.2012@smu.edu.sg; ahmed@cs.queensu.ca;
   zhenchang.xing@anu.edu.au
RI Ali, Ahmed/HOF-4672-2023; Yu, ZH/KBC-6889-2024; bao,
   lingfeng/AEG-8299-2022; Xia, Xin/AAD-6217-2022; KHALIFA, AHMED
   khalifa/HKF-2246-2023; Hassan, Ahmed/AAB-7241-2019; Lo,
   David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; KHALIFA, AHMED
   khalifa/0000-0002-2918-7572; Lo, David/0000-0002-4367-7201
FU NSFC [61602403]; National Key Technology R&D Program of the Ministry of
   Science and Technology of China [2015BAH17F01]
FX The authors thank to all the developers who participated in this study.
   This research is supported by NSFC Program (No. 61602403) and National
   Key Technology R&D Program of the Ministry of Science and Technology of
   China under grant 2015BAH17F01.
CR Bajracharya SK, 2009, P 6 INT WORK C MIN S
   Bajracharya Sushil, 2006, COMPANION 21 ACM SIG, P681
   Bajracharya SK, 2012, EMPIR SOFTW ENG, V17, P424, DOI 10.1007/s10664-010-9144-6
   Bao LF, 2015, IEEE INT CONF AUTOM, P864, DOI 10.1109/ASE.2015.90
   Bao LF, 2015, IEEE INT CONF AUTOM, P277, DOI 10.1109/ASE.2015.43
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   Broder A., 2002, SIGIR Forum, V36, P3, DOI 10.1145/792550.792552
   Cutrell E, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P407
   Haiduc S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P842, DOI 10.1109/ICSE.2013.6606630
   Jansen BJ, 2000, INFORM PROCESS MANAG, V36, P207, DOI 10.1016/S0306-4573(99)00056-4
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Lee U., 2005, Proceedings of the 14th international conference on World Wide Web, WWW '05, P391, DOI DOI 10.1145/1060745.1060804
   Lemos O.A.L., 2007, P 22 IEEE ACM INT C, P525, DOI 10.1145/1321631.1321726
   Li HW, 2013, WORK CONF REVERSE EN, P142, DOI 10.1109/WCRE.2013.6671289
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   Philip Kavita., 2012, P ACM 2012 C COMPUTE, P1361
   Ponzanelli L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1295, DOI 10.1109/ICSE.2013.6606701
   Rahman MM, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P194, DOI 10.1109/CSMR-WCRE.2014.6747170
   Rose D.E., 2004, P 13 INT C WORLD WID, P13, DOI [DOI 10.1145/988672.988675, 10.1145/988672.988675]
   Sadowski C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P191, DOI 10.1145/2786805.2786855
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Sillito J., 2006, Proc. of the ACM SIGSOFT Int'l Symp. on Foundations of Software Engineering, P23, DOI DOI 10.1145/1181775.1181779
   Silverstein C., 1999, SIGIR Forum, V33, P6, DOI 10.1145/331403.331405
   Sim SE, 1998, PROG COMPREHEN, P180, DOI 10.1109/WPC.1998.693351
   Sim SE, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063243
   Spink A, 2002, COMPUTER, V35, P107, DOI 10.1109/2.989940
   Stolee KT, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2581377
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Wuensch KarlL., 2005, What is a Likert Scale? and How Do You Pronounce 'Likert?
NR 31
TC 102
Z9 115
U1 0
U2 26
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2017
VL 22
IS 6
BP 3149
EP 3185
DI 10.1007/s10664-017-9514-4
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FI3MB
UT WOS:000411865400012
OA Green Published
DA 2024-07-18
ER

PT J
AU Heeager, LT
   Rose, J
AF Heeager, Lise Tordrup
   Rose, Jeremy
TI Optimising agile development practices for the maintenance operation:
   nine heuristics
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software maintenance; Agile methods; SCRUM; Action research
ID SOFTWARE MAINTENANCE; METHODOLOGY; BENEFITS; ADOPTION; IMPACT; MODEL;
   RISK; UML
AB Agile methods are widely used and successful in many development situations and beginning to attract attention amongst the software maintenance community - both researchers and practitioners. However, it should not be assumed that implementing a well-known agile method for a maintenance department is therefore a trivial endeavour - the maintenance operation differs in some, important respects from development work. Classical accounts of software maintenance emphasise more traditional software engineering processes, whereas recent research accounts of agile maintenance efforts uncritically focus on benefits. In an action research project at Aveva in Denmark we assisted with the optimisation of SCRUM, tailoring the standard process to the immediate needs of the developers. We draw on both theoretical and empirical learning to formulate seven heuristics for maintenance practitioners wishing to go agile.
C1 [Heeager, Lise Tordrup] Aarhus Univ, Dept Business Adm, DK-8000 Aarhus C, Denmark.
   [Rose, Jeremy] Skovde Univ, Dept Informat, SE-54128 Skovde, Sweden.
   [Rose, Jeremy] Aalborg Univ, Dept Comp Sci, Aalborg, Denmark.
C3 Aarhus University; University of Skovde; Aalborg University
RP Heeager, LT (corresponding author), Aarhus Univ, Dept Business Adm, DK-8000 Aarhus C, Denmark.
EM lith@asb.dk; jeremy.rose@his.se
FU European Union through the CAIN project
FX The project was partially funded by the European Union through the CAIN
   project.
CR Abrahamsson P., 2002, Agile Software Development Methods: Review and Analysis
   Abrahamsson P, 2009, EUR J INFORM SYST, V18, P281, DOI 10.1057/ejis.2009.27
   [Anonymous], P 23 ANN INT C DES C
   [Anonymous], USING AGILE PRACTICE
   [Anonymous], 2004, XP Ser
   [Anonymous], 2005, Communications of the ACM
   [Anonymous], 61012 IEEE STAND COO
   [Anonymous], 42 HAW INT C SYST SC
   [Anonymous], INT C SOFTW MAINT
   [Anonymous], 2009, ACIS P
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   Baskerville R, 1998, EUR J INFORM SYST, V7, P90, DOI 10.1057/palgrave.ejis.3000298
   Beck K., 2011, MANIFESTO AGILE SOFT
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   Boehm B, 2003, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P32, DOI 10.1109/ADC.2003.1231450
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Buchmann I, 2011, EUR CON SFTWR MTNCE, P313, DOI 10.1109/CSMR.2011.45
   Charette RN, 1997, IEEE SOFTWARE, V14, P43, DOI 10.1109/52.589232
   Choudhari J., 2010, Proceedings of 2010 International Conference on Advances in Recent Technologies in Communication and Computing (ARTCom 2010), P401, DOI 10.1109/ARTCom.2010.52
   Choudhari J., 2014, ACM SIGSOFT Softw Eng Notes, V39, P1, DOI [10.1145/2557833.2557845, DOI 10.1145/2557833.2557845]
   Cockburn A, 2001, COMPUTER, V34, P131, DOI 10.1109/2.963450
   Cockburn A., 2006, AGILE SOFTWARE DEV C
   Conboy K, 2010, ACM T SOFTW ENG METH, V20, DOI 10.1145/1767751.1767753
   Conboy K, 2009, INFORM SYST RES, V20, P329, DOI 10.1287/isre.1090.0236
   De Lucia A, 2003, J SYST SOFTWARE, V65, P87, DOI 10.1016/S0164-1212(02)00051-1
   de Sousa KD, 2004, LECT NOTES COMPUT SC, V3096, P67
   de Souza S., 2006, J BRAZ COMPUT SOC, V12, P31
   de Souza S.C.B., 2005, P 23 ANN INT C DES C, P68, DOI [10.1145/1085313, 10.1145/1085313.1085331]
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Ghods M, 1998, DECIS SUPPORT SYST, V23, P361, DOI 10.1016/S0167-9236(98)00051-7
   Grubb P., 2003, Software Maintenance: Concepts and Practice, V2.
   Hall R, 1997, BT TECHNOL J, V15, P123, DOI 10.1023/A:1018694404616
   Hanssen GK, 2009, PROC IEEE INT CONF S, P487, DOI 10.1109/ICSM.2009.5306278
   Heeager L.T., 2012, Journal of Information Technology Case and Application Research, V14, P3
   Heeager L, 2013, LECT NOTES BUS INF P, V156, P18
   Junio GA, 2011, EUR CON SFTWR MTNCE, P55, DOI 10.1109/CSMR.2011.10
   Kajko-Mattsson M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P111
   Kitchenham BA, 1999, J SOFTW MAINT-RES PR, V11, P365, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<365::AID-SMR200>3.0.CO;2-W
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Lientz B P., 1980, Software Maintenance Management
   McKay J., 2001, Information Technology & People, V14, P46, DOI 10.1108/09593840110384771
   Misra SC, 2010, INT J QUAL RELIAB MA, V27, P451, DOI 10.1108/02656711011035147
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Myers M. D., 2007, Information and Organization, V17, P2, DOI 10.1016/j.infoandorg.2006.11.001
   Nawrocki JR, 2002, LECT NOTES COMPUT SC, V2349, P288
   Paetsch F, 2003, TWELFTH IEEE INTERNATIONAL WORKSHOPS ON ENABLING TECHNOLOGIES: INFRASTRUCTURE FOR COLLABORATIVE ENTERPRISES, PROCEEDINGS, P308
   Paulk M.C., 2002, CROSSTALK J DEFENSE, V15, P15
   Pigoski TM., 1996, Practical Software Maintenance: Best Practices for Managing Your Software Investment
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Pino FJ, 2012, J SOFTW-EVOL PROC, V24, P851, DOI 10.1002/smr.541
   Polo M, 2002, SOFTWARE PRACT EXPER, V32, P1239, DOI 10.1002/spe.481
   Poole C, 2001, IEEE SOFTWARE, V18, P42, DOI 10.1109/52.965801
   Poole CJ, 2001, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2001.972743
   Popovic M, 2001, J SOFTW MAINT EVOL-R, V13, P97, DOI 10.1002/smr.226
   Prochazka J., 2011, Inf Syst Dev, P597, DOI [10.1007/978144199790648, DOI 10.1007/978144199790648]
   Rose J, 1997, SYST RES BEHAV SCI, V14, P249, DOI 10.1002/(SICI)1099-1743(199707/08)14:4<249::AID-SRES119>3.0.CO;2-S
   Rudzki J, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P224, DOI 10.1109/SEAA.2009.31
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schwaber K., 2001, Agile software development with scrum
   Senapathi M, 2010, LECT NOTES BUS INF, V48, P226
   Sherer SA, 1997, J SOFTW MAINT-RES PR, V9, P345, DOI 10.1002/(SICI)1096-908X(199711/12)9:6<345::AID-SMR159>3.0.CO;2-W
   Sidky A, 2007, INNOV SYST SOFTW ENG, V3, P203, DOI 10.1007/s11334-007-0026-z
   Singer J, 1998, PROC IEEE INT CONF S, P139, DOI 10.1109/ICSM.1998.738502
   Stachour P, 2009, COMMUN ACM, V52, P54, DOI 10.1145/1592761.1592777
   Sukumaran S, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P304, DOI 10.1109/CSMR.2005.32
   SUSMAN GI, 1978, ADMIN SCI QUART, V23, P582, DOI 10.2307/2392581
   Svensson H, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P256, DOI 10.1109/CSMR.2005.33
   Taylor MJ, 1998, J SOFTW MAINT-RES PR, V10, P381, DOI 10.1002/(SICI)1096-908X(199811/12)10:6<381::AID-SMR177>3.0.CO;2-N
   Thomas D, 2006, J OBJECT TECHNOL, V5, P19, DOI 10.5381/jot.2006.5.7.c2
   Vans AM, 1999, INT J HUM-COMPUT ST, V51, P31, DOI 10.1006/ijhc.1999.0268
   Nguyen V, 2011, INFORM SOFTWARE TECH, V53, P682, DOI 10.1016/j.infsof.2010.11.003
   Ware MP, 2007, J SOFTW MAINT EVOL-R, V19, P133, DOI 10.1002/smr.345
   Zanker M, 2006, TIME 2006: THIRTEENTH INTERNATIONAL SYMPOSIUM ON TEMPORAL REPRESENTATION AND REASONING, PROCEEDINGS, P103
NR 74
TC 10
Z9 13
U1 0
U2 44
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2015
VL 20
IS 6
BP 1762
EP 1784
DI 10.1007/s10664-014-9335-7
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT7YX
UT WOS:000363032900010
DA 2024-07-18
ER

PT J
AU Barros, MD
AF Barros, Marcio de O.
TI An experimental evaluation of the importance of randomness in hill
   climbing searches applied to software engineering problems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Pseudo-random number generation; Quasi-random sequences; Hill climbing;
   Software module clustering; Next release problem
ID QUASI-RANDOM SEQUENCES; OPTIMIZATION
AB Random number generators are a core component of heuristic search algorithms. They are used to build candidate solutions and reduce bias while transforming these solutions during the search. Despite their usefulness, random numbers also have drawbacks, as one cannot guarantee that all portions of the search space are covered by the search and must run an algorithm many times to statistically assess its behavior. Determine whether deterministic quasi-random sequences can be used as an alternative to pseudo-random numbers in feeding "randomness" into Hill Climbing searches addressing Software Engineering problems. We have designed and executed three experimental studies in which a Hill Climbing search was used to find solutions for two Software Engineering problems: software module clustering and requirement selection. The algorithm was executed using both pseudo-random numbers and three distinct quasi-random sequences (Faure, Halton, and Sobol). The software clustering problem was evaluated for 32 real-world instances and the requirement selection problem was addressed using 15 instances reused from previous research works. The experimental studies were chained to allow varying as few as possible experimental factors between any given study and its subsequent one. Results found by searches powered by distinct quasi-random sequences were compared to those produced by the pseudo-random search on a per instance basis. The comparison evaluated search efficiency (processing time required to run the search) and effectiveness (quality of results produced by the search). Contrary to previous findings observed in the context of other heuristic search algorithms, we found evidence that quasi-random sequences cannot outperform pseudo-random numbers regularly in Hill Climbing searches. Detailed statistical analysis is provided to support the evidence favoring pseudo-random numbers.
C1 PPGI UNIRIO, Postgrad Informat Syst Program, Rio De Janeiro, RJ, Brazil.
C3 Universidade Federal do Estado do Rio de Janeiro
RP Barros, MD (corresponding author), PPGI UNIRIO, Postgrad Informat Syst Program, Av Pasteur 458, Rio De Janeiro, RJ, Brazil.
EM marcio.barros@uniriotec.br
RI Barros, Marcio/AAD-2848-2022
OI Barros, Marcio/0000-0001-8136-9624
FU FAPERJ; CAPES; CNPq
FX The author would like to express his gratitude to FAPERJ, CAPES, and
   CNPq, the research agencies which financially supported this project. He
   would also like to express his gratitude to the SSBSE reviewers, who
   gave precious insight and ideas on ways to improve this work, and
   Adriana Alvim, who (correctly) insisted that it was possible to
   implement significant improvements to reduce the algorithm's running
   time.
CR Amoui M, 2006, INT J INFORM TECHNOL, V1, P235
   [Anonymous], 1995, Differrential evolution-a simple and efficient adaptive scheme for global optimization over continuous spaces
   Antoniol G, 2005, PROC IEEE INT CONF S, P240
   Arcuri A., 2011, P 33 INT C SOFTW ENG
   Bagnall AJ, 2001, INFORM SOFTWARE TECH, V43, P883, DOI 10.1016/S0950-5849(01)00194-X
   Barros M. O., 2011, 6 DIAUNIRIO
   Barros M.O., 2012, P GEN EV COMP C GECC
   Boehm BW., 1981, Software Engineering Economics
   Bowman M, 2010, IEEE T SOFTWARE ENG, V36, P817, DOI 10.1109/TSE.2010.70
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P722, DOI 10.1109/32.815329
   Caflisch R. E., 1998, Acta Numerica, V7, P1, DOI 10.1017/S0962492900002804
   Chen TY, 2007, IEEE T RELIAB, V56, P562, DOI 10.1109/TR.2007.903293
   Chi HM, 2006, PROCEEDINGS OF THE 2006 WINTER SIMULATION CONFERENCE, VOLS 1-5, P975, DOI 10.1109/WSC.2006.323184
   de Oliveira Barros Marcio, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P60, DOI 10.1007/978-3-642-33119-0_6
   DOVAL D, 1999, P INT C SOFTW TOOLS
   Durillo J. J., 2006, ITI200610 TR U MAL D
   Durillo JJ, 2011, EMPIR SOFTW ENG, V16, P29, DOI 10.1007/s10664-010-9147-3
   Fraser G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P121, DOI 10.1109/ICST.2012.92
   Fraser G., 2011, ACM S FDN SOFTW ENG
   Georgieva A, 2009, EUR J OPER RES, V196, P413, DOI 10.1016/j.ejor.2008.03.019
   GIBBS S, 1990, COMMUN ACM, V33, P90, DOI 10.1145/83880.84525
   Hall M, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P472, DOI 10.1109/ICSM.2012.6405309
   Harman M, 2005, P GEN EV COMP C GECC
   Harman M., 2009, TR0903 KINGS COLL LO
   Joy C, 1996, QUASIMONTE CARLO MET, P41
   Kimura S, 2005, P GEN EV COMP C GECC
   Knuth D., 1981, The art of computer programming: seminumerical algorithms
   Larman C., 2002, APPL UML PATTERNS, V2nd
   Levy G, 2013, INTRO QUASIRANDOM NU
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Liu H, 2009, INT CONF QUAL SOFTW, P59, DOI 10.1109/QSIC.2009.16
   Lutz R, 2001, J SYST ARCHITECT, V47, P613, DOI 10.1016/S1383-7621(01)00019-4
   Maaranen H, 2004, COMPUT MATH APPL, V47, P1885, DOI 10.1016/j.camwa.2003.07.011
   Mahdavi K, 2003, PROC IEEE INT CONF S, P315, DOI 10.1109/ICSM.2003.1235437
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Matsumoto M., 1998, ACM Transactions on Modeling and Computer Simulation, V8, P3, DOI 10.1145/272991.272995
   McConnell S., 2004, CODE COMPLETE
   MOROKOFF WJ, 1994, SIAM J SCI COMPUT, V15, P1251, DOI 10.1137/0915077
   NIEDERREITER H, 1978, B AM MATH SOC, V84, P957, DOI 10.1090/S0002-9904-1978-14532-7
   Niederreiter H., 1992, CBMS NSF REG C SER A, DOI 10.1137/1.9781611970081
   Pant M, 2008, IEEE C EVOL COMPUTAT, P3011, DOI 10.1109/CEC.2008.4631204
   Perepletchikov M, 2011, IEEE T SOFTWARE ENG, V37, P449, DOI 10.1109/TSE.2010.61
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Press W.H., 1987, Numerical Recipes: The Art of Scientific Computing
   Raiha O., 2007, D20091 U TAMP DEP CO
   Shahbazi A, 2013, IEEE T SOFTWARE ENG, V39, P163, DOI 10.1109/TSE.2012.18
   Sharma T. K., 2011, 2011 Sixth International Conference on Bio-Inspired Computing: Theories and Applications, P80, DOI 10.1109/BIC-TA.2011.8
   Sheta A. F., 2006, J. Comput. Sci., V2, P118
   Simons CL, 2010, IEEE T SOFTWARE ENG, V36, P798, DOI 10.1109/TSE.2010.34
   Thangaraj R, 2009, LECT NOTES ARTIF INT, V5572, P310, DOI 10.1007/978-3-642-02319-4_37
   Tucker A, 2001, IEEE T SYST MAN CY B, V31, P235, DOI 10.1109/3477.915346
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Xuan JF, 2012, IEEE T SOFTWARE ENG, V38, P1195, DOI 10.1109/TSE.2011.92
   YOURDON E, 1979, STRUCTURED DESIGN FU
   Zhang YY, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1129
   Zhang YY, 2013, INFORM SOFTWARE TECH, V55, P126, DOI 10.1016/j.infsof.2012.03.007
NR 57
TC 3
Z9 4
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2014
VL 19
IS 5
BP 1423
EP 1465
DI 10.1007/s10664-013-9294-4
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AP9VT
UT WOS:000342429900010
DA 2024-07-18
ER

PT J
AU Linares-Vasquez, M
   McMillan, C
   Poshyvanyk, D
   Grechanik, M
AF Linares-Vasquez, Mario
   McMillan, Collin
   Poshyvanyk, Denys
   Grechanik, Mark
TI On using machine learning to automatically classify software
   applications into domain categories
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Closed-source; Open-source; Software categorization; Machine learning
ID PROGRAMS; REALITY
AB Software repositories hold applications that are often categorized to improve the effectiveness of various maintenance tasks. Properly categorized applications allow stakeholders to identify requirements related to their applications and predict maintenance problems in software projects. Manual categorization is expensive, tedious, and laborious - this is why automatic categorization approaches are gaining widespread importance. Unfortunately, for different legal and organizational reasons, the applications' source code is often not available, thus making it difficult to automatically categorize these applications. In this paper, we propose a novel approach in which we use Application Programming Interface (API) calls from third-party libraries for automatic categorization of software applications that use these API calls. Our approach is general since it enables different categorization algorithms to be applied to repositories that contain both source code and bytecode of applications, since API calls can be extracted from both the source code and byte-code. We compare our approach to a state-of-the-art approach that uses machine learning algorithms for software categorization, and conduct experiments on two large Java repositories: an open-source repository containing 3,286 projects and a closed-source repository with 745 applications, where the source code was not available. Our contribution is twofold: we propose a new approach that makes it possible to categorize software projects without any source code using a small number of API calls as attributes, and furthermore we carried out a comprehensive empirical evaluation of automatic categorization approaches.
C1 [Linares-Vasquez, Mario; Poshyvanyk, Denys] Coll William & Mary, Williamsburg, VA 23185 USA.
   [McMillan, Collin] Univ Notre Dame, Notre Dame, IN 46556 USA.
   [Grechanik, Mark] Univ Illinois, Chicago, IL 60612 USA.
C3 William & Mary; University of Notre Dame; University of Illinois System;
   University of Illinois Chicago; University of Illinois Chicago Hospital
RP Poshyvanyk, D (corresponding author), Coll William & Mary, Williamsburg, VA 23185 USA.
EM mlinarev@cs.wm.edu; cmc@nd.edu; denys@cs.wm.edu; drmark@uic.edu
RI Grechanik, Mark/IZD-6018-2023
OI Grechanik, Mark/0000-0002-8364-595X; Poshyvanyk,
   Denys/0000-0002-5626-7586; Linares-Vasquez, Mario/0000-0003-0161-2888
FU NSF [CCF-1016868, CCF-0916260, CCF-0916139, CCF-1017633, CCF-1218129];
   Accenture; Division of Computing and Communication Foundations; Direct
   For Computer & Info Scie & Enginr [1217928, 1016868, 1218129] Funding
   Source: National Science Foundation
FX We are grateful to anonymous EMSE and ICSM'11 reviewers for their
   relevant detailed comments and suggestions, which helped us in
   significantly improving the initial version of this paper. We also would
   like to thank Marty White from the College of William and Mary for his
   useful suggestions that we implemented in this paper. This work is
   supported in part by NSF CCF-1016868, CCF-0916260, CCF-0916139,
   CCF-1017633, CCF-1218129 and Accenture. Any opinions, findings and
   conclusions expressed herein are the authors' and do not necessarily
   reflect those of the sponsors.
CR AHA DW, 1991, MACH LEARN, V6, P37, DOI 10.1023/A:1022689900470
   Alpaydin E., 2010, Introduction to Machine Learning
   [Anonymous], 2010, P 32 ACMIEEE INT C S
   [Anonymous], 2012, EFFECT SIZES RES UNI
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Bajracharya S, 2010, 18 INT S FDN SOFTW E
   Bruno M, 2005, 2005 IEEE INTERNATIONAL CONFERENCE ON E-TECHNOLOGY, E-COMMERCE AND E-SERVICE, PROCEEDINGS, P138, DOI 10.1109/EEE.2005.31
   Bugde S, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P182, DOI 10.1109/ICGSE.2008.18
   Cohen W. W., 1995, Machine Learning. Proceedings of the Twelfth International Conference on Machine Learning, P115
   Crammer K, 2003, J MACH LEARN RES, V3, P1025, DOI 10.1162/153244303322533188
   de Carvalho ACPLF, 2009, FDN COMPUTATIONAL IN, P5
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Di Lucca GA, 2002, PROC IEEE INT CONF S, P93, DOI 10.1109/ICSM.2002.1167756
   Dit B, 2011, CONF PROC INT SYMP C, P11, DOI 10.1109/ICPC.2011.47
   Dumitru H, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P181, DOI 10.1145/1985793.1985819
   Feng CXJ, 2008, INT J COMPUT INTEG M, V21, P702, DOI 10.1080/09511920701530943
   Frakes W, 1998, ANN SOFTW ENG, V5, P125, DOI 10.1023/A:1018972323770
   Grechanik Mark, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P368, DOI 10.1109/ISSRE.2010.13
   Grechanik M, 2010, 4 ACM IEEE INT S EMP
   Guyon I., 2003, Journal of Machine Learning Research, V3, P1157, DOI 10.1162/153244303322753616
   HINDLE A, 2009, 17 IEEE INT C PROGR, P30
   Hsu CW, 2002, IEEE T NEURAL NETWOR, V13, P415, DOI 10.1109/72.991427
   Ji S., 2008, P 14 ACM SIGKDD INT, P381, DOI [DOI 10.1145/1401890.1401939, 10.1145/1401890.1401939]
   Jones C., 2010, Software engineering best practices: Lessons from successful projects in the top companies
   Kang K. C., 1990, Technical Report
   Kawaguchi S, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P195, DOI 10.1109/IWPSE.2003.1231227
   Kawaguchi S, 2006, J SYST SOFTWARE, V79, P939, DOI 10.1016/j.jss.2005.06.044
   Kelly MB, 2011, 11 IEEE INT WORK C S
   Leopold E, 2002, MACH LEARN, V46, P423, DOI 10.1023/A:1012491419635
   Lorena AC, 2004, LECT NOTES COMPUT SC, V2972, P272
   McMillan C., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P343, DOI 10.1109/ICSM.2011.6080801
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Poshyvanyk D, 2009, PROC INT CONF SOFTW, P283, DOI 10.1109/ICSE-COMPANION.2009.5071002
   Prieto-Diaz R., 1990, SIGSOFT Software Engineering Notes, V15, P47, DOI 10.1145/382296.382703
   Ratiu D, 2006, WORK CONF REVERSE EN, P83
   Ratiu D, 2007, INT C PROGRAM COMPRE, P91
   Sandhu Parvinder Singh, 2007, Journal of Social Sciences, V3, P266
   SCHULER D., 2007, ASE 07, P274, DOI 10.1145/1321631.1321672
   Sebastiani F, 2002, ACM COMPUT SURV, V34, P1, DOI 10.1145/505282.505283
   Sim SE, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063243
   Tian K, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P163, DOI 10.1109/MSR.2009.5069496
   Ugurel S, 2002, P 8 ACM SIGKDD INT C, P632, DOI DOI 10.1145/775047.775141
   Ujházi B, 2010, IEEE INT WORK C SO, P33, DOI 10.1109/SCAM.2010.14
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Zhang ML, 2006, IEEE T KNOWL DATA EN, V18, P1338, DOI 10.1109/TKDE.2006.162
   Zhang ML, 2005, 2005 IEEE INTERNATIONAL CONFERENCE ON GRANULAR COMPUTING, VOLS 1 AND 2, P718
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 50
TC 54
Z9 59
U1 1
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2014
VL 19
IS 3
BP 582
EP 618
DI 10.1007/s10664-012-9230-z
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AF0ZA
UT WOS:000334442700005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Reinhartz-Berger, I
   Sturm, A
AF Reinhartz-Berger, Iris
   Sturm, Arnon
TI Comprehensibility of UML-based software product line specifications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Variability management; Software product line engineering; Domain
   models; Empirical evaluation; UML
ID VARIABILITY; ARCHITECTURE; COMMONALITY; GUIDELINES; SYSTEM
AB Software Product Line Engineering (SPLE) deals with developing artifacts that capture the common and variable aspects of software product families. Domain models are one kind of such artifacts. Being developed in early stages, domain models need to specify commonality and variability and guide the reuse of the artifacts in particular software products. Although different modeling methods have been proposed to manage and support these activities, the assessment of these methods is still in an inceptive stage. In this work, we examined the comprehensibility of domain models specified in ADOM, a UML-based SPLE method. In particular, we conducted a controlled experiment in which 116 undergraduate students were required to answer comprehension questions regarding a domain model that was equipped with explicit reuse guidance and/or variability specification. We found that explicit specification of reuse guidance within the domain model helped understand the model, whereas explicit specification of variability increased comprehensibility only to a limited extent. Explicit specification of both reuse guidance and variability often provided intermediate results, namely, results that were better than specification of variability without reuse guidance, but worse than specification of reuse guidance without variability. All these results were perceived in different UML diagram types, namely, use case, class, and sequence diagrams and for different commonality-, variability-, and reuse-related aspects.
C1 [Reinhartz-Berger, Iris] Univ Haifa, Dept Informat Syst, IL-31905 Haifa, Israel.
   [Sturm, Arnon] Ben Gurion Univ Negev, Dept Informat Syst Engn, IL-84105 Beer Sheva, Israel.
C3 University of Haifa; Ben Gurion University
RP Reinhartz-Berger, I (corresponding author), Univ Haifa, Dept Informat Syst, IL-31905 Haifa, Israel.
EM iris@is.haifa.ac.il
RI STURM, ARNON/F-1510-2012
OI STURM, ARNON/0000-0002-4021-7752
CR Ahmed F, 2008, INFORM SOFTWARE TECH, V50, P1098, DOI 10.1016/j.infsof.2007.10.013
   Alves de Oliveira E., 2005, P 2005 C CTR ADV STU, P225
   Anastasopoulos M., 2001, Software Engineering Notes, V26, P109, DOI 10.1145/379377.375269
   [Anonymous], 2001, SOFTWARE PRODUCT LIN
   Bachmann F, 2004, LECT NOTES COMPUT SC, V3014, P66
   Bachmann Felix., 2005, Variability in Software Product Lines
   Bagheri E, 2011, SOFTWARE QUAL J, V19, P579, DOI 10.1007/s11219-010-9127-2
   BECKER M, 2003, P SOFTW VAR MAN WORK
   Bragança A, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P123
   Buhne S, 2003, P 9 INT WORKSH REQ E, P59
   Burton-Jones A, 2009, J ASSOC INF SYST, V10, P495
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Clau&beta; M., 2001, P WORKSH DOM SPEC VI, P11
   Clotet R., 2008, P 2 INT WORKSH VAR M, P43
   Coplien J, 1998, IEEE SOFTWARE, V15, P37, DOI 10.1109/52.730836
   Coriat M, 2000, SPRINGER INT SER ENG, V576, P147
   Czarnecki K., 2005, OOPSLA WORKSH SOFTW
   Denger C., 2006, International Symposium on Empirical Software Engineering, P184, DOI DOI 10.1145/1159733.1159762
   Djebbi O., 2006, 4 INT WORKSH COMP EV
   Gomaa H, 2002, IEEE INT C ENG COMP, P238, DOI 10.1109/ICECCS.2002.1181517
   Gomaa H., 2004, Designing Software Product Lines with UML: From Use Cases to PatternBased Software Architectures
   Halmans G, 2008, LECT NOTES COMPUT SC, V5074, P109
   Halmans Gunter., 2003, SOFTWARE SYSTEM MODE, V2, P15
   Haugen O, 2005, LECT NOTES COMPUT SC, V3714, P102
   Haugen O, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P139, DOI 10.1109/SPLC.2008.25
   Jacobson I., 1997, Software Reuse: Architecture, Process and Organization for Business Success
   John I., 2002, P INT WORKSH REQ ENG, P26
   Kim J, 2000, INFORM SYST RES, V11, P284, DOI 10.1287/isre.11.3.284.12206
   Kim J, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P168
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Korherr B, 2007, DEXA 2007: 18TH INTERNATIONAL CONFERENCE ON DATABASE AND EXPERT SYSTEMS APPLICATIONS, PROCEEDINGS, P829
   Lazilha FR, 2004, IEEE C INF REUS INT, P112
   Matinlassi M, 2004, PROC INT CONF SOFTW, P127, DOI 10.1109/ICSE.2004.1317435
   Moody DL, 2009, IEEE T SOFTWARE ENG, V35, P756, DOI 10.1109/TSE.2009.67
   Moon M, 2005, IEEE T SOFTWARE ENG, V31, P551, DOI 10.1109/TSE.2005.76
   Morisio M, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P321, DOI 10.1109/ASE.2000.873688
   Nugroho A, 2009, INFORM SOFTWARE TECH, V51, P1670, DOI 10.1016/j.infsof.2009.04.007
   Oliveira EA, 2010, J UNIVERS COMPUT SCI, V16, P2374
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Reinhartz-Berger I, 2008, J DATABASE MANAGE, V19, P74, DOI 10.4018/jdm.2008010104
   Reinhartz-Berger I, 2011, LECT NOTES BUS INF P, V81, P468
   Reinhartz-Berger I, 2011, LECT NOTES COMPUT SC, V6999, P302, DOI 10.1007/978-3-642-24574-9_38
   Reinhartz-Berger I, 2009, INFORM SOFTWARE TECH, V51, P1275, DOI 10.1016/j.infsof.2009.03.005
   Riebisch M, 2000, P 5 INT C INT DES PR
   Robak S., 2002, International Journal of Applied Mathematics and Computer Science, V12, P285
   Salicki S, 2002, LECT NOTES COMPUT SC, V2290, P304
   Schmid Klaus., 2011, 5 INT WORKSHOP VARIA, P119, DOI [10.1145/1944892.1944907, DOI 10.1145/1944892.1944907]
   Shamim Hasnat Ripon, 2003, Malaysian Journal of Computer Science, V16, P37
   Shanks G, 2003, P 11 EUR C INF SYST, P1775
   Siau K, 2004, J DATABASE MANAGE, V15, P73, DOI 10.4018/jdm.2004010103
   Siau K., 2001, Journal of Database Management, V12, P26, DOI 10.4018/jdm.2001010103
   Sinnema M, 2008, J SYST SOFTWARE, V81, P584, DOI 10.1016/j.jss.2007.06.002
   Sinnema M, 2007, INFORM SOFTWARE TECH, V49, P717, DOI 10.1016/j.infsof.2006.08.001
   Song IY, 2001, LNCS, V2224, P368
   Sun CA, 2010, J SYST SOFTWARE, V83, P502, DOI 10.1016/j.jss.2009.10.011
   Svahnberg M, 2005, SOFTWARE PRACT EXPER, V35, P705, DOI 10.1002/spe.652
   Topi H., 2002, Journal of Database Management, V13, P3, DOI 10.4018/jdm.2002040101
   von der MaSSen T., 2002, Proceedings of the International Workshop on Requirements Engineering for Product Lines, P19
   Webber DL, 2004, SCI COMPUT PROGRAM, V53, P305, DOI 10.1016/j.scico.2003.04.004
   Weiler T, 2003, SVM 03, P53
   Witte R.S., 2009, STATISTICS, V9th
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Ziadi T, 2004, LECT NOTES COMPUT SC, V3014, P129
   Ziadi Tewfik., 2006, SOFTWARE PRODUCT LIN, P557, DOI DOI 10.1007/978-3-540-33253-4_15
NR 64
TC 5
Z9 7
U1 0
U2 16
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2014
VL 19
IS 3
BP 678
EP 713
DI 10.1007/s10664-012-9234-8
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AF0ZA
UT WOS:000334442700008
DA 2024-07-18
ER

PT J
AU Pagano, D
   Maalej, W
AF Pagano, Dennis
   Maalej, Walid
TI How do open source communities blog?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Social software; Open source; Data mining; Blogs; Social software
   engineering
AB We report on an exploratory study, which aims at understanding how software communities use blogs compared to conventional development infrastructures. We analyzed the behavior of 1,100 bloggers in four large open source communities, distinguishing between committing bloggers and other community members. We observed that these communities intensively use blogs with one new entry every 8 h. A blog entry includes 14 times more words than a commit message. When analyzing the content of the blogs, we found that committers and others bloggers write about similar topics. Most popular topics in committers' blogs represent high-level concepts such as features and domain concepts, while source code related topics are discussed in 15% of their posts. Other community members frequently write about community events and conferences as well as configuration and deployment topics. We found that the blogging peak period is usually after the software is released. Moreover, committers are more likely to blog after corrective engineering than after forward engineering and re-engineering activities. Our findings call for a hypothesis-driven research to (a) further understand the role of social media in dissolving the collaboration boundaries between developers and other stakeholders and (b) integrate social media into development processes and tools.
C1 [Pagano, Dennis; Maalej, Walid] Tech Univ Munich, Fak Informat, D-80290 Munich, Germany.
C3 Technical University of Munich
RP Pagano, D (corresponding author), Tech Univ Munich, Fak Informat, D-80290 Munich, Germany.
EM pagano@cs.tum.edu; maalejw@cs.tum.edu
FU FastFix project; European Commission [FP7-258109]
FX This work has been supported by the FastFix project, which is funded by
   the 7th Framework Programme of the European Commission, grant agreement
   no. FP7-258109. We would like to thank Enrique Garcia Perez, Damir
   Ismailovic, Amel Mahmuzic, Helmut Naughton, Tobias Roehm, Alex Waldmann,
   and the anonymous MSR'11 and EMSE reviewers for their valuable feedback.
   We are further thankful to Jonas Helming, Felix Kaser, and Daniel G.
   Siegel for helpful insights into the Eclipse and GNOME communities.
CR Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   AGRAWAL R, 1995, PROC INT CONF DATA, P3, DOI 10.1109/ICDE.1995.380415
   [Anonymous], 2010, LED FACEBOOK TWITTER
   [Anonymous], WWW 2005 WORKSH WEBL
   [Anonymous], 2011, P 2 INT WORKSHOP WEB
   Bacchelli A., 2010, Proceedings of the 32nd International Conference on Software Engineering, P375
   Begel A., 2010, Proceedings of the FSE/SDP workshop on Future of software engineering research, P33, DOI DOI 10.1145/1882362.1882370
   Bettenburg N., 2008, P 2008 INT WORKING C, P27
   Bettenburg N, 2011, CONF PROC INT SYMP C, P185, DOI 10.1109/ICPC.2011.36
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Crowston K, 2005, P 1 C OP SOURC SYST
   DICE LR, 1945, ECOLOGY, V26, P297, DOI 10.2307/1932409
   Glance N, 2004, P WWW 2004 WORKSH WE
   Gruhl D., 2004, P 13 INT C WORLD WID, P491, DOI DOI 10.1145/1046456.1046462
   Guzzi A., 2010, Proceedings of the International Conference on Software Maintenance, ICSM '10, P1
   Hattori Lile P., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P63, DOI 10.1109/ASEW.2008.4686322
   Hino K., 2007, P 16 ACM C C INF KNO, P971, DOI DOI 10.1145/1321440.1321588
   Kaplan AM, 2010, BUS HORIZONS, V53, P59, DOI 10.1016/j.bushor.2009.09.003
   Maalej Walid, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P191, DOI 10.1109/MSR.2010.5463344
   Maalej W, 2011, P INT C SOC COMP ITS
   Maalej W, 2008, LNI, P183
   Maalej W, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P121, DOI 10.1109/MSR.2009.5069490
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Pagano D, 2011, P 8 C MIN SOFTW REP
   StanleyWasserman Katherine, 1994, SOCIAL NETWORK ANAL, DOI 10.1017/CBO9780511815478
   Treude C, 2009, PROC INT CONF SOFTW, P12, DOI 10.1109/ICSE.2009.5070504
   van Deursen A., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P203, DOI 10.1145/1810295.1810330
   Zaki MJ, 2001, MACH LEARN, V42, P31, DOI 10.1023/A:1007652502315
NR 29
TC 28
Z9 29
U1 0
U2 32
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2013
VL 18
IS 6
BP 1090
EP 1124
DI 10.1007/s10664-012-9211-2
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 215SC
UT WOS:000324229600003
DA 2024-07-18
ER

PT J
AU Greiler, M
   van Deursen, A
AF Greiler, Michaela
   van Deursen, Arie
TI What your plug-in test suites really test: an integration perspective on
   test suite understanding
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Plug-in systems; Dynamic analysis; Static analysis; Test suite
   understanding
AB Software architectures such as plug-in and service-oriented architectures enable developers to build extensible software products, whose functionality can be enriched by adding or configuring components. A well-known example of such an architecture is Eclipse, best known for its use to create a series of extensible IDEs. Although such architectures give users and developers a great deal of flexibility to create new products, the complexity of the built systems increases. In order to manage this complexity developers use extensive automated test suites. Unfortunately, current testing tools offer little insight in which of the many possible combinations of components and components configurations are actually tested. The goal of this paper is to remedy this problem. To that end, we interview 25 professional developers on the problems they experience in test suite understanding for plug-in architectures. The findings have been incorporated in five architectural views that provide an extensibility perspective on plug-in-based systems and their test suites. The views combine static and dynamic information on plug-in dependencies, extension initialization, extension and service usage, and the test suites. The views have been implemented in ETSE, the Eclipse Plug-in Test Suite Exploration tool. We evaluate the proposed views by analyzing eGit, Mylyn, and a Mylyn connector.
C1 [Greiler, Michaela; van Deursen, Arie] Delft Univ Technol, Software Engn Res Grp, Delft, Netherlands.
C3 Delft University of Technology
RP Greiler, M (corresponding author), Delft Univ Technol, Software Engn Res Grp, Delft, Netherlands.
EM m.s.greiler@tudelft.nl; arie.vandeursen@tudelft.nl
RI van Deursen, Arie/G-3084-2011
OI van Deursen, Arie/0000-0003-4850-3312
CR Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   [Anonymous], JAVA DEV GUIDE ECLIP
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   Chatley R, 2004, LECT NOTES COMPUT SC, V2984, P129
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Cornelissen B, 2007, CSMR 2007: 11TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P213
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Dagenais B., 2010, P 18 INT S FDN SOFTW, P127
   Demeyer S., 2003, OBJECT ORIENTED REEN
   Evans E., 2003, Domain-Driven Design
   Feathers Michael, 2004, Working Effectively With Legacy Code: Work Effect Leg Code
   Freeman S., 2010, Growing Object-Oriented Software, Guided By Tests
   Gaelli M, 2005, 13 INT EUR SMALLT C, P1
   Gamma Erich., 2003, CONTRIBUTING ECLIPSE
   Garousi V, 2010, LECT NOTES COMPUT SC, V6303, P189, DOI 10.1007/978-3-642-15585-7_19
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Greiler M., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P67, DOI 10.1109/WCRE.2010.16
   Greiler M, 2012, PROC INT CONF SOFTW, P244, DOI 10.1109/ICSE.2012.6227189
   Hartmann J., 2000, Software Engineering Notes, V25, P60, DOI 10.1145/347636.348872
   Hermans F., 2011, P 33 INT C SOFTW ENG
   JORGENSEN PC, 1994, COMMUN ACM, V37, P30, DOI 10.1145/182987.182989
   Koochakzadeh N, 2010, LECT NOTES COMPUT SC, V6303, P129, DOI 10.1007/978-3-642-15585-7_12
   Marquardt K, 1999, P 4 EUR C PATT LANG, P37
   Martin R. C., 2008, Clean Code: A Handbook of Agile Software Craftsmanship
   Mayer J, 2003, LECT NOTES COMPUT SC, V2591, P87
   Mens T, 2008, PROC IEEE INT CONF S, P386, DOI 10.1109/ICSM.2008.4658087
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Pezze M., 2008, Software Testing and Analysis: Process, Principles and Techniques
   Reichertz J., 2007, The sage handbook of grounded theory
   Reis S, 2007, LECT NOTES COMPUT SC, V4422, P321
   Rigby PC, 2011, ICSE 11
   Rountev A, 2004, IEEE T SOFTWARE ENG, V30, P372, DOI 10.1109/TSE.2004.20
   Rubio D, 2009, TESTING SPRING OSGI, P331
   The OSGi Alliance, 2011, OSGI SERV PLATF COR
   van Deursen A, 2004, FOURTH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA 2004), PROCEEDINGS, P122, DOI 10.1109/WICSA.2004.1310696
   van Deursen A., 2002, Extreme Programming Perspectives. Ed. by, P141
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Wermelinger Michel., 2008, MSR '08, P133, DOI 10.1145/1370750.1370783
   Zaidman Andy, 2008, 2008 First IEEE International Conference on Software Testing, Verification and Validation (ICST '08), P220, DOI 10.1109/ICST.2008.47
NR 39
TC 2
Z9 3
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2013
VL 18
IS 5
BP 859
EP 900
DI 10.1007/s10664-012-9235-7
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 192CP
UT WOS:000322462000002
DA 2024-07-18
ER

PT J
AU Dit, B
   Revelle, M
   Poshyvanyk, D
AF Dit, Bogdan
   Revelle, Meghan
   Poshyvanyk, Denys
TI Integrating information retrieval, execution and link analysis
   algorithms to improve feature location in software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Concept location; Feature identification; Information retrieval; Web
   mining; Program comprehension; Software evolution and maintenance
ID SOURCE CODE; IDENTIFICATION; CLUSTERS; RANKING; HIPIKAT
AB Data fusion is the process of integrating multiple sources of information such that their combination yields better results than if the data sources are used individually. This paper applies the idea of data fusion to feature location, the process of identifying the source code that implements specific functionality in software. A data fusion model for feature location is presented which defines new feature location techniques based on combining information from textual, dynamic, and web mining or link analyses algorithms applied to software. A novel contribution of the proposed model is the use of advanced web mining algorithms to analyze execution information during feature location. The results of an extensive evaluation on three Java systems indicate that the new feature location techniques based on web mining improve the effectiveness of existing approaches by as much as 87%.
C1 [Dit, Bogdan] Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23187 USA.
C3 William & Mary
RP Poshyvanyk, D (corresponding author), Coll William & Mary, Dept Comp Sci, Williamsburg, VA 23187 USA.
EM bdit@cs.wm.edu; meghan@cs.wm.edu; denys@cs.wm.edu
OI Poshyvanyk, Denys/0000-0002-5626-7586
FU NSF [CCF-0916260, CCF-1016868]; Direct For Computer & Info Scie &
   Enginr; Division of Computing and Communication Foundations [1156401]
   Funding Source: National Science Foundation; Division of Computing and
   Communication Foundations; Direct For Computer & Info Scie & Enginr
   [1016868, 0916260] Funding Source: National Science Foundation
FX We are grateful to the anonymous EMSE and ICPC 2010 reviewers for their
   relevant and useful comments and suggestions, which helped us in
   significantly improving the earlier versions of this paper. This work is
   supported in part by NSF CCF-0916260 and NSF CCF-1016868 GRANTS. Any
   opinions, findings, and conclusions expressed herein are the authors'
   and do not necessarily reflect those of the sponsors.
CR [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], 2005, Proc. of the European Software Engineering Conference and the ACM SIGSOFT Symposium on the Foundations of Software Engineering (ESEC/FSE'05)
   [Anonymous], 2007, P 6 JOINT M EUR SOFT
   [Anonymous], 1983, INTRO MODERN INFORM
   Antoniol G, 2006, IEEE T SOFTWARE ENG, V32, P627, DOI 10.1109/TSE.2006.88
   Biggerstaff T.J., 1994, PROC 15 IEEEACM INT, P482
   Binkley D, 2008, J SYST SOFTWARE, V81, P2287, DOI 10.1016/j.jss.2008.04.007
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Brin S, 1998, COMPUT NETWORKS ISDN, V30, P107, DOI 10.1016/S0169-7552(98)00110-X
   Bruntink M, 2005, IEEE T SOFTWARE ENG, V31, P804, DOI 10.1109/TSE.2005.114
   Bruntink M, 2004, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2004.1357804
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   COMON P, 1994, SIGNAL PROCESS, V36, P287, DOI 10.1016/0165-1684(94)90029-9
   Cooley R, 1997, PROC INT C TOOLS ART, P558, DOI 10.1109/TAI.1997.632303
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Cubranic D, 2005, IEEE T SOFTWARE ENG, V31, P446, DOI 10.1109/TSE.2005.71
   Cubranic D., 2004, Computer Supported Cooperative Work Conference Proceedings, P82, DOI 10.1145/1031607.1031622
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   de Alwis B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P21, DOI 10.1145/1368088.1368092
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Eaddy M, 2008, IEEE T SOFTWARE ENG, V34, P497, DOI 10.1109/TSE.2008.36
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Ganter B., 1996, FORMAL CONCEPT ANAL
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Gold N., 2002, IEE Proceedings-Software, V149, P103, DOI 10.1049/ip-sen:20020549
   Grant S, 2008, WORK CONF REVERSE EN, P138, DOI 10.1109/WCRE.2008.49
   Harman M, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P11, DOI 10.1109/WCRE.2002.1173060
   HENRY S, 1981, IEEE T SOFTWARE ENG, V7, P510, DOI 10.1109/TSE.1981.231113
   Hill E, 2009, 31 IEEE ACM INT C SO
   Hill E., 2007, Proceedings of the 22nd International Conference on Automated Software Engineering, P14
   Inoue K, 2005, IEEE T SOFTWARE ENG, V31, P213, DOI 10.1109/TSE.2005.38
   JIANG H, 2008, 23 IEEE ACM INT C AU
   Kleinberg JM, 1999, J ACM, V46, P604, DOI 10.1145/324133.324140
   Lawrance J, 2007, VL/HCC 2007: IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P15, DOI 10.1109/VLHCC.2007.25
   Li Z, 2009, IDENTIFYING HIGH LEV
   Liu Dapeng, 2007, P 22 IEEEACM INT C A, P234, DOI 10.1145/1321631.1321667
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Marin M, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P132, DOI 10.1109/WCRE.2004.23
   Marin M, 2007, ACM T SOFTW ENG METH, V17, DOI 10.1145/1314493.1314496
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Revelle M, 2009, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2009.5090045
   Robillard M.P., 2007, EMPIRICAL STUDY CONC
   Robillard MP, 2010, J SOFTW MAINT EVOL-R, V22, P143, DOI 10.1002/smr.413
   Robillard MP, 2008, WORK CONF REVERSE EN, P17, DOI 10.1109/WCRE.2008.15
   Robillard MP, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487691
   Rohatgi A, 2009, IET SOFTW, V3, P292, DOI 10.1049/iet-sen.2008.0078
   Savage T., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P255, DOI 10.1145/1810295.1810345
   Shepherd D, 2004, MID STUD WORKSH PROG
   Shepherd D, 2005, 20 IEEE ACM INT C AU, P184
   Shepherd D, 2007, PASTE'07 PROCEEDINGS OF THE 2007 ACM SIGPLAN- SIGSOFT WORKSHOP ON PROGRAM ANALYSIS FOR SOFTWARE TOOLS & ENGINEERING, P49, DOI 10.1145/1251535.1251544
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Starke J, 2009, 25 IEEE INT C SOFTW
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   Zaidman A, 2006, INT C PROGRAM COMPRE, P74, DOI 10.1109/ICPC.2006.26
   Zaidman A, 2008, J SOFTW MAINT EVOL-R, V20, P387, DOI 10.1002/smr.370
   Zhao W, 2006, ACM T SOFTW ENG METH, V15, P195, DOI 10.1145/1131421.1131424
NR 59
TC 61
Z9 77
U1 0
U2 37
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2013
VL 18
IS 2
BP 277
EP 309
DI 10.1007/s10664-011-9194-4
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 077ZD
UT WOS:000314067000004
DA 2024-07-18
ER

PT J
AU Lam, A
   Boehm, B
AF Lam, Alexander
   Boehm, Barry
TI Experiences in developing and applying a software engineering technology
   testbed
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Testbed; Software maturity; Software adoption; Technology evaluation;
   Technology transition
AB A major problem in empirical software engineering is to determine or ensure comparability across multiple sources of empirical data. This paper summarizes experiences in developing and applying a software engineering technology testbed. The testbed was designed to ensure comparability of empirical data used to evaluate alternative software engineering technologies, and to accelerate the technology maturation and transition into project use. The requirements for such software engineering technology testbeds include not only the specifications and code, but also the package of instrumentation, scenario drivers, seeded defects, experimentation guidelines, and comparative effort and defect data needed to facilitate technology evaluation experiments. The requirements and architecture to build a particular software engineering technology testbed to help NASA evaluate its investments in software dependability research and technology have been developed and applied to evaluate a wide range of technologies. The technologies evaluated came from the fields of architecture, testing, state-model checking, and operational envelopes. This paper will present for the first time the requirements and architecture of the software engineering technology testbed. The results of the technology evaluations will be analyzed from a point of view of how researchers benefitted from using the SETT. The researchers just reported how their technology performed in their original findings. The testbed evaluation showed (1) that certain technologies were complementary and cost-effective to apply; (2) that the testbed was cost-effective to use by researchers within a well-specified domain of applicability; (3) that collaboration in testbed use by researchers and the practitioners resulted comparable empirical data and in actions to accelerate technology maturity and transition into project use, as shown in the AcmeStudio evaluation; and (4) that the software engineering technology testbed's requirements and architecture were suitable for evaluating technologies and accelerating their maturation and transition into project use.
C1 [Lam, Alexander; Boehm, Barry] Univ So Calif, Los Angeles, CA 90089 USA.
C3 University of Southern California
RP Lam, A (corresponding author), Univ So Calif, Los Angeles, CA 90089 USA.
EM alexankl@usc.edu; boehm@usc.edu
FU NASA-HDCP; CMU; JPL; USC; JPL-MDS team; NSF HDC programs
FX This work was supported by NASA-HDCP contracts to CMU, JPL, and USC. It
   also benefited from support from the JPL-MDS team and the NSF HDC
   programs that includes Dr. Roshanak Roshandel, Dr. Steve Fickas and his
   graduate students, Dr. David Garlan and the AcmeStudio team, Dr. Gupta,
   Dr. Helmy, Ganesha Bhaskara, and Dr. Carolyn Talcott. In addition, I'd
   like to acknowledge the USC graduate students who helped in developing
   SCRover.
CR Benzel T., 2007, P DETER COMM WORKSH
   Boehm B, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P117
   Boehm B, 1996, IEEE SOFTWARE, V13, P73, DOI 10.1109/52.526834
   BOEHM B, 2001, CROSSTALK        DEC, P23
   BOEHM B, 2003, GUIDELINES MODEL BAS
   Booch Grady, 1999, UNIFIED MODELING LAN, DOI DOI 10.1007/3-540-40011-7_10
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   DVORAK D, 2000, P 2000 IEEE AER C
   FICKAS S, 2004, ROPE REASONING OPERA
   GARLAN D, 2000, FDN COMPONENT BASED
   Kruchten P., 2001, The Rational Unified Process: An introduction, VSecond
   Lindvall M, 2007, EMPIR SOFTW ENG, V12, P417, DOI 10.1007/s10664-006-9034-0
   METTALA E, 1992, CMUSEI92SR9
   MILLS HD, 1972, 726015 IBM FED SYST
   Redwine S. T.  Jr., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P189
   RINKER G, 2002, GROUND SYST ARCH WOR
   Roshandel R, 2004, ACM T SOFTW ENG METH, V13, P240, DOI 10.1145/1018210.1018213
   Roshandel R., 2006, 28th International Conference on Software Engineering Proceedings, P853, DOI 10.1145/1134285.1134432
   ROSHANDEL R, 2004, P 4 WORK IEEE IFIP C
   STONE P, 2003, MULTIAGENT COMPETITI, P224
   Tracz W., 1995, SIGSOFT Software Engineering Notes, V20, P49, DOI 10.1145/219308.219318
NR 21
TC 2
Z9 3
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2009
VL 14
IS 5
BP 579
EP 601
DI 10.1007/s10664-008-9096-2
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 477UG
UT WOS:000268543800004
DA 2024-07-18
ER

PT J
AU Yu, L
AF Yu, Liguo
TI Understanding component co-evolution with a study on Linux
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software evolution; co-evolution; coupling; Linux
ID MINING VERSION HISTORIES; OBJECT-ORIENTED SOFTWARE; COUPLING
   MEASUREMENT; QUALITY; DESIGN; MAINTAINABILITY; EVOLUTION; KERNEL
AB After a software system has been delivered, it inevitably has to change to remain useful. Evolutionary coupling measures the change dependencies between software components. Reference coupling measures the architecture dependencies between software components. In this paper, we present a method to correlate evolutionary coupling and reference coupling. We study the evolution of 597 consecutive versions of Linux and measure the evolutionary coupling and reference coupling among 12 kernel modules. We compare 12 pairs of evolutionary coupling data and reference coupling data. The results show that linear correlation exists between evolutionary coupling and reference coupling. We conclude that in Linux, the dependencies between software components induced via the system architecture have noticeable effects on kernel module co-evolution.
C1 Univ S Bend, Comp & Informat Sci Dept, South Bend, IN 46634 USA.
RP Yu, L (corresponding author), Univ S Bend, Comp & Informat Sci Dept, 1700 Mishawaka Ave,POB 7111, South Bend, IN 46634 USA.
EM ligyu@iusb.edu
CR [Anonymous], 2001, CATHEDRAL BAZAAR
   [Anonymous], 2004, SEKE
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Arthur LJ., 1988, Software Evolution: The Software Maintenance Challenge
   Briand LC, 2002, ADV COMPUT, V56, P97, DOI 10.1016/S0065-2458(02)80005-5
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hassan AE, 2004, PROC IEEE INT CONF S, P284, DOI 10.1109/ICSM.2004.1357812
   KAFURA D, 1981, J SYST SOFTWARE, V2, P121, DOI 10.1016/0164-1212(81)90032-7
   LEHMAN MM, 1980, P IEEE, V68, P1060, DOI 10.1109/PROC.1980.11805
   Myers Glenford J., 2011, The Art of Software Testing
   Nolan B., 1994, Data analysis: an introduction
   OFFUTT AJ, 1993, J SYST SOFTWARE, V20, P295, DOI 10.1016/0164-1212(93)90072-6
   PERRY DE, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P296, DOI 10.1109/ICSM.1994.336765
   Schach S. R., 2002, IEE Proceedings-Software, V149, P18, DOI 10.1049/ip-sen:20020198
   Schach SR, 2003, SOFTWARE QUAL J, V11, P211, DOI 10.1023/A:1025114726917
   SELBY RW, 1991, IEEE T SOFTWARE ENG, V17, P141, DOI 10.1109/32.67595
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   TROY DA, 1981, J SYST SOFTWARE, V2, P113, DOI 10.1016/0164-1212(81)90031-5
   WEISSGERBER P, 2005, ECL TECHN EXCH WORKS
   Williams CC, 2005, IEEE T SOFTWARE ENG, V31, P466, DOI 10.1109/TSE.2005.63
   Xing ZC, 2005, IEEE T SOFTWARE ENG, V31, P850, DOI 10.1109/TSE.2005.106
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Yu LG, 2004, IEEE T SOFTWARE ENG, V30, P694, DOI 10.1109/TSE.2004.58
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
   Zimmermann T, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P73, DOI 10.1109/IWPSE.2003.1231213
NR 30
TC 21
Z9 21
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2007
VL 12
IS 2
BP 123
EP 141
DI 10.1007/s10664-006-9000-x
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 142YU
UT WOS:000244688000002
DA 2024-07-18
ER

PT J
AU German, DM
AF German, Daniel M.
TI An empirical study of fine-grained software modifications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 20th IEEE International Conference on Software Maintenance (ICSM 2004)
CY SEP 11-14, 2004
CL Chicago, IL
SP IEEE Comp Soc
DE software evolution; version control; software visualization; software
   artifacts
AB Software is typically improved and modified in small increments (we refer to each of these increments as a modification record-MR). MRs are usually stored in a configuration management or version control system and can be retrieved for analysis. In this study we retrieved the MRs from several mature open software projects. We then concentrated our analysis on those MRs that fix defects and provided heuristics to automatically classify them. We used the information in the MRs to visualize what files are changed at the same time, and who are the people who tend to modify certain files. We argue that these visualizations can be used to understand the development stage of in which a project is at a given time (new features are added, or defects are being fixed), the level of modularization of a project, and how developers might interact between each other and the source code of a system.
C1 Univ Victoria, Dept Comp Sci, Software Engn Grp, Victoria, BC, Canada.
C3 University of Victoria
RP German, DM (corresponding author), Univ Victoria, Dept Comp Sci, Software Engn Grp, Victoria, BC, Canada.
EM dmg@uvic.ca
CR Collberg C., 2003, Proceedings of the 2003 ACM symposium on Software visualization-SoftVis '03, P77
   Eick SG, 2002, IEEE T SOFTWARE ENG, V28, P396, DOI 10.1109/TSE.2002.995435
   Fischer M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P90, DOI 10.1109/WCRE.2003.1287240
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   FISHER M, 2003, P INT WORKSH EV LARG
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   GERMAN D, 2003, P 3 WORKSH OP SOURC
   German D., 2004, J SOFTWARE PROCESS I, V8, P201
   German D. M., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P17, DOI 10.1049/ic:20040469
   German D.M., 2004, P 16 INT C SOFTWARE, P336
   German DM, 2004, J SOFTW MAINT EVOL-R, V16, P367, DOI 10.1002/smr.301
   Girba T, 2004, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2004.1357788
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hassan AE, 2004, PROC IEEE INT CONF S, P284, DOI 10.1109/ICSM.2004.1357812
   Hassan AE, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P84, DOI 10.1109/IWPSE.2003.1231214
   Lanza M., 2001, Proceedings of the 4th International Workshop on Principles of Software Evolution, P37
   LERNER J, 2000, 7600 NAT BUR EC RES
   Liu Y, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P102
   LIU Y, 2004, 1 INT WORKSH MIN SOF, P32
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   OSTRAND TJ, 2004, 1 INT WORKSH MIN SOF, P85
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   STOREY MA, 2005, IN PRESS P 2 ACM S S, P193
   Williams CC, 2005, IEEE T SOFTWARE ENG, V31, P466, DOI 10.1109/TSE.2005.63
   Wu JW, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P80
   Wu XM, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P90
   YING A, 2005, IEEE T SOFTWARE ENG, V31, P574
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   ZIMMERMANN T, 2004, 1 INT WORKSH MIN SOF, P2
NR 30
TC 36
Z9 42
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2006
VL 11
IS 3
BP 369
EP 393
DI 10.1007/s10664-006-9004-6
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 063MB
UT WOS:000239021200003
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Song, QB
   Shepperd, M
   Cartwright, K
AF Song, QB
   Shepperd, M
   Cartwright, K
TI A short note on safest default missingness mechanism assumptions
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software effort prediction; missing data; data imputation; missingness
   mechanism
ID IMPUTATION
AB A very common problem when building software engineering models is dealing with missing data. To address this there exist a range of imputation techniques. However, selecting the appropriate imputation technique can also be a difficult problem. One reason for this is that these techniques make assumptions about the underlying missingness mechanism, that is how the missing values are distributed within the data set. It is compounded by the fact that, for small data sets, it may be very difficult to determine what is the missingness mechanism. This means there is a danger of using an inappropriate imputation technique. Therefore, it is necessary to determine what is the safest default assumption about the missingness mechanism for imputation techniques when dealing with small data sets. We examine experimentally, two simple and commonly used techniques: Class Mean Imputation (CMI) and k Nearest Neighbors (k-NN) coupled with two missingness mechanisms: missing completely at random (MCAR) and missing at random (MAR). We draw two conclusions. First, that for our analysis CMI is the preferred technique since it is more accurate. Second, and more importantly, the impact of missingness mechanism on imputation accuracy is not statistically significant. This is a useful finding since it suggests that even for small data sets we can reasonably make a weaker assumption that the missingness mechanism is MAR. Thus both imputation techniques have practical application for small software engineering data sets with missing values.
C1 Sch Design Engn & Comp, Empir Software Engn Res Grp, Bournemouth, Dorset, England.
RP Sch Design Engn & Comp, Empir Software Engn Res Grp, Bournemouth, Dorset, England.
EM qsong@bmth.ac.uk; mshepper@bmth.ac.uk; mcartwri@bmth.ac.uk
RI Shepperd, Martin/F-9683-2013
OI Shepperd, Martin/0000-0003-1874-6145
CR Angelis L, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P4
   [Anonymous], 1986, Software Engineering Metrics and Models
   Fix E., 1952, Discriminatory analysis: Nonparametric discrimination: Small sample performance
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Kirsopp C, 2002, GECCO 2002 GEN EV CO
   Little RJ, 1987, STAT ANAL MISSING DA
   LITTLE RJA, 1988, J AM STAT ASSOC, V83, P1198, DOI 10.2307/2290157
   Myrtveit I, 2001, IEEE T SOFTWARE ENG, V27, P999, DOI 10.1109/32.965340
   Quinlan JR, 1996, ACM COMPUT SURV, V28, P71, DOI 10.1145/234313.234346
   REINSDORF MB, 1996, 276 BUR LAB STAT
   Schafer JL, 1998, MULTIVAR BEHAV RES, V33, P545, DOI 10.1207/s15327906mbr3304_5
   Strike K, 2001, IEEE T SOFTWARE ENG, V27, P890, DOI 10.1109/32.962560
NR 12
TC 20
Z9 20
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2005
VL 10
IS 2
BP 235
EP 243
DI 10.1007/s10664-004-6193-8
PG 9
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 918OT
UT WOS:000228558200005
DA 2024-07-18
ER

PT J
AU Vokác, M
   Tichy, W
   Sjoberg, DIK
   Arisholm, E
   Aldrin, M
AF Vokác, M
   Tichy, W
   Sjoberg, DIK
   Arisholm, E
   Aldrin, M
TI A controlled experiment comparing the maintainability of programs
   designed with and without design patterns -: A replication in a real
   programming environment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE controlled experiment; design patterns; real programming environment;
   qualitative results
AB Software "design patterns" seek to package proven Solutions to design problems in a form that makes it possible to find, adapt and reuse them. To support the industrial use of design patterns, this research investigates when, and how, using patterns is beneficial, and whether some patterns are more difficult to use than others. This paper describes a replication of an earlier con trolled experiment on design patterns in maintenance. with major extensions. Experimental realism was increased by using a real programming environment instead of pen and paper, and paid professionals from multiple major consultancy companies as Subjects.
   Measurements of elapsed time and correctness were analyzed using regression models and an estimation method that took into account the correlations present in the raw data. Together with on-line logging of the subjects' work, this made possible a better qualitative understanding of the results. The results indicate quite strongly that some patterns are much easier to understand and use than others. In particular, the Visitor pattern caused much confusion. Conversely, the patterns Observer and, to a certain extent, Decorator were grasped and used intuitively, even by Subjects with little or no knowledge of patterns.
   The implication is that design patterns are not universally good or bad, but must be used in a way that matches the problem and the people. When approaching a program with documented design patterns, even basic training can improve both the speed and quality of maintenance activities.
C1 Simula Res Lab, N-1325 Lysaker, Norway.
   Univ Karlsruhe, D-76128 Karlsruhe, Germany.
   NOrwegian Comp Ctr, N-0314 Oslo, Norway.
C3 Helmholtz Association; Karlsruhe Institute of Technology
RP Simula Res Lab, N-1325 Lysaker, Norway.
EM marekv@simula.no; tichy@ira.uka.de; dagsj@simula.no; erika@simula.no;
   magne.aldrin@nr.no
RI Aldrin, Magne/A-7425-2017
OI Aldrin, Magne/0000-0003-2718-8528
CR Alexander Christopher., 1978, A Pattern Language: Towns, Buildings, Construction
   [Anonymous], 1987, TIMELESS WAY BUILDIN
   Arisholm E., 2001, Empirical Software Engineering, V6, P231, DOI 10.1023/A:1011439416657
   Arisholm E., 2002, Nordic Journal of Computing, V9, P231
   ARISHOLM E, 2001, THESIS U OSLO
   ARISHOLM E, 2002, NW PER2002 10 NORD W, P81
   BUSCHMANN F, 1996, PATTER ORIENTED SOFT
   Diggle PJ., 2013, ANAL LONGITUDINAL DA
   Efron B, 1993, MONOGRAPHS STAT APPL, DOI DOI 10.1007/978-1-4899-4541-9
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   LIANG KY, 1986, BIOMETRIKA, V73, P13, DOI 10.1093/biomet/73.1.13
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   McCullagh P., 2019, Generalized linear models
   Prechelt L, 2001, IEEE T SOFTWARE ENG, V27, P1134, DOI 10.1109/32.988711
   PRECHELT L, 2000, UNPUB IEEE T SOFTWAR
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   SMITH D, 1996, MA96192 U LANC DEP M
   Yourdon E., 1999, DEATH MARCH
NR 19
TC 56
Z9 69
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2004
VL 9
IS 3
BP 149
EP 195
DI 10.1023/B:EMSE.0000027778.69251.1f
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 836LM
UT WOS:000222557200001
DA 2024-07-18
ER

PT J
AU Cadavid, H
   Andrikopoulos, V
   Avgeriou, P
AF Cadavid, Hector
   Andrikopoulos, Vasilios
   Avgeriou, Paris
TI Improving hardware/software interface management in systems of systems
   through documentation as code
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE System of systems; Interface control document; Documentation as code;
   Technical action research
AB ContextThe management of Interface Control Documents (ICDs) has shown to be a major pain point in the architecting processes of Systems of Systems (SoS).ObjectiveThis work aims to improve on previously identified ICD management issues using the documentation-as-code philosophy as a potential basis for a treatment, and in collaboration with practitioners.MethodWe conducted a Technical Action Research (TAR) study with a group of engineers at the Netherlands Radio Astronomy Institute (ASTRON), in the context of the LOFAR radio telescope. An additional research instrument, in the form of an expert panel, was used to evaluate the transferability of the proposed treatment to alternative domains.ResultsIn-depth insights on previously identified interface management issues were gained. Based on these insights a functional proof-of-concept was developed aimed at addressing these issues following the documentation-as-code principles. In addition to receiving overall positive reviews from practitioners and experts, further areas of improvement and transferability considerations for future work were identified.ConclusionsThe proposed approach, which to our knowledge has not been explored before in this context, is promising to address some of the recurring interfacing-related issues with directed SoS in multiple engineering domains. This could be done mainly by enforcing consistency and completeness on both text-based and formal elements of the ICDs, and turning ICDs into single sources of truth for the architecting processes of large scale SoS.
C1 [Cadavid, Hector; Andrikopoulos, Vasilios; Avgeriou, Paris] Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intelli, Dept Comp Sci, Broerstr 5, NL-9712 CP Groningen, Netherlands.
   [Cadavid, Hector] Univ Escuela Colombiana Ingn, Dept Informat, Ak 45205-59, Bogota 111166, Cundinamarca, Colombia.
C3 University of Groningen
RP Cadavid, H (corresponding author), Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intelli, Dept Comp Sci, Broerstr 5, NL-9712 CP Groningen, Netherlands.; Cadavid, H (corresponding author), Univ Escuela Colombiana Ingn, Dept Informat, Ak 45205-59, Bogota 111166, Cundinamarca, Colombia.
EM h.f.cadavid.rengifo@rug.nl; v.andrikopoulos@rug.nl; p.avgeriou@rug.nl
RI Andrikopoulos, Vasilios/IVH-6273-2023
OI Andrikopoulos, Vasilios/0000-0001-7937-0247; Avgeriou,
   Paris/0000-0002-7101-0754; Cadavid Rengifo, Hector
   Fabio/0000-0003-4965-4243
CR [Anonymous], 2010, PROFILING SYSTEMS US
   Beck R., 2015, FUTURE OBSERVATIONS, P3
   Borrowman AJ, 2016, PROC SPIE, V9913, DOI 10.1117/12.2232590
   Broy M., 2021, MODEL BASED ENG COLL, P353, DOI [10.1007/978-3-030-62136-0_19, DOI 10.1007/978-3-030-62136-0_19]
   Cadavid H, 2020, P 14 ACM IEEE INT S
   Cadavid H, 2022, INFORM SOFTWARE TECH, V150, DOI 10.1016/j.infsof.2022.106984
   Cadavid H, 2022, LECT NOTES COMPUT SC, V13444, P19, DOI 10.1007/978-3-031-16697-6_2
   Cadavid H, 2021, 2021 IEEE 18TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P13, DOI 10.1109/ICSA51549.2021.00010
   Cadavid H, 2020, INFORM SOFTWARE TECH, V118, DOI 10.1016/j.infsof.2019.106202
   Chiozzi G., 2018, Software and Cyberinfrastructure for Astronomy V
   DiMaio M, 2018, 2018 IEEE INT SYST E, P1
   Fairley R. E., 2019, Systems Engineering of Software-Enabled Systems, DOI [10.1002/9781119535041, DOI 10.1002/9781119535041]
   Gentle Anne., 2017, Docs like code
   Guo D, 2020, INT C AER SYST SCI E, P435
   Harvey D., 2012, APCOSE
   ISO IEC, 2019, 21839 ISO IEC
   Japs S., 2021, Procedia CIRP, P187
   Karban R., 2018, MODELING SYSTEMS ENG, P29
   Kontio J., 2008, FOCUS GROUP METHOD E, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, DOI 10.1007/978-1-84800-044-5]
   Lambourne J, 2017, WHY WE USE DOCS CODE
   Louadah H., 2014, AUTOMATING INTERFACE, V1250, P26
   Maier M., 1998, SYST ENG, V1, P267, DOI [DOI 10.1002/(SICI)1520-6858(1998)1:43.0.CO;2-D, 10.1002/(SICI)1520-6858(1998)1:4lt;267::AID-SYS3gt;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4LT;267::AID-SYS3GT;3.0.CO;2-D, DOI 10.1002/(SICI)1520-6858(1998)1:4<267::AID-SYS3>3.0.CO;2-D]
   Ozerova Marina Igorevna, 2020, Software Engineering Perspectives in Intelligent Systems. Proceedings of 4th Computational Methods in Systems and Software 2020. Advances in Intelligent Systems and Computing (AISC 1294), P315, DOI 10.1007/978-3-030-63322-6_25
   Petersen K., 2014, P INT WORKSH LONG TE, P55
   Rahmani Keyvan, 2011, International Journal of Product Lifecycle Management, V5, P73, DOI 10.1504/IJPLM.2011.038103
   Ralph Paul, 2018, P 22 INT C EV ASS SO, P13
   Rong GP, 2020, SOFTWARE PRACT EXPER, V50, P210, DOI 10.1002/spe.2770
   Sheard Sarah, 2018, INSIGHT, V21, P62, DOI 10.1002/inst.12213
   Thomchick Richard, 2018, Proceedings of the Association for Information Science and Technology, V55, DOI 10.1002/pra2.2018.14505501171
   Tsui Roy, 2018, INCOSE International Symposium, V28, P760, DOI 10.1002/j.2334-5837.2018.00514.x
   van Haarlem MP, 2013, ASTRON ASTROPHYS, V556, DOI 10.1051/0004-6361/201220873
   Vipavetz K., 2016, INCOSE INT S, V26, P1129, DOI [10.1002/j.2334-5837.2016.00216.x, DOI 10.1002/J.2334-5837.2016.00216.X]
   Wheatcraft L.S., 2010, INCOSE International Symposium, V20, P1132, DOI 10.1002/j.2334-5837.2010.tb01130.x
   Wieringa Roel J., 2014, Design science methodology for information systems and software engineering
   Yasseri SF, 2019, OCEAN ENG, V191, DOI 10.1016/j.oceaneng.2019.106441
NR 35
TC 1
Z9 1
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 100
DI 10.1007/s10664-023-10350-7
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L7KA0
UT WOS:001024999000002
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Bjarnason, E
   Åberg, P
   Bin Ali, N
AF Bjarnason, Elizabeth
   Aberg, Patrik
   Bin Ali, Nauman
TI Software selection in large-scale software engineering: A model and
   criteria based on interactive rapid reviews
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE CBSE; Component-based; Component selection; Tool selection; Rapid review
ID DECISION-MAKING; IN-HOUSE; TOOLS; OSS; COTS; CHALLENGES; COMPONENTS;
   QUALITY
AB Context Software selection in large-scale software development continues to be ad hoc and ill-structured. Previous proposals for software component selection tend to be technology-specific and/or do not consider business or ecosystem concerns.
   Objective Our main aim is to develop an industrially relevant technology-agnostic method that can support practitioners in making informed decisions when selecting software components for use in tools or in products based on a holistic perspective of the overall environment.
   Method We used method engineering to iteratively develop a software selection method for Ericsson AB based on a combination of published research and practitioner insights. We used interactive rapid reviews to systematically identify and analyse scientific literature and to support close cooperation and co-design with practitioners from Ericsson. The model has been validated through a focus group and by practical use at the case company.
   Results The model consists of a high-level selection process and a wide range of criteria for assessing and for evaluating software to include in business products and tools.
   Conclusions We have developed an industrially relevant model for component selection through active engagement from a company. Co-designing the model based on previous knowledge demonstrates a viable approach to industry-academia collaboration and provides a practical solution that can support practitioners in making informed decisions based on a holistic analysis of business, organisation and technical factors.
C1 [Bjarnason, Elizabeth] Lund Univ, Dept Comp Sci, Lund, Sweden.
   [Aberg, Patrik] Ericsson AB, Lund, Sweden.
   [Bin Ali, Nauman] Blekinge Inst Technol, Dept Software Engn, Karlskrona, Sweden.
C3 Lund University; Ericsson; Blekinge Institute Technology
RP Bjarnason, E (corresponding author), Lund Univ, Dept Comp Sci, Lund, Sweden.
EM elizabeth.bjarnason@cs.lth.se; patrik.aberg@ericsson.com;
   nauman.ali@bth.se
RI Ali, Nauman bin/J-4293-2015
OI Ali, Nauman bin/0000-0001-7266-5632; Bjarnason,
   Elizabeth/0000-0001-9070-0008
FU Lund University
FX Open access funding provided by Lund University.
CR Abdellatief M, 2013, J SYST SOFTWARE, V86, P587, DOI 10.1016/j.jss.2012.10.001
   Adewumi A, 2016, SPRINGERPLUS, V5, DOI 10.1186/s40064-016-3612-4
   Alégroth E, 2020, SOFTWARE QUAL J, V28, P1675, DOI 10.1007/s11219-019-09489-8
   Alnafjan K, 2013, INT J INF
   Alvaro A, 2007, EUROMICRO CONF PROC, P83
   [Anonymous], 2014, ASHRAE J, DOI DOI 10.1007/978-3-319-33328-1_17
   [Anonymous], 2013, ICSOFT 2013
   Ayala C, 2018, EMPIR SOFTW ENG, V23, P3073, DOI 10.1007/s10664-017-9594-1
   Badampudi D, 2016, J SYST SOFTWARE, V121, P105, DOI 10.1016/j.jss.2016.07.027
   Bashroush R, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3034827
   Becker C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P467, DOI 10.1109/ICSE.2015.179
   Biffl Stefan, 2009, Proceedings of the 11th International Conference on Enterprise Information Systems. ISAS, P41
   Bjarnason E, 2021, SUPPLEMENTARY MAT SO
   Borg M, 2019, INFORM SOFTWARE TECH, V112, P18, DOI 10.1016/j.infsof.2019.03.015
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Brown A. W., 1994, Proceedings. Third Symposium on Assessment of Quality Software Development Tools (Cat. No.94TH0635-3), P4, DOI 10.1109/AQSDT.1994.315764
   Cartaxo B., 2020, Rapid Reviews in Software Engineering, P357
   Carvallo JP, 2007, IEEE SOFTWARE, V24, P84, DOI 10.1109/MS.2007.70
   Chatzipetrou P, 2020, SOFTWARE QUAL J, V28, P567, DOI 10.1007/s11219-019-09465-2
   CHURCH T, 1995, SEVENTH INTERNATIONAL WORKSHOP ON COMPUTER-AIDED SOFTWARE ENGINEERING, PROCEEDINGS, P4, DOI 10.1109/CASE.1995.465334
   Daneva M, 1996, PROCEEDINGS OF THE FOURTH INTERNATIONAL SYMPOSIUM ON ASSESSMENT OF SOFTWARE TOOLS, P104, DOI 10.1109/AST.1996.506487
   Delahaye M, 2015, SOFTWARE PRACT EXPER, V45, P875, DOI 10.1002/spe.2312
   DUPLESSIS AL, 1993, INFORM MANAGE, V25, P93, DOI 10.1016/0378-7206(93)90051-T
   Engström E, 2017, SOFTWARE QUAL J, V25, P1269, DOI 10.1007/s11219-016-9322-x
   Garg R, 2022, IEEE T ENG MANAGE, V69, P2196, DOI 10.1109/TEM.2020.3001943
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Gezici B, 2019, EUROMICRO CONF PROC, P363, DOI 10.1109/SEAA.2019.00062
   Glott R, 2010, EUROMICRO CONF PROC, P439, DOI 10.1109/SEAA.2010.23
   Goulao M, 2004, 5 FEMININE ORDINAL I
   Hakansson Ebba, 2020, 2020 IEEE First International Workshop on Requirements Engineering for Well-Being, Aging, and Health (REWBAH), P57, DOI 10.1109/REWBAH51211.2020.00013
   Jabbari R, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1957
   Kersten M, 2018, IEEE SOFTWARE, V35, P14, DOI 10.1109/MS.2018.1661330
   Kornecki AJ, 2005, INNOV SYST SOFTW ENG, V1, P176, DOI 10.1007/s11334-005-0013-1
   Krawatzeck R, 2015, PACIS, P22
   LEBLANC LA, 1994, INFORM SOFTWARE TECH, V36, P267, DOI 10.1016/0950-5849(94)90082-5
   Lending D, 2002, J COMPUT INFORM SYST, V43, P81
   Lester N, 2004, STEP 04, P8
   Li Z, 2018, STATE REPORT DEOPS T
   Linåker J, 2018, J SYST SOFTWARE, V135, P17, DOI 10.1016/j.jss.2017.09.032
   Linåker J, 2020, REQUIR ENG, V25, P115, DOI 10.1007/s00766-019-00310-3
   Lundell B, 2002, COMP STAND INTER, V24, P381, DOI 10.1016/S0920-5489(02)00064-8
   Maqbool B, 2021, HEALTHINF: PROCEEDINGS OF THE 14TH INTERNATIONAL JOINT CONFERENCE ON BIOMEDICAL ENGINEERING SYSTEMS AND TECHNOLOGIES - VOL. 5: HEALTHINF, P175, DOI 10.5220/0010248901750187
   Miguel JP., 2014, Int. J. Softw. Eng. Appl, V5, P31, DOI [DOI 10.5121/IJSEA.2014.5603, 10.5121/ijsea.2014, DOI 10.5121/IJSEA.2014]
   Miller J., 2006, Software Process Improvement and Practice, V11, P601, DOI 10.1002/spip.297
   MOSLEY V, 1992, IEEE SOFTWARE, V9, P29, DOI 10.1109/52.136163
   Nazir S., 2014, ABSTR APPL ANAL, V2014, P12, DOI [10.1155/2014/535970, DOI 10.1155/2014/535970]
   Pahl C, 2019, IEEE T CLOUD COMPUT, V7, P677, DOI 10.1109/TCC.2017.2702586
   Pelechano V, 2006, ACTAS TALLER DESARRO, V227
   Petersen K, 2018, IEEE T SOFTWARE ENG, V44, P237, DOI 10.1109/TSE.2017.2677909
   Phillips C, 1998, 1998 INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: EDUCATION & PRACTICE, PROCEEDINGS, P134, DOI 10.1109/SEEP.1998.707643
   Post G, 2000, INFORM SOFTWARE TECH, V42, P383, DOI 10.1016/S0950-5849(99)00099-3
   PRATHER B, 1993, PROCEEDINGS OF THE SIXTH INTERNATIONAL WORKSHOP ON COMPUTER-AIDED SOFTWARE ENGINEERING - CASE 93, P60, DOI 10.1109/CASE.1993.634806
   Rico S., 2020, Guidelines for conducting interactive rapid reviews in software engineering - from a focus on technology transfer to knowledge exchange
   Rivas Lornel, 2008, 2008 The Third International Conference on Software Engineering Advances (ICSEA), P264, DOI 10.1109/ICSEA.2008.51
   Samoladas I, 2008, INT FED INFO PROC, V275, P237
   Sen R, 2012, DECIS SUPPORT SYST, V52, P364, DOI 10.1016/j.dss.2011.09.003
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Suomi R., 1992, Information Services & Use, V12, P85
   Taherdoost H, 2019, PROCEDIA MANUF, V32, P1024, DOI 10.1016/j.promfg.2019.02.317
   Torchiano M, 2004, IEEE SOFTWARE, V21, P88, DOI 10.1109/MS.2004.1270770
   Wohlin C, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2345
   Wohlin C, 2016, LECT NOTES BUS INF P, V240, P1, DOI 10.1007/978-3-319-40515-5_1
   Wurster M, 2020, SICS SOFTWARE, V35, P63, DOI 10.1007/s00450-019-00412-x
NR 63
TC 1
Z9 1
U1 2
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 51
DI 10.1007/s10664-023-10288-w
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9K8VP
UT WOS:000941140100001
PM 36875006
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Jiang, ZG
   Tang, XW
   Zheng, ZB
   Guo, JY
   Luo, XP
   Li, Y
AF Jiang, Zigui
   Tang, Xiuwen
   Zheng, Zibin
   Guo, Jinyan
   Luo, Xiapu
   Li, Yin
TI Calling relationship investigation and application on Ethereum
   Blockchain System
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Blockchain; Ethereum; Smart contract; Calling relationship
ID SEGMENTATION
AB Blockchain technologies are increasingly applied to build secure and efficient trustworthy software systems. As the core of the blockchain, large numbers of smart contracts are created and deployed on chain so that end users can call smart contracts to perform various operations in these systems. Such calling relationships between users and smart contracts construct the blockchain network. In order to analyze user behaviors and optimize blockchain systems, it is necessary to understand the calling relationships between blockchain end users and smart contracts in details. Therefore, this paper adopts the famous public blockchain platform Ethereum as a case to investigate the calling relationships. In particular, we conduct an empirical study on Ethereum based on more than 764 million smart contract calling records on 13.25 million blocks from August 2015 to September 2021. Four research questions are proposed and answered: (1) We draw an overall picture of calling behaviors on Ethereum by using four overview indices, which are new user, active user, user retention and user attrition. (2) We categorize users by constructing RFM models based on three user indices, which are last call interval, call frequency and service charge. (3) We categorize smart contracts by constructing BCG matrices with two contract indices including market share and gas growth. (4) We conduct ETH price prediction and smart contract recommendation by employing the analysis results. Our observations and implications aim to provide some inspirations on further researches and applications for enhancing the activeness of Ethereum and improving the efficiency of smart contracts.
C1 [Jiang, Zigui; Zheng, Zibin] Sun Yat Sen Univ, Sch Software Engn, Zhuhai, Peoples R China.
   [Tang, Xiuwen] Sun Yat Sen Univ, Sch Comp Sci & Engn, Guangzhou, Peoples R China.
   [Guo, Jinyan] Sun Yat Sen Univ, Sch Math, Guangzhou, Peoples R China.
   [Luo, Xiapu] Hong Kong Polytech Univ, Coll Comp, Hong Kong, Peoples R China.
   [Li, Yin] Inst Software Applicat Technol Guangzhou, Guangzhou, Peoples R China.
C3 Sun Yat Sen University; Sun Yat Sen University; Sun Yat Sen University;
   Hong Kong Polytechnic University
RP Zheng, ZB (corresponding author), Sun Yat Sen Univ, Sch Software Engn, Zhuhai, Peoples R China.
EM jiangzg3@mail.sysu.edu.cn; tangxw23@mail2.sysu.edu.cn;
   zhzibin@mail.sysu.edu.cn; guojy53@mail2.sysu.edu.cn;
   luo@comp.polyu.edu.hk; liyin@gz.iscas.ac.cn
RI Zheng, Zibin/E-3024-2014
FU National Natural Science Foundation of China [62032025, 62002393];
   Technology Program of Guangzhou, China [202103050004]; HK ITF Project
   [GHP05219SZ]
FX AcknowledgementsThis work was supported by the National Natural Science
   Foundation of China (62032025, 62002393), Technology Program of
   Guangzhou, China (202103050004), and HK ITF Project (GHP05219SZ).
CR Abay Nazmiye Ceren, 2019, 2019 IEEE International Conference on Data Mining (ICDM), P946, DOI 10.1109/ICDM.2019.00105
   Agarwal Aastha, 2021, 2021 IEEE Mysore Sub Section International Conference (MysuruCon), P538, DOI 10.1109/MysuruCon52639.2021.9641735
   Akcora Cuneyt G., 2018, Advances in Knowledge Discovery and Data Mining. 22nd Pacific-Asia Conference, PAKDD 2018. Proceedings: LNAI 10939, P765, DOI 10.1007/978-3-319-93040-4_60
   Amin A, 2020, J SUPERCOMPUT, V76, P3924, DOI 10.1007/s11227-017-2149-9
   Bai QL, 2022, IEEE T COMPUT SOC SY, V9, P851, DOI 10.1109/TCSS.2021.3108788
   Bartoletti M, 2020, FUTURE GENER COMP SY, V102, P259, DOI 10.1016/j.future.2019.08.014
   Berdik D, 2021, INFORM PROCESS MANAG, V58, DOI 10.1016/j.ipm.2020.102397
   Bosu A, 2019, EMPIR SOFTW ENG, V24, P2636, DOI 10.1007/s10664-019-09708-7
   Chatterjee Krishnendu, 2018, Programming Languages and Systems. 27th European Symposium on Programming, ESOP 2018, held as part of the European Joint Conferences on Theory and Practice of Software, ETAPS 2018. Proceedings: LNCS 10801, P739, DOI 10.1007/978-3-319-89884-1_26
   Chen T, 2018, IEEE INFOCOM SER, P1484, DOI 10.1109/INFOCOM.2018.8486401
   Chen T, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P81, DOI 10.1145/3183399.3183420
   Chen T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P442, DOI 10.1109/SANER.2017.7884650
   Chen WL, 2019, IEEE INFOCOM SER, P964, DOI [10.1109/infocom.2019.8737364, 10.1109/INFOCOM.2019.8737364]
   Chen WL, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P1409, DOI 10.1145/3178876.3186046
   [陈伟利 Chen Weili], 2018, [计算机研究与发展, Journal of Computer Research and Development], V55, P1853
   Cheng CH, 2009, EXPERT SYST APPL, V36, P4176, DOI 10.1016/j.eswa.2008.04.003
   Fan XL, 2021, IEEE T SERV COMPUT, V14, P58, DOI 10.1109/TSC.2017.2782793
   Ferretti S, 2020, CONCURR COMP-PRACT E, V32, DOI 10.1002/cpe.5493
   Fu X, 2017, DECIS SUPPORT SYST, V101, P51, DOI 10.1016/j.dss.2017.05.015
   Gaihre A, 2018, IEEE INT CONF BIG DA, P1198, DOI 10.1109/BigData.2018.8622442
   Guo DC, 2019, INFORM SCIENCES, V492, P58, DOI 10.1016/j.ins.2019.04.013
   Han Q, 2020, CHAOS, V30, DOI 10.1063/1.5135739
   Harlev MA, 2018, PROCEEDINGS OF THE 51ST ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES (HICSS), P3497
   Huang BT, 2017, MULTIMED TOOLS APPL, V76, P20099, DOI 10.1007/s11042-017-4396-4
   Huang Y, 2019, INT C PROGRAM COMPRE, P260, DOI 10.1109/ICPC.2019.00045
   Hughes A., 1994, STRATEGIC DATABASE M
   Jiang Z., 2022, IEEE T SERV COMPUT, V1, P1
   Jourdan M, 2018, INT CONF DAT MIN WOR, P55, DOI 10.1109/ICDMW.2018.00016
   Kalra S, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23082
   Kiffer L, 2018, IMC'18: PROCEEDINGS OF THE INTERNET MEASUREMENT CONFERENCE, P494, DOI 10.1145/3278532.3278575
   Kondo M, 2020, EMPIR SOFTW ENG, V25, P4617, DOI 10.1007/s10664-020-09852-5
   Kumar D, 2020, ADV INTELL SYST COMP, V1056, P103, DOI 10.1007/978-981-15-0199-9_9
   Lee XT, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P155, DOI 10.1145/3366423.3380103
   Lin D, 2020, IEEE T CIRCUITS-II, V67, P2737, DOI 10.1109/TCSII.2020.2968376
   Luu L, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P706, DOI 10.1145/2810103.2813659
   Maesa DD, 2017, STUD COMPUT INTELL, V693, P749, DOI 10.1007/978-3-319-50901-3_59
   Maesa DD, 2018, INT J DATA SCI ANAL, V6, P63, DOI 10.1007/s41060-017-0074-x
   Mezquita Y., 2021, INT C BLOCKCHAIN APP, P339, DOI 10.1007/978-3-030-86162-9_3
   Nakamoto S., 2008, DECENT BUS REV, V21260, DOI https://bitcoin.org/bitcoin.pdf
   Nikolic I, 2018, 34TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE (ACSAC 2018), P653, DOI 10.1145/3274694.3274743
   Oliva GA, 2020, EMPIR SOFTW ENG, V25, P1864, DOI 10.1007/s10664-019-09796-5
   Rathore H, 2020, SENSORS-BASEL, V20, DOI 10.3390/s20010282
   Reeves M., 2014, BCG CLASSICS REVISIT
   Somin S., 2018, COMPLEX SYST, P439, DOI DOI 10.1007/978-3-319-96661-8_45
   Tasca P, 2018, J RISK FINANC, V19, P94, DOI 10.1108/JRF-03-2017-0059
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Wei J, 2017, EXPERT SYST APPL, V69, P29, DOI 10.1016/j.eswa.2016.09.040
   Wu JJ, 2021, J NETW COMPUT APPL, V190, DOI 10.1016/j.jnca.2021.103139
   Wu JJ, 2022, IEEE T SYST MAN CY-S, V52, P2237, DOI 10.1109/TSMC.2021.3049278
   Wu J, 2020, MATH PROBL ENG, V2020, DOI 10.1155/2020/8884227
   Xie FF, 2021, KNOWL-BASED SYST, V211, DOI 10.1016/j.knosys.2020.106524
   Xiong RB, 2018, EXPERT SYST APPL, V110, P191, DOI 10.1016/j.eswa.2018.05.039
   Yang LQ, 2019, LECT NOTES COMPUT SC, V11911, P130, DOI 10.1007/978-3-030-34083-4_13
   Yousaf H, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P837
   Zhao YZ, 2020, PLANT SOIL, V452, P19, DOI 10.1007/s11104-020-04520-5
   Zheng PL, 2020, IEEE OPEN J COMP SOC, V1, P95, DOI 10.1109/OJCS.2020.2990458
   Zou WQ, 2021, IEEE T SOFTWARE ENG, V47, P2084, DOI 10.1109/TSE.2019.2942301
NR 57
TC 0
Z9 0
U1 1
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 31
DI 10.1007/s10664-022-10240-4
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7V5RH
UT WOS:000912870500002
DA 2024-07-18
ER

PT J
AU Mazrae, PR
   Mens, T
   Golzadeh, M
   Decan, A
AF Rostami Mazrae, Pooya
   Mens, Tom
   Golzadeh, Mehdi
   Decan, Alexandre
TI On the usage, co-usage and migration of CI/CD tools: A qualitative
   analysis
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE CI; CD; Collaborative software development; Workflow automation;
   Qualitative analysis; Empirical software engineering
ID CONTINUOUS INTEGRATION; DATA SATURATION; DELIVERY; VALIDITY
AB Continuous integration, delivery and deployment (CI/CD) is used to support the collaborative software development process. CI/CD tools automate a wide range of activities in the development workflow such as testing, linting, updating dependencies, creating and deploying releases, and so on. Previous quantitative studies have revealed important changes in the landscape of CI/CD usage, with the increasing popularity of cloud-based services, and many software projects migrating to other CI/CD tools. In order to understand the reasons behind these changes in CI/CD usage, this paper presents a qualitative study based on in-depth interviews with 22 experienced software practitioners reporting on their usage, co-usage and migration of 31 different CI/CD tools. Following an inductive and deductive coding process, we analyse the interviews and found a high amount of competition between CI/CD tools. We observe multiple reasons for co-using different CI/CD tools within the same project, and we identify the main reasons and detractors for migrating to different alternatives. Among all reported migrations, we observe a clear trend of migrations away from Travis and migrations towards GitHub Actions and we identify the main reasons behind them.
C1 [Rostami Mazrae, Pooya; Mens, Tom; Golzadeh, Mehdi; Decan, Alexandre] Univ Mons, Software Engn Lab, Mons, Belgium.
C3 University of Mons
RP Mazrae, PR (corresponding author), Univ Mons, Software Engn Lab, Mons, Belgium.
EM pooya.rostami.m@gmail.com; tom.mens@umons.ac.be;
   golzadeh.mehdi@gmail.com; alexandre.decan@umons.ac.be
RI Mens, Tom/B-6518-2013
OI Mens, Tom/0000-0003-3636-5020; Rostami Mazrae, Pooya/0000-0002-4859-1546
FU Fonds de la Recherche Scientifique - FNRS [ARC-21/25 UMONS3]; Action de
   Recherche Concertee financee par le Ministere de la Communaute francaise
   - Direction generale de l'Enseignement non obligatoire et de la
   Recherche scientifique [ARC-21/25 UMONS3]; Fonds de la Recherche
   Scientifique - FNRS [O.0157.18F-RG43, T.0149.22, F.4515.23]
FX This work is supported by the ARC-21/25 UMONS3 Action de Recherche
   Concertee financee par le Ministere de la Communaute francaise -
   Direction generale de l'Enseignement non obligatoire et de la Recherche
   scientifique, as well as by the Fonds de la Recherche Scientifique -
   FNRS under grant numbers O.0157.18F-RG43, T.0149.22 and F.4515.23.
CR Abdalkareem R, 2021, IEEE T SOFTWARE ENG, V47, P2740, DOI 10.1109/TSE.2020.2967380
   Abdalkareem R, 2021, IEEE T SOFTWARE ENG, V47, P448, DOI 10.1109/TSE.2019.2897300
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   [Anonymous], 2015, 2015 IEEE 8 INT C SO
   Beck K., 2000, EXTREME PROGRAMMING
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Bernardo JH, 2018, IEEE WORK CONF MIN S, P131, DOI 10.1145/3196398.3196421
   Betz RM, 2013, 2013 5TH INTERNATIONAL WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING (SE-CSE), P68, DOI 10.1109/SECSE.2013.6615101
   Chen LP, 2017, J SYST SOFTWARE, V128, P72, DOI 10.1016/j.jss.2017.02.013
   Decan A, 2022, 2017 IEEE 24 INT C S
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Elazhary O, 2021, IEEE T SOFTWARE ENG, V48, P2570, DOI 10.1109/TSE.2021.3064953
   Esfahani H, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P11, DOI 10.1145/2889160.2889222
   Foundjem A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10167-w
   Fowler M., 2006, Continuous integration
   Fusch PI, 2015, QUAL REP, V20, P1408
   Gallaba K, 2022, IEEE T SOFTWARE ENG, V48, P2040, DOI 10.1109/TSE.2020.3048335
   Ghaleb TA, 2019, EMPIR SOFTW ENG, V24, P2102, DOI 10.1007/s10664-019-09695-9
   Golzadeh M, 2022, INT C SOFTWARE ANAL
   Guest G, 2006, FIELD METHOD, V18, P59, DOI 10.1177/1525822X05279903
   Gupta Y, 2017, IEEE WORK CONF MIN S, P491, DOI 10.1109/MSR.2017.37
   Hilton M, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P197, DOI 10.1145/3106237.3106270
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Holmstrom H, 2006, 2006 IEEE INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P3, DOI 10.1109/ICGSE.2006.261210
   Jin XH, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111292
   Jin XH, 2021, PROC INT CONF SOFTW, P213, DOI 10.1109/ICSE43902.2021.00031
   Jin XH, 2020, PROC INT CONF SOFTW, P13, DOI 10.1145/3377811.3380437
   Jixiang Lu, 2014, 2014 International Conference on Power System Technology (POWERCON 2014), P2441, DOI 10.1109/POWERCON.2014.6993503
   Kim M, 2016, PROC INT CONF SOFTW, P96, DOI 10.1145/2884781.2884783
   Kinsman T, 2021, IEEE WORK CONF MIN S
   Kulas M, 2014, PROC SPIE, V9152, DOI 10.1117/12.2056218
   Leppanen Marko, 2015, IEEE Software, V32, P64, DOI 10.1109/MS.2015.50
   Li Z, 2022, P IEEE S SECUR PRIV, P2397, DOI [10.1109/SP46214.2022.00022, 10.1109/SP46214.2022.9833803]
   Lianping Chen, 2015, IEEE Software, V32, P50, DOI 10.1109/MS.2015.27
   Machiraju V., 2021, CHANGE AZURE PIPELIN
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   Mendy M, 2020, NEW PRICING MODEL TR
   Meyer AN, 2021, IEEE T SOFTWARE ENG, V47, P863, DOI 10.1109/TSE.2019.2904957
   Rahman A, 2018, PROCEEDINGS OF THE 4TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN'18), P8, DOI 10.1145/3278142.3278149
   Ralph Paul, 2018, P 22 INT C EV ASS SO, P13
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Russell Bernard H., 2016, ANAL QUALITATIVE DAT
   Savor T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P21, DOI 10.1145/2889160.2889223
   Shahin M, 2017, IEEE ACCESS, V5, P3909, DOI 10.1109/ACCESS.2017.2685629
   Soares E, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10114-1
   Stahl Daniel, 2013, P 2013 12 IASTED INT, P736
   Tingting Chen, 2021, 2021 IEEE 21st International Conference on Software Quality, Reliability and Security Companion (QRS-C), P01, DOI 10.1109/QRS-C55045.2021.00163
   Valenzuela-Toledo P, 2022, INT C SOFTWARE ANAL
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Vassallo C, 2019, PROC INT CONF SOFTW, P105, DOI 10.1109/ICSE.2019.00028
   Vassallo C, 2018, PROC IEEE INT CONF S, P564, DOI 10.1109/ICSME.2018.00068
   Widder DG, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P647, DOI 10.1145/3338906.3338922
   Widder DG, 2018, IEEE WORK CONF MIN S, P165, DOI 10.1145/3196398.3196422
   Zampetti F, 2017, IEEE WORK CONF MIN S, P334, DOI 10.1109/MSR.2017.2
NR 54
TC 1
Z9 1
U1 9
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 52
DI 10.1007/s10664-022-10285-5
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9R0QN
UT WOS:000945360900001
DA 2024-07-18
ER

PT J
AU Li, YK
   Soliman, M
   Avgeriou, P
AF Li, Yikun
   Soliman, Mohamed
   Avgeriou, Paris
TI Identifying self-admitted technical debt in issue tracking systems using
   machine learning
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Self-admitted technical debt; Technical debt identification; Issue
   tracking system; Deep learning; Transfer learning
ID IDENTIFICATION
AB Technical debt is a metaphor indicating sub-optimal solutions implemented for short-term benefits by sacrificing the long-term maintainability and evolvability of software. A special type of technical debt is explicitly admitted by software engineers (e.g. using a TODO comment); this is called Self-Admitted Technical Debt or SATD. Most work on automatically identifying SATD focuses on source code comments. In addition to source code comments, issue tracking systems have shown to be another rich source of SATD, but there are no approaches specifically for automatically identifying SATD in issues. In this paper, we first create a training dataset by collecting and manually analyzing 4,200 issues (that break down to 23,180 sections of issues) from seven open-source projects (i.e., Camel, Chromium, Gerrit, Hadoop, HBase, Impala, and Thrift) using two popular issue tracking systems (i.e., Jira and Google Monorail). We then propose and optimize an approach for automatically identifying SATD in issue tracking systems using machine learning. Our findings indicate that: 1) our approach outperforms baseline approaches by a wide margin with regard to the F1-score; 2) transferring knowledge from suitable datasets can improve the predictive performance of our approach; 3) extracted SATD keywords are intuitive and potentially indicating types and indicators of SATD; 4) projects using different issue tracking systems have less common SATD keywords compared to projects using the same issue tracking system; 5) a small amount of training data is needed to achieve good accuracy.
C1 [Li, Yikun; Soliman, Mohamed; Avgeriou, Paris] Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intelli, Groningen, Netherlands.
C3 University of Groningen
RP Li, YK (corresponding author), Univ Groningen, Bernoulli Inst Math Comp Sci & Artificial Intelli, Groningen, Netherlands.
EM yikun.li@rug.nl; m.a.m.soliman@rug.nl; p.avgeriou@rug.nl
OI Li, Yikun/0000-0002-1566-725X; Avgeriou, Paris/0000-0002-7101-0754
FU ITEA3; RVO [17038]
FX This study was funded by ITEA3 and RVO under grant agreement No. 17038
   VISDOM (https://visdom-project.github.io/website).
CR Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   Alves NSR, 2016, INFORM SOFTWARE TECH, V70, P100, DOI 10.1016/j.infsof.2015.10.008
   [Anonymous], 2014, Proceedings of the 2014 conference on empirical methods in natural language processing (EMNLP), DOI [DOI 10.3115/V1/D14-1181, 10.3115/v1/D14-1181]
   [Anonymous], 2017, P ACL
   Avgeriou P, 2016, Dagstuhl reports, V6, DOI DOI 10.4230/DAGREP.6.4.110
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Bellomo S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P327, DOI [10.1145/2901739.2901754, 10.1109/MSR.2016.041]
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Dai K., 2017, QUASOQ APSEC, P59
   Farias MAD, 2017, LECT NOTES BUS INF P, V291, P284, DOI 10.1007/978-3-319-62386-3_14
   Efstathiou V, 2018, IEEE WORK CONF MIN S, P38, DOI 10.1145/3196398.3196448
   Ernst N. A., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P61, DOI 10.1109/MTD.2012.6226002
   Fernandez A., 2018, LEARNING IMBALANCED
   Fleiss J., 2003, STAT METHODS RATES P, P598, DOI DOI 10.1002/0471445428.CH18
   Flisar J, 2019, IEEE ACCESS, V7, P106475, DOI 10.1109/ACCESS.2019.2933318
   Genkin A, 2007, TECHNOMETRICS, V49, P291, DOI 10.1198/004017007000000245
   Gu ZG, 2014, BIOINFORMATICS, V30, P2811, DOI 10.1093/bioinformatics/btu393
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Kamei E.d.S., 2016, QUASOQ TDA APSEC, P68
   Kowsari K, 2019, INFORMATION, V10, DOI 10.3390/info10040150
   Li YK, 2020, EUROMICRO CONF PROC, P495, DOI 10.1109/SEAA51224.2020.00083
   Li ZY, 2015, J SYST SOFTWARE, V101, P193, DOI 10.1016/j.jss.2014.12.027
   Liu ZX, 2018, PROC IEEE ACM INT C, P9, DOI 10.1145/3183440.3183478
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   McCallum A., 1998, AAAI 98 WORKSH LEARN, V752, P41, DOI DOI 10.1109/TSMC.1985.6313426
   Merten T., 2015, P REFSQ WORKSH, P114
   Mikolov T, 2018, PROCEEDINGS OF THE ELEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2018), P52
   Ortu M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P480, DOI [10.1145/2901739.2903505, 10.1109/MSR.2016.059]
   Perkins D.N., 1992, INT ENCY ED, V2nd, P1, DOI DOI 10.1016/B978-0-08-097086-8.92040-3
   Phan H, 2017, ARXIV 170803211
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Ren XX, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3324916
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Semwal T., 2018, P 2018 SIAM INT C DA, P513, DOI [DOI 10.1137/1.9781611975321.58, 10.1137/1.9781611975321.58]
   Shalev-Shwartz Shai, 2014, Understanding machine learning: From theory to algorithms
   Sierra G, 2019, J SYST SOFTWARE, V152, P70, DOI 10.1016/j.jss.2019.02.056
   Smith T, 2018, MOST IMPORTANT PLAYE
   Steidl D, 2013, CONF PROC INT SYMP C, P83, DOI 10.1109/ICPC.2013.6613836
   Sun AX, 2009, DECIS SUPPORT SYST, V48, P191, DOI 10.1016/j.dss.2009.07.011
   Tan SB, 2006, EXPERT SYST APPL, V30, P290, DOI 10.1016/j.eswa.2005.07.019
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Van Solingen R., 2002, ENCY SOFTWARE ENG
   Wehaibi S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P179, DOI 10.1109/SANER.2016.72
   Wei Jason, 2019, P 2019 C EMP METH NA, P6383
   Wieting J, 2015, ARXIV 151108198
   Xavier L, 2020, ARXIV 200309418
   Xu BX, 2012, J COMPUT, V7, P2913, DOI 10.4304/jcp.7.12.2913-2920
   Yao L, 2019, AAAI CONF ARTIF INTE, P7370
   Zampetti F, 2018, IEEE WORK CONF MIN S, P526, DOI 10.1145/3196398.3196423
   Zhang X, 2015, ADV NEUR IN, V28
   Zhang Y, 2017, ADV SOC SCI EDUC HUM, V185, P253
NR 53
TC 7
Z9 7
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 131
DI 10.1007/s10664-022-10128-3
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2X0JK
UT WOS:000824900100001
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Ojdanic, M
   Ma, W
   Laurent, T
   Chekam, TT
   Ventresque, A
   Papadakis, M
AF Ojdanic, Milos
   Ma, Wei
   Laurent, Thomas
   Chekam, Thierry Titcheu
   Ventresque, Anthony
   Papadakis, Mike
TI On the use of commit-relevant mutants
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mutation testing; Change-relevant mutants; Continuous integration;
   Regression testing
ID MUTATION ANALYSIS; PRIORITIZATION; MINIMIZATION; SELECTION; CRITERIA
AB Applying mutation testing to test subtle program changes, such as program patches or other small-scale code modifications, requires using mutants that capture the delta of the altered behaviours. To address this issue, we introduce the concept of commit-relevant mutants, which are the mutants that interact with the behaviours of the system affected by a particular commit. Therefore, commit-aware mutation testing, is a test assessment metric tailored to a specific commit. By analysing 83 commits from 25 projects involving 2,253,610 mutants in both C and Java, we identify the commit-relevant mutants and explore their relationship with other categories of mutants. Our results show that commit-relevant mutants represent a small subset of all mutants, which differs from the other classes of mutants (subsuming and hard-to-kill), and that the commit-relevant mutation score is weakly correlated with the traditional mutation score (Kendall/Pearson 0.15-0.4). Moreover, commit-aware mutation analysis provides insights about the testing of a commit, which can be more efficient than the classical mutation analysis; in our experiments, by analysing the same number of mutants, commit-aware mutants have better fault-revelation potential (30% higher chances of revealing commit-introducing faults) than traditional mutants. We also illustrate a possible application of commit-aware mutation testing as a metric to evaluate test case prioritisation.
C1 [Ojdanic, Milos; Ma, Wei; Chekam, Thierry Titcheu; Papadakis, Mike] Univ Luxembourg, SnT, Esch Sur Alzette, Luxembourg.
   [Laurent, Thomas; Ventresque, Anthony] Univ Coll Dublin, Lero Sch Comp Sci, Dublin, Ireland.
C3 University of Luxembourg; University College Dublin
RP Ojdanic, M (corresponding author), Univ Luxembourg, SnT, Esch Sur Alzette, Luxembourg.
EM milos.ojdanic@uni.lu; wei.ma@uni.lu; thomas.laurent@ucdconnect.ie;
   thierry.titcheu.chekam@ses.com; anthony.ventresque@ucd.ie;
   mike.papadakis@uni.lu
RI Ma, Wei/JWQ-0338-2024; Laurent, Thomas/ABM-5202-2022
OI Ma, Wei/0000-0001-8945-5877; Laurent, Thomas/0000-0002-0953-774X;
   Ojdanic, Milos/0000-0001-8213-3381
FU Luxembourg National Research Funds (FNR) through the CORE project
   [C17/IS/11686509/CODEMATES]; Science Foundation Ireland [13/RC/2094];
   Irish Research Council [GOIPG/2017/1829]; Irish Research Council (IRC)
   [GOIPG/2017/1829] Funding Source: Irish Research Council (IRC)
FX This work is supported by the Luxembourg National Research Funds (FNR)
   through the CORE project grant C17/IS/11686509/CODEMATES and, in part,
   by Science Foundation Ireland grant 13/RC/2094. T. Laurent is supported
   by an Irish Research Council grant (GOIPG/2017/1829).
CR Ammann P, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P21, DOI 10.1109/ICST.2014.13
   Ammann Paul, 2008, Introduction to software testing, V1st
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], 2010, P ACM SIGSOFT INT S
   [Anonymous], 2013, JOINT M EUROPEAN SOF, DOI [10.1145/2491411.2491430, DOI 10.1145/2491411.2491430]
   Apiwattanapong T, 2006, TAIC PART - TESTING: ACADEMIC & INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P137, DOI 10.1109/TAIC-PART.2006.18
   B_ohme M., 2014, INT S SOFTWARE TESTI, P105
   Binkley D, 1997, IEEE T SOFTWARE ENG, V23, P498, DOI 10.1109/32.624306
   Binkley D, 2015, IEEE INT WORK C SO, P1, DOI 10.1109/SCAM.2015.7335396
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Cachia MA, 2013, ELECTRON NOTES THEOR, V294, P2, DOI 10.1016/j.entcs.2013.02.012
   Cadar C., 2008, Proc. USENIX OSDI
   Chekam T T, 2020, AST 20 INT C AUTOMAT, P4, DOI [10.1145/3387903.3389316, DOI 10.1145/3387903.3389316]
   Chekam T T, 2020, ARXIV 200102941
   Chekam TT, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1080, DOI 10.1145/3338906.3341180
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   Coles H., 2016, P 25 INT S SOFTW TES, P449
   Di Nardo D, 2015, SOFTW TEST VERIF REL, V25, P371, DOI 10.1002/stvr.1572
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Evans R.B., 2007, EUR SOFTW ENG C S FD
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Fang CR, 2012, SCI CHINA INFORM SCI, V55, P2826, DOI 10.1007/s11432-012-4746-9
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Garg A, 2023, IEEE T SOFTWARE ENG, V49, P24, DOI 10.1109/TSE.2022.3140510
   Gheyi R., 2021, INF SOFTW TECHNOL, V132, P106496, DOI [10.1016/j.infsof.2020.106496, DOI 10.1016/J.INFSOF.2020.106496]
   Hariri F, 2019, IEEE INT CONF SOFTW, P114, DOI 10.1109/ICST.2019.00021
   Henard C, 2016, PROC INT CONF SOFTW, P523, DOI 10.1145/2884781.2884791
   Jia Y, 2009, INFORM SOFTWARE TECH, V51, P1379, DOI 10.1016/j.infsof.2009.04.016
   Jia Yue, 2016, P 25 INT S SOFTWARE, P354
   Khatibsyarbini M, 2018, INFORM SOFTWARE TECH, V93, P74, DOI 10.1016/j.infsof.2017.08.014
   Kintis M, 2018, IEEE T SOFTWARE ENG, V44, P308, DOI 10.1109/TSE.2017.2684805
   Kintis M, 2010, ASIA PAC SOFWR ENG, P300, DOI 10.1109/APSEC.2010.42
   Kuchta T, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3208952
   Kurtz B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P571, DOI 10.1145/2950290.2950322
   Kurtz B, 2014, IEEE ICST WORKSHOP, P176, DOI 10.1109/ICSTW.2014.20
   Lam W, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P101, DOI 10.1145/3293882.3330570
   Laurent T, 2017, IEEE INT CONF SOFTW, P430, DOI 10.1109/ICST.2017.47
   Leong C, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P101, DOI 10.1109/ICSE-SEIP.2019.00019
   Li L, 2019, ICSEA, V2019, P13
   Li N, 2009, IEEE ICST WORKSHOP, P220, DOI 10.1109/ICSTW.2009.30
   Lou YL, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P46, DOI 10.1109/ISSRE.2015.7381798
   Luo Q, 2018, PROC IEEE INT CONF S, P240, DOI 10.1109/ICSME.2018.00033
   Ma W, 2020, PROC IEEE INT CONF S, P394, DOI 10.1109/ICSME46990.2020.00045
   Mao DY, 2019, IEEE INT CONF SOFTW, P160, DOI 10.1109/ICST.2019.00025
   Marcozzi M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P456, DOI 10.1145/3180155.3180191
   Marinescu Paul Dan, 2013, P 9 JOINT M FDN SOFT
   OFFUTT AJ, 1993, PROC INT CONF SOFTW, P100, DOI 10.1109/ICSE.1993.346062
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Papadakis M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P537, DOI 10.1145/3180155.3180183
   Papadakis M, 2018, IEEE ICST WORKSHOP, P32, DOI 10.1109/ICSTW.2018.00025
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Person S, 2008, P 16 ACM SIGSOFT INT, DOI [10.1145/1453101.1453131, DOI 10.1145/1453101.1453131]
   Petrovic G, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P163, DOI 10.1145/3183519.3183521
   Qi Dawei., 2010, PROC ASE, P397
   Rothermel G., 1994, SIGSOFT Software Engineering Notes, P169
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Santelices R., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P11, DOI 10.1109/ICST.2011.46
   Santelices Raul, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P218, DOI 10.1109/ASE.2008.32
   Santelices R.A., 2010, P 19 INT S SOFTW TES, P195, DOI [DOI 10.1145/1831708.1831733, 10.1145/1831708.1831733]
   Shin D, 2019, SOFTW TEST VERIF REL, V29, DOI 10.1002/stvr.1695
   Smith BH, 2009, J SYST SOFTWARE, V82, P1819, DOI 10.1016/j.jss.2009.06.031
   Smith BH, 2009, EMPIR SOFTW ENG, V14, P341, DOI 10.1007/s10664-008-9083-7
   Chekam TT, 2020, EMPIR SOFTW ENG, V25, P434, DOI 10.1007/s10664-019-09778-7
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang J, 2019, IEEE T SOFTWARE ENG, V45, P898, DOI 10.1109/TSE.2018.2809496
   Zhang L., 2012, Proceedings of the 2012 International Symposium on Software Testing and Analysis, ISSTA 2012, P331, DOI [10.1145/2338965.2336793, DOI 10.1145/2338965.2336793]
   Zhang LM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P192, DOI 10.1109/ICSE.2013.6606565
NR 67
TC 5
Z9 6
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2022
VL 27
IS 5
AR 114
DI 10.1007/s10664-022-10138-1
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1U7GT
UT WOS:000805577100012
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Walunj, V
   Gharibi, G
   Alanazi, R
   Lee, Y
AF Walunj, Vijay
   Gharibi, Gharib
   Alanazi, Rakan
   Lee, Yugyung
TI Defect prediction using deep learning with Network Portrait Divergence
   for software evolution
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Static code analysis; Call graph; Program comprehension; Software
   evolution; Metric analysis; Defect prediction
ID EMPIRICAL-ANALYSIS; SIMILARITY; REGRESSION; METRICS
AB Understanding software evolution is essential for software development tasks, including debugging, maintenance, and testing. As a software system evolves, it grows in size and becomes more complex, hindering its comprehension. Researchers proposed several approaches for software quality analysis based on software metrics. One of the primary practices is predicting defects across software components in the codebase to improve agile product quality. While several software metrics exist, graph-based metrics have rarely been utilized in software quality. In this paper, we explore recent network comparison advancements to characterize software evolution and focus on aiding software metrics analysis and defect prediction. We support our approach with an automated tool named GraphEvoDef. Particularly, GraphEvoDef provides three major contributions: (1) detecting and visualizing significant events in software evolution using call graphs, (2) extracting metrics that are suitable for software comprehension, and (3) detecting and estimating the number of defects in a given code entity (e.g., class). One of our major findings is the usefulness of the Network Portrait Divergence metric, borrowed from the information theory domain, to aid the understanding of software evolution. To validate our approach, we examined 29 different open-source Java projects from GitHub and then demonstrated the proposed approach using 9 use cases with defect data from the the PROMISE dataset. We also trained and evaluated defect prediction models for both classification and regression tasks. Our proposed technique has an 18% reduction in the mean square error and a 48% increase in squared correlation coefficient over the state-of-the-art approaches in the defect prediction domain.
C1 [Walunj, Vijay; Gharibi, Gharib; Alanazi, Rakan; Lee, Yugyung] Univ Missouri, Sch Comp & Engn, Kansas City, MO 64110 USA.
   [Alanazi, Rakan] Northern Border Univ, Fac Comp & Informat Technol, Rafha, Saudi Arabia.
C3 University of Missouri System; University of Missouri Kansas City;
   Northern Border University
RP Walunj, V (corresponding author), Univ Missouri, Sch Comp & Engn, Kansas City, MO 64110 USA.
EM vbwgh6@umsystem.edu; ggk89@umsystem.edu; rakan.nalenezi@nbu.edu.sa;
   LeeYu@umkc.edu
RI Walunj, Vijay/HNC-4966-2023; Alanazi, Rakan/IQR-6362-2023
OI Walunj, Vijay/0000-0002-9295-077X
FU NSF, USA [1747751, 1935076, 1951971]; Direct For Computer & Info Scie &
   Enginr; Division Of Computer and Network Systems [1935076, 1951971]
   Funding Source: National Science Foundation
FX We would like to thank Duy Ho for his help in some implementation parts
   in the early versions of GraphEvo. We also thank the anonymous reviewers
   for their time and effort reviewing this work. The first author thanks
   Mattia Tantardini for sharing the network comparisons study code-base.
   The co-author, Yugyung Lee, would like to acknowledge the partial
   support of the NSF, USA Grant No. 1747751, 1935076, and 1951971.
CR Akiyama F., 1971, IFIP C, P353
   Akoglu L, 2015, DATA MIN KNOWL DISC, V29, P626, DOI 10.1007/s10618-014-0365-y
   Alanazi R, 2021, J SYST SOFTWARE, V176, DOI 10.1016/j.jss.2021.110945
   Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   Alsolai H, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106214
   [Anonymous], 2019, JUnit
   [Anonymous], 2017, ARXIV 171011304
   Arshad A, 2019, IEEE ACCESS, V7, P28100, DOI 10.1109/ACCESS.2019.2901860
   Bagrow JP, 2019, APPL NETW SCI, V4, DOI 10.1007/s41109-019-0156-x
   Bell RobertM., 2011, Proceedings of the 7th International Conference on Predictive Models in Software Engineering. Promise'11, DOI DOI 10.1145/2020390.2020392
   Bhattacharya P, 2012, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2012.6227173
   BigQuery G, 2018, BIGQUERY G
   Camel A, 2019, CAMEL IS OPEN SOURCE
   Cao Y, 2018, INT J BIO-INSPIR COM, V11, P282, DOI 10.1504/IJBIC.2018.092808
   Cassandra A, 2019, JUNIT
   Chen Mingming., 2015, SEKE, P397
   Concas G, 2007, IEEE T SOFTWARE ENG, V33, P687, DOI [10.1109/TSE.2007.1019, 10.1109/TSE.2007.1016]
   Ellson J, 2002, LECT NOTES COMPUT SC, V2265, P483
   Ferenc R, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P12, DOI 10.1145/3273934.3273936
   Fernández-Sáez AM, 2018, EMPIR SOFTW ENG, V23, P3281, DOI 10.1007/s10664-018-9599-4
   Gansner ER, 2000, SOFTWARE PRACT EXPER, V30, P1203, DOI 10.1002/1097-024X(200009)30:11<1203::AID-SPE338>3.0.CO;2-N
   Gao XB, 2010, PATTERN ANAL APPL, V13, P113, DOI 10.1007/s10044-008-0141-y
   Gharibi G, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09894-9
   Gharibi G, 2018, IEEE INT CONF AUTOM, P880, DOI 10.1145/3238147.3240484
   Gharibi G, 2019, INT WORK REAL ARTIF, P28, DOI 10.1109/RAISE.2019.00013
   Gharibi G, 2018, IEEE INT CONF BIG DA, P4016, DOI 10.1109/BigData.2018.8622426
   Ghezzi C, 2002, Fundamentals of Software Engineering
   Grove D, 1997, ACM SIGPLAN NOTICES, V32, P108, DOI 10.1145/263700.264352
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Guo L, 2019, IEEE T IND ELECTRON, V66, P7316, DOI 10.1109/TIE.2018.2877090
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   HAMMING RW, 1950, BELL SYST TECH J, V29, P147, DOI 10.1002/j.1538-7305.1950.tb00463.x
   Hammouri A, 2018, INT J ADV COMPUT SC, V9, P78
   Hartle H, 2020, P ROY SOC A-MATH PHY, V476, DOI 10.1098/rspa.2019.0744
   Huda S, 2018, IEEE ACCESS, V6, P2844, DOI 10.1109/ACCESS.2017.2785445
   Jaccard P., 1901, B SOCIT VAUDOISE SCI, V37, P547, DOI [10.5169/seals-266440, DOI 10.5169/SEALS-266440]
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Koutra D, 2016, ACM T KNOWL DISCOV D, V10, DOI 10.1145/2824443
   Krasner Herb, 2018, COST POOR QUALITY SO
   Krishnan Sandeep., 2011, Proceedings of the 7th International Conference on Predictive Models in Software Engineering. Promise'11, DOI DOI 10.1145/2020390.2020397
   Krüger J, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1244, DOI 10.1145/3338906.3342505
   Kuchaiev O, 2011, BIOINFORMATICS, V27, P1390, DOI 10.1093/bioinformatics/btr127
   Kuchaiev O, 2010, J R SOC INTERFACE, V7, P1341, DOI 10.1098/rsif.2010.0063
   LANCE GN, 1966, COMPUT J, V9, P60, DOI 10.1093/comjnl/9.1.60
   Le Novère N, 2015, NAT REV GENET, V16, P146, DOI 10.1038/nrg3885
   Li ZQ, 2018, IET SOFTW, V12, P161, DOI 10.1049/iet-sen.2017.0148
   Lyu R, 1996, HDB SOFTWARE RELIABI
   Manjula C, 2019, CLUSTER COMPUT, V22, pS9847, DOI 10.1007/s10586-018-1696-z
   Matsumoto S, 2010, P 6 INT C PREDICTIVE, P1, DOI DOI 10.1145/1868328.1868356
   McCabe S, 2020, ARXIV 201016019
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Milo R, 2002, SCIENCE, V298, P824, DOI 10.1126/science.298.5594.824
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Myers CR, 2003, PHYS REV E, V68, DOI 10.1103/PhysRevE.68.046116
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Premraj R, 2011, INT SYMP EMP SOFTWAR, P215, DOI 10.1109/ESEM.2011.30
   Qiao L, 2020, NEUROCOMPUTING, V385, P100, DOI 10.1016/j.neucom.2019.11.067
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rahman M, 2019, PROC INT CONF SOFTW, P37, DOI 10.1109/ICSE.2019.00022
   Rathore Santosh Singh, 2016, ACM SIGSOFT Software Engineering Notes, V41, P1, DOI 10.1145/2853073.2853083
   Rathore SS, 2019, ARTIF INTELL REV, V51, P255, DOI 10.1007/s10462-017-9563-5
   Rathore SS, 2017, SOFT COMPUT, V21, P7417, DOI 10.1007/s00500-016-2284-x
   Russo B, 2018, IEEE WORK CONF MIN S, P203, DOI 10.1145/3196398.3196426
   Sarajlic A, 2016, SCI REP-UK, V6, DOI 10.1038/srep35098
   Savic M, 2019, INTEL SYST REF LIBR, V148, P59, DOI 10.1007/978-3-319-91196-0_3
   Savic M, 2017, COMPUTING, V99, P1055, DOI 10.1007/s00607-017-0549-6
   Scott DW, 2015, WILEY SER PROBAB ST, P1, DOI 10.1002/9781118575574
   Shirabad J.S., 2005, The PROMISE Repository of Software Engineering Databases
   Silverman, 2018, DENSITY ESTIMATION S, DOI 10.1201/9781315140919
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Spinellis D JM, 2018, US
   Stone L, 2019, PLOS COMPUT BIOL, V15, DOI 10.1371/journal.pcbi.1006749
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Tantardini M, 2019, SCI REP-UK, V9, DOI 10.1038/s41598-019-53708-y
   Valverde S, 2003, ARXIV COND MAT030727
   Vapnik V, 1997, ADV NEUR IN, V9, P281
   Vasa R, 2007, PROC IEEE INT CONF S, P74
   Walunj V, 2019, IEEE INT CONF BIG DA, P4799, DOI 10.1109/BigData47090.2019.9005560
   Wang L, 2009, PROC IEEE INT CONF S, P41, DOI 10.1109/ICSM.2009.5306348
   Wang YN, 2014, IEEE COMMUN SURV TUT, V16, P942, DOI 10.1109/SURV.2013.100913.00195
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Wohlin C., 2012, Experimentation in Software Engineering
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Yang Q, 2019, ACM T INTEL SYST TEC, V10, DOI 10.1145/3298981
   Yao Y, 2020, 2020 IEEE 20TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY, AND SECURITY (QRS 2020), P223, DOI 10.1109/QRS51102.2020.00040
   Zhang HY, 2009, PROC IEEE INT CONF S, P274, DOI 10.1109/ICSM.2009.5306304
   Zhang W, 2018, IET SOFTW, V12, P183, DOI 10.1049/iet-sen.2017.0168
   Zhao G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/3236024.3236068
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
   Zimmermann T., 2007, P ICSE 2007 WORK 3 I, DOI [10.1109/PROMISE.2007.10, DOI 10.1109/PROMISE.2007.10]
   Zimmermann T, 2009, INT SYMP EMP SOFTWAR, P436
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
   Zookeeper A, 2019, WELCOME APACHE ZOOKE
NR 94
TC 2
Z9 2
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2022
VL 27
IS 5
AR 118
DI 10.1007/s10664-022-10147-0
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1W4HY
UT WOS:000806737300001
DA 2024-07-18
ER

PT J
AU Gao, H
   Kuang, HY
   Ma, XX
   Hu, H
   Lü, J
   Mäder, P
   Egyed, A
AF Gao, Hui
   Kuang, Hongyu
   Ma, Xiaoxing
   Hu, Hao
   Lu, Jian
   Maeder, Patrick
   Egyed, Alexander
TI Propagating frugal user feedback through closeness of code dependencies
   to improve IR-based traceability recovery
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Traceability recovery; Information retrieval; Closeness analysis; User
   feedback; Code dependencies
ID INFORMATION-RETRIEVAL; FEATURE LOCATION; REQUIREMENTS; EXECUTION;
   PROGRAM; LINKS
AB Traceability recovery captures trace links among different software artifacts (e.g., requirements and code) when two artifacts cover the same part of system functionalities. These trace links provide important support for developers in software maintenance and evolution tasks. Information Retrieval (IR) is now the mainstream technique for semi-automatic approaches to recover candidate trace links based on textual similarities among artifacts. The performance of IR-based traceability recovery is evaluated by the ranking of relevant traces in the generated lists of candidate links. Unfortunately, this performance is greatly hindered by the vocabulary mismatch problem between different software artifacts. To address this issue, a growing body of enhancing strategies based on user feedback is proposed to adjust the calculated IR values of candidate links after the user verifies part of these links. However, the improvement brought by this kind of strategies requires a large amount of user feedback, which could be infeasible in practice. In this paper, we propose to improve IR-based traceability recovery by propagating a small amount of user feedback through the closeness analysis on call and data dependencies in the code. Specifically, our approach first iteratively asks users to verify a small set of candidate links. The collected frugal feedback is then composed with the quantified functional similarity for each code dependency (called closeness) and the generated IR values to improve the ranking of unverified links. An empirical evaluation based on nine real-world systems with three mainstream IR models shows that our approach can outperform five baseline approaches by using only a small amount of user feedback.
C1 [Gao, Hui; Kuang, Hongyu; Ma, Xiaoxing; Hu, Hao; Lu, Jian] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Maeder, Patrick] Tech Univ, Fak Informat & Automatisierung, Ilmenau, Germany.
   [Egyed, Alexander] Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
C3 Nanjing University; Technische Universitat Ilmenau; Johannes Kepler
   University Linz
RP Kuang, HY (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
EM khy@nju.edu.cn
RI Mäder, Patrick/A-1848-2018; Gao, Hui/JUU-5957-2023; Ma,
   Xiaoxing/K-4290-2012; Kuang, Hongyu/JEZ-3392-2023; Egyed,
   Alexander/E-2632-2017
OI Mäder, Patrick/0000-0001-6871-2707; Gao, Hui/0000-0003-3703-7563; Kuang,
   Hongyu/0009-0003-8702-2826
FU National Natural Science Foundation of China [61690204, 61802173];
   general program of the State Key Laboratory for Novel Software
   Technology [ZZKT2021B05]; Collaborative Innovation Center of Novel
   Software Technology and Industrialization; German Ministry of Education
   and Research (BMBF) [01IS16003B]; DFG [MA 5030/3-1]; Austrian Science
   Fund (FWF) [P31989]; Austrian COMET K1-Centre Pro2Future of the Austrian
   Research Promotion Agency (FFG); Austrian ministry BMVIT; Austrian
   ministry BMDW; Province of Upper Austria; Austrian Science Fund (FWF)
   [P31989] Funding Source: Austrian Science Fund (FWF)
FX This work is funded by the National Natural Science Foundation of China
   (Grant Nos. 61690204 and 61802173), the general program of the State Key
   Laboratory for Novel Software Technology (Grant Nos. ZZKT2021B05), the
   Collaborative Innovation Center of Novel Software Technology and
   Industrialization, the German Ministry of Education and Research (BMBF)
   grant: 01IS16003B and by DFG grant: MA 5030/3-1, and funded by the
   Austrian Science Fund (FWF), grand no. P31989, and by the Austrian COMET
   K1-Centre Pro2Future of the Austrian Research Promotion Agency (FFG)
   with funding from the Austrian ministries BMVIT and BMDW, and the
   Province of Upper Austria.
CR Abadi A, 2008, INT C PROGRAM COMPRE, P103, DOI 10.1109/ICPC.2008.30
   Ali N, 2015, EMPIR SOFTW ENG, V20, P442, DOI 10.1007/s10664-014-9315-y
   Ali N, 2013, IEEE T SOFTWARE ENG, V39, P725, DOI 10.1109/TSE.2012.71
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P240, DOI 10.1109/WCRE.2000.891475
   Baeza-Yates R A, 2011, MODERN INFORM RETRIE
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Binkley D, 2007, FoSE 2007: Future of Software Engineering, P104, DOI 10.1109/FOSE.2007.27
   Bravenboer M, 2009, OOPSLA 2009, CONFERENCE PROCEEDINGS, P243
   Burger Benjamin John, 2010, Paleontological Contributions, P1
   Cleland-Huang J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P135, DOI 10.1109/RE.2005.78
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   Cleland-Huang J, 2013, IEEE SOFTWARE, V30, P13, DOI 10.1109/MS.2013.47
   De Lucia A., 2012, SOFTWARE SYSTEMS TRA, P71, DOI [10.1007/978-1-4471- 2239-5_4, DOI 10.1007/978-1-4471-2239-5_4]
   De Lucia A, 2006, PROC IEEE INT CONF S, P299
   De Lucia A, 2011, CONF PROC INT SYMP C, P21, DOI 10.1109/ICPC.2011.34
   Di Penta M, 2002, PROG COMPREHEN, P207, DOI 10.1109/WPC.2002.1021342
   Dit B, 2013, EMPIR SOFTW ENG, V18, P277, DOI 10.1007/s10664-011-9194-4
   Eaddy M, 2008, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2008.39
   Egyed A., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P221, DOI 10.1109/RE.2010.34
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Khatiwada S, 2020, INT C PROGRAM COMPRE, P252, DOI 10.1145/3387904.3389280
   Kuang HY, 2019, INT C PROGRAM COMPRE, P369, DOI 10.1109/ICPC.2019.00055
   Kuang HY, 2016, COMM COM INF SC, V675, P52, DOI 10.1007/978-981-10-3482-4_4
   Kuang HY, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P68, DOI 10.1109/SANER.2017.7884610
   Kuang HY, 2015, J SOFTW-EVOL PROC, V27, P838, DOI 10.1002/smr.1736
   Li XY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P82, DOI 10.1145/3180155.3180242
   Li Y, 2020, ACM T PROGR LANG SYS, V42, DOI 10.1145/3381915
   Lin Y, 2017, IEEE INT CONF AUTOM, P394, DOI 10.1109/ASE.2017.8115652
   Lin Y, 2017, PROC INT CONF SOFTW, P393, DOI 10.1109/ICSE.2017.43
   Livshits B, 2015, COMMUN ACM, V58, P44, DOI 10.1145/2644805
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Mäder P, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P171, DOI 10.1109/ICSM.2012.6405269
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   McMillan C, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P41, DOI 10.1109/TEFSE.2009.5069582
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Panichella A, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106411
   Panichella A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P314, DOI 10.1109/SANER.2016.97
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Panichella A, 2013, EUR CON SFTWR MTNCE, P199, DOI 10.1109/CSMR.2013.29
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Rath M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P834, DOI 10.1145/3180155.3180207
   Rath M, 2017, INT REQUIR ENG CONF, P516, DOI 10.1109/RE.2017.18
   Rempel P, 2017, IEEE T SOFTWARE ENG, V43, P777, DOI 10.1109/TSE.2016.2622264
   Rocchio J. J., 1971, SMART RETRIEVAL SYST, P313
   SALTON G, 1990, J AM SOC INFORM SCI, V41, P288, DOI 10.1002/(SICI)1097-4571(199006)41:4<288::AID-ASI8>3.0.CO;2-H
   Sharif B, 2017, EMPIR SOFTW ENG, V22, P1063, DOI 10.1007/s10664-016-9486-9
   Sui L, 2020, PROC INT CONF SOFTW, P1049, DOI 10.1145/3377811.3380441
   Walters B., 2014, P 22 INT C PROGRAM C, P201, DOI [10.1145/2597008.2597795, DOI 10.1145/2597008.2597795]
   Wilcoxon Frank, 1992, BREAKTHROUGHS STAT, P196, DOI [DOI 10.1007/978-1-4612-4380-9_16, 10.1007/978-1-4612-4380-9_16, DOI 10.1007/978-1-4612-4380-9]
   Wohlrab R, 2020, REQUIR ENG, V25, P21, DOI 10.1007/s00766-018-0306-1
   Zyrianov V, 2019, INT C PROGRAM COMPRE, P144, DOI 10.1109/ICPC.2019.00031
NR 57
TC 2
Z9 2
U1 2
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 41
DI 10.1007/s10664-021-10091-5
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YJ9DE
UT WOS:000744825800002
DA 2024-07-18
ER

PT J
AU Izadi, M
   Akbari, K
   Heydarnoori, A
AF Izadi, Maliheh
   Akbari, Kiana
   Heydarnoori, Abbas
TI Predicting the objective and priority of issue reports in software
   repositories
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software evolution and maintenance; Mining software repositories; Issue
   reports; Classification; Prioritization; Machine learning; Natural
   language processing
ID INTERRATER RELIABILITY; KAPPA; CODE; COEFFICIENT; USAGE
AB Software repositories such as GitHub host a large number of software entities. Developers collaboratively discuss, implement, use, and share these entities. Proper documentation plays an important role in successful software management and maintenance. Users exploit Issue Tracking Systems, a facility of software repositories, to keep track of issue reports, to manage the workload and processes, and finally, to document the highlight of their team's effort. An issue report is a rich source of collaboratively-curated software knowledge, and can contain a reported problem, a request for new features, or merely a question about the software product. As the number of these issues increases, it becomes harder to manage them manually. GitHub provides labels for tagging issues, as a means of issue management. However, about half of the issues in GitHub's top 1000 repositories do not have any labels. In this work, we aim at automating the process of managing issue reports for software teams. We propose a two-stage approach to predict both the objective behind opening an issue and its priority level using feature engineering methods and state-of-the-art text classifiers. To the best of our knowledge, we are the first to fine-tune a Transformer for issue classification. We train and evaluate our models in both project-based and cross-project settings. The latter approach provides a generic prediction model applicable for any unseen software project or projects with little historical data. Our proposed approach can successfully predict the objective and priority level of issue reports with 82% (fine-tuned RoBERTa) and 75% (Random Forest) accuracy, respectively. Moreover, we conducted human labeling and evaluation on unlabeled issues from six unseen GitHub projects to assess the performance of the cross-project model on new data. The model achieves 90% accuracy on the sample set. We measure inter-rater reliability and obtain an average Percent Agreement of 85.3% and Randolph's free-marginal Kappa of 0.71 that translate to a substantial agreement among labelers.
C1 [Izadi, Maliheh; Akbari, Kiana; Heydarnoori, Abbas] Sharif Univ Technol, Intelligent Software Engn Lab, Tehran, Iran.
C3 Sharif University of Technology
RP Izadi, M; Heydarnoori, A (corresponding author), Sharif Univ Technol, Intelligent Software Engn Lab, Tehran, Iran.
EM maliheh.izadi@sharif.edu; kakbari@ce.sharif.edu; heydarnoori@sharif.edu
RI Heydarnoori, Abbas/ABB-2493-2020
OI Heydarnoori, Abbas/0000-0001-9785-2880; Izadi,
   Maliheh/0000-0001-5093-5523
CR Aghamohammadi A, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110800
   Al Shalabi L., 2006, Journal of Computer Sciences, V2, P735, DOI 10.3844/jcssp.2006.735.739
   Alenezi M, 2013, 2013 12TH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA 2013), VOL 2, P112, DOI 10.1109/ICMLA.2013.114
   [Anonymous], 2009, OPEN CODING
   [Anonymous], 2014, MSRTR201491
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Baltes Sebastian, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P191, DOI 10.1109/MSR.2019.00038
   Baltes S, 2019, EMPIR SOFTW ENG, V24, P1259, DOI 10.1007/s10664-018-9650-5
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bissyandé TF, 2013, PROC INT SYMP SOFTW, P188, DOI 10.1109/ISSRE.2013.6698918
   BRENNAN RL, 1981, EDUC PSYCHOL MEAS, V41, P687, DOI 10.1177/001316448104100307
   Cabot J, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P550, DOI 10.1109/SANER.2015.7081875
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen AR, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09893-w
   da Costa DA, 2018, EMPIR SOFTW ENG, V23, P835, DOI 10.1007/s10664-017-9548-7
   Dash M., 1997, Intelligent Data Analysis, V1
   Devlin J., 2018, BERT PRE TRAINING DE
   Dhasade AB, 2020, ISOFT: PROCEEDINGS OF THE 13TH INNOVATIONS IN SOFTWARE ENGINEERING CONFERENCE, DOI 10.1145/3385032.3385052
   Di Sorbo A, 2021, J SOFTW-EVOL PROC, V33, DOI 10.1002/smr.2316
   Fan Q, 2017, INT SYMP EMP SOFTWAR, P121, DOI 10.1109/ESEM.2017.19
   FLEISS JL, 1973, EDUC PSYCHOL MEAS, V33, P613, DOI 10.1177/001316447303300309
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Gao CY, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P35, DOI 10.1109/ISSRE.2015.7381797
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Gwet KL, 2008, BRIT J MATH STAT PSY, V61, P29, DOI 10.1348/000711006X126600
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hu HY, 2019, EMPIR SOFTW ENG, V24, P7, DOI 10.1007/s10664-018-9617-6
   Huang Q, 2020, IEEE T SOFTWARE ENG, V46, P1098, DOI 10.1109/TSE.2018.2876340
   Izadi M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09976-2
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kallis R, 2019, PROC IEEE INT CONF S, P406, DOI 10.1109/ICSME.2019.00070
   Kanwal J, 2012, J COMPUT SCI TECH-CH, V27, P397, DOI 10.1007/s11390-012-1230-3
   Kikas R, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P291, DOI [10.1109/MSR.2016.038, 10.1145/2901739.2901751]
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   LANDIS JR, 1977, BIOMETRICS, V33, P363, DOI 10.2307/2529786
   Li C, 2019, LECT NOTES ARTIF INT, V11776, P11, DOI [10.1007/978-3-030-29563-9_2, 10.1109/civemsa45640.2019.9071616]
   Liao ZF, 2018, IEEE ACCESS, V6, P24003, DOI 10.1109/ACCESS.2018.2810295
   Limsettho N, 2016, INT J SOFTW ENG KNOW, V26, P1027, DOI 10.1142/S0218194016500352
   Liu Y, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P5070
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Merten T, 2016, INT REQUIR ENG CONF, P166, DOI 10.1109/RE.2016.8
   Noei E, 2021, IEEE T SOFTWARE ENG, V47, P367, DOI 10.1109/TSE.2019.2893171
   Noei E, 2019, EMPIR SOFTW ENG, V24, P1964, DOI 10.1007/s10664-019-09684-y
   Pandey N, 2017, INNOV SYST SOFTW ENG, V13, P279, DOI 10.1007/s11334-017-0294-1
   Peters F, 2013, IEEE WORK CONF MIN S, P409, DOI 10.1109/MSR.2013.6624057
   Pingclasai N, 2013, ASIA PAC SOFWR ENG, P13, DOI 10.1109/APSEC.2013.105
   Randolph J. J., 2005, Free-Marginal Multirater Kappa (multirater K free): An Alternative to Fleiss' Fixed-Marginal Multirater Kappa
   Sharma M, 2012, INT CONF INTELL SYST, P539, DOI 10.1109/ISDA.2012.6416595
   Sohrawardi SJ, 2014, 2014 NINTH INTERNATIONAL CONFERENCE ON DIGITAL INFORMATION MANAGEMENT (ICDIM), P242, DOI 10.1109/ICDIM.2014.6991434
   Song Y, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1551, DOI 10.1145/3368089.3417928
   Svyatkovskiy Alexey, 2020, ESEC/FSE 2020: Proceedings of the 28th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P1433, DOI 10.1145/3368089.3417058
   Tavakoli M, 2020, EUROMICRO CONF PROC, P504, DOI 10.1109/SEAA51224.2020.00084
   Terdchanakul P, 2017, PROC IEEE INT CONF S, P534, DOI 10.1109/ICSME.2017.14
   Tian Y, 2013, PROC IEEE INT CONF S, P200, DOI 10.1109/ICSM.2013.31
   Uddin J, 2017, ARTIF INTELL REV, V47, P145, DOI 10.1007/s10462-016-9478-6
   van der Veen E, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P357, DOI 10.1109/MSR.2015.40
   Vasilescu B, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P188, DOI 10.1109/SocialCom.2013.35
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P800, DOI 10.1007/s10664-017-9533-1
   Weiss G., 2001, EFFECT CLASS DISTRIB, DOI DOI 10.7282/T3-VPFW-SF95
   Wu YH, 2019, EMPIR SOFTW ENG, V24, P637, DOI 10.1007/s10664-018-9634-5
   Yu Y, 2018, INTERNETWARE'18: PROCEEDINGS OF THE TENTH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, DOI 10.1145/3275219.3275237
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
   Zeng Y, 2019, EMPIR SOFTW ENG, V24, P3394, DOI 10.1007/s10664-019-09687-9
   Zhang J, 2015, SCI CHINA INFORM SCI, V58, DOI 10.1007/s11432-014-5241-2
   Zhou J, 2020, IEEE T SOFTW ENG
   Zhou Y, 2016, J SOFTW-EVOL PROC, V28, P150, DOI 10.1002/smr.1770
NR 68
TC 26
Z9 27
U1 2
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
DI 10.1007/s10664-021-10085-3
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA YS7TF
UT WOS:000750874900001
DA 2024-07-18
ER

PT J
AU Schröder, M
   Cito, J
AF Schroeder, Michael
   Cito, Juergen
TI An empirical investigation of command-line customization
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Command line; Customization practices; Collective knowledge; Inductive
   coding
AB The interactive command line, also known as the shell, is a prominent mechanism used extensively by a wide range of software professionals (engineers, system administrators, data scientists, etc.). Shell customizations can therefore provide insight into the tasks they repeatedly perform, how well the standard environment supports those tasks, and ways in which the environment could be productively extended or modified. To characterize the patterns and complexities of command-line customization, we mined the collective knowledge of command-line users by analyzing more than 2.2 million shell alias definitions found on GitHub. Shell aliases allow command-line users to customize their environment by defining arbitrarily complex command substitutions. Using inductive coding methods, we found three types of aliases that each enable a number of customization practices: Shortcuts (for nicknaming commands, abbreviating subcommands, and bookmarking locations), Modifications (for substituting commands, overriding defaults, colorizing output, and elevating privilege), and Scripts (for transforming data and chaining subcommands). We conjecture that identifying common customization practices can point to particular usability issues within command-line programs, and that a deeper understanding of these practices can support researchers and tool developers in designing better user experiences. In addition to our analysis, we provide an extensive reproducibility package in the form of a curated dataset together with well-documented computational notebooks enabling further knowledge discovery and a basis for learning approaches to improve command-line workflows.
C1 [Schroeder, Michael] TU Wien, Vienna, Austria.
   [Cito, Juergen] MIT, 77 Massachusetts Ave, Cambridge, MA 02139 USA.
C3 Technische Universitat Wien; Massachusetts Institute of Technology (MIT)
RP Schröder, M (corresponding author), TU Wien, Vienna, Austria.
EM michael.schroeder@tuwien.ac.at; juergen.cito@tuwien.ac.at
OI Schroder, Michael/0000-0003-1496-0531
FU TU Wien (TUW)
FX Open access funding provided by TU Wien (TUW).
CR Agarwal M, 2020, ARXIV200200762CSHC
   Alom MZ, 2019, P IEEE I C SERV COMP, P100, DOI 10.1109/SCC.2019.00027
   [Anonymous], 2003, The art of UNIX programming
   Baltes S, 2019, EMPIR SOFTW ENG, V24, P1259, DOI 10.1007/s10664-018-9650-5
   Barnaby C, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1353, DOI 10.1145/3368089.3417052
   Beckman NE, 2011, LECT NOTES COMPUT SC, V6813, P2, DOI 10.1007/978-3-642-22655-7_2
   Bruch M, 2010, P 2010 FSE SDP WORKS, DOI [10.1145/1882362.1882374, DOI 10.1145/1882362.1882374]
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Church L, 2014, P PSYCH PROGR INT GR, P123
   D'Antoni L, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P582, DOI 10.1145/3106237.3106241
   DAMERAU FJ, 1964, COMMUN ACM, V7, P171, DOI 10.1145/363958.363994
   Davidson BJ, 1998, ADVANCES IN HEAD AND NECK ONCOLOGY, P5
   de Amo S, 2015, INFORM SYST, V49, P182, DOI 10.1016/j.is.2014.11.009
   De Rosso SP, 2016, ACM SIGPLAN NOTICES, V51, P292, DOI 10.1145/3022671.2984018
   De Rosso SantiagoPerez., 2013, Onward! '13, P37, DOI DOI 10.1145/2509578.2509584
   Dey I., 2003, Qualitative data analysis: A user-friendly guide for social scientists, DOI DOI 10.4324/9780203412497
   Fast E, 2014, 32ND ANNUAL ACM CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2014), P2491, DOI 10.1145/2556288.2556998
   Gandhi I, 2020, LIGHTENING COGNITIVE
   Gousios G., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P384, DOI [DOI 10.1145/2597073.2597126, 10.1145/2597073]
   Green TRG, 1996, J VISUAL LANG COMPUT, V7, P131, DOI 10.1006/jvlc.1996.0009
   Greenberg M, C COMP 2 INT C ART S, P153
   Greenberg M, 2017, UNDERSTANDING POSIX
   Greenberg M, 2018, DSLDI
   Greenberg S., 1988, Proc. of IFAC Conference on Man-Machine Systems, P349, DOI 10.1016/S1474-6670(17)53932-4
   Greenberg S, 1988, USING UNIX COLLECTED
   Handa S, 2021, ARXIV201215422CSPL
   Hou PP, 2021, IET SOFTW, V15, P161, DOI 10.1049/sfw2.12015
   IEEE and The Open Group, 2018, OPEN GROUP BASE SPEC
   Jacobs N., 2001, Inductive Logic Programming. 11th International Conference, ILP 2001. Proceedings (Lecture Notes in Artificial Intelligence Vol.2157), P80
   Jones MT, 2011, EVOLUTION SHELLS LIN
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Khosmood F, 2014, 2014 IEEE S COMP INT, P1
   Korvemaker B, 2000, SEVENTEENTH NATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE (AAAI-2001) / TWELFTH INNOVATIVE APPLICATIONS OF ARTIFICIAL INTELLIGENCE CONFERENCE (IAAI-2000), P230
   Lin XV, 2018, PROCEEDINGS OF THE ELEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2018), P3107
   Mens Kim., 2014, Recommendation Systems in Software Engineering, P93
   Mombach T, 2018, GitHub REST API vs GHTorrent vs GitHub Archive: A comparative study
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Navarro G, 2001, ACM COMPUT SURV, V33, P31, DOI 10.1145/375360.375365
   Nielsen J., 2020, 10 Usability Heuristics for User Interface Design
   Nielsen J, 2005, POWER DEFAULTS
   Pouzin L, 1965, MULTICS DESIGN NOTEB
   Prana GAA, 2019, EMPIR SOFTW ENG, V24, P1296, DOI 10.1007/s10664-018-9660-3
   Prasad A, COMMAND LINE INTERFA
   Raghavan D, 2020, PROCEEDINGS OF THE 2020 USENIX ANNUAL TECHNICAL CONFERENCE, P617
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   RITCHIE DM, 1974, COMMUN ACM, V17, P365, DOI 10.1145/361011.361061
   Saldana J., 2015, CODING MANUAL QUALIT
   Sayagh M, 2021, IEEE T SOFTWARE ENG, V47, P2907, DOI 10.1109/TSE.2020.2973997
   Sayagh M, 2020, IEEE T SOFTWARE ENG, V46, P646, DOI 10.1109/TSE.2018.2867847
   Seibold CL, 2020, SHELL HIST UNIX
   Stefanidis K, 2011, INFORM SYST, V36, P1158, DOI 10.1016/j.is.2011.06.004
   Thomas DR, 2006, AM J EVAL, V27, P237, DOI 10.1177/1098214005283748
   Vaithilingam P, 2019, PROCEEDINGS OF THE 32ND ANNUAL ACM SYMPOSIUM ON USER INTERFACE SOFTWARE AND TECHNOLOGY (UIST 2019), P563, DOI 10.1145/3332165.3347944
   Vasilakis N, 2020, ARXIV PREPRINT ARXIV
   Vasilakis N, 2021, PROCEEDINGS OF THE SIXTEENTH EUROPEAN CONFERENCE ON COMPUTER SYSTEMS (EUROSYS '21), P49, DOI 10.1145/3447786.3456228
   Wijesekera P., 2018, CONTEXTUALIZING PRIV, P1
   Yang D, 2017, IEEE WORK CONF MIN S, P280, DOI 10.1109/MSR.2017.13
   Zhang TY, 2020, PROCEEDINGS OF THE 2020 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'20), DOI 10.1145/3313831.3376382
   Zheng W, 2011, P 2 ACM SPEC INT C P, P283, DOI [10.1145/1958746.1958786, DOI 10.1145/1958746.1958786]
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
NR 60
TC 0
Z9 0
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 30
DI 10.1007/s10664-021-10036-y
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XO4RR
UT WOS:000730174900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Sonnekalb, T
   Heinze, TS
   Mäder, P
AF Sonnekalb, Tim
   Heinze, Thomas S.
   Mader, Patrick
TI Deep security analysis of program code A systematic literature review
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Code inspection; Software security; Vulnerability detection; Deep
   learning; Supervised learning
ID NEURAL-NETWORKS
AB Due to the continuous digitalization of our society, distributed and web-based applications become omnipresent and making them more secure gains paramount relevance. Deep learning (DL) and its representation learning approach are increasingly been proposed for program code analysis potentially providing a powerful means in making software systems less vulnerable. This systematic literature review (SLR) is aiming for a thorough analysis and comparison of 32 primary studies on DL-based vulnerability analysis of program code. We found a rich variety of proposed analysis approaches, code embeddings and network topologies. We discuss these techniques and alternatives in detail. By compiling commonalities and differences in the approaches, we identify the current state of research in this area and discuss future directions. We also provide an overview of publicly available datasets in order to foster a stronger benchmarking of approaches. This SLR provides an overview and starting point for researchers interested in deep vulnerability analysis on program code.
C1 [Sonnekalb, Tim; Heinze, Thomas S.] German Aerosp Ctr DLR, Inst Data Sci, Jena, Germany.
   [Mader, Patrick] Tech Univ Ilmenau, Inst Comp & Syst Engn, Ilmenau, Germany.
   [Mader, Patrick] Friedrich Schiller Univ, Fac Biol Sci, Jena, Germany.
C3 Helmholtz Association; German Aerospace Centre (DLR); Technische
   Universitat Ilmenau; Friedrich Schiller University of Jena
RP Sonnekalb, T (corresponding author), German Aerosp Ctr DLR, Inst Data Sci, Jena, Germany.
EM tim.sonnekalb@dlr.de; thomas.heinze@dlr.de; patrick.maeder@tu-ilmenau.de
RI Mäder, Patrick/A-1848-2018
OI Mäder, Patrick/0000-0001-6871-2707; Sonnekalb, Tim/0000-0002-0067-1790
FU Deutsche Forschungsgemeinschaft (DFG) [MA 5030/3-1]; German Federal
   Ministry of Education an Research (BMBF) [01IS18074E]
FX This work was supported by Deutsche Forschungsgemeinschaft (DFG; Grant
   No: MA 5030/3-1) and the German Federal Ministry of Education an
   Research (BMBF; Grant No: 01IS18074E).
CR Allamanis M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3212695
   Alon U, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3290353
   [Anonymous], 1997, NEURAL COMPUT
   Berman DS, 2019, INFORMATION, V10, DOI 10.3390/info10040122
   Black PE, 2018, J RES NATL INST STAN, V123, DOI [10.6028/123.005, 10.6028/jres.123.005]
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Boland T, 2012, COMPUTER, V45, P88, DOI 10.1109/MC.2012.345
   Botha J.A., 2017, EMNLP
   Branco P, 2016, ACM COMPUT SURV, V49, DOI 10.1145/2907070
   Cakir B, 2018, ACMSE '18: PROCEEDINGS OF THE ACMSE 2018 CONFERENCE, DOI 10.1145/3190645.3190692
   Cambronero J, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P964, DOI 10.1145/3338906.3340458
   Chatzieleftheriou G., 2011, Proceedings of the 2011 IEEE 35th IEEE Annual Computer Software and Applications Conference Workshops (COMPSACW 2011). Volume II: Workshops, P96, DOI 10.1109/COMPSACW.2011.26
   Chicco D, 2020, BMC GENOMICS, V21, DOI 10.1186/s12864-019-6413-7
   Cho K., 2014, PROCS C EMPIRICAL ME, P1724, DOI DOI 10.3115/V1/D14-1179
   Choi YH, 2020, CYBERSECURITY, V3, DOI 10.1186/s42400-020-00055-5
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Dai HJ, 2016, PR MACH LEARN RES, V48
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Facebook, 2020, INF STAT AN
   Fawcett T, 2006, PATTERN RECOGN LETT, V27, P861, DOI 10.1016/j.patrec.2005.10.010
   Feng Q., 2016, P 2016 ACM SIGSAC C, P480, DOI [10.1145/2976749.2978370, DOI 10.1145/2976749.2978370]
   Ferrag MA, 2020, J INF SECUR APPL, V50, DOI 10.1016/j.jisa.2019.102419
   FUKUSHIMA K, 1983, IEEE T SYST MAN CYB, V13, P826, DOI 10.1109/TSMC.1983.6313076
   Gelman B, 2019, DATA BRIEF, V27, DOI 10.1016/j.dib.2019.104712
   Ghaffarian SM, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092566
   Gkortzis A, 2018, IEEE WORK CONF MIN S, P18, DOI 10.1145/3196398.3196454
   Gong J, 2016, 2016 IEEE FIRST INTERNATIONAL CONFERENCE ON DATA SCIENCE IN CYBERSPACE (DSC 2016), P642, DOI 10.1109/DSC.2016.33
   Guan ZY, 2018, 2018 IEEE INTERNATIONAL CONFERENCE ON INTELLIGENCE AND SAFETY FOR ROBOTICS (ISR), P158, DOI 10.1109/IISR.2018.8535799
   Hellendoorn VJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P152, DOI 10.1145/3236024.3236051
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   HOPFIELD JJ, 1982, P NATL ACAD SCI-BIOL, V79, P2554, DOI 10.1073/pnas.79.8.2554
   International Organization for Standardization, 2020, 572511994EN ISO
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kipf TN, 2017, INT C LEARN REPR
   Kitchenham B., 2007, Joint Report
   Komer B., 2014, SCIPY, V9, DOI [10.25080/majora-14bd3278-006, DOI 10.25080/MAJORA-14BD3278-006]
   Kumar C, 2017, INT J SYST ASSUR ENG, V8, P2109, DOI 10.1007/s13198-014-0326-2
   Lattner C, 2004, INT SYM CODE GENER, P75, DOI 10.1109/CGO.2004.1281665
   Le Q, 2018, DIGIT INVEST, V26, pS118, DOI 10.1016/j.diin.2018.04.024
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Li Z, 2019, IEEE ACCESS, V7, P103184, DOI 10.1109/ACCESS.2019.2930578
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Lin GJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2539, DOI 10.1145/3133956.3138840
   Lin GJ, 2018, IEEE T IND INFORM, V14, P3289, DOI 10.1109/TII.2018.2821768
   Lopes CV, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133908
   Markovtsev V, 2018, IEEE WORK CONF MIN S, P34, DOI 10.1145/3196398.3196464
   Michaud F., 2008, LANGUAGE INSECURITY
   Mikolov T., 2013, ADV NEURAL INFORM PR, V26, P3111, DOI DOI 10.5555/2999792.2999959
   Mou L., 2016, P C EMP METH NAT LAN, P479, DOI 10.18653/v1/D16-1046
   National Institute of Standards and Technology, 2020, VULN GLOSS
   National Vulnerability Database, 2014, NVDCVE20141912
   National Vulnerability Database, 2020, NVD NAT VULN DAT SEA
   Pennington J., 2014, P 2014 C EMP METH NA, P1532, DOI [DOI 10.3115/V1/D14-1162, 10.3115/v1/D14-1162]
   Ponta Serena Elisa, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P383, DOI 10.1109/MSR.2019.00064
   Pradel M, 2021, ARXIV201107986V2
   Rusk N, 2016, NAT METHODS, V13, P35, DOI 10.1038/nmeth.3707
   Russell RL, 2018, 2018 17TH IEEE INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS (ICMLA), P757, DOI 10.1109/ICMLA.2018.00120
   Selvaraju RR, 2017, IEEE I CONF COMP VIS, P618, DOI 10.1109/ICCV.2017.74
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   The MITRE Corporation, 2020, CWE CWE LIST VERS 4
   Ucci D, 2019, COMPUT SECUR, V81, P123, DOI 10.1016/j.cose.2018.11.001
   Vaswani A, 2017, ADV NEUR IN, V30
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Warnecke A, 2020, 2020 5TH IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P 2020), P158, DOI 10.1109/EuroSP48549.2020.00018
NR 66
TC 8
Z9 9
U1 3
U2 27
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 2
DI 10.1007/s10664-021-10029-x
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WK5UU
UT WOS:000709792100001
OA Green Accepted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Nugroho, YS
   Islam, S
   Nakasai, K
   Rehman, I
   Hata, H
   Kula, RG
   Nagappan, M
   Matsumoto, K
AF Nugroho, Yusuf Sulistyo
   Islam, Syful
   Nakasai, Keitaro
   Rehman, Ifraz
   Hata, Hideaki
   Kula, Raula Gaikovina
   Nagappan, Meiyappan
   Matsumoto, Kenichi
TI How are project-specific forums utilized? A study of participation,
   content, and sentiment in the Eclipse ecosystem
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Eclipse; Forum; Participation; Discussion; Sentiment
ID STACK OVERFLOW
AB Although many software development projects have moved their developer discussion forums to generic platforms such as Stack Overflow, Eclipse has been steadfast in hosting their self-supported community forums. While recent studies show forums share similarities to generic communication channels, it is unknown how project-specific forums are utilized. In this paper, we analyze 832,058 forum threads and their linkages to four systems with 2,170 connected contributors to understand the participation, content and sentiment. Results show that Seniors are the most active participants to respond bug and non-bug-related threads in the forums (i.e., 66.1% and 45.5%), and sentiment among developers are inconsistent while knowledge sharing within Eclipse. We recommend the users to identify appropriate topics and ask in a positive procedural way when joining forums. For developers, preparing project-specific forums could be an option to bridge the communication between members. Irrespective of the popularity of Stack Overflow, we argue the benefits of using project-specific forum initiatives, such as GitHub Discussions, are needed to cultivate a community and its ecosystem.
C1 [Nugroho, Yusuf Sulistyo] Univ Muhammadiyah Surakarta, Jawa Tengah, Indonesia.
   [Islam, Syful; Rehman, Ifraz; Kula, Raula Gaikovina; Matsumoto, Kenichi] Nara Inst Sci & Technol, Ikoma, Japan.
   [Nakasai, Keitaro] Kagoshima Coll, Natl Inst Technol, Kagoshima, Japan.
   [Hata, Hideaki] Shinshu Univ, Matsumoto, Nagano, Japan.
   [Nagappan, Meiyappan] Univ Waterloo, Waterloo, ON, Canada.
C3 Universitas Muhammadiyah Surakarta; Nara Institute of Science &
   Technology; Shinshu University; University of Waterloo
RP Nugroho, YS (corresponding author), Univ Muhammadiyah Surakarta, Jawa Tengah, Indonesia.
EM yusuf.nugroho@ums.ac.id; islam.syful.il4@is.naist.jp;
   nakasai@kagoshima-ct.ac.jp; rehman.ifraz.qy4@is.naist.jp;
   hata@shinshu-u.ac.jp; mei.nagappan@uwaterloo.ca; matumoto@is.naist.jp
RI Nugroho, Yusuf Sulistyo/AAB-6581-2021; Nugroho, Yusuf
   Sulistyo/S-8200-2019; Hata, Hideaki/GQB-2557-2022; Hata,
   Hideaki/N-7103-2019; Kula, Raula/AAD-6079-2019
OI Nugroho, Yusuf Sulistyo/0000-0001-6391-0851; Hata,
   Hideaki/0000-0003-0708-5222; Kula, Raula/0000-0003-2324-0608; Syful,
   Islam/0000-0002-7441-6987
FU Grants-in-Aid for Scientific Research [20H05706, 20K19774] Funding
   Source: KAKEN
CR Abdellatif A, 2020, IEEE WORK CONF MIN S, P174, DOI 10.1145/3379597.3387472
   Allamanis M, 2013, IEEE WORK CONF MIN S, P53, DOI 10.1109/MSR.2013.6624004
   Aniche M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P499, DOI 10.1145/3180155.3180180
   [Anonymous], 1992, BREAKTHROUGHS STAT S
   Beyer S., 2017, Analyzing the relationships between android api classes and their references on stack overflow
   Beyer S, 2020, EMPIR SOFTW ENG, V25, P2258, DOI 10.1007/s10664-019-09758-x
   Beyer S, 2014, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSME.2014.88
   Calefato F, 2018, INFORM SOFTWARE TECH, V94, P186, DOI 10.1016/j.infsof.2017.10.009
   El Mezouar M, 2018, EMPIR SOFTW ENG, V23, P1704, DOI 10.1007/s10664-017-9559-4
   Guzman E, 2016, INT REQUIR ENG CONF, P96, DOI 10.1109/RE.2016.67
   Guzzi A, 2013, IEEE WORK CONF MIN S, P277, DOI 10.1109/MSR.2013.6624039
   Hata H, 2021, PHYS REV LETT
   Hata H, 2019, PROC INT CONF SOFTW, P1211, DOI 10.1109/ICSE.2019.00123
   Hata H, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P15, DOI 10.1109/CHASE.2015.9
   Ibekwe AM, 2014, FRONT CELL INFECT MI, V4, DOI 10.3389/fcimb.2014.00122
   Kahani N, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P227, DOI 10.1145/2976767.2976773
   Kauffeld S, 2012, SMALL GR RES, V43, P130, DOI 10.1177/1046496411429599
   Lertwittayatrai N, 2017, ASIA PAC SOFWR ENG, P298, DOI 10.1109/APSEC.2017.36
   Li PL, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P700, DOI 10.1109/ICSE.2015.335
   Lum PY, 2013, SCI REP-UK, V3, DOI 10.1038/srep01236
   Middleton J, 2018, IEEE WORK CONF MIN S, P403, DOI 10.1145/3196398.3196429
   Nakasai K, 2019, IEEE SOFTWARE, V36, P22, DOI 10.1109/MS.2018.2874568
   Rosen C, 2016, EMPIR SOFTW ENG, V21, P1192, DOI 10.1007/s10664-015-9379-3
   Squire M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P219, DOI 10.1109/ICSE.2015.150
   Steinmacher I, 2015, INFORM SOFTWARE TECH, V59, P67, DOI 10.1016/j.infsof.2014.11.001
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Tantisuwankul J, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110416
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Viera AJ, 2005, FAM MED, V37, P360
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P1552, DOI 10.1007/s10664-017-9558-5
   Ye DH, 2017, EMPIR SOFTW ENG, V22, P375, DOI 10.1007/s10664-016-9430-z
   Ye YW, 2003, PROC INT CONF SOFTW, P419
   Zagalsky A, 2018, EMPIR SOFTW ENG, V23, P953, DOI 10.1007/s10664-017-9536-y
   Zhou MH, 2015, IEEE T SOFTWARE ENG, V41, P82, DOI 10.1109/TSE.2014.2349496
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
   Zou J, 2017, INFORM SOFTWARE TECH, V84, P19, DOI 10.1016/j.infsof.2016.12.003
NR 37
TC 3
Z9 3
U1 1
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 132
DI 10.1007/s10664-021-10032-2
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UY6YZ
UT WOS:000701668200001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Zamani, S
   Hemmati, H
AF Zamani, Shayan
   Hemmati, Hadi
TI A pragmatic approach for hyper-parameter tuning in search-based test
   case generation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based testing; Hyper-parameter tuning; Test case generation;
   Source code metrics
ID OPTIMIZATION
AB Search-based test case generation, which is the application of meta-heuristic search for generating test cases, has been studied a lot in the literature, lately. Since, in theory, the performance of meta-heuristic search methods is highly dependent on their hyper-parameters, there is a need to study hyper-parameter tuning in this domain. In this paper, we propose a new metric ("Tuning Gain"), which estimates how cost-effective tuning a particular class is. We then predict "Tuning Gain" using static features of source code classes. Finally, we prioritize classes for tuning, based on the estimated "Tuning Gains" and spend the tuning budget only on the highly-ranked classes. To evaluate our approach, we exhaustively analyze 1,200 hyper-parameter configurations of a well-known search-based test generation tool (EvoSuite) for 250 classes of 19 projects from benchmarks such as SF110 and SBST2018 tool competition. We used a tuning approach called Meta-GA and compared the tuning results with and without the proposed class prioritization. The results show that for a low tuning budget, prioritizing classes outperforms the alternatives in terms of extra covered branches (10 times more than a traditional global tuning). In addition, we report the impact of different features of our approach such as search space size, tuning budgets, tuning algorithms, and the number of classes to tune, on the final results.
C1 [Zamani, Shayan; Hemmati, Hadi] Univ Calgary, Schulich Sch Engn, Dept Elect & Software Engn, Calgary, AB, Canada.
C3 University of Calgary
RP Zamani, S (corresponding author), Univ Calgary, Schulich Sch Engn, Dept Elect & Software Engn, Calgary, AB, Canada.
EM shayan.zamani1@ucalgary.ca; hadi.hemmati@ucalgary.ca
FU Compute Canada; Natural Sciences and Engineering Research Council of
   1049 Canada [RGPIN/04552-2020]; Mitacs Accelerate Program [IT16572]
FX This work is partially supported by Compute Canada, the Natural Sciences
   and Engineering Research Council of 1049 Canada [RGPIN/04552-2020] and
   Mitacs Accelerate Program [Application Ref. IT16572].
CR Agrawal A, 2019, INF ECON POLICY, V47, P1, DOI 10.1016/j.infoecopol.2019.05.001
   Agrawal A, 2020, EMPIR SOFTW ENG, V25, P2099, DOI 10.1007/s10664-020-09808-9
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Agrawal A, 2018, INFORM SOFTWARE TECH, V98, P74, DOI 10.1016/j.infsof.2018.02.005
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Aniche M., 2015, Tech. Rep.
   [Anonymous], 2013, P 9 INT C PRED MOD S, DOI DOI 10.1145/2499393.2499394
   [Anonymous], 2006, GENETIC ALGORITHMS
   [Anonymous], 2006, ser. Natural computing
   [Anonymous], 2003, NAT COMP SER
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Bergstra J., 2011, Adv. Neural Inf. Process. Syst., V24
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Birattari M., 2009, Tuning Metaheuristics: A Machine Learning Perspective, V197, DOI DOI 10.1007/978-3-642-00483-4
   Burke EK, 2009, INTEL SYST REF LIBR, V1, P177
   Chen D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P456, DOI 10.1145/3236024.3236050
   Clarkware, JDEP
   Craenen B., 2001, Proceedings of the 3rd Annual Conference on Genetic and Evolutionary Computation, P291
   Crawford B, 2013, EXPERT SYST APPL, V40, P1690, DOI 10.1016/j.eswa.2012.09.013
   Eder L, KEYWORD COUNTER
   Eiben AE, 1999, IEEE T EVOLUT COMPUT, V3, P124, DOI 10.1109/4235.771166
   Feldt R, 2000, LECT NOTES COMPUT SC, V1802, P271
   Ferrer J, 2013, INFORM SOFTWARE TECH, V55, P2125, DOI 10.1016/j.infsof.2013.07.007
   Feurer M, 2019, SPRING SER CHALLENGE, P3, DOI 10.1007/978-3-030-05318-5_1
   Fraser G, 2018, HDB SOFTWARE ENG
   Fraser G, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685612
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Freisleben B., 1993, Artificial Neural Nets and Genetic Algorithms. Proceedings of the International Conference, P392
   Fu W., 2016, CoRR
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Grano G, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2158
   GREFENSTETTE JJ, 1986, IEEE T SYST MAN CYB, V16, P122, DOI 10.1109/TSMC.1986.289288
   Guyon I, 2006, STUD FUZZ SOFT COMP, V207, P1
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Järvelin K, 2002, ACM T INFORM SYST, V20, P422, DOI 10.1145/582415.582418
   KIRKPATRICK S, 1983, SCIENCE, V220, P671, DOI 10.1126/science.220.4598.671
   Kotelyanskii A, 2014, INT CONF QUAL SOFTW, P79, DOI 10.1109/QSIC.2014.43
   Malan KM, 2013, INFORM SCIENCES, V241, P148, DOI 10.1016/j.ins.2013.04.015
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Metwally AA, 2021, HALSTEAD COMPLEXITYM
   Montgomery D. C., 1995, Response Surface Methodology: Process and Product Optimization Using Designed Experiments, V1st, DOI DOI 10.2307/1270613
   Oster N, 2006, LECT NOTES COMPUT SC, V4166, P426
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Paterson David, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P141, DOI 10.1007/978-3-319-22183-0_10
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pelikan M, 1999, GECCO-99: PROCEEDINGS OF THE GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P525
   Molina UR, 2018, PROCEEDINGS 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P22, DOI 10.1145/3194718.3194728
   Sakti A, 2015, IEEE T SOFTWARE ENG, V41, P294, DOI 10.1109/TSE.2014.2363479
   Sayyad AS, 2013, P WORKSH REPL EMP SO
   Shu R, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09906-8
   Smit SK, 2009, IEEE C EVOL COMPUTAT, P399, DOI 10.1109/CEC.2009.4982974
   Storn R, 1997, J GLOBAL OPTIM, V11, P341, DOI 10.1023/A:1008202821328
   Tange O., 2018, GNU Parallel
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Treude Christoph, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P84, DOI 10.1109/MSR.2019.00022
   van Stein B, 2019, IEEE IJCNN, DOI 10.1109/ijcnn.2019.8851720
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   Xia TP, 2022, IEEE T SOFTWARE ENG, V48, P1994, DOI 10.1109/TSE.2020.3047072
   Xu X, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1335, DOI 10.1145/3071178.3071184
   Zamani S, 2020, PROC IEEE INT CONF S, P418, DOI 10.1109/ICSME46990.2020.00047
   Zamani S, 2019, LECT NOTES COMPUT SC, V11664, P137, DOI 10.1007/978-3-030-27455-9_10
   Zhang YY, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3196831
NR 66
TC 1
Z9 1
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 126
DI 10.1007/s10664-021-10024-2
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UR9NW
UT WOS:000697067500001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Ernst, NA
   Carver, JC
   Mendez, D
   Torchiano, M
AF Ernst, Neil A.
   Carver, Jeffrey C.
   Mendez, Daniel
   Torchiano, Marco
TI Understanding peer review of software engineering papers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Peer review; Interview; Survey
AB Context Peer review is a key activity intended to preserve the quality and integrity of scientific publications. However, in practice it is far from perfect. Objective We aim at understanding how reviewers, including those who have won awards for reviewing, perform their reviews of software engineering papers to identify both what makes a good reviewing approach and what makes a good paper. Method We first conducted a series of interviews with recognised reviewers in the software engineering field. Then, we used the results of those interviews to develop a questionnaire used in an online survey and sent out to reviewers from well-respected venues covering a number of software engineering disciplines, some of whom had won awards for their reviewing efforts. Results We analyzed the responses from the interviews and from 175 reviewers who completed the online survey (including both reviewers who had won awards and those who had not). We report on several descriptive results, including: Nearly half of award-winners (45%) are reviewing 20+ conference papers a year, while 28% of non-award winners conduct that many. The majority of reviewers (88%) are taking more than two hours on journal reviews. We also report on qualitative results. Our findings suggest that the most important criteria of a good review is that it should be factual and helpful, which ranked above others such as being detailed or kind. The most important features of papers that result in positive reviews are a clear and supported validation, an interesting problem, and novelty. Conversely, negative reviews tend to result from papers that have a mismatch between the method and the claims and from papers with overly grandiose claims. Further insights include, if not limited to, that reviewers view data availability and its consistency as being important or that authors need to make their contribution of the work very clear in their paper. Conclusions Based on the insights we gained through our study, we conclude our work by compiling a proto-guideline for reviewing. One hope we associate with our work is to contribute to the ongoing debate and contemporary effort to further improve our peer review models in the future.
C1 [Ernst, Neil A.] Univ Victoria, Victoria, BC, Canada.
   [Carver, Jeffrey C.] Univ Alabama, Tuscaloosa, AL USA.
   [Mendez, Daniel] Blekinge Inst Technol, Karlskrona, Sweden.
   [Mendez, Daniel] Fortiss GmbH, Munich, Germany.
   [Torchiano, Marco] Politecn Torino, Turin, Italy.
C3 University of Victoria; University of Alabama System; University of
   Alabama Tuscaloosa; Blekinge Institute Technology; fortiss; Polytechnic
   University of Turin
RP Ernst, NA (corresponding author), Univ Victoria, Victoria, BC, Canada.; Mendez, D (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.; Mendez, D (corresponding author), Fortiss GmbH, Munich, Germany.; Torchiano, M (corresponding author), Politecn Torino, Turin, Italy.
EM nernst@uvic.ca; carver@cs.ua.edu; daniel.mendez@bth.se;
   marco.torchiano@polito.it
RI Mendez, Daniel/ABA-4579-2021
OI Mendez, Daniel/0000-0003-0619-6027; Carver, Jeffrey/0000-0002-7824-9151;
   Torchiano, Marco/0000-0001-5328-368X
CR [Anonymous], 2002, ACM SIGSOFT SOFTW EN, DOI DOI 10.1145/571681.571686
   [Anonymous], 2011, WRITING SCI WRITE PA
   Drubin DG, 2011, MOL BIOL CELL, V22, P525, DOI 10.1091/mbc.E11-01-0002
   Fernandes JM, 2014, SCIENTOMETRICS, V101, P257, DOI 10.1007/s11192-014-1331-6
   Horbach SPJM, 2019, SCIENTOMETRICS, V118, P339, DOI 10.1007/s11192-018-2969-2
   MacAuley D, 2012, WRITE PAPER, P102, DOI [DOI 10.1002/9781118488713.CH16.EPRINT, 10.1002/9781118488713.ch16, DOI 10.1002/9781118488713.CH16]
   Mathew G, 2023, IEEE T SOFTWARE ENG, V49, P1397, DOI 10.1109/TSE.2018.2870388
   Mendez D, 2020, CONT EMPIRICAL METHO
   Nierstrasz O, 1998, WUCS9825 PLOP
   Ozkaya I, 2021, IEEE SOFTWARE, V38, P3, DOI 10.1109/MS.2020.3028681
   Peterson DAM, 2020, SOC SCI QUART, V101, P1648, DOI 10.1111/ssqu.12824
   Petre M, 2020, P 2020 ACM C INN TEC, DOI [10.1145/3341525.3394994, DOI 10.1145/3341525.3394994]
   Prechelt L, 2018, INFORM SOFTWARE TECH, V95, P75, DOI 10.1016/j.infsof.2017.10.019
   Price Eric, 2014, NIPS EXPT
   Ragone A, 2013, SCIENTOMETRICS, V97, P317, DOI 10.1007/s11192-013-1002-z
   Ralph Paul, 2020, ACM SIGSOFT SOFTWARE, V45, P17, DOI [DOI 10.1145/3385678.3385681, 10.1145/3385678.3385681]
   Seeber M., 2017, SCIENTOMETRICS, V113, P567, DOI [10.1007/s11192-017-2264-7, DOI 10.1007/s11192-017-2264-7]
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Shepperd M, 2018, INFORM SOFTWARE TECH, V99, P120, DOI 10.1016/j.infsof.2018.01.006
   SMITH AJ, 1990, COMPUTER, V23, P65, DOI 10.1109/2.55470
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Soldani Jacopo, 2020, ACM SIGSOFT Software Engineering Notes, V45, P12, DOI 10.1145/3375572.3375575
   Spier Ray, 2002, Trends Biotechnol, V20, P357, DOI 10.1016/S0167-7799(02)01985-6
   Squazzoni F, 2017, SCIENTOMETRICS, V113, P501, DOI 10.1007/s11192-017-2518-4
   Storey M-A, 2019, ARXIV19051284
   Tennant Jonathan P, 2017, F1000Res, V6, P1151, DOI 10.12688/f1000research.12037.1
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Theisen C, 2017, PROC IEEE ACM INT C, P402, DOI 10.1109/ICSE-C.2017.51
   Tomkins A, 2017, P NATL ACAD SCI USA, V114, P12708, DOI 10.1073/pnas.1707323114
   Tung AKH, 2006, SIGMOD REC, V35, P6, DOI 10.1145/1168092.1168093
   Winslett M, 2016, SIGMOD RECORD 42 2
   Wolfram D, 2020, SCIENTOMETRICS, V125, P1033, DOI 10.1007/s11192-020-03488-4
   ZERBE WJ, 1987, ACAD MANAGE REV, V12, P250, DOI 10.2307/258533
   Zong QJ, 2020, SCIENTOMETRICS, V125, P607, DOI 10.1007/s11192-020-03545-y
NR 34
TC 7
Z9 7
U1 1
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 103
DI 10.1007/s10664-021-10005-5
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA TJ7PX
UT WOS:000673670000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Rodríguez-Pérez, G
   Nadri, R
   Nagappan, M
AF Rodriguez-Perez, Gema
   Nadri, Reza
   Nagappan, Meiyappan
TI Perceived diversity in software engineering: a systematic literature
   review
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Perceived diversity; Systematic literature review; Software engineering
ID GENDER-DIFFERENCES; DESIGN; PARTICIPATION; INFORMATION; PERCEPTIONS;
   PERFORMANCE; EXPERIENCES; IMPACTS; WOMEN
AB We define perceived diversity as the diversity factors that individuals are born with. Perceived diversity in Software Engineering has been recognized as a high-value team property and companies are willing to increase their efforts to create more diverse work teams. The current diversity state-of-the-art shows that gender diversity studies have been growing during the past decade, and they have shown the benefits of including women in software teams. However, less is known about how other perceived diversity factors such as race, nationality, disability, and age of developers are related to Software Engineering. Through a systematic literature review, we aim to clarify the research area concerned with perceived diversity in Software Engineering. Our goal is to identify (1) what issues have been studied and what results have been reported; (2) what methods, tools, models, and processes have been proposed to help perceived diversity issues; and (3) what limitations have been reported when studying perceived diversity in Software Engineering. Furthermore, our ultimate goal is to identify gaps in the current literature and create a call for future action in perceived diversity in Software Engineering. Our results indicate that the individual studies have typically had a gender diversity perspective focusing on showing gender bias or gender differences instead of developing methods and tools to mitigate the gender diversity issues faced in SE. Moreover, perceived diversity aspects related to SE participants' race, age, and disability need to be further analyzed in Software Engineering research. From our systematic literature review, we conclude that researchers need to consider a wider set of perceived diversity aspects for future research.
C1 [Rodriguez-Perez, Gema] Univ British Columbia, Irving K Barber Fac Sci, Kelowna, BC, Canada.
   [Nadri, Reza] Univ Waterloo, Waterloo, ON, Canada.
   [Nagappan, Meiyappan] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
C3 University of British Columbia; University of Waterloo; University of
   Waterloo
RP Nagappan, M (corresponding author), Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON N2L 3G1, Canada.
EM gerope@mail.ubc.ca; rnadri@uwaterloo.ca; mei.nagappan@uwaterloo.ca
RI Rodríguez-Pérez, Gema/AAN-7844-2020
OI Rodríguez-Pérez, Gema/0000-0002-0062-8418
CR Adikaram A.S., 2015, South Asian Journal of Human Resources Management, V2, P37, DOI DOI 10.1177/2322093715576161
   Ahmadi M, 2018, PROCEEDINGS OF THE 4TH CONFERENCE ON GENDER & IT (GENDERIT '18), P239, DOI 10.1145/3196839.3196878
   Al-Ani B, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P31, DOI 10.1109/ICGSE.2013.13
   Alfaro I, 2015, BUS INFORM SYST ENG+, V57, P91, DOI 10.1007/s12599-015-0372-6
   Allport GW., 1954, NATURE PREJUDICE
   Altiner S, 2018, S AFR J SCI, V114
   Anderson G., 2019, P 52 HAW INT SYST SC
   Angell R, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P871, DOI 10.1145/236024.3264590
   [Anonymous], 2012, EXPT SOFTWARE ENG
   [Anonymous], 2010, CULTURES ORG SOFTWAR
   [Anonymous], 2012, 20 IEEE INT C PROGR
   [Anonymous], 2006, P SIGCHI C HUM FACT, DOI DOI 10.1145/1124772.1124808
   Aué J, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962633
   Aydemir FB, 2018, 2018 IEEE/ACM INTERNATIONAL WORKSHOP ON SOFTWARE FAIRNESS (FAIRWARE 2018), P15, DOI [10.1145/3194770.3194778, 10.23919/FAIRWARE.2018.8452915]
   Balali S, 2018, COMPUT SUPP COOP W J, V27, P679, DOI 10.1007/s10606-018-9310-8
   Baltes S, 2020, IEEE SOFTWARE, V37, P26, DOI 10.1109/MS.2020.3014178
   Beckwith L, 2005, 2005 IEEE SYMPOSIUM ON VISUAL LANGUAGE AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P153, DOI 10.1109/VLHCC.2005.31
   Beckwith L, 2007, VL/HCC 2007: IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P119, DOI 10.1109/VLHCC.2007.15
   Beckwith L, 2006, COMPUTER, V39, P97, DOI 10.1109/MC.2006.382
   Beckwith Laura, 2005, P SIGCHI C HUM FACT, P869
   Begel A, 2021, REMOTE VIDEO GAME CO
   Bertrand M, 2004, AM ECON REV, V94, P991, DOI 10.1257/0002828042002561
   Blincoe K, 2019, IEEE SOFTWARE, V36, P51, DOI 10.1109/MS.2019.2917428
   Bollmann S, 2017, 1 SURVEY DIVERSITY R
   Borchers G, 2003, PROC INT CONF SOFTW, P540, DOI 10.1109/ICSE.2003.1201234
   Bosu A, 2019, INT SYMP EMP SOFTWAR, P295
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Braswel KM, 2021, 52 ACM TECHN COMP SC
   Brun Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P754, DOI 10.1145/3236024.3264838
   Buffardi K, 2016, INT CONF COMP SCI ED, P382, DOI 10.1109/ICCSE.2016.7581611
   Burnett M, 2018, DESIGNING TECHNOLOGI
   Burnett M, 2017, S VIS LANG HUM CEN C, P139, DOI 10.1109/VLHCC.2017.8103461
   Burnett M, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P2586, DOI 10.1145/2858036.2858274
   Burnett M, 2016, INTERACT COMPUT, V28, P760, DOI 10.1093/iwc/iwv046
   Byrne D., 1971, The attraction paradigm
   Canedo ED, 2019, INFORMATION, V10, DOI 10.3390/info10100309
   Cao Jill, 2010, Proceedings 2010 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC 2010), P149, DOI 10.1109/VLHCC.2010.29
   Casey V, 2009, INT CONF GLOBAL SOFT, P8, DOI 10.1109/ICGSE.2009.9
   Catolino G, 2020, IEEE SOFTWARE, V37, P10, DOI 10.1109/MS.2019.2944594
   Catolino G, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P11, DOI 10.1109/ICSE-SEIS.2019.00010
   Bastarrica MC, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON GENDER EQUALITY IN SOFTWARE ENGINEERING (GE 2019), P29, DOI 10.1109/GE.2019.00014
   Charters S., 2007, GUIDELINES PERFORMIN
   Chatterjee A, 2021, 2021 IEEE ACM 43 INT
   Chintakovid T, 2009, S VIS LANG HUM CEN C, P217, DOI 10.1109/VLHCC.2009.5295257
   Choi N, 2015, LIBR INFORM SCI RES, V37, P109, DOI 10.1016/j.lisr.2015.02.007
   Cunha AB, 2009, 2009 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING, P23, DOI 10.1109/CHASE.2009.5071406
   Cunningham SJ, 2016, LECT NOTES COMPUT SC, V10075, P45, DOI 10.1007/978-3-319-49304-6_6
   Daniel S, 2013, INFORM SYST RES, V24, P312, DOI 10.1287/isre.1120.0435
   Davidson JL, 2014, S VIS LANG HUM CEN C, P93, DOI 10.1109/VLHCC.2014.6883029
   Davis J.G., 2014, Proceedings of the 48th Annual Forum on the Geology of Industrial Minerals, Phoenix, Arizona, April 30 - May 4, 2012. Arizona Geological Survey Special Paper #9, P1
   Dodgin Sarah R., 2020, BIODIVERSITY-OTTAWA, V21, P28, DOI 10.1080/14888386.2020.1736155
   Dong W, 2016, ACM CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW 2016), P274, DOI 10.1145/2818048.2835198
   Draude C, 2018, PROCEEDINGS OF THE 4TH CONFERENCE ON GENDER & IT (GENDERIT '18), P43, DOI 10.1145/3196839.3196846
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Erete Sheena, 2020, Proceedings of the ACM on Human-Computer Interaction, V4, DOI 10.1145/3432933
   Evans JST, 2003, TRENDS COGN SCI, V7, P454, DOI 10.1016/j.tics.2003.08.012
   Fazli F., 2017, P 50 HAW INT C SYST
   Filippova A, 2017, PROC INT CONF SOFTW, P152, DOI 10.1109/ICSE.2017.22
   Fisher M, 2006, PROC IEEE INT CONF S, P289
   Fleming, 2010, P 2010 ACM IEEE INT, P1, DOI DOI 10.1145/1852786.1852824
   Ford D., 2020, P 2020 CHI C HUM FAC
   Ford D, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON GENDER EQUALITY IN SOFTWARE ENGINEERING (GE 2019), P9, DOI 10.1109/GE.2019.00011
   Ford D, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P51, DOI 10.1109/ICSE-SEIS.2019.00014
   Ford D, 2017, S VIS LANG HUM CEN C, P239, DOI 10.1109/VLHCC.2017.8103473
   Ford D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P846, DOI 10.1145/2950290.2950331
   Furtado LB, 2021, IEEE SOFTWARE, V38, P58, DOI 10.1109/MS.2020.3044020
   Galhotra S, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P498, DOI 10.1145/3106237.3106277
   German DM, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P523, DOI 10.1145/3180155.3180217
   Ghosh R.A., 2002, Free / Libre and Open Source Software: Survey and Study Deliverable D18 : FINAL REPORT Part IV: Survey of Developers
   Gilal AR, 2016, INFORM SOFTWARE TECH, V74, P105, DOI 10.1016/j.infsof.2016.02.007
   Gilal AR, 2014, 2014 INTERNATIONAL CONFERENCE ON COMPUTER, COMMUNICATIONS, AND CONTROL TECHNOLOGY (I4CT), P261, DOI 10.1109/I4CT.2014.6914186
   Gomez O, 2017, P 20 IBERO AM C SOFT, P197
   Gralha C, 2019, INT REQUIR ENG CONF, P165, DOI 10.1109/RE.2019.00027
   Gren L, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P77, DOI 10.1145/3195836.3195837
   Grigoreanu V, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P149, DOI 10.1109/VLHCC.2008.4639077
   Grigoreanu V, 2009, LECT NOTES COMPUT SC, V5435, P205
   Guzman E, 2019, INT REQUIR ENG CONF, P381, DOI 10.1109/RE.2019.00049
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Heiniger S., 2018, NATL BIAS INT GYMNAS
   Hilderbrand C, 2020, PROC INT CONF SOFTW, P433, DOI 10.1145/3377811.3380371
   Hill C, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P6658, DOI 10.1145/3025453.3025609
   Hill C, 2016, S VIS LANG HUM CEN C, P199, DOI 10.1109/VLHCC.2016.7739685
   Holtkamp P, 2015, J SYST SOFTWARE, V101, P136, DOI 10.1016/j.jss.2014.12.010
   Homan AC, 2007, J APPL PSYCHOL, V92, P1189, DOI 10.1037/0021-9010.92.5.1189
   Hongyun Yu, 2009, 2009 WRI World Congress on Computer Science and Information Engineering, CSIE, P654, DOI 10.1109/CSIE.2009.911
   Hosoda M, 2012, J MANAGE PSYCHOL, V27, P347, DOI 10.1108/02683941211220162
   Huang Y, 2021, PROC INT CONF SOFTW, P1020, DOI 10.1109/ICSE43902.2021.00096
   Huff EW, 2020, PROC IEEE INT CONF S, P707, DOI 10.1109/ICSME46990.2020.00077
   Hui JulieS., 2016, Proceedings of the 19th International Conference on Supporting Group Work - 137 GROUP '16, P71, DOI [DOI 10.1145/2957276.2957290, 10.1145/2957276.2957290]
   Huilian Qiu Sophie, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3359224
   Hyrynsalmi S, 2019, INT ICE CONF ENG, P1, DOI DOI 10.1109/ice.2019.8792630
   Hyrynsalmi SM, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON GENDER EQUALITY IN SOFTWARE ENGINEERING (GE 2019), P1, DOI 10.1109/GE.2019.00008
   Imtiaz N, 2019, PROC INT CONF SOFTW, P700, DOI 10.1109/ICSE.2019.00079
   Irrgang M, 2018, PROCEEDINGS OF THE 4TH CONFERENCE ON GENDER & IT (GENDERIT '18), P29, DOI 10.1145/3196839.3196844
   Izquierdo D, 2019, IEEE SOFTWARE, V36, P28, DOI 10.1109/MS.2018.2874322
   James S.E., 2015, REPORT 2015 US TRANS
   James T, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P13, DOI 10.1109/ICSE-SEIP.2017.31
   Jehn KA, 1999, ADMIN SCI QUART, V44, P741, DOI 10.2307/2667054
   Judy K. H., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P5279, DOI 10.1109/HICSS.2012.92
   Kanij T, 2011, INT SYMP EMP SOFTWAR, P359, DOI 10.1109/ESEM.2011.48
   Kirton G, 2018, J STRATEGIC INF SYST, V27, P157, DOI 10.1016/j.jsis.2018.01.001
   Kopec W, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P49, DOI 10.1145/3195836.3195840
   Kopec W, 2018, EMPIR SOFTW ENG, V23, P1895, DOI 10.1007/s10664-017-9565-6
   Krishna S, 2004, COMMUN ACM, V47, P62, DOI 10.1145/975817.975818
   Kuechler Victor, 2012, OPEN SOURCE SYSTEMS, V378, P78
   KUHN S, 1993, COMMUN ACM, V36, P24
   Kuttal SK, 2019, S VIS LANG HUM CEN C, P75, DOI [10.1109/VLHCC.2019.8818790, 10.1109/vlhcc.2019.8818790]
   Lee A, 2019, PROC INT CONF SOFTW, P677, DOI 10.1109/ICSE.2019.00077
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Lombardi EL, 2001, J HOMOSEXUAL, V42, P89, DOI 10.1300/J082v42n01_05
   Lyon LA, 2018, 2018 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P125, DOI 10.1109/VLHCC.2018.8506561
   Machado LS, 2020, IEEE SOFTWARE
   Marques M, 2015, PROC FRONT EDUC CONF, P931, DOI 10.1109/FIE.2015.7344175
   May A, 2019, EMPIR SOFTW ENG, V24, P1997, DOI 10.1007/s10664-019-09685-x
   Mealin S, 2012, S VIS LANG HUM CEN C, P71, DOI 10.1109/VLHCC.2012.6344485
   Mendez C, 2019, S VIS LANG HUM CEN C, P97, DOI [10.1109/VLHCC.2019.8818889, 10.1109/vlhcc.2019.8818889]
   Mendez C, 2018, 2018 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P23, DOI 10.1109/VLHCC.2018.8506514
   Mendez C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1004, DOI 10.1145/3180155.3180241
   Mendez C, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON GENDER EQUALITY IN SOFTWARE ENGINEERING (GE 2018), P21, DOI 10.1145/3195570.3195572
   Menezes A, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P45, DOI 10.1145/3195836.3195857
   Metaxa-Kakavouli D, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3174188
   Mishra A, 2014, LECT NOTES COMPUT SC, V8842, P448, DOI 10.1007/978-3-662-45550-0_45
   Moon E, 2013, P ANN HICSS, P3168, DOI 10.1109/HICSS.2013.240
   Morgan S., 2017, P COMPANION 2017 ACM, P39, DOI 10.1145/3135932.3135952
   Morris MR, 2015, ASSETS'15: PROCEEDINGS OF THE 17TH INTERNATIONAL ACM SIGACCESS CONFERENCE ON COMPUTERS & ACCESSIBILITY, P173, DOI 10.1145/2700648.2809841
   Morris P, 2013, AM SOC TEST MATER, V1570, P1, DOI 10.1520/STP157020130033
   Morrison P, 2016, S VIS LANG HUM CEN C, P171, DOI 10.1109/VLHCC.2016.7739681
   Murakami Y, 2017, PROC INT SYMP SOFTW, P164, DOI 10.1109/ISSRE.2017.37
   Murphy-Hill E, 2021, IEEE T SOFTWARE ENG, V47, P582, DOI 10.1109/TSE.2019.2900308
   Nafus D, 2012, NEW MEDIA SOC, V14, P669, DOI 10.1177/1461444811422887
   O'Higgins N., 2001, YOUTH UNEMPLOYMENT E
   Ortu Marco, 2017, Journal of Software Engineering Research and Development, V5, DOI 10.1186/s40411-017-0044-y
   Ostergaard CR, 2011, RES POLICY, V40, P500, DOI 10.1016/j.respol.2010.11.004
   Padala S, 2020, IEEE T SOFTW ENG
   Page SE, 2007, DIFFERENCE: HOW THE POWER OF DIVERSITY CREATES BETTER GROUPS, FIRMS, SCHOOLS, AND SOCIETIES, P1
   Paris G, 1998, NATURE, V396, P210, DOI 10.1038/24249
   Paul R, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P26, DOI [10.1109/saner.2019.8667987, 10.1109/SANER.2019.8667987]
   Perez GR, 2020, IEEE SOFTWARE
   Pieterse V., 2018, SO AFRICAN COMPUTER, V2018, P120
   Posthuma RA, 2009, J MANAGE, V35, P158, DOI 10.1177/0149206308318617
   Prado R., 2020, IEEE SOFTWARE
   Pretorius C., 2020, IEEE SOFTWARE
   Qiu HS, 2019, PROC INT CONF SOFTW, P688, DOI 10.1109/ICSE.2019.00078
   Quesenberry JL, 2012, INFORM SYST J, V22, P457, DOI 10.1111/j.1365-2575.2012.00416.x
   Rastogi A, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240504
   Rauschenbach C, 2013, J MANAGE PSYCHOL, V28, P781, DOI 10.1108/JMP-07-2013-0251
   Razavian M, 2016, IEEE SOFTWARE, V33, P64, DOI 10.1109/MS.2015.84
   Robert LP, 2016, 34TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, CHI 2016, P2461, DOI 10.1145/2858036.2858534
   Robles G, 2016, IFIP ADV INF COMM TE, V472, P163, DOI 10.1007/978-3-319-39225-7_13
   Ross M, 2020, ACM T COMPUT EDUC, V20, DOI 10.1145/3377426
   Scheuerman MK., 2021, HCI GUIDELINES GENDE
   Schloegel U, 2018, INFORM SOFTWARE TECH, V97, P146, DOI 10.1016/j.infsof.2018.01.009
   Schloegel U, 2016, J SYST SOFTWARE, V121, P1, DOI 10.1016/j.jss.2016.07.041
   Shachaf P, 2008, INFORM MANAGE-AMSTER, V45, P131, DOI 10.1016/j.im.2007.12.003
   Shah H, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P51, DOI 10.1109/ICGSE.2013.15
   Sharp H, 2016, IEEE T SOFTWARE ENG, V42, P786, DOI 10.1109/TSE.2016.2519887
   Silveira KK, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2019), P7, DOI 10.1109/CHASE.2019.00010
   Singh V, 2019, 13TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2019), VOL 2, P94, DOI 10.1145/3344948.334968
   Singh V, 2019, IFIP ADV INF COMM TE, V556, P68, DOI 10.1007/978-3-030-20883-7_7
   Singh V, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON GENDER EQUALITY IN SOFTWARE ENGINEERING (GE 2019), P17, DOI 10.1109/GE.2019.00010
   Spichkova M, 2017, 11TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE (ECSA 2017) - COMPANION VOLUME, P38, DOI 10.1145/3129790.3129826
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Subrahmaniyan N, 2008, CHI 2008: 26TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS VOLS 1 AND 2, CONFERENCE PROCEEDINGS, P617
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Thomas JO, 2018, 2018 RESEARCH ON EQUITY AND SUSTAINED PARTICIPATION IN ENGINEERING, COMPUTING, AND TECHNOLOGY (RESPECT)
   Tourani P, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P24, DOI 10.1109/SANER.2017.7884606
   Usher Raven., 2006, North American Lexicon of Transgender Terms
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Vasilescu B, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P50, DOI 10.1109/CHASE.2015.14
   Vasilescu B, 2014, INTERACT COMPUT, V26, P488, DOI 10.1093/iwc/iwt047
   Vedres B, 2019, EPJ DATA SCI, V8, DOI 10.1140/epjds/s13688-019-0202-z
   Vorvoreanu M, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300283
   Wang Y, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P580, DOI 10.1145/3368089.3409762
   Wang Y, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2019), P1, DOI 10.1109/ICSE-SEIS.2019.00009
   Wang Y, 2018, ASIA PAC SOFWR ENG, P436, DOI 10.1109/APSEC.2018.00058
   Wang ZD, 2018, PROC INT CONF SOFTW, P81, DOI 10.1145/3183428.3183437
   Wurzelová P, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON GENDER EQUALITY IN SOFTWARE ENGINEERING (GE 2019), P5, DOI 10.1109/GE.2019.00009
   Zacchiroli S, 2021, IEEE SOFTWARE, V38, P45, DOI 10.1109/MS.2020.3038765
NR 178
TC 37
Z9 39
U1 4
U2 36
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 102
DI 10.1007/s10664-021-09992-2
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA TJ3IR
UT WOS:000673380100001
PM 34305441
OA Bronze, Green Published
DA 2024-07-18
ER

PT J
AU Di Rocco, J
   Di Ruscio, D
   Di Sipio, C
   Nguyen, PT
   Rubei, R
AF Di Rocco, Juri
   Di Ruscio, Davide
   Di Sipio, Claudio
   Nguyen, Phuong T.
   Rubei, Riccardo
TI Development of recommendation systems for software engineering: the
   CROSSMINER experience
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Recommendation systems; Empirical evaluation; Experience report
AB To perform their daily tasks, developers intensively make use of existing resources by consulting open source software (OSS) repositories. Such platforms contain rich data sources, e.g., code snippets, documentations, and user discussions, that can be useful for supporting development activities. Over the last decades, several techniques and tools have been promoted to provide developers with innovative features, aiming to bring in improvements in terms of development effort, cost savings, and productivity. In the context of the EU H2020 CROSSMINER project, a set of recommendation systems has been conceived to assist software programmers in different phases of the development process. The systems provide developers with various artifacts, such as third-party libraries, documentation about how to use the APIs being adopted, or relevant API function calls. To develop such recommendations, various technical choices have been made to overcome issues related to several aspects including the lack of baselines, limited data availability, decisions about the performance measures, and evaluation approaches. This paper is an experience report to present the knowledge pertinent to the set of recommendation systems developed through the CROSSMINER project. We explain in detail the challenges we had to deal with, together with the related lessons learned when developing and evaluating these systems. Our aim is to provide the research community with concrete takeaway messages that are expected to be useful for those who want to develop or customize their own recommendation systems. The reported experiences can facilitate interesting discussions and research work, which in the end contribute to the advancement of recommendation systems applied to solve different issues in Software Engineering.
C1 [Di Rocco, Juri; Di Ruscio, Davide; Di Sipio, Claudio; Nguyen, Phuong T.; Rubei, Riccardo] Univ Aquila, DISIM, Laquila, Italy.
C3 University of L'Aquila
RP Di Ruscio, D (corresponding author), Univ Aquila, DISIM, Laquila, Italy.
EM juri.dirocco@univaq.it; davide.diruscio@univaq.it;
   claudio.disipio@graduate.univaq.it; phuong.nguyen@univaq.it;
   riccardo.rubei@graduate.univaq.it
RI Di Sipio, Claudio/JYQ-5925-2024; Di Ruscio, Davide/AAG-4674-2020;
   Nguyen, Phuong/ABE-3890-2021; Di Rocco, Juri/HSE-7230-2023
OI Di Sipio, Claudio/0000-0001-9872-9542; Di Ruscio,
   Davide/0000-0002-5077-6793; Nguyen, Phuong/0000-0002-3666-4162; Di
   Rocco, Juri/0000-0002-7909-3902; Rubei, Riccardo/0000-0001-9622-5949
FU European Union [732223]
FX The research described in this paper has been carried out as part of the
   CROSSMINER Project, which has received funding from the European Union's
   Horizon 2020 Research and Innovation Programme under Grant 732223. We
   thank the anonymous reviewers for their valuable comments and
   suggestions that helped us improve the paper.
CR [Anonymous], 2014, RECOMMENDATION SYSTE, DOI DOI 10.1007/978-3-642-45135-5_4
   Basten B, 2015, 2015 IEEE 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN), P25, DOI 10.1109/SWAN.2015.7070485
   Bauer Veronika, 2014, Revised Tutorial Lectures (Lecture Notes in Computer Science, V8987, P1, DOI [DOI 10.1007/978-3-319-28406-4_1, 10.1007/978-3-319-28406-4\1, DOI 10.1007/978-3-319-28406-4]
   Bellogín A, 2013, INFORM SCIENCES, V221, P142, DOI 10.1016/j.ins.2012.09.039
   Blondel VD, 2004, SIAM REV, V46, P647, DOI 10.1137/S0036144502415960
   Bobadilla J, 2013, KNOWL-BASED SYST, V46, P109, DOI 10.1016/j.knosys.2013.03.012
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Bruch M., 2008, P 2008 INT WORKSHOP, P16, DOI DOI 10.1145/1454247.1454254
   Castells P., 2011, P 33 EUROPEAN C INFO
   Cosentino V, 2017, IEEE ACCESS, V5, P7173, DOI 10.1109/ACCESS.2017.2682323
   Czarnecki K., 2002, DOMAIN ENG, P433, DOI [DOI 10.1002/0471028959.SOF095, 10.1002/0471028959.sof095]
   Dagenais B., 2010, Proc. of the ICSE 10, P275, DOI DOI 10.1145/1806799.1806842
   Davis Jesse, 2006, P 23 INT C MACH LEAR, P233, DOI [DOI 10.1145/1143844.1143874, 10.1145/1143844.1143874]
   Di Cosmo Roberto, 2017, IPRES 2017, P1
   Di Noia T., 2012, P 8 INT C SEM SYST, P1, DOI [DOI 10.1145/2362499.2362501, 10.1145/2362499.2362501]
   Di Noia T, 2015, LECT NOTES COMPUT SC, V9203, P88, DOI 10.1007/978-3-319-21768-0_4
   Di Rocco Juri, 2020, ESEM ' 20, DOI DOI 10.1145/3382494.3410690
   Di Sipio C., 2020, EASE 20 P 24 INT C E, P24, DOI [DOI 10.1145/3383219.3383227, 10.1145/3383219.3383227]
   Di Sipio Claudio, 2020, P 23 ACM IEEE INT C, P1, DOI 10.1145/3417990.3420202
   Fowkes J, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P254, DOI 10.1145/2950290.2950319
   Ganesan K., 2017, GITHUB BLOG
   Gasparic M, 2016, J SYST SOFTWARE, V113, P101, DOI 10.1016/j.jss.2015.11.036
   Ghose S., 2001, J TARGETING MEASUREM, V10, P26, DOI [DOI 10.1057/palgrave.jt.5740031, 10.1057/palgrave.jt.5740031]
   Gomez-Uribe CA, 2016, ACM TRANS MANAG INF, V6, DOI 10.1145/2843948
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Gulliver T.A., 2018, ARXIV180907945 CORR
   Happel H.-J., 2008, P 2008 INT WORKSHOP, P11
   Holmes Reid, 2005, P 10 EUR SOFTW ENG C, V30, P237, DOI DOI 10.1145/1095430.1081744
   Isinkaye FO, 2015, EGYPT INFORM J, V16, P261, DOI 10.1016/j.eij.2015.06.005
   Jiang J, 2017, EMPIR SOFTW ENG, V22, P547, DOI 10.1007/s10664-016-9436-6
   KARLSSON EA, 1995, SOFTWARE REUSE HOLIS
   Kawaguchi S, 2004, 11TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P184, DOI 10.1109/APSEC.2004.69
   Kendall MG, 1938, BIOMETRIKA, V30, P81, DOI 10.2307/2332226
   Kibriya AM, 2004, LECT NOTES ARTIF INT, V3339, P488
   LASER, 2015, LECT NOTES COMPUTER, V8987
   Linden G, 2003, IEEE INTERNET COMPUT, V7, P76, DOI 10.1109/MIC.2003.1167344
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   Maki S., 2015, CONTEXT EXTRACTION R, P151
   McMillan C., 2010, Proceedings of the 2Nd International Workshop on Recommendation Systems for Software Engineering, RSSE'10, P21
   McMillan C, 2012, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2012.6227178
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Mouzhi Ge, 2010, P 4 ACM C REC SYST B, P257, DOI [10.1145/1864708.1864761, DOI 10.1145/1864708.1864761]
   Nguyen PT, 2021, IEEE T SOFTWARE ENG, V48, P2417, DOI 10.1109/TSE.2021.3059907
   Nguyen PT, 2020, SOFTWARE QUAL J, V28, P595, DOI 10.1007/s11219-019-09483-0
   Nguyen PT, 2020, J SYST SOFTWARE, V161, DOI 10.1016/j.jss.2019.110460
   Nguyen PT, 2019, PROC INT CONF SOFTW, P1050, DOI 10.1109/ICSE.2019.00109
   Nguyen PT, 2018, EUROMICRO CONF PROC, P388, DOI 10.1109/SEAA.2018.00069
   Nguyen PT, 2015, WWW'15 COMPANION: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P1477, DOI 10.1145/2740908.2742141
   Nguyen PT, 2015, LECT NOTES COMPUT SC, V9366, P605, DOI 10.1007/978-3-319-25007-6_35
   NGUYEN PT, 2018, P 9 IT INF RETR WORK
   Niu HR, 2017, J SYST SOFTWARE, V129, P127, DOI 10.1016/j.jss.2016.07.026
   Ouni A, 2017, INFORM SOFTWARE TECH, V83, P55, DOI 10.1016/j.infsof.2016.11.007
   Pakdeetrakulwong U, 2014, INT CONF INTERNET, P137, DOI 10.1109/ICITST.2014.7038793
   Pettigrew S, 2008, QUAL MARK RES, V11, P331, DOI 10.1108/13522750810879048
   Ponzanelli L, 2016, EMPIR SOFTW ENG, V21, P2190, DOI 10.1007/s10664-015-9397-1
   Posse C., 2014, CEUR WORKSH P CEUR W, V1271
   Proksch Sebastian, 2015, Software Engineering - International Summer Schools, LASER 2013-14. Revised Tutorial Lectures LNCS 8987, P1, DOI 10.1007/978-3-319-28406-4_1
   Robillard MP, 2013, IEEE T SOFTWARE ENG, V39, P613, DOI 10.1109/TSE.2012.63
   Rubei R, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106367
   Saied MA, 2018, J SYST SOFTWARE, V145, P164, DOI 10.1016/j.jss.2018.08.032
   Schedl M, 2018, INT J MULTIMED INF R, V7, P95, DOI 10.1007/s13735-018-0154-2
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Spinellis D, 2004, IEEE SOFTWARE, V21, P28, DOI 10.1109/MS.2004.1259204
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Vargas S., 2011, P 5 ACM C RECOMMENDE, P109, DOI DOI 10.1145/2043932.2043955
   Vargas S, 2014, PROCEEDINGS OF THE 8TH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS'14), P145, DOI 10.1145/2645710.2645744
   Wang J, 2013, IEEE WORK CONF MIN S, P319, DOI 10.1109/MSR.2013.6624045
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
   Wong TT, 2015, PATTERN RECOGN, V48, P2839, DOI 10.1016/j.patcog.2015.03.009
   Zhang Y, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P13, DOI 10.1109/SANER.2017.7884605
   Zheng Mengya, 2018, AICS, P362
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
NR 72
TC 15
Z9 15
U1 2
U2 16
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 69
DI 10.1007/s10664-021-09963-7
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA SC4FL
UT WOS:000650629100001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Yang, XQ
   Chen, JF
   Yedida, R
   Yu, Z
   Menzies, T
AF Yang, Xueqi
   Chen, Jianfeng
   Yedida, Rahul
   Yu, Zhe
   Menzies, Tim
TI Learning to recognize actionable static code warnings (is intrinsically
   easy)
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Static code analysis; Actionable warnings; Deep learning; Linear SVM;
   Intrinsic dimensionality
AB Static code warning tools often generate warnings that programmers ignore. Such tools can be made more useful via data mining algorithms that select the "actionable" warnings; i.e. the warnings that are usually not ignored. In this paper, we look for actionable warnings within a sample of 5,675 actionable warnings seen in 31,058 static code warnings from FindBugs. We find that data mining algorithms can find actionable warnings with remarkable ease. Specifically, a range of data mining methods (deep learners, random forests, decision tree learners, and support vector machines) all achieved very good results (recalls and AUC(TRN, TPR) measures usually over 95% and false alarms usually under 5%). Given that all these learners succeeded so easily, it is appropriate to ask if there is something about this task that is inherently easy. We report that while our data sets have up to 58 raw features, those features can be approximated by less than two underlying dimensions. For such intrinsically simple data, many different kinds of learners can generate useful models with similar performance. Based on the above, we conclude that learning to recognize actionable static code warnings is easy, using a wide range of learning algorithms, since the underlying data is intrinsically simple. If we had to pick one particular learner for this task, we would suggest linear SVMs (since, at least in our sample, that learner ran relatively quickly and achieved the best median performance) and we would not recommend deep learning (since this data is intrinsically very simple).
C1 [Yang, Xueqi; Chen, Jianfeng; Yedida, Rahul; Yu, Zhe; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
C3 North Carolina State University
RP Menzies, T (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM xyang37@ncsu.edu; jchen37@ncsu.edu; ryedida@ncsu.edu; zyu9@ncsu.edu;
   timm@ieee.org
RI Menzies, Tim/X-7680-2019; Yang, Xueqi/KQU-3325-2024; Yedida,
   Rahul/ABA-8071-2021
OI Menzies, Tim/0000-0002-5040-3196; Yedida, Rahul/0000-0003-2069-5949
FU NSF [1703487]; Direct For Computer & Info Scie & Enginr; Division of
   Computing and Communication Foundations [1703487] Funding Source:
   National Science Foundation
FX This work was partially funded by an NSF award #1703487.
CR Aggarwal CC, 2001, LECT NOTES COMPUT SC, V1973, P420
   Agrawal A, 2019, PREPRINT IEEE T SOFT
   Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   Allier S., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P277, DOI 10.1109/WCRE.2012.37
   [Anonymous], 2019, IEEE T SOFTW ENG
   Avgustinov P, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P437, DOI 10.1109/ICSE.2015.62
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Bhattacharya P, 2012, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2012.6227173
   Boogerd C, 2008, PROC IEEE INT CONF S, P277, DOI 10.1109/ICSM.2008.4658076
   Breiman Leo., 1999, Random forests
   Chen WC, 2005, EXPERT SYST APPL, V29, P807, DOI 10.1016/j.eswa.2005.06.004
   Choetkiertikul M, 2019, IEEE T SOFTWARE ENG, V45, P637, DOI 10.1109/TSE.2018.2792473
   CORTES C, 1995, MACH LEARN, V20, P273, DOI 10.1007/BF00994018
   COURTNEY RE, 1993, SOFTWARE ENG J, V8, P5, DOI 10.1049/sej.1993.0002
   Geron A., 2019, Handson Machine Learning with ScikitLearn, Keras, and TensorFlow: Concepts, Tools, and Techniques to Build Intelligent Systems
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   GOH ATC, 1995, ARTIF INTELL ENG, V9, P143, DOI 10.1016/0954-1810(94)00011-S
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Guo J, 2017, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2017.9
   Haihao Shen, 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P299, DOI 10.1109/ICST.2011.51
   Hanam Q., 2014, P 11 WORKING C MININ, P152
   Heckman S, 2011, INFORM SOFTWARE TECH, V53, P363, DOI 10.1016/j.infsof.2010.12.007
   Heckman S, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P161, DOI 10.1109/ICST.2009.45
   Hindle A, 2016, COMMUN ACM, V59, P122, DOI 10.1145/2902362
   HORNIK K, 1991, NEURAL NETWORKS, V4, P251, DOI 10.1016/0893-6080(91)90009-T
   Ioffe S, 2015, PR MACH LEARN RES, V37, P448
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Khalid H, 2016, IEEE SOFTWARE, V33, P34, DOI 10.1109/MS.2015.29
   Kim S., 2007, 4 INT WORKSHOP MININ, P27, DOI DOI 10.1109/MSR.2007.26
   Kremenek T., 2004, Software Engineering Notes, V29, P83, DOI 10.1145/1041685.1029909
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Levina Elizaveta, 2004, Advances in neural information processing systems, V17
   Li YZ, 2017, ADV NEUR IN, V30
   Liang G., 2010, P 25 IEEEACM INT C A, P93, DOI [DOI 10.1145/1858996.1859013, 10.1145/1858996.1859013, 10.1145/1858996, DOI 10.1145/1858996]
   Lin B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P94, DOI 10.1145/3180155.3180195
   Lin YZ, 2017, COMPUT-AIDED CIV INF, V32, P1025, DOI 10.1111/mice.12313
   Menzies T, 2007, COMPUTER, V40, P54, DOI 10.1109/MC.2007.37
   Najafabadi MM, 2015, Journal of big data, V2, P1, DOI [10.1186/s40537-014-0007-7, DOI 10.1186/S40537-014-0007-7]
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Quinlan J.R., 1987, GENERATING PRODUCTIO
   Rasmussen CE, 2000, ADV NEUR IN, V12, P554
   Rosenthal R., 1994, The handbook of research synthesis, P231, DOI DOI 10.7758/9781610441377
   Sawilowsky SS, 2009, J MOD APPL STAT METH, V8, P597, DOI 10.22237/jmasm/1257035100
   Shalev-Shwartz, 2014, UNDERSTANDING MACHIN, DOI DOI 10.1017/CBO9781107298019
   Shi S.T., 2019, IEEE T SOFTW ENG
   Shivaji S, 2009, IEEE INT CONF AUTOM, P600, DOI 10.1109/ASE.2009.76
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Thung F, 2015, AUTOMAT SOFTW ENG, V22, P561, DOI 10.1007/s10515-014-0169-8
   Nguyen TD, 2017, PROC INT CONF SOFTW, P438, DOI 10.1109/ICSE.2017.47
   Tu H., 2018, FSE SWAN
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   Vandekerckhove Joachim, 2015, The Oxford Handbook of Computational and Mathematical Psychology, P300, DOI DOI 10.1093/OXFORDHB/9780199957996.013.14
   Wang JJ, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239523
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Witten IH, 2011, MOR KAUF D, P1
   Wolpert D. H., 1997, IEEE Transactions on Evolutionary Computation, V1, P67, DOI 10.1109/4235.585893
   Yu Z, 2018, EMPIR SOFTW ENG, V23, P3161, DOI 10.1007/s10664-017-9587-0
   Zeng HQ, 2017, PROC INT CONF RECON
   Zhang J, 2018, ARXIV 180504825
   Zhao G, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P141, DOI 10.1145/3236024.3236068
NR 62
TC 14
Z9 15
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2021
VL 26
IS 3
AR 56
DI 10.1007/s10664-021-09948-6
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RM6PL
UT WOS:000639783000002
DA 2024-07-18
ER

PT J
AU Gleirscher, M
   Marmsoler, D
AF Gleirscher, Mario
   Marmsoler, Diego
TI Formal methods in dependable systems engineering: a survey of
   professionals from Europe and North America
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Formal methods; Empirical research; On-line survey; Usage; Usefulness;
   Practical challenges; Research transfer; Software engineering education
   & training
ID INDUSTRIAL SURVEY; SOFTWARE; ACCEPTANCE; MODEL; VERIFICATION; MYTHS
AB Context Formal methods (FMs) have been around for a while, still being unclear how to leverage their benefits, overcome their challenges, and set new directions for their improvement towards a more successful transfer into practice. Objective We study the use of formal methods in mission-critical software domains, examining industrial and academic views. Method We perform a cross-sectional on-line survey. Results Our results indicate an increased intent to apply FMs in industry, suggesting a positively perceived usefulness. But the results also indicate a negatively perceived ease of use. Scalability, skills, and education seem to be among the key challenges to support this intent. Conclusions We present the largest study of this kind so far (N= 216), and our observations provide valuable insights, highlighting directions for future theoretical and empirical research of formal methods. Our findings are strongly coherent with earlier observations by Austin and Graeme (1993).
C1 [Gleirscher, Mario] Univ York, Dept Comp Sci, York, N Yorkshire, England.
   [Marmsoler, Diego] Tech Univ Munich, Inst Informat, Garching, Germany.
C3 University of York - UK; Technical University of Munich
RP Gleirscher, M (corresponding author), Univ York, Dept Comp Sci, York, N Yorkshire, England.
EM Mario.Gleirscher@york.ac.uk; Diego.Marmsoler@tum.de
OI Gleirscher, Mario/0000-0002-9445-6863
FU Deutsche Forschungsgemeinschaft (DFG, German Research Foundation)
   [381212925]
FX Partly funded by the Deutsche Forschungsgemeinschaft (DFG, German
   Research Foundation) under the Grant no. 381212925.
CR Aichernig BK, 2003, FORMAL METHODS CROSS
   [Anonymous], 1997, Fourth NASA Langley Formal Methods Workshop (LFM)
   ATOMICO, 2019, STAT EUR TECH 2019 S
   Austin S, 1993, TECH REP
   BARROCA LM, 1992, COMPUT J, V35, P579, DOI 10.1093/comjnl/35.6.579
   Basili V.R., 1985, QUANTITATIVE EVALUAT
   Bicarregui JC, 2009, LECT NOTES COMPUT SC, V5850, P810, DOI 10.1007/978-3-642-05089-3_52
   BIERNACKI P, 1981, SOCIOL METHOD RES, V10, P141, DOI 10.1177/004912418101000205
   Bjorner D., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P17
   BLOOMFIELD RE, 1991, RELIAB ENG SYST SAFE, V32, P51, DOI 10.1016/0951-8320(91)90047-B
   Boulanger J-L., 2012, IND USE FORMAL METHO, DOI 10.1002/9781118561829
   BOWEN JP, 1995, COMPUTER, V28, P56, DOI 10.1109/2.375178
   BOWEN JP, 1995, IEEE SOFTWARE, V12, P34, DOI 10.1109/52.391826
   Bowen JP, 2005, P 10 INT WORKSH FORM, P8, DOI DOI 10.1145/1081180.1081183
   CAMPBELL MJ, 1988, BRIT MED J, V296, P1454, DOI 10.1136/bmj.296.6634.1454
   Charette RN, 2018, FIAT CHRYSLER IS BEI
   Chudnov A, 2018, LECT NOTES COMPUT SC, V10982, P430, DOI 10.1007/978-3-319-96142-2_26
   Cofer Darren, 2012, NASA Formal Methods. Proceedings of the 4th International Symposium, NFM 2012, P126, DOI 10.1007/978-3-642-28891-3_13
   Craigen D., 1993, Z User Workshop London 1992. Proceedings of the Seventh Annual Z User Meeting, P1
   Craigen D., 1995, CONCUR '95: Concurrency Theory. 6th International Conference. Proceedings, P328
   CRAIGEN D, 1995, IEEE T SOFTWARE ENG, V21, P90, DOI 10.1109/32.345825
   Davis A, 2013, MAT READ EARLY MOD, P63
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Dean C. N., 2004, Teaching Formal Methods. CoLogNET/FME Symposium, TFM 2004. Proceedings (Lecture Notes in Computer Science Vol.3294), P235
   Decision Analyst, 2018, TECHN ADV BOARD
   Evans Data, 2018, TECH REP, V1
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Ferrari A, 2019, SURVEY FORMAL METHOD, DOI [10.5281/zenodo.2535023, DOI 10.5281/ZENODO.2535023]
   FRASER MD, 1994, COMMUN ACM, V37, P74, DOI 10.1145/194313.194399
   Galloway Andy J., 1998, IFAC P VOLUMES, V31, P49, DOI [DOI 10.1016/S1474-6670(17)36335-8, 10.1016/S1474-6670(17)36335-8]
   Gerhart S. L., 1976, IEEE Transactions on Software Engineering, VSE-2, DOI 10.1109/TSE.1976.233815
   Glass R. L., 2002, FACTS FALLACIES SOFT
   Gleirscher M, 2018, ARXIV181208452CSSE U
   Gleirscher M, 2020, ACM COMPUT SURV, V52, DOI 10.1145/3357231
   Gnesi S., 2013, FORMAL METHODS IND C
   Google, 2018, GOOGL FORMS SERV
   Graydon PJ, 2015, I C DEPEND SYS NETWO, P517, DOI 10.1109/DSN.2015.28
   HALL A, 1990, IEEE SOFTWARE, V7, P11, DOI 10.1109/52.57887
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Heisel M, 1996, OBJECT ORIENTED BEHA, DOI DOI 10.1007/978-0-585-27524-6_4
   Heitmeyer C, 1998, LECT NOTES COMPUT SC, V1486, P18, DOI 10.1007/BFb0055332
   Hinchey MG, 1996, IEEE COMPUTER 29, V4, P18
   Holloway C. M., 1997, PROC 16 DASC ALAAEKE, P3, DOI DOI 10.1109/DASC.1997.635021
   HOLLOWAY CM, 1996, COMPUTER 29 4, P25, DOI DOI 10.1109/MC.1996.488298
   Jackson M., 1987, Journal of Information Technology, V2, P72, DOI 10.1057/jit.1987.14
   Jeffery R, 2015, INFORM SOFTWARE TECH, V60, P102, DOI 10.1016/j.infsof.2014.11.005
   Kaner C, 1998, BAD SOFTWARE
   Kaner C, 2018, BAD SOFTWARE WEBSITE
   Kitchenham B, 1997, COMPUT CONTROL ENG J, V8, P120, DOI 10.1049/cce:19970304
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Klein G, 2018, COMMUN ACM, V61, P68, DOI 10.1145/3230627
   LAI R, 1995, COMPUT NETWORKS ISDN, V27, P537, DOI 10.1016/0169-7552(93)E0110-Z
   Lai R, 1996, COULD RES TESTING CO, P3, DOI DOI 10.1007/978-0-387-35062-2_1
   Leiner DJ, 2014, TECH REP
   Leino KRM, 2017, IEEE SOFTWARE, V34, P94
   Liebel G, 2018, SOFTW SYST MODEL, V17, P91, DOI 10.1007/s10270-016-0523-3
   Mathieson K, 1991, INFORM SYST RES, V2, P173, DOI 10.1287/isre.2.3.173
   Miller SP, 2010, COMMUN ACM, V53, P58, DOI 10.1145/1646353.1646372
   MIYOSHI T, 1993, IEEE T SOFTWARE ENG, V19, P425, DOI 10.1109/32.232010
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Murphy GC, 1999, IEEE T SOFTWARE ENG, V25, P438, DOI 10.1109/32.799936
   Neuendorf K. A., 2017, The content analysis guidebook, V2nd, DOI 10.4135/9781071802878
   Neumann Peter G., 2018, ACM SIGSOFT SOFTWARE, V43, P8, DOI DOI 10.1145/3203094.3203102
   O'Hearn P, 2018, LICS'18: PROCEEDINGS OF THE 33RD ANNUAL ACM/IEEE SYMPOSIUM ON LOGIC IN COMPUTER SCIENCE, P13, DOI 10.1145/3209108.3209109
   Oliveira JN, 2018, FORMAL METHODS BODY
   Parnas DL, 2010, COMPUTER, V43, P28, DOI 10.1109/MC.2010.22
   Petersen K, 2008, 12 INT C EV ASS SOFT, P1, DOI 10.5555/2227115.2227123
   Pfleeger SL, 1997, COMPUTER, V30, P33, DOI 10.1109/2.566148
   POSTON RM, 1992, IEEE SOFTWARE, V9, P33, DOI 10.1109/52.136165
   Riemenschneider CK, 2002, IEEE T SOFTWARE ENG, V28, P1135, DOI 10.1109/TSE.2002.1158287
   Robbins N., 2011, P 2011 JOINT STAT M, DOI DOI 10.1002/LT.25677
   RUSHBY J, 1994, RELIAB ENG SYST SAFE, V43, P189, DOI 10.1016/0951-8320(94)90065-5
   SEI, 2010, CMU/SEI-2010-TR-033
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Snook C, 2001, INFORM SOFTWARE TECH, V43, P275, DOI 10.1016/S0950-5849(00)00166-X
   Sobel AEK, 2002, IEEE T SOFTWARE ENG, V28, P308, DOI 10.1109/32.991322
   The R Project, 2018, R PROJECT
   Wikipedia contributors, 2018, SOFTW ENG DEM WIK FR
   WING JM, 1990, COMPUTER, V23, P8, DOI 10.1109/2.58215
   Woodcock J, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1592434.1592436
NR 80
TC 24
Z9 25
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 4473
EP 4546
DI 10.1007/s10664-020-09836-5
EA SEP 2020
PG 74
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4BB
UT WOS:000567738100001
OA Green Submitted, Green Accepted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Chapetta, WA
   Travassos, GH
AF Chapetta, Wladmir Araujo
   Travassos, Guilherme Horta
TI Towards an evidence-based theoretical framework on factors influencing
   the software development productivity
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software productivity; Performance management; Software development
   productivity; Structured synthesis; Evidence-based software engineering
ID QUALITY; PERFORMANCE; IMPACT; PROJECTS; METRICS; MODEL
AB Context: Productivity refers to the rate at which a company produces goods, and its observation takes into account the number of people and the amount of other necessary resources to deliver such goods. However, it is not clear how to observe productivity and what influences it when the product is software since most effort spent in software development is creative and human-dependent. Besides, the outputs vary from each instance of software solutions throughout the software development process. Objective: To characterize software development productivity and investigate evidence-based factors aiming at understanding their influence on software development productivity. Method: To evolve and replicate a systematic literature review (SLR) on software development productivity measurement and prediction methods. Next, to use the Structured Synthesis Method to aggregate and describe the relationships among software productivity and correspondingly influence factors according to the results of primary studies selected by SLR protocol. Results: The study allowed organizing a body of knowledge through a model obtained from empirical evidence comprising 25 factors and 33 relationships regarding software development productivity based on the technical literature over the last 30 years. It uses a taxonomy for describing observations and for supporting the reasoning of uncertainty on the evidence regarding software development productivity in Software Engineering. Conclusions: The acquired knowledge may represent a first try towards a well-grounded theoretical framework regarding software development productivity. Based on a methodically selected set of evidence, the proposed framework intends to support practitioners and researchers on observing, deciding, and controlling software development productivity in software projects. Additionally, it can encourage researchers to identify which phenomena deserve better understanding and explanation through further empirical studies.
C1 [Chapetta, Wladmir Araujo; Travassos, Guilherme Horta] Univ Fed Rio de Janeiro, PESC COPPE, Rio De Janeiro, RJ, Brazil.
   [Chapetta, Wladmir Araujo] Natl Inst Metrol Qual & Technol, DIMCI DMTIC, Rio De Janeiro, RJ, Brazil.
C3 Universidade Federal do Rio de Janeiro; Instituto Nacional de
   Metrologia, Qualidade e Tecnologia (INMETRO)
RP Chapetta, WA (corresponding author), Univ Fed Rio de Janeiro, PESC COPPE, Rio De Janeiro, RJ, Brazil.; Chapetta, WA (corresponding author), Natl Inst Metrol Qual & Technol, DIMCI DMTIC, Rio De Janeiro, RJ, Brazil.
EM wachapetta@inmetro.gov.br; ght@cos.ufrj.br
RI Travassos, Guilherme H/G-2842-2012
OI Chapetta, Wladmir/0000-0002-7281-8587
FU  [304234/2018-4]
FX Many thanks to Prof. Kai Petersen, Blekinge Institute of Technology,
   Sweden, for promptly sharing his SLR lab package with us. Prof.
   Travassos is a CNPq Researcher (grant 304234/2018-4).
CR Ahmed A., 2010, 2010 IEEE International Conference on Management of Innovation and Technology ICMIT, P287
   Anderson AB, 1999, ELEC SOC S, V99, P1
   [Anonymous], 2015, THESIS
   Aquino G, 2009, SETP 09
   Atkins D, 2004, BMJ-BRIT MED J, V328, P1490
   Avritzer Alberto, 2009, 2009 Fourth IEEE International Conference on Global Software Engineering, P341, DOI 10.1109/ICGSE.2009.53
   Banker RD, 1997, MANAGE SCI, V43, P1709, DOI 10.1287/mnsc.43.12.1709
   Barke H, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P97, DOI 10.1145/3195836.3195839
   Biolchini J, 2005, SYSTEMATIC REV SOFTW
   Bjarnason E, 2016, INFORM SOFTWARE TECH, V70, P204, DOI 10.1016/j.infsof.2015.05.004
   Boehm BW., 1981, Software Engineering Economics
   Brings J, 2018, P 22 INT C EV ASS SO
   Buitron Ruiz SL, 2019, P 22 IB AM C SOFTW E, V1, P586
   Card DN, 1985, P 1985 ACM 13 ANN C, DOI [10.1145/320599.322496, DOI 10.1145/320599.322496]
   de Gea JMC, 2016, J SOFTW-EVOL PROC, V28, P205, DOI 10.1002/smr.1772
   Chang CK, 2006, P 2006 INT S DISTR C
   Chapetta WA, 2016, P 15 SBQS S BRAS QUA
   Chen PC, 2012, ASIA PAC SOFWR ENG, P565, DOI 10.1109/APSEC.2012.152
   Chidamber SR, 1991, C P OBJ OR PROGR SYS, DOI 10.1145/117954.117970
   Colazo J., 2008, 14 AM C INF SYST, V3, P1833
   CRUZES D.S., 2010, Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement 2010, P1, DOI DOI 10.1145/1852786.1852788
   DALE CJ, 1992, INFORM SOFTWARE TECH, V34, P731, DOI 10.1016/0950-5849(92)90168-O
   de Barros Sampaio Suzana Candido, 2010, Proceedings Fifth International Conference on Software Engineering Advances (ICSEA 2010), P196, DOI 10.1109/ICSEA.2010.37
   de Oliveira SB, 2010, SOFTWARE QUAL J, V18, P177, DOI 10.1007/s11219-009-9087-6
   Carvalho WCD, 2012, P INT C CHIL COMPUT, P74, DOI 10.1109/SCCC.2011.11
   Di Tullio D., 2013, SYSTEMES INFORM MANA, V18, P3
   Duarte CHC, 2017, EMPIR SOFTW ENG, V22, P818, DOI 10.1007/s10664-016-9453-5
   Dutra ACS, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P183, DOI 10.1109/SEAA.2015.24
   DYBA T, 2007, 1 INT S EMP SOFTW EN, P225, DOI DOI 10.1109/ESEM.2007.59
   Endres A., 2003, A Handbook of Software and Systems Engineering: Empirical Observations, Laws, and Theories
   Erbas C, 2015, SCI COMPUT PROGRAM, V101, P6, DOI 10.1016/j.scico.2014.11.006
   Farshchi M, 2012, COMPUT SCI INF SYST, V9, P627, DOI 10.2298/CSIS110525003F
   Felizardo KR, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962630
   Foulds LR, 2007, 6TH IEEE/ACIS INTERNATIONAL CONFERENCE ON COMPUTER AND INFORMATION SCIENCE, PROCEEDINGS, P724, DOI 10.1109/ICIS.2007.174
   Fritz T, 2017, DAGSTUHL REPORTS, V7
   Glaser B. G., 1978, [No title captured]
   Gralha C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P823, DOI 10.1145/3180155.3180158
   Gregor S, 2006, MIS QUART, V30, P611
   Günsel A, 2013, GROUP DECIS NEGOT, V22, P359, DOI 10.1007/s10726-011-9270-6
   Haenni R., 2005, 2005 7th International Conference on Information Fusion (FUSION)
   Hanakawa N, 1998, PROC INT CONF SOFTW, P350, DOI 10.1109/ICSE.1998.671388
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Hannay JoE., 2010, Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, p15:1, DOI [DOI 10.1145/1852786.1852806, 10.1145/1852786.1852806]
   He M, 2008, ASIA PAC SOFWR ENG, P67, DOI 10.1109/APSEC.2008.42
   Hernandez AS, 2012, WINT SIMUL C PROC
   Hernandez CA, 2009, GROUNDED THEORY REV, V8, P50
   Hernández-López A, 2015, INT J INF TECHNOL SY, V8, P46, DOI 10.4018/IJITSA.2015010103
   Hernández-López A, 2013, INT J SOFTW ENG KNOW, V23, P387, DOI 10.1142/S0218194013500125
   Holmes R, 2018, PROC INT CONF SOFTW, P31, DOI 10.1145/3183377.3183380
   Hsu JSC, 2013, INFORM MANAGE-AMSTER, V50, P415, DOI 10.1016/j.im.2013.06.001
   Huang J, 2015, 2015 IEEE ADVANCED INFORMATION TECHNOLOGY, ELECTRONIC AND AUTOMATION CONTROL CONFERENCE (IAEAC), P1015, DOI 10.1109/IAEAC.2015.7428710
   JEFFERY DR, 1987, J SYST SOFTWARE, V7, P115, DOI 10.1016/0164-1212(87)90016-1
   Jeffery R, 2015, INFORM SOFTWARE TECH, V60, P102, DOI 10.1016/j.infsof.2014.11.005
   Johnson Pontus, 2007, 2007 International Conference on Software Engineering Advances, P1
   Johnson P, 2016, INFORM SOFTWARE TECH, V70, P181, DOI 10.1016/j.infsof.2015.06.001
   Josang A, 2012, COMPUT INTELL-US, V28, P453, DOI 10.1111/j.1467-8640.2012.00421.x
   Kamma Damodaram, 2014, 2014 21st Asia-Pacific Software Engineering Conference (APSEC), P71, DOI 10.1109/APSEC.2014.20
   Kang D, 2011, SOFTWARE PRACT EXPER, V41, P551, DOI 10.1002/spe.1030
   Kenny M, 2015, QUAL REP, V20, P1270
   Krishnan MS, 2000, MANAGE SCI, V46, P745, DOI 10.1287/mnsc.46.6.745.11941
   Kuchar T, 2013, P 25 EUR MOD SIM S E, P255
   Lavazza Luigi, 2016, P 31 ANN ACM S APPL, P1434, DOI [10.1145/2851613.2851780, DOI 10.1145/2851613.2851780]
   Liang TP, 2012, INT J PROJ MANAG, V30, P731, DOI 10.1016/j.ijproman.2011.11.006
   Lindman J, 2018, J INTERNET SERV APPL, V9, DOI 10.1186/s13174-018-0079-2
   Liu JYC, 2011, INT J PROJ MANAG, V29, P547, DOI 10.1016/j.ijproman.2010.04.007
   Liu L, 2015, IEEE T SERV COMPUT, V8, P1, DOI 10.1109/TSC.2015.2394251
   Lopez-Martin C, 2014, 15 IEEE ACIS INT C S, DOI [10.1109/snpd.2014.6888690, DOI 10.1109/SNPD.2014.6888690]
   MacCormack A, 2003, IEEE SOFTWARE, V20, P78, DOI 10.1109/MS.2003.1231158
   Martinez-Fernandez S., 2015, 2015 ACM/IEEE international symposium on empirical software engineering and measurement, P1, DOI DOI 10.1109/ESEM.2015.7321184
   Maxwell KD, 1996, IEEE T SOFTWARE ENG, V22, P706, DOI 10.1109/32.544349
   Maxwell KD, 2000, IEEE SOFTWARE, V17, P80, DOI 10.1109/52.820015
   Medeiros dos Santos Paulo Sergio, 2018, Journal of Software Engineering Research and Development, V6, DOI 10.1186/s40411-018-0057-1
   dos Santos PSM, 2017, INT SYMP EMP SOFTWAR, P480, DOI 10.1109/ESEM.2017.68
   dos Santos PSM, 2013, ELECTRON NOTES THEOR, V292, P95, DOI 10.1016/j.entcs.2013.02.008
   Meyer AN, 2017, IEEE T SOFTWARE ENG, V43, P1178, DOI 10.1109/TSE.2017.2656886
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Miller J, 2005, INFORM SOFTWARE TECH, V47, P233, DOI 10.1016/j.infsof.2004.08.005
   Moazeni R, 2014, P 2014 INT C SOFTW S, DOI [10.1145/2600821.2600847, DOI 10.1145/2600821.2600847]
   Mohapatra Sanjay, 2011, International Journal of Information and Communication Technology, V3, P160, DOI 10.1504/IJICT.2011.041746
   Morales Pérez SE, 2001, CUADERNOS HISPANOAM, P25
   Morisio M, 2002, IEEE T SOFTWARE ENG, V28, P876, DOI 10.1109/TSE.2002.1033227
   Munch J., 2003, Empirical Software Engineering, DOI DOI 10.1109/ISESE.2003.1237961
   Munir H, 2018, INFORM SOFTWARE TECH, V97, P26, DOI 10.1016/j.infsof.2017.12.008
   Myrtveit I, 1999, BENCHMARKING COTS PR, P269
   Nguyen V, 2011, P 7 INT C PRED MOD S, DOI [10.1145/2020390.2020393, DOI 10.1145/2020390.2020393]
   Oliveira E, 2018, INT J SOFTW ENG KNOW, V28, P1795, DOI 10.1142/S0218194018400296
   Otero LD, 2012, IEEE T ENG MANAGE, V59, P391, DOI 10.1109/TEM.2010.2101078
   Pai DR, 2015, INFORM TECHNOL MANAG, V16, P235, DOI 10.1007/s10799-015-0234-4
   Paiva E, 2010, INNOVATIONS IN COMPUTING SCIENCES AND SOFTWARE ENGINEERING, P99, DOI 10.1007/978-90-481-9112-3_17
   Petersen K, 2011, INFORM SOFTWARE TECH, V53, P317, DOI 10.1016/j.infsof.2010.12.001
   Prechelt L, 2000, COMPUTER, V33, P23, DOI 10.1109/2.876288
   Putnam L., 1992, MEASURES EXCELLENCE
   Rahman A, 2018, PROC IEEE ACM INT C, P414, DOI 10.1145/3183440.3195034
   Ramasubbu N, 2011, P 33 INT C SOFTW ENG, DOI [10.1145/1985793.1985830, DOI 10.1145/1985793.1985830]
   Ramasubbu N, 2008, P 1 INT SOFTW ENG C, DOI [10.1145/1342211.1342217, DOI 10.1145/1342211.1342217]
   Ramasubbu N, 2015, SSRN ELECT J, DOI [10.2139/ssrn.2627173, DOI 10.2139/SSRN.2627173]
   Ramírez-Mora SL, 2020, J SOFTW-EVOL PROC, V32, DOI 10.1002/smr.2232
   Ramírez-Mora SL, 2017, 2017 5TH INTERNATIONAL CONFERENCE IN SOFTWARE ENGINEERING RESEARCH AND INNOVATION (CONISOFT 2017), P44, DOI 10.1109/CONISOFT.2017.00013
   Rodríguez D, 2012, J SYST SOFTWARE, V85, P562, DOI 10.1016/j.jss.2011.09.009
   Rothenberger MA, 2010, INFORM MANAGE-AMSTER, V47, P372, DOI 10.1016/j.im.2010.10.001
   Sadowski C., 2019, Rethinking productivity in software engineering, P39, DOI DOI 10.1007/978-1-4842-4221-6
   Monteiro LFS, 2011, J SOFTW MAINT EVOL-R, V23, P395, DOI 10.1002/smr.482
   Santos G, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P412, DOI 10.1109/QUATIC.2010.75
   Santos PSM, 2017, 75317 RTES UFRJCOPPE
   SCACCHI W, 1991, INT J SOFTW ENG KNOW, V1, P293, DOI 10.1142/S0218194091000214
   Schluter T, 2012, 2012 INT C SOFTW SYS, DOI [10.1109/icssp.2012.6225966, DOI 10.1109/ICSSP.2012.6225966]
   Scholtes I, 2016, EMPIR SOFTW ENG, V21, P642, DOI 10.1007/s10664-015-9406-4
   Shafer G, 1976, MATH THEORY EVIDENCE, DOI DOI 10.1080/00401706.1978.10489628
   Smets P, 2007, INFORM FUSION, V8, P387, DOI 10.1016/j.inffus.2006.04.003
   Stol KJ, 2016, INFORM SOFTWARE TECH, V70, P176, DOI 10.1016/j.infsof.2015.07.010
   Tan T, 2009, 2009 3 INT S EMP SOF, DOI [10.1109/esem.2009.5316044, DOI 10.1109/ESEM.2009.5316044]
   Teasley SD, 2002, IEEE T SOFTWARE ENG, V28, P671, DOI 10.1109/TSE.2002.1019481
   Thornberg R., 2014, SAGE HDB QUALITATIVE, P153, DOI DOI 10.4135/9781446282243.N11
   Trendowicz A, 2009, ADV COMPUT, V77, P185, DOI 10.1016/S0065-2458(09)01206-6
   Tsunoda M, 2014, 15 IEEE ACIS INT C S, DOI [10.1109/snpd.2014.6888729, DOI 10.1109/SNPD.2014.6888729]
   Tsunoda M, 2009, INFORM TECHNOL MANAG, V10, P193, DOI 10.1007/s10799-009-0050-9
   Vasilescu B, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P3789, DOI 10.1145/2702123.2702549
   Wagner S, 2008, P 2 INT WORKSH SOFTW
   Wang Q, 2008, 2008 9TH INTERNATIONAL CONFERENCE ON SOLID-STATE AND INTEGRATED-CIRCUIT TECHNOLOGY, VOLS 1-4, P2008, DOI 10.1109/ICBBE.2008.831
   Weber KC, 2005, LECT NOTES COMPUT SC, V3733, P402
   Wohlin C., 2014, P 8 ACM IEEE INT S E, V46, P1, DOI [10.1145/2652524.2652559, DOI 10.1145/2652524.2652559]
   Xia Lee L, 2010, MISS QUART, V34, P1
   Xiong W, 2008, FIFTH INTERNATIONAL CONFERENCE ON FUZZY SYSTEMS AND KNOWLEDGE DISCOVERY, VOL 5, PROCEEDINGS, P154, DOI 10.1109/FSKD.2008.132
   Xu P, 2013, J GLOB INF TECH MAN, V16, P58, DOI 10.1080/1097198X.2013.10845630
   Yilmaz M, 2016, INT J SOFTW ENG KNOW, V26, P457, DOI 10.1142/S0218194016500194
   Zadeh L., 1984, AI magazine, V5, P81
NR 126
TC 6
Z9 6
U1 4
U2 21
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3501
EP 3543
DI 10.1007/s10664-020-09844-5
EA AUG 2020
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA NJ1FD
UT WOS:000561985000001
DA 2024-07-18
ER

PT J
AU Hu, LH
   Wong, WE
   Kuhn, DR
   Kacker, RN
AF Hu, Linghuan
   Wong, W. Eric
   Kuhn, D. Richard
   Kacker, Raghu N.
TI How does combinatorial testing perform in the real world: an empirical
   study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Combinatorial testing; Combinatorial interaction testing; Test case
   generation; Empirical study
ID DESIGN
AB Studies have shown that combinatorial testing (CT) can be effective for detecting faults in software systems. By focusing on the interactions between different factors of a system, CT shows its potential for detecting faults, especially those that can be revealed only by the specific combinations of values of multiple factors (multi-factor faults). However, is CT practical enough to be applied in the industry? Can it be more effective than other industry-favored techniques? Are there any challenges when applying CT in practice? These research questions remain in the context of industrial settings. In this paper, we present an empirical study of CT on five industrial systems with real faults. The details of the input space model (ISM) construction, such as factor identification and value assignment, are included. We compared the faults detected by CT with those detected by the in-house testing teams using other methods, and the results suggest that despite some challenges, CT is an effective technique to detect real faults, especially multi-factor faults, of software systems in industrial settings. Observations and lessons learned are provided to further improve the fault detection effectiveness and overcome various challenges.
C1 [Hu, Linghuan; Wong, W. Eric] Univ Texas Dallas, Comp Sci Dept, 800 W Campbell Rd, Richardson, TX 75080 USA.
   [Kuhn, D. Richard; Kacker, Raghu N.] NIST, Gaithersburg, MD 20899 USA.
C3 University of Texas System; University of Texas Dallas; National
   Institute of Standards & Technology (NIST) - USA
RP Wong, WE (corresponding author), Univ Texas Dallas, Comp Sci Dept, 800 W Campbell Rd, Richardson, TX 75080 USA.
EM ewong@utdallas.edu
RI Kacker, Raghu/AAT-2021-2020
OI Kacker, Raghu/0000-0002-7666-3391
FU National Institute of Standards and Technology [60NANB17D322]; US
   National Science Foundation [1757828, 1822137]; Direct For Computer &
   Info Scie & Enginr; Division Of Computer and Network Systems [1822137]
   Funding Source: National Science Foundation; Direct For Computer & Info
   Scie & Enginr; Division of Computing and Communication Foundations
   [1757828] Funding Source: National Science Foundation
FX This work was funded by the National Institute of Standards and
   Technology (Grant No. 60NANB17D322) and US National Science Foundation
   (Grant No. 1757828 and 1822137). The authors would like to thank their
   industrial associates for providing the SUTs, the testing environments,
   and the in-house testing data for this study: Yanzhong Gong and Dr. Jian
   Wang; Guokai He; Dr. Vidroha Debroy; Chunhui Yang, Dong Li, and Jun Lin.
   The authors would also like to express their appreciation and gratitude
   to Dr. Ruizhi Gao and Xuelin Li for helping with data collection.
CR Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   Blue D, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P144, DOI 10.1145/3183519.3183522
   Borazjany M. N., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P591, DOI 10.1109/ICST.2012.146
   Borazjany MN, 2013, IEEE ICST WORKSHOP, P372, DOI 10.1109/ICSTW.2013.48
   Bures M, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P69, DOI 10.1109/QRS-C.2017.20
   Burnstein, 2006, BURNSTEIN PRACTICAL
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen DM, 1996, IEEE SOFTWARE, V13, P83, DOI 10.1109/52.536462
   Condori-Fernandez N, 2014, UUCS2014008
   Dhadyalla G, 2014, IEEE ICST WORKSHOP, P51, DOI 10.1109/ICSTW.2014.6
   Dumlu Emine., 2011, P 2011 INT S SOFTWAR, P243
   Dunietz IS, 1997, PROC INT CONF SOFTW, P205, DOI 10.1145/253228.253271
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Ghandehari LSG, 2013, IEEE ICST WORKSHOP, P362, DOI 10.1109/ICSTW.2013.47
   Grindal M, 2005, SOFTW TEST VERIF REL, V15, P167, DOI 10.1002/stvr.319
   Hagar JD, 2015, COMPUTER, V48, P64, DOI 10.1109/MC.2015.114
   HULLER J, 2000, P 2000 INT COUNC SYS
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Krishnan R., 2007, ACM SIGSOFT Software Engineering Notes, V32, P1
   Kruse P.M., 2014, 11 WORKSH EXP SOFTW
   Kruse PeterM., 2013, INT WORKSHOP FUTURE, P48
   Kuhn D.R., 2002, Proceedings of 27th Annual NASA Goddard Software Engineering Workshop, 2002, P91, DOI DOI 10.1109/SEW.2002.1199454
   Kuhn DR, 2006, 30TH ANNUAL IEEE/NASA SOFTWARE ENGINEERING WORKSHOP, PROCEEDINGS, P153
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Kuhn R, 2008, FR PLIT SOC CULT, P199
   Lei Y, 2008, SOFTW TEST VERIF REL, V18, P125, DOI 10.1002/stvr.381
   Li XL, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P53, DOI 10.1109/QRS.2016.16
   Mehta M, 2013, IEEE ICST WORKSHOP, P348, DOI 10.1109/ICSTW.2013.46
   Nie CH, 2006, INT CONF QUAL SOFTW, P259
   Patel S, 2013, IEEE ICST WORKSHOP, P321, DOI 10.1109/ICSTW.2013.43
   Petke J, 2015, IEEE T SOFTWARE ENG, V41, P901, DOI 10.1109/TSE.2015.2421279
   Rao C, 2017, IEEE ICST WORKSHOP, P199, DOI 10.1109/ICSTW.2017.39
   Ratliff ZB, 2016, IEEE INT SYMP SOFTW, P119, DOI 10.1109/ISSREW.2016.26
   Raunak MS, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY COMPANION (QRS-C), P100, DOI 10.1109/QRS-C.2017.24
   Reddy M., 2015, 2015 IEEE INT C ELEC, P1
   Smith B., 2000, Proceedings of the Fifth International Conference on Artificial Intelligence Planning and Scheduling, P254
   Vilkomir S, 2014, IEEE ICST WORKSHOP, P78, DOI 10.1109/ICSTW.2014.9
   Vos Puoskari T.E., 2013, 2013 INT WORKSHOP JO, P7, DOI DOI 10.1145/2489280.2489287
   Wang SJ, 2017, IEEE ICST WORKSHOP, P272, DOI 10.1109/ICSTW.2017.48
   Wojciak P, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P103, DOI 10.1109/ICST.2014.23
   Wong WE, 2017, J SYST SOFTWARE, V133, P68, DOI 10.1016/j.jss.2017.06.069
   Zhiqiang Zhang, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P587, DOI 10.1109/ICST.2012.145
NR 42
TC 19
Z9 21
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2020
VL 25
IS 4
BP 2661
EP 2693
DI 10.1007/s10664-019-09799-2
EA APR 2020
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MD8CQ
UT WOS:000527443000001
DA 2024-07-18
ER

PT J
AU Carvalho, SG
   Aniche, M
   Verissimo, J
   Durelli, RS
   Gerosa, MA
AF Carvalho, Suelen Goularte
   Aniche, Mauricio
   Verissimo, Julio
   Durelli, Rafael S.
   Gerosa, Marco Aurelio
TI An empirical catalog of code smells for the presentation layer of
   Android apps
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Android mobile applications; Code smells; Empirical software
   engineering; Software maintenance and evolution
ID BAD
AB Software developers, including those of the Android mobile platform, constantly seek to improve their applications' maintainability and evolvability. Code smells are commonly used for this purpose, as they indicate symptoms of design problems. However, although the literature presents a variety of code smells, such as God Class and Long Method, characteristics that are specific to the underlying technologies are not taken into account. The presentation layer of an Android app, for example, implements specific architectural decisions from the Android platform itself (such as the use of Activities, Fragments, and Listeners) as well as deal with and integrate different types of resources (such as layouts and images). Through a three-step study involving 246 Android developers, we investigated code smells that developers perceive for this part of Android apps. We devised 20 specific code smells and collected the developers' perceptions of their frequency and importance. We also implemented a tool that identifies the proposed code smells and studied their prevalence in 619 open-source Android apps. Our findings suggest that: 1) developers perceive smells specific to the presentation layer of Android apps; 2) developers consider these smells to be of high importance and frequency; and 3) the proposed smells occur in real-world Android apps. Our domain-specific smells can be leveraged by developers, researchers, and tool developers for searching potentially problematic pieces of code.
C1 [Carvalho, Suelen Goularte] Univ Sao Paulo, Sao Paulo, SP, Brazil.
   [Aniche, Mauricio] Delft Univ Technol, Software Engn, Delft, Netherlands.
   [Verissimo, Julio; Durelli, Rafael S.] Univ Fed Lavras, Comp Sci Dept, Lavras, Brazil.
   [Gerosa, Marco Aurelio] No Arizona Univ, Flagstaff, AZ 86011 USA.
C3 Universidade de Sao Paulo; Delft University of Technology; Universidade
   Federal de Lavras; Northern Arizona University
RP Aniche, M (corresponding author), Delft Univ Technol, Software Engn, Delft, Netherlands.
EM suelengcarvalho@gmail.com; m.f.aniche@tudelft.nl;
   julio.santos@posgrad.ufla.br; rafael.durelli@ufla.br;
   marco.gerosa@nau.edu
RI Gerosa, Marco Aurelio/A-6686-2009
OI Gerosa, Marco Aurelio/0000-0003-1399-7535
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   Alliance OH, 2007, OPEN HANDSET ALLIANC
   Aniche M, 2019, 41 ACM IEEE INT C SO
   Aniche M, 2018, EMPIR SOFTW ENG, V23, P2121, DOI 10.1007/s10664-017-9540-2
   Aniche M, 2016, PROC IEEE INT CONF S, P234, DOI 10.1109/ICSME.2016.12
   Aniche M, 2016, IEEE INT WORK C SO, P41, DOI 10.1109/SCAM.2016.19
   [Anonymous], THESIS
   [Anonymous], ANDR FRAGM VIS
   [Anonymous], 2017, Kotlin and android
   Arcoverde R., 2011, WORKSH REF TOOLS, P33
   Booch G., 2006, OBJECT ORIENTED ANAL
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Carvalho SG, 2019, EMPIRICAL CATALOG CO, DOI [10.5281/zenodo.3256367, DOI 10.5281/ZENODO.3256367]
   Chen TH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1001, DOI 10.1145/2568225.2568259
   Corbin J, 2008, Techniques and procedures for developing grounded theory, V3rd
   Evans E., 2003, Domain-Driven Design
   Fard AM, 2013, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM.2013.6648192
   Flauzino M, 2018, XII BRAZILIAN SYMPOSIUM ON SOFTWARE COMPONENTS, ARCHITECTURES, AND REUSE (SBCARS), P23, DOI 10.1145/3267183.3267186
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Futurice, 2018, ANDROID BEST PRACTIC
   Ghafari M, 2017, IEEE INT WORK C SO, P121, DOI 10.1109/SCAM.2017.24
   Gharachorlu G, 2014, THESIS
   Glaser B, 1967, Discovery of grounded theory strategies for qualitative research, DOI [10.4324/9780203793206, DOI 10.4324/9780203793206]
   Google, 2018, GUID APP ARCH
   Google, 2017, ANDR FUND
   Google, 2017, ANDR REC
   Google, 2016, ANDR BUILD YOUR 1 AP
   Google, 2016, ANDR RES TYP
   Google, 2016, DOC SIT ANDR DEV
   Google, 2018, OPT LAYOUT HIER
   Google, 2017, ANDR OPT VIEW HIER
   Google, 2017, ANDR PLAT ARCH
   Gottschalk Marion., 2012, GI-Jahrestagung, V208, P441
   Habchi Sarra, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P110, DOI 10.1109/MOBILESoft.2017.11
   Hecht G, 2015, PAPRIKA
   Hecht G, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P59, DOI [10.1145/2897073.2897100, 10.1109/MobileSoft.2016.030]
   Hecht G, 2015, 2ND ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS MOBILESOFT 2015, P148, DOI 10.1109/MobileSoft.2015.38
   Hecht G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P766, DOI 10.1109/ICSE.2015.243
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Khomh F, 2009, P 2009 16 WORK C REV
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Lanza M, 2007, Object-oriented Metrics in Practice: Using Software Metrics To Characterize, Evaluate, and Improve the Design of Object-oriented Systems
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Linares-Vasquez M, 2014, DOMAIN MATTERS BRING, P232
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Linares-Vásquez M, 2017, J SYST SOFTWARE, V130, P1, DOI 10.1016/j.jss.2017.04.018
   Linares-Vásquez M, 2015, PROC IEEE INT CONF S, P352, DOI 10.1109/ICSM.2015.7332486
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Mannan UA, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P225, DOI [10.1109/MobileSoft.2016.048, 10.1145/2897073.2897094]
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Martin R. C., 2008, Clean Code: A Handbook of Agile Software Craftsmanship
   Minelli R, 2013, P 2013 17 EUR C SOFT
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Nielsen J., 2000, WHY YOU ONLY NEED TE
   Palomba F, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P487, DOI 10.1109/SANER.2017.7884659
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Peruma ASA, 2018, WHAT SMELL EMPIRICAL
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Pinzger M, 2012, DETECTING CODE SMELL
   Reimann Jan, 2014, TOOL SUPPORTED QUALI
   Riel ArthurJ., 1996, OBJECT ORIENTED DESI, V335
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Statista, 2017, GLOB MOB OS MARK SHA
   Suryanarayana G., 2014, Refactoring for Software Design Smells: Managing Technical Debt
   Taibi D, 2017, INFORM SOFTWARE TECH, V92, P223, DOI 10.1016/j.infsof.2017.08.008
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Wasserman A.I., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research, P397, DOI [DOI 10.1145/1882362.1882443, 10.1145/1882362.1882443]
   Webster BF, 1995, M T BOOKS
   Yamashita A., 2013, EXPLORING IMPACT INT
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
NR 72
TC 9
Z9 11
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3546
EP 3586
DI 10.1007/s10664-019-09768-9
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JT6XW
UT WOS:000501131100010
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Farias, RS
   de Souza, RM
   McGregor, JD
   de Almeida, ES
AF Farias, Roselane Silva
   de Souza, Renata Maria
   McGregor, John D.
   de Almeida, Eduardo Santana
TI Designing smart city mobile applications An initial grounded theory
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mobile applications; Software architecture; Smart city; Grounded theory;
   Case study; Interviews
ID SOFTWARE; ARCHITECTURE
AB The software architecture community has played a crucial role in the development of mobile software. Many of the ideas used in the design of these systems came from traditional software architecture and those ideas have contributed to mobile computing becoming ubiquitous. Mobile applications in the context of smart cities are very challenging since they need to operate within the power, processor, and capacity limitations of mobile devices, the exacting demands of life critical smart city requirements, and the constantly changing and exposed environment which may not always be trusted. Since there are no widely accepted design models for this type of software, developers must resort to primitive design decisions to meet all the needs of these applications, which takes additional time and expertise. For this reason, this study aims to investigate the design process for mobile applications in the context of smart cities. In order to address the lack of verified information about designing mobile apps, we conducted a multi-case study with 9 applications from 4 different development groups to build a grounded theory. The applications were reverse engineered to expose the architecture of each application. Based on all the data, an initial grounded theory was constructed to explain how the selected design process produces an app with the desired characteristics. The resulting theory offers explanations for how software engineering teams design mobile apps for smart cities. This knowledge will serve as a basis to further understand the phenomena and advances towards more effective design and development process definitions.
C1 [Farias, Roselane Silva; de Souza, Renata Maria; de Almeida, Eduardo Santana] Univ Fed Bahia, Comp Sci Dept, Salvador, BA, Brazil.
   [McGregor, John D.] Clemson Univ, Sch Comp, Clemson, SC USA.
C3 Universidade Federal da Bahia; Clemson University
RP Farias, RS (corresponding author), Univ Fed Bahia, Comp Sci Dept, Salvador, BA, Brazil.
EM rosesilva@dcc.ufba.br; renatasouza@dcc.ufba.br; johnmc@clemson.edu;
   esa@dcc.ufba.br
RI Souza, Renata/ABG-4510-2020; de Almeida, Eduardo/JJC-2493-2023
OI Souza, Renata/0000-0002-9609-2696; 
CR Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   Ahvenniemi H, 2017, CITIES, V60, P234, DOI 10.1016/j.cities.2016.09.009
   Ameller D., 2012, Proceedings from RE: The 20th International Requirements Engineering Conference, P41, DOI DOI 10.1109/RE.2012.6345838
   Amorim AM, 2017, ICEIS: PROCEEDINGS OF THE 19TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P501, DOI 10.5220/0006360405010509
   [Anonymous], 2013, Case study research: Design and methods
   Bagheri H, 2016, J SYST SOFTWARE, V119, P31, DOI 10.1016/j.jss.2016.05.039
   Belleau Jean-Phillippe, 2018, Report on the Crimes Against the Rohingya from August to December 2017 in Rakhine State
   Bosch Jan., 2000, ISSUES IND PRODUCT L, P159
   Brereton Pearl., 2008, Proceedings of the 12th International Conference on Evaluation and Assessment in Software Engineering, P41
   Cocchia A, 2014, PROGR IS, P13, DOI 10.1007/978-3-319-06160-3_2
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Corbin J., 2015, BASICS QUALITATIVE R
   da Silva W.M., 2013, Proceedings of the 28th Annual ACM Symposium on Applied Computing, P1722, DOI DOI 10.1145/2480362.2480688
   DAMERI R.P., 2013, International Journal of Computers and Technology, V11, P2544, DOI 10.24297/ijct.v11i5.1142
   Del Esposte AD, 2019, FUTURE GENER COMP SY, V93, P427, DOI 10.1016/j.future.2018.10.026
   Diniz HBM, 2016, PROCEEDINGS OF THE 18TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 2 (ICEIS), P600, DOI 10.5220/0005837606000607
   Ferreira JE, 2017, 2017 IEEE SMARTWORLD, UBIQUITOUS INTELLIGENCE & COMPUTING, ADVANCED & TRUSTED COMPUTED, SCALABLE COMPUTING & COMMUNICATIONS, CLOUD & BIG DATA COMPUTING, INTERNET OF PEOPLE AND SMART CITY INNOVATION (SMARTWORLD/SCALCOM/UIC/ATC/CBDCOM/IOP/SCI), DOI 10.1109/UIC-ATC.2017.8397574
   FIWARE Foundation, 2018, FIW DEV
   Fraunhofer, 2014, FRAUNH PROJ CTR SOFT
   Garlan D., 2000, FUTURE SOFTWARE ENG, P91
   Glaser B. G., 1967, DISCOV GROUNDED THEO
   Glaser B.G., 1998, DOING GROUNDED THEOR
   Google, 2018, AS ANDR DEV DOC
   Google, 2018, APPL FUND ANDR DEV D
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Hoda R, 2012, EMPIR SOFTW ENG, V17, P609, DOI 10.1007/s10664-011-9161-0
   Imaginovation, 2017, 16 REAS APP STOR REJ
   Jansen A., 2008, THESIS
   Janssen D, TECHOPEDIA THE IT ED
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Katz K, 2014, 8 SECURITY ISSUES PR
   Khatoun R, 2016, COMMUN ACM, V59, P46, DOI 10.1145/2858789
   Kitchin R, 2015, CAMB J REG ECON SOC, V8, P131, DOI 10.1093/cjres/rsu027
   Liu C, 2011, J SYST SOFTWARE, V84, P2022, DOI 10.1016/j.jss.2011.06.049
   Medvidovic N, 2010, J SYST SOFTWARE, V83, P885, DOI 10.1016/j.jss.2009.11.004
   Mojica IJ, 2014, IEEE SOFTWARE, V31, P78, DOI 10.1109/MS.2013.142
   Morse J., 2003, HDB MIXED METHODS SO, P189, DOI DOI 10.1097/00006199-199103000-00014
   Nagappan M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P21, DOI 10.1109/SANER.2016.88
   Nandan N, 2014, IEEE INT CONF MOB DA, P67, DOI 10.1109/MDM.2014.70
   Newcombe T., 2014, Government Technology
   Rong WE, 2014, CHINA COMMUN, V11, P56, DOI 10.1109/CC.2014.6825259
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saifi R, 2017, 2017 MOBILE APP MARK
   Santana EFZ, 2016, ARXIV160908089 CORR
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sharma A, 2015, PROCEDIA COMPUT SCI, V70, P16, DOI 10.1016/j.procs.2015.10.019
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Sousa L, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P921, DOI 10.1145/3180155.3180239
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Syer MD, 2011, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2011.25
   Taylor Richard N., 2009, Software architecture: foundations, theory, and practice
   Tomas GHRP, 2013, ICEIS: PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS - VOL 2, P410, DOI 10.5220/0004417204100417
   Tudoreanu ME, 2000, INTERNATIONAL SYMPOSIUM ON MULTIMEDIA SOFTWARE ENGINEERING, PROCEEDINGS, P245, DOI 10.1109/MMSE.2000.897218
   United Nations DoE Affairs S, 2017, ESAPWP248 UN DOE AFF
   Vitiello G, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P139, DOI 10.1109/REW.2017.67
   Wasserman A.I., 2010, Proceedings of the FSE/SDP Workshop on Future of Software Engineering Research, P397, DOI [DOI 10.1145/1882362.1882443, 10.1145/1882362.1882443]
   Zhang WS, 2016, 2016 INTERNATIONAL CONFERENCE ON IDENTIFICATION, INFORMATION AND KNOWLEDGE IN THE INTERNET OF THINGS (IIKI), P110, DOI 10.1109/IIKI.2016.7
NR 57
TC 3
Z9 3
U1 1
U2 19
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3255
EP 3289
DI 10.1007/s10664-019-09723-8
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JT6XW
UT WOS:000501131100002
OA Green Published
DA 2024-07-18
ER

PT J
AU Wan, ZY
   Lo, D
   Xia, X
   Cai, L
AF Wan, Zhiyuan
   Lo, David
   Xia, Xin
   Cai, Liang
TI Practical and effective sandboxing for Linux containers
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Container; System call; Sandbox; Testing; Monitoring; Cloud computing;
   Docker; Seccomp
ID SOFTWARE
AB A container is a group of processes isolated from other groups via distinct kernel namespaces and resource allocation quota. Attacks against containers often leverage kernel exploits through the system call interface. In this paper, we present an approach that mines sandboxes and enables fine-grained sandbox enforcement for containers. We first explore the behavior of a container by running test cases and monitor the accessed system calls including types and arguments during testing. We then characterize the types and arguments of system call invocations and translate them into sandbox rules for the container. The mined sandbox restricts the container's access to system calls which are not seen during testing and thus reduces the attack surface. In the experiment, our approach requires less than eleven minutes to mine a sandbox for each of the containers. The estimation of system call coverage of sandbox mining ranges from 96.4% to 99.8% across the containers under the limiting assumptions that the test cases are complete and only static system/application paths are used. The enforcement of mined sandboxes incurs low performance overhead. The mined sandboxes effectively reduce the attack surface of containers and can prevent the containers from security breaches in reality.
C1 [Wan, Zhiyuan; Cai, Liang] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
   [Wan, Zhiyuan] Univ British Columbia, Dept Comp Sci, Vancouver, BC, Canada.
   [Wan, Zhiyuan; Cai, Liang] Alibaba Zhejiang Univ Joint Inst Frontier Technol, Hangzhou, Zhejiang, Peoples R China.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
C3 Zhejiang University; University of British Columbia; Singapore
   Management University; Monash University
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
EM wanzhiyuan@zju.edu.cn; davidlo@smu.edu.sg; xin.xia@monash.edu;
   leoncai@zju.edu.cn
RI cai, liang/KCY-0261-2024; Xia, Xin/AAD-6217-2022; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Wan, Zhiyuan/0000-0001-7657-6653; Lo,
   David/0000-0002-4367-7201
CR Acharya A, 2000, P 9 C USENIX SEC S U
   Anand S, 2013, J SYST SOFTWARE, V86, P1978, DOI 10.1016/j.jss.2013.02.061
   [Anonymous], 2016, CVE20160728
   [Anonymous], 1998, SIGMETRICS PERFORM E, DOI DOI 10.1145/306225.306235
   Bacis E, 2015, IEEE CONF COMM NETW, P749, DOI 10.1109/CNS.2015.7346917
   Bao LF, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P445, DOI 10.1109/SANER.2018.8330231
   Bhatkar S, 2006, P IEEE S SECUR PRIV, P48, DOI 10.1109/SP.2006.12
   Cadar C, 2013, COMMUN ACM, V56, P82, DOI 10.1145/2408776.2408795
   Chen TY, 2010, J SYST SOFTWARE, V83, P60, DOI 10.1016/j.jss.2009.02.022
   Ciupa I, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P71, DOI 10.1145/1368088.1368099
   Corbet J, 2012, YET ANOTHER NEW APPR
   Corbet Jonathan, 2009, LWN.net
   COWAN C, 2007, APPARMOR LINUX APPL
   DjangoSoftwareFoundation, 2015, DJANG HIGH LEV PYTH
   DockerDocs, 2017, SECC SEC PROF DOCK
   DockerHub, 2017, DOCK HUB
   DockerHub, 2017, HELL WORLD CONT
   DraisInc, 2017, SYSD
   Endler D, 1998, 14TH ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P268, DOI 10.1109/CSAC.1998.738647
   Felter W, 2015, INT SYM PERFORM ANAL, P171, DOI 10.1109/ISPASS.2015.7095802
   Fetzer C, 2008, EUROSYS'08: PROCEEDINGS OF THE EUROSYS 2008 CONFERENCE, P273, DOI 10.1145/1357010.1352621
   Forrest S, 1997, COMMUN ACM, V40, P88, DOI 10.1145/262793.262811
   Forrest S, 1996, P IEEE S SECUR PRIV, P120, DOI 10.1109/SECPRI.1996.502675
   Fraser T, 1999, P IEEE S SECUR PRIV, P2, DOI 10.1109/SECPRI.1999.766713
   Gao DB, 2006, LECT NOTES COMPUT SC, V4219, P19
   Garfinkel T., 2004, NDSS
   Garfinkel Tal., 2003, P NETWORK DISTRIBUTE
   GlobalIndustryAnalystsInc, 2015, PLATF SERV PAAS MARK
   Goldberg Ian, 1996, USENIX SEC S
   Grubb S, 2017, AUDITD
   Guo PhilipJ., 2011, USENIX ANN TECHNICAL, P21
   Hallyn S. E., 2008, LIN S, V8
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   Hofmeyr S. A., 1998, Journal of Computer Security, V6, P151
   Jain K., 2000, NDSS
   Jamrozik K, 2016, PROC INT CONF SOFTW, P37, DOI 10.1145/2884781.2884782
   JSON, 2017, INTR JSON
   Kim N., 2013, 2013 USENIX ANN TECH, P139
   Kiriansky V., 2002, USENIX SECURITY S, V92, P84
   Ko C, 2000, P C USENIX SEC S, P1157
   Kopytov Alexey, 2017, sysbench
   Kruegel C, 2003, LECT NOTES COMPUT SC, V2808, P326
   L Le, 2014, EXPLOITING NGINX CHU
   Le TDB, 2018, IEEE INT C ENG COMP, P51, DOI 10.1109/ICECCS2018.2018.00014
   Liao YH, 2002, COMPUT SECUR, V21, P439, DOI 10.1016/S0167-4048(02)00514-X
   MacManus G, 2014, NGINX HTTP SERVER 1
   Maggi F, 2010, IEEE T DEPEND SECURE, V7, P381, DOI 10.1109/TDSC.2008.69
   Mattetti M, 2015, IEEE CONF COMM NETW, P559, DOI 10.1109/CNS.2015.7346869
   McCarty Bill., 2005, Selinux: NSA's Open Source Security Enhanced Linux, V238
   Menage P, 2004, CGROUPS
   Merkel D., 2014, LINUX J, V2014, P2, DOI DOI 10.5555/2600239.2600241
   Mongodb, 2017, MONG PERF
   Mutz D., 2006, ACM Transactions on Information and Systems Security, V9, P61, DOI 10.1145/1127345.1127348
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   OpenContainerInitiative, 2017, RUNC LIBC VERS 0 1 1
   PostgreSQL, 2017, PGBENCH
   Provos N., 2003, USENIX SECURITY
   redislabs, 2017, FAST IS RED
   SALTZER JH, 1975, P IEEE, V63, P1278, DOI 10.1109/PROC.1975.9939
   Sekar R, 2001, P IEEE S SECUR PRIV, P144, DOI 10.1109/SECPRI.2001.924295
   Somayaji A, 2000, USENIX ASSOCIATION PROCEEDINGS OF THE NINTH USENIX SECURITY SYMPOSIUM, P185
   Utting M., 2010, Practical model-based testing: a tools approach
   Vlasenko D, 2017, PTRACE DOCUMENTATION
   Wagner D, 2001, P IEEE S SECUR PRIV, P156, DOI 10.1109/SECPRI.2001.924296
   Wagner David A, 1999, THESIS
   Wan Z, 2014, INT C SOFTW ENG KNOW, P416
   Wan Zhi-yuan, 2015, Journal of Zhejiang University. Engineering Science, V49, P1031, DOI 10.3785/j.issn.1008-973X.2015.06.005
   Wan ZY, 2017, IEEE INT CONF SOFTW, P92, DOI 10.1109/ICST.2017.16
   Warrender C, 1999, P IEEE S SECUR PRIV, P133, DOI 10.1109/SECPRI.1999.766910
   Whalen S., 2001, Node99
   Zeller A, 2015, INT C PROGRAM COMPRE, P1, DOI 10.1109/ICPC.2015.8
   Zeng Q, 2014, TECH REP
   Zhiyuan Wan, 2011, 2011 6th IEEE Joint International Information Technology and Artificial Intelligence Conference (ITAIC 2011), P173, DOI 10.1109/ITAIC.2011.6030179
NR 73
TC 6
Z9 9
U1 1
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 4034
EP 4070
DI 10.1007/s10664-019-09737-2
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JT6XW
UT WOS:000501131100025
OA Green Accepted
DA 2024-07-18
ER

PT J
AU bin Ali, N
   Engström, E
   Taromirad, M
   Mousavi, MR
   Minhas, NM
   Helgesson, D
   Kunze, S
   Varshosaz, M
AF bin Ali, Nauman
   Engstrom, Emelie
   Taromirad, Masoumeh
   Mousavi, Mohammad Reza
   Minhas, Nasir Mehmood
   Helgesson, Daniel
   Kunze, Sebastian
   Varshosaz, Mahsa
TI On the search for industry-relevant regression testing research
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Regression testing; Industrial relevance; Systematic literature review;
   Taxonomy; Recommendations
ID TEST-CASE SELECTION; TEST-CASE PRIORITIZATION; SYSTEM
AB Regression testing is a means to assure that a change in the software, or its execution environment, does not introduce new defects. It involves the expensive undertaking of rerunning test cases. Several techniques have been proposed to reduce the number of test cases to execute in regression testing, however, there is no research on how to assess industrial relevance and applicability of such techniques. We conducted a systematic literature review with the following two goals: firstly, to enable researchers to design and present regression testing research with a focus on industrial relevance and applicability and secondly, to facilitate the industrial adoption of such research by addressing the attributes of concern from the practitioners' perspective. Using a reference-based search approach, we identified 1068 papers on regression testing. We then reduced the scope to only include papers with explicit discussions about relevance and applicability (i.e. mainly studies involving industrial stakeholders). Uniquely in this literature review, practitioners were consulted at several steps to increase the likelihood of achieving our aim of identifying factors important for relevance and applicability. We have summarised the results of these consultations and an analysis of the literature in three taxonomies, which capture aspects of industrial-relevance regarding the regression testing techniques. Based on these taxonomies, we mapped 38 papers reporting the evaluation of 26 regression testing techniques in industrial settings.
C1 [bin Ali, Nauman] Blekinge Inst Technol, Karlskrona, Sweden.
   [Minhas, Nasir Mehmood] Blekinge Inst Technol, Software Engn Res Lab SERL Sweden, Karlskrona, Sweden.
   [Engstrom, Emelie] Lund Univ, Software Engn, Lund, Sweden.
   [Helgesson, Daniel] Lund Univ, Dept Comp Sci, Lund, Sweden.
   [Taromirad, Masoumeh] Halmstad Univ, Halmstad, Sweden.
   [Mousavi, Mohammad Reza] Halmstad Univ, Comp Syst Engn, Halmstad, Sweden.
   [Kunze, Sebastian] Halmstad Univ, Ctr Res Embedded Syst, Halmstad, Sweden.
   [Varshosaz, Mahsa] Halmstad Univ, Ctr Res Embedded Syst CERES, Sch Informat Technol, Halmstad, Sweden.
   [Mousavi, Mohammad Reza] Univ Leicester, Data Oriented Software Engn, Dept Informat, Leicester, Leics, England.
C3 Blekinge Institute Technology; Blekinge Institute Technology; Lund
   University; Lund University; Halmstad University; Halmstad University;
   Halmstad University; Halmstad University; University of Leicester
RP bin Ali, N (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.
EM nauman.ali@bth.se; emelie.engstrom@cs.lth.se
RI Engström, Emelie/AAG-7808-2019; Minhas, Nasir Mehmood/AAP-4624-2021;
   Ali, Nauman bin/J-4293-2015; Minhas, Nasir Mehmood/G-4297-2018
OI Engström, Emelie/0000-0001-6736-9425; Minhas, Nasir
   Mehmood/0000-0001-8177-4355; Ali, Nauman bin/0000-0001-7266-5632;
   Minhas, Nasir Mehmood/0000-0001-8177-4355; Taromirad,
   Masoumeh/0000-0002-0838-928X
FU ELLIIT, a Strategic Area within IT and Mobile Communications - Swedish
   Government; EASE, the Industrial Excellence Centre for Embedded
   Applications Software Engineering; Vetenskapsradet [621-2014-5057];
   Swedish Knowledge Foundation (Stiftelsen for Kunskaps-och
   Kompetensutveckling) [20140312]
FX The authors would like to thank the industry partners from Axis
   Communications AB, Sweden and Sony Mobile Communications, Sweden for
   their time, input and feedback throughout this study. We also thank
   Serge Demeyer for reviewing the manuscript and providing improvement
   proposals. This work has been supported by ELLIIT, a Strategic Area
   within IT and Mobile Communications, funded by the Swedish Government.
   Support has also come from EASE, the Industrial Excellence Centre for
   Embedded Applications Software Engineering. The work of Mohammad Reza
   Mousavi and Masoumeh Taromirad has been partially supported by
   (Vetenskapsradet) award number: 621-2014-5057 (Effective Model-Based
   Testing of Concurrent Systems) and by the Swedish Knowledge Foundation
   (Stiftelsen for Kunskaps-och Kompetensutveckling) in the context of the
   AUTO-CAAS HOG project (number: 20140312).
CR Ali NB, 2016, P 10 ACM IEEE INT S, p[54, 1, 6]
   Anderson J., 2014, P 11 WORK C MIN SOFT, P142
   [Anonymous], 8291983 IEEE
   [Anonymous], INT S SOFTW TEST AN
   Bertolino A, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P85, DOI 10.1109/FOSE.2007.25
   Bin Ali N, 2014, J SYST SOFTWARE, V97, P65, DOI 10.1016/j.jss.2014.06.059
   Bin Ali N, 2012, INT SYMP EMP SOFTWAR, P211, DOI 10.1145/2372251.2372290
   Bjarnason E, 2016, INFORM SOFTWARE TECH, V70, P204, DOI 10.1016/j.infsof.2015.05.004
   Buchgeher G, 2013, IEEE ICST WORKSHOP, P74, DOI 10.1109/ICSTW.2013.16
   Carlson Ryan, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P382, DOI 10.1109/ICSM.2011.6080805
   Carver JC, 2016, P 10 ACM IEEE INT S, P1
   Catal C., 2012, P 2 INT WORKSH EV AS
   Catal C, 2013, SOFTWARE QUAL J, V21, P445, DOI 10.1007/s11219-012-9181-z
   Devaki P., 2013, P 2013 INT S SOFTWAR, P34, DOI DOI 10.1145/2483760.2483781
   Edison H, 2013, J SYST SOFTWARE, V86, P1390, DOI 10.1016/j.jss.2013.01.013
   Ekelund ED, 2015, PROC IEEE INT CONF S, P449, DOI 10.1109/ICSM.2015.7332496
   Engstrom E., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P367, DOI 10.1109/ICST.2011.27
   Engstrom E., 2012, P 2 INT WORKSH EV AS, P15
   Engström E, 2017, SOFTWARE QUAL J, V25, P1269, DOI 10.1007/s11219-016-9322-x
   Engström E, 2010, LECT NOTES COMPUT SC, V6156, P3, DOI 10.1007/978-3-642-13792-1_3
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   ENGSTROM RN, 2010, PROCEEDINGS OF THE 3, P75
   Felderer M, 2015, INT J SOFTW TOOLS TE, V17, P305, DOI 10.1007/s10009-015-0365-2
   Felizardo KR, 2016, P 10 ACM IEEE INT S, P531
   Franch X, 2017, INT REQUIR ENG CONF, P382, DOI 10.1109/RE.2017.17
   Garousi V, 2016, INFORM SOFTWARE TECH, V80, P195, DOI 10.1016/j.infsof.2016.09.002
   Gligoric Milos, 2014, Proceedings of the 29th ACM/IEEE international conference on Automated software engineering, P361, DOI 10.1145/2642937.2643019
   Harrold MJ, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P99, DOI 10.1109/FOSM.2008.4659253
   Herzig K, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P483, DOI 10.1109/ICSE.2015.66
   Hirzel Matthias, 2016, SOFTWARE ENG WORKSHO, P55
   Huang M, 2009, PROCEEDINGS OF INTERNATIONAL CONFERENCE ON EARTHQUAKE ENGINEERING - THE FIRST ANNIVERSARY OF WENCHUAN EARTHQUAKE, P558
   Ivarsson M, 2011, EMPIR SOFTW ENG, V16, P365, DOI 10.1007/s10664-010-9146-4
   Janjua MU, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P994, DOI 10.1145/2786805.2804430
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Kapfhammer G. M., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P99, DOI 10.1109/ICSTW.2011.88
   Kazmi R, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3057269
   Kitchenham B., 2015, Evidence-Based Software Engineering and Systematic Reviews
   Krishnamoorthi R, 2009, INFORM SOFTWARE TECH, V51, P799, DOI 10.1016/j.infsof.2008.08.007
   Li Q, 2013, P 2013 INT C SOFTW S, P78
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Lochau M, 2014, J SYST SOFTWARE, V91, P63, DOI 10.1016/j.jss.2013.11.1096
   Lv XJ, 2006, PROCEEDINGS OF THE 2006 IEEE INTERNATIONAL CONFERENCE ON VEHICULAR ELECTRONICS AND SAFETY, P512
   Marijan D, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P157, DOI 10.1109/QRS.2015.31
   Marijan D, 2013, PROC IEEE INT CONF S, P540, DOI 10.1109/ICSM.2013.91
   Minhas NM, 2017, 2017 24TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE WORKSHOPS (APSECW), P25, DOI 10.1109/APSECW.2017.23
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Narciso EN, 2014, INT J SOFTW ENG KNOW, V24, P653, DOI 10.1142/S0218194014500259
   Osterweil LJ, 2008, COMPUTER, V41, P39, DOI 10.1109/MC.2008.85
   Pasala A, 2005, 12TH ASIA-PACIFIC SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P401, DOI 10.1109/APSEC.2005.31
   Petersen K, 2014, INT WORKSH LONG TERM
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Qiu D, 2015, ACM COMPUT SURV, V47, DOI 10.1145/2631685
   Rainer A., 2005, REBSE'05: Proceedings of the 2005 Workshop on Realising Evidence-Based Software Engineering, V30, P1, DOI [10.1145/1083174, DOI 10.1145/1083174]
   Rainer A., 2006, 10 INT C EV ASS SOFT
   Rainer A, 2008, P 12 INT C EV ASS SO
   Redwine S. T.  Jr., 1985, Proceedings of the 8th International Conference on Software Engineering (Cat. No.85CH2139-4), P189
   Rogstad E, 2016, J SYST SOFTWARE, V113, P257, DOI 10.1016/j.jss.2015.12.003
   Rogstad E, 2013, INFORM SOFTWARE TECH, V55, P1781, DOI 10.1016/j.infsof.2013.04.004
   Rombach D, 2008, ACM SIGSOFT SOFTW EN, V33, P26
   Rosero RH, 2016, INT J SOFTW ENG KNOW, V26, P675, DOI 10.1142/S0218194016300013
   Rothermel G, 1996, IEEE T SOFTWARE ENG, V22, P529, DOI 10.1109/32.536955
   Saha RK, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P268, DOI 10.1109/ICSE.2015.47
   Singh Y, 2012, INFORM-J COMPUT INFO, V36, P379
   Skoglund M, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P72, DOI 10.1109/ISESE.2005.1541816
   Storey MA, 2017, INT SYMP EMP SOFTWAR, P181, DOI 10.1109/ESEM.2017.28
   Tahvili S, 2016, ADV INTELL SYST, V448, P745, DOI 10.1007/978-3-319-32467-8_65
   Thelwall M, 2017, SCIENTOMETRICS, V112, P1125, DOI 10.1007/s11192-017-2400-4
   Uusitalo EJ, 2008, INT REQUIR ENG CONF, P265, DOI 10.1109/RE.2008.30
   Vöst S, 2016, INTERNATIONAL WORKSHOP ON CONTINUOUS SOFTWARE EVOLUTION AND DELIVERY, CSED 2016, P34, DOI [10.1109/CSED.2016.015, 10.1145/2896941.2896951]
   Wang S, 2017, SOFTW SYST MODEL, V16, P417, DOI 10.1007/s10270-015-0462-4
   Wang S, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P182, DOI 10.1145/2889160.2889240
   Wang S, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P32, DOI 10.1145/2648511.2648515
   Wang S, 2015, J SYST SOFTWARE, V103, P370, DOI 10.1016/j.jss.2014.08.024
   Wang S, 2013, LECT NOTES COMPUT SC, V8107, P237, DOI 10.1007/978-3-642-41533-3_15
   Wang SA, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1493
   White L, 2004, PROC IEEE INT CONF S, P18, DOI 10.1109/ICSM.2004.1357786
   White L, 2008, J SOFTW MAINT EVOL-R, V20, P419, DOI 10.1002/smr.371
   Wikstrand G, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P299, DOI 10.1109/ICST.2009.42
   Wohlin C., 2014, P 18 INT C EVALUATIO, P381
   Wohlin C, 2013, IEEE-ACM INT WKSP CO, P43, DOI 10.1109/CESI.2013.6618469
   Xu ZH, 2015, SOFTW TEST VERIF REL, V25, P77, DOI 10.1002/stvr.1562
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zarrad Anis, 2015, Journal of Software, V10, P971, DOI 10.17706/jsw.10.8.971-990
   Zelkowitz MV, 1998, NASA GODD SOFTW ENG, P52
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zheng J, 2006, FIFTH INTERNATIONAL CONFERENCE ON COMMERCIAL-OFF-THE-SHELF (COTS) - BASED SOFTWARE SYSTEM, PROCEEDINGS, P137
   Zheng J, 2007, P 22 IEEE ACM INT C, P224, DOI DOI 10.1145/1321631.1321665
   Zheng J, 2005, P 20TH IEEE ACM INT, P452
NR 88
TC 26
Z9 28
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 2020
EP 2055
DI 10.1007/s10664-018-9670-1
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700010
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU McIntosh, A
   Hassan, S
   Hindle, A
AF McIntosh, Andrea
   Hassan, Safwat
   Hindle, Abram
TI What can Android mobile app developers do about the energy consumption
   of machine learning?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning; Software energy consumption; Android; Mobile; App
   development
ID IMPACT
AB Machine learning is a popular method of learning functions from data to represent and to classify sensor inputs, multimedia, emails, and calendar events. Smartphone applications have been integrating more and more intelligence in the form of machine learning. Machine learning functionality now appears on most smartphones as voice recognition, spell checking, word disambiguation, face recognition, translation, spatial reasoning, and even natural language summarization. Excited app developers who want to use machine learning on mobile devices face one serious constraint that they did not face on desktop computers or cloud virtual machines: the end-user's mobile device has limited battery life, thus computationally intensive tasks can harm end users' phone availability by draining batteries of their stored energy. Currently, there are few guidelines for developers who want to employ machine learning on mobile devices yet are concerned about software energy consumption of their applications. In this paper, we combine empirical measurements of different machine learning algorithm implementations with complexity theory to provide concrete and theoretically grounded recommendations to developers who want to employ machine learning on smartphones. We conclude that some implementations of algorithms, such as J48, MLP, and SMO, do generally perform better than others in terms of energy consumption and accuracy, and that energy consumption is well-correlated to algorithmic complexity. However, to achieve optimal results a developer must consider their specific application as many factors dataset size, number of data attributes, whether the model will require updating, etc. affect which machine learning algorithm and implementation will provide the best results.
C1 [McIntosh, Andrea; Hindle, Abram] Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
   [Hassan, Safwat] Queens Univ, SAIL, Kingston, ON, Canada.
C3 University of Alberta; Queens University - Canada
RP Hindle, A (corresponding author), Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
EM akmcinto@ualberta.ca; shassan@cs.queensu.ca; hindle1@ualberta.ca
RI Hassan, Safwat/JWP-1498-2024
OI Hindle, Abram/0000-0002-4373-4958
FU NSERC Undergraduate Student Research Award; NSERC Discovery Grant
FX Andrea McIntosh was supported by a NSERC Undergraduate Student Research
   Award. Abram Hindle was supported by a NSERC Discovery Grant. Safwat
   Hassan was supported by Ahmed Hassan. We would like to thank Ahmed
   Hassan for his guidance.
CR Abdulsalam H, 2011, IEEE T KNOWL DATA EN, V23, P22, DOI 10.1109/TKDE.2010.36
   Aggarwal K, 2015, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSM.2015.7332477
   Agolli Tedis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P30, DOI 10.1109/MOBILESoft.2017.17
   [Anonymous], AB WEOTT
   [Anonymous], GOOGLE BRINGS ON DEV
   [Anonymous], THESIS
   [Anonymous], SMARTPHONE NOW MOST
   [Anonymous], YOUR SMARTPHONE GAIN
   [Anonymous], FIND TIM YOUR GOALS
   [Anonymous], IEEE SOFTWARE
   [Anonymous], MOB TENS
   [Anonymous], MNIST ARFF FIL
   [Anonymous], COR ML APPL DEV DOC
   [Anonymous], CFR ANOTHER JAVA DEC
   [Anonymous], IEEE SOFTWARE
   [Anonymous], 1998, ONLINE ALGORITHMS ST
   [Anonymous], 2015, ARXIV150603410
   [Anonymous], THESIS
   [Anonymous], 2015, 31 IEEE INT C SOFTW
   [Anonymous], MOB VIS
   [Anonymous], 2013, AKDENIZ GOOGLE PLAY
   [Anonymous], REL V2 1 20171001 LA
   [Anonymous], ANDR OP LIB
   [Anonymous], COMP NUMERICAL OPTIM
   [Anonymous], DO I APPL MACHINE LE
   [Anonymous], CUSTOMERS REALLY WAN
   [Anonymous], FUT IS HER IPHONE
   [Anonymous], 1990, SUPPORT VECTOR LEARN
   [Anonymous], AM AWS MACH LEARN
   [Anonymous], NEUROPH JAVA NEURAL
   [Anonymous], NEUR NETW AP ANDR DE
   [Anonymous], CLASS J48
   [Anonymous], 1998, The mnist database of handwritten digits
   [Anonymous], P 10 ACM WORKSH HOT
   [Anonymous], WIT AI NAT LANG DEV
   [Anonymous], UCDCSI20074
   [Anonymous], TOP ANDR PHON
   [Anonymous], MACH LEARN
   Banerjee A, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P588, DOI 10.1145/2635868.2635871
   Bhattacharya S., 2016, PROC 14 ACM C EMBEDD, P176
   Breiman L., 2001, Mach. Learn., V45, P5
   Bruce BR, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1327, DOI 10.1145/2739480.2754752
   Chowdhury SA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P49, DOI [10.1145/2901739.2901763, 10.1109/MSR.2016.015]
   Chowdhury SA, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P529, DOI 10.1109/SANER.2016.77
   Di Nucci D, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P103, DOI 10.1109/SANER.2017.7884613
   Good O., 2015, How google translate squeezes deep learning onto a phone [Online]. Available
   Gui JP, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P100, DOI 10.1109/ICSE.2015.32
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hasan S, 2016, PROC INT CONF SOFTW, P225, DOI 10.1145/2884781.2884869
   Hindle A, 2013, EMPIR SOFTW ENG, V18, P1125, DOI 10.1007/s10664-012-9209-9
   Hindle Abram, 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P12
   Jabbarvand R, 2015, 2015 IEEE/ACM FOURTH INTERNATIONAL WORKSHOP ON GREEN AND SUSTAINABLE SOFTWARE (GREENS), P8, DOI 10.1109/GREENS.2015.9
   Jiaping Gui, 2016, 2016 IEEE/ACM 5th International Workshop on Green and Sustainable Software (GREENS), P1, DOI 10.1109/GREENS.2016.009
   John G. H., 1995, Uncertainty in Artificial Intelligence. Proceedings of the Eleventh Conference (1995), P338
   Keerthi SS, 2001, NEURAL COMPUT, V13, P637, DOI 10.1162/089976601300014493
   Li D, 2016, PROC INT CONF SOFTW, P249, DOI 10.1145/2884781.2884867
   Li D, 2014, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSME.2014.34
   Lichman M., 2013, UCI MACHINE LEARNING
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Linares-Vásquez M, 2017, J SYST SOFTWARE, V130, P1, DOI 10.1016/j.jss.2017.04.018
   Linares-Vásquez M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P143, DOI 10.1145/2786805.2786847
   Malik H, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P418, DOI 10.1109/MSR.2015.53
   Manotas I, 2016, PROC INT CONF SOFTW, P237, DOI 10.1145/2884781.2884810
   Manotas I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P503, DOI 10.11455/2568225.2568297
   Mizutani E, 2001, IEEE IJCNN, P347, DOI 10.1109/IJCNN.2001.939044
   Pathak A, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P153
   Pereira Rui, 2016, 2016 IEEE/ACM 5th International Workshop on Green and Sustainable Software (GREENS), P15, DOI 10.1109/GREENS.2016.011
   Pinto G., 2014, P 11 WORK C MIN SOFT, P22
   Rasmussen K., 2014, P 3 INT WORKSHOP GRE, P38
   Saborido R, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P438, DOI 10.1109/SANER.2016.64
   Sahin C, 2016, J SOFTW-EVOL PROC, V28, P565, DOI 10.1002/smr.1762
   Sahin C, 2016, J SYST SOFTWARE, V117, P307, DOI 10.1016/j.jss.2016.03.031
   Sahin C, 2014, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSME.2014.35
   Su J., 2006, AAAI, V6, P500, DOI DOI 10.5555/1597538.1597619
   Wan M, 2017, SOFTW TEST VERIF REL, V27, DOI 10.1002/stvr.1635
   Witten IH, 2011, MOR KAUF D, P1
   Yang Yiming., 2003, P 26 ACM SIGIR C RES, P96, DOI DOI 10.1145/860435.860455
NR 77
TC 27
Z9 29
U1 0
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2019
VL 24
IS 2
BP 562
EP 601
DI 10.1007/s10664-018-9629-2
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ8DM
UT WOS:000462654200002
DA 2024-07-18
ER

PT J
AU Fan, YR
   Xia, X
   Lo, D
   Li, SP
AF Fan, Yuanrui
   Xia, Xin
   Lo, David
   Li, Shanping
TI Early prediction of merged code changes to prioritize reviewing tasks
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code review; Predictive model; Features
ID SOFTWARE; INSPECTIONS; IMBALANCE; DEFECTS
AB Modern Code Review (MCR) has been widely used by open source and proprietary software projects. Inspecting code changes consumes reviewers much time and effort since they need to comprehend patches, and many reviewers are often assigned to review many code changes. Note that a code change might be eventually abandoned, which causes waste of time and effort. Thus, a tool that predicts early on whether a code change will be merged can help developers prioritize changes to inspect, accomplish more things given tight schedule, and not waste reviewing effort on low quality changes. In this paper, motivated by the above needs, we build a merged code change prediction tool. Our approach first extracts 34 features from code changes, which are grouped into 5 dimensions: code, file history, owner experience, collaboration network, and text. And then we leverage machine learning techniques such as random forest to build a prediction model. To evaluate the performance of our approach, we conduct experiments on three open source projects (i.e., Eclipse, LibreOffice, and OpenStack), containing a total of 166,215 code changes. Across three datasets, our approach statistically significantly improves random guess classifiers and two prediction models proposed by Jeong et al. (2009) and Gousios et al. (2014) in terms of several evaluation metrics. Besides, we also study the important features which distinguish merged code changes from abandoned ones.
C1 [Fan, Yuanrui; Li, Shanping] Zhejiang Univ, Coll Comp Sci & Technol, Hangzhou, Zhejiang, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
C3 Zhejiang University; Monash University; Singapore Management University
RP Xia, X (corresponding author), Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
EM yrfan@zju.edu.cn; xin.xia@monash.edu; davidlo@smu.edu.sg;
   shan@zju.edu.cn
RI Xia, Xin/AAD-6217-2022; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201
FU NSFC Program [61602403, 61572426]
FX This work was partially supported by NSFC Program (No. 61602403 and
   61572426).
CR Ackerman A. F., 1984, Software Validation, Inspection - Testing - Verification - Alternatives. Proceedings of the Symposium, P13
   [Anonymous], 2009, Research on software analysis for error-free computing center Tech-Memo (ROSAEC MEMO 2009-006)
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2008, Proceedings of the 2008 international working conference on Mining software repositories
   [Anonymous], 2007, ENCY MEASUREMENT STA, DOI DOI 10.4135/9781412952644
   Arisholm E, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2007.22
   Aurum A, 2002, SOFTW TEST VERIF REL, V12, P133, DOI 10.1002/stvr.243
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bao LF, 2017, IEEE WORK CONF MIN S, P170, DOI 10.1109/MSR.2017.58
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Bhattacharya P., 2010, Software Main- tenance (ICSM), 2010 IEEE International Conference on, P1
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Costa C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P998, DOI 10.1145/2950290.2983936
   DeGroot Morris H., 2012, Probability and statistics, V4th
   Elkan C., 2001, P 17 INT JOINT C ART, V17, P973
   Fagan M.E., 2001, Pioneers and Their Contributions to Software Engineering, P301, DOI DOI 10.1007/978-3-642-48354-7_13
   Fenton N, 2007, INFORM SOFTWARE TECH, V49, P32, DOI 10.1016/j.infsof.2006.09.001
   Gonzalez-Barahona Jesus M., 2014, ELECT COMMUN EASST
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Grbac T.G., 2013, P 2 WORKSH SOFTW QUA, P1
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Han J, 2012, MOR KAUF D, P1
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Huang J, 2005, IEEE T KNOWL DATA EN, V17, P299, DOI 10.1109/TKDE.2005.50
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Khoshgoftaar TM, 2002, 7TH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P51, DOI 10.1109/HASE.2002.1173102
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lessenich O, 2018, AUTOMAT SOFTW ENG, V25, P279, DOI 10.1007/s10515-017-0227-0
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Liu MX, 2014, IEEE T RELIAB, V63, P676, DOI 10.1109/TR.2014.2316951
   Liu XY, 2006, IEEE DATA MINING, P970
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Matsumoto S, 2010, P 6 INT C PREDICTIVE, P1, DOI DOI 10.1145/1868328.1868356
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Mukadam M, 2013, IEEE WORK CONF MIN S, P45, DOI 10.1109/MSR.2013.6624002
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Rajbahadur GK, 2017, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2017.4
   Ratzinger J, 2007, LECT NOTES COMPUT SC, V4422, P12
   Rigby P. C., 2006, DCS305IR U VICT
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Romano D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P303, DOI 10.1109/ICSM.2011.6080797
   SCOTT AJ, 1974, BIOMETRICS, V30, P507, DOI 10.2307/2529204
   Shimagaki J, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P212, DOI 10.1145/2889160.2889243
   Shull F, 2008, IEEE SOFTWARE, V25, P88, DOI 10.1109/MS.2008.7
   Tamrawi A, 2011, P 19 ACM SIGSOFT S 1, P365, DOI [DOI 10.1145/2025113.2025163, 10.31274/etd-180810-1814, DOI 10.31274/ETD-180810-1814]
   Thongtanunam P, 2016, EMPIR SOFTW ENG, P1
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   UPTON GJG, 1992, J ROY STAT SOC A STA, V155, P395, DOI 10.2307/2982890
   Votta L. G.  Jr., 1993, SIGSOFT Software Engineering Notes, V18, P107, DOI 10.1145/167049.167070
   Weiss Gary M., 2007, Proceedings of the International Conference on Data Mining. DMIN 2007, P35
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wolpert DH, 1999, MACH LEARN, V35, P41, DOI 10.1023/A:1007519102914
   Xia X, 2017, IEEE T SOFTWARE ENG, V43, P272, DOI 10.1109/TSE.2016.2576454
   Xia X, 2016, IEEE T RELIAB, V65, P1810, DOI 10.1109/TR.2016.2588139
   Xia X, 2016, IEEE T SOFTWARE ENG, V42, P977, DOI 10.1109/TSE.2016.2543218
   Xia X, 2015, PROC IEEE INT CONF S, P261, DOI 10.1109/ICSM.2015.7332472
   Xia X, 2015, INFORM SOFTWARE TECH, V61, P93, DOI 10.1016/j.infsof.2014.12.006
   Yang X, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P460, DOI [10.1145/2901739.2903504, 10.1109/MSR.2016.054]
   Zanetti MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1032, DOI 10.1109/ICSE.2013.6606653
   Zhang Y, 2015, IEEE INT C ENG COMP, P40, DOI 10.1109/ICECCS.2015.15
   Zheng J, 2010, EXPERT SYST APPL, V37, P4537, DOI 10.1016/j.eswa.2009.12.056
NR 72
TC 39
Z9 41
U1 2
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2018
VL 23
IS 6
BP 3346
EP 3393
DI 10.1007/s10664-018-9602-0
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC1WE
UT WOS:000451593200008
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Laukkanen, E
   Paasivaara, M
   Itkonen, J
   Lassenius, C
AF Laukkanen, Eero
   Paasivaara, Maria
   Itkonen, Juha
   Lassenius, Casper
TI Comparison of release engineering practices in a large mature company
   and a startup
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Release engineering; Startup; Continuous integration; Continuous
   delivery; Case study
ID SCALE; AGILE
AB Modern release engineering practices provide multiple benefits for software companies, but organizations have struggled when trying to adopt the most advanced practices, such as continuous delivery. It is not known in which contexts the most advanced practices are applicable and what can be achieved by adopting them. In this study, we discuss the effect of the organizational context on adopted release engineering practices and what outcomes are achieved with the practices. We study two organizational contexts: the startup and the large mature company context. The effect of the product context is mitigated by studying two case organizations with similar products, a rare research opportunity. We performed 18 interviews with various roles in the case organizations. The number of production environments, the number of customers, the control over the production environment, the available resources, the organization size and the distribution of the organization affected the release engineering practices and the ability to release frequently. Having less internal verification and more customer verification enabled fast feedback and customer experimentation in the startup context, but increased the number of production defects. However, having more internal verification in the large mature company context surprisingly did not prevent production defects. The organizational context had a large effect on how achievable modern release engineering practices, such as continuous delivery, were. In the startup context, the lack of resources was the main factor hindering the improvement of release engineering practices, while in the large mature company context, the number of stakeholders and products were the main factors.
C1 [Laukkanen, Eero; Paasivaara, Maria; Itkonen, Juha; Lassenius, Casper] Aalto Univ, Dept Comp Sci, POB 15400, Aalto 00076, Finland.
C3 Aalto University
RP Laukkanen, E (corresponding author), Aalto Univ, Dept Comp Sci, POB 15400, Aalto 00076, Finland.
EM eero.laukkanen@alumni.aalto.fi; maria.paasivaara@aalto.fi;
   juha.itkonen@iki.fi; casper.lassenius@aalto.fi
RI Lassenius, Casper C/A-4339-2013; Itkonen, Juha P/E-8360-2012
OI Laukkanen, Eero/0000-0003-1622-0473
FU TEKES as part of the Need for Speed research program of DIMECC (Finnish
   Strategic Center for Science, Technology and Innovation in the field of
   ICT and digital business)
FX The authors would like to thank the case companies and in particular our
   interviewees. This work has been supported by TEKES as part of the Need
   for Speed research program of DIMECC (Finnish Strategic Center for
   Science, Technology and Innovation in the field of ICT and digital
   business).
CR Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   [Anonymous], THESIS
   [Anonymous], 2009, CONTINUOUS DEPLOYMEN
   [Anonymous], 2007, THESIS
   [Anonymous], 2002, Software configuration management patterns: effective teamwork, practical integration
   [Anonymous], 2015, DESALIN WATER TREAT
   Bjarnason E, 2012, INFORM SOFTWARE TECH, V54, P1107, DOI 10.1016/j.infsof.2012.04.006
   COOPER RG, 1990, BUS HORIZONS, V33, P44, DOI 10.1016/0007-6813(90)90040-I
   Debbiche A, 2014, LECT NOTES COMPUT SC, V8892, P17, DOI 10.1007/978-3-319-13835-0_2
   Desikan S., 2006, Software Testing: Principles and Practice
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   Dyck A, 2015, 2015 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON RELEASE ENGINEERING, P3, DOI 10.1109/RELENG.2015.10
   Fauzi SSM, 2010, ASIA PAC SOFWR ENG, P404, DOI 10.1109/APSEC.2010.53
   Feitelson DG, 2013, IEEE INTERNET COMPUT, V17, P8, DOI 10.1109/MIC.2013.25
   Fowler M., 2006, Continuous integration
   Freeman J, 2007, CALIF MANAGE REV, V50, P94, DOI 10.2307/41166418
   Giardino C, 2016, IEEE T SOFTWARE ENG, V42, P585, DOI 10.1109/TSE.2015.2509970
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Kruchten P, 2013, J SOFTW-EVOL PROC, V25, P351, DOI 10.1002/smr.572
   Laukkanen E, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962608
   Laukkanen E, 2017, INFORM SOFTWARE TECH, V82, P55, DOI 10.1016/j.infsof.2016.10.001
   Laukkanen E, 2015, 2015 AGILE CONFERENCE, P11, DOI 10.1109/Agile.2015.15
   Lehtinen TOA, 2014, INFORM SOFTWARE TECH, V56, P408, DOI 10.1016/j.infsof.2014.01.004
   Mäkinen S, 2016, INFORM SOFTWARE TECH, V80, P175, DOI 10.1016/j.infsof.2016.09.001
   Neely S, 2013, 2013 AGILE CONFERENCE (AGILE), P121, DOI 10.1109/AGILE.2013.17
   Olsson HH, 2014, IEEE SOFTWARE, V31, P87, DOI 10.1109/MS.2013.139
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Patton M. Q., 2002, QUALITATIVE RES EVAL, V3rd
   Rahman MT, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P201, DOI [10.1145/2901739.2901745, 10.1109/MSR.2016.029]
   Rahman MT, 2015, IEEE SOFTWARE, V32, P80
   Ralph P, 2013, PACIS, P154
   Roche J, 2013, COMMUN ACM, V56, P38, DOI 10.1145/2524713.2524721
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Savor T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P21, DOI 10.1145/2889160.2889223
   Schelle Graham, 2016, 2016 International Conference on Reconfigurable Computing and FPGAs (ReConFig), DOI 10.1109/ReConFig.2016.7857138
   Sekitoleko N., 2014, Agile processes in software engineering and extreme programming, P46, DOI DOI 10.1007/978-3-319-06862-6_4
   van der Hoek A, 1997, LECT NOTES COMPUT SC, V1301, P159, DOI 10.1145/267896.267909
   van Waardenburg G, 2013, INFORM SOFTWARE TECH, V55, P2154, DOI 10.1016/j.infsof.2013.07.012
   Wagstrom P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P199, DOI 10.1145/2568225.2568279
   Whiston S.C., 1993, J CAREER DEV, V19, P175
   Yoffie DB, 1999, HARVARD BUS REV, V77, P70
NR 42
TC 5
Z9 7
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2018
VL 23
IS 6
BP 3535
EP 3577
DI 10.1007/s10664-018-9616-7
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC1WE
UT WOS:000451593200013
OA hybrid
DA 2024-07-18
ER

PT J
AU Arcuri, A
AF Arcuri, Andrea
TI An experience report on applying software testing academic results in
   industry: we need usable automated test generation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Industry; Practice; Technology transfer; Impact; Applied research
ID ENGINEERING RESEARCH; COLLABORATIONS; IMPACT; BUGS
AB What is the impact of software engineering research on current practices in industry? In this paper, I report on my direct experience as a PhD/post-doc working in software engineering research projects, and then spending the following five years as an engineer in two different companies (the first one being the same I worked in collaboration with during my post-doc). Given a background in software engineering research, what cutting-edge techniques and tools from academia did I use in my daily work when developing and testing the systems of these companies? Regarding validation and verification (my main area of research), the answer is rather short: as far as I can tell, only FindBugs. In this paper, I report on why this was the case, and discuss all the challenging, complex open problems we face in industry and which somehow are "neglected" in the academic circles. In particular, I will first discuss what actual tools I could use in my daily work, such as JaCoCo and Selenium. Then, I will discuss the main open problems I faced, particularly related to environment simulators, unit and web testing. After that, popular topics in academia are presented, such as UML, regression and mutation testing. Their lack of impact on the type of projects I worked on in industry is then discussed. Finally, from this industrial experience, I provide my opinions about how this situation can be improved, in particular related to how academics are evaluated, and advocate for a greater involvement into open-source projects.
C1 [Arcuri, Andrea] Westerdals Oslo ACT, Fac Technol, Oslo, Norway.
   [Arcuri, Andrea] Univ Luxembourg, SnT, Luxembourg, Luxembourg.
C3 Westerdals Oslo School of Arts Communication & Technology; University of
   Luxembourg
RP Arcuri, A (corresponding author), Westerdals Oslo ACT, Fac Technol, Oslo, Norway.; Arcuri, A (corresponding author), Univ Luxembourg, SnT, Luxembourg, Luxembourg.
EM arcand@westerdals.no
FU National Research Fund, Luxembourg [FNR/P10/03]
FX I wish to thank Lionel Briand for insightful discussions. I also wish to
   thank Per Lauvas and Zohaib Iqbal for useful feedback on an early draft
   of this paper. This work is supported by the National Research Fund,
   Luxembourg (FNR/P10/03).
CR Arcuri A., 2016, IEEE INT C SOFTW TES
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Arcuri A, 2010, LECT NOTES COMPUT SC, V6435, P95, DOI 10.1007/978-3-642-16573-3_8
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Boehm B.W., 1981, Software engineering economics, V197
   Boules N, 2016, ARXIV160609236
   Briand L, 2012, IEEE SOFTWARE, V29, P96, DOI 10.1109/MS.2012.86
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   Collberg C, 2016, COMMUN ACM, V59, P62, DOI 10.1145/2812803
   Evans G, 2010, SCI TRANSL MED, V2, DOI 10.1126/scitranslmed.3001633
   Feller W., 1968, An Introduction to Probability Theory and Its Applications, V1
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Garousi Vahid, 2017, Software Quality Journal, V25, P1091, DOI 10.1007/s11219-016-9319-5
   Garousi V., 2017, P 21 INT C EV ASS SO, P65
   Garousi V, 2017, IEEE SOFTWARE, V34, P38, DOI 10.1109/MS.2017.3641116
   Garousi V, 2016, INFORM SOFTWARE TECH, V79, P106, DOI 10.1016/j.infsof.2016.07.006
   Gorschek T, 2014, J SYST SOFTWARE, V95, P176, DOI 10.1016/j.jss.2014.03.082
   Griswold WG, 2015, IEEE SOFTWARE, V32, P30, DOI 10.1109/MS.2015.107
   Hebig R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P173, DOI 10.1145/2976767.2976778
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Iqbal M., 2012, THESIS
   Iqbal MZ, 2015, SOFTW SYST MODEL, V14, P483, DOI 10.1007/s10270-013-0328-6
   Iqbal MZ, 2010, LECT NOTES COMPUT SC, V6394, P286
   Katz Harvey P, 2002, J Contin Educ Health Prof, V22, P43, DOI 10.1002/chp.1340220106
   Lo D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P415, DOI 10.1145/2786805.2786809
   Mesbah Ali, 2008, 2008 8th International Conference on Web Engineering (ICWE), P122, DOI 10.1109/ICWE.2008.24
   Mirzaaghaei M., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, ISSTA 2014, P71, DOI DOI 10.1145/2610384.2610406
   Myers Glenford J., 2011, The Art of Software Testing
   Norman DonaldA., 2010, interactions, V17, p9. issn, DOI DOI 10.1145/1806491.1806494
   Offutt J, 2013, IEEE SOFTWARE, V30, P96, DOI 10.1109/MS.2013.12
   Osterweil LJ, 2008, COMPUTER, V41, P39, DOI 10.1109/MC.2008.85
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Pechenizkiy M, 2008, INTELL DATA ANAL, V12, P237, DOI 10.3233/IDA-2008-12206
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   Schmidt DC, 2006, COMPUTER, V39, P25, DOI 10.1109/MC.2006.58
   Tsubouchi M, 2008, REGEN MED, V3, P497, DOI 10.2217/17460751.3.4.497
   Whittle J, 2013, LECT NOTES COMPUT SC, V8107, P1, DOI 10.1007/978-3-642-41533-3_1
   Wilson G, 2011, AM SCI, V99, P466, DOI 10.1511/2011.93.466
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
NR 41
TC 40
Z9 41
U1 1
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2018
VL 23
IS 4
BP 1959
EP 1981
DI 10.1007/s10664-017-9570-9
PG 23
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GK0MK
UT WOS:000435804100004
DA 2024-07-18
ER

PT J
AU Danglot, B
   Preux, P
   Baudry, B
   Monperrus, M
AF Danglot, Benjamin
   Preux, Philippe
   Baudry, Benoit
   Monperrus, Martin
TI Correctness attraction: a study of stability of software behavior under
   runtime perturbation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Perturbation analysis; Software correctness; Empirical study
AB Can the execution of software be perturbed without breaking the correctness of the output? In this paper, we devise a protocol to answer this question from a novel perspective. In an experimental study, we observe that many perturbations do not break the correctness in ten subject programs. We call this phenomenon "correctness attraction". The uniqueness of this protocol is that it considers a systematic exploration of the perturbation space as well as perfect oracles to determine the correctness of the output. To this extent, our findings on the stability of software under execution perturbations have a level of validity that has never been reported before in the scarce related work. A qualitative manual analysis enables us to set up the first taxonomy ever of the reasons behind correctness attraction.
C1 [Danglot, Benjamin; Preux, Philippe] INRIA, Inria Lille Nord Europe, 40 Ave Halley, F-59650 Villeneuve Dascq, France.
   [Preux, Philippe] Univ Lille, 40 Ave Halley, F-59650 Villeneuve Dascq, France.
   [Baudry, Benoit] Inria Rennes, Inria Rennes Bretagne Atlantique, Campus Beaulieu,263 Ave Gen Leclerc, F-35042 Rennes, France.
   [Monperrus, Martin] Univ Lille 1 Sci & Technol, KTH Royal Inst Technol, Brinellvagen 8, S-11428 Stockholm, Sweden.
C3 Inria; Universite de Lille; Universite de Rennes; Royal Institute of
   Technology
RP Danglot, B (corresponding author), INRIA, Inria Lille Nord Europe, 40 Ave Halley, F-59650 Villeneuve Dascq, France.
EM benjamin.danglot@inria.fr; philippe.preux@inria.fr;
   benoit.baudry@inria.fr; martin.monperrus@univ-lille1.fr
RI Monperrus, Martin/I-3640-2012
OI Monperrus, Martin/0000-0003-3505-3383
FU EU [STAMP ICT-16-10, 731529]; CPER Nord-Pas de Calais/FEDER DATA
   Advanced data science and technologies; French Ministry of Higher
   Education and Research; H2020 - Industrial Leadership [731529] Funding
   Source: H2020 - Industrial Leadership
FX This work was partially supported by the EU Project STAMP ICT-16-10 No.
   731529, CPER Nord-Pas de Calais/FEDER DATA Advanced data science and
   technologies 2015-2020, and the French Ministry of Higher Education and
   Research. We also wishes to acknowledge the continual support of Inria,
   and PP acknowledges the stimulating environment provided by the SequeL
   Inria project-team.
CR [Anonymous], THESIS
   [Anonymous], COMP 20 ANN ACM SIGP
   [Anonymous], IEEE J COMPUTER, DOI 10.1109/MC.1984.1659158
   [Anonymous], IEEE T SOFTWARE ENG, DOI DOI 10.1109/TSE.2014.2372785
   Baudry B, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2807593
   Dijkstra Edsger., 1988, CRUELTY REALLY TEACH
   Eggert PR, 2005, SOFTWARE PRACT EXPER, V35, P313, DOI 10.1002/spe.637
   Li XH, 2007, INT S HIGH PERF COMP, P181
   Mittal S, 2016, ACM COMPUT SURV, V48, DOI 10.1145/2893356
   Morell L, 1997, COMPASS '97 - ARE WE MAKING PROGRESS TOWARDS COMPUTER ASSURANCE?, P77, DOI 10.1109/CMPASS.1997.613242
   Pawlak R, 2016, SOFTWARE PRACT EXPER, V46, P1155, DOI 10.1002/spe.2346
   Roy P, 2014, ACM SIGPLAN NOTICES, V49, P95, DOI [10.1145/2597809.2597812, 10.1145/2666357.2597812]
   SEDGEWICK R, 1978, COMMUN ACM, V21, P847, DOI 10.1145/359619.359631
   Tallam Sriraman, 2008, 2008 IEEE 32nd International Computer Software and Applications Conference (COMPSAC), P152, DOI 10.1109/COMPSAC.2008.23
   TANG E., 2010, Proceedings of the 8th International Symposium on Software Testing and Analysis, P131, DOI DOI 10.1145/1831708.1831724
   Wang N, 2003, 12TH INTERNATIONAL CONFERENCE ON PARALLEL ARCHITECTURES AND COMPILATION TECHNIQUES, PROCEEDINGS, P56
NR 16
TC 12
Z9 12
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2018
VL 23
IS 4
BP 2086
EP 2119
DI 10.1007/s10664-017-9571-8
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GK0MK
UT WOS:000435804100008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Falessi, D
   Juristo, N
   Wohlin, C
   Turhan, B
   Münch, J
   Jedlitschka, A
   Oivo, M
AF Falessi, Davide
   Juristo, Natalia
   Wohlin, Claes
   Turhan, Burak
   Muench, Juergen
   Jedlitschka, Andreas
   Oivo, Markku
TI Empirical software engineering experts on the use of students and
   professionals in experiments
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Experimentation; Threats to validity; Generalization; Subjects of
   experiments; Participants in experiments
AB [Context] Controlled experiments are an important empirical method to generate and validate theories. Many software engineering experiments are conducted with students. It is often claimed that the use of students as participants in experiments comes at the cost of low external validity while using professionals does not. [Objective] We believe a deeper understanding is needed on the external validity of software engineering experiments conducted with students or with professionals. We aim to gain insight about the pros and cons of using students and professionals in experiments. [Method] We performed an unconventional, focus group approach and a follow-up survey. First, during a session at ISERN 2014, 65 empirical researchers, including the seven authors, argued and discussed the use of students in experiments with an open mind. Afterwards, we revisited the topic and elicited experts' opinions to foster discussions. Then we derived 14 statements and asked the ISERN attendees excluding the authors, to provide their level of agreement with the statements. Finally, we analyzed the researchers' opinions and used the findings to further discuss the statements. [Results] Our survey results showed that, in general, the respondents disagreed with us about the drawbacks of professionals. We, on the contrary, strongly believe that no population (students, professionals, or others) can be deemed better than another in absolute terms. [Conclusion] Using students as participants remains a valid simplification of reality needed in laboratory contexts. It is an effective way to advance software engineering theories and technologies but, like any other aspect of study settings, should be carefully considered during the design, execution, interpretation, and reporting of an experiment. The key is to understand which developer population portion is being represented by the participants in an experiment. Thus, a proposal for describing experimental participants is put forward.
C1 [Falessi, Davide] Calif Polytech State Univ San Luis Obispo, Comp Sci, San Luis Obispo, CA 93407 USA.
   [Juristo, Natalia] Univ Politecn Madrid, Madrid, Spain.
   [Wohlin, Claes] Blekinge Inst Technol, Software Engn, Karlskrona, Sweden.
   [Wohlin, Claes] Blekinge Inst Technol, Fac Comp, Karlskrona, Sweden.
   [Turhan, Burak] Brunel Univ London, Dept Comp Sci, London, England.
   [Muench, Juergen] Univ Helsinki, Helsinki, Finland.
   [Muench, Juergen] Reutlingen Univ, Software Engn & Innovat, Reutlingen, Germany.
   [Jedlitschka, Andreas] Fraunhofer Inst Expt Software Engn, Kaiserslautern, Germany.
   [Oivo, Markku] Univ Oulu, Software Engn, Oulu, Finland.
C3 California State University System; California Polytechnic State
   University San Luis Obispo; Universidad Politecnica de Madrid; Blekinge
   Institute Technology; Blekinge Institute Technology; Brunel University;
   University of Helsinki; Fraunhofer Gesellschaft; University of Oulu
RP Falessi, D (corresponding author), Calif Polytech State Univ San Luis Obispo, Comp Sci, San Luis Obispo, CA 93407 USA.
EM dfalessi@calpoly.edu; natalia@fi.upm.es; claes.wohlin@bth.se;
   Burak.Turhan@brunel.ac.uk; Juergen.Muench@reutlingen-university.de;
   Andreas.Jedlitschka@iese.fraunhofer.de; Markku.Oivo@oulu.fi
RI Turhan, Burak/G-7400-2011; Jedlitschka, Andreas/AAJ-5524-2020; Falessi,
   Davide/AAA-4587-2021; Münch, Jürgen/ABC-2316-2020
OI Turhan, Burak/0000-0003-1511-2163; Jedlitschka,
   Andreas/0000-0003-3590-6331; Münch, Jürgen/0000-0003-0327-8094; Falessi,
   Davide/0000-0002-6340-0058
FU Academy of Finland [278354]; Academy of Finland (AKA) [278354] Funding
   Source: Academy of Finland (AKA)
FX We would like to thank all the ISERN 2014 participants for the inspiring
   and energetic discussions. We would like to thank both the anonymous
   experts and the following non-anonymous experts for participating in the
   survey: Paris Avgeriou, Teresa Baldassarre, Victor Basili, Giovanni
   Cantone, Jeff Carver, Tore Dyba, Hakan Erdogmus, Vladimir Mandic, Manuel
   Mastrofini, Daniel Mendez, Oscar Pastor, Guilherme Horta Travassos,
   Stephan Wagner, Qing Wang, Roel Wieringa, and Dietmar Winkler. We thank
   Sonnhild Namingha for proof reading the manuscript. This research is
   supported in part by the Academy of Finland Project 278354.
CR [Anonymous], 2003, Proceedings of the 7th International Conference on Empirical Assessment in Software Engineering
   [Anonymous], P 18 INT C EV ASS SO
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Basili VR, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P69, DOI 10.1109/ICSE.2002.1007957
   BASILI VR, 1981, IEEE T SOFTWARE ENG, V7, P299, DOI 10.1109/TSE.1981.230841
   Beecham S, 2003, EMPIR SOFTW ENG, V8, P7, DOI 10.1023/A:1021764731148
   Berander P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P167
   Berg K., 2003, ESSENTIALS RES METHO, V2nd
   Bergersen GR, 2014, IEEE T SOFTWARE ENG, V40, P1163, DOI 10.1109/TSE.2014.2348997
   Bratthall L., 2000, 2 INT C PROD FOC SOF, P126
   Ciolkowski M, 2009, INT SYMP EMP SOFTWAR, P133, DOI 10.1109/ESEM.2009.5316026
   Easton G, 2003, INFORM MANAGE-AMSTER, V40, P717, DOI 10.1016/S0378-7206(02)00098-8
   Fagerholm F, 2013, 2013 3RD INTERNATIONAL WORKSHOP ON COLLABORATIVE TEACHING OF GLOBALLY DISTRIBUTED SOFTWARE DEVELOPMENT (CTGDSD), P1, DOI 10.1109/CTGDSD.2013.6635237
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Juristo N., 2001, Basics of Software Engineering Experimentation, V5/6
   Kontio J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P271
   Kontio J., 2008, Guide to Advanced Empirical Software Engineering, P93, DOI [DOI 10.1007/978-1-84800-044-5_4, 10.1007/978-1-84800-044-54, DOI 10.1007/978-1-84800-044-54]
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   lLindvall M., 2002, Extreme Programming and Agile Methods - XP/Agile Universe 2002 Second XP Universe and First Agile Universe Conference. Proceedings (Lecture Notes in Computer Science Vol.2418), P197
   McMeekin DA, 2009, IEEE AUS SOFT ENGR, P200, DOI 10.1109/ASWEC.2009.13
   Morgan DL, 1996, ANNU REV SOCIOL, V22, P129, DOI 10.1146/annurev.soc.22.1.129
   Morgan DL., 1993, Successful Focus Groups: Advancing the State of the Art, P3
   Porter A., 1998, Empirical Software Engineering, V3, P355, DOI 10.1023/A:1009776104355
   PORTER AA, 1995, IEEE T SOFTWARE ENG, V21, P563, DOI 10.1109/32.391380
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Salman I, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P666, DOI 10.1109/ICSE.2015.82
   Siegmund J, 2015, INT C SOFTW ENG ICSE
   Sjoberg D. I., 2002, P INT S EMP SOFTW EN
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Tremblay MC, 2010, COMMUN ASSOC INF SYS, V26, P599
   Turhan B, 2007, PROC INT CONF SOFTW, P748
   Vegas S, 2015, IEEE-ACM INT WKSP CO, P3, DOI 10.1109/CESI.2015.8
   Wesslen A., 2000, Empirical Software Engineering, V5, P93, DOI 10.1023/A:1009811222725
   Wohlin C., 2012, EXPT SOFTWARE ENG IN
   Wohlin C., 1996, C SOFTW PROC IMPR, P167
   [No title captured]
NR 38
TC 140
Z9 144
U1 1
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2018
VL 23
IS 1
BP 452
EP 489
DI 10.1007/s10664-017-9523-3
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FU9TG
UT WOS:000424199400012
DA 2024-07-18
ER

PT J
AU Lehtinen, TOA
   Itkonen, J
   Lassenius, C
AF Lehtinen, Timo O. A.
   Itkonen, Juha
   Lassenius, Casper
TI Recurring opinions or productive improvements-what agile teams actually
   discuss in retrospectives
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Retrospective; Software engineering; Scrum; Agile; Continuous
   improvement; Longitudinal case study
ID ROOT CAUSE ANALYSIS; PROJECT RETROSPECTIVES; SOFTWARE; REVIEWS
AB Team-level retrospectives are widely used in agile and lean software development, yet little is known about what is actually discussed during retrospectives or their outcomes. In this paper, we synthesise the outcomes of sprint retrospectives in a large, distributed, agile software development organisation. This longitudinal case study analyses data from 37 team-level retrospectives for almost 3 years. We report the outcomes of the retrospectives, their perceived importance for process improvement and relatVed action proposals. Most discussions were related to topics close to and controllable by the team. However, the discussions might suffer from participant bias, and in cases where they are not supported by hard evidence, they might not reflect reality, but rather the sometimes strong opinions of the participants. Some discussions were related to topics that could not be resolved at the team level due to their complexity. Certain topics recurred over a long period of time, either reflecting issues that can and have been solved previously, but that recur naturally as development proceeds, or reflecting waste since they cannot be resolved or improved on by the team due to a lack of controllability or their complexity. For example, the discussion on estimation accuracy did not reflect the true situation and improving the estimates was complicated. On the other hand, discussions on the high number of known bugs recurred despite effective improvements as development proceeded.
C1 [Lehtinen, Timo O. A.; Itkonen, Juha; Lassenius, Casper] Aalto Univ, Dept Comp Sci, Sch Sci, POB 15400, FI-00076 Aalto, Finland.
C3 Aalto University
RP Lehtinen, TOA (corresponding author), Aalto Univ, Dept Comp Sci, Sch Sci, POB 15400, FI-00076 Aalto, Finland.
EM timolehtinen@iki.fi; juha.itkonen@aalto.fi; casper.lassenius@aalto.fi
RI Itkonen, Juha P/E-8360-2012; Lassenius, Casper C/A-4339-2013
CR Anbari FT, 2008, TECHNOVATION, V28, P633, DOI 10.1016/j.technovation.2007.12.001
   [Anonymous], 2002, Agile software development
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   Bjarnason E, 2014, IEEE SOFTWARE, V31, P37, DOI 10.1109/MS.2014.26
   Bjornson FO, 2009, INFORM SOFTWARE TECH, V51, P150, DOI 10.1016/j.infsof.2008.02.003
   Card DN, 1998, IEEE SOFTWARE, V15, P56, DOI 10.1109/52.646883
   Cerpa N, 2010, INFORM SOFTWARE TECH, V52, P934, DOI 10.1016/j.infsof.2010.03.011
   Collier B, 1996, IEEE SOFTWARE, V13, P65, DOI 10.1109/52.526833
   Derby Esther., 2006, AGILE RETROSPECTIVES
   Dingsoyr T, 2005, INFORM SOFTWARE TECH, V47, P293, DOI 10.1016/j.infsof.2004.08.008
   Dingsoyr T., 2001, Product Focused Software Process Improvement. Third International Conference, PROFES 2001. Proceedings (Lecture Notes in Computer Science Vol.2188), P167
   Egorova E, 2010, J SYST SOFTWARE, V83, P1907, DOI 10.1016/j.jss.2010.05.077
   Glass RL, 2002, IEEE SOFTWARE, V19, P111
   Jalote P., 2005, Proceedings of the Information Science and Communications Technology (ICICT 2005), P701
   Jin ZX, 2007, LECT NOTES ARTIF INT, V4562, P79
   Jones C, 2008, CROSSTALK J DEF SOFT, V21
   Jorgensen M, 2000, AN P EUR SOFTW PROC
   Kaur R, 2011, INT J SCI ENG RES, V2, P2
   Keil M, 1998, COMMUN ACM, V41, P76, DOI 10.1145/287831.287843
   Lehtinen TOA, 2015, LECT NOTES BUS INF P, V212, P93, DOI 10.1007/978-3-319-18612-2_8
   Lehtinen TOA, 2015, J SYST SOFTWARE, V103, P17, DOI 10.1016/j.jss.2015.01.020
   Lehtinen TOA, 2014, INFORM SOFTWARE TECH, V56, P623, DOI 10.1016/j.infsof.2014.01.015
   Lehtinen TOA, 2014, INFORM SOFTWARE TECH, V56, P408, DOI 10.1016/j.infsof.2014.01.004
   Lehtinen TOA, 2011, INFORM SOFTWARE TECH, V53, P1045, DOI 10.1016/j.infsof.2011.05.005
   Lehtinen TOA, 2014, DEV EVALUATION LIGHT
   McLeod L, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1978802.1978803
   Molokken-Ostvold K, 2005, IEEE T SOFTWARE ENG, V31, P754, DOI 10.1109/TSE.2005.96
   Poppendieck M., 2007, IMPLEMENTING LEAN SO
   Procaccino JD, 2002, INFORM SOFTWARE TECH, V44, P53, DOI 10.1016/S0950-5849(01)00217-8
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schwaber K., 2011, SCRUM GUIDE
   Stålhane T, 2004, LECT NOTES COMPUT SC, V3281, P150
   Stålhane T, 2003, LECT NOTES COMPUT SC, V2765, P129
   TIEDEMAN MJ, 1990, IEEE J SEL AREA COMM, V8, P176, DOI 10.1109/49.46869
   Whiston S.C., 1993, J CAREER DEV, V19, P175
   Xiangnan Lu, 2010, 2010 2nd IEEE International Conference on Information Management and Engineering (ICIME 2010), P676, DOI 10.1109/ICIME.2010.5478254
NR 36
TC 12
Z9 12
U1 1
U2 49
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2017
VL 22
IS 5
BP 2409
EP 2452
DI 10.1007/s10664-016-9464-2
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FE0PC
UT WOS:000407921200005
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Stavropoulou, I
   Grigoriou, M
   Kontogiannis, K
AF Stavropoulou, Ioanna
   Grigoriou, Marios
   Kontogiannis, Kostas
TI Case study on which relations to use for clustering-based software
   architecture recovery
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Reverse engineering; Architecture recovery; Clustering; Source code
   relations; Case study
ID ALGORITHMS
AB Clustering-based software architecture recovery is an area that has received significant attention in the software engineering community over the years. Its key concept is the compilation and clustering of a system-wide graph that consists of source code entities as nodes, and source code relations as edges. However, the related research has mostly focused on investigating different clustering methods and techniques, and consequently there is limited work on addressing the question of what is a minimal set of relations that can be easily extracted from the system's source code, and yet can be accurately used for extracting its architecture. In this paper, we report on results obtained from an architecture recovery case study we have conducted, by considering all possible combinations which can be generated from thirteen commonly used source code relations. We have examined the similarity of the extracted architectures obtained by using each different relation combination for different systems, against the corresponding architecture which is obtained by applying all thirteen relations and whch we consider as the ground truth architecture. For this purpose, we have also examined whether the use of all these thirteen relations is indeed adequate to yield a ground truth architecture, by applying this architecture extraction process on five large sofware systems for which their ground truth architecture has been independently established. The overall results of our study indicate that there is small set of relations for procedural systems, and another similar set for object oriented systems, that can be easily extracted from the source code and yet used to yield an architecture that is close to the ground truth architecture.
C1 [Stavropoulou, Ioanna; Grigoriou, Marios] Natl Tech Univ Athens, Dept Elect & Comp Engn, Athens 15780, Greece.
   [Kontogiannis, Kostas] Western Univ, Dept Comp Sci, London, ON N6A 5B7, Canada.
C3 National Technical University of Athens; Western University (University
   of Western Ontario)
RP Kontogiannis, K (corresponding author), Western Univ, Dept Comp Sci, London, ON N6A 5B7, Canada.
EM ioanna@cs.toronto.edu; msgrig@softlab.ntua.gr; kostas@csd.uwo.ca
CR Adams B, 2009, AOSD'09: 8TH INTERNATIONAL CONFERENCE ON ASPECT-ORIENTED SOFTWARE DEVELOPMENT, P243
   Akers RL, 2005, J DEFENSE SOFTWARE E
   Allen R., 1997, THESIS
   Andritsos P, 2005, IEEE T SOFTWARE ENG, V31, P150, DOI 10.1109/TSE.2005.25
   Anquetil N, 1998, PROC INT CONF SOFTW, P84, DOI 10.1109/ICSE.1998.671105
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bass L., 1997, SOFTWARE ARCHITECTUR
   Bauer M, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P3, DOI 10.1109/CSMR.2004.1281401
   Bois BD, 2007, ECEASST 8
   Bojic D., 2000, Proceedings of the Fourth European Conference on Software Maintenance and Reengineering, P23, DOI 10.1109/CSMR.2000.827302
   Boughanmi Ferdaous, 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P293, DOI 10.1109/WCRE.2010.43
   Bowman I.T., 1998, P 1998 C CTR ADV STU
   Canfora G, 2000, P WORK C REV ENG
   Chiricota Y, 2003, PROG COMPREHEN, P217
   Corazza A, 2011, EUR CON SFTWR MTNCE, P35, DOI 10.1109/CSMR.2011.8
   DEBAUD JM, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P326, DOI 10.1109/ICSM.1994.336762
   Ducasse S, 2003, J SOFTW MAINT EVOL-R, V15, P345, DOI 10.1002/smr.279
   Ducasse S, 2009, IEEE T SOFTW ENG, V99
   Feiler P. H., 2014, ADA LETT ACM, P17
   Fischer M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P90, DOI 10.1109/WCRE.2003.1287240
   Fleck G, 2016, P 23 C SOFTW AN EV R, P283
   Garcia J., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P552, DOI 10.1109/ASE.2011.6100123
   Garcia J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P901, DOI 10.1109/ICSE.2013.6606639
   Garcia J, 2013, IEEE INT CONF AUTOM, P486, DOI 10.1109/ASE.2013.6693106
   Garlan D., 1997, P CASCON, V97, P169
   Imber M, 1991, SOFTWARE ENG ENV, P457
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jerding D, 2000, SCI COMPUT PROGRAM, V36, P267, DOI 10.1016/S0167-6423(99)00038-6
   Kobayashi K, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P462, DOI 10.1109/ICSM.2012.6405308
   Koschke R, 2006, SCI COMPUT PROGRAM, P171
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Kuhn Harold W, 1955, NAV RES LOG, V2, P83, DOI [10.1002/nav.20053, DOI 10.1002/NAV.20053, DOI 10.1002/NAV.3800020109]
   Lethbridge T.C., 2004, Electronic Notes in Theoretical Computer Science, V94, P7
   Lung C.H., 1998, PROC 3 INT SOFTWARE, P101, DOI DOI 10.1145/288408.288434
   Lungu M, 2014, SCI COMPUT PROGRAM, V79, P204, DOI 10.1016/j.scico.2012.04.007
   Lutellier T, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P69, DOI 10.1109/ICSE.2015.136
   Mahdavi K, 2003, PROC IEEE INT CONF S, P315, DOI 10.1109/ICSM.2003.1235437
   Mancoridis S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P50, DOI 10.1109/ICSM.1999.792498
   Mancoridis S, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P23, DOI 10.1109/ICSM.1996.564985
   Maqbool O, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P15, DOI 10.1109/CSMR.2004.1281402
   Maqbool O, 2007, IEEE T SOFTWARE ENG, V33, P759, DOI 10.1109/TSE.2007.70732
   MEDVIDOVIC N, 1995, FORMAL DEFINITION CH
   Mendonca N. C., 2001, Automated Software Engineering, V8, P311, DOI 10.1023/A:1011217720860
   Muller H. A., 1992, SIGSOFT Software Engineering Notes, V17, P88, DOI 10.1145/142882.143755
   Murphy G. C., 1995, SIGSOFT Software Engineering Notes, V20, P18, DOI 10.1145/222132.222136
   Overbey JL, 2009, LECT NOTES COMPUT SC, V5452, P114, DOI 10.1007/978-3-642-00434-6_8
   Patel C, 2009, EUR CON SFTWR MTNCE, P27, DOI 10.1109/CSMR.2009.62
   Pinzger M, 2004, LECT NOTES COMPUT SC, V3014, P332
   Rayside D, 2000, PROG COMPREHEN, P191, DOI 10.1109/WPC.2000.852493
   Sartipi K, 2003, J SOFTW MAINT EVOL-R, V15, P265, DOI 10.1002/smr.277
   Sartipi K, 2001, PROC IEEE INT CONF S, P408, DOI 10.1109/ICSM.2001.972754
   Tilley S, 1999, SEI99TR010 CMU
   Tzerpos V, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P258
   Tzerpos V, 2000, PROG COMPREHEN, P211, DOI 10.1109/WPC.2000.852495
   Tzerpos V, 1996, HYBRID PROCESS RECOV
   van Deursen A., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P246, DOI 10.1109/ICSE.1999.841014
   Van Rompaey B, 2009, EUR CON SFTWR MTNCE, P277, DOI 10.1109/CSMR.2009.30
   Van Rompaey B, 2009, EUR CON SFTWR MTNCE, P209, DOI 10.1109/CSMR.2009.39
   Vasconcelos A., 2004, 18 BRAZ S SOFTW ENG
   Wilson R. J., 1986, Introduction to graph theory
   Wu JW, 2005, PROC IEEE INT CONF S, P525
   Xing Z., 2005, 20 IEEEACM INT C AUT, P54, DOI DOI 10.1145/1101908.1101919
   Zou Y, 2001, P INT C SOFTW ENG IC
NR 63
TC 9
Z9 9
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2017
VL 22
IS 4
BP 1717
EP 1762
DI 10.1007/s10664-016-9459-z
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FB6ZI
UT WOS:000406290500004
DA 2024-07-18
ER

PT J
AU Tian, Y
   Ali, N
   Lo, D
   Hassan, AE
AF Tian, Yuan
   Ali, Nasir
   Lo, David
   Hassan, Ahmed E.
TI On the unreliability of bug severity data
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Data quality; Bug report management; Severity prediction; Performance
   evaluation; Noise prediction
AB Severity levels, e.g., critical and minor, of bugs are often used to prioritize development efforts. Prior research efforts have proposed approaches to automatically assign the severity label to a bug report. All prior efforts verify the accuracy of their approaches using human-assigned bug reports data that is stored in software repositories. However, all prior efforts assume that such human-assigned data is reliable. Hence a perfect automated approach should be able to assign the same severity label as in the repository - achieving a 100% accuracy. Looking at duplicate bug reports (i.e., reports referring to the same problem) from three open-source software systems (OpenOffice, Mozilla, and Eclipse), we find that around 51 % of the duplicate bug reports have inconsistent human-assigned severity labels even though they refer to the same software problem. While our results do indicate that duplicate bug reports have unreliable severity labels, we believe that they send warning signals about the reliability of the full bug severity data (i.e., including non-duplicate reports). Future research efforts should explore if our findings generalize to the full dataset. Moreover, they should factor in the unreliable nature of the bug severity data. Given the unreliable nature of the severity data, classical metrics to assess the accuracy of models/learners should not be used for assessing the accuracy of approaches for automated assigning severity label. Hence, we propose a new approach to assess the performance of such models. Our new assessment approach shows that current automated approaches perform well - 77-86 % agreement with human-assigned severity labels.
C1 [Tian, Yuan; Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
   [Ali, Nasir] Univ Waterloo, Elect & Comp Engn, Waterloo, ON, Canada.
   [Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON, Canada.
C3 Singapore Management University; University of Waterloo; Queens
   University - Canada
RP Tian, Y (corresponding author), Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
EM yuan.tian.2012@phdis.smu.edu.sg; nasir.ali@uwaterloo.ca;
   davidlo@smu.edu.sg; ahmed@cs.queensu.ca
RI Hassan, Ahmed/AAB-7241-2019; Ali, Ahmed/HOF-4672-2023; KHALIFA, AHMED
   khalifa/HKF-2246-2023; Lo, David/A-2493-2012
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Lo,
   David/0000-0002-4367-7201
CR [Anonymous], 2008, Guide to Advanced Empirical Software Engineering
   [Anonymous], EUSAR 2014 10 EUR C
   [Anonymous], 1998, EUR C MACH LEARN
   [Anonymous], 2003, CONTENT ANAL INTRO I
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Cohen W. W., 1995, Machine Learning. Proceedings of the Twelfth International Conference on Machine Learning, P115
   Espinha T, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P84, DOI 10.1109/CSMR-WCRE.2014.6747228
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P225, DOI 10.1109/WCRE.2012.32
   Hayes AF, 2007, COMMUN METHODS MEAS, V1, P77, DOI 10.1080/19312450709336664
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Huang SJ, 2006, J INF SCI ENG, V22, P297
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lamkanfi A, 2011, EUR CON SFTWR MTNCE, P249, DOI 10.1109/CSMR.2011.31
   Lim H, 2006, SPRINGER HDB ENG STA, P1023
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   NGUYEN AT, 2012, ASE, P70
   Nguyen HA, 2013, FILTERING NOISE MIXE
   Nuseibeh B, 2000, COMPUTER, V33, P24, DOI 10.1109/2.839317
   Ramler R, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P173, DOI 10.1109/IWSM-Mensura.2013.33
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Shihab E, 2013, EMPIR SOFTW ENG, V18, P1005, DOI 10.1007/s10664-012-9228-6
   Strike K, 2001, IEEE T SOFTWARE ENG, V27, P890, DOI 10.1109/32.962560
   Sun Chengnian, 2010, P 32 ACMIEEE INT C S, V1, P45, DOI [DOI 10.1145/1806799, 10.1145/1806799.1806811]
   Thung F, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P420, DOI 10.1109/ICSM.2012.6405302
   Tian Y, 2012, EUR CON SFTWR MTNCE, P385, DOI 10.1109/CSMR.2012.48
   Valdivia-Garcia Harold., 2014, P 11 WORKING C MININ, P72
   Vyas D., 2014, COOP, P189
   Xia X, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P174, DOI 10.1109/CSMR-WCRE.2014.6747167
   Yuan Tian, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P215, DOI 10.1109/WCRE.2012.31
   Zeller A., 2013, PERSPECTIVES FUTURE, P209, DOI DOI 10.1007/978-3-642-37395-4_14
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhu XQ, 2004, ARTIF INTELL REV, V22, P177, DOI 10.1007/s10462-004-0751-8
NR 34
TC 29
Z9 32
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2016
VL 21
IS 6
BP 2298
EP 2323
DI 10.1007/s10664-015-9409-1
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ED7XQ
UT WOS:000389085500003
OA Green Published
DA 2024-07-18
ER

PT J
AU Walkinshaw, N
   Taylor, R
   Derrick, J
AF Walkinshaw, Neil
   Taylor, Ramsay
   Derrick, John
TI Inferring extended finite state machine models from software executions
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Reverse engineering; EFSMs; Dynamic analysis
ID EMPIRICAL-ASSESSMENT; SPECIFICATION
AB The ability to reverse-engineer models of software behaviour is valuable for a wide range of software maintenance, validation and verification tasks. Current reverse-engineering techniques focus either on control-specific behaviour (e.g., in the form of Finite State Machines), or data-specific behaviour (e.g., as pre / post-conditions or invariants). However, typical software behaviour is usually a product of the two; models must combine both aspects to fully represent the software's operation. Extended Finite State Machines (EFSMs) provide such a model. Although attempts have been made to infer EFSMs, these have been problematic. The models inferred by these techniques can be non-deterministic, the inference algorithms can be inflexible, and only applicable to traces with specific characteristics. This paper presents a novel EFSM inference technique that addresses the problems of inflexibility and non-determinism. It also adapts an experimental technique from the field of Machine Learning to evaluate EFSM inference techniques, and applies it to three diverse software systems.
C1 [Walkinshaw, Neil] Univ Leicester, Dept Comp Sci, Univ Rd, Leicester LE1 7RH, Leics, England.
   [Taylor, Ramsay; Derrick, John] Univ Sheffield, Dept Comp Sci, 211 Portobello, Sheffield S1 4DP, S Yorkshire, England.
C3 University of Leicester; University of Sheffield
RP Walkinshaw, N (corresponding author), Univ Leicester, Dept Comp Sci, Univ Rd, Leicester LE1 7RH, Leics, England.
EM n.walkinshaw@mcs.le.ac.uk; ramsay@gmail.com; j.derrick@sheffield.ac.uk
RI Walkinshaw, Neil/AHA-2966-2022
OI Walkinshaw, Neil/0000-0003-2134-6548; Taylor,
   Ramsay/0000-0002-4036-7590; Derrick, John/0000-0002-6631-8914
FU EU FP7 PROWESS projects; UK Ministry of Defence (MOD); EPSRC
   [EP/M017044/1] Funding Source: UKRI
FX We thank Ivo Krka at the University of Southern California for providing
   us with some of the traces for the evaluation. Ramsay Taylor and John
   Derrick are supported by the EU FP7 PROWESS projects. Neil Walkinshaw is
   grateful for the support provided by the UK Ministry of Defence (MOD)
   through the BATS and HASTE projects. Information contained in this
   document should not be interpreted as representing the views of the MOD,
   nor should it be assumed that it reflects any current or future MOD
   policy. The information cannot supersede any statutory or contractual
   requirements or liabilities and is offered without prejudice or
   commitment.
CR Aarts F, 2012, P FM 2012 18 INT S F
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   Androutsopoulos K, 2009, PROC IEEE INT CONF S, P287, DOI 10.1109/ICSM.2009.5306309
   ANGLUIN D, 1987, INFORM COMPUT, V75, P87, DOI 10.1016/0890-5401(87)90052-6
   [Anonymous], COMPUTATIONAL LEARNI
   Arts T., 2004, International Journal on Software Tools for Technology Transfer, V5, P205, DOI 10.1007/s10009-003-0114-9
   BIERMANN AW, 1972, IEEE T COMPUT, VC 21, P592, DOI 10.1109/TC.1972.5009015
   Borger E., 2003, ABSTRACT STATE MACHI
   Cesarini F, 2011, ERLANG BY EXAMPLE
   CHENG KT, 1993, ACM IEEE D, P86
   Clarke EdmundM., 2000, Proceedings of the International Conference on Computer Aided Veri cation (CAV), P154, DOI 10.1007/1072216715
   Cook J. E., 1998, ACM Transactions on Software Engineering and Methodology, V7, P215, DOI 10.1145/287000.287001
   Dallmeier V., 2006, P 2006 INT WORKSH DY, P17, DOI DOI 10.1145/1138912.1138918
   Dallmeier V, 2012, IEEE T SOFTWARE ENG, V38, P243, DOI 10.1109/TSE.2011.105
   Damas C, 2005, IEEE T SOFTW ENG, V31
   Damm W, 2001, FORM METHOD SYST DES, V19, P45, DOI 10.1023/A:1011227529550
   de la Higuera C, 2005, PATTERN RECOGN, V38, P1332, DOI 10.1016/j.patcog.2005.01.003
   Ernst MD, 2001, IEEE T SOFTWARE ENG, V27, P99, DOI 10.1109/32.908957
   Fraser G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P300, DOI 10.1109/ICST.2012.110
   GOLD EM, 1967, INFORM CONTROL, V10, P447, DOI 10.1016/S0019-9958(67)91165-5
   Gransden T, 2014, P C INT MATH MATH KN, V8543
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hierons RM, 2009, ACM COMPUT SURV, V41, DOI 10.1145/1459352.1459354
   HOLCOMBE M, 1988, SOFTWARE ENG J, V3, P69, DOI 10.1049/sej.1988.0009
   Howar F, 2012, LECT NOTES COMPUT SC, V7148, P251, DOI 10.1007/978-3-642-27940-9_17
   HOWDEN WE, 1982, IEEE T SOFTWARE ENG, V8, P371, DOI 10.1109/TSE.1982.235571
   Just R., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P612, DOI 10.1109/ASE.2011.6100138
   Kohavi R., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1137
   KRAMER J, 1983, IEE PROC-E, V130, P1, DOI 10.1049/ip-e.1983.0001
   Krka I, 2014, ACM SIGSOFT INT S FD
   Lambeau B., 2012, EMPIRICAL SOFTWARE E, P1
   Lang K. J., 1998, Grammatical Inference. 4th International Colloquium, ICGI-98. Proceedings, P1, DOI 10.1007/BFb0054059
   Lee C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P591, DOI 10.1145/1985793.1985874
   Li H, 2011, USER EXTENSIBLE REFA
   Lo D, 2006, WORK CONF REVERSE EN, P51
   Lo D, 2012, AUTOMAT SOFTW ENG, V19, P423, DOI 10.1007/s10515-012-0103-x
   Lo D, 2012, J SYST SOFTWARE, V85, P2063, DOI 10.1016/j.jss.2012.04.001
   Lo D, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P557
   Lorenzoli D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P501, DOI 10.1145/1368088.1368157
   Mitchell T. M., 1997, MACHINE LEARNING
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   Sokolova M, 2009, INFORM PROCESS MANAG, V45, P427, DOI 10.1016/j.ipm.2009.03.002
   Taylor Ramsay, 2012, Testing Software and Systems. 24th IFIP WG 6.1 International Conference (ICTSS 2012). Proceedings, P184, DOI 10.1007/978-3-642-34691-0_14
   Valdes A, 2000, LECT NOTES COMPUT SC, V1907, P80
   VALIANT LG, 1984, COMMUN ACM, V27, P1134, DOI 10.1145/1968.1972
   Walkinshaw N, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P209, DOI 10.1109/WCRE.2007.45
   Walkinshaw N, 2008, SOFTW TEST VERIF REL, V18, P99, DOI 10.1002/stvr.380
   Walkinshaw N, 2013, WORK CONF REVERSE EN, P301, DOI 10.1109/WCRE.2013.6671305
   Walkinshaw N, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2430545.2430549
   Walkinshaw N, 2010, LECT NOTES COMPUT SC, V6435, P126, DOI 10.1007/978-3-642-16573-3_10
   Walkinshaw N, 2009, LECT NOTES COMPUT SC, V5850, P305, DOI 10.1007/978-3-642-05089-3_20
   Weiss S. M., 1989, IJCAI-89 Proceedings of the Eleventh International Joint Conference on Artificial Intelligence, P781
   Wolpert DH, 1996, NEURAL COMPUT, V8, P1341, DOI 10.1162/neco.1996.8.7.1341
NR 53
TC 78
Z9 85
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2016
VL 21
IS 3
BP 811
EP 853
DI 10.1007/s10664-015-9367-7
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VO
UT WOS:000379061700004
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Koziolek, H
   Goldschmidt, T
   de Gooijer, T
   Domis, D
   Sehestedt, S
   Gamer, T
   Aleksy, M
AF Koziolek, Heiko
   Goldschmidt, Thomas
   de Gooijer, Thijmen
   Domis, Dominik
   Sehestedt, Stephan
   Gamer, Thomas
   Aleksy, Markus
TI Assessing software product line potential: an exploratory industrial
   case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software product lines; Domain analysis; Business case
AB Corporate organizations sometimes offer similar software products in certain domains due to former company mergers or due to the complexity of the organization. The functional overlap of such products is an opportunity for future systematic reuse to reduce software development and maintenance costs. Therefore, we have tailored existing domain analysis methods to our organization to identify commonalities and variabilities among such products and to assess the potential for software product line (SPL) approaches. As an exploratory case study, we report on our experiences and lessons learned from conducting the domain analysis in four application cases with large-scale software products. We learned that the outcome of a domain analysis was often a smaller integration scenario instead of an SPL and that business case calculations were less relevant for the stakeholders and managers from the business units during this phase. We also learned that architecture reconstruction using a simple block diagram notation aids domain analysis and that large parts of our approach were reusable across application cases.
C1 [Koziolek, Heiko; Goldschmidt, Thomas; de Gooijer, Thijmen; Domis, Dominik; Sehestedt, Stephan; Gamer, Thomas; Aleksy, Markus] ABB Corp Res, D-68526 Ladenburg, Germany.
C3 ABB
RP Koziolek, H (corresponding author), ABB Corp Res, D-68526 Ladenburg, Germany.
EM heiko.koziolek@de.abb.com
RI Koziolek, Heiko/AAF-5917-2020
OI Gamer, Thomas/0000-0002-1874-1988; Aleksy, Markus/0000-0001-8457-5642
CR Ahnassay A, 2013, EMPIRICAL EVALUATION
   AMERICA P, 2001, INTRO DOMAIN ANAL
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2010, Just Enough Software Architecture: a Risk-Driven Approach
   [Anonymous], 2003, CMMI guidlines for process integration and product improvement
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   Bayer J., 1999, SSR'99. Proceedings of the Fifth Symposium on Software Reusability. Bridging the Gap Between Research and Practice, P122, DOI 10.1145/303008.303063
   Birk A, 2003, IEEE SOFTWARE, V20, P52, DOI 10.1109/MS.2003.1241367
   Boeckle G, 2004, CALCULATING ROI SOFT, p[21, 23], DOI [10.1109/MS.2004.1293069, DOI 10.1109/MS.2004.1293069]
   Bosch J, 2001, PROC INT CONF SOFTW, P91, DOI 10.1109/ICSE.2001.919084
   Breivold HP, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P232, DOI 10.1109/SEAA.2008.13
   Buhr RJA, 1998, IEEE T SOFTWARE ENG, V24, P1131, DOI 10.1109/32.738343
   Capilla Rafael, 2005, INT WORKSH SOFTW TEC, P92, DOI DOI 10.1109/STEP.2005.33
   Carnegie Mellon University - Software Engineering Institute, 2013, SOFTWARE PRODUCT LIN
   Carnegie Mellon University - Software Engineering Institute, 2013, PROD LIN HALL FAM
   Davis T., 1993, Proceedings Advances in Software Reuse. Selected Papers from the Second International Workshop on Software Reusability (Cat. No.93TH0495-2), P126, DOI 10.1109/ASR.1993.291710
   Domis D, 2014, P 18 INT SOFTW PROD
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Eisenbarth T, 2001, P INT WORKSH PROD LI, P1
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Frenzel P, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P160, DOI 10.1109/WCRE.2007.28
   Ganesan D, 2005, P 1 INT WORKSH REENG, P16
   Groene B, 2012, P PRAX MOD 2012
   Guo GYB, 1999, INT FED INFO PROC, V12, P15
   Harhurin A, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P255, DOI 10.1109/SPLC.2008.19
   Hariri N, 2013, IEEE T SOFTWARE ENG, V39, P1736, DOI 10.1109/TSE.2013.39
   Holmes R, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377657
   John I, 2006, SPLC 2006: 10TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P3, DOI 10.1109/SPLINE.2006.1691572
   Jones LG, 2010, IEEE SOFTWARE, V27, P22, DOI 10.1109/MS.2010.71
   Kazman R., 1999, Automated Software Engineering, V6, P107, DOI 10.1023/A:1008781513258
   Khurum M, 2009, J SYST SOFTWARE, V82, P1982, DOI 10.1016/j.jss.2009.06.048
   Knauber P, 2000, IEEE SOFTWARE, V17, P88, DOI 10.1109/52.877873
   KNOEPFEL A, 2006, FUNDAMENTAL MODELING
   Koziolek H, 2013, P 17 INT SOFTW PROD
   Koziolek H, 2009, LECT NOTES COMPUT SC, V5581, P177, DOI 10.1007/978-3-642-02351-4_12
   Krueger CW, 2002, LECT NOTES COMPUT SC, V2290, P282
   NEIGHBORS JM, 1984, IEEE T SOFTWARE ENG, V10, P564, DOI 10.1109/TSE.1984.5010280
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Northrop L., 2005, EXAMINING PRODUCT LI
   Pinzger M, 2004, LECT NOTES COMPUT SC, V3014, P332
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Poulin J. S., 1996, Measuring Software Reuse-Principles, Practices and Economic Models
   Prieto-Diaz R., 1991, DOMAIN ANAL SOFTWARE
   Rubin J., 2013, Domain Engineering, P29, DOI DOI 10.1007/978-3-642-36654-3
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schmid K, 2005, PROC INT CONF SOFTW, P544
   Schmid K, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P593, DOI 10.1109/ICSE.2002.1008004
   Simos M., 1996, STARSVCA02500100
   Stoermer C, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P35, DOI 10.1109/WICSA.2001.948405
   van Deursen A, 2000, ACM SIGPLAN NOTICES, V35, P26, DOI 10.1145/352029.352035
   Yin D.R. K., 2017, Case Study Research and Applications: Design and Methods
NR 51
TC 9
Z9 9
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2016
VL 21
IS 2
BP 411
EP 448
DI 10.1007/s10664-014-9358-0
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI2ST
UT WOS:000373349700005
DA 2024-07-18
ER

PT J
AU Robillard, MP
   Chhetri, YB
AF Robillard, Martin P.
   Chhetri, Yam B.
TI Recommending reference API documentation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Application programming interfaces; API documentation; Text
   classification; Natural language processing; Recommendation systems
ID AGREEMENT; KNOWLEDGE
AB Reference documentation is an important source of information on API usage. However, information useful to programmers can be buried in irrelevant text, or attached to a non-intuitive API element, making it difficult to discover. We propose to detect and recommend fragments of API documentation potentially important to a programmer who has already decided to use a certain API element. We categorize text fragments in API documentation based on whether they contain information that is indispensable, valuable, or neither. From the fragments that contain knowledge worthy of recommendation, we extract word patterns, and use these patterns to automatically find new fragments that contain similar knowledge in unseen documentation. We implemented our technique in a tool, Krec, that supports both information filtering and discovery. In an evaluation study with randomly-sampled method definitions from ten open source systems, we found that with a training set derived from about 1000 documentation units, we could issue recommendations with 90 % precision and 69 % recall. In a study involving ten independent assessors, indispensable knowledge items recommended for API types were judged useful 57 % of the time and potentially useful an additional 30 % of the time.
C1 [Robillard, Martin P.; Chhetri, Yam B.] McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
C3 McGill University
RP Robillard, MP (corresponding author), McGill Univ, Sch Comp Sci, Montreal, PQ, Canada.
EM martin@cs.mcgill.ca; yam.chhetri@mail.mcgill.ca
FU NSERC
FX We thank Peter Rigby for participating in the coding and Walid Maalej,
   Christoph Treude, and Annie Ying for comments on the paper. This work
   was supported by NSERC.
CR Arnout K, 2003, COMPUTER, V36, P48, DOI 10.1109/MC.2003.1244535
   Austin C, 2004, J2SE 5 0 NUTSHELL SU
   Bloch J., 2016, Effective Java
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cwalina K., 2008, FRAMEWORK DESIGN GUI
   Dekel U, 2009, PROC INT CONF SOFTW, P320, DOI 10.1109/ICSE.2009.5070532
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Duala-Ekoko E, 2011, LECT NOTES COMPUT SC, V6813, P79, DOI 10.1007/978-3-642-22655-7_5
   Duala-Ekoko E, 2012, PROC INT CONF SOFTW, P266, DOI 10.1109/ICSE.2012.6227187
   Fantechi A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P157, DOI 10.1109/ICRE.2002.1048518
   Hariri N, 2014, RECOMMENDATION SYSTE
   Henss S, 2012, PROC INT CONF SOFTW, P793, DOI 10.1109/ICSE.2012.6227139
   Jeong SY, 2009, LECT NOTES COMPUT SC, V5435, P86
   Jurafsky D., 2021, SPEECH LANGUAGE PROC
   Kawrykow D, 2009, IEEE INT CONF AUTOM, P111, DOI 10.1109/ASE.2009.62
   Kim J, 2009, IEEE INT CONF AUTOM, P540, DOI 10.1109/ASE.2009.39
   Kof L, 2007, INT REQUIR ENG CONF, P121, DOI 10.1109/RE.2007.38
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Lin Tan, 2007, Operating Systems Review, V41, P145, DOI 10.1145/1323293.1294276
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   Monperrus M, 2012, EMPIR SOFTW ENG, V17, P703, DOI 10.1007/s10664-011-9186-4
   Neuendorf K., 2002, The content analysis guidebook
   Norman C.L., 2002, P 20 ANN INT C DOC S, P133
   Pagano D, 2011, P 8 WORK C MIN SOFTW, P10
   Pandita R, 2012, PROC INT CONF SOFTW, P815, DOI 10.1109/ICSE.2012.6227137
   Panichella Sebastiano, 2012, 2012 IEEE 20th International Conference on Program Comprehension, P63
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Shepherd D., 2007, P 6 INT C ASP OR SOF, P212, DOI 10.1145/1218563.1218587
   Stylos J, 2009, S VIS LANG HUM CEN C, P119, DOI 10.1109/VLHCC.2009.5295283
   Stylos Jeffrey., 2008, Proc. of the 16th International Symposium on Foundations of Software Eng, P105
   Xiao X, 2012, P 20 ACM SIGSOFT INT
   Ye YW, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P513, DOI 10.1109/ICSE.2002.1007995
   Ying AT, 2014, DEV PROFILES RECOMME
   Zhong H, 2009, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2009.94
NR 36
TC 40
Z9 45
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2015
VL 20
IS 6
BP 1558
EP 1586
DI 10.1007/s10664-014-9323-y
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT7YX
UT WOS:000363032900005
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Lotufo, R
   Malik, Z
   Czarnecki, K
AF Lotufo, Rafael
   Malik, Zeeshan
   Czarnecki, Krzysztof
TI Modelling the 'hurried' bug report reading process to summarize bug
   reports
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug reports; Summarization; Natural language processing; Empirical
   study; Productivity
AB Although bug reports are frequently consulted project assets, they are communication logs, by-products of bug resolution, and not artifacts created with the intent of being easy to follow. To facilitate bug report digestion, we propose a new, unsupervised, bug report summarization approach that estimates the attention a user would hypothetically give to different sentences in a bug report, when pressed with time. We pose three hypotheses on what makes a sentence relevant: discussing frequently discussed topics, being evaluated or assessed by other sentences, and keeping focused on the bug report's title and description. Our results suggest that our hypotheses are valid, since the summaries have as much as 12 % improvement in standard summarization evaluation metrics compared to the previous approach. Our evaluation also asks developers to assess the quality and usefulness of the summaries created for bug reports they have worked on. Feedback from developers not only shows the summaries are useful, but also points out important requirements for this, and any bug summarization approach, and indicates directions for future work.
C1 [Lotufo, Rafael; Malik, Zeeshan; Czarnecki, Krzysztof] Univ Waterloo, ECE, Waterloo, ON N2L 3G1, Canada.
C3 University of Waterloo
RP Lotufo, R (corresponding author), Univ Waterloo, ECE, Waterloo, ON N2L 3G1, Canada.
EM rlotufo@gsd.uwaterloo.ca; zmalik@gsd.uwaterloo.ca;
   kczarnec@gsd.uwaterloo.ca
CR ANKOLEKAR A, 2006, SUPPORTING ONLINE PR
   [Anonymous], 2006, THESIS U BRIT COLUMB
   [Anonymous], 1998, 7 INT WORLD WIDE WEB
   [Anonymous], 2010, ICSE
   [Anonymous], 1999, SIGIR
   Anvik J., P 28 INT C SOFTWARE
   Beineke P., 2004, Exploring sentiment summarization
   Bettenburg N, 2008, SIGSOFT
   Bettenburg N, 2008, EXTRACTING STRUCTURA
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Boehm B, 2001, IEEE COMPUT, V34
   Breu S., 2010, INFORM NEEDS BUG REP
   Buttcher S., 2010, Information Retrieval-Implementing and Evaluating Search Engines
   Corbin J, 2008, Techniques and procedures for developing grounded theory, V3rd
   Dit B, 2008, IMPROVING READABILIT
   Edmundson HP, 1969, J ACM JACM, V16
   Gasser L, 2003, DISTRIBUTED COLLECTI
   Go A., 2009, Twitter sentiment classification using distant supervision, V150, DOI DOI 10.1016/J.SEDGEO.2006.07.004
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Hamou-Lhadj A, 2006, INT C PROGRAM COMPRE, P181, DOI 10.1109/ICPC.2006.45
   Lloret E, 2012, ARTIF INTELL REV, V37, P1, DOI 10.1007/s10462-011-9216-z
   Lotufo R, 2012, IMPROVING BUG TRACKI
   Lotufo R, 2012, ICSM
   Mani S., 2012, P ACM SIGSOFT 20 INT, p11:1
   Mann W., 1988, Text, V8, P243, DOI [10.1515/text.1.1988.8.3.243, DOI 10.1515/TEXT.1.1988.8.3.243]
   Menzies T., 2008, IEEE INT C SOFTW MAI
   Mihalcea R, 2004, BRINGING ORDER TEXTS
   Murray G, 2008, SUMMARIZING SPOKEN W
   Nenkova A, 2007, ACM T COMPUT LOGIC
   Nenkova A., 2008, CAN YOU SUMMARIZE TH
   Porter M. F., 1980, An algorithm for suffix stripping
   Quan X, 2009, KNOWL INF SYST
   Radev DR, 2004, ARTIF INT
   Runeson P, 2007, P 29 INT C SOFTW ENG
   Sridhara G, 2010, P IEEE ACM INT C AUT
   Sun B, 2007, SIGIR
   Tang H, 2009, EXP SYST APPL
   Thung F., 2012, 2012 19 WORK C REV E
   Tian Y, 2012, 2012 19 WORK C REV E
   Wang XY, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P461, DOI 10.1145/1368088.1368151
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
NR 41
TC 40
Z9 43
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2015
VL 20
IS 2
BP 516
EP 548
DI 10.1007/s10664-014-9311-2
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH2AB
UT WOS:000353824000009
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Yamashita, A
AF Yamashita, Aiko
TI Assessing the capability of code smells to explain maintenance problems:
   an empirical study combining quantitative and qualitative data
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software maintenance; Code smells; Refactoring; Maintenance problems
ID BAD SMELLS; PROBABILITY; CLONES; IMPACT
AB Code smells are indicators of deeper design problems that may cause difficulties in the evolution of a software system. This paper investigates the capability of twelve code smells to reflect actual maintenance problems. Four medium-sized systems with equivalent functionality but dissimilar design were examined for code smells. Three change requests were implemented on the systems by six software developers, each of them working for up to four weeks. During that period, we recorded problems faced by developers and the associated Java files on a daily basis. We developed a binary logistic regression model, with "problematic file" as the dependent variable. Twelve code smells, file size, and churn constituted the independent variables. We found that violation of the Interface Segregation Principle (a.k.a. ISP violation) displayed the strongest connection with maintenance problems. Analysis of the nature of the problems, as reported by the developers in daily interviews and think-aloud sessions, strengthened our view about the relevance of this code smell. We observed, for example, that severe instances of problems relating to change propagation were associated with ISP violation. Based on our results, we recommend that code with ISP violation should be considered potentially problematic and be prioritized for refactoring.
C1 [Yamashita, Aiko] Simula Res Lab, Lysaker, Norway.
   [Yamashita, Aiko] Univ Oslo, Dept Informat, N-0316 Oslo, Norway.
C3 University of Oslo
RP Yamashita, A (corresponding author), Simula Res Lab, POB 134, Lysaker, Norway.
EM aiko@simula.no
FU Simula Research Laboratory; Research Council of Norway [179851/I40,
   193236/I40]
FX The author thanks Gunnar Bergersen for his support in selecting the
   developers of this study and Hans Christian Benestad for providing
   technical support in the planning stage of the study. Also, thanks to
   Bente Anda and Dag Sjoberg for finding the resources needed to conduct
   this study and for insightful discussions. Thanks to Erik Arisholm for
   sharing his expertise during the analysis of the data. Finally, special
   thanks to Magne Jorgensen for his guidance and discussions that led to
   the paper. This work was partly funded by Simula Research Laboratory and
   the Research Council of Norway through the projects AGILE, grant no.
   179851/I40, and TeamIT, grant no. 193236/I40.
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Alikacem E, 2009, IEEE INT WORK C SO, P159, DOI 10.1109/SCAM.2009.27
   Anda BCD, 2009, IEEE T SOFTWARE ENG, V35, P407, DOI 10.1109/TSE.2008.89
   [Anonymous], 2012, Apache Tomcat
   [Anonymous], 2010, 2010 IEEE International Conference on Software Maintenance, DOI [10.1109/ICSM.2010.5609564, DOI 10.1109/ICSM.2010.5609564]
   [Anonymous], 2004, Applying UML and Patterns: An Introduction to Object-Oriented Analysis and Design and Iterative Development
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bergersen GR, 2011, J INDIVID DIFFER, V32, P201, DOI 10.1027/1614-0001/a000052
   Borland, 2012, BORL TOG
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Clarke KA, 2005, CONFLICT MANAG PEACE, V22, P341, DOI 10.1080/07388940500339183
   Coad P., 1991, OBJECT ORIENTED DESI
   D'Ambros Marco, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P23, DOI 10.1109/QSIC.2010.58
   Deligiannis I, 2004, J SYST SOFTWARE, V72, P129, DOI 10.1016/S0164-1212(03)00240-1
   Deligiannis I, 2003, J SYST SOFTWARE, V65, P127, DOI 10.1016/S0164-1212(02)00054-7
   Dunteman G.H., 1989, SAGE U PAPER SERIES
   Edberg D, 2001, INT C SYST SCI, P1
   Edgewall-Software, 2012, TRAC
   Field A., 2013, DISCOVERING STAT USI
   Fischer G., 2007, P INT C SOFTW ENG AD, P38, DOI [DOI 10.1109/ICSEA.2007.12, 10.1109/ICSEA.2007.12]
   Fokaefs M, 2007, PROC IEEE INT CONF S, P467
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Intooitus, 2012, INCODE
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   KAISER HF, 1974, PSYCHOMETRIKA, V39, P31, DOI 10.1007/BF02291575
   Khomh F, 2009, WORK CONF REVERSE EN, P75, DOI 10.1109/WCRE.2009.28
   Kiefer C, 2007, INT WORKSH MIN SOFTW, P1
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Landauer TK, 1998, DISCOURSE PROCESS, V25, P259, DOI 10.1080/01638539809545028
   Lanza Michele., 2005, Object-Oriented Metrics in Practice
   Layman L.M., 2008, P INT WORKSHOP COOPE, P73, DOI DOI 10.1145/1370114.1370133
   Li W, 2007, J SYST SOFTWARE, V80, P1120, DOI 10.1016/j.jss.2006.10.018
   Lozano A, 2008, PROC IEEE INT CONF S, P227, DOI 10.1109/ICSM.2008.4658071
   Mamas E, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P172, DOI 10.1109/WCRE.2000.891464
   Mäntylä MV, 2006, EMPIR SOFTW ENG, V11, P395, DOI 10.1007/s10664-006-9002-8
   Mäntylä MV, 2004, PROC IEEE INT CONF S, P399, DOI 10.1109/ICSM.2004.1357825
   Mäntylá MV, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P277, DOI 10.1109/ISESE.2005.1541837
   Marinescu R, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P192, DOI 10.1109/WCRE.2004.31
   Marinescu R, 2005, PROC IEEE INT CONF S, P701
   Marinescu R., 2002, Ph. D. Dissertation
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Menard S., 1995, APPL LOGISTIC REGRES
   Moha N., 2007, ACM SIGPLAN C OBJ OR, P949
   Moha N, 2006, IEEE INT CONF AUTOM, P297
   Moha N, 2008, LECT NOTES COMPUT SC, V4961, P276, DOI 10.1007/978-3-540-78743-3_20
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Monden A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P87, DOI 10.1109/METRIC.2002.1011328
   Myers R. H., 1990, CLASSICAL MODERN REG
   Plone Foundation, 2012, PLON CMS OP SOURC CO
   Rahman Foyzur, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P72, DOI 10.1109/MSR.2010.5463343
   Rajlich V, 2004, IEEE SOFTWARE, V21, P62, DOI 10.1109/MS.2004.17
   Rao AA, 2008, LECT NOTES ENG COMP, P1001
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Schumacher Jan., 2010, Proc. ACMIEEE Int. Symp. on Empirical Software Eng. and Measurement. ESEM '10, V8, P1, DOI [10.1145/1852786.1852797, DOI 10.1145/1852786.1852797]
   Soft ZD, 2012, ZD SOFT SCREEN REC
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   The Apache Software Foundation, 2012, AP SUBV
   TMate-Sofware, 2010, TMATE SOFTW
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   Van Emden E., 2001, WORK C REV ENG, P97
   Vetro Antonio, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P144, DOI 10.1049/ic.2011.0018
   Walter B, 2005, LECT NOTES COMPUT SC, V3556, P154
   Yamashita A, 2012, 201211 SIM RES LAB
   Yamashita A, 2012, THESIS U OSLO
   Yin R. K., 2017, CASE STUDY RES DESIG
   Zhang M, 2011, J SOFTW MAINT EVOL-R, V23, P179, DOI 10.1002/smr.521
NR 67
TC 40
Z9 42
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2014
VL 19
IS 4
BP 1111
EP 1143
DI 10.1007/s10664-013-9250-3
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH8LE
UT WOS:000336388500010
DA 2024-07-18
ER

PT J
AU Yoo, S
   Harman, M
   Ur, S
AF Yoo, Shin
   Harman, Mark
   Ur, Shmuel
TI GPGPU test suite minimisation: search based software engineering
   performance improvement using graphics cards
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Search based software engineering; GPGPU; Test suite minimisation;
   Regression testing
ID ADOPTION
AB It has often been claimed that SBSE uses so-called 'embarrassingly parallel' algorithms that will imbue SBSE applications with easy routes to dramatic performance improvements. However, despite recent advances in multicore computation, this claim remains largely theoretical; there are few reports of performance improvements using multicore SBSE. This paper shows how inexpensive General Purpose computing on Graphical Processing Units (GPGPU) can be used to massively parallelise suitably adapted SBSE algorithms, thereby making progress towards cheap, easy and useful SBSE parallelism. The paper presents results for three different algorithms: NSGA2, SPEA2, and the Two Archive Evolutionary Algorithm, all three of which are adapted for multi-objective regression test selection and minimization. The results show that all three algorithms achieved performance improvements up to 25 times, using widely available standard GPUs. We also found that the speed-up was observed to be statistically strongly correlated to the size of the problem instance; as the problem gets harder the performance improvements also get better.
C1 [Yoo, Shin; Harman, Mark] UCL, London WC1E 6BT, England.
   [Ur, Shmuel] Univ Bristol, Bristol BS8 1TH, Avon, England.
C3 University of London; University College London; University of Bristol
RP Yoo, S (corresponding author), UCL, Gower St, London WC1E 6BT, England.
EM shin.yoo@ucl.ac.uk; mark.harman@ucl.ac.uk; shmuel.ur@gmail.com
RI Yoo, Shin/E-3247-2015
OI Yoo, Shin/0000-0002-0836-6993; Harman, Mark/0000-0002-5864-4488
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   [Anonymous], 2011, P INT S FDN SOFTW EN
   [Anonymous], 1995, P 12 INT C TEST COMP
   [Anonymous], 2006, ITI200610 U MAL ETSI
   ASADI F., 2010, Proceedings of the In- ternational Symposium on Search Based Software Engineering SSBSE, P153
   ATI Stream Computing, 2010, OPENCL PROGR GUID RE
   Black J, 2004, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2004.1317433
   Boyer M., 2009, P 23 IEEE INT PAR DI
   Chafik O, 2009, JAVACL OPENSOURCE JA
   Chau PYK, 1997, MIS QUART, V21, P1, DOI 10.2307/249740
   Chen T. Y., 1995, Software Quality Management III, P415
   Chen TY, 1996, INFORM PROCESS LETT, V60, P135, DOI 10.1016/S0020-0190(96)00135-4
   Clarke J., 2003, IEE Proceedings-Software, V150, P161, DOI 10.1049/ip-sen:20030559
   Cordy JR, 2003, PROG COMPREHEN, P196
   de Souza J. T., 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P143, DOI 10.1109/SSBSE.2010.25
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Durillo J.J., 2010, Proc of 2010 Conference on Evolutionary Computation, P4138, DOI [DOI 10.1109/CEC.2010.5586354, 10.1109/CEC.2010.5586354]
   Ekman M., 2005, Computer Architecture News, V33, P144, DOI 10.1145/1055626.1055646
   Engstrom Emelie, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P75, DOI 10.1109/ICST.2010.40
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Garey M.R., 1979, COMPUTERS INTRACTABI
   Govindaraju Naga K., 2006, ACM SIGMOD
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M., 2011, 1 INT WORKSH REGR TE
   Harman M., 2009, Proceedings of Genetic and Evolutionary Computation Conference, P1681
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Harrold MJ, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P99, DOI 10.1109/FOSM.2008.4659253
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   Kim JM, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P119, DOI 10.1109/ICSE.2002.1007961
   Kirsopp Colin., 2002, GECCO 02, P1367
   Langdon WB, 2008, LECT NOTES COMPUT SC, V4971, P73, DOI 10.1007/978-3-540-78671-9_7
   Li Z, 2007, IEEE T SOFTWARE ENG, V33, P225, DOI 10.1109/TSE.2007.38
   Mahdavi K, 2003, PROC IEEE INT CONF S, P315, DOI 10.1109/ICSM.2003.1235437
   Maia C. L. B., 2009, P AN 41 S BRAS PESQ, P1824
   Mitchell B, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P181, DOI 10.1109/WICSA.2001.948427
   Nethercote N, 2007, PLDI'07: PROCEEDINGS OF THE 2007 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P89, DOI 10.1145/1250734.1250746
   Obdrzalek J., 2000, P 2 EUR WORKSH OPENM, P98
   Owens JD, 2007, COMPUT GRAPH FORUM, V26, P80, DOI 10.1111/j.1467-8659.2007.01012.x
   Praditwong Kata, 2006, LECT NOTES COMPUTER, P95
   PREMKUMAR G, 1995, DATA BASE ADV INF SY, V26, P105
   Rothermel G, 1998, PROC IEEE INT CONF S, P34, DOI 10.1109/ICSM.1998.738487
   Rothermel G, 2002, SOFTW TEST VERIF REL, V12, P219, DOI 10.1002/stvr.256
   Rothermel G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P130, DOI 10.1109/ICSE.2002.1007962
   Saliu M.O., 2007, P 6 JOINT M EUROPEAN, P105, DOI DOI 10.1145/1287624.1287641
   Tsutsui S., 2009, P 11 ANN C COMPANION, P2523
   Walcott K.R., 2006, P INT S SOFTW TEST A, P1, DOI DOI 10.1145/1146238.1146240
   Wong M.L., 2009, Proceedings of the 11th Annual Conference Companion on Genetic and Evolutionary Computation Conference: Late Breaking Papers, P2515
   Wong WE, 1998, SOFTWARE PRACT EXPER, V28, P347, DOI 10.1002/(SICI)1097-024X(19980410)28:4<347::AID-SPE145>3.0.CO;2-L
   Wong WE, 1999, J SYST SOFTWARE, V48, P79, DOI 10.1016/S0164-1212(99)00048-5
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P171, DOI 10.1002/stvr.435
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Yoo S., 2007, Proceedings of the 2007 international symposium on Software testing and analysis, P140, DOI 10.1145/1273463.1273483
   Yoo S, 2011, LECT NOTES COMPUT SC, V6956, P219, DOI 10.1007/978-3-642-23716-4_20
   Yoo S, 2009, IEEE ICST WORKSHOP, P101, DOI 10.1109/ICSTW.2009.10
   Zhang Y, 2011, SBSE REPOSITORY 2011
   Zhang YY, 2011, INFORM SOFTWARE TECH, V53, P761, DOI 10.1016/j.infsof.2011.02.001
   [No title captured]
   [No title captured]
NR 61
TC 20
Z9 21
U1 0
U2 20
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2013
VL 18
IS 3
BP 550
EP 593
DI 10.1007/s10664-013-9247-y
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 155US
UT WOS:000319774300006
DA 2024-07-18
ER

PT J
AU González-Barahona, JM
   Robles, G
AF Gonzalez-Barahona, Jesus M.
   Robles, Gregorio
TI On the reproducibility of empirical software engineering studies based
   on data retrieved from development repositories
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Repeatable results; Mining software repositories; Reproducibility
ID KNOWLEDGE
AB Among empirical software engineering studies, those based on data retrieved from development repositories (such as those of source code management, issue tracking or communication systems) are specially suitable for reproduction. However their reproducibility status can vary a lot, from easy to almost impossible to reproduce. This paper explores which elements can be considered to characterize the reproducibility of a study in this area, and how they can be analyzed to better understand the type of reproduction studies they enable or obstruct. One of the main results of this exploration is the need of a systematic approach to asses the reproducibility of a study, due to the complexity of the processes usually involved, and the many details to be taken into account. To address this need, a methodology for assessing the reproducibility of studies is also presented and discussed, as a tool to help to raise awareness about research reproducibility in this field. The application of the methodology in practice has shown how, even for papers aimed to be reproducible, a systematic analysis raises important aspects that render reproduction difficult or impossible. We also show how, by identifying elements and attributes related to reproducibility, it can be better understood which kind of reproduction can be done for a specific study, given the description of datasets, methodologies and parameters it uses.
C1 [Robles, Gregorio] Univ Rey Juan Carlos, Fuenlabrada, Spain.
   [Gonzalez-Barahona, Jesus M.] Univ Rey Juan Carlos, Mostoles, Spain.
C3 Universidad Rey Juan Carlos; Universidad Rey Juan Carlos
RP Robles, G (corresponding author), Univ Rey Juan Carlos, Fuenlabrada, Spain.
EM grex@gsyc.urjc.es
RI Gonzalez-Barahona, Jesus M./L-5646-2017; Robles, Gregorio/I-2507-2012
OI Gonzalez-Barahona, Jesus M./0000-0001-9682-460X; Robles,
   Gregorio/0000-0002-1442-6761
FU European Commission under the ALERT [ICT-258098]
FX We thank the anonymous reviewers for their helpful comments and
   suggestions, and the researchers in this field for providing the matter
   of this study. This work has been partially funded by the European
   Commission, under the ALERT project (ICT-258098).
CR [Anonymous], 2007, The promise repository of empirical software engineering data
   Barr E., 2010, P FSE SDP WORKSH FUT, P23
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   De Leeuw J., 2001, Reproducible Research: the Bottom Line
   Donoho DL, 2009, COMPUT SCI ENG, V11, P8, DOI 10.1109/MCSE.2009.15
   Fayyad U., 1996, KDD-96 Proceedings. Second International Conference on Knowledge Discovery and Data Mining, P82
   Fomel S, 2009, COMPUT SCI ENG, V11, P5, DOI 10.1109/MCSE.2009.14
   Gentleman R, 2007, J COMPUT GRAPH STAT, V16, P1, DOI 10.1198/106186007X178663
   GERMAN DM, 2004, P INT WORKSH MIN SOF
   Gomez Omar S., 2010, P 1 INT WORKSHOP REP
   Gonzalez-Barahona JM, 2009, EMPIR SOFTW ENG, V14, P262, DOI 10.1007/s10664-008-9100-x
   Hayes JH, 2005, P 2 INT WORKSH MIN S
   Herraiz I, 2009, EUR CON SFTWR MTNCE, P281, DOI 10.1109/CSMR.2009.43
   Hothorn T, 2011, BRIEF BIOINFORM
   Howison J, 2006, INT J INF TECHNOL WE, V1, P17, DOI 10.4018/jitwe.2006070102
   Knutson CD, 2010, SIGSOFT SOFTW ENG NO, V35, P42
   Koenker R, 2009, J APPL ECONOMET, V24, P833, DOI 10.1002/jae.1083
   Miller J, 2005, INFORM SOFTWARE TECH, V47, P233, DOI 10.1016/j.infsof.2004.08.005
   Panjer LucasD., 2007, Proceedings of the 4th International Workshop on Mining Software Repositories, MSR '07, P29
   Robles Gregorio, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P171, DOI 10.1109/MSR.2010.5463348
   Robles G., 2010, P 1 INT WORKSH REPL, P1
   Robles G, 2006, J SYST SOFTWARE, V79, P1233, DOI 10.1016/j.jss.2006.02.048
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Vandewalle P, 2007, INT CONF ACOUST SPEE, P1253
   Vegas S., 2006, International Symposium on Empirical Software Engineering, P28, DOI DOI 10.1145/1159733.1159741
NR 26
TC 49
Z9 57
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2012
VL 17
IS 1-2
SI SI
BP 75
EP 89
DI 10.1007/s10664-011-9181-9
PG 15
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 893GG
UT WOS:000300343600006
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Thelin, T
AF Thelin, T
TI Empirical evaluations of usage-based reading and fault content
   estimation for software inspections
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE fault content estimation; empirical study; reading technique; software
   inspection; usage-based reading
AB This thesis describes six empirical investigations of two techniques applied to software inspections, namely reading techniques and fault content estimation techniques. The first part of the thesis presents a series of experiments of a novel reading technique called usage-based reading. The second part investigates fault content estimation applied to the software inspection process. The estimation methods used are capture-recapture and curve fitting.
C1 Lund Univ, Dept Commun Syst, SE-22100 Lund, Sweden.
C3 Lund University
RP Thelin, T (corresponding author), Lund Univ, Dept Commun Syst, Box 118, SE-22100 Lund, Sweden.
EM thomas.thelin@telecom.lth.se
CR Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   PORTON R, 1995, CINEASTE, V21, P6
   Thelin T, 2002, INFORM SOFTWARE TECH, V44, P683, DOI 10.1016/S0950-5849(02)00095-2
   Thelin T, 2001, INFORM SOFTWARE TECH, V43, P925, DOI 10.1016/S0950-5849(01)00201-4
   Thelin T, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P127, DOI 10.1109/ISESE.2002.1166932
   Thelin T, 2000, J SYST SOFTWARE, V52, P139, DOI 10.1016/S0164-1212(99)00140-5
   Thelin T, 1999, VTT SYMP, V195, P182
   THELIN T, 2003, IN PRESS IEEE T SOFT, V29
NR 9
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2003
VL 8
IS 3
BP 309
EP 313
DI 10.1023/A:1024428912254
PG 5
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803WF
UT WOS:000220260500004
DA 2024-07-18
ER

PT J
AU Mendes, E
   Watson, I
   Triggs, C
   Mosley, N
   Counsell, S
AF Mendes, E
   Watson, I
   Triggs, C
   Mosley, N
   Counsell, S
TI A comparative study of cost estimation models for Web hypermedia
   applications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Web hypermedia applications; effort prediction models; prediction
   accuracy; case-based reasoning techniques; multiple regression models
ID NEURAL-NETWORKS; SOFTWARE
AB Software cost models and effort estimates help project managers allocate resources, control costs and schedule and improve current practices, leading to projects finished on time and within budget. In the context of Web development, these issues are also crucial, and very challenging given that Web projects have short schedules and very fluidic scope. In the context of Web engineering, few studies have compared the accuracy of different types of cost estimation techniques with emphasis placed on linear and stepwise regressions, and case-based reasoning (CBR). To date only one type of CBR technique has been employed in Web engineering. We believe results obtained from that study may have been biased, given that other CBR techniques can also be used for effort prediction.
   Consequently, the first objective of this study is to compare the prediction accuracy of three CBR techniques to estimate the effort to develop Web hypermedia applications and to choose the one with the best estimates. The second objective is to compare the prediction accuracy of the best CBR technique against two commonly used prediction models, namely stepwise regression and regression trees. One dataset was used in the estimation process and the results showed that the best predictions were obtained for stepwise regression.
C1 Univ Auckland, Dept Comp Sci, Auckland 1, New Zealand.
   Univ Auckland, Dept Stat, Auckland 1, New Zealand.
   MxM Technol, Auckland, New Zealand.
   Univ London, Birkbeck Coll, Dept Comp Sci, London WC1H 0PP, England.
C3 University of Auckland; University of Auckland; University of London;
   Birkbeck University London
RP Univ Auckland, Dept Comp Sci, Auckland 1, New Zealand.
EM emilia@cs.auckland.ac.nz; ian@cs.auckland.ac.nz;
   triggs@stat.auckland.ac.nz; nile_mosley@yahoo.com; steve@dcs.bbk.ac.uk
RI Mendes, Maria E/B-4207-2015
OI Mendes, Emilia/0000-0003-0449-5322; Watson, Ian/0000-0001-6969-4715
CR Ambler SW, 2002, IEEE SOFTWARE, V19, P66, DOI 10.1109/52.991334
   Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], P COMB 11 EUR SOFTW
   [Anonymous], P 2 ICSE WORKSH WEB
   [Anonymous], P 7 INT SOFTW METR S
   BALASUBRAMANIAN V, 1995, COMMUN ACM, V38, P8
   BIREMAN L, 1984, CLASSIFICATION REGRE
   Boehm BW., 1981, Software Engineering Economics
   Botafogo R., 1992, ACM T INFORM SYST, V10, P143
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P313, DOI 10.1109/ICSE.1999.841022
   Briand L. C., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P377, DOI 10.1109/ICSE.2000.870428
   CHRISTODOULOU SP, 2000, P 2 ICSE WORKSH WEB, P75
   Coda F, 1998, NINTH INTERNATIONAL WORKSHOP ON SOFTWARE SPECIFICATION AND DESIGN, PROCEEDINGS, P8, DOI 10.1109/IWSSD.1998.667914
   *COSMIC, COSMIC FFP MEAS MAN
   COWDEROY AJC, 1998, P 5 IEEE INT SOFTW M
   DEMARCO T, 1982, CONTROLLING SOFTWARE
   Dolado JJ, 2001, INFORM SOFTWARE TECH, V43, P61, DOI 10.1016/S0950-5849(00)00137-3
   Fielding R. T., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P407, DOI 10.1109/ICSE.2000.870431
   Finnie GR, 1997, J SYST SOFTWARE, V39, P281, DOI 10.1016/S0164-1212(97)00055-1
   GARZOTTO F, 1993, ACM T INFORM SYST, V11, P1, DOI 10.1145/151480.151483
   Gray A, 1997, INFORM SOFTWARE TECH, V39, P425, DOI 10.1016/S0950-5849(96)00006-7
   Gray A, 1997, 1997 ANNUAL MEETING OF THE NORTH AMERICAN FUZZY INFORMATION PROCESSING SOCIETY - NAFIPS, P394, DOI 10.1109/NAFIPS.1997.624073
   GRAY R, 1999, P IEEE 6 METR S
   HUGHES RT, 1997, THESIS U BRIGHTON UK
   Humphrey W.S., 1995, SEI SERIES SOFTWARE
   Jeffery R, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P16, DOI 10.1109/METRIC.2001.915512
   Jeffery R, 2000, INFORM SOFTWARE TECH, V42, P1009, DOI 10.1016/S0950-5849(00)00153-1
   JOHNSON P, 1999, J EMPIRICAL SOFTWARE
   Kadoda G, 2001, LECT NOTES ARTIF INT, V2080, P276
   Kadoda G., 2000, P EASE 2000 C KEEL U
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   Kinnear P.R., 1999, SPSS for windows made simple
   KIRSOPP C, 2001, TR0201 BOURN U
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   KITCHENHAM BA, 2001, IEEE P SOFTW ENG JUN, V148
   KOK PAM, 1990, ESPRIT 90, P296
   KUMAR S, 1994, APPL INTELL, V4, P31, DOI 10.1007/BF00872054
   Maxwell KD, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.951490
   Mendes E., 2001, IEEE Multimedia, V8, P50, DOI 10.1109/93.923953
   MENDES E, 2001, P ACM HYP 01 C AAHR
   MENDES E, 2002, IEE P SOFTWARE ENG, V149, P77
   MENDES E, 2002, P 11 INT WORLD WID W
   Michau F., 2001, European Journal of Engineering Education, V26, P151, DOI 10.1080/03043790110034410
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   OKAMOTO S, 1995, LECT NOTES ARTIFICIA, V1010
   PICKARD LM, 1999, P 6 INT S SOFTW MET
   Pressman RS, 2000, IEEE SOFTWARE, V17, P18, DOI 10.1109/52.819962
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P345, DOI 10.1109/TSE.1978.231521
   Ranwez S., 2000, Journal of Interactive Learning Research, V11, P389
   Reifer D, 2002, IEEE SOFTWARE, V19, P12, DOI 10.1109/52.991324
   Reifer DJ, 2000, IEEE SOFTWARE, V17, P57, DOI 10.1109/52.895169
   Schofield Christopher, 1998, Ph. D. Dissertation
   Schroeder L.D., 1986, Understanding regression analysis, V57
   SCHULZ S, 1999, LECT NOTES ARTIFICIA
   SCHWABE D, 1994, P INT WORKSH METH DE
   SELBY RW, 1988, IEEE T SOFTWARE ENG, V14, P1743, DOI 10.1109/32.9061
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   SHEPPERD M, 2001, P 7 INT SOFTW METR S, P28, DOI DOI 10.1109/METRIC.2001.915513
   SHEPPERD MJ, P ICSE 18 BERL
   SPIRO RJ, 1995, CONSTRUCTIVISM
   SRINIVASAN K, 1995, IEEE T SOFTWARE ENG, V21, P126, DOI 10.1109/32.345828
   STENSRUD E, 2002, P IEEE 8 METR S, V3, P12
   Tosca SusanaPajares., 1999, 10th ACM Conference on Hypertext and Hypermedia, P217, DOI DOI 10.1145/294469.294911
   Watson I., 1997, APPLYING CASE BASED
NR 65
TC 108
Z9 113
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2003
VL 8
IS 2
BP 163
EP 196
DI 10.1023/A:1023062629183
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803OV
UT WOS:000220241300003
DA 2024-07-18
ER

PT J
AU Shar, LK
   Demissie, BF
   Ceccato, M
   Tun, YN
   Lo, D
   Jiang, LX
   Bienert, C
AF Shar, Lwin Khin
   Demissie, Biniam Fisseha
   Ceccato, Mariano
   Tun, Yan Naing
   Lo, David
   Jiang, Lingxiao
   Bienert, Christoph
TI Experimental comparison of features, analyses, and classifiers for
   Android malware detection
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Malware detection; Machine learning; Deep learning; Android
AB Android malware detection has been an active area of research. In the past decade, several machine learning-based approaches based on different types of features that may characterize Android malware behaviors have been proposed. The usually-analyzed features include API usages and sequences at various abstraction levels (e.g., class and package), extracted using static or dynamic analysis. Additionally, features that characterize permission uses, native API calls and reflection have also been analyzed. Initial works used conventional classifiers such as Random Forest to learn on those features. In recent years, deep learning-based classifiers such as Recurrent Neural Network have been explored. Considering various types of features, analyses, and classifiers proposed in literature, there is a need of comprehensive evaluation on performances of current state-of-the-art Android malware classification based on a common benchmark. In this study, we evaluate the performance of different types of features and the performance between a conventional classifier, Random Forest (RF) and a deep learning classifier, Recurrent Neural Network (RNN). To avoid temporal and spatial biases, we evaluate the performances in a time- and space-aware setting in which classifiers are trained with older apps and tested on newer apps, and the distribution of test samples is representative of in-the-wild malware-to-benign ratio. Features are extracted from a common benchmark of 7,860 benign samples and 5,912 malware, whose release years span from 2010 to 2020. Among other findings, our study shows that permission use features perform the best among the features we investigated; package-level features generally perform better than class-level features; static features generally perform better than dynamic features; and RNN classifier performs better than RF classifier when trained on sequence-type features
C1 [Shar, Lwin Khin; Tun, Yan Naing; Lo, David; Jiang, Lingxiao] Singapore Management Univ, Singapore, Singapore.
   [Demissie, Biniam Fisseha] Technol Innovat Inst, 9639 Masdar City, Abu Dhabi, U Arab Emirates.
   [Ceccato, Mariano] Univ Verona, Verona, Italy.
   [Bienert, Christoph] Tech Univ Munich, Munich, Germany.
C3 Singapore Management University; Technology Innovation Institute;
   University of Verona; Technical University of Munich
RP Shar, LK (corresponding author), Singapore Management Univ, Singapore, Singapore.
EM lkshar@smu.edu.sg; biniam.demissie@tii.ae; mariano.ceccato@univr.it;
   yannaingtun@smu.edu.sg; davidlo@smu.edu.sg; lxjiang@smu.edu.sg;
   christoph.bienert@tum.de
RI Jiang, Lingxiao/E-8553-2012; Lo, David/A-2493-2012
OI Jiang, Lingxiao/0000-0002-4336-8548; Shar, Lwin
   Khin/0000-0001-5130-0407; Lo, David/0000-0002-4367-7201
FU National Research Foundation, Singapore; Cyber Security Agency of
   Singapore under its National Cybersecurity RD Programme; National
   Satellite of Excellence in Mobile Systems Security and Cloud Security
   [NRF2018NCR-NSOE004-0001]; MIUR 2018-2022 "Dipartimenti di Eccellenza"
FX The work of Lwin Khin Shar, Yan Naing Tun, Lingxiao Jiang, and David Lo
   is supported by the National Research Foundation, Singapore, and Cyber
   Security Agency of Singapore under its National Cybersecurity R & D
   Programme, National Satellite of Excellence in Mobile Systems Security
   and Cloud Security(NRF2018NCR-NSOE004-0001). Any opinions, findings and
   conclusions or recommendations expressed inthis material are those of
   the author(s) and do not reflect the views of National Research
   Foundation, Singapore and Cyber Security Agency of Singapore. The work
   of Mariano Ceccato is partially supported by project MIUR 2018-2022
   "Dipartimenti di Eccellenza".
CR Aafer Y, 2013, L N INST COMP SCI SO, V127, P86
   Afonso VM, 2015, J COMPUT VIROL HACKI, V11, P9, DOI 10.1007/s11416-014-0226-7
   Akiba T, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2623, DOI 10.1145/3292500.3330701
   Allix K, 2015, Engineering Secure Software and Systems, P51, DOI [10.1007/978-3-319-15618-7_5, DOI 10.1007/978-3-319-15618-7_5]
   Allix K, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P468, DOI [10.1145/2901739.2903508, 10.1109/MSR.2016.056]
   Allix K, 2016, EMPIR SOFTW ENG, V21, P183, DOI 10.1007/s10664-014-9352-6
   Alshahrani H, 2019, 2018 IEEE INT C CONS, P1
   Android, 2019, UI/Application Exerciser Monkey
   Arp D, 2014, 21ST ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2014), DOI 10.14722/ndss.2014.23247
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Bai YD, 2020, PROC INT CONF SOFTW, P1560, DOI 10.1145/3377811.3380354
   Blasing Thomas, 2010, 2010 5th International Conference on Malicious and Unwanted Software (MALWARE 2010), P55, DOI 10.1109/MALWARE.2010.5665792
   Cai HP, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3371924
   Chan PPK, 2014, INT CONF MACH LEARN, P82, DOI 10.1109/ICMLC.2014.7009096
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen S, 2016, ASIA CCS'16: PROCEEDINGS OF THE 11TH ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P377, DOI 10.1145/2897845.2897860
   Choudhary SR, 2015, IEEE INT CONF AUTOM, P429, DOI 10.1109/ASE.2015.89
   Demissie BF, 2020, EMPIR SOFTW ENG, V25, P5084, DOI 10.1007/s10664-020-09879-8
   Demissie BF, 2018, 2018 IEEE/ACM 5TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT), P24, DOI 10.1145/3197231.3197238
   Deng L., 2014, FOND T SIGN PROC, V7, P197, DOI [10.1561/2000000039, DOI 10.1561/2000000039, 10.1561/]
   Dini Gianluca, 2012, Computer Network Security. Proceedings 6th International Conference on Mathematical Methods, Models and Architectures for Computer Network Security, MMM-ACNS 2012, P240, DOI 10.1007/978-3-642-33704-8_21
   Enck W, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P235
   Eskandari M, 2012, J VISUAL LANG COMPUT, V23, P154, DOI 10.1016/j.jvlc.2012.02.002
   Fan M, 2016, PROC INT SYMP SOFTW, P24, DOI 10.1109/ISSRE.2016.14
   Fu XQ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P272, DOI 10.1109/ICSE-Companion.2019.00110
   Garcia J, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3162625
   Grover A, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P855, DOI 10.1145/2939672.2939754
   Ho TK, 1998, IEEE T PATTERN ANAL, V20, P832, DOI 10.1109/34.709601
   Huang L., 2011, P 4 ACM WORKSH SEC A, P43
   Ikram M, 2019, Arxiv, DOI arXiv:1905.09136
   Karbab EB, 2018, DIGIT INVEST, V24, pS48, DOI 10.1016/j.diin.2018.01.007
   Kim T, 2019, IEEE T INF FOREN SEC, V14, P773, DOI 10.1109/TIFS.2018.2866319
   Lindorfer Martina, 2014, 2014 Third International Workshop on Building Analysis Datasets and Gathering Experience Returns for Security (BADGERS). Proceedings, P3, DOI 10.1109/BADGERS.2014.7
   Lindorfer M, 2015, P INT COMP SOFTW APP, P422, DOI 10.1109/COMPSAC.2015.103
   Liu Y., 2022, ACM J. ACM (JACM)
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Ma Z, 2019, IEEE ACCESS, V7, P21235, DOI 10.1109/ACCESS.2019.2896003
   McLaughlin N, 2017, PROCEEDINGS OF THE SEVENTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY (CODASPY'17), P301, DOI 10.1145/3029806.3029823
   Mikolov Tomas, 2013, Advances in Neural Information Processing Systems, P3111, DOI DOI 10.48550/ARXIV.1310.4546
   Narayanan A, 2017, Arxiv, DOI [arXiv:1707.05005, DOI 10.48550/ARXIV.1707.05005]
   Narayanan A, 2018, IEEE DATA MINING, P357, DOI 10.1109/ICDM.2018.00051
   Narudin FA, 2016, SOFT COMPUT, V20, P343, DOI 10.1007/s00500-014-1511-6
   Naway A, 2018, Arxiv, DOI arXiv:1812.10360
   Onwuzurike L, 2019, ACM T PRIV SECUR, V22, DOI 10.1145/3313391
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pendlebury F, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P729
   Rastogi V, 2013, P 8 ACM SIGSAC S INF, P329, DOI 10.1145/2484313.2484355
   Sanz B, 2013, ADV INTELL SYST COMP, V189, P289
   Shahpasand M, 2019, 2019 IEEE 1ST INTERNATIONAL WORKSHOP ON ARTIFICIAL INTELLIGENCE FOR MOBILE (AI4MOBILE '19), P17, DOI [10.1109/AI4Mobile.2019.8672711, 10.1109/ai4mobile.2019.8672711]
   Shar LK, 2020, 2020 IEEE/ACM 7TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS, MOBILESOFT, P50, DOI 10.1145/3387905.3388596
   Sharma A, 2014, LECT NOTES COMPUT SC, V8813, P191, DOI 10.1007/978-3-319-12280-9_13
   Shen F, 2019, IEEE T MOBILE COMPUT, V18, P1231, DOI 10.1109/TMC.2018.2861405
   Shi LM, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P535, DOI 10.1145/3372297.3423341
   Soot, 2018, Soot-a java optimization framework
   Spreitzenbarth M., 2013, P 28 ANN ACM S APPL, DOI [DOI 10.1145/2480362.2480701, 10.1145/2480362.2480701]
   Suarez-Tangil G, 2017, PROCEEDINGS OF THE SEVENTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY (CODASPY'17), P309, DOI 10.1145/3029806.3029825
   Symantec, 2019, Internet Security Threat Report 24
   Thome J, 2017, PROC INT CONF SOFTW, P198, DOI 10.1109/ICSE.2017.26
   Tobiyama S, 2016, P INT COMP SOFTW APP, P577, DOI 10.1109/COMPSAC.2016.151
   Wu BZ, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3423096
   Wu DJ, 2012, ASIA JT CONF INF SEC, P62, DOI 10.1109/AsiaJCIS.2012.18
   Xing Liu, 2014, 2014 2nd IEEE International Conference on Mobile Cloud Computing, Services and Engineering (MobileCloud), P142, DOI 10.1109/MobileCloud.2014.22
   Xu BW, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI [10.1145/3239235.3240503, 10.1109/PESGM.2018.8586232]
   Xu K, 2019, 2019 4TH IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P), P47, DOI 10.1109/EuroSP.2019.00014
   Xu K, 2018, 2018 3RD IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY (EUROS&P 2018), P473, DOI 10.1109/EuroSP.2018.00040
   Yang W, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P384, DOI 10.1145/3180155.3180223
   Yang XL, 2017, INFORM SOFTWARE TECH, V90, P27, DOI 10.1016/j.infsof.2017.04.007
   Yerima SY, 2015, IET INFORM SECUR, V9, P313, DOI 10.1049/iet-ifs.2014.0099
   You YS, 2013, P INT COMP SOFTW APP, P180, DOI 10.1109/COMPSAC.2013.32
   Yuan ZL, 2014, SIGCOMM'14: PROCEEDINGS OF THE 2014 ACM CONFERENCE ON SPECIAL INTEREST GROUP ON DATA COMMUNICATION, P371, DOI [10.1145/2619239.2631434, 10.1145/2740070.2631434]
   Zhang M, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1105, DOI 10.1145/2660267.2660359
   Zhang XH, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P757, DOI 10.1145/3372297.3417291
   Zhao YJ, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3446905
   Zou DQ, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3442588
NR 75
TC 1
Z9 1
U1 3
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 130
DI 10.1007/s10664-023-10375-y
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA T1XI8
UT WOS:001075979200001
OA Green Accepted
DA 2024-07-18
ER

PT J
AU Xiao, T
   Baltes, S
   Hata, H
   Treude, C
   Kula, RG
   Ishio, T
   Matsumoto, K
AF Xiao, Tao
   Baltes, Sebastian
   Hata, Hideaki
   Treude, Christoph
   Kula, Raula Gaikovina
   Ishio, Takashi
   Matsumoto, Kenichi
TI 18 million links in commit messages: purpose, evolution, and decay
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Commit messages; Software documentation; Link sharing; Link decay
ID ISSUES
AB Commit messages contain diverse and valuable types of knowledge in all aspects of software maintenance and evolution. Links are an example of such knowledge. Previous work on "9.6 million links in source code comments" showed that links are prone to decay, become outdated, and lack bidirectional traceability. We conducted a large-scale study of 18,201,165 links from commits in 23,110 GitHub repositories to investigate whether they suffer the same fate. Results show that referencing external resources is prevalent and that the most frequent domains other than github.com are the external domains of Stack Overflow and Google Code. Similarly, links serve as source code context to commit messages, with inaccessible links being frequent. Although repeatedly referencing links is rare (4%), 14% of links that are prone to evolve become unavailable over time; e.g., tutorials or articles and software homepages become unavailable over time. Furthermore, we find that 70% of the distinct links suffer from decay; the domains that occur the most frequently are related to Subversion repositories. We summarize that links in commits share the same fate as links in code, opening up avenues for future work.
C1 [Xiao, Tao; Kula, Raula Gaikovina; Ishio, Takashi; Matsumoto, Kenichi] Nara Inst Sci & Technol, Ikoma, Japan.
   [Baltes, Sebastian] Univ Adelaide, Adelaide, Australia.
   [Hata, Hideaki] Shinshu Univ, Matsumoto, Japan.
   [Treude, Christoph] Univ Melbourne, Melbourne, Australia.
C3 Nara Institute of Science & Technology; University of Adelaide; Shinshu
   University; University of Melbourne
RP Xiao, T (corresponding author), Nara Inst Sci & Technol, Ikoma, Japan.
EM tao.xiao.ts2@is.naist.jp; sebastian.baltes@adelaide.edu.au;
   hata@shinshu-u.ac.jp; christoph.treude@unimelb.edu.au;
   raula-k@is.naist.jp; ishio@is.naist.jp; matumoto@is.naist.jp
RI Treude, Christoph/AAZ-6257-2021; Hata, Hideaki/N-7103-2019
OI Hata, Hideaki/0000-0003-0708-5222; Treude,
   Christoph/0000-0002-6919-2149; Ishio, Takashi/0000-0003-4106-699X; Xiao,
   Tao/0000-0003-4070-585X
FU JSPS KAKENHI [JP18H04094, JP20K19774, JP20H05706, JP22K11970]
FX AcknowledgementsThis work was inspired by the International Workshop
   series on Dynamic Software Documentation, held at McGill's Bellairs
   Research Institute, and was supported by JSPS KAKENHI under Grants
   JP18H04094, JP20K19774, JP20H05706, and JP22K11970.
CR Abdalkareem R, 2021, IEEE T SOFTWARE ENG, V47, P2740, DOI 10.1109/TSE.2020.2967380
   Aghajani E, 2019, PROC INT CONF SOFTW, P1199, DOI 10.1109/ICSE.2019.00122
   Alali A, 2008, INT C PROGRAM COMPRE, P182, DOI 10.1109/ICPC.2008.24
   Aniche M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P499, DOI 10.1145/3180155.3180180
   [Anonymous], 1994, P INT C VERY LARGE D
   [Anonymous], 2014, Proceedings of the 17th ACM conference on Computer supported cooperative work social computing
   Baltes S, 2022, IEEE T SOFTWARE ENG, V48, P135, DOI 10.1109/TSE.2020.2981898
   Baltes S, 2019, EMPIR SOFTW ENG, V24, P1259, DOI 10.1007/s10664-018-9650-5
   Baltes S, 2018, IEEE WORK CONF MIN S, P319, DOI 10.1145/3196398.3196430
   Barrie JM, 2000, J MED INTERNET RES, V2, DOI 10.2196/jmir.2.1.e6
   Buse Raymond P. L., 2010, P 25 IEEE ACM INT C, P33, DOI DOI 10.1145/1858996.1859005
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   DAmbros M, 2010, P 1 WORKSHOP WEB 20, P14
   Dragan N., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P520, DOI 10.1109/ICSM.2011.6080822
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   FLEISS JL, 1971, PSYCHOL BULL, V76, P378, DOI 10.1037/h0031619
   Forte A., 2012, Proceedings of the ACM 2012 conference on Computer Supported Cooperative Work, P417
   Fu Y, 2015, INFORM SOFTWARE TECH, V57, P369, DOI 10.1016/j.infsof.2014.05.017
   Gîrba T, 2005, EIGHTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P113, DOI 10.1109/IWPSE.2005.21
   Gómez C, 2013, IEEE WORK CONF MIN S, P81, DOI 10.1109/MSR.2013.6624011
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Hata H, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10058-6
   Hata H, 2019, PROC INT CONF SOFTW, P1211, DOI 10.1109/ICSE.2019.00123
   Huang Y, 2020, J COMPUT SCI TECH-CH, V35, P1258, DOI 10.1007/s11390-020-0496-0
   Kehoe C., 1998, GVU's ninth www user survey report
   Kittur A, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P215
   Krasniqi R, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P512, DOI [10.1109/saner48275.2020.9054816, 10.1109/SANER48275.2020.9054816]
   KREJCIE RV, 1970, EDUC PSYCHOL MEAS, V30, P607, DOI 10.1177/001316447003000308
   Liu BC, 2022, SCI COMPUT PROGRAM, V222, DOI 10.1016/j.scico.2022.102858
   Liu JK, 2022, IEEE T SOFTWARE ENG, V48, P3242, DOI 10.1109/TSE.2021.3086494
   Liu JK, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10028-y
   Liu SQ, 2022, IEEE T SOFTWARE ENG, V48, P1800, DOI 10.1109/TSE.2020.3038681
   Maalej Walid, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P191, DOI 10.1109/MSR.2010.5463344
   Maalej W, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P121, DOI 10.1109/MSR.2009.5069490
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Moreno L, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P484, DOI 10.1145/2635868.2635870
   Movshovitz-Attias Dana, 2013, 2013 IEEE/ACM International Conference on Advances in Social Networks Analysis and Mining (ASONAM), P886
   Murphy Gail, 2009, 2009 IEEE Symposium on Visual Languages and Human-Centric Computing (VL/HCC), DOI 10.1109/VLHCC.2009.5295312
   Murphy J, 2007, J COMPUT-MEDIAT COMM, V13, P60, DOI 10.1111/j.1083-6101.2007.00386.x
   Nagar Y., 2012, P ACM 2012 C COMPUTE, P393, DOI DOI 10.1145/2145204.2145266
   O'Mahony S, 2007, ACAD MANAGE J, V50, P1079
   Rath M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P834, DOI 10.1145/3180155.3180207
   Rebai S, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106332
   Santos EA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P504, DOI [10.1109/MSR.2016.065, 10.1145/2901739.2903493]
   Sarwar Muhammad Usman, 2020, 2020 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW), P37, DOI 10.1109/ISSREW51248.2020.00034
   Schermann G, 2015, INT C PROGRAM COMPRE, P4, DOI 10.1109/ICPC.2015.10
   Sun Y, 2017, INFORM SOFTWARE TECH, V84, P33, DOI 10.1016/j.infsof.2016.11.010
   Tian YC, 2022, PROC INT CONF SOFTW, P2389, DOI 10.1145/3510003.3510205
   Vasilescu B, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P188, DOI 10.1109/SocialCom.2013.35
   Viera AJ, 2005, FAM MED, V37, P360
   Wang D, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09997-x
   Wattanakriengkrai S, 2022, J SYST SOFTWARE, V183, DOI 10.1016/j.jss.2021.111117
   Wu JY, 2022, INT C PROGRAM COMPRE, P602, DOI 10.1145/3524610.3527919
   Xiao T, 2022, IEEE T SOFTWARE ENG, V48, P4214, DOI 10.1109/TSE.2021.3115772
   Xie R, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P434, DOI [10.1109/saner.2019.8667969, 10.1109/SANER.2019.8667969]
   Xiong Y., 2017, 29 INT C SOFTW ENG K, P578, DOI DOI 10.18293/SEKE2017-062
   Ye DH, 2017, EMPIR SOFTW ENG, V22, P375, DOI 10.1007/s10664-016-9430-z
   Zampetti F, 2017, INT C PROGRAM COMPRE, P23, DOI 10.1109/ICPC.2017.30
   Zhang Y, 2020, WORLD WIDE WEB, V23, P1589, DOI 10.1007/s11280-019-00770-1
   Zhang Y, 2018, SOFTWAREMINING '18: PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON SOFTWARE MINING, P12, DOI 10.1145/3242887.3242891
   Zhou YQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P914, DOI 10.1145/3106237.3117771
NR 62
TC 1
Z9 1
U1 2
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 91
DI 10.1007/s10664-023-10325-8
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H3FT8
UT WOS:000994865100001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Zhong, H
   Wang, XY
AF Zhong, Hao
   Wang, Xiaoyin
TI An empirical study on API usages from code search engine and local
   library
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE API usage; API library; Empirical study
ID EXAMPLES
AB To help programmers find proper API methods and learn API usages, researchers have proposed various code search engines. Given an API of interest, a code search engine can retrieve its code samples from online software repositories. Through such tools, Internet code becomes a major resource for learning API usages. Besides Internet code, local library code also contains API usages, and researchers have found that library code contains many API usages that are more concise than those in client code. As samples from a code search engine are typically client code, it is interesting to explore the API usages inside library code, but the samples inside library code contain internal method invocations. If an empirical study does not remove them from API usages, it can significantly overestimate the API usages from library code. Due to this challenge, no prior study has ever analyzed API usages inside libraries, and many research questions are still open. For example, how many API usages are there inside libraries? The answers are useful to motivate future research on APIs and code search engines. The internal usages in library code will introduce compilation errors when they are directly called from the client side. To support the exploration of the above questions, in this paper, we propose CodeEx that extracts Internet code samples from a popular code search engine and local code samples by removing internal usages from library code. With the support of CodeEx, we conduct the first empirical study on API usages of five libraries, and summarize our results into six findings as the answers to five research questions. Our results are useful for researchers to motivate their future research. For example, our results show that although code samples from library code are only half of those from the code search engine, they cover 4.0 times more API classes, 4.7 times more API methods, and 3.0 times more call sequences. Meanwhile, in a controlled experiment, we compare their effectiveness in assisting programming. We find that more API usages do not lead to more complete tasks, and it highlights the importance of code recommendation approaches.
C1 [Zhong, Hao] Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai, Peoples R China.
   [Wang, Xiaoyin] Univ Texas San Antonio, Dept Comp Sci, San Antonio, TX 78249 USA.
C3 Shanghai Jiao Tong University; University of Texas System; University of
   Texas at San Antonio (UTSA)
RP Zhong, H (corresponding author), Shanghai Jiao Tong Univ, Dept Comp Sci & Engn, Shanghai, Peoples R China.
EM zhonghao@sjtu.edu.cn; Xiaoyin.Wang@utsa.edu
RI Zhong, Hao/B-2435-2015
OI Zhong, Hao/0000-0002-4302-9183
FU National Nature Science Foundation of China [62232003, 62272295]; NSF
   [CCF-1846467]
FX AcknowledgmentsWe appreciate reviewers for their insightful comments.
   Hao Zhong is sponsored by the National Nature Science Foundation of
   China No. 62232003 and 62272295. Xiaoyin Wang is supported in part by
   NSF Grant CCF-1846467.
CR accumulo, 2019, US
   Ammons G, 2002, ACM SIGPLAN NOTICES, V37, P4, DOI 10.1145/565816.503275
   [Anonymous], 2020, THA API DOC ACC 1 9
   Asyrofi MH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P637, DOI [10.1109/SANER48275.2020.9054809, 10.1109/saner48275.2020.9054809]
   Bajracharya S., 2006, COMP 21 ACM SIGPLAN, P681, DOI DOI 10.1145/1176617.1176671
   Bian P, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P411, DOI 10.1145/3236024.3236032
   Bornholt J, 2017, ACM SIGPLAN NOTICES, V52, P467, DOI [10.1145/3140587.3062353, 10.1145/3062341.3062353]
   Brito G, 2018, J SYST SOFTWARE, V137, P306, DOI 10.1016/j.jss.2017.12.007
   Bruce BR, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P135, DOI 10.1145/3368089.3409738
   Buse RPL, 2012, PROC INT CONF SOFTW, P782, DOI 10.1109/ICSE.2012.6227140
   cassandra, 2019, US
   Cassandra archive, 2020, US
   Chatterjee S, 2009, LECT NOTES COMPUT SC, V5503, P385
   Dagenais B, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P313
   Feng Y, 2018, ACM SIGPLAN NOTICES, V53, P420, DOI [10.1145/3192366.3192382, 10.1145/3296979.3192382]
   Gabel M., 2008, SIGSOFT FSE, P339, DOI DOI 10.1145/1453101.1453150
   Ghafari M, 2014, PROC ICPC, P142
   Ghafari M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1841
   Ghafari M, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P555, DOI 10.1109/SANER.2017.7884674
   Hassan F, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1078, DOI 10.1145/3180155.3180181
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Holmes R, 2005, PROC INT CONF SOFTW, P117
   JDT, 2019, US
   karaf, 2019, US
   Kawrykow D, 2009, IEEE INT CONF AUTOM, P111, DOI 10.1109/ASE.2009.62
   Keivanloo I, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P664, DOI 10.1145/2568225.2568292
   Kim K, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P946, DOI 10.1145/3180155.3180187
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Lemieux C, 2015, IEEE INT CONF AUTOM, P81, DOI 10.1109/ASE.2015.71
   Lemos O.A.L., 2007, P 22 IEEE ACM INT C, P525, DOI 10.1145/1321631.1321726
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Liu XY, 2018, IEEE INT CONF AUTOM, P282, DOI 10.1145/3238147.3238216
   Lo D., 2006, SIGSOFT FSE
   lucene, 2019, US
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   Mandelin D, 2005, ACM SIGPLAN NOTICES, V40, P48, DOI 10.1145/1064978.1065018
   Maoz S, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P96, DOI 10.1145/2786805.2786824
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   McMillan C, 2012, IEEE T SOFTWARE ENG, V38, P1069, DOI 10.1109/TSE.2011.84
   Michail A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P167, DOI 10.1109/ICSE.2000.870408
   Monperrus M, 2012, EMPIR SOFTW ENG, V17, P703, DOI 10.1007/s10664-011-9186-4
   Nguyen T, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1027, DOI 10.1145/3368089.3409690
   Niu HR, 2017, EMPIR SOFTW ENG, V22, P259, DOI 10.1007/s10664-015-9421-5
   Piccioni Marco, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P5, DOI 10.1109/ESEM.2013.14
   poi, 2019, US
   Reiss SP, 2009, PROC INT CONF SOFTW, P243, DOI 10.1109/ICSE.2009.5070525
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Sadowski C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P191, DOI 10.1145/2786805.2786855
   Sahavechaphan N, 2006, ACM SIGPLAN NOTICES, V41, P413, DOI 10.1145/1167515.1167508
   Saied MA, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106213
   Saied MA, 2018, J SYST SOFTWARE, V145, P164, DOI 10.1016/j.jss.2018.08.032
   Saied MA, 2015, INT C PROGRAM COMPRE, P71, DOI 10.1109/ICPC.2015.16
   Sawant AA, 2016, PROC IEEE INT CONF S, P400, DOI 10.1109/ICSME.2016.64
   Scaffidi C., 2006, XRDS: Crossroads, The ACM Magazine for Students, V12, P4, DOI DOI 10.1145/1144359.1144363
   searchcode.com, SEARCHC ENG 2019B
   searchcode.com, 2019, GUIC
   Sim SE, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063243
   Stolee KT, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2581377
   Sven Amann, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P265, DOI 10.1109/MSR.2019.00053
   Thummalapenta Suresh, 2007, Proceedings of the Twenty-second IEEE/ACM International Conference on Automated Software Engineering, ASE '07, P204
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Vasudevan P, 2006, FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT AND APPLICATIONS, PROCEEDINGS, P289, DOI 10.1109/SERA.2006.25
   Wang YB, 2021, IEEE ACM T COMPUT BI, V18, P325, DOI 10.1109/TCBB.2019.2912173
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Ying ATT, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P460, DOI 10.1145/2635868.2635877
   Zcng HS, 2021, ASIA PAC SOFWR ENG, P161, DOI 10.1109/APSEC53868.2021.00024
   Zhang H, 2019, IEEE T SOFTW ENG
   Zhang N, 2022, IEEE T SOFTW ENG
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
   Zhong H, 2022, IEEE T SOFTWARE ENG, V48, P571, DOI 10.1109/TSE.2020.2996975
   Zhong H, 2020, PROC INT CONF SOFTW, P899, DOI 10.1145/3377811.3380922
   Zhong H, 2019, IEEE T SOFTWARE ENG, V45, P319, DOI 10.1109/TSE.2017.2782280
   Zhong H, 2017, IEEE INT CONF AUTOM, P671, DOI 10.1109/ASE.2017.8115677
   Zhong H, 2013, ACM SIGPLAN NOTICES, V48, P803, DOI [10.1145/2509136.2509523, 10.1145/2544173.2509523]
   Zhong H, 2009, LECT NOTES COMPUT SC, V5653, P318, DOI 10.1007/978-3-642-03013-0_15
   Zhou SF, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1202, DOI 10.1109/ASE.2019.00137
   Zhu ZX, 2014, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME.2014.52
NR 77
TC 1
Z9 1
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2023
VL 28
IS 3
AR 63
DI 10.1007/s10664-023-10304-z
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L8KE8
UT WOS:001025690200001
DA 2024-07-18
ER

PT J
AU Trautsch, A
   Erbel, J
   Herbold, S
   Grabowski, J
AF Trautsch, Alexander
   Erbel, Johannes
   Herbold, Steffen
   Grabowski, Jens
TI What really changes when developers intend to improve their source code:
   a commit-level study of static metric value and static analysis warning
   changes
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Static code analysis; Quality evolution; Software metrics; Software
   quality
ID OPEN SOURCE SOFTWARE; STATISTICS; AGREEMENT; QUALITY; MODEL
AB Many software metrics are designed to measure aspects that are believed to be related to software quality. Static software metrics, e.g., size, complexity and coupling are used in defect prediction research as well as software quality models to evaluate software quality. Static analysis tools also include boundary values for complexity and size that generate warnings for developers. While this indicates a relationship between quality and software metrics, the extent of it is not well understood. Moreover, recent studies found that complexity metrics may be unreliable indicators for understandability of the source code. To explore this relationship, we leverage the intent of developers about what constitutes a quality improvement in their own code base. We manually classify a randomized sample of 2,533 commits from 54 Java open source projects as quality improving depending on the intent of the developer by inspecting the commit message. We distinguish between perfective and corrective maintenance via predefined guidelines and use this data as ground truth for the fine-tuning of a state-of-the art deep learning model for natural language processing. The benchmark we provide with our ground truth indicates that the deep learning model can be confidently used for commit intent classification. We use the model to increase our data set to 125,482 commits. Based on the resulting data set, we investigate the differences in size and 14 static source code metrics between changes that increase quality, as indicated by the developer, and changes unrelated to quality. In addition, we investigate which files are targets of quality improvements. We find that quality improving commits are smaller than non-quality improving commits. Perfective changes have a positive impact on static source code metrics while corrective changes do tend to add complexity. Furthermore, we find that files which are the target of perfective maintenance already have a lower median complexity than files which are the target of non-pervective changes. Our study results provide empirical evidence for which static source code metrics capture quality improvement from the developers point of view. This has implications for program understanding as well as code smell detection and recommender systems.
C1 [Trautsch, Alexander; Herbold, Steffen] Univ Passau, Passau, Germany.
   [Erbel, Johannes; Grabowski, Jens] Univ Goettingen, Inst Comp Sci, Gottingen, Germany.
C3 University of Passau; University of Gottingen
RP Trautsch, A (corresponding author), Univ Passau, Passau, Germany.
EM alexander.trautsch@uni-passau.de; johannes.erbel@cs.uni-goettingen.de;
   steffen.herbold@uni-passau.de; grabowski@cs.uni-goettingen.de
OI Herbold, Steffen/0000-0001-9765-2803; Trautsch,
   Alexander/0000-0001-5236-7953
CR Abdi H, 2007, ENCY MEASUREMENT STA, P103, DOI DOI 10.4135/9781412952644
   Al Dallal J, 2018, IEEE T SOFTWARE ENG, V44, P44, DOI 10.1109/TSE.2017.2658573
   Alali A, 2008, INT C PROGRAM COMPRE, P182, DOI 10.1109/ICPC.2008.24
   AlOmar EA, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110821
   Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   [Anonymous], 2011, 25010 ISOIEC
   [Anonymous], 2001, StandardISO/IEC9126
   [Anonymous], 2008, Proceedings of the 4th International Workshop on Predictor Models in Software Engineering, PROMISE '08
   Bakota T., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P243, DOI 10.1109/ICSM.2011.6080791
   Bakota T, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P440, DOI 10.1109/CSMR-WCRE.2014.6747214
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Chahal KK, 2018, IFIP ADV INF COMM TE, V525, P61, DOI 10.1007/978-3-319-92375-8_6
   Chávez A, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P74, DOI 10.1145/3131151.3131171
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Dey Tapajit, 2020, P IEEEACM 42 INT C S, P209, DOI DOI 10.1145/3387940.3391502
   Fakhoury S, 2019, INT C PROGRAM COMPRE, P2, DOI 10.1109/ICPC.2019.00014
   Fenton N., 2014, SOFTWARE METRICS RIG, V3rd, DOI [10.1201/b17461 1305.68001, DOI 10.1201/B174611305.68001]
   Ferenc R, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110691
   Fu Y, 2015, INFORM SOFTWARE TECH, V57, P369, DOI 10.1016/j.infsof.2014.05.017
   Ghadhab L, 2021, INFORM SOFTWARE TECH, V135, DOI 10.1016/j.infsof.2021.106566
   Gharbi S, 2019, SAC '19: PROCEEDINGS OF THE 34TH ACM/SIGAPP SYMPOSIUM ON APPLIED COMPUTING, P1760, DOI 10.1145/3297280.3297452
   Griessom RJ, 2005, EFFECT SIZES RES BRO
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hattori Lile P., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P63, DOI 10.1109/ASEW.2008.4686322
   Herbold S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10092-4
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hönel S, 2019, 2019 IEEE 19TH INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2019), P109, DOI 10.1109/QRS.2019.00027
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Jureczko M, 2010, ACM INT C P SERIES, DOI [10.1145/1868328.1868342, DOI 10.1145/1868328.1868342]
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   LANDIS JR, 1977, BIOMETRICS, V33, P363, DOI 10.2307/2529786
   Levin Stanislav, 2017, P 13 INT C PREDICTIV, P97
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mauczka A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P490, DOI 10.1109/MSR.2015.71
   Mauczka A, 2012, LECT NOTES COMPUT SC, V7212, P301, DOI 10.1007/978-3-642-28872-2_21
   Mc Call J. A., 1977, FACTORS SOFTWARE QUA, VI
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Mordal-Manet K, 2009, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSM.2009.5306381
   NASA, 2004, NAS 4 FAC METR DAT P
   Pantiuchina J, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3408302
   Pantiuchina J, 2018, PROC IEEE INT CONF S, P80, DOI 10.1109/ICSME.2018.00017
   Parnas D.L., 2001, SOFTWARE FUNDAMENTAL, P551
   Peitek N, 2021, PROC INT CONF SOFTW, P524, DOI 10.1109/ICSE43902.2021.00056
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Rahman F, 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, ESEC/FSE '11, P322, DOI DOI 10.1145/2025113
   Santos EA, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P504, DOI [10.1109/MSR.2016.065, 10.1145/2901739.2903493]
   Scalabrino S, 2021, IEEE T SOFTWARE ENG, V47, P595, DOI 10.1109/TSE.2019.2901468
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Stroggylos K., 2007, P 5 INT WORKSH SOFTW, P10, DOI [10.1109/WOSQ.2007.11, DOI 10.1109/WOSQ.2007.11]
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Tian YC, 2022, PROC INT CONF SOFTW, P2389, DOI 10.1145/3510003.3510205
   Trautsch A, 2021, REPLICATION KIT
   Trautsch A, 2020, PROC INT CONF SOFTW, P25, DOI 10.1145/3377812.3382139
   Trautsch A, 2020, EMPIR SOFTW ENG, V25, P5137, DOI 10.1007/s10664-020-09880-1
   Trautsch F, 2018, EMPIR SOFTW ENG, V23, P1036, DOI 10.1007/s10664-017-9537-x
   von der Mosel J, 2023, IEEE T SOFTWARE ENG, V49, P1487, DOI 10.1109/TSE.2022.3178469
   Wagner S, 2012, PROC INT CONF SOFTW, P1133, DOI 10.1109/ICSE.2012.6227106
   Wang S, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106408
   Wohlin C., 2000, Experimentation in Software Engineering: An Introduction, V1, DOI DOI 10.1007/978-1-4615-4625-2
   Yan M, 2016, J SYST SOFTWARE, V113, P296, DOI 10.1016/j.jss.2015.12.019
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
NR 71
TC 4
Z9 4
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 30
DI 10.1007/s10664-022-10257-9
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7V5RH
UT WOS:000912870500001
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Aktas, EU
   Yilmaz, C
AF Aktas, Ethem Utku
   Yilmaz, Cemal
TI Using Screenshot Attachments in Issue Reports for Triaging
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Issue triaging; Issule report assignment; Optical character recognition;
   Text classification; Support vector machines
ID BUG; ASSIGNMENT; CLASSIFICATION; ACCURATE; TESTS
AB In previous work, we deployed IssueTAG, which uses the one-line summary and the description fields of the issue reports to automatically assign them to the stakeholders, who are responsible for resolving the reported issues. Since its deployment on January 12, 2018 at Softtech - the software subsidiary of the largest private bank in Turkey, IssueTAG has made a total of 301,752 assignments (as of November 2021). One observation we make is that a large fraction of the issue reports submitted to Softtech has screenshot attachments and, in the presence of such attachments, the reports often convey less information in their one-line summary and the description fields, which tends to reduce the assignment accuracy. In this work, we use the screenshot attachments as an additional source of information to further improve the assignment accuracy, which, to the best of our knowledge, has not been studied before for automatic issue assignments. In particular, we develop a number of multi-source assignment models, which use both the issue reports and the screenshot attachments, as well as a number of single source models, which use either the issue reports or the screenshot attachments, and empirically evaluate them on real issue reports. Compared to the currently deployed single-source model in the field, the best multi-source model improved the assignment accuracy from 0.848 to 0.855 at an acceptable overhead cost, reducing the overall 3.3 percentage-point deficit between the human triagers and the deployed system by 0.7 points.
C1 [Aktas, Ethem Utku] Softtech Inc, Res & Dev Ctr, TR-34947 Istanbul, Turkey.
   [Yilmaz, Cemal] Sabanci Univ, Fac Engn & Nat Sci, TR-34956 Istanbul, Turkey.
C3 Sabanci University
RP Aktas, EU (corresponding author), Softtech Inc, Res & Dev Ctr, TR-34947 Istanbul, Turkey.
EM utku.aktas@softtech.com.tr; cyilmaz@sabanciuniv.edu
OI Aktas, Ethem Utku/0000-0001-9522-5357
CR Ahsan SN, 2009, 2009 FOURTH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING ADVANCES (ICSEA 2009), P216, DOI 10.1109/ICSEA.2009.92
   Aktas EU, 2020, PROC INT CONF SOFTW, P292, DOI 10.1145/3377812.3390805
   Aktas EU, 2020, EMPIR SOFTW ENG, V25, P3544, DOI 10.1007/s10664-020-09846-3
   Aktas EU, 2020, 2020 28 SIGNAL PROCE, P1
   Alenezi Mamdouh, 2013, Journal of Software, V8, P2185, DOI 10.4304/jsw.8.9.2185-2190
   [Anonymous], 1992, The analysis of contingency tables
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Anvik J, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000794
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Aung TWW, 2022, J SYST SOFTWARE, V184, DOI 10.1016/j.jss.2021.111133
   Baysal O, 2009, INT C PROGRAM COMPRE, P297, DOI 10.1109/ICPC.2009.5090066
   Bernal-Cárdenas C, 2020, PROC INT CONF SOFTW, P309, DOI 10.1145/3377811.3380328
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bhattacharya P, 2012, J SYST SOFTWARE, V85, P2275, DOI 10.1016/j.jss.2012.04.053
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Bouckaert RR, 2004, LECT NOTES ARTIF INT, V3056, P3
   Chaparro O, 2017, DETECTING MISSING IN
   Chen JJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P364, DOI 10.1109/ASE.2019.00042
   Chen JJ, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P111, DOI 10.1109/ICSE-SEIP.2019.00020
   Chmielowski L, 2021, PROGR IMAGE PROCESSI, P153
   Chollet F., 2015, KERAS
   Cooper N, 2021, PROC INT CONF SOFTW, P957, DOI 10.1109/ICSE43902.2021.00091
   Dedik V, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P363, DOI 10.1109/SEAA.2016.20
   Dietterich TG, 1998, NEURAL COMPUT, V10, P1895, DOI 10.1162/089976698300017197
   Giger E., 2010, P 2 INT WORKSH REC S, P52
   Goodfellow I, 2016, ADAPT COMPUT MACH LE, P1
   Gu JZ, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1296, DOI 10.1145/3368089.3417061
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Helming J, 2011, COMM COM INF SC, V230, P236
   Herbold S, 2020, EMPIR SOFTW ENG, V25, P5333, DOI 10.1007/s10664-020-09885-w
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hu H, 2014, PROC INT SYMP SOFTW, P122, DOI 10.1109/ISSRE.2014.17
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Joachims Thorsten, 1998, EUROPEAN C MACHINE L, P137, DOI 10.1007/
   Jonsson L, 2016, EMPIR SOFTW ENG, V21, P1533, DOI 10.1007/s10664-015-9401-9
   Joulin A., 2017, P 15 C EUR CHAPT ASS, P427, DOI DOI 10.18653/V1/E17-2068
   Just S., 2008, P 16 ACM SIGSOFT INT, P308
   Lamkanfi Ahmed, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P1, DOI 10.1109/MSR.2010.5463284
   Lee SR, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P926, DOI 10.1145/3106237.3117776
   Lin ZP, 2009, INT SYMP EMP SOFTWAR, P452
   Mani S, 2019, PROCEEDINGS OF THE 6TH ACM IKDD CODS AND 24TH COMAD, P171, DOI 10.1145/3297001.3297023
   Menzies T, 2008, PROC IEEE INT CONF S, P346, DOI 10.1109/ICSM.2008.4658083
   Murphy G., 2004, P 16 INT C SOFTW ENG
   Nadeau C, 2003, MACH LEARN, V52, P239, DOI 10.1023/A:1024068626366
   Oliveira P, 2021, ARXIV
   Pandey N, 2017, INNOV SYST SOFTW ENG, V13, P279, DOI 10.1007/s11334-017-0294-1
   Park J.-w., 2011, Costriage: a cost-aware triage algorithm for bug reporting systems, V25, P139, DOI DOI 10.1609/AAAI.V25I1.7839
   Paszke A, 2019, ADV NEUR IN, V32
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Podgurski A, 2003, PROC INT CONF SOFTW, P465, DOI 10.1109/ICSE.2003.1201224
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Sajedi-Badashian A, 2020, SOFTWARE PRACT EXPER, V50, P1539, DOI 10.1002/spe.2830
   Sanderson M, 2010, NAT LANG ENG, V16, P100, DOI 10.1017/S1351324909005129
   Schuster M, 1997, IEEE T SIGNAL PROCES, V45, P2673, DOI 10.1109/78.650093
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Smith R, 2007, PROC INT CONF DOC, P629, DOI 10.1109/icdar.2007.4376991
   Su YQ, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P191, DOI 10.1109/ASE51524.2021.9678574
   Truong C.A.O.A.V.N, 2018, ARXIV
   WASSERTHEIL S, 1970, BIOMETRICS, V26, P588, DOI 10.2307/2529115
   Weiss C, 2007, P 4 INT WORKSH MIN S, P1, DOI [10.1109/MSR.2007.13, DOI 10.1109/MSR.2007.13]
   Weisstein Eric W., 2004, Bonferroni correction
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Witten IH, 2017, DATA MINING: PRACTICAL MACHINE LEARNING TOOLS AND TECHNIQUES, 4TH EDITION, P161, DOI 10.1016/B978-0-12-804291-5.00005-2
   Xia X, 2013, WORK CONF REVERSE EN, P72, DOI 10.1109/WCRE.2013.6671282
   Xie X, 2012, P 8 INT C PRED MOD S, P19, DOI [DOI 10.1145/2365324.2365329, 10.1145/2365324.2365329]
   Zhang HY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1042, DOI 10.1109/ICSE.2013.6606654
   Zhang W, 2020, PROC IEEE INT CONF S, P727, DOI 10.1109/ICSME46990.2020.00082
NR 67
TC 2
Z9 2
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 181
DI 10.1007/s10664-022-10228-0
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4T0QQ
UT WOS:000857833900001
DA 2024-07-18
ER

PT J
AU Tao, W
   Wang, YL
   Shi, ES
   Du, L
   Han, S
   Zhang, HY
   Zhang, DM
   Zhang, WQ
AF Tao, Wei
   Wang, Yanlin
   Shi, Ensheng
   Du, Lun
   Han, Shi
   Zhang, Hongyu
   Zhang, Dongmei
   Zhang, Wenqiang
TI A large-scale empirical study of commit message generation: models,
   datasets and evaluation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Commit message generation; Empirical study; Evaluation; Dataset;
   Multi-lingual programming languages
AB Commit messages are natural language descriptions of code changes, which are important for program understanding and maintenance. However, writing commit messages manually is time-consuming and laborious, especially when the code is updated frequently. Various approaches utilizing generation or retrieval techniques have been proposed to automatically generate commit messages. To achieve a better understanding of how the existing approaches perform in solving this problem, this paper conducts a systematic and in-depth analysis of the state-of-the-art models and datasets. We find that: (1) Different variants of the BLEU metric used in previous works affect the evaluation. (2) Most datasets are crawled only from Java repositories while repositories in other programming languages are not sufficiently explored. (3) Dataset splitting strategies can influence the performance of existing models by a large margin. (4) For pre-trained models, fune-tuning with different multi-programming-language combinations can influence their performance. Based on these findings, we collect a large-scale, information-rich, Multi-language Commit Message Dataset (MCMD). Using MCMD, we conduct extensive experiments under different experiment settings including splitting strategies and multi-programming-language combinations. Furthermore, we provide suggestions for comprehensively evaluating commit message generation models and discuss possible future research directions. We believe our work can help practitioners and researchers better evaluate and select models for automatic commit message generation. Our source code and data are available at https://anonymous.4open. science/r/CommitMessageEmpirical.
C1 [Tao, Wei; Zhang, Wenqiang] Fudan Univ, Shanghai, Peoples R China.
   [Wang, Yanlin] Sun Yat Sen Univ, Sch Software Engn, Zhuhai, Peoples R China.
   [Shi, Ensheng] Xi An Jiao Tong Univ, Xian, Peoples R China.
   [Du, Lun; Han, Shi; Zhang, Dongmei] Microsoft Res Asia, Beijing, Peoples R China.
   [Zhang, Hongyu] Univ Newcastle, Callaghan, NSW, Australia.
C3 Fudan University; Sun Yat Sen University; Xi'an Jiaotong University;
   Microsoft Research Asia; Microsoft; University of Newcastle
RP Wang, YL (corresponding author), Sun Yat Sen Univ, Sch Software Engn, Zhuhai, Peoples R China.
EM wtao18@fudan.edu.cn; wangylin36@mail.sysu.edu.cn;
   1530129650@stu.xjtu.edu.cn; lun.du@microsoft.com; shihan@microsoft.com;
   hongyu.zhang@newcastle.edu.au; dongmeiz@microsoft.com;
   wqzhang@fudan.edu.cn
RI Du, Lun/H-6417-2018; zhang, dongmei/B-8011-2013; Tao, Wei/KGL-6588-2024;
   Shi, Ensheng/JFS-6796-2023
OI Du, Lun/0000-0002-7625-0650; Tao, Wei/0000-0002-1800-1904; Wang,
   Yanlin/0000-0001-7761-7269
CR Ahmad Wasi Uddin, 2021, P 2021 C N AM CHAPT, P2655
   Alon U., 2019, 7 INT C LEARNING REP
   [Anonymous], 2007, ANN M ASS COMPUTATIO
   [Anonymous], 2015, P 2015 C EMP METH NA, DOI [10.18653/v1/D15-1166, DOI 10.48550/ARXIV.1508.04025]
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Barnett JG, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P496, DOI [10.1109/MSR.2016.063, 10.1145/2901739.2903496]
   Biswas P, 2005, I CONF VLSI DESIGN, P651
   Buse Raymond P. L., 2010, P 25 IEEE ACM INT C, P33, DOI DOI 10.1145/1858996.1859005
   Chen Boxing, 2014, P 9 WORKSHOP STAT MA, P362, DOI DOI 10.3115/V1/W14-3346
   Clark K, 2020, ICLR OPENREVIEW
   Conneau Alexis, 2020, P 58 ANN M ASS COMPU, P6022, DOI 10.18653/v1/2020.acl-main.536
   Devlin J., 2019, P 2019 C N AM CHAPTE, P4171
   Di Sorbo A, 2021, PROC IEEE INT CONF S, P569, DOI 10.1109/ICSME52107.2021.00058
   Dragan N, 2006, PROC IEEE INT CONF S, P24
   Feng ZY, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P1536
   Cortés-Coy LF, 2014, IEEE INT WORK C SO, P275, DOI 10.1109/SCAM.2014.14
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Guo Daya, 2021, INT C LEARN REPR DAT
   Hayes AF, 2007, COMMUN METHODS MEAS, V1, P77, DOI 10.1080/19312450709336664
   Hindle A, 2009, INT C PROGRAM COMPRE, P30, DOI 10.1109/ICPC.2009.5090025
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Huang Y, 2020, J COMPUT SCI TECH-CH, V35, P1258, DOI 10.1007/s11390-020-0496-0
   Jiang S, 2017, ASE
   Jiang S, 2017, P 25 INT C PROGR COM
   Jiang SY, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1280, DOI 10.1109/ASE.2019.00162
   Kanade A, 2020, PREPRINT
   Kendall MG, 1945, BIOMETRIKA, V33, P239, DOI 10.2307/2332303
   Lample G, 2018, ICLR POSTER OPENREVI
   LeClair A, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P3931
   Lin Chin-Yew, 2004, P 42 ANN M AOC COMP, P605, DOI [DOI 10.3115/.1218955.1219032, DOI 10.3115/1218955.1219032]
   Linares-Vásquez M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P709, DOI 10.1109/ICSE.2015.229
   Liu C, 2022, ACM COMPUT SURV, V54, DOI 10.1145/3480027
   Liu S., 2020, TMR Mod. Herb. Med, P1
   Liu Yinhan, 2019, ARXIV190711692
   Liu ZX, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P176, DOI 10.1109/ASE.2019.00026
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Loyola P, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 2, P287, DOI 10.18653/v1/P17-2045
   Loyola Pablo, 2018, P 11 INT C NAT LANG, P119, DOI DOI 10.18653/V1/W18-6513
   Ma QS, 2019, FOURTH CONFERENCE ON MACHINE TRANSLATION (WMT 2019), P62
   Mogotsi IC, 2010, INTRO INFORM RETRIEV, V13, P192
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Moreno L, 2012, IEEE INT CONF AUTOM, P358, DOI 10.1145/2351676.2351747
   Myers J. L., 2013, Research design and statistical analysis, DOI DOI 10.4324/9780203726631
   Nie LY, 2021, NEUROCOMPUTING, V459, P97, DOI 10.1016/j.neucom.2021.05.039
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Qin Liu, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P299, DOI 10.1109/MSR.2019.00056
   Ranzato M., 2016, ICLR POSTER
   Rebai S, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106332
   Ren FY, 2004, IEEE SYMP COMP COMMU, P748, DOI 10.1109/ISCC.2004.1358630
   See A, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1073, DOI 10.18653/v1/P17-1099
   Sennrich Rico, 2017, P SOFTW DEM 15 C EUR, P65
   Shen JF, 2016, P INT COMP SOFTW APP, P103, DOI 10.1109/COMPSAC.2016.162
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Swanson E. B., 1976, 2nd International Conference on Software Engineering, P492
   Tao W, 2021, PROC IEEE INT CONF S, P126, DOI 10.1109/ICSME52107.2021.00018
   Wang B, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P260, DOI 10.1109/SANER50967.2021.00032
   Wang HY, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3464689
   Wang X, 2022, NAACL HLT
   Wubben S., 2019, P 12 INT C NAT LANG
   Xie XY, 2021, IEEE INT C INT ROBOT, P4869, DOI 10.1109/IROS51168.2021.9636559
   Xu SB, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P3975
   Xue N, 2011, NAT LANG ENG, V17, P419
   Yang Y., 2020, ACM Computing Surveys (CSUR)
NR 65
TC 6
Z9 6
U1 6
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 198
DI 10.1007/s10664-022-10219-1
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 5Q5BQ
UT WOS:000873847400001
DA 2024-07-18
ER

PT J
AU Ocariza, FS
AF Ocariza, Frolin S., Jr.
TI On the Effectiveness of Bisection in Performance Regression Localization
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software performance; Bisection; Empirical study; Bug localization
ID BINARY SEARCH
AB Performance regressions can have a drastic impact on the usability of a software application. The crucial task of localizing such regressions can be achieved using bisection, which attempts to find the bug-introducing commit using binary search. This approach is used extensively by many development teams, but it is an inherently heuristical approach when applied to performance regressions, and therefore, does not have correctness guarantees. Unfortunately, bisection is also time-consuming, which implies the need to assess its effectiveness prior to running it. To this end, the goal of this study is to analyze the effectiveness of bisection for performance regressions. This goal is achieved by first formulating a metric that quantifies the probability of a successful bisection, and extracting a list of input parameters - the contributing properties - that potentially impact its value; a sensitivity analysis is then conducted on these properties to understand the extent of their impact. Furthermore, an empirical study of 310 bug reports describing performance regressions in 17 real-world applications is conducted, to better understand what these contributing properties look like in practice. The results show that while bisection can be highly effective in localizing real-world performance regressions, this effectiveness is sensitive to the contributing properties, especially the choice of baseline and the distributions at each commit. The results also reveal that most bug reports do not provide sufficient information to help developers properly choose values and metrics that can maximize the effectiveness, which implies the need for measures to fill this information gap.
C1 [Ocariza, Frolin S., Jr.] SAP Canada Inc, Vancouver, BC, Canada.
RP Ocariza, FS (corresponding author), SAP Canada Inc, Vancouver, BC, Canada.
EM frolin.ocariza@sap.com
CR Ahmed TM, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P1, DOI [10.1145/2901739.2901774, 10.1109/MSR.2016.011]
   Akinshin A., 2019, PRONET BENCHMARKING, DOI [10.1007/978-1-4842-4941-3, DOI 10.1007/978-1-4842-4941-3]
   An G, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1459, DOI 10.1145/3468264.3473129
   [Anonymous], 2018, DYNATRACE
   [Anonymous], 2018, YOURKIT
   Arif MM, 2018, EMPIR SOFTW ENG, V23, P1490, DOI 10.1007/s10664-017-9553-x
   Artho Cyrille, 2011, International Journal on Software Tools for Technology Transfer, V13, P223, DOI 10.1007/s10009-010-0139-9
   Automattic, 2021, AUT WORDPRESS CAL
   Ben Or M, 2008, ANN IEEE SYMP FOUND, P221, DOI 10.1109/FOCS.2008.58
   Bezemer C, 2014, J SOFTW-EVOL PROC, V26, P1193, DOI 10.1002/smr.1657
   Bezemer CP, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P535, DOI 10.1109/SANER.2015.7081872
   Bittner DM, 2018, LECT NOTES COMPUT SC, V10879, P20, DOI 10.1007/978-3-319-94147-9_3
   Chen JF, 2017, PROC IEEE INT CONF S, P341, DOI 10.1109/ICSME.2017.13
   Chen TS, 2015, IEEE T COMPUT, V64, P1442, DOI 10.1109/TC.2014.2315614
   Chen YQ, 2019, PROC INT SYMP SOFTW, P70, DOI 10.1109/ISSRE.2019.00017
   Cockroach Labs, 2021, COCKROACHDB
   Couder C., 2009, FIGHTING REGRESSIONS
   Crovella ME, 1998, PRACTICAL GUIDE TO HEAVY TAILS, P3
   Crovella ME, 2000, LECT NOTES COMPUT SC, V1786, P1
   Dahl R., Node.js
   Della Toffola L, 2015, ACM SIGPLAN NOTICES, V50, P607, DOI [10.1145/2858965.2814290, 10.1145/2814270.2814290]
   DERENIOWSKI D, 2021, P INT WORKSH COMB AL, P265
   Elastic NV, 2021, ELASTICSEARCH
   Epa N S, 2019, P INT S ALG COMP ISA
   Exadv1, 2021, SPAC STAT 13
   Flora Parminder, 2014, P 11 WORK C MIN SOFT, P232, DOI [DOI 10.1145/2597073.2597092EVENT-PLACE, 10.1145/2597073.2597092event-place:Hyderabad,India, DOI 10.1145/2597073.2597092EVENT-PLACE:HYDERABAD,INDIA]
   Fossil, 2006, FOSS BIS COMM DOC
   Gaviar A, 2019, GITHUBS TOP 100 MOST
   Git, 2009, GIT BIS DOC
   Google, 2021, GOOGL FLUTT
   Google, 2021, BIS PERF REGR
   Google, 2021, KUBERNETES
   Google, 2018, CHROM DEVTOOLS OV
   Google, TensorFlow
   Graham S. L., 1982, SIGPLAN Notices, V17, P120, DOI 10.1145/872726.806987
   Gregg, 2016, ACM QUEUE MAGAZINE, V14, P91, DOI DOI 10.1145/2927299.2927301
   Gross T, 1997, AADEBUG, P185
   Han X, 2019, J SYST SOFTWARE, V156, P268, DOI 10.1016/j.jss.2019.06.100
   Han X, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962602
   Harchol-Balter Mor, 2013, Performance modeling and design of computer systems: queueing theory in action
   Heger Christoph, 2013, P 4 ACM SPEC INT C P, P27, DOI DOI 10.1145/2479871.2479879
   INMAN HF, 1989, COMMUN STAT THEORY, V18, P3851, DOI 10.1080/03610928908830127
   Jedynak B, 2012, J APPL PROBAB, V49, P114, DOI 10.1239/jap/1331216837
   Jung JH, 2019, PROC VLDB ENDOW, V13, P57, DOI 10.14778/3357377.3357382
   Karp RM, 2007, PROCEEDINGS OF THE EIGHTEENTH ANNUAL ACM-SIAM SYMPOSIUM ON DISCRETE ALGORITHMS, P881
   Keenan J E, 2019, MULT BIS ISNT EN DEB
   Larabel M, 2009, PHOROMATIC TRACKER L
   Larabel M, 2009, AUTONOMOUSLY FINDING
   Leitner P., 2017, P 8 ACMSPEC INT C PE, P373
   Linares-Vásquez M, 2015, PROC IEEE INT CONF S, P352, DOI 10.1109/ICSM.2015.7332486
   Luo Q, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P25, DOI [10.1109/MSR.2016.013, 10.1145/2901739.2901765]
   Malik H., 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P201, DOI 10.1109/ISSRE.2010.43
   Mercurial, 2005, MERC BIS COMM DOC
   Microsoft, 2015, COMP PERF DAT FIL
   Microsoft, 2021, MICR NET COREFX
   Microsoft, 2021, PERF 6 REGR SYST TEX
   Microsoft, 2018, START PERF REGR
   Microsoft, 2021, MICR NET ROSL
   Microsoft, 2021, MICR VIS STUD COD
   Moby Project, 2021, MOB
   Mozilla Corporation, 2021, SERV
   Murphy W, 2018, INVESTIGATING PERFOR
   Najafi A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P279, DOI 10.1145/3338906.3338944
   Neville-Neil George V., 2021, ACM Queue, V19, P37, DOI 10.1145/3475965.3477581
   Nistor A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P902, DOI 10.1109/ICSE.2015.100
   Nistor A, 2013, IEEE WORK CONF MIN S, P237, DOI 10.1109/MSR.2013.6624035
   NixOS, 2021, NIXOS PACK COLL
   Nowak R, 2009, ADV NEURAL INFORM PR, V22, P1366
   Ocariza F, 2020, WEB APPL DEBUGGING U
   Ocariza Frolin  Jr., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P55, DOI 10.1109/ESEM.2013.18
   Ocariza FS, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1750
   Ocariza FS, 2017, IEEE T SOFTWARE ENG, V43, P128, DOI 10.1109/TSE.2016.2586066
   Olianas D, 2021, IEEE INT CONF SOFTW, P460, DOI 10.1109/ICST49551.2021.00060
   PELC A, 1989, THEOR COMPUT SCI, V63, P185, DOI 10.1016/0304-3975(89)90077-7
   Pradel M, 2014, ACM SIGPLAN NOTICES, V49, P33, DOI [10.1145/2660193.2660233, 10.1145/2714064.2660233]
   Red Hat, 2021, ANSIBLE
   Red Hat, 2021, RED HAT OPENSHIFT
   RIVEST RL, 1980, J COMPUT SYST SCI, V20, P396, DOI 10.1016/0022-0000(80)90014-8
   Rogora D, 2020, P EUR C COMP SYST EU, P1
   Saha R, 2017, LECT NOTES COMPUT SC, V10202, P60, DOI 10.1007/978-3-662-54494-5_4
   Sánchez AB, 2020, IEEE ACCESS, V8, P107214, DOI 10.1109/ACCESS.2020.3000928
   Alcocer JPS, 2019, 2019 SEVENTH IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P1, DOI 10.1109/VISSOFT.2019.00009
   Alcocer JPS, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P37, DOI 10.1145/2851553.2851571
   Alcocer JPS, 2016, ACM SIGPLAN NOTICES, V51, P129, DOI [10.1145/2816707.2816718, 10.1145/2936313.2816718]
   Sasaki H, 2017, I S WORKL CHAR PROC, P135, DOI 10.1109/IISWC.2017.8167771
   Selakovic M, 2016, PROC INT CONF SOFTW, P61, DOI 10.1145/2884781.2884829
   Shang Weiyi., 2015, P 6 ACMSPEC INT C PE, P15
   The Rust Foundation, 2021, RUST
   Tizpaz-Niari Saeid, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P189, DOI 10.1145/3395363.3404540
   Tizpaz-Niari S, 2018, AAAI CONF ARTIF INTE, P2468
   Tsiligkaridis T, 2016, IEEE INT SYMP INFO, P2699, DOI 10.1109/ISIT.2016.7541789
   Waeber R, 2013, SIAM J CONTROL OPTIM, V51, P2261, DOI 10.1137/120861898
   Weitzman MS., 1970, MEASURES OVERLAP INC, V3
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
   Zhao YT, 2020, PROCEEDINGS OF THE ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'20), P181, DOI 10.1145/3358960.3379130
NR 96
TC 1
Z9 1
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2022
VL 27
IS 4
AR 95
DI 10.1007/s10664-022-10152-3
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0W5HM
UT WOS:000789057600001
DA 2024-07-18
ER

PT J
AU Saidani, I
   Ouni, A
   Ahasanuzzaman, M
   Hassan, S
   Mkaouer, MW
   Hassan, AE
AF Saidani, Islem
   Ouni, Ali
   Ahasanuzzaman, Md
   Hassan, Safwat
   Mkaouer, Mohamed Wiem
   Hassan, Ahmed E.
TI Tracking bad updates in mobile apps: a search-based approach
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mobile apps; Software releases; Bad updates; User rating; Search-based
   software engineering; Android; Google Play Store
ID CLASSIFICATION; MULTICLASS
AB The rapid growth of the mobile applications development industry raises several new challenges to developers as they need to respond quickly to the users' needs in a world of continuous changes. Indeed, mobile apps undergo frequent updates to introduce new features, fix reported issues or adapt to new technological or environment changes. Hence, introducing changes in this context is risky and can harmfully impact the application rating and competitiveness. Thus, ensuring that the application updates are deployed in a controlled way is of crucial importance. To better support mobile applications evolution and cut-off the costs of users dissatisfaction, we propose in this paper, AppTracker, a novel approach to automatically track bad release updates in Android applications (i.e., releases with higher percentage of negative reviews relative to the prior releases). We formulate the problem as a three-class classification problem to label the apps updates as bad, neutral or good. To solve this problem, we evolve bad release detection rules using Multi-Objective Genetic Programming (MOGP) based on the adaptation of the Non-dominated Sorting Genetic Algorithm (NSGA-II). In particular, the search process aims to provide the optimal trade-off between two conflicting objectives to deal with the considered classes. We evaluate our approach and investigate the performance of both within-project and cross-project validation scenarios on a benchmark of 50,700 updates from 1,717 free Android apps from Google Play Store. The statistical tests revealed that our approach achieves a clear advantage over machine learning approaches (e.g., random forest, decision tree, etc.) with significant improvements of 18% and 6% in terms of F1-score within-project and cross-project validations, respectively. Furthermore, the features analysis reveals that (1) the previous updates ratings and (2) the APK size are the most important features for both within and cross-project scenarios.
C1 [Saidani, Islem; Ouni, Ali] Univ Quebec, ETS Montreal, Montreal, PQ, Canada.
   [Ahasanuzzaman, Md; Hassan, Ahmed E.] Queens Univ, Kingston, ON, Canada.
   [Hassan, Safwat] Thompson Rivers Univ, Kamloops, BC, Canada.
   [Mkaouer, Mohamed Wiem] Rochester Inst Technol, Rochester, NY 14623 USA.
C3 University of Quebec; Ecole de Technologie Superieure - Canada;
   University of Quebec Montreal; Queens University - Canada; Rochester
   Institute of Technology
RP Saidani, I (corresponding author), Univ Quebec, ETS Montreal, Montreal, PQ, Canada.
EM islem.saidani.1@ens.etsmtl.ca; ali.ouni@etsmtl.ca;
   md.ahasanuzzaman@queensu.ca; shassan@tru.ca; mwmvse@rit.edu;
   ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Mkaouer, Mohamed Wiem/N-7476-2017;
   Ouni, Ali/Y-8280-2019; Hassan, Safwat/JWP-1498-2024
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Mkaouer, Mohamed
   Wiem/0000-0001-6010-7561; Ouni, Ali/0000-0003-4708-0362; 
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   [RGPIN-2018-05960]
FX This research has been funded by the Natural Sciences and Engineering
   Research Council of Canada (NSERC) RGPIN-2018-05960.
CR Ahasanuzzaman M, 2022, IEEE T SOFTWARE ENG, V48, P209, DOI 10.1109/TSE.2020.2983399
   Ahasanuzzaman M, 2020, EMPIR SOFTW ENG, V25, P824, DOI 10.1007/s10664-019-09766-x
   Akdeniz, 2013, GOOGL PLAY CRAWL
   Almarimi N, 2020, INT CONF GLOBAL SOFT, P43, DOI 10.1145/3372787.3390439
   [Anonymous], 2017, ARXIV170207681
   [Anonymous], 2006, Parameter estimation using grid search with scikit-learn
   AppAnnie, 2020, APP ANN
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Armstrong RA, 2014, OPHTHAL PHYSL OPT, V34, P502, DOI 10.1111/opo.12131
   Assi M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09988-y
   Bhowan U, 2010, LECT NOTES COMPUT SC, V6021, P1, DOI 10.1007/978-3-642-12148-7_1
   Branco P, 2017, LECT NOTES ARTIF INT, V10234, P698, DOI 10.1007/978-3-319-57454-7_54
   Breiman L, 2001, MACH LEARN, V45, P5, DOI 10.1023/A:1010933404324
   Calciati P, 2018, IEEE WORK CONF MIN S, P142, DOI 10.1145/3196398.3196449
   Calciati P, 2017, IEEE WORK CONF MIN S, P37, DOI 10.1109/MSR.2017.64
   Catolino G, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P99, DOI 10.1109/MOBILESoft.2019.00023
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen QY, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3447808
   Chen Tianqi, 2015, R package version 0.4-2 1.4, V1, P1
   Chen Z, 2007, ELE COM ENG, P1
   Chicco D, 2020, BMC GENOMICS, V21, DOI 10.1186/s12864-019-6413-7
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Darwish SM, 2015, J ADV INFORM TECHNOL, V6
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Domínguez-Alvarez D, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON APP MARKET ANALYTICS (WAMA '19), P15, DOI 10.1145/3340496.3342762
   Eberius J, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL SYMPOSIUM ON BIG DATA COMPUTING (BDC), P41, DOI 10.1109/BDC.2015.30
   El Zarif O, 2020, IEEE WORK CONF MIN S, P339, DOI 10.1145/3379597.3387456
   Espejo PG, 2010, IEEE T SYST MAN CY C, V40, P121, DOI 10.1109/TSMCC.2009.2033566
   Evans BP, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'19), P1012, DOI 10.1145/3321707.3321726
   Fisher A, 2019, J MACH LEARN RES, V20
   Hamdi O, 2021, INFORM SOFTWARE TECH, V140, DOI 10.1016/j.infsof.2021.106699
   Hamdi O, 2021, 2021 IEEE/ACM 8TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2021), P28, DOI 10.1109/MobileSoft52590.2021.00010
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Harman M, 2001, INFORM SOFTWARE TECH, V43, P833, DOI 10.1016/S0950-5849(01)00189-6
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harman M, 2012, LECT NOTES COMPUT SC, V7007, P1
   Hassan MM, 2021, J SUPERCOMPUT, V77, P2237, DOI 10.1007/s11227-020-03361-4
   Hassan S, 2020, IEEE T SOFTWARE ENG, V46, P773, DOI 10.1109/TSE.2018.2869395
   Hassan S, 2017, EMPIR SOFTW ENG, V22, P505, DOI 10.1007/s10664-016-9435-7
   Hastie T., 2009, The Elements of Statistical Learning: Data Mining, Inference, and Prediction, DOI DOI 10.1007/978-0-387-84858-7
   Hossin M., 2015, INT J DATA MIN KNOWL, V5, P1, DOI DOI 10.5121/IJDKP.2015.5201
   Hu HY, 2019, EMPIR SOFTW ENG, V24, P7, DOI 10.1007/s10664-018-9617-6
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Kabinna S, 2018, EMPIR SOFTW ENG, V23, P290, DOI 10.1007/s10664-017-9518-0
   Kessentini Marouane, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P122, DOI 10.1109/MOBILESoft.2017.29
   Kessentini W, 2014, IEEE T SOFTWARE ENG, V40, P841, DOI 10.1109/TSE.2014.2331057
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Kishore JK, 2000, IEEE T EVOLUT COMPUT, V4, P242, DOI 10.1109/4235.873235
   Klepper S, 2015, 2015 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P5, DOI 10.1109/RCoSE.2015.9
   learn S., 2006, SCIKIT LEARN MULTICL
   learn S., 2006, SCIKIT LEARN CLASSIF
   Li H, 2017, EMPIR SOFTW ENG, V22, P1831, DOI 10.1007/s10664-016-9467-z
   Loveard T, 2001, IEEE C EVOL COMPUTAT, P1070, DOI 10.1109/CEC.2001.934310
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Martens D, 2019, IEEE SOFTWARE, V36, P32, DOI 10.1109/MS.2019.2923603
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Martin W, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P435, DOI 10.1145/2950290.2950320
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Nayebi M, 2017, INT SYMP EMP SOFTWAR, P324, DOI 10.1109/ESEM.2017.46
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   Nejati S., 2019, 11 INT S SEARCH BAS, V11664
   Noei E, 2017, EMPIR SOFTW ENG, V22, P3088, DOI 10.1007/s10664-017-9507-3
   Openja M, 2020, PROC IEEE INT CONF S, P104, DOI 10.1109/ICSME46990.2020.00020
   Ouni Ali, 2020, GECCO'20. Proceedings of the 2020 Genetic and Evolutionary Computation Conference Companion, P1114, DOI 10.1145/3377929.3389887
   Ouni A, 2017, IEEE T SERV COMPUT, V10, P603, DOI 10.1109/TSC.2015.2502595
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P347, DOI 10.1109/ICSM.2012.6405292
   Ouni A, 2013, AUTOMAT SOFTW ENG, V20, P47, DOI 10.1007/s10515-011-0098-8
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella S, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1023, DOI 10.1145/2950290.2983938
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Qiu FC, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1586, DOI 10.1145/3368089.3417927
   Rocha A, 2014, IEEE T NEUR NET LEAR, V25, P289, DOI 10.1109/TNNLS.2013.2274735
   Royston P., 1992, STAT COMPUT, V2, P117, DOI [DOI 10.1007/BF01891203, 10.1007/BF01891203]
   Saidani I, 2021, IEEE T SOFTW ENG
   Saidani I, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106392
   Sarro F, 2018, INT REQUIR ENG CONF, P76, DOI 10.1109/RE.2018.00018
   Scalabrino S, 2016, LECT NOTES COMPUT SC, V9962, P64, DOI 10.1007/978-3-319-47106-8_5
   Smart W, 2005, LECT NOTES COMPUT SC, V3447, P227
   Sokolova M, 2009, INFORM PROCESS MANAG, V45, P427, DOI 10.1016/j.ipm.2009.03.002
   Su T, 2022, IEEE T SOFTWARE ENG, V48, P1115, DOI 10.1109/TSE.2020.3013438
   Tanha J, 2020, J BIG DATA-GER, V7, DOI 10.1186/s40537-020-00349-y
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Thomas SW, 2014, EMPIR SOFTW ENG, V19, P182, DOI 10.1007/s10664-012-9219-7
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Wilcoxon Frank, 1970, SELECTED TABLES MATH, V1, P171, DOI [DOI 10.1002/9780471462422.EOCT, DOI 10.1007/SPRINGERREFERENCE_205698]
   XGBoost, 2006, XGBOOST PYTH PACK
   Xia J, 2017, 2017 14TH WEB INFORMATION SYSTEMS AND APPLICATIONS CONFERENCE (WISA 2017), P234, DOI 10.1109/WISA.2017.53
   Xia X, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962606
   Yan M, 2022, IEEE T SOFTWARE ENG, V48, P82, DOI 10.1109/TSE.2020.2978819
   Yan M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1308, DOI 10.1145/3368089.3417048
   Yang AZH, 2021, EMPIR SOFTW ENG, P1
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Zar JH, 2005, ENCY BIOSTAT, V7, DOI DOI 10.1002/0470011815.B2A15150
NR 101
TC 2
Z9 2
U1 1
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2022
VL 27
IS 4
AR 81
DI 10.1007/s10664-022-10125-6
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0I5QL
UT WOS:000779475400001
DA 2024-07-18
ER

PT J
AU Azuma, H
   Matsumoto, S
   Kamei, Y
   Kusumoto, S
AF Azuma, Hideaki
   Matsumoto, Shinsuke
   Kamei, Yasutaka
   Kusumoto, Shinji
TI An empirical study on self-admitted technical debt in Dockerfiles
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Self-admitted technical debt; Technical debt; Container virtualization;
   Docker; Infrastructure as code (IaC)
AB In software development, ad hoc solutions that are intentionally implemented by developers are called self-admitted technical debt (SATD). Because the existence of SATD spreads poor implementations, it is necessary to remove it as soon as possible. Meanwhile, container virtualization has been attracting attention in recent years as a technology to support infrastructure such as servers. Currently, Docker is the de facto standard for container virtualization. In Docker, a file describing how to build a container (Dockerfile) is a set of procedural instructions; thus, it can be considered as a kind of source code. Moreover, because Docker is a relatively new technology, there are few developers who have accumulated good or bad practices for building Docker container. Hence, it is likely that Dockerfiles contain many SATDs, as is the case with general programming language source code analyzed in previous SATD studies. The goal of this paper is to categorize SATDs in Dockerfiles and to share knowledge with developers and researchers. To achieve this goal, we conducted a manual classification for SATDs in Dockerfile. We found that about 3.0% of the comments in Dockerfile are SATD. In addition, we have classified SATDs into five classes and eleven subclasses. Among them, there are some SATDs specific to Docker, such as SATDs for version fixing and for integrity check. The three most common classes of SATD were related to lowering maintainability, testing, and defects.
C1 [Azuma, Hideaki; Matsumoto, Shinsuke; Kusumoto, Shinji] Osaka Univ, Grad Sch Informat Sci & Technol, Osaka, Japan.
   [Kamei, Yasutaka] Kyushu Univ, Fac Informat Sci & Elect Engn, Fukuoka, Japan.
C3 Osaka University; Kyushu University
RP Matsumoto, S (corresponding author), Osaka Univ, Grad Sch Informat Sci & Technol, Osaka, Japan.
EM h-azuma@ist.osaka-u.ac.jp; shinsuke@ist.osaka-u.ac.jp;
   kamei@ait.kyushu-u.ac.jp; kusumoto@ist.osaka-u.ac.jp
FU JSPS KAKENHI [JP18H03222, JP21H04877]
FX This research was partially supported by JSPS KAKENHI JP18H03222 and
   JP21H04877.
CR Alves Nicolli S. R., 2014, 2014 Sixth International Workshop on Managing Technical Debt. Proceedings, P1, DOI 10.1109/MTD.2014.9
   [Anonymous], 2021, RED HAT
   Bavota G, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P315, DOI [10.1109/MSR.2016.040, 10.1145/2901739.2901742]
   Brown Nanette, 2010, P FSE SDP WORKSH FUT, P47
   Cito J, 2017, IEEE WORK CONF MIN S, P323, DOI 10.1109/MSR.2017.67
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Docker, 2020, DOCKER OVERVIEW
   Documentation D, 2020, BEST PRACTICES WRITI
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Fontana F. A., 2012, Proceedings 2012 Third International Workshop on Managing Technical Debt (MTD 2012), P15, DOI 10.1109/MTD.2012.6225993
   Fontana FA, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P16, DOI 10.1109/MTD.2015.7332620
   Haque M.M., 2020, P 14 ACM IEEE INT S, P1, DOI [10.1007/978-3-030-03008-7_87-1, DOI 10.1007/978-3-030-03008-7_87-1]
   Henkel Jordan, 2020, MSR '20: Proceedings of the 17th International Conference on Mining Software Repositories, P528, DOI 10.1145/3379597.3387498
   Henkel J, 2020, PROC INT CONF SOFTW, P38, DOI 10.1145/3377811.3380406
   Huang Q, 2018, EMPIR SOFTW ENG, V23, P418, DOI 10.1007/s10664-017-9522-4
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Hummer Waldemar, 2013, Middleware 2013. ACM/IFIP/USENIX 14th International Middleware Conference. Proceedings: LNCS 8275, P368, DOI 10.1007/978-3-642-45065-5_19
   Jiang YJ, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P45, DOI 10.1109/MSR.2015.12
   Kruchten P, 2012, IEEE SOFTWARE, V29, P18, DOI 10.1109/MS.2012.167
   Krum S., 2014, PROPUPPET
   Liu JK, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P1, DOI 10.1145/3377815.3381377
   Maldonado ED, 2017, PROC IEEE INT CONF S, P238, DOI 10.1109/ICSME.2017.8
   Maldonado ED, 2015, 2015 IEEE 7TH INTERNATIONAL WORKSHOP ON MANAGING TECHNICAL DEBT (MTD) PROCEEDINGS, P9, DOI 10.1109/MTD.2015.7332619
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Martinelli L., 2021, HASKELL DOCKERFILE L
   Mensah S, 2018, J SYST SOFTWARE, V135, P37, DOI 10.1016/j.jss.2017.09.026
   Open Container Initiative, 2020, WHY HAV ALL COMP COM
   Oumaziz MA, 2019, PROC IEEE INT CONF S, P524, DOI 10.1109/ICSME.2019.00086
   Portworx, 2020, ANN CONT AD REP
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Rahman A, 2019, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2019.00033
   Sharma T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P189, DOI [10.1109/MSR.2016.028, 10.1145/2901739.2901761]
   Shu R, 2017, PROCEEDINGS OF THE SEVENTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY (CODASPY'17), P269, DOI 10.1145/3029806.3029832
   Sierra G, 2019, J SYST SOFTWARE, V152, P70, DOI 10.1016/j.jss.2019.02.056
   Taylor MischaVargo., 2014, LEARNING CHEF GUIDE
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Wehaibi S, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P179, DOI 10.1109/SANER.2016.72
   Wu YW, 2020, IEEE WORK CONF MIN S, P76, DOI 10.1145/3379597.3387483
   Zampetti F, 2018, IEEE WORK CONF MIN S, P526, DOI 10.1145/3196398.3196423
   Zazworka N, 2014, SOFTWARE QUAL J, V22, P403, DOI 10.1007/s11219-013-9200-8
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
   Zerouali A, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P491, DOI [10.1109/saner.2019.8668013, 10.1109/SANER.2019.8668013]
   Zhang Y, 2018, P INT COMP SOFTW APP, P138, DOI 10.1109/COMPSAC.2018.00026
NR 43
TC 8
Z9 8
U1 1
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 49
DI 10.1007/s10664-021-10081-7
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YS7TF
UT WOS:000750874900002
OA hybrid
DA 2024-07-18
ER

PT J
AU Mahadi, A
   Ernst, NA
   Tongay, K
AF Mahadi, Alvi
   Ernst, Neil A.
   Tongay, Karan
TI Conclusion stability for natural language based mining of design
   discussions
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mining software design; Supervised learning; Conclusion stability
AB Developer discussions range from in-person hallway chats to comment chains on bug reports. Being able to identify discussions that touch on software design would be helpful in documentation and refactoring software. Design mining is the application of machine learning techniques to correctly label a given discussion artifact, such as a pull request, as pertaining (or not) to design. In this paper we demonstrate a simple example of how design mining works. We then show how conclusion stability is poor on different artifact types and different projects. We show two techniques-augmentation and context specificity-that greatly improve the conclusion stability and cross-project relevance of design mining. Our new approach achieves AUC of 0.88 on within dataset classification and 0.80 on the cross-dataset classification task.
C1 [Mahadi, Alvi; Ernst, Neil A.; Tongay, Karan] Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
C3 University of Victoria
RP Ernst, NA (corresponding author), Univ Victoria, Dept Comp Sci, Victoria, BC, Canada.
EM alvi.utsab@gmail.com; nernst@uvic.ca; karantongay@gmail.com
RI Ernst, Neil/M-3065-2017
OI Ernst, Neil/0000-0001-5992-2366; Tongay, Seth Ariel/0000-0001-8294-984X
CR Alkadhi R, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P357, DOI 10.1109/SANER.2018.8330223
   Alkadhi R, 2017, IEEE WORK CONF MIN S, P436, DOI 10.1109/MSR.2017.43
   [Anonymous], 2008, P 31 ANN INT ACM SIG, DOI [DOI 10.1145/1390334.1390367, 10.1145/]
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Arya D, 2019, PROC INT CONF SOFTW, P454, DOI 10.1109/ICSE.2019.00058
   Balakrishnan Vimala, 2014, Lecture Notes on Software Engineering, V2, P262, DOI 10.7763/LNSE.2014.V2.134
   Baltes S, 2018, IEEE WORK CONF MIN S, P319, DOI 10.1145/3196398.3196430
   Bangash AA, 2020, EMPIR SOFTW ENG, V25, P5047, DOI 10.1007/s10664-020-09878-9
   Bazelli B, 2013, PROC IEEE INT CONF S, P460, DOI 10.1109/ICSM.2013.72
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Brunet J., 2014, P 11 WORK C MIN SOFT, P340
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen K., 2013, EFFICIENT ESTIMATION, P2
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Efstathiou V, 2018, IEEE WORK CONF MIN S, P38, DOI 10.1145/3196398.3196448
   El Zanaty F, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239525
   Ernst N. A., 2012, Proceedings of the 2012 IEEE Second International Workshop on Empirical Requirements Engineering (EmpiRE), P25, DOI 10.1109/EmpiRE.2012.6347678
   Gelman A., 2013, GARDEN FORKING PATHS
   Gelman A, 2012, J RES EDUC EFF, V5, P189, DOI 10.1080/19345747.2011.618213
   Ghag KV, 2015, 2015 INTERNATIONAL CONFERENCE ON COMPUTER, COMMUNICATION AND CONTROL (IC4)
   Gómez OS, 2014, INFORM SOFTWARE TECH, V56, P1033, DOI 10.1016/j.infsof.2014.04.004
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Herbold S., 2017, SYSTEMATIC MAPPING S
   Hill E., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P184, DOI 10.1109/SCAM.2012.29
   Hindle A, 2011, AUTOMATED TOPIC NAMI, P1
   Hindle A, 2015, EMPIR SOFTW ENG, V20, P479, DOI 10.1007/s10664-014-9312-1
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Howard J, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P328
   James G, 2013, SPRINGER TEXTS STAT, V103, P1, DOI [10.1007/978-1-4614-7138-7, 10.1007/978-1-4614-7138-7_1]
   Joulin A., 2016, ARXIV
   Joulin A., 2016, ARXIV PREPRINT ARXIV, V2, P427
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Kazman R., 2016, SEI SERIES SOFTWARE
   Kitchenham B, 2020, EMPIR SOFTW ENG, V25, P353, DOI 10.1007/s10664-019-09747-0
   Kocaguneli E, 2013, J SYST SOFTWARE, V86, P1879, DOI 10.1016/j.jss.2013.02.053
   Krishna R, 2016, IEEE INT CONF AUTOM, P122, DOI 10.1145/2970276.2970339
   Latha I., 2012, International_Journal_of_Emerging_Trends__Technology_ in_Computer_Science_IJETTCS, V1, P58
   Li YT, 2015, PROCEEDINGS OF THE TWENTY-FOURTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE (IJCAI), P3650
   Mahadi A, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P149, DOI [10.1109/saner48275.2020.9054792, 10.1109/SANER48275.2020.9054792]
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Menzies T., 2018, ARXIV PREPRINT ARXIV
   Menzies T, 2019, INFORM SOFTWARE TECH, V112, P35, DOI 10.1016/j.infsof.2019.04.005
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Mikolov T, 2018, PROCEEDINGS OF THE ELEVENTH INTERNATIONAL CONFERENCE ON LANGUAGE RESOURCES AND EVALUATION (LREC 2018), P52
   Mikolov Tomas, 2013, EFFICIENT ESTIMATION
   Miller George, 1998, WORDNET ELECT LEXICA
   Motta TO, 2018, P BRAZ S SOFTW ENG, DOI [10.1145/3266237.3266260, DOI 10.1145/3266237.3266260]
   Nazar N, 2016, J COMPUT SCI TECH-CH, V31, P883, DOI 10.1007/s11390-016-1671-1
   Novielli N, 2020, IEEE WORK CONF MIN S, P158, DOI 10.1145/3379597.3387446
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pennington J., 2014, P C EMP METH NAT LAN, P1532, DOI DOI 10.3115/V1/D14-1162
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Le Q, 2014, PR MACH LEARN RES, V32, P1188
   Robbes R, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P29, DOI 10.1109/ICSE-NIER.2019.00016
   Romano S, 2020, EUROMICRO CONF PROC, P276, DOI 10.1109/SEAA51224.2020.00054
   Sechidis K, 2011, LECT NOTES ARTIF INT, V6913, P145, DOI 10.1007/978-3-642-23808-6_10
   Shakiba A., 2016, P 2 INT WORKSH SOFTW, DOI [10.1145/2989238.2989244, DOI 10.1145/2989238.2989244]
   Shepperd M, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P73, DOI 10.1145/3183399.3183423
   Soliman M, 2016, 2016 13TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P128, DOI 10.1109/WICSA.2016.13
   Spinellis D., 2019, ARXIV PREPRINT ARXIV
   Steinmacher I., 2014, Proceedings of the 7th international workshop on cooperative and human aspects of software engineering, P72, DOI DOI 10.1145/2593702.2593704.ACM
   Storey M.-A., 2019, ARXIV190512841
   Sun C, 2017, IEEE I CONF COMP VIS, P843, DOI 10.1109/ICCV.2017.97
   Tremblay A, 2011, MENT LEX, V6, P302, DOI 10.1075/ml.6.2.04tre
   van Vliet H, 2016, J SYST SOFTWARE, V117, P638, DOI 10.1016/j.jss.2016.01.017
   Viviani G, 2021, IEEE T SOFTWARE ENG, V47, P1402, DOI 10.1109/TSE.2019.2924006
   Viviani G, 2018, INT C PROGRAM COMPRE, P328, DOI 10.1145/3196321.3196357
   Viviani G, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P104, DOI 10.1145/3195836.3195841
   Wang P, 2016, NEUROCOMPUTING, V174, P806, DOI 10.1016/j.neucom.2015.09.096
   Woods E, 2016, IEEE SOFTWARE, V33, P94, DOI 10.1109/MS.2016.149
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 73
TC 5
Z9 5
U1 1
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 9
DI 10.1007/s10664-021-10009-1
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WL2BB
UT WOS:000710216100006
OA Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Shrikanth, NC
   Nichols, W
   Fahid, FM
   Menzies, T
AF Shrikanth, N. C.
   Nichols, William
   Fahid, Fahmid Morshed
   Menzies, Tim
TI Assessing practitioner beliefs about software engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software analytics; Beliefs; Productivity; Quality; Experience
ID DELIBERATE PRACTICE; ACQUISITION; ERRORS
AB Software engineering is a highly dynamic discipline. Hence, as times change, so too might our beliefs about core processes in this field. This paper checks some five beliefs that originated in the past decades that comment on the relationships between (i) developer productivity; (ii) software quality and (iii) years of developer experience. Using data collected from 1,356 developers in the period 1995 to 2006, we found support for only one of the five beliefs titled "Quality entails productivity." We found no clear support for four other beliefs based on programming languages and software developers. However, from the sporadic evidence of the four other beliefs, we learned that a narrow scope could delude practitioners in misinterpreting certain effects to hold in their day-to-day work. Lastly, through an aggregated view of assessing the five beliefs, we find programming languages act as a confounding factor for developer productivity and software quality. Thus the overall message of this work is that it is both important and possible to revisit old beliefs in software engineering. Researchers and practitioners should routinely retest old beliefs.
C1 [Shrikanth, N. C.; Fahid, Fahmid Morshed; Menzies, Tim] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   [Nichols, William] Carnegie Mellon Univ, Software Engn Inst, Pittsburgh, PA 15213 USA.
C3 North Carolina State University; Software Engineering Institute;
   Carnegie Mellon University
RP Shrikanth, NC (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM nc.shrikanth@gmail.com; wrn@sei.cmu.edu; ffahid@ncsu.edu; timm@ieee.org
RI Menzies, Tim/X-7680-2019; Fahid, Fahmid Morshed/HZL-8953-2023
OI Menzies, Tim/0000-0002-5040-3196; Fahid, Fahmid
   Morshed/0000-0002-4802-3979; Narayanaswamy Chandrasekaran,
   Shrikanth/0000-0002-8983-7733
FU NSF [1908762]; Direct For Computer & Info Scie & Enginr; Division of
   Computing and Communication Foundations [1908762] Funding Source:
   National Science Foundation
FX This work was partially supported by NSF grant #1908762. Personal
   Software Process<SUP>SM</SUP> and PSP<SUP>SM</SUP> are service marks of
   Carnegie Mellon University.
CR ADELSON B, 1984, J EXP PSYCHOL LEARN, V10, P483, DOI 10.1037/0278-7393.10.3.483
   Agrawal A, 2018, P 40 INT C SOFTW ENG, V18
   [Anonymous], Tiruvalluvanayanar arulicceyta Tirrukkural = The'Sacred' Kurral of Tiruvalluva-Nayanar
   [Anonymous], 2004, CROSSROADS
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 2006, The C# Programming Language
   Baltes S, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P187, DOI 10.1145/3236024.3236061
   Bhattacharya P, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P171, DOI 10.1145/1985793.1985817
   Bissyandé TF, 2013, P INT COMP SOFTW APP, P303, DOI 10.1109/COMPSAC.2013.55
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   Brooks Jr F. P, 1995, MYTHICAL MAN MONTH E, VAnniversary
   Campbell Donald Thomas, 1979, QUASIEXPERIMENTATION
   COBB RH, 1990, IEEE SOFTWARE, V7, P44, DOI 10.1109/52.60601
   CORBATO FJ, 1969, DATAMATION, V15, P68
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Devanbu P, 1996, PROC INT CONF SOFTW, P189, DOI 10.1109/ICSE.1996.493415
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Dieste O, 2017, EMPIR SOFTW ENG, V22, P2457, DOI 10.1007/s10664-016-9471-3
   Eaddy M, 2001, DR DOBBS J, V26, P74
   Endres A., 2003, A Handbook of Software and Systems Engineering: Empirical Observations, Laws, and Theories
   ERICSSON KA, 1993, PSYCHOL REV, V100, P363, DOI 10.1037/0033-295X.100.3.363
   Ericsson KA, 2004, ACAD MED, V79, pS70, DOI 10.1097/00001888-200410001-00022
   Fraser S., 2003, OOPSLA 03 COMPANION, P268
   Fucci D, 2017, IEEE T SOFTWARE ENG, V43, P597, DOI 10.1109/TSE.2016.2616877
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   Grazioli F, 2013, THESIS U REPUBLICA
   Humphrey WS, 1995, DISCIPLINE SOFTWARE, V640
   Johnson P. M., 1999, Empirical Software Engineering, V4, P317, DOI 10.1023/A:1009801218527
   Kersten Mik, 2006, P 14 ACM SIGSOFT INT, P1
   Kochhar PS, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P563, DOI 10.1109/SANER.2016.112
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   LaToza TD, 2020, EMPIR SOFTW ENG, P1
   Li YL, 2017, ASIA PAC SOFWR ENG, P526, DOI 10.1109/APSEC.2017.60
   Menzies T, 2017, EMPIR SOFTW ENG, V22, P1903, DOI 10.1007/s10664-016-9469-x
   MILLS HD, 1993, ADV COMPUT, V36, P1, DOI 10.1016/S0065-2458(08)60269-7
   Mills HD, 1983, SOFTWARE PRODUCTIVIT, P265
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Monden A, 2017, IT PROF, V19, P58, DOI 10.1109/MITP.2017.31
   Murphy-Hill E, 2021, IEEE T SOFTWARE ENG, V47, P582, DOI 10.1109/TSE.2019.2900308
   Nagappan M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P404, DOI 10.1145/2786805.2786834
   Nguyen V. M., 2011, P 7 INT C PRED MOD S, P1, DOI [DOI 10.1115/IMECE2011-63829, 10.1145/2020390.2020393, DOI 10.1145/2020390.2020393]
   Nichols WR, 2019, IEEE SOFTWARE, V36, P71, DOI 10.1109/MS.2019.2908576
   Norman, 2014, THINGS MAKE US SMART
   Nygaard K, 2001, PIONEERS THEIR CONTR, P235
   Passos C., 2011, ESEM'11
   Paulk MC., 2010, SOFTWARE QUALITY PRO, V12, P15
   PAULK MC, 2005, THESIS U PITTSBURGH
   Paulk MC, 2006, FACTORS AFFECTING PE
   Pope GU, 1999, SACRED KURRAL TIRUVA
   PRUMPER J, 1992, BEHAV INFORM TECHNOL, V11, P319, DOI 10.1080/01449299208924353
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Rombach D, 2008, J SYST SOFTWARE, V81, P747, DOI 10.1016/j.jss.2007.06.004
   Sackman H., 1966, Exploratory experimental studies comparing online and offline programing performance
   Shrikanth NC, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P182, DOI 10.1145/3377813.3381367
   Shull F, 2012, IEEE SOFTWARE, V29, P4
   Thomas WM, 1997, J SYST SOFTWARE, V38, P211, DOI 10.1016/S0164-1212(96)00152-5
   Vallespir D, 2016, SOFTW QUAL PROF, V18
   Vallespir D, 2012, P TSP S 2012
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wan ZY, 2020, IEEE T SOFTWARE ENG, V46, P1241, DOI 10.1109/TSE.2018.2877678
   William N, 2019, PSP STUDENT ASSIGNME
   Wohlin C, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P27, DOI 10.1109/ISESE.2002.1166922
   Wohlin C., 2012, Experimentation in Software Engineering
   Xia X, 2019, PROC INT CONF SOFTW, P924, DOI 10.1109/ICSE.2019.00098
   Xia X, 2017, EMPIR SOFTW ENG, V22, P3149, DOI 10.1007/s10664-017-9514-4
   Zou W, 2018, IEEE T SOFTW ENG
NR 67
TC 3
Z9 3
U1 1
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2021
VL 26
IS 4
AR 73
DI 10.1007/s10664-021-09957-5
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA SF9EA
UT WOS:000653048500001
DA 2024-07-18
ER

PT J
AU Kuiter, E
   Krieter, S
   Krüger, J
   Saake, G
   Leich, T
AF Kuiter, Elias
   Krieter, Sebastian
   Krueger, Jacob
   Saake, Gunter
   Leich, Thomas
TI variED: an editor for collaborative, real-time feature modeling
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software product lines; Groupware; Feature modeling; Variability;
   Consistency maintenance; Collaboration
ID PARTICIPANT GROUP-SIZE; USABILITY; SPECIFY
AB Feature models are a helpful means to document, manage, maintain, and configure the variability of a software system, and thus are a core artifact in software product-line engineering. Due to the various purposes of feature models, they can be a cross-cutting concern in an organization, integrating technical and business aspects. For this reason, various stakeholders (e.g., developers and consultants) may get involved into modeling the features of a software product line. Currently, collaboration in such a scenario can only be done with face-to-face meetings or by combining single-user feature-model editors with additional communication and version-control systems. While face-to-face meetings are often costly and impractical, using version-control systems can cause merge conflicts and inconsistency within a model, due to the different intentions of the involved stakeholders. Advanced tools that solve these problems by enabling collaborative, real-time feature modeling, analogous to Google Docs or Overleaf for text editing, are missing. In this article, we build on a previous paper and describe (1) the extended formal foundations of collaborative, real-time feature modeling, (2) our conflict resolution algorithm in more detail, (3) proofs that our formalization converges and preserves causality as well as user intentions, (4) the implementation of our prototype, and (5) the results of an empirical evaluation to assess the prototype's usability. Our contributions provide the basis for advancing existing feature-modeling tools and practices to support collaborative feature modeling. The results of our evaluation show that our prototype is considered helpful and valuable by 17 users, also indicating potential for extending our tool and opportunities for new research directions.
C1 [Kuiter, Elias; Krieter, Sebastian; Krueger, Jacob; Saake, Gunter] Otto von Guericke Univ, Magdeburg, Germany.
   [Krieter, Sebastian; Leich, Thomas] Harz Univ Appl Sci Wernigerode, Wernigerode, Germany.
   [Krueger, Jacob] Univ Toronto, Toronto, ON, Canada.
C3 Otto von Guericke University; University of Toronto
RP Krieter, S (corresponding author), Otto von Guericke Univ, Magdeburg, Germany.; Krieter, S (corresponding author), Harz Univ Appl Sci Wernigerode, Wernigerode, Germany.
EM kuiter@ovgu.de; skrieter@hs-harz.de; jkrueger@ovgu.de; saake@ovgu.de;
   tleich@hs-harz.de
RI Kuiter, Elias/IAN-0538-2023
OI Kuiter, Elias/0000-0003-0429-2461; Krieter,
   Sebastian/0000-0001-7077-7091
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   Aho A. V., 1972, SIAM Journal on Computing, V1, P131, DOI 10.1137/0201008
   Alves Pereira Juliana, 2014, Software Reuse for Dynamic Systems in the Cloud and Beyond 14th International Conference on Software Reuse, ICSR 2015. Proceedings: LNCS 8919, P73, DOI 10.1007/978-3-319-14130-5_6
   [Anonymous], 1999, COMPUTER SUPPORTED C
   [Anonymous], 1995, HUMAN COMPUTER INTER
   [Anonymous], 2015, P 19 INT C SOFTW PRO, DOI DOI 10.1145/2791060.2791108
   [Anonymous], 2007, COMPANION 22 ACM SIG
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   [Anonymous], 2002, Pair Programming Illuminated
   [Anonymous], 2011, MODEL DRIVEN DOMAIN
   [Anonymous], P 7 INT WORKSH VAR M
   Apel S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P482, DOI 10.1109/ICSE.2013.6606594
   Batory D, 2005, LECT NOTES COMPUT SC, V3714, P7
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T, 2014, LECT NOTES COMPUT SC, V8767, P302, DOI 10.1007/978-3-319-11653-2_19
   Berlage T., 1993, Sixth Annual Symposium on User Interface Software and Technology. Proceedings of the ACM Symposium on User Interface Software and Technology, P249, DOI 10.1145/168642.168668
   Beuche D, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P358, DOI 10.1109/SPLC.2008.53
   Bierman G, 2014, LECT NOTES COMPUT SC, V8586, P257
   Botterweck G., 2010, Proceedings of the 2010 ICSE Workshop on Product Line Approaches in Software Engineering, P24
   Bowen T. F., 1989, Seventh International Conference on Software Engineering for Telecommunication Switching Systems: SETSS 89 (Conf. Publ. No.306), P59
   Calder M, 2003, COMPUT NETW, V41, P115, DOI 10.1016/S1389-1286(02)00352-3
   Carstensen P.H., 1999, HDB HUMAN FACTORS, P619
   Chen D., 2001, GROUP'01. Proceedings of the 2001 International ACM SIGGROUP Conference on Supporting Group Work, P197, DOI 10.1145/500286.500316
   Chen D, 2001, PROCEEDINGS OF THE EIGHTH INTERNATIONAL CONFERENCE ON PARALLEL AND DISTRIBUTED SYSTEMS, P109, DOI 10.1109/ICPADS.2001.934808
   Chen D, 2001, THESIS TRIFFITH U
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Chengzheng Sun, 2002, ACM Transactions on Computer-Human Interaction, V9, P1, DOI 10.1145/505151.505152
   Chengzheng Sun, 2000, Proceedings 20th IEEE International Conference on Distributed Computing Systems, P316, DOI 10.1109/ICDCS.2000.840944
   Cormack GV, 1995, CS9508
   Czarnecki K, 2013, LECT NOTES COMPUT SC, V7793, P1, DOI 10.1007/978-3-642-37057-1_1
   Czarnecki Krzysztof., 2012, P 6 INT WORKSHOP VAR, P173, DOI DOI 10.1145/2110147.2110167
   Dennis A. R., 1998, Journal of Management Information Systems, V14, P65
   DEWAN P, 1999, COMPUT SUPPORTED COO, V7, P169
   Duran A, 2017, SOFTW SYST MODEL, V16, P1049, DOI 10.1007/s10270-015-0503-z
   ELLIS CA, 1991, COMMUN ACM, V34, P38
   ELLIS CA, 1989, SIGMOD REC, V18, P399, DOI 10.1145/66926.66963
   Elmasri R., 2010, Fundamentals of Database Systems, V6th
   Felfernig Alexander., 2013, ConfWS-2013: 15th International Configuration Workshop (2013), p, P117
   Fidge CJ, 1988, P AUSTR COMP SCI C, V10, P56
   Fogdal T., 2016, P SPLC, P252
   Gibbs S. J., 1989, SIGCHI Bulletin, P29, DOI 10.1145/67450.67456
   GREENBERG S, 1991, PROCEEDINGS OF THE SECOND EUROPEAN CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK : ECSCW 91, P17
   Greenberg S., 1994, Transcending Boundaries, CSCW '94. Proceedings of the Conference on Computer Supported Cooperative Work, P207, DOI 10.1145/192844.193011
   GRUDIN J, 1994, COMPUTER, V27, P19, DOI 10.1109/2.291294
   Hajri I, 2018, J SYST SOFTWARE, V139, P211, DOI 10.1016/j.jss.2018.02.021
   Hickey R., 2008, P 2008 S DYN LANG, P1
   Horcas JM, 2020, SPLC'19: PROCEEDINGS OF THE 23RD INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL A, P164, DOI 10.1145/3336294.3336304
   Hunter J., 2001, JAVA SERVLET PROGRAM
   Imine A, 2006, THEOR COMPUT SCI, V351, P167, DOI 10.1016/j.tcs.2005.09.066
   Johansen R., 1991, Journal of Organizational Computing, V1, P219, DOI 10.1080/10919399109540160
   KAHN AB, 1962, COMMUN ACM, V5, P558, DOI 10.1145/368996.369025
   Kowal M, 2017, ACM SIGPLAN NOTICES, V52, P132, DOI [10.1145/3093335.2993248, 10.1145/2993236.2993248]
   Krugel J., 2020, P 24 ACM C SYSTEMS S, P1, DOI 10.1145/3421590
   Kuiter E, 2019, THESIS U MAGBURG
   Kuiter E, 2019, SPLC, P257
   l e G., 2006, Collaborative Computing: Networking, Applications and Worksharing, P1
   LAMPORT L, 1978, COMMUN ACM, V21, P558, DOI 10.1145/359545.359563
   Linsbauer L, 2017, PROCEEDINGS OF THE 16TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE'17), P49, DOI 10.1145/3136040.3136054
   Lyon S, 2008, GUIDE ADV EMPIRICAL, P257
   Maâzoun J, 2016, J KING SAUD UNIV-COM, V28, P364, DOI 10.1016/j.jksuci.2016.01.005
   Macefield R, 2009, J USABILITY STUD, V5, P34
   Manz C, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P168, DOI 10.1109/ICGSE.2013.29
   Mattern F., 1989, Parallel and Distributed Algorithms. Proceedings of the International Workshop, P215
   McGranaghan M, 2011, IEEE INTERNET COMPUT, V15, P97, DOI 10.1109/MIC.2011.148
   Meinicke J, 2017, MASTERING SOFTWARE V, DOI DOI 10.1007/978-3-319-61443-4
   Mendonca M., 2009, P 24 ACM SIGPLAN C C, P761, DOI [10.1145/1639950.1640002, DOI 10.1145/1639950.1640002]
   Molich R, 2010, J USABILITY STUD, V5, P124
   Morris M. R., 2004, Computer Supported Cooperative Work Conference Proceedings, P262, DOI 10.1145/1031607.1031648
   Nesic D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P62, DOI 10.1145/3338906.3338974
   Nieke M, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE - VOL 2, P48, DOI 10.1145/3236405.3237201
   Nieke M, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P73, DOI 10.1145/2866614.2866625
   Paskevicius P, 2012, COMM COM INF SC, V319, P108
   Pohl K., 2005, SOFTWARE PRODUCT LIN, V10
   Randolph A, 2013, ELECTRON PROC THEOR, P45, DOI 10.4204/EPTCS.107.5
   Schobbens PY, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P139
   Schobbens PY, 2007, COMPUT NETW, V51, P456, DOI 10.1016/j.comnet.2006.08.008
   Schollmeier R, 2002, FIRST INTERNATIONAL CONFERENCE ON PEER-TO-PEER COMPUTING, P101, DOI 10.1109/P2P.2001.990434
   Schwägerl F, 2017, MODELSWARD: PROCEEDINGS OF THE 5TH INTERNATIONAL CONFERENCE ON MODEL-DRIVEN ENGINEERING AND SOFTWARE DEVELOPMENT, P15, DOI 10.5220/0006071800150028
   Schwägerl F, 2016, ICSOFT-PT: PROCEEDINGS OF THE 11TH INTERNATIONAL JOINT CONFERENCE ON SOFTWARE TECHNOLOGIES - VOL. 2, P83, DOI 10.5220/0005971300830094
   SCHWARZ R, 1994, DISTRIB COMPUT, V7, P149, DOI 10.1007/BF02277859
   Shapiro M, 2011, LECT NOTES COMPUT SC, V6976, P386, DOI 10.1007/978-3-642-24550-3_29
   Siegmund J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P9, DOI 10.1109/ICSE.2015.24
   STEFIK M, 1987, COMMUN ACM, V30, P32, DOI 10.1145/7885.7887
   Sun C., 2006, ACM Transactions on Computer-Human Interaction, V13, P531, DOI 10.1145/1188816.1188821
   Sun C., 1998, ACM 1998 Conference on Computer Supported Cooperative Work. Proceedings. CSCW 98, P59, DOI 10.1145/289444.289469
   Sun C., 1996, Australian Computer Science Communications, V18, P582
   Sun C., 2014, P 17 ACM C COMP SUPP, P519
   Sun C, 1998, ACM T COMPUT-HUM INT, V5, P63, DOI DOI 10.1145/274444.274447
   Sun CZ, 1999, 19TH IEEE INTERNATIONAL CONFERENCE ON DISTRIBUTED COMPUTING SYSTEMS WORKSHOP, PROCEEDINGS, P15, DOI 10.1109/ECMDD.1999.776409
   Sun D., 2004, Computer Supported Cooperative Work Conference Proceedings, P437, DOI 10.1145/1031607.1031681
   von Nostitz-Wallwitz I, 2018, PROC IEEE ACM INT C, P300, DOI 10.1145/3183440.3194980
   Wohlin C., 2012, Experimentation in Software Engineering
   WULF V, 1995, BEHAV INFORM TECHNOL, V14, P143, DOI 10.1080/01449299508914641
   Xue L., 2003, Proc. Australasian Conference on Computer Science: Research and Practice in Information Technology, P19
   Yi L, 2012, **DATA OBJECT**, P317, DOI [10.5281/zenodo.4259914, DOI 10.5281/ZENODO.4259914]
   Yi L., 2010, P 2 AS PAC S INT, P23
NR 96
TC 3
Z9 3
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR 2
PY 2021
VL 26
IS 2
AR 24
DI 10.1007/s10664-020-09892-x
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QR7CF
UT WOS:000625372100001
OA hybrid
DA 2024-07-18
ER

PT J
AU Pecorelli, F
   Palomba, F
   De Lucia, A
AF Pecorelli, Fabiano
   Palomba, Fabio
   De Lucia, Andrea
TI The Relation of Test-Related Factors to Software Quality: A Case Study
   on Apache Systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Test code quality; Empirical study
ID TEST-DRIVEN DEVELOPMENT; TEST SMELLS; PREDICTING FAULTS; CODE COVERAGE;
   LARGE-SCALE; METRICS; TRACEABILITY; CAUTION
AB Testing represents a crucial activity to ensure software quality. Recent studies have shown that test-related factors (e.g., code coverage) can be reliable predictors of software code quality, as measured by post-release defects. While these studies provided initial compelling evidence on the relation between tests and post-release defects, they considered different test-related factors separately: as a consequence, there is still a lack of knowledge of whether these factors are still good predictors when considering all together. In this paper, we propose a comprehensive case study on how test-related factors relate to production code quality in Apache systems. We first investigated how the presence of tests relates to post-release defects; then, we analyzed the role played by the test-related factors previously shown as significantly related to post-release defects. The key findings of the study show that, when controlling for other metrics (e.g., size of the production class), test-related factors have a limited connection to post-release defects.
C1 [Pecorelli, Fabiano; Palomba, Fabio; De Lucia, Andrea] Univ Salerno, SeSa Lab, Salerno, Italy.
C3 University of Salerno
RP Pecorelli, F (corresponding author), Univ Salerno, SeSa Lab, Salerno, Italy.
EM fpecorelli@unisa.it; fpalomba@unisa.it; adelucia@unisa.it
RI Pecorelli, Fabiano/HKO-8789-2023; De Lucia, Andrea/AAG-6781-2020
OI Pecorelli, Fabiano/0000-0003-2446-4291; 
FU Universita degli Studi di Salerno
FX Open Access funding provided by Universita degli Studi di Salerno.
CR Adamopoulos K, 2004, LECT NOTES COMPUT SC, V3103, P1338
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], 2007, GUIDELINES PERFORMIN
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   [Anonymous], 2018, REFACTORING IMPROVIN
   [Anonymous], 2014, APPL REGRESSION ANAL
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Bowes David., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P330, DOI DOI 10.1145/2931037.2931039
   Briand L, 2017, IEEE SOFTWARE, V34, P72, DOI 10.1109/MS.2017.3571562
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Budgen D., 2006, 28th International Conference on Software Engineering Proceedings, P1051, DOI 10.1145/1134285.1134500
   Cai X, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISSRE.2007.17
   Catolino G, 2019, PROC IEEE INT CONF S, P223, DOI 10.1109/ICSME.2019.00034
   Catolino G, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P99, DOI 10.1109/MOBILESoft.2019.00023
   Catolino G, 2018, J SYST SOFTWARE, V143, P14, DOI 10.1016/j.jss.2018.05.003
   Chen MH, 2001, IEEE T RELIAB, V50, P165, DOI 10.1109/24.963124
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Chin WW, 1998, QUANT METH SER, P295
   Choudhary GR, 2018, COMPUT ELECTR ENG, V67, P15, DOI 10.1016/j.compeleceng.2018.02.043
   Cohen J, 1992, STAT POWER ANAL, V1
   D'Ambros Marco, 2010, Proceedings of the Tenth International Conference on Quality Software (QSIC 2010), P23, DOI 10.1109/QSIC.2010.58
   D'Ambros M, 2009, WORK CONF REVERSE EN, P135, DOI 10.1109/WCRE.2009.19
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Damm L.-O., 2006, Software Process Improvement and Practice, V11, P47, DOI 10.1002/spip.253
   Di Nucci D, 2018, IEEE T SOFTWARE ENG, V44, P5, DOI 10.1109/TSE.2017.2659747
   Feldt R, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P343, DOI 10.1109/ICST.2014.47
   Fernandes L, 2017, PROCEEDINGS OF THE 16TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE'17), P187, DOI 10.1145/3136040.3136053
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fregnan E, 2019, INFORM SOFTWARE TECH, V107, P159, DOI 10.1016/j.infsof.2018.11.008
   Garousi V., 2016, Proceedings of the 20th international conference on evaluation and assessment in software engineering, P26
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Grano G, 2020, PIZZA VERSUS PINSA P
   Grano G, 2021, IEEE T SOFTWARE ENG, V47, P758, DOI 10.1109/TSE.2019.2903057
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Halekoh U, 2006, J STAT SOFTW, V15, P1, DOI 10.18637/jss.v015.i02
   Hall T, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2629648
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hayes AF, 2009, COMMUN MONOGR, V76, P408, DOI 10.1080/03637750903310360
   Islam C, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3305268
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kitchenham B., 2004, PROCEDURES PERFORMIN, V33, P1
   Knab P., 2006, P 2006 INT WORKSHOP, P119
   Kochhar PS, 2017, IEEE T RELIAB, V66, P1213, DOI 10.1109/TR.2017.2727062
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Kudrjavets G, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P204
   Li N, 2009, IEEE ICST WORKSHOP, P220, DOI 10.1109/ICSTW.2009.30
   Lubsen Z, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P151, DOI 10.1109/MSR.2009.5069493
   Madeyski L, 2014, IEEE T SOFTWARE ENG, V40, P23, DOI 10.1109/TSE.2013.44
   Mäntylä MV, 2015, EMPIR SOFTW ENG, V20, P1384, DOI 10.1007/s10664-014-9338-4
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Moonen L, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/WCRE.2001.957806
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Morrison CM, 2003, PERCEPT MOTOR SKILL, V97, P80, DOI 10.2466/PMS.97.5.80-82
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nagappan N., 2005, Proceedings of the third workshop on Software quality, P1
   Nagappan N, 2008, EMPIR SOFTW ENG, V13, P289, DOI 10.1007/s10664-008-9062-z
   NELDER JA, 1972, J R STAT SOC SER A-G, V135, P370, DOI 10.2307/2344614
   O'Brien RM, 2007, QUAL QUANT, V41, P673, DOI 10.1007/s11135-006-9018-6
   Offutt AJ, 2001, KLUW INT S ADV DATA, V24, P34
   Palomba F, 2019, IEEE T SOFTWARE ENG, V45, P194, DOI 10.1109/TSE.2017.2770122
   Palomba F, 2018, PROC IEEE INT CONF S, P311, DOI 10.1109/ICSME.2018.00040
   Palomba F, 2018, IEEE T SOFTWARE ENG, V44, P977, DOI 10.1109/TSE.2017.2752171
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2018, INFORM SOFTWARE TECH, V99, P1, DOI 10.1016/j.infsof.2018.02.004
   Palomba F, 2017, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2017.12
   Palomba F, 2017, INT C PROGRAM COMPRE, P176, DOI 10.1109/ICPC.2017.38
   Pantiuchina J, 2018, INT C PROGRAM COMPRE, P312, DOI 10.1145/3196321.3196365
   Parizi RM, 2014, IEEE T RELIAB, V63, P913, DOI 10.1109/TR.2014.2338254
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Pecorelli F, 2020, RELATION TEST RELATE
   Pecorelli F, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P1235, DOI 10.1145/3338906.3342500
   Pecorelli F, 2019, INT C PROGRAM COMPRE, P93, DOI 10.1109/ICPC.2019.00023
   Pezze M., 2008, Software Testing and Analysis: Process, Principles and Techniques
   Qusef A, 2019, IEEE ACCESS, V7, P139526, DOI 10.1109/ACCESS.2019.2943488
   Qusef A, 2014, J SYST SOFTWARE, V88, P147, DOI 10.1016/j.jss.2013.10.019
   Rafique Y, 2013, IEEE T SOFTWARE ENG, V39, P835, DOI 10.1109/TSE.2012.28
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Seber G. A., 2012, LINEAR REGRESSION AN, V329
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shihab E., 2010, Proceedings of the ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, P1
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Smite D, 2008, 2008 3RD IEEE INTERNATIONAL CONFERENCE GLOBAL SOFTWARE ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ICGSE.2008.22
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Spinellis D, 2005, IEEE SOFTWARE, V22, P9, DOI 10.1109/MS.2005.111
   Strecker J, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2211616.2211620
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1838
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Van Rompaey B, 2009, EUR CON SFTWR MTNCE, P209, DOI 10.1109/CSMR.2009.39
   Vassallo C, 2020, EMPIR SOFTW ENG, V25, P1419, DOI 10.1007/s10664-019-09750-5
   Vassallo C, 2018, IEEE INT CONF AUTOM, P790, DOI 10.1145/3238147.3240729
   Wedyan F, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P141, DOI 10.1109/ICST.2009.21
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Zampetti F, 2017, IEEE WORK CONF MIN S, P334, DOI 10.1109/MSR.2017.2
   Zazworka Nico, 2011, P 2 WORKSH MAN TECHN, P17, DOI 10.1145/1985362.1985366
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 106
TC 6
Z9 7
U1 1
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB 20
PY 2021
VL 26
IS 2
AR 18
DI 10.1007/s10664-020-09891-y
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QK8YW
UT WOS:000620666600002
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Kermansaravi, ZA
   Rahman, MS
   Khomh, F
   Jaafar, F
   Guéhéneuc, YG
AF Kermansaravi, Zeinab Azadeh
   Rahman, Md Saidur
   Khomh, Foutse
   Jaafar, Fehmi
   Gueheneuc, Yann-Gael
TI Investigating design anti-pattern and design pattern mutations and their
   change- and fault-proneness
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Design smells; Design patterns; Anti-patterns; Fault-proneness;
   Change-proneness; Markov chain
AB During software evolution, inexperienced developers may introduce design anti-patterns when they modify their software systems to fix bugs or to add new functionalities based on changes in requirements. Developers may also use design patterns to promote software quality or as a possible cure for some design anti-patterns. Thus, design patterns and design anti-patterns are introduced, removed, and mutated from one another by developers. Many studies investigated the evolution of design patterns and design anti-patterns and their impact on software development. However, they investigated design patterns or design anti-patterns in isolation and did not consider their mutations and the impact of these mutations on software quality. Therefore, we report our study of bidirectional mutations between design patterns and design anti-patterns and the impacts of these mutations on software change- and fault-proneness. We analyzed snapshots of seven Java software systems with diverse sizes, evolution histories, and application domains. We built Markov models to capture the probability of occurrences of the different design patterns and design anti-patterns mutations. Results from our study show that (1) design patterns and design anti-patterns mutate into other design patterns and-or design anti-patterns. They also show that (2) some change types primarily trigger mutations of design patterns and design anti-patterns (renaming and changes to comments, declarations, and operators), and (3) some mutations of design anti-patterns and design patterns are more faulty in specific contexts. These results provide important insights into the evolution of design patterns and design anti-patterns and its impact on the change- and fault-proneness of software systems.
C1 [Kermansaravi, Zeinab Azadeh] Polytech Montreal, DGIGL, Ptidej Team, SWAT Lab, Montreal, PQ, Canada.
   [Rahman, Md Saidur; Khomh, Foutse] Polytech Montreal, DGIGL, SWAT Lab, Montreal, PQ, Canada.
   [Jaafar, Fehmi] Comp Res Inst Montreal, Montreal, PQ, Canada.
   [Gueheneuc, Yann-Gael] Concordia Univ, Ptidej Team, CSSE, Montreal, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal; Universite de Montreal;
   Polytechnique Montreal; Concordia University - Canada
RP Kermansaravi, ZA (corresponding author), Polytech Montreal, DGIGL, Ptidej Team, SWAT Lab, Montreal, PQ, Canada.
EM zeinab.kermansaravi@polymtl.ca; saidur.rahman@polymtl.ca;
   foutse.khomh@polymtl.ca; fehmi.jaafar@crim.ca;
   yann-gael.gueheneuc@concordia.ca
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Ampatzoglou A, 2012, INFORM SOFTWARE TECH, V54, P331, DOI 10.1016/j.infsof.2011.10.006
   An L., 2015, Proceedings of the 11th International Conference on Predictive Models and Data Analytics in Software Engineering, P5
   [Anonymous], 2016, SRCML
   [Anonymous], 2012, MARKOV CHAINS STOCHA
   [Anonymous], 2012, EXPT SOFTWARE ENG
   [Anonymous], 2007, P 11 ECOOP WORKSH QU
   Arnaoudova V, 2014, IEEE T SOFTWARE ENG, V40, P502, DOI 10.1109/TSE.2014.2312942
   Aversano Lerina., 2007, PROC THE 6 EUROPEAN, P385, DOI [DOI 10.1145/1287624.1287680, 10.1145/1287624.1287680.]
   Bieman JM, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P40, DOI 10.1109/METRIC.2003.1232454
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Canfora Gerardo, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P134, DOI 10.1109/ICPC.2010.32
   Ducasse S, 2004, CSMR 2004 8 EUR C SO
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Gatrell M, 2009, WORK CONF REVERSE EN, P160, DOI 10.1109/WCRE.2009.31
   Guéhéneuc YG, 2008, IEEE T SOFTWARE ENG, V34, P667, DOI 10.1109/TSE.2008.48
   Guéhéneuc YG, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P172, DOI 10.1109/WCRE.2004.21
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Iacob Claudia., 2011, P 3 ACM SIGCHI S ENG, P217
   Jaafar F, 2014, INT CONF QUAL SOFTW, P246, DOI 10.1109/QSIC.2014.45
   Jaafar F, 2013, WORK CONF REVERSE EN, P351, DOI 10.1109/WCRE.2013.6671310
   Jaafar Fehmi., 2013, PROC PPAP, V2, P26
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Khomh F, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P274
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, PROC IEEE INT CONF S, P83, DOI 10.1109/ICSM.2009.5306327
   Kramer C, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P208, DOI 10.1109/WCRE.1996.558905
   Lanza M, 2007, Object-oriented Metrics in Practice: Using Software Metrics To Characterize, Evaluate, and Improve the Design of Object-oriented Systems
   Long J., 2001, Software Engineering Notes, V26, P68, DOI 10.1145/505482.505492
   Mäntylä M, 2003, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSM.2003.1235447
   Marinescu Radu., 2006, OBJECT ORIENTED METR
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Olbrich S, 2009, INT SYMP EMP SOFTWAR, P391
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   Riel AJ., 1996, Object-Oriented Design Heuristics
   Romano D., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P437, DOI 10.1109/WCRE.2012.53
   Settas D, 2012, EXPERT SYST APPL, V39, P9041, DOI 10.1016/j.eswa.2012.02.049
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Stamelos I, 2002, INFORM SYST J, V12, P43, DOI 10.1046/j.1365-2575.2002.00117.x
   Strazzullo Pasquale, 2009, BMJ, V339, pb4567, DOI 10.1136/bmj.b4567
   Taba SES, 2013, PROC IEEE INT CONF S, P270, DOI 10.1109/ICSM.2013.38
   Tichelaar S, 2000, INTERNATIONAL SYMPOSIUM ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P154, DOI 10.1109/ISPSE.2000.913233
   Tsantalis N, 2006, IEEE T SOFTWARE ENG, V32, P896, DOI 10.1109/TSE.2006.112
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Vaucher S, 2009, WORK CONF REVERSE EN, P145, DOI 10.1109/WCRE.2009.23
   Vokác M, 2004, IEEE T SOFTWARE ENG, V30, P904, DOI 10.1109/TSE.2004.99
   Webster BruceF., 1995, PITFALLS OBJECT ORIE
   Yamashita A, 2013, WORK CONF REVERSE EN, P242, DOI 10.1109/WCRE.2013.6671299
   Yin R. K., 2009, CASE STUDY RES DESIG, V4th ed.
NR 52
TC 5
Z9 6
U1 4
U2 25
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2021
VL 26
IS 1
AR 9
DI 10.1007/s10664-020-09900-0
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PS6RS
UT WOS:000608054300001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Demissie, BF
   Ceccato, M
   Shar, LK
AF Demissie, Biniam Fisseha
   Ceccato, Mariano
   Shar, Lwin Khin
TI Security analysis of permission re-delegation vulnerabilities in Android
   apps
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Permission re-delegation; Android; Program analysis; Genetic algorithm;
   Test generation; Natural language processing; Outlier detection
AB The Android platform facilitates reuse of app functionalities by allowing an app to request an action from another app through inter-process communication mechanism. This feature is one of the reasons for the popularity of Android, but it also poses security risks to the end users because malicious, unprivileged apps could exploit this feature to make privileged apps perform privileged actions on behalf of them. In this paper, we investigate the hybrid use of program analysis, genetic algorithm based test generation, natural language processing, machine learning techniques forprecisedetection of permission re-delegation vulnerabilities in Android apps. Our approach first groups a large set of benign and non-vulnerable apps into different clusters, based on their similarities in terms of functional descriptions. It then generates permission re-delegation model for each cluster, which characterizes common permission re-delegation behaviors of the apps in the cluster. Given an app under test, our approach checks whether it has permission re-delegation behaviors that deviate from the model of the cluster it belongs to. If that is the case, it generates test cases to detect the vulnerabilities. We evaluated the vulnerability detection capability of our approach based on 1,258 official apps and 20 mutated apps. Our approach achieved 81.8% recall and 100% precision. We also compared our approach with two static analysis-based approaches -CovertandIccTA- based on 595 open source apps. Our approach detected 30 vulnerable apps whereasCovertdetected one of them andIccTAdid not detect any. Executable proof-of-concept attacks generated by our approach were reported to the corresponding app developers.
C1 [Demissie, Biniam Fisseha] Fdn Bruno Kessler, Trento, Italy.
   [Ceccato, Mariano] Univ Verona, Verona, Italy.
   [Shar, Lwin Khin] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
C3 Fondazione Bruno Kessler; University of Verona; Singapore Management
   University
RP Ceccato, M (corresponding author), Univ Verona, Verona, Italy.
EM demissie@fbk.eu; mariano.ceccato@univr.it; lkshar@smu.edu.sg
OI Ceccato, Mariano/0000-0001-7325-0316; Shar, Lwin
   Khin/0000-0001-5130-0407
FU Singapore Ministry of Education (MOE) Academic Research Fund (AcRF) Tier
   1 grant
FX The content of this paper is part of the PhD thesis of the first author
   Biniam Fisseha Demissie. The work of Lwin Khin Shar was supported by the
   Singapore Ministry of Education (MOE) Academic Research Fund (AcRF) Tier
   1 grant.
CR Al-Subaihin AA, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962600
   Amalfitano D., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P252, DOI 10.1109/ICSTW.2011.77
   Amalfitano D, 2012, IEEE INT CONF AUTOM, P258, DOI 10.1145/2351676.2351717
   [Anonymous], 2011, USENIX SEC S
   [Anonymous], 1997, An Algorithm for Suffix Stripping, page
   [Anonymous], 2012, P 27 ANN ACM S APPL
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Au Kathy Wain Yee, 2012, P 2012 ACM C COMP CO, P217
   Avancini A, 2013, 2013 8TH INTERNATIONAL WORKSHOP ON AUTOMATION OF SOFTWARE TEST (AST), P57, DOI 10.1109/IWAST.2013.6595792
   Avdiienko V, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P426, DOI 10.1109/ICSE.2015.61
   Backes M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P356, DOI 10.1145/2976749.2978333
   Bagheri H, 2015, IEEE T SOFTWARE ENG, V41, P866, DOI 10.1109/TSE.2015.2419611
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bosu AS, 2017, PROCEEDINGS OF THE 2017 ACM ASIA CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY (ASIA CCS'17), P71, DOI 10.1145/3052973.3053004
   Bugiel S., 2012, In NDSS, V17, P19
   Chin E., 2011, P 9 INT C MOB SYST A, P239, DOI DOI 10.1145/1999995.2000018
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   Dai T, 2017, COMPUT SECUR, V68, P98, DOI 10.1016/j.cose.2017.04.002
   Demissie BF, 2018, P 5 IEEE ACM INT C M
   Demissie BF, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P255, DOI [10.1145/2897073.2897082, 10.1109/MobileSoft.2016.053]
   DEMPSTER AP, 1977, J ROY STAT SOC B MET, V39, P1, DOI 10.1111/j.2517-6161.1977.tb01600.x
   Enck W, 2011, P 20 USENIX C SEC SE, P2
   Enck W, 2010, 9 US S OP SYST DES I
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Gordon MI, 2015, 22ND ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2015), DOI 10.14722/ndss.2015.23089
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Gorski SA, 2019, PROCEEDINGS OF THE 2019 CONFERENCE ON SECURITY AND PRIVACY IN WIRELESS AND MOBILE NETWORKS (WISEC '19), P151, DOI 10.1145/3317549.3319725
   Grace M.C., 2012, NDSS
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hodge VJ, 2004, ARTIF INTELL REV, V22, P85, DOI 10.1023/B:AIRE.0000045502.10941.a9
   Holland J.H., 1992, Adaptation in Natural and Artificial Systems, DOI DOI 10.7551/MITPRESS/1090.001.0001
   Hu Cuixiong, 2011, Proceedings of the 6th International Workshop on Automation of Software Test, P77
   Jiagui Zhong, 2012, 2012 International Conference on Computer Science and Service System (CSSS), P871, DOI 10.1109/CSSS.2012.222
   Junaid M, 2016, COMPUT SECUR, V59, P92, DOI 10.1016/j.cose.2016.01.008
   Just R., 2014, P 2014 INT S SOFTW T, P433
   KLIEBER W., 2014, Proceedings of the 3rd ACM SIGPLAN International Workshop on the State of the Art in Java Program Analysis, P1
   Laurikkala J., 2000, 5 INT WORKSH INT DAT
   Lee YK, 2017, PROC INT CONF SOFTW, P312, DOI 10.1109/ICSE.2017.36
   Li L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P280, DOI 10.1109/ICSE.2015.48
   Lu K, 2015, NDSS
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Ma Z, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P653, DOI 10.1145/2889160.2889178
   Mahmood R., 2012, 2012 Proceedings of 7th International Workshop on Automation of Software Test (AST 2012), P22, DOI 10.1109/IWAST.2012.6228986
   Mahmood R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P599, DOI 10.1145/2635868.2635896
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   McCallum A.K., 2002, MALLET MACHINE LEARN
   Moran K, 2018, PROC IEEE ACM INT C, P33, DOI 10.1145/3183440.3183492
   Octeau D, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P77, DOI 10.1109/ICSE.2015.30
   Octeau Damien, 2013, P 22 USENIX SECURITY, P543
   OWASP, 2015, OWASP MOB SEC PROJ T
   Rasthofer S, 2017, PROC INT CONF SOFTW, P300, DOI 10.1109/ICSE.2017.35
   Reps T., 1995, Conference Record of POPL'95: 22nd ACM SIGPLAN-SIGACT Symposium Principles of Programming Languages, P49, DOI 10.1145/199448.199462
   Sadeghi A, 2014, LECT NOTES COMPUT SC, V8411, P155
   Sbîelea D, 2013, IBM J RES DEV, V57, DOI 10.1147/JRD.2013.2284403
   Sorin DJ, 2014, DES AUT CON, DOI 10.1145/2593069.2596669
   Thomé J, 2020, IEEE T SOFTWARE ENG, V46, P163, DOI 10.1109/TSE.2018.2844343
   Tsutano Y, 2017, PROC INT CONF SOFTW, P324, DOI 10.1109/ICSE.2017.37
   Wegener J, 2001, INFORM SOFTWARE TECH, V43, P841, DOI 10.1016/S0950-5849(01)00190-2
   Wei FG, 2014, CCS'14: PROCEEDINGS OF THE 21ST ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1329, DOI 10.1145/2660267.2660357
   Witten IH, 2011, MOR KAUF D, P1
   Xu MW, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P143, DOI 10.1145/3038912.3052645
   Yang CY, 2012, 2012 8TH INTERNATIONAL SYMPOSIUM ON CHINESE SPOKEN LANGUAGE PROCESSING, P220, DOI 10.1109/ISCSLP.2012.6423522
NR 63
TC 20
Z9 22
U1 5
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 5084
EP 5136
DI 10.1007/s10664-020-09879-8
EA SEP 2020
PG 53
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4BB
UT WOS:000569291500001
OA Green Submitted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Ros, R
   Hammar, M
AF Ros, Rasmus
   Hammar, Mikael
TI Data-driven software design with Constraint Oriented Multi-variate
   Bandit Optimization (COMBO)
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Continuous experimentation; A; B testing; Machine learning; Multi-armed
   bandits; Combinatorial optimization
ID EXPERIMENTATION; FRAMEWORK; PRODUCT
AB Context Software design in e-commerce can be improved with user data through controlled experiments (i.e. A/B tests) to better meet user needs. Machine learning-based algorithmic optimization techniques extends the approach to large number of variables to personalize software to different user needs. So far the optimization techniques has only been applied to optimize software of low complexity, such as colors and wordings of text. Objective In this paper, we introduce the COMBO toolkit with capability to model optimization variables and their relationship constraints specified through an embedded domain-specific language. The toolkit generates personalized software configurations for users as they arrive in the system, and the configurations improve over time in in relation to some given metric. COMBO has several implementations of machine learning algorithms and constraint solvers to optimize the model with user data by software developers without deep optimization knowledge. Method The toolkit was validated in a proof-of-concept by implementing two features that are relevant to Apptus, an e-commerce company that develops algorithms for web shops. The algorithmic performance was evaluated in simulations with realistic historic user data. Results The validation shows that the toolkit approach can model and improve relatively complex features with many types of variables and constraints, without causing noticeable delays for users. Conclusions We show that modeling software hierarchies in a formal model facilitates algorithmic optimization of more complex software. In this way, using COMBO, developers can make data-driven and personalized software products.
C1 [Ros, Rasmus] Lund Univ, Lund, Sweden.
   [Hammar, Mikael] Apptus Technol AB, Lund, Sweden.
C3 Lund University
RP Ros, R (corresponding author), Lund Univ, Lund, Sweden.
EM rasmus.ros@cs.lth.se; mikael.hammar@apptus.se
OI Ros, Rasmus/0000-0002-0183-0407
FU Lund University
FX Open access funding provided by Lund University
CR Amatriain X, 2013, PROCEEDINGS OF THE 22ND ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT (CIKM'13), P2201, DOI 10.1145/2505515.2514701
   [Anonymous], 2014, P 23 ACM C WORLD WID
   [Anonymous], 2010, Journal on Satisfiability, Boolean Modeling and Computation, DOI DOI 10.3233/SAT190075
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Auer F, 2018, EUROMICRO CONF PROC, P335, DOI 10.1109/SEAA.2018.00062
   Biere A, 2009, FRONT ARTIF INTEL AP, V185, P457, DOI 10.3233/978-1-58603-929-5-457
   Borg M, 2016, J SOFTW-EVOL PROC, V28, P427, DOI 10.1002/smr.1784
   Bosch-Sijtsema P, 2015, J PROD INNOVAT MANAG, V32, P793, DOI 10.1111/jpim.12233
   Brodén B, 2017, PROCEEDINGS OF THE ELEVENTH ACM CONFERENCE ON RECOMMENDER SYSTEMS (RECSYS'17), P349, DOI 10.1145/3109859.3109930
   Browne CB, 2012, IEEE T COMP INTEL AI, V4, P1, DOI 10.1109/TCIAIG.2012.2186810
   Burtini G, 2015, ARXIV151000757V4STAT
   Cámara J, 2009, LECT NOTES COMPUT SC, V5648, P370, DOI 10.1007/978-3-642-02818-2_30
   Chakraborty D, 2013, INT CONF ACOUST SPEE, P6083, DOI 10.1109/ICASSP.2013.6638833
   Chamberlain S, 2006, LECT NOTES COMPUT SC, V4044, P143
   Chapelle O., 2011, ADV NEURAL INFORM PR, P2249, DOI DOI 10.5555/2986459.2986710
   Chen L., 2009, P 13 INT SOFTWARE PR, P81
   Chen W., 2013, P 30 INT C MACHINE L, P151
   Claeys E, 2017, LECT NOTES COMPUT SC, V10584, P52, DOI 10.1007/978-3-319-68765-0_5
   Dmitriev P, 2016, CIKM'16: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P429, DOI 10.1145/2983323.2983356
   Domingos P., 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P71, DOI 10.1145/347090.347107
   Elmachtoub A., 2017, C UNCERTAINTY ARTIFI
   Fabijan A, 2018, EUROMICRO CONF PROC, P64, DOI 10.1109/SEAA.2018.00020
   Fabijan A, 2018, EUROMICRO CONF PROC, P68, DOI 10.1109/SEAA.2018.00021
   Feitelson DG, 2013, IEEE INTERNET COMPUT, V17, P8, DOI 10.1109/MIC.2013.25
   Felfernig A, 2010, IUI 2010, P317
   Féraud R, 2016, JMLR WORKSH CONF PRO, V51, P93
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Forrester A.I.J., 2008, ENG DESIGN VIA SURRO, DOI DOI 10.1002/9780470770801
   Gerostathopoulos I, 2018, 2018 IEEE 3RD INTERNATIONAL WORKSHOPS ON FOUNDATIONS AND APPLICATIONS OF SELF* SYSTEMS (FAS*W), P100, DOI 10.1109/FAS-W.2018.00032
   Gupta S, 2018, ICCAD-IEEE ACM INT, DOI 10.1145/3240765.3240811
   Hadar I, 2018, EMPIR SOFTW ENG, V23, P259, DOI 10.1007/s10664-017-9517-1
   Hammar M., 2013, P 7 ACM C REC SYST, P265, DOI [DOI 10.1145/2507157.2507169, 10.1145/2507157.2507169]
   He J, 2010, NINTH WUHAN INTERNATIONAL CONFERENCE ON E-BUSINESS, VOLS I-III, P1061
   Hill DN, 2017, KDD'17: PROCEEDINGS OF THE 23RD ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1813, DOI 10.1145/3097983.3098184
   Hoos HH, 2012, COMMUN ACM, V55, P70, DOI 10.1145/2076450.2076469
   Hutter F, 2014, ARTIF INTELL-AMST, V206, P79, DOI 10.1016/j.artint.2013.10.003
   Iitsuka S, 2015, KDD'15: PROCEEDINGS OF THE 21ST ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P447, DOI 10.1145/2783258.2783351
   Jiménez M, 2019, 2019 IEEE/ACM JOINT 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING AND 1ST INTERNATIONAL WORKSHOP ON DATA-DRIVEN DECISIONS, EXPERIMENTATION AND EVOLUTION (RCOSE-DDREE 2019), P20, DOI 10.1109/RCoSE/DDrEE.2019.00012
   Jussien N, 2002, ARTIF INTELL, V139, P21, DOI 10.1016/S0004-3702(02)00221-7
   Kang KC, 2002, IEEE SOFTWARE, V19, P58, DOI 10.1109/MS.2002.1020288
   Kanoun K, 2015, DES AUT TEST EUROPE, P1547
   Kephart JO, 2003, COMPUTER, V36, P41, DOI 10.1109/MC.2003.1160055
   Kevic K, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P123, DOI 10.1109/ICSE-SEIP.2017.19
   Kharitonov E, 2015, SIGIR 2015: PROCEEDINGS OF THE 38TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P453, DOI 10.1145/2766462.2767706
   Kohavi R, 2014, PROCEEDINGS OF THE 20TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'14), P1857, DOI 10.1145/2623330.2623341
   Kohavi R, 2009, DATA MIN KNOWL DISC, V18, P140, DOI 10.1007/s10618-008-0114-1
   Kohavi Ron, P 18 ACM SIGKDD INT, P786, DOI 10.1145/2339530.2339653
   Kuchcinski K, 2003, ACM T DES AUTOMAT EL, V8, P355, DOI 10.1145/785411.785416
   Lane T., 1998, Proceedings Fourth International Conference on Knowledge Discovery and Data Mining, P259
   Lindgren E, 2016, INFORM SOFTWARE TECH, V77, P80, DOI 10.1016/j.infsof.2016.04.008
   Machmouchi W, 2016, SIGIR'16: PROCEEDINGS OF THE 39TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P589, DOI 10.1145/2911451.2926731
   Masuda S, 2018, IEEE ICST WORKSHOP, P279, DOI 10.1109/ICSTW.2018.00061
   Mattos DI, 2017, 2017 43RD EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P256, DOI 10.1109/SEAA.2017.15
   Miikkulainen R, 2018, AAAI CONF ARTIF INTE, P7696
   Miildulainen R, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'17), P1193, DOI 10.1145/3071178.3071312
   Minku LL, 2012, IEEE T KNOWL DATA EN, V24, P619, DOI 10.1109/TKDE.2011.58
   Mottos DI, 2019, INFORM SOFTWARE TECH, V113, P68, DOI 10.1016/j.infsof.2019.05.004
   Nair V, 2020, IEEE T SOFTWARE ENG, V46, P794, DOI 10.1109/TSE.2018.2870895
   Nardi L, 2019, I S MOD ANAL SIM COM, P347, DOI 10.1109/MASCOTS.2019.00045
   Olsson HH, 2017, LECT NOTES BUS INF P, V304, P179, DOI 10.1007/978-3-319-69191-6_12
   Rahman MT, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P201, DOI [10.1145/2901739.2901745, 10.1109/MSR.2016.029]
   Revesza Pataki N, 2017, 6 WORKSH SOFTW QUAL, P14
   Ries E, 2011, The Lean Startup
   Riquelme Carlos, 2018, ARXIV180209127
   Ros R, 2017, LECT NOTES COMPUT SC, V10452, P190, DOI 10.1007/978-3-319-66299-2_18
   Ros R, 2018, EUROMICRO CONF PROC, P353, DOI 10.1109/SEAA.2018.00064
   Ros R, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P35, DOI 10.1145/3194760.3194766
   Rossi F, 2006, FOUND ARTIF INTELL, P1
   Runeson P, 2020, CONT EMPIRICAL METHO
   Russo DJ, 2018, FOUND TRENDS MACH LE, V11, P1, DOI 10.1561/2200000070
   Schein A. I., 2002, Proceedings of SIGIR 2002. Twenty-Fifth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P253, DOI 10.1145/564376.564421
   Schermann G, 2018, PROC IEEE INT CONF S, P485, DOI 10.1109/ICSME.2018.00059
   Schwabe D, 2002, IEEE INTERNET COMPUT, V6, P34, DOI 10.1109/4236.991441
   Sculley D., 2014, MACHINE LEARNING HIG
   Silva JL, 2008, ELECTRON NOTES THEOR, V208, P77, DOI 10.1016/j.entcs.2008.03.108
   Singer Janice, 2008, Guide to Advanced Empirical Software Engineering, P9
   Snoek J., 2012, Advances in Neural Information Processing Systems, V25, DOI DOI 10.48550/ARXIV.1206.2944
   Sun JY, 2019, IEEE T EVOLUT COMPUT, V23, P541, DOI 10.1109/TEVC.2018.2865495
   Sutton R. S., 1998, Adaptive Computation and Machine Learning
   Tamburrelli G, 2014, LECT NOTES COMPUT SC, V8636, P184, DOI 10.1007/978-3-319-09940-8_13
   Tang D., 2010, P 16 ACM SIGKDD INT, P17, DOI [DOI 10.1145/1835804.1835810, 10.1145/1835804.1835810]
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Wieringa Roel J., 2014, Design science methodology for information systems and software engineering
   Williams A, 2009, SIGDOC'09: PROCEEDINGS OF THE 27TH ACM INTERNATIONAL CONFERENCE ON DESIGN OF COMMUNICATION, P1
   Yaman SG, 2017, J SYST SOFTWARE, V133, P195, DOI 10.1016/j.jss.2017.07.009
   Yaman SG, 2016, LECT NOTES COMPUT SC, V9619, P249, DOI 10.1007/978-3-319-30282-9_18
NR 86
TC 2
Z9 3
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3841
EP 3872
DI 10.1007/s10664-020-09856-1
EA AUG 2020
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000561985000002
OA hybrid
DA 2024-07-18
ER

PT J
AU Hu, X
   Li, G
   Xia, X
   Lo, D
   Jin, Z
AF Hu, Xing
   Li, Ge
   Xia, Xin
   Lo, David
   Jin, Zhi
TI Deep code comment generation with hybrid lexical and syntactical
   information
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Program comprehension; Comment generation; Deep learning
AB During software maintenance, developers spend a lot of time understanding the source code. Existing studies show that code comments help developers comprehend programs and reduce additional time spent on reading and navigating source code. Unfortunately, these comments are often mismatched, missing or outdated in software projects. Developers have to infer the functionality from the source code. This paper proposes a new approach named Hybrid-DeepCom to automatically generate code comments for the functional units of Java language, namely, Java methods. The generated comments aim to help developers understand the functionality of Java methods. Hybrid-DeepCom applies Natural Language Processing (NLP) techniques to learn from a large code corpus and generates comments from learned features. It formulates the comment generation task as the machine translation problem. Hybrid-DeepCom exploits a deep neural network that combines the lexical and structure information of Java methods for better comments generation. We conduct experiments on a large-scale Java corpus built from 9,714 open source projects on GitHub. We evaluate the experimental results on both machine translation metrics and information retrieval metrics. Experimental results demonstrate that our method Hybrid-DeepCom outperforms the state-of-the-art by a substantial margin. In addition, we evaluate the influence of out-of-vocabulary tokens on comment generation. The results show that reducing the out-of-vocabulary tokens improves the accuracy effectively.
C1 [Hu, Xing; Li, Ge; Jin, Zhi] Peking Univ, Minist Educ, Key Lab High Confidence Software Technol, Beijing, Peoples R China.
   [Hu, Xing; Li, Ge; Jin, Zhi] Peking Univ, Inst Software, EECS, Beijing, Peoples R China.
   [Xia, Xin] Monash Univ, Fac Informat Technol, Melbourne, Vic, Australia.
   [Lo, David] Singapore Management Univ, Sch Informat Syst, Singapore, Singapore.
C3 Peking University; Peking University; Monash University; Singapore
   Management University
RP Li, G; Jin, Z (corresponding author), Peking Univ, Minist Educ, Key Lab High Confidence Software Technol, Beijing, Peoples R China.; Li, G; Jin, Z (corresponding author), Peking Univ, Inst Software, EECS, Beijing, Peoples R China.
EM huxing0101@pku.edu.cn; lige@pku.edu.cn; xin.xia@monash.edu;
   davidlo@smu.edu.sg; zhijin@pku.edu.cn
RI Xia, Xin/AAD-6217-2022; Jin, Zhi/E-1288-2013; Lo, David/A-2493-2012
OI Xia, Xin/0000-0002-6302-3256; Lo, David/0000-0002-4367-7201; Hu,
   Xing/0000-0003-0093-3292
CR Allamanis M, 2016, PR MACH LEARN RES, V48
   Allamanis M, 2015, PR MACH LEARN RES, V37, P2123
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   Amann S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P464, DOI [10.1145/2901739.2903506, 10.1109/MSR.2016.055]
   [Anonymous], 2014, COMP SCI
   [Anonymous], 2013, P 9 JOINT M EUR SOFT
   [Anonymous], 2017, ARXIV170407734
   [Anonymous], 2015, ARXIV151201337
   [Anonymous], 2010, P IEEE ACM INT C AUT
   [Anonymous], 1997, NEURAL COMPUT
   [Anonymous], 2012, ARXIV12108440
   [Anonymous], 2017, ARXIV PREPRINT ARXIV
   [Anonymous], 2014, INT C MACH LEARN ICM
   [Anonymous], 2014, 9 WORKSH STAT MACH T, DOI DOI 10.3115/V1/W14-3346
   [Anonymous], IEEE T SOFTW ENG
   [Anonymous], 2016, AAAI
   [Anonymous], 2014, EMPIRICAL EVALUATION
   [Anonymous], 2017, ARXIV170401696
   [Anonymous], P 3 WORLD C SOFTW QU
   Deng Y., 2017, ARXIV170102810
   Denkowski Michael, 2014, P 9 WORKSH STAT MACH, DOI [10.3115/v1/W14-3348, DOI 10.3115/V1/W14-3348]
   Eddy BP, 2013, CONF PROC INT SYMP C, P13, DOI 10.1109/ICPC.2013.6613829
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Koehn P, 2004, LECT NOTES COMPUT SC, V3265, P115
   Leitner P., 2017, P 8 ACMSPEC INT C PE, P373
   Liu ZX, 2018, IEEE INT CONF AUTOM, P373, DOI 10.1145/3238147.3238190
   Loyola P., 2017, ARXIV170404856
   McBurney P. W., 2014, P 22 INT C PROGRAM C, P279
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Mou L, 2015, ARXIV151007211
   Movshovitz-Attias Dana., 2013, Natural language models for predicting programming comments"
   Oda Y, 2015, IEEE INT CONF AUTOM, P574, DOI 10.1109/ASE.2015.36
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Ray B, 2016, PROC INT CONF SOFTW, P428, DOI 10.1145/2884781.2884848
   Raychev V, 2015, ACM SIGPLAN NOTICES, V50, P111, DOI [10.1145/2775051.2677009, 10.1145/2676726.2677009]
   Sai Zhang, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P63, DOI 10.1109/ASE.2011.6100145
   Sridhara G, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P101, DOI 10.1145/1985793.1985808
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Srivastava N, 2016, JCI INSIGHT, V1, DOI 10.1172/jci.insight.88544
   Sutskever I, 2014, ADV NEUR IN, V27
   Svajlenko J, 2016, INT J SOFTW ENG KNOW, V26, P1399, DOI 10.1142/S0218194016400106
   Nguyen TD, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P756, DOI 10.1145/2889160.2892661
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Wong E, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P380, DOI 10.1109/SANER.2015.7081848
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Wu Yonghui, 2016, P C ASS MACH TRANSL
   Xiong Y, 2018, INT C DIGITAL HOME, P82, DOI 10.1109/ICDH.2018.00023
NR 56
TC 130
Z9 146
U1 4
U2 23
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2020
VL 25
IS 3
SI SI
BP 2179
EP 2217
DI 10.1007/s10664-019-09730-9
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LL7FD
UT WOS:000531720100014
OA Bronze, Green Accepted
DA 2024-07-18
ER

PT J
AU Guo, ZQ
   Li, YH
   Ma, WWY
   Zhou, YM
   Lu, HM
   Chen, L
   Xu, BW
AF Guo, Zhaoqiang
   Li, Yanhui
   Ma, Wanwangying
   Zhou, Yuming
   Lu, Hongmin
   Chen, Lin
   Xu, Baowen
TI Boosting crash-inducing change localization with rank-performance-based
   feature subset selection
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Crash-inducing change; Software crash; Bug localization; Feature subset
   selection; Crash stack
AB Given a bucket of crash reports, it would be helpful for developers to find and fix the corresponding defects if the crash-inducing software changes can be automatically located. Recently, an approach called ChangeLocator was proposed, which used ten change-level features to train a supervised model based on the data from the historical fixed crashes. It was reported that ChangeLocator achieved a good performance in terms of Recall@1, MAP, and MRR, when all the ten features were combined together. However, in ChangeLocator, the redundancy between features are neglected, which may degrade the localization effectiveness. In this paper, we propose an improved approach ChangeRanker with a rank-performance-based feature selection technology (Rfs) to boost the effectiveness of crash-inducing change localization. Our experimental results on NetBeans show that ChangeRanker can achieve an improvement of 35.9%, 17.4%, and 15.3% over ChangeLocator in terms of Recall@1, MRR, and MAP, respectively. Furthermore, compared with three popular feature selection approaches, Rfs is able to select more informative features to boost localization effectiveness. In order to assess the real generalization capability of the proposed extension, we adapt ChangeRanker and ChangeLocator to locate bug-inducing changes on three additional data sets. Again, we observe that, on average, ChangeRanker achieves an improvement of 115.3%, 37.6%, and 41.2% in terms of Recall@1, MRR, and MAP, respectively. This indicates that our proposed rank-performance-based feature selection method has a good generalization capability. In summary, our work provides an easy-to-use approach to boosting the performance of the state-of-the-art crash-inducing change localization approach.
C1 [Guo, Zhaoqiang; Li, Yanhui; Ma, Wanwangying; Zhou, Yuming; Lu, Hongmin; Chen, Lin; Xu, Baowen] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
C3 Nanjing University
RP Zhou, YM (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
EM naplus@smail.nju.edu.cn; yanhuili@nju.edu.cn; xiaobena@live.cn;
   zhouyuming@nju.edu.cn; hmlu@nju.edu.cn; lchen@nju.edu.cn;
   bwxu@nju.edu.cn
RI Xu, Baowen/IXW-4882-2023; Guo, Zhaoqiang/HKN-8554-2023
OI Xu, Baowen/0000-0001-7743-1296; Li, Yanhui/0000-0003-2282-7175; Guo,
   Zhaoqiang/0000-0001-8971-5755
FU National Key R&D Program of China [2018YFB1003901]; National Natural
   Science Foundation of China [61772259, 61872177, 61832009, 61772263]
FX This work is partially supported by the National Key R&D Program of
   China (2018YFB1003901) and the National Natural Science Foundation of
   China (61772259, 61872177, 61832009, 61772263).
CR Allison P. D., 2012, LOGISTIC REGRESSION
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], 2014, P 2014 INT S SOFTWAR, DOI DOI 10.1145/2610384.2610386
   [Anonymous], IEEE T SOFTW ENG
   Benavoli A, 2016, J MACH LEARN RES, V17
   BENJAMINI Y, 1995, J R STAT SOC B, V57, P289, DOI 10.1111/j.2517-6161.1995.tb02031.x
   Bettenburg N., 2008, P 2008 INT WORKING C, P27
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Cohen J., 2013, APPL MULTIPLE REGRES, DOI DOI 10.2307/2064799
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Dang YN, 2012, PROC INT CONF SOFTW, P1084, DOI 10.1109/ICSE.2012.6227111
   diaeresis>tze Hinrich Schu<spacing, 2008, INTRO INFORM RETRIEV, V39
   Ferrus T, 2008, 2008 IEEE SILICON NANOELECTRONICS WORKSHOP, P32
   Gao KH, 2012, SOFTWARE QUAL J, V20, P3, DOI 10.1007/s11219-011-9132-0
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   GREEN SB, 1991, MULTIVAR BEHAV RES, V26, P499, DOI 10.1207/s15327906mbr2603_7
   Guyon Isabelle, 2003, J MACH LEARN RES, V3, P1157, DOI DOI 10.1162/153244303322753616
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Hoang VD, 2018, IEEE T SOFTWARE ENG
   Holmes G., 1994, Proceedings of the 1994 Second Australian and New Zealand Conference on Intelligent Information Systems (Cat. No.94TH8019), P357, DOI 10.1109/ANZIIS.1994.396988
   Kim D, 2011, IEEE T SOFTWARE ENG, V37, P430, DOI 10.1109/TSE.2011.20
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kinshumann K, 2011, COMMUN ACM, V54, P111, DOI 10.1145/1965724.1965749
   Kohavi R., 1998, FEATURE EXTRACTION C
   Kohavi R., 1995, INT JOINT C ART INT, V2, P1137, DOI DOI 10.1067/MOD.2000.109031
   Le TDB, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P579, DOI 10.1145/2786805.2786880
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Lin DZ, 2018, NEUROCOMPUTING, V288, P11, DOI 10.1016/j.neucom.2017.02.105
   Lingming Zhang, 2011, 2011 IEEE 27th International Conference on Software Maintenance, P23, DOI 10.1109/ICSM.2011.6080769
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Luu Ngoc An, 2015, 2015 IEEE Power & Energy Society General Meeting, P1, DOI 10.1109/PESGM.2015.7286094
   Moreno L, 2013, PROC IEEE INT CONF S, P452, DOI 10.1109/ICSM.2013.70
   Moser R, 2009, ICSE, P181
   Muthukumaran K., 2015, P 8 INDIA SOFTWARE E, P120
   Rahman S, 2016, ICCIT
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Rathore SS, 2014, ISEC
   Rodriguez D, 2007, IRI 2007: PROCEEDINGS OF THE 2007 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P667, DOI 10.1109/IRI.2007.4296696
   SHAFFER JP, 1986, J AM STAT ASSOC, V81, P826, DOI 10.2307/2289016
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Uneno Y, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS 2016), P183, DOI 10.1109/QRS.2016.30
   VanVoorhis CRW, 2007, TUTOR QUANT METHODS, V3, P43, DOI 10.20982/tqmp.03.2.p043
   VENKATESH GA, 1991, SIGPLAN NOTICES, V26, P107, DOI 10.1145/113446.113455
   Wang SW, 2014, PROC IEEE INT CONF S, P171, DOI 10.1109/ICSME.2014.39
   Wang S, 2009, 2009 IEEE SYMPOSIUM ON COMPUTATIONAL INTELLIGENCE AND DATA MINING, P324, DOI 10.1109/CIDM.2009.4938667
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wu RX, 2018, EMPIR SOFTW ENG, V23, P2866, DOI 10.1007/s10664-017-9567-4
   Xu Z, 2016, PROC INT SYMP SOFTW, P309, DOI 10.1109/ISSRE.2016.13
   Youm KC, 2016, APSEC, P190
NR 53
TC 3
Z9 5
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2020
VL 25
IS 3
SI SI
BP 1905
EP 1950
DI 10.1007/s10664-020-09802-1
EA MAR 2020
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LL7FD
UT WOS:000517719200001
DA 2024-07-18
ER

PT J
AU Mengerink, JGM
   Noten, J
   Serebrenik, A
AF Mengerink, Josh G. M.
   Noten, Jeroen
   Serebrenik, Alexander
TI Empowering OCL research: a large-scale corpus of open-source data from
   GitHub
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Dataset; Model-driven engineering; OCL; EMF; Acceleo; Replication
   studies
AB Model-driven engineering (MDE) enables the rise in abstraction during development in software and system design. In particular, meta-models become a central artifact in the process, and are supported by various other artifacts such as editors and transformation. In order to define constraints, invariants, and queries on model-driven artifacts, a generic language has been developed: the Object Constraint Language (OCL). In literature, many studies into OCL have been performed on small collections of data, mostly originating from a single source (e.g., OMG standards). As such, generalization of results beyond the data studied is often mentioned as a threat to validity. Creation of a benchmark dataset has already been identified as a key enabler to address the generalization threat. To facilitate further empirical studies in the field of OCL, we present the first large-scale dataset of 103262 OCL expression, systematically extracted from 671 GitHub repositories. In particular, our dataset has extracted these expressions from various types of files (a.o. metamodels and model-to-text transformations). In this work we showcase a variety of different studies performed using our dataset, and describe several other types that could be performed. We extend previous work with data and experiments regarding OCL in model-to-text (mtl) transformations.
C1 [Mengerink, Josh G. M.] Eindhoven Univ Technol, Software Engn Technol Grp, Eindhoven, Netherlands.
   [Noten, Jeroen] Eindhoven Univ Technol, Eindhoven, Netherlands.
   [Serebrenik, Alexander] Eindhoven Univ Technol, Software Evolut, Eindhoven, Netherlands.
C3 Eindhoven University of Technology; Eindhoven University of Technology;
   Eindhoven University of Technology
RP Serebrenik, A (corresponding author), Eindhoven Univ Technol, Software Evolut, Eindhoven, Netherlands.
EM j.g.m.mengerink@tue.nl; a.serebrenik@tue.nl
OI Serebrenik, Alexander/0000-0002-1418-0095
FU ASML Holding N.V.
FX The work of the first author has been funded by the ASML Holding N.V.
CR Anastasakis K, 2010, SOFTW SYST MODEL, V9, P69, DOI 10.1007/s10270-008-0110-3
   [Anonymous], 2001, SYSML
   Basciani F., 2014, 2 INT WORKSH MOD DRI, V1242, P66
   Benjamini Y, 2001, ANN STAT, V29, P1165
   Bézivin J, 2006, LECT NOTES COMPUT SC, V4143, P36
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bottoni P., 2001, UML 2001 UNIFIED MOD, P257, DOI DOI 10.1007/3-540-45441-1_20
   Cabot J, 2006, MOD SOFTW ENG WORKSH, P1
   Cadavid JJ, 2015, COMPUT LANG SYST STR, V41, P42, DOI 10.1016/j.cl.2015.02.002
   Casalnuovo C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P755, DOI 10.1109/ICSE.2015.88
   Correa A, 2007, LECT NOTES COMPUT SC, V4735, P76
   Cuadrado LS, 2007, IEEE SOFTWARE, V24, P48, DOI 10.1109/MS.2007.135
   Eclipse Juno, 2012, ECL JUN DOC
   git, 2008, GITHUB HELP SEARCH C
   Goeminne M., 2011, JOINT PORCEEDINGS 1, P74
   Gogolla Martin, 2013, Tests and Proofs. 7th International Conference, TAP 2013. Proceedings: LNCS 7942, P115, DOI 10.1007/978-3-642-38916-0_7
   Gogolla M, 2007, SCI COMPUT PROGRAM, V69, P27, DOI 10.1016/j.scico.2007.01.013
   Gogolla M, 2016, LECT NOTES COMPUT SC, V9946, P289, DOI 10.1007/978-3-319-50230-4_22
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Habela P, 2008, LECT NOTES COMPUT SC, V5103, P311, DOI 10.1007/978-3-540-69389-5_36
   Hebig R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P173, DOI 10.1145/2976767.2976778
   Heitlager I, 2007, QUATIC 2007: 6TH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, PROCEEDINGS, P30, DOI 10.1109/QUATIC.2007.8
   Hermans F, 2009, LECT NOTES COMPUT SC, V5795, P423, DOI 10.1007/978-3-642-04425-0_33
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P633, DOI 10.1145/1985793.1985882
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   Jackson D, 2012, SOFTWARE ABSTRACTIONS: LOGIC, LANGUAGE, AND ANALYSIS, P1
   Jouault F, 2006, LECT NOTES COMPUT SC, V3844, P128
   Kleppe A.G., 2003, MDA Explained; The Model Driven Architecture: Practice and Promise
   Kolovos DS, 2008, LECT NOTES COMPUT SC, V5063, P46, DOI 10.1007/978-3-540-69927-9_4
   Kolovos DS, 2015, OSS4MDE MODELS, P20
   Konietschke F, 2012, ELECTRON J STAT, V6, P738, DOI 10.1214/12-EJS691
   Kuhlmann M, 2011, LECT NOTES COMPUT SC, V6705, P290, DOI 10.1007/978-3-642-21952-8_21
   Landman D, 2017, PROC INT CONF SOFTW, P507, DOI 10.1109/ICSE.2017.53
   Mengerink J, 2017, ACM IEEE 20 INT C MO, P472
   Mengerink JGM, 2017, 27 INT WORKSH SOFTW, P116
   Menzies T, 2016, PERSPECTIVES ON DATA SCIENCE FOR SOFTWARE ENGINEERING, P1
   Mohagheghi P, 2013, EMPIR SOFTW ENG, V18, P89, DOI 10.1007/s10664-012-9196-x
   Muller Jim., 1998, The Great Logo Adventure: Discovering Logo on and Off the Computer
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Noten J, 2017, DATA SET OCL EXPRESS, DOI [10.4121/uuid:83317fd5-91f5-4e4b-b475-3e2d8ff12d1c, DOI 10.4121/UUID:83317FD5-91F5-4E4B-B475-3E2D8FF12D1C]
   Noten J, 2017, IEEE WORK CONF MIN S, P531, DOI 10.1109/MSR.2017.52
   Oliveira P, 2014, PROC IEEE INT CONF S, P629, DOI 10.1109/ICSME.2014.112
   Petre M, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P722, DOI 10.1109/ICSE.2013.6606618
   Reynoso L., 2006, Applied Computing 2006. 21st Annual ACM Symposium on Applied Computing, P1721, DOI 10.1145/1141277.1141686
   Richters M., 1998, Conceptual Modeling - ER'98. 17th International Conference on Conceptual Modeling. Proceedings, P449
   Robles G, 2017, IEEE WORK CONF MIN S, P519, DOI 10.1109/MSR.2017.48
   Romano J., 2006, P ANN M SO ASS I RES
   Rose LM, 2010, LECT NOTES COMPUT SC, V6142, P184, DOI 10.1007/978-3-642-13688-7_13
   Scheidgen M, 2006, JOINT MEETING OF THE FOURTH WORKSHOP ON MODEL-BASED DEVELOPMENT OF COMPUTER-BASED SYSTEMS AND THIRD INTERNATIONAL WORKSHOP ON MODEL-BASED METHODOLOGIES FOR PERVASIVE AND EMBEDDED SOFTWARE, PROCEEDINGS, P84
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Vasilescu B, 2014, EMPIR SOFTW ENG, V19, P955, DOI 10.1007/s10664-013-9244-1
   Warmer J., 2003, OBJECT CONSTRAINT LA, Vsecond
   Whittle J, 2014, IEEE SOFTWARE, V31, P79, DOI 10.1109/MS.2013.65
   Willink ED, 2011, ALIGNING OCL UML, P44
NR 55
TC 9
Z9 9
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2019
VL 24
IS 3
BP 1574
EP 1609
DI 10.1007/s10664-018-9641-6
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ID9YT
UT WOS:000472043800016
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Halin, A
   Nuttinck, A
   Acher, M
   Devroey, X
   Perrouin, G
   Baudry, B
AF Halin, Axel
   Nuttinck, Alexandre
   Acher, Mathieu
   Devroey, Xavier
   Perrouin, Gilles
   Baudry, Benoit
TI Test them all, is it worth it? Assessing configuration sampling on the
   JHipster Web development stack
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Configuration sampling; Variability-intensive system; Software testing;
   JHipster; Case study
ID SOFTWARE PRODUCT LINES; SYSTEMS; PRIORITIZATION
AB Many approaches for testing configurable software systems start from the same assumption: it is impossible to test all configurations. This motivated the definition of variability-aware abstractions and sampling techniques to cope with large configuration spaces. Yet, there is no theoretical barrier that prevents the exhaustive testing of all configurations by simply enumerating them if the effort required to do so remains acceptable. Not only this: we believe there is a lot to be learned by systematically and exhaustively testing a configurable system. In this case study, we report on the first ever endeavour to test all possible configurations of the industry-strength, open source configurable software system JHipster, a popular code generator for web applications. We built a testing scaffold for the 26,000+ configurations of JHipster using a cluster of 80 machines during 4 nights for a total of 4,376 hours (182 days) CPU time. We find that 35.70% configurations fail and we identify the feature interactions that cause the errors. We show that sampling strategies (like dissimilarity and 2-wise): (1) are more effective to find faults than the 12 default configurations used in the JHipster continuous integration; (2) can be too costly and exceed the available testing budget. We cross this quantitative analysis with the qualitative assessment of JHipster's lead developers.
C1 [Halin, Axel; Perrouin, Gilles] Univ Namur, Fac Comp Sci, NaDI, PReCISE, Namur, Belgium.
   [Nuttinck, Alexandre] CETIC, Charleroi, Belgium.
   [Acher, Mathieu] Univ Rennes, IRISA, CNRS, INRIA, Rennes, France.
   [Devroey, Xavier] Delft Univ Technol, SERG, Delft, Netherlands.
   [Baudry, Benoit] KTH Royal Inst Technol, Stockholm, Sweden.
C3 University of Namur; Universite de Rennes; Centre National de la
   Recherche Scientifique (CNRS); Inria; Delft University of Technology;
   Royal Institute of Technology
RP Devroey, X (corresponding author), Delft Univ Technol, SERG, Delft, Netherlands.
EM alexandre.nuttinck@cetic.be; mathieu.acher@irisa.fr;
   x.d.m.devroey@tudelft.nl; gilles.perrouin@unamur.be; baudry@kth.se
RI Perrouin, Gilles/I-1621-2019; Devroey, Xavier/I-3918-2019
OI Perrouin, Gilles/0000-0002-8431-0377; Devroey,
   Xavier/0000-0002-0831-7606
FU EU Project STAMP ICT-16-10 [731529]; Dutch 4TU project "Big Software on
   the Run"; European Regional Development Fund (ERDF) " Ideas for the
   future Internet" (IDEES) project
FX We would like to thank Prof. Arnaud Blouin for his comments and feedback
   on the paper. This research was partially funded by the EU Project STAMP
   ICT-16-10 No. 731529 and the Dutch 4TU project "Big Software on the Run"
   as well as by the European Regional Development Fund (ERDF) " Ideas for
   the future Internet" (IDEES) project.
CR Abal I., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, ASE '14, P421
   Abal I, 2018, ACM T SOFTW ENG METH, V26, DOI 10.1145/3149119
   Abbasi EK, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P264, DOI 10.1109/CSMR-WCRE.2014.6747178
   Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   Al-Hajjaji M, 2017, ACM SIGPLAN NOTICES, V52, P144, DOI [10.1145/2993236.2993253, 10.1145/3093335.2993253]
   [Anonymous], 2013, P 17 INT SOFTW PROD, DOI [DOI 10.1145/2491627.2491635, 10.1145/2491627.2491635]
   [Anonymous], 2017, P 11 INT WORKSH VAR, DOI DOI 10.1145/3023956.3023959
   Apel S., 2013, Feature-Oriented Software Development: Concepts and Implementation
   Apel S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P482, DOI 10.1109/ICSE.2013.6606594
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P1088, DOI 10.1109/TSE.2011.85
   Austin TH, 2012, ACM SIGPLAN NOTICES, V47, P165, DOI 10.1145/2103621.2103677
   Balouek D, 2012, RR8026 INRIA
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Classen A, 2013, IEEE T SOFTWARE ENG, V39, P1069, DOI 10.1109/TSE.2012.86
   Classen A, 2011, SCI COMPUT PROGRAM, V76, P1130, DOI 10.1016/j.scico.2010.10.005
   Cohen MB, 2008, IEEE T SOFTWARE ENG, V34, P633, DOI 10.1109/TSE.2008.50
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Devroey X, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P89, DOI 10.1145/2866614.2866627
   Devroey X, 2017, SOFTW SYST MODEL, V16, P153, DOI 10.1007/s10270-015-0479-8
   Devroey X, 2014, LECT NOTES COMPUT SC, V8802, P336, DOI 10.1007/978-3-662-45234-9_24
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Ensan Faezeh, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P613, DOI 10.1007/978-3-642-31095-9_40
   Ganesan D, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P74, DOI 10.1109/SPLINE.2007.21
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Halin Axel, 2017, P 11 INT WORKSH VAR, P44, DOI [10.1145/3023956.3023963, DOI 10.1145/3023956.3023963]
   Henard C, 2013, PROCEEDINGS OF THE 17TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE CO-LOCATED WORKSHOPS (SPLC'13 WORKSHOPS), P126
   Henard C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P517, DOI 10.1109/ICSE.2015.69
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Henard C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1245, DOI 10.1109/ICSE.2013.6606689
   Hervieu A, 2011, 22ND IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P120, DOI 10.1109/ISSRE.2011.31
   Hornik Kurt, 2005, Journal of Statistical Software, V14, DOI DOI 10.18637/JSS.V014.I15
   Nguyen HV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P907, DOI 10.1145/2568225.2568300
   Jalali S, 2012, INT SYMP EMP SOFTWAR, P29, DOI 10.1145/2372251.2372257
   Jin DP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P215, DOI 10.1145/2591062.2591191
   Johansen Martin Fagereng, 2012, Model Driven Engineering Languages and Systems. Proceedings 15th International Conference, MODELS 2012, P269, DOI 10.1007/978-3-642-33666-9_18
   Johansen MF, 2011, LECT NOTES COMPUT SC, V6981, P638, DOI 10.1007/978-3-642-24485-8_47
   Johansen Martin Fagereng, 2012, P 16 INT SOFTWARE PR, P46, DOI [10.1145/2362536.2362547, DOI 10.1145/2362536.2362547]
   Johansen MF, 2016, PAIRWISER
   Kang K. C., 1990, Technical Report
   Kastner Christian, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P258, DOI 10.1109/ASE.2008.36
   Kenner A., 2010, P 2 INT WORKSH FEAT, P25, DOI DOI 10.1145/1868688.1868693
   Kim C.H. P., 2011, Proceedings of the Tenth International Conference on Aspect-oriented Software Development, P57
   Kim C.H. P., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, P257
   Kim M, 2016, PROC INT CONF SOFTW, P96, DOI 10.1145/2884781.2884783
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Lochau Malte, 2012, Tests and Proofs. Proceedings 6th International Conference, TAP 2012, P67, DOI 10.1007/978-3-642-30473-6_7
   Lochau M, 2012, SOFTWARE QUAL J, V20, P567, DOI 10.1007/s11219-011-9165-4
   Lopez-Herrejon R. E., 2015, 8 IEEE INT C SOFTW T, P1, DOI DOI 10.1109/ICSTW.2015.7107435
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   MATHUR AP, 2008, FDN SOFTWARE TESTING
   Medeiros F, 2016, PROC INT CONF SOFTW, P643, DOI 10.1145/2884781.2884793
   Meinicke J, 2016, IEEE INT CONF AUTOM, P483, DOI 10.1145/2970276.2970322
   Melo J, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P3, DOI 10.1145/2866614.2866615
   Nadi S, 2015, IEEE T SOFTWARE ENG, V41, P820, DOI 10.1109/TSE.2015.2415793
   Oster S, 2010, LECT NOTES COMPUT SC, V6287, P196, DOI 10.1007/978-3-642-15579-6_14
   Oster Sebastian., 2011, P 5 WORKSHOP VARIABI, DOI [DOI 10.1145/1944892.1944901, 10.1145/1944892.1944901]
   Parejo JA, 2016, J SYST SOFTWARE, V122, P287, DOI 10.1016/j.jss.2016.09.045
   Perrouin Gilles, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P459, DOI 10.1109/ICST.2010.43
   Perrouin G, 2012, SOFTWARE QUAL J, V20, P605, DOI 10.1007/s11219-011-9160-9
   Petke Justyna, 2013, P ESEC FSE 2013, DOI [DOI 10.1145/2491411.2491436, 10.1145/2491411.2491436]
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Qu X., 2008, P 2008 INT S SOFTW T, P75
   Rabkin A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P131, DOI 10.1145/1985793.1985812
   Raible M, 2015, JHIPSTER MINIBOOK
   Reisner E., 2010, P ACM IEEE INT C SOF, V1, P445, DOI DOI 10.1145/1806799.1806864
   Sánchez AB, 2017, SOFTW SYST MODEL, V16, P173, DOI 10.1007/s10270-015-0459-z
   Sánchez AB, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P41, DOI 10.1109/ICST.2014.15
   Sayyad AS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P492, DOI 10.1109/ICSE.2013.6606595
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Shi JF, 2012, LECT NOTES COMPUT SC, V7212, P270, DOI 10.1007/978-3-642-28872-2_19
   Souto S, 2017, PROC INT CONF SOFTW, P632, DOI 10.1109/ICSE.2017.64
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Uzuncaova E, 2010, IEEE T SOFTWARE ENG, V36, P309, DOI 10.1109/TSE.2010.30
   Yilmaz C, 2006, IEEE T SOFTWARE ENG, V32, P20, DOI 10.1109/TSE.2006.8
NR 76
TC 35
Z9 35
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2019
VL 24
IS 2
BP 674
EP 717
DI 10.1007/s10664-018-9635-4
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ8DM
UT WOS:000462654200005
OA Green Published, Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Wu, YH
   Wang, SW
   Bezemer, CP
   Inoue, K
AF Wu, Yuhao
   Wang, Shaowei
   Bezemer, Cor-Paul
   Inoue, Katsuro
TI How do developers utilize source code from stack overflow?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
AB Technical question and answer Q&A platforms, such as Stack Overflow, provide a platform for users to ask and answer questions about a wide variety of programming topics. These platforms accumulate a large amount of knowledge, including hundreds of thousands lines of source code. Developers can benefit from the source code that is attached to the questions and answers on Q&A platforms by copying or learning from (parts of) it. By understanding how developers utilize source code from Q&A platforms, we can provide insights for researchers which can be used to improve next-generation Q&A platforms to help developers reuse source code fast and easily. In this paper, we first conduct an exploratory study on 289 files from 182 open-source projects, which contain source code that has an explicit reference to a Stack Overflow post. Our goal is to understand how developers utilize code from Q&A platforms and to reveal barriers that may make code reuse more difficult. In 31.5% of the studied files, developers needed to modify source code from Stack Overflow to make it work in their own projects. The degree of required modification varied from simply renaming variables to rewriting the whole algorithm. Developers sometimes chose to implement an algorithm from scratch based on the descriptions from Stack Overflow answers, even if there was an implementation readily available in the post. In 35.5% of the studied files, developers used Stack Overflow posts as an information source for later reference. To further understand the barriers of reusing code and to obtain suggestions for improving the code reuse process on Q&A platforms, we conducted a survey with 453 open-source developers who are also on Stack Overflow. We found that the top 3 barriers that make it difficult for developers to reuse code from Stack Overflow are: (1) too much code modification required to fit in their projects, (2) incomprehensive code, and (3) low code quality. We summarized and analyzed all survey responses and we identified that developers suggest improvements for future Q&A platforms along the following dimensions: code quality, information enhancement & management, data organization, license, and the human factor. For instance, developers suggest to improve the code quality by adding an integrated validator that can test source code online, and an outdated code detection mechanism. Our findings can be used as a roadmap for researchers and developers to improve code reuse.
C1 [Wu, Yuhao; Inoue, Katsuro] Osaka Univ, Grad Sch Informat Sci & Technol, Suita, Osaka, Japan.
   [Wang, Shaowei; Bezemer, Cor-Paul] Queens Univ, SAIL, Kingston, ON, Canada.
C3 Osaka University; Queens University - Canada
RP Wang, SW (corresponding author), Queens Univ, SAIL, Kingston, ON, Canada.
EM wuyuhao@ist.osaka-u.ac.jp; shaowei@cs.queensu.ca; bezemer@cs.queensu.ca;
   inoue@ist.osaka-u.ac.jp
OI Bezemer, Cor-Paul/0000-0002-0474-5718
CR Abdalkareem R, 2017, IEEE SOFTWARE, V34, P53, DOI 10.1109/MS.2017.31
   Ahasanuzzaman M, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P402, DOI 10.1145/2901739.2901770
   Almeida DA, 2017, INT C PROGRAM COMPRE, P1, DOI 10.1109/ICPC.2017.7
   Alnusair A, 2016, QUALITY SOFTWARE REU, P42
   An L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P283, DOI 10.1109/SANER.2017.7884629
   Anderson A, 2013, P 22 INT C WORLD WID, DOI DOI 10.1145/2488388.2488398
   Nguyen AT, 2012, PROC INT CONF SOFTW, P69, DOI 10.1109/ICSE.2012.6227205
   [Anonymous], IEEE T SOFTWARE ENG
   [Anonymous], 2014, INTRO ABSOLETE ANSWE
   [Anonymous], 2002, Stat. Methods Inter-Rater Reliab. Assess. Ser.
   [Anonymous], 2017, ARXIV170401696
   Armaly A, 2016, J SOFTW-EVOL PROC, V28, P642, DOI 10.1002/smr.1790
   Atwood J, 2009, ATTRIBUTION REQUIRED
   Azad S, 2017, ACM T SOFTW ENG METH, V25, DOI 10.1145/2990497
   Bajracharya S., 2006, COMP 21 ACM SIGPLAN, P681, DOI DOI 10.1145/1176617.1176671
   Barzilay O., 2011, Proceedings of the 10th SIGPLAN Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software, Onward! 2011, P137
   Bian J, 2014, KNOWLEDGE POWERED DE, P132
   Cavusoglu H., 2015, P ACM C COMPUTER SUP, V2015, P171, DOI DOI 10.1145/2685553.2698999
   Chen CY, 2017, PROC INT CONF SOFTW, P450, DOI 10.1109/ICSE.2017.48
   Chen CY, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P338, DOI 10.1109/SANER.2016.21
   Cottrell Rylan., 2008, P INT S FDN SOFTWARE, P214, DOI [DOI 10.1145/1453101.1453130, 10.1145/1453101.1453130]
   Feldthaus A, 2013, ACM SIGPLAN NOTICES, V48, P323, DOI [10.1145/2544173.2509520, 10.1145/2509136.2509520]
   Galenson J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P653, DOI 10.1145/2568225.2568250
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Ganguly D, 2015, SIGIR 2015: PROCEEDINGS OF THE 38TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P795, DOI 10.1145/2766462.2767780
   Gao Q, 2015, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2015.81
   Gharehyazie M, 2017, IEEE WORK CONF MIN S, P291, DOI 10.1109/MSR.2017.15
   Glaser B. G., 2017, SOCIOLOGICAL METHODS, P105
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Lai SW, 2015, AAAI CONF ARTIF INTE, P2267
   Liu P., 2015, P 2015 C EMP METH NA, P1433, DOI [10.18653/v1/D15-1168, DOI 10.18653/V1/D15-1168]
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Meng N, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P392, DOI 10.1109/ICSE.2015.58
   Meng N, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P502, DOI 10.1109/ICSE.2013.6606596
   Meng N, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P329
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P577, DOI 10.1109/ICSME.2014.99
   Ponzanelli L, 2014, INT CONF QUAL SOFTW, P343, DOI 10.1109/QSIC.2014.27
   Ponzanelli L, 2013, EUR CON SFTWR MTNCE, P57, DOI 10.1109/CSMR.2013.16
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Raychev V, 2014, ACM SIGPLAN NOTICES, V49, P419, DOI [10.1145/2594291.2594321, 10.1145/2666356.2594321]
   Reja U., 2003, DEV PPLIED STAT, V33, P160
   Rigby PC, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P832, DOI 10.1109/ICSE.2013.6606629
   Seaman C, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P149
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Stack Exchange, 2015, MIT LIC CLAR US COD
   Stack Exchange, 2017, ALL SIT
   Stack Overflow, 2014, FEEDB REQ RUNN COD S
   Stack Overflow, 2016, STACK OV DEV SURV RE
   Treude C, 2017, PROC IEEE INT CONF S, P509, DOI 10.1109/ICSME.2017.24
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Vasilescu B, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P188, DOI 10.1109/SocialCom.2013.35
   Wang H, 2010, Proceedings of the ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P783, DOI [DOI 10.1145/1835804.1835903, 10.1145/1835804.1835903]
   Wang S., 2014, ACM/IEEE International Conference on Automated Software Engineering, ASE '14, Vasteras, Sweden - September 15 - 19, 2014, P677
   Wang S, 2017, EMPIRICAL SOFTWARE E
   Wang SW, 2016, AUTOMAT SOFTW ENG, V23, P393, DOI 10.1007/s10515-014-0170-2
   Wang SW, 2014, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSME.2014.51
   Wang SM, 2017, EPIGENETICS-US, V12, P187, DOI 10.1080/15592294.2016.1273308
   Wang XR, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P205, DOI 10.1109/SANER.2017.7884622
   Wang XR, 2014, J SOFTW-EVOL PROC, V26, P27, DOI 10.1002/smr.1581
   Wang YP, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P1028, DOI 10.1145/2950290.2983934
   Wang Z., 2017, ARXIV170203814
   Wong T.-L., 2008, P 31 ANN INT ACM SIG, P35
   Wu Y, 2017, ONLINE APPENDIX MANU
   Xia X., 2017, EMPIRICAL SOFTWARE E
   Yellin DM, 1997, ACM T PROGR LANG SYS, V19, P292, DOI 10.1145/244795.244801
   Yu J, 2011, P 49 ANN M ASS COMP, P1496, DOI DOI 10.1109/CC.2013.6488828
   Zagalsky A, 2017, EMPIRICAL SOFTWARE E
   Zhang WE, 2017, PROCEEDINGS OF THE 26TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'17), P1221, DOI 10.1145/3038912.3052701
   Zhang Y, 2015, J COMPUT SCI TECH-CH, V30, P981, DOI 10.1007/s11390-015-1576-4
   Zhao L, 2009, ONTOLOGY BASED OPINI, P204
   Zhou PY, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P272, DOI 10.1109/SANER.2017.7884628
NR 75
TC 56
Z9 67
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2019
VL 24
IS 2
BP 637
EP 673
DI 10.1007/s10664-018-9634-5
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HQ8DM
UT WOS:000462654200004
OA hybrid
DA 2024-07-18
ER

PT J
AU Alexandru, CV
   Panichella, S
   Proksch, S
   Gall, HC
AF Alexandru, Carol V.
   Panichella, Sebastiano
   Proksch, Sebastian
   Gall, Harald C.
TI Redundancy-free analysis of multi-revision software artifacts
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software analysis; Software evolution; Graph database; Asynchronous
   computation; Static code analysis; Large-scale; Multi-language;
   Language-independent
ID QUALITY; HISTORY; TOOL
AB Researchers often analyze several revisions of a software project to obtain historical data about its evolution. For example, they statically analyze the source code and monitor the evolution of certain metrics over multiple revisions. The time and resource requirements for running these analyses often make it necessary to limit the number of analyzed revisions, e.g., by only selecting major revisions or by using a coarse-grained sampling strategy, which could remove significant details of the evolution. Most existing analysis techniques are not designed for the analysis of multi-revision artifacts and they treat each revision individually. However, the actual difference between two subsequent revisions is typically very small. Thus, tools tailored for the analysis of multiple revisions should only analyze these differences, thereby preventing re-computation and storage of redundant data, improving scalability and enabling the study of a larger number of revisions. In this work, we propose the Lean Language-Independent Software Analyzer (LISA), a generic framework for representing and analyzing multi-revisioned software artifacts. It employs a redundancy-free, multi-revision representation for artifacts and avoids re-computation by only analyzing changed artifact fragments across thousands of revisions. The evaluation of our approach consists of measuring the effect of each individual technique incorporated, an in-depth study of LISA resource requirements and a large-scale analysis over 7 million program revisions of 4,000 software projects written in four languages. We show that the time and space requirements for multi-revision analyses can be reduced by multiple orders of magnitude, when compared to traditional, sequential approaches.
C1 [Alexandru, Carol V.; Panichella, Sebastiano; Proksch, Sebastian; Gall, Harald C.] Software Evolut & Architecture Lab Seal, Binzmuhlestr 14, CH-8050 Zurich, Switzerland.
RP Alexandru, CV (corresponding author), Software Evolut & Architecture Lab Seal, Binzmuhlestr 14, CH-8050 Zurich, Switzerland.
EM alexandru@ifi.uzh.ch; panichella@ifi.uzh.ch; proksch@ifi.uzh.ch;
   gall@ifi.uzh.ch
OI Gall, Harald/0000-0002-3874-5628; Panichella,
   Sebastiano/0000-0003-4120-626X
FU Swiss National Science Foundation [149450, 166275]; Swiss Group for
   Original and Outside-the-box Software Engineering (CHOOSE)
FX We thank the reviewers for their valuable feedback. This research is
   partially supported by the Swiss National Science Foundation (Projects
   No. 149450 - "Whiteboard" and No. 166275 - "SURF-MobileAppsData") and
   the Swiss Group for Original and Outside-the-box Software Engineering
   (CHOOSE).
CR Alexandru CV, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P635, DOI 10.1109/ICSE.2015.211
   Alexandru CV, 2017, IEEE 24 INT C SOFTW
   Allamanis M., 2013, P 10 WORK C MIN SOFT
   [Anonymous], 2006, Proceedings of the 14th ACM SIGSOFT international symposium on Foundations of software engineering (SIGSOFT '06/FSE-14), DOI 10.1145/1181775.1181781
   [Anonymous], 2006, P 2006 INT WORKSH MI, DOI DOI 10.1145/1137983.1137999
   Arbuckle T., 2011, Proceedings of the 12th International Workshop on Principles of Software Evolution and the 7th annual ERCIM Workshop on Software Evolution, P91
   Bavota G, 2014, EMPIR SOFTW ENG, V20, P1
   Bavota G, 2013, PROC IEEE INT CONF S, P280, DOI 10.1109/ICSM.2013.39
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   Baxter ID, 1998, SOFTWARE MAINTENANCE
   Bevan Jennifer., 2005, ESECFSE 13, P177
   Binkley D, 2017, IEEE INT WORK C SO, P21, DOI 10.1109/SCAM.2017.11
   Bird C, 2009, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2009.5070550
   Bird Christian, 2008, Proceedings of the 2008 ACM SIGSOFT Symposium on the Foundations of Software Engineering, P24
   Bois BD, 2004, TECHNICAL REPORT
   Boughanmi Ferdaous, 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P293, DOI 10.1109/WCRE.2010.43
   Call HC, 2009, IEEE SOFTWARE, V26, P26, DOI 10.1109/MS.2009.6
   Chacon S., 2014, PROGIT, P131, DOI 10.1007/978-1-4842-0076-6_6
   Chawathe S. S., 1996, SIGMOD Record, V25, P493, DOI 10.1145/235968.233366
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   DAmbros M., 2008, Software Evolution, P37
   Deissenboeck F, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.129
   Deruelle L, 2001, FIRST IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P43, DOI 10.1109/SCAM.2001.972665
   Dyer R, 2013, THESIS
   Dyer R, 2014, ACM SIGPLAN NOTICES, V49, P23, DOI [10.1145/2637365.2517226, 10.1145/2517208.2517226]
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Gall H, 1997, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P160, DOI 10.1109/ICSM.1997.624242
   Ghezzi G, 2013, IEEE WORK CONF MIN S, P363, DOI 10.1109/MSR.2013.6624050
   Ghezzi G, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P93, DOI 10.1109/WICSA.2011.21
   Gîrba T, 2006, J SOFTW MAINT EVOL-R, V18, P207, DOI 10.1002/smr.325
   González-Barahona JM, 2012, EMPIR SOFTW ENG, V17, P75, DOI 10.1007/s10664-011-9181-9
   Hadjidj R, 2008, ANN CONF PRIV SECUR, P133, DOI 10.1109/PST.2008.21
   Hernández L, 2015, 2015 12TH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY - NEW GENERATIONS, P397, DOI 10.1109/ITNG.2015.70
   Hills Mark, 2012, Rewriting Logic and Its Applications. 9th International Workshop, WRLA 2012. Held as a Satellite Event of ETAPS. Revised Selected Papers, P10, DOI 10.1007/978-3-642-34005-5_2
   Izmaylova A, 2013, ARXIV13121188
   Juergens E, 2010, 2010 14 EUR C SOFTW
   Kästner C, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P805
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kienle HM, 2010, SCI COMPUT PROGRAM, V75, P247, DOI 10.1016/j.scico.2009.10.007
   Kim M., 2010, P IEEE ACM INT C AUT
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kontogiannis K, 2006, PROC IEEE INT CONF S, P497
   Lam P, 2011, CET US COMP INF WORK
   Lanza M, 2005, PROC INT CONF SOFTW, P672
   Lanza Michele., 2005, Object-Oriented Metrics in Practice
   Laval J, 2011, SCI COMPUT PROGRAM, V76, P1177, DOI 10.1016/j.scico.2010.11.014
   Le W, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1047, DOI 10.1145/2568225.2568304
   Lundberg J, 2012, J UNIVERS COMPUT SCI, V18, P2851
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Mens T., 2008, Software evolution, P1, DOI [DOI 10.1007/978-3-540-76440-3, 10.1007/978-3-540-76440-3_1]
   Mens T., 2014, Studying Evolving Software Ecosystems based on Ecological Models, P297, DOI DOI 10.1007/978-3-642-45398-4_10
   Menzies T., 2015, The promise repository of empirical software engineering data
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Munro MatthewJames., 2005, Software Metrics, P15, DOI 10.1109/metrics.2005.38
   Nagappan M, 2012, TECHNICAL REPORT
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nguyen AT, 2016, INT S FDN SOFTW ENG
   Nguyen HA, 2013, 2013 28 IEEE ACM INT
   Oosterman J., 2011, ACSC 11, P117
   Panichella S, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P161, DOI 10.1109/SANER.2015.7081826
   Picazo JJM, 2016, THESIS
   Proksch S., 2017, INT C SOFTW AN EV RE
   Proksch S, 2016, INT C MIN SOFTW REP
   Proksch S, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2744200
   Rakic G., 2013, Proceedings of the 6th Balkan Conference in Informatics, BCI'13, P236
   Ray B, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P34, DOI 10.1109/MSR.2015.11
   Strein D, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P207
   Stutz P, 2010, LECT NOTES COMPUT SC, V6496, P764, DOI 10.1007/978-3-642-17746-0_48
   Szoke G, 2014, LECT NOTES COMPUT SC, V8583, P524, DOI 10.1007/978-3-319-09156-3_37
   Tempero E, 2010, 2010 AS PAC SOFTW EN
   Tichelaar S, 2000, INTERNATIONAL SYMPOSIUM ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P154, DOI 10.1109/ISPSE.2000.913233
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Tufano M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P403, DOI 10.1109/ICSE.2015.59
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   VanHilst M, 2011, 2011 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION (IRI), P246, DOI 10.1109/IRI.2011.6009554
   Winter A, 2002, LECT NOTES COMPUT SC, V2269, P324
   Wu W, 2016, EMPIR SOFTW ENG, V21, P2366, DOI 10.1007/s10664-015-9411-7
   Wuu Yang, 1992, ACM Transactions on Software Engineering and Methodology, V1, P310, DOI 10.1145/131736.131756
   Yijun Yu, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P273, DOI 10.1109/ASE.2011.6100063
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 86
TC 14
Z9 14
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2019
VL 24
IS 1
BP 332
EP 380
DI 10.1007/s10664-018-9630-9
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HL3RV
UT WOS:000458634400012
OA Green Published
DA 2024-07-18
ER

PT J
AU Hu, HY
   Bezemer, CP
   Hassan, AE
AF Hu, Hanyang
   Bezemer, Cor-Paul
   Hassan, Ahmed E.
TI Studying the consistency of star ratings and the complaints in 1 &
   2-star user reviews for top free cross-platform Android and iOS apps
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mobile apps; Cross-platform apps; Android; iOS; Star rating; User
   reviews
AB How users rate a mobile app via star ratings and user reviews is of utmost importance for the success of an app. Recent studies and surveys show that users rely heavily on star ratings and user reviews that are provided by other users, for deciding which app to download. However, understanding star ratings and user reviews is a complicated matter, since they are influenced by many factors such as the actual quality of the app and how the user perceives such quality relative to their expectations, which are in turn influenced by their prior experiences and expectations relative to other apps on the platform (e.g., iOS versus Android). Nevertheless, star ratings and user reviews provide developers with valuable information for improving the overall impression of their app. In an effort to expand their revenue and reach more users, app developers commonly build cross-platform apps, i.e., apps that are available on multiple platforms. As star ratings and user reviews are of such importance in the mobile app industry, it is essential for developers of cross-platform apps to maintain a consistent level of star ratings and user reviews for their apps across the various platforms on which they are available. In this paper, we investigate whether cross-platform apps achieve a consistent level of star ratings and user reviews. We manually identify 19 cross-platform apps and conduct an empirical study on their star ratings and user reviews. By manually tagging 9,902 1 & 2-star reviews of the studied cross-platform apps, we discover that the distribution of the frequency of complaint types varies across platforms. Finally, we study the negative impact ratio of complaint types and find that for some apps, users have higher expectations on one platform. All our proposed techniques and our methodologies are generic and can be used for any app. Our findings show that at least 79% of the studied cross-platform apps do not have consistent star ratings, which suggests that different quality assurance efforts need to be considered by developers for the different platforms that they wish to support.
C1 [Hu, Hanyang; Bezemer, Cor-Paul; Hassan, Ahmed E.] Queens Univ, Kingston, ON, Canada.
C3 Queens University - Canada
RP Bezemer, CP (corresponding author), Queens Univ, Kingston, ON, Canada.
EM hyhu@cs.queensu.ca; bezemer@cs.queensu.ca; ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Ali, Ahmed/HOF-4672-2023; Hassan,
   Ahmed/AAB-7241-2019
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Bezemer,
   Cor-Paul/0000-0002-0474-5718
CR Ali M, 2017, P IEEE ACM INT C MOB, P12
   Android Authority, 2017, ANDR 7 NOUG UPD TRAC
   [Anonymous], 1997, READINGS INFORM RETR
   [Anonymous], 2014, Google Play Crawler JAVA API
   APK4Fun, 2016, VERS HIST APP FAC AN
   AppAnnie, 2015, US VERS TOP 50 APPS
   Apple, 2008, RSS FEED PROV APPL A
   Apple, 2016, APP YOU INST UN QUIT
   Apple, 2017, APP STOR REV GUID
   Bavota G, 2015, IEEE T SOFTWARE ENG, V41, P384, DOI 10.1109/TSE.2014.2367027
   Benenson Z., 2013, CHI 13 EXTENDED ABST, P817
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chendev Yu. G., 2013, PROBLEMS ENV MANAGEM, P201, DOI DOI 10.1145/2488388.2488407
   Dalmasso I, 2013, INT WIREL COMMUN, P323, DOI 10.1109/IWCMC.2013.6583580
   Dann J., 2012, HOOD REBUILDING FACE
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hartmann G, 2011, MOBILE LEARNING ENV
   Hassan S, 2017, EMPIR SOFTW ENG, V22, P505, DOI 10.1007/s10664-016-9435-7
   Heitkötter H, 2013, LECT NOTES BUS INF P, V140, P120
   Herraiz I., 2011, 2011 18th Working Conference on Reverse Engineering, P219, DOI 10.1109/WCRE.2011.34
   Hixon T, 2014, What kind of person prefers an iPhone?
   Howison J., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P7, DOI 10.1049/ic:20040467
   Hu H, 2017, SUPPLEMENTARY MAT ST
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Joorabchi ME, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P450, DOI 10.1109/ISSRE.2015.7381838
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Khalid H, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P610, DOI 10.1145/2635868.2635909
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Kim H.W., 2011, 11 INT DSI 16 APDSI
   Laurence G., 2015, Gartner Says Smartphone Sales Surpassed One Billion Units in 2014
   Lim SL, 2015, IEEE T SOFTWARE ENG, V41, P40, DOI 10.1109/TSE.2014.2360674
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Long J.D., 2003, Ordinal Analysis of Behavioral Data
   Martin W, 2017, IMPLANT THERAPY IN THE ESTHETIC ZONE: CURRENT TREATMENT MODALITIES AND MATERIALS FOR SINGLE-TOOTH REPLACEMENTS, P1
   Martin W, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P435, DOI 10.1145/2950290.2950320
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1067, DOI 10.1007/s10664-015-9375-7
   Mercado I.T., 2016, P INT WORKSHOP APP M, P43, DOI DOI 10.1145/2993259.2993268
   Morani L., 2015, There are now more than 24,000 di erent Android devices
   Mudambi SM, 2010, MIS QUART, V34, P185
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   Noei E, 2017, EMPIR SOFTW ENG, V22, P3088, DOI 10.1007/s10664-017-9507-3
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Palmieri Manuel, 2012, 2012 16th International Conference on Intelligence in Next Generation Networks (ICIN 2012): Realising the Power of the Network, P179, DOI 10.1109/ICIN.2012.6376023
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Patterson B, 2016, BLAKES IOS DEVICE SP
   Pettey C., 2012, GARTNER SAYS FREE AP
   Poschenrieder M., 2015, 77% will not download a retail app rated lower than 3 stars
   Ramon L., 2015, Number of apps available in leading app stores as of July 2015
   Ramon L., 2015, Smartphone OS Market Share, 2015 Q2
   Raphael J, 2016, ANDROID UPGRADE REPO
   Romano J., 2006, P ANN M SO ASS I RES
   Schick S., 2014, Report: iOS app users are often richer than Android users
   Shaw H, 2016, CYBERPSYCH BEH SOC N, V19, P727, DOI 10.1089/cyber.2016.0324
   Syer MD, 2015, SOFTWARE QUAL J, V23, P485, DOI 10.1007/s11219-014-9238-2
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Yichuan M, 2016, 27 INT S SOFTW REL E
   Zaki MJ, 2000, IEEE T KNOWL DATA EN, V12, P372, DOI 10.1109/69.846291
   Zhao W X., 2011, Comparing twitter and traditional media using topic models, P338, DOI [10.1016/0952-8180(89)90027-5, DOI 10.1016/0952-8180(89)90027-5]
NR 66
TC 11
Z9 13
U1 1
U2 16
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2018
VL 23
IS 6
BP 3442
EP 3475
DI 10.1007/s10664-018-9604-y
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC1WE
UT WOS:000451593200010
DA 2024-07-18
ER

PT J
AU Oliveira, VPL
   de Souza, EF
   Le Goues, C
   Camilo, CG
AF Oliveira, Vinicius Paulo L.
   de Souza, Eduardo Faria
   Le Goues, Claire
   Camilo-Junior, Celso G.
TI Improved representation and genetic operators for linear genetic
   programming for automated program repair
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automatic software repair; Automated program repair; Genetic
   improvement; Genetic programming; Crossover operator; Mutation operator
AB Genetic improvement for program repair can fix bugs or otherwise improve software via patch evolution. Consider GenProg, a prototypical technique of this type. GenProg's crossover and mutation operators manipulate individuals represented as patches. A patch is composed of high-granularity edits that indivisibly comprise an edit operation, a faulty location, and a fix statement used in replacement or insertions. We observe that recombination and mutation of such high-level units limits the technique's ability to effectively traverse and recombine the repair search spaces. We propose a reformulation of program repair representation, crossover, and mutation operators such that they explicitly traverse the three subspaces that underlie the search problem: the Operator, Fault and Fix Spaces. We provide experimental evidence validating our insight, showing that the operators provide considerable improvement over the baseline repair algorithm in terms of search success rate and efficiency. We also conduct a genotypic distance analysis over the various types of search, providing insight as to the influence of the operators on the program repair search problem.
C1 [Oliveira, Vinicius Paulo L.; de Souza, Eduardo Faria; Camilo-Junior, Celso G.] Univ Fed Goias, Inst Informat, Goiania, Go, Brazil.
   [Le Goues, Claire] Carnegie Mellon Univ, Sch Comp Sci, Pittsburgh, PA 15213 USA.
C3 Universidade Federal de Goias; Carnegie Mellon University
RP Oliveira, VPL (corresponding author), Univ Fed Goias, Inst Informat, Goiania, Go, Brazil.
EM viniciusp.comp@gmail.com; eduardosouza@inf.ufg.br; clegoues@cs.cmu.edu;
   celso@inf.ufg.br
CR Ackling T, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1427
   [Anonymous], 2013, TECH REP
   [Anonymous], GEN EV COMP C COMP M
   [Anonymous], 2015, COMP MAT P 10 GEN EV
   [Anonymous], 2016 IEEE INT C SYST
   [Anonymous], IEEE T SOFTWARE ENG
   [Anonymous], INT C ART EV EV ART
   [Anonymous], 2007, Linear genetic programming
   [Anonymous], 2014, Software engineering: a practitioner's approach
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   Barr E. T., 2015, ISSTA, P257
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Bruce BR, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1327, DOI 10.1145/2739480.2754752
   Burlacu B, 2015, STUD COMPUT INTELL, V595, P61, DOI 10.1007/978-3-319-15720-7_5
   Freitas END, 2016, PROC INT SYMP SOFTW, P36, DOI 10.1109/ISSRE.2016.52
   De Jong K.A., 1975, ANAL BEHAV CLASS GEN
   Debroy Vidroha, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P65, DOI 10.1109/ICST.2010.66
   Fast E., 2010, Conference on Genetic and Evolutionary Computation, P965
   FORREST S, 1993, SCIENCE, V261, P872, DOI 10.1126/science.8346439
   Forrest Stephanie, 2009, P 11 ANN C GEN EV CO, P947
   Goldberg David E, 1989, GENETIC ALGORITHMS S
   Gupta D., 2012, Int. J. Emerging Technol. Adv. Eng, V2, P56
   Harik GR, 1999, IEEE T EVOLUT COMPUT, V3, P287, DOI 10.1109/4235.797971
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Holland I.H., 1975, ADAPTATION NATURAL A
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Ke YL, 2015, IEEE INT CONF AUTOM, P295, DOI 10.1109/ASE.2015.60
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kim YH, 2004, LECT NOTES COMPUT SC, V3103, P400
   Koza J.R., 1992, GENETIC PROGRAMMING, VVolume 1
   Koza JR., 1994, Genetic programming II
   Le Goues C., 2012, IEEE Transactions on Software Engineering, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2013, SOFTWARE QUAL J, V21, P421, DOI 10.1007/s11219-013-9208-0
   Le Goues C, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P959, DOI 10.1145/2330163.2330296
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Liblit B, 2005, ACM SIGPLAN NOTICES, V40, P15, DOI 10.1145/1064978.1065014
   de Oliveira AAL, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P829
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Louis S.J., 1993, FDN GENETIC ALGORITH, V2, P141
   Moncao ACBL, 2013, 2013 IEEE CONGRESS ON EVOLUTIONARY COMPUTATION (CEC), P2533
   Luke S., 1997, Genetic Programming 1997 Proceedings of the Second Annual Conference, P240
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Mattfeld DC, 2013, EVOLUTIONARY SEARCH
   Mechtaev S., 2016, P 38 INT C SOFTWARE, P691
   Oliveira VPL, 2016, LECT NOTES COMPUT SC, V9962, P112, DOI 10.1007/978-3-319-47106-8_8
   Orlov M, 2011, IEEE T EVOLUT COMPUT, V15, P166, DOI 10.1109/TEVC.2010.2052622
   Petke Justyna, 2014, Genetic Programming. 17th European Conference (EuroGP 2014). Revised Selected Papers: LNCS 8599, P137, DOI 10.1007/978-3-662-44303-3_12
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Rawlins GJE., 1991, Foundations of Genetic Algorithms
   Rothlauf F, 2011, NAT COMPUT SER, P1, DOI 10.1007/978-3-540-72962-4
   SAHA D., 2011, P 19 ACM SIGSOFT S 1, P157
   Schulte E., 2010, P 25 IEEEACM INT C A, P313, DOI [DOI 10.1145/1858996.1859059, 10.1145/1858996.1859059]
   Schulte E, 2014, ACM SIGPLAN NOTICES, V49, P639, DOI 10.1145/2541940.2541980
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Zeller A, 1999, LECT NOTES COMPUT SC, V1687, P253, DOI 10.1145/318774.318946
NR 63
TC 18
Z9 20
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2018
VL 23
IS 5
BP 2980
EP 3006
DI 10.1007/s10664-017-9562-9
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO5AW
UT WOS:000440031100015
DA 2024-07-18
ER

PT J
AU Saini, V
   Sajnani, H
   Lopes, C
AF Saini, Vaibhav
   Sajnani, Hitesh
   Lopes, Cristina
TI Cloned and non-cloned Java methods: a comparative study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code clones; Quality metrics; Open source software
ID METRICS; CODE; QUALITY; COMPLEXITY; SYSTEM
AB Reusing code via copy-and-paste, with or without modification is a common behavior observed in software engineering. Traditionally, cloning has been considered as a bad smell suggesting flaws in design decisions. Many studies exist targeting clone discovery, removal, and refactoring. However there are not many studies which empirically investigate and compare the quality of cloned code to that of the code which has not been cloned. To this end, we present a statistical study that shows whether qualitative differences exist between cloned methods and non-cloned methods in Java projects. The dataset consists of 3562 open source Java projects containing 412,705 cloned and 616,604 non-cloned methods. The study uses 27 software metrics as a proxy for quality, spanning across complexity, modularity, and documentation (code-comments) categories. When controlling for size, no statistically significant differences were found between cloned and non-cloned methods for most of the metrics, except for three of them. The main statistically significant difference found was that cloned methods are on an average 18% smaller than non-cloned methods. After doing a mixed method analysis, we provide some insight for why cloned methods are smaller.
C1 [Saini, Vaibhav] Univ Calif Irvine, Irvine, CA 92697 USA.
   [Lopes, Cristina] Univ Calif Irvine, Sch Informat & Comp Sci, Informat, Irvine, CA USA.
   [Sajnani, Hitesh] Microsoft, Redmond, WA USA.
C3 University of California System; University of California Irvine;
   University of California System; University of California Irvine;
   Microsoft
RP Saini, V (corresponding author), Univ Calif Irvine, Irvine, CA 92697 USA.
EM vpsaini@uci.edu; hitsaj@microsoft.com; lopes@uci.edu
RI Saini, Vaibhav/D-8145-2019
OI Saini, Vaibhav/0000-0002-6107-9504
FU National Science Foundation [1218228]; DARPA MUSE program; Direct For
   Computer & Info Scie & Enginr [1218228] Funding Source: National Science
   Foundation; Division of Computing and Communication Foundations
   [1218228] Funding Source: National Science Foundation
FX This work was partially supported by a grant from the National Science
   Foundation No. 1218228, and by the DARPA MUSE program.
CR Alghamdi JS, 2005, Ninth European Conference on Software Maintenance and Reengineering, Proceedings, P190, DOI 10.1109/CSMR.2005.44
   Andersson M., 2004, Object-oriented design quality metrics
   [Anonymous], QUALITATIVE DATA ANA
   [Anonymous], 2010, P JOINT ERCIM WORKSH
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2006, P 28 INT C SOFTW ENG
   Arisholm E., 2006, ISESE 06 P 2006 ACMI, P8
   Arisholm E, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P215, DOI 10.1109/ISSRE.2007.22
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Benestad HC, 2006, LECT NOTES COMPUT SC, V4034, P94
   Borrego M, 2009, J ENG EDUC, V98, P53, DOI 10.1002/j.2168-9830.2009.tb01005.x
   Borstler J., 2011, ACM Transactions on Computing Education (TOCE), V11, P3, DOI 10.1145/1921607.1921610
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Bruntink M, 2005, IEEE T SOFTWARE ENG, V31, P804, DOI 10.1109/TSE.2005.114
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cordy JR, 2003, PROG COMPREHEN, P196
   Ducasse S., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P109, DOI 10.1109/ICSM.1999.792593
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gode N, 2009, P CSMR
   Göde N, 2011, EUR CON SFTWR MTNCE, P65, DOI 10.1109/CSMR.2011.11
   Göde N, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P311, DOI 10.1145/1985793.1985836
   Gupta V., 2005, Journal of Computer Sciences, V1, P276, DOI 10.3844/jcssp.2005.276.282
   Halstead M.H., 1977, OPERATING PROGRAMMIN
   Herzig K, 2013, TECHNICAL REPORT
   Islam MR, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 3, P8, DOI 10.1109/SANER.2016.90
   Johnson J. H., 1993, Proceedings CASCON '93, P171
   JOHNSON JH, 1994, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P120, DOI 10.1109/ICSM.1994.336783
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   KAFURA D, 1987, IEEE T SOFTWARE ENG, V13, P335, DOI 10.1109/TSE.1987.233164
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kim M., 2005, ESECFSE13
   Komondoor R, 2001, LECT NOTES COMPUT SC, V2126, P40
   Komondoor R, 2003, P INT WORKSH PROGR C, P40
   Koschke R., 2008, SOFTWARE EVOLUTION, P15, DOI DOI 10.1007/978-3-540-76440-3_2
   Koschke R, 2007, P DUPL RED SIM SOFTW
   Koschke R, 2012, EUR CON SFTWR MTNCE, P309, DOI 10.1109/CSMR.2012.37
   Krinke J, 2001, EIGHTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P301, DOI 10.1109/WCRE.2001.957835
   Krinke J, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P57, DOI 10.1109/SCAM.2008.14
   Krinke J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P170, DOI 10.1109/WCRE.2007.7
   Kutner M.H., 2005, Applied linear statistical models, V5th
   LI W, 1993, J SYST SOFTWARE, V23, P111, DOI 10.1016/0164-1212(93)90077-B
   Lopes C, 2010, UCI source code data sets
   Lopes CV, 2015, ACM SIGPLAN NOTICES, V50, P675, DOI [10.1145/2858965.2814300, 10.1145/2814270.2814300]
   Lozano A., 2007, PROC 4 INT WORKSHOP, P18, DOI DOI 10.1109/MSR.2007.8
   Lozano A, 2008, PROC IEEE INT CONF S, P227, DOI 10.1109/ICSM.2008.4658071
   Lucredio D., 2012, 2012 Sixth Brazilian Symposium on Software Components, Architectures and Reuse (SBCARS 2012), P101, DOI 10.1109/SBCARS.2012.16
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mondal M., 2012, P ACM S APPL COMPUTI, P1227, DOI DOI 10.1145/2245276.2231969
   Mubarak A., 2010, Proceedings of the 4th International Conference on Research Challenges in Information Science, P473
   Mubarak A, 2009, P INT C EV ASS SOFTW
   Nasseri E, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P269, DOI 10.1109/ASWEC.2008.78
   Ossher J., 2011, ICSM
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Rahman F, 2012, EMPIR SOFTW ENG, V17, P503, DOI 10.1007/s10664-011-9195-3
   Rajapakse DC, 2007, PROC INT CONF SOFTW, P116
   Roy CK, 2009, IEEE ICST WORKSHOP, P157, DOI 10.1109/ICSTW.2009.18
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Saini Vaibhav, 2016, 2016 IEEE International Conference on Software Maintenance and Evolution (ICSME), P256, DOI 10.1109/ICSME.2016.94
   Sajnani H, 2016, P INT C SOFTW ENG
   Sajnani H, 2014, P 30 SOFTW MAINT EV
   Sajnani H, 2014, IEEE INT WORK C SO, P21, DOI 10.1109/SCAM.2014.12
   Samoladas I, 2008, INT FED INFO PROC, V275, P237
   Scandariato R., 2012, Proceedings of the 4th international workshop on Security measurements and metrics, P11
   Shomrat M, 2013, LECT NOTES COMPUT SC, V7920, P502, DOI 10.1007/978-3-642-39038-8_21
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Svajlenko J, 2014, PROC IEEE INT CONF S, P476, DOI 10.1109/ICSME.2014.77
   Wang Tiantian, 2013, P 2013 9 JOINT M FDN, P455
   Xie S, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P94, DOI 10.1109/CSMR-WCRE.2014.6747229
   Zaidman A, 2009, P 25 INT C SOFTW MAI
   [No title captured]
NR 77
TC 5
Z9 5
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2018
VL 23
IS 4
BP 2232
EP 2278
DI 10.1007/s10664-017-9572-7
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GK0MK
UT WOS:000435804100013
DA 2024-07-18
ER

PT J
AU Ajienka, N
   Capiluppi, A
   Counsell, S
AF Ajienka, Nemitari
   Capiluppi, Andrea
   Counsell, Steve
TI An empirical study on the interplay between semantic coupling and
   co-change of software classes
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Information retrieval (IR); Co-change; Co-evolution; Clustering;
   Coupling; Change impact analysis (CIA); Object-oriented (OO);
   Open-source software; Software components; Hidden dependencies (HD)
ID CHANGE IMPACT ANALYSIS; CAUSATION; METRICS; INFORMATION; RETRIEVAL;
   HISTORY
AB Software systems continuously evolve to accommodate new features and interoperability relationships between artifacts point to increasingly relevant software change impacts. During maintenance, developers must ensure that related entities are updated to be consistent with these changes. Studies in the static change impact analysis domain have identified that a combination of source code and lexical information outperforms using each one when adopted independently. However, the extraction of lexical information and the measure of how loosely or closely related two software artifacts are, considering the semantic information embedded in their comments and identifiers has been carried out using somewhat complex information retrieval (IR) techniques. The interplay between software semantic and change relationship strengths has also not been extensively studied. This work aims to fill both gaps by comparing the effectiveness of measuring semantic coupling of OO software classes using (i) simple identifier based techniques and (ii) the word corpora of the entire classes in a software system. Afterwards, we empirically investigate the interplay between semantic and change coupling. The empirical results show that: (1) identifier based methods have more computational efficiency but cannot always be used interchangeably with corpora-based methods of computing semantic coupling of classes and (2) there is no correlation between semantic and change coupling. Furthermore we found that (3) there is a directional relationship between the two, as over 70% of the semantic dependencies are also linked by change coupling but not vice versa.
C1 [Ajienka, Nemitari; Capiluppi, Andrea; Counsell, Steve] Brunel Univ London, Kingston Lane, Uxbridge UB8 3PH, Middx, England.
C3 Brunel University
RP Ajienka, N (corresponding author), Brunel Univ London, Kingston Lane, Uxbridge UB8 3PH, Middx, England.
EM nemitari.ajienka@brunel.ac.uk; andrea.capiluppi@brunel.ac.uk;
   steve.counsell@brunel.ac.uk
RI Ajienka, Nemitari/ABI-3639-2020; Capiluppi, Andrea/AGO-2961-2022
OI Capiluppi, Andrea/0000-0001-9469-6050; Ajienka,
   Nemitari/0000-0002-8792-282X
FU EPSRC [EP/M024083/1, EP/N011627/1] Funding Source: UKRI
CR Abdeen H, 2015, INFORM SOFTWARE TECH, V67, P220, DOI 10.1016/j.infsof.2015.07.007
   Ajienka N., 2016, P 10 ACM IEEE INT S, P40
   [Anonymous], 2011, P 49 ANN M ASS COMP
   [Anonymous], 2003, P PACLING C PAC ASS
   [Anonymous], 2010, ASE 10 P IEEE ACM IN, DOI DOI 10.1145/1858996.1859024
   Barnett ML, 2006, STRATEGIC MANAGE J, V27, P1101, DOI 10.1002/smj.557
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bavota G, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P692, DOI 10.1109/ICSE.2013.6606615
   Bavota G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559935
   Bavota G, 2013, 2013 7TH INTERNATIONAL WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P83, DOI 10.1109/TEFSE.2013.6620160
   Briand L. C., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P475, DOI 10.1109/ICSM.1999.792645
   Corley C.D., 2005, P ACL WORKSHOP EMPIR, P13, DOI [10.3115/1631862.1631865, DOI 10.3115/1631862.1631865]
   Crowston K., 2005, COORDINATION FREE LI
   Cruz D., 2006, Software Process Improvement and Practice, V11, P107, DOI 10.1002/spip.257
   D'Ambros M, 2009, WORK CONF REVERSE EN, P135, DOI 10.1109/WCRE.2009.19
   D'Ambros Marco., 2006, MINING SOFTWARE REPO, P26, DOI DOI 10.1145/1137983.1137992
   Dasseni E., 2001, IHW 01, P369, DOI [DOI 10.1007/3-540-45496-9_27, 10.1007/3-540-45496-9_27]
   Despotakis D, 2011, SEMANTIC WEB J
   Didele V, 2005, STAT CAUSALITY
   Erkan G, 2004, J ARTIF INTELL RES, V22, P457, DOI 10.1613/jair.1523
   Field A., 2009, Discovering statistics with SPSS, V3rd
   Fluri B, 2005, FIFTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P66, DOI 10.1109/SCAM.2005.14
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Gall H, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P13
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Geipel MM, 2012, IEEE T SOFTWARE ENG, V38, P1432, DOI 10.1109/TSE.2011.91
   Gethers M., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P144, DOI 10.1109/SCAM.2012.27
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Haefliger S, 2008, MANAGE SCI, V54, P180, DOI 10.1287/mnsc.1070.0748
   Hahsler M, 2006, METHODS, V15, P1
   Hahsler M, 2007, STUD CLASS DATA ANAL, P449, DOI 10.1007/978-3-540-70981-7_51
   Hahsler Michael, 2007, Special Interest Groups on Knowledge Discovery Data Mining Explorations, V2, P1
   HOWARD GS, 1980, J EDUC PSYCHOL, V72, P810
   Kagdi H., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P119, DOI 10.1109/WCRE.2010.21
   Kagdi H, 2007, J SOFTW MAINT EVOL-R, V19, P77, DOI 10.1002/smr.344
   Kagdi H, 2013, EMPIR SOFTW ENG, V18, P933, DOI 10.1007/s10664-012-9233-9
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Kenett R, 2008, LECT NOTES ARTIF INT, V5077, P189, DOI 10.1007/978-3-540-70720-2_15
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Lozano A, 2014, IEEE INT WORK C SO, P185, DOI 10.1109/SCAM.2014.27
   Marcus A, 2005, PROC IEEE INT CONF S, P133
   Marcus A, 2005, INT J SOFTW ENG KNOW, V15, P811, DOI 10.1142/S0218194005002543
   McNamee P, 2004, INFORM RETRIEVAL, V7, P73, DOI 10.1023/B:INRT.0000009441.78971.be
   Midha V, 2012, J SYST SOFTWARE, V85, P895, DOI 10.1016/j.jss.2011.11.010
   Oliva G, 2012, 9 WORKSH MAN SOFTW M
   Oliva G. A., 2011, Proceedings of the 2011 25th Brazilian Symposium on Software Engineering (SBES 2011), P144, DOI 10.1109/SBES.2011.39
   Oliva G.A., 2015, P 26 IEEE INT S SOFT
   Oliva J, 2011, DATA KNOWL ENG, V70, P390, DOI 10.1016/j.datak.2011.01.002
   Pagano R., 2001, UNDERSTANDING STAT B, V6th
   Perdicoulis A, 2013, CORRELATION CAUSALIT
   Petrenko M, 2009, INT C PROGRAM COMPRE, P10, DOI 10.1109/ICPC.2009.5090023
   Poshyvanyk D, 2006, PROC IEEE INT CONF S, P469
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Prasad L, 2009, REALIZATION ARCHITEC
   Qusef A., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P63, DOI 10.1109/ICSM.2011.6080773
   Rainer A, 2005, P 1 INT C OP SOURC S
   Revelle M, 2011, EMPIR SOFTW ENG, V16, P773, DOI 10.1007/s10664-011-9159-7
   Samoladas I, 2010, INFORM SOFTWARE TECH, V52, P902, DOI 10.1016/j.infsof.2010.05.001
   Sarikaya R, 2005, INT CONF ACOUST SPEE, P573
   Stake Robert E., 1995, The Art of Case Study Research
   Subramanyam R, 2003, IEEE T SOFTWARE ENG, V29, P297, DOI 10.1109/TSE.2003.1191795
   Sun XB, 2015, J SYST SOFTWARE, V109, P137, DOI 10.1016/j.jss.2015.07.047
   Tan CL, 2000, PRICAI 2000 WORKSH T, P1
   Ujházi B, 2010, IEEE INT WORK C SO, P33, DOI 10.1109/SCAM.2010.14
   Vanciu R., 2010, Proceedings of IEEE International Conference on Software Maintenance, P1
   Verhulst B, 2012, AM J POLIT SCI, V56, P34, DOI 10.1111/j.1540-5907.2011.00568.x
   Wiese IS, 2015, IEEE LAT AM T, V13, P1979, DOI 10.1109/TLA.2015.7164225
   Wiese IS, 2017, J SYST SOFTWARE, V128, P220, DOI 10.1016/j.jss.2016.07.016
   Wiese IS, 2015, IFIP ADV INF COMM TE, V451, P3, DOI 10.1007/978-3-319-17837-0_1
   Wilkie FG, 2000, J SYST SOFTWARE, V52, P157, DOI 10.1016/S0164-1212(99)00142-9
   Witte R, 2008, IET SOFTW, V2, P3, DOI 10.1049/iet-sen:20070110
   Wright BRE, 1999, CRIMINOLOGY, V37, P175, DOI 10.1111/j.1745-9125.1999.tb00483.x
   Xia F., 1996, Proceedings. 1996 Asia-Pacific Software Engineering Conference, P44, DOI 10.1109/APSEC.1996.566739
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Yu L, 2007, EMPIR SOFTW ENG, V12, P123, DOI 10.1007/s10664-006-9000-x
   Yu ZF, 2001, PROG COMPREHEN, P293, DOI 10.1109/WPC.2001.921739
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   Zimmermann T, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P73, DOI 10.1109/IWPSE.2003.1231213
NR 78
TC 6
Z9 6
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2018
VL 23
IS 3
BP 1791
EP 1825
DI 10.1007/s10664-017-9569-2
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA GH6DH
UT WOS:000433532300017
OA Green Submitted, hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Rolfsnes, T
   Moonen, L
   Di Alesio, S
   Behjati, R
   Binkley, D
AF Rolfsnes, Thomas
   Moonen, Leon
   Di Alesio, Stefano
   Behjati, Razieh
   Binkley, Dave
TI Aggregating Association Rules to Improve Change Recommendation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Evolutionary coupling; Targeted association rule mining; Rule
   aggregation; Interestingness aggregator; Change recommendations; Change
   impact analysis
ID STATISTICS; ATTRIBUTES
AB As the complexity of software systems grows, it becomes increasingly difficult for developers to be aware of all the dependencies that exist between artifacts (e.g., files or methods) of a system. Change recommendation has been proposed as a technique to overcome this problem, as it suggests to a developer relevant source-code artifacts related to her changes. Association rule mining has shown promise in deriving such recommendations by uncovering relevant patterns in the system's change history. The strength of the mined association rules is captured using a variety of interestingness measures. However, state-of-the-art recommendation engines typically use only the rule with the highest interestingness value when more than one rule applies. In contrast, we argue that when multiple rules apply, this indicates collective evidence, and aggregating those rules (and their evidence) will lead to more accurate change recommendation. To investigate this hypothesis we conduct a large empirical study of 15 open source software systems and two systems from our industry partners. We evaluate association rule aggregation using four variants of the change history for each system studied, enabling us to compare two different levels of granularity in two different scenarios. Furthermore, we study 40 interestingness measures using the rules produced by two different mining algorithms. The results show that (1) between 13 and 90% of change recommendations can be improved by rule aggregation, (2) rule aggregation almost always improves change recommendation for both algorithms and all measures, and (3) fine-grained histories benefit more from rule aggregation.
C1 [Rolfsnes, Thomas; Di Alesio, Stefano; Behjati, Razieh] Simula Res Lab, Oslo, Norway.
   [Moonen, Leon] Simula Res Lab, Software Engn Dept, Oslo, Norway.
   [Binkley, Dave] Loyola Univ Maryland, Comp Sci, Baltimore, MD USA.
C3 Loyola University Maryland
RP Rolfsnes, T (corresponding author), Simula Res Lab, Oslo, Norway.; Moonen, L (corresponding author), Simula Res Lab, Software Engn Dept, Oslo, Norway.
EM thomgrol@simula.no; leon.moonen@computer.org; stefano@simula.no;
   behjati@simula.no; binkley@cs.loyola.edu
RI Moonen, Leon/M-8790-2015
OI Moonen, Leon/0000-0002-1761-6771; Behjati, Razieh/0000-0003-3302-2751
FU Research Council of Norway through the EvolveIT project [221751/F20];
   Certus SFI [203461/030]; NSF [IIA-1360707]; J. William Fulbright award
FX This work is supported by the Research Council of Norway through the
   EvolveIT project (#221751/F20) and the Certus SFI (#203461/030). Dr.
   Binkley is supported by NSF grant IIA-1360707 and a J. William Fulbright
   award.
CR Aggarwal C. C., 1998, Proceedings of the Seventeenth ACM SIGACT-SIGMOD-SIGART Symposium on Principles of Database Systems. PODS 1998, P18, DOI 10.1145/275487.275490
   Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   [Anonymous], 2015, ART SCI ANAL SOFTWAR, DOI DOI 10.1016/B978-0-12-411519-4.00001-X
   [Anonymous], 2014, P IEEE ACM 29 INT C
   Aze J., 2002, EXTRACTION CONNAISSA, V1, P143
   BALL T, 1997, WORKSH PROC MOD EMP
   Baralis E, 2012, INFORM SCIENCES, V194, P68, DOI 10.1016/j.ins.2011.05.016
   Bayardo R. J.  Jr., 1998, SIGMOD Record, V27, P85, DOI 10.1145/276305.276313
   Ben Messaoud R., 2006, P 9 ACM INT WORKSH D, P11, DOI DOI 10.1145/1183512.1183517
   Bernard JM, 1996, INFORM SCI HUMAINES, V135, P5
   Beyer D, 2005, PROG COMPREHEN, P259, DOI 10.1109/WPC.2005.12
   Bohner S. A., 1996, SOFTWARE CHANGE IMPA
   Breiman L., 1984, Classification and Regression Trees. The Wadsworth statisticsprobability series, V19
   Brin S., 1997, SIGMOD Record, V26, P255, DOI [10.1145/253262.253327, 10.1145/253262.253325]
   Canfora G., 2005, P 11 IEEE INT SOFTWA, P29, DOI [DOI 10.1109/METRICS2005.18, DOI 10.1109/METRICS.2005.28]
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Collard ML, 2013, PROC IEEE INT CONF S, P516, DOI 10.1109/ICSM.2013.85
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Geng LQ, 2006, ACM COMPUT SURV, V38, DOI 10.1145/1132960.1132963
   Good I. J., 1966, ESTIMATION PROBABILI
   Gray B, 1998, LECT NOTES ARTIF INT, V1394, P132
   Hassan AE, 2004, PROC IEEE INT CONF S, P284, DOI 10.1109/ICSM.2004.1357812
   Hofmann H, 2001, COMPUTATION STAT, V16, P399, DOI 10.1007/s001800100075
   Järvelin K, 2002, ACM T INFORM SYST, V20, P422, DOI 10.1145/582415.582418
   Jashki M.-A., 2008, P 8 ACM SIGPLAN SIGS, P84
   Jorge AM, 2005, LECT NOTES COMPUT SC, V3735, P137
   Kamber M., 1996, KDD-96 Proceedings. Second International Conference on Knowledge Discovery and Data Mining, P263
   Kannan S., 2009, International Journal of Computer Science Issues, IJCSI, V6, P35
   KLOSGEN W, 1992, INT J INTELL SYST, V7, P649, DOI 10.1002/int.4550070707
   Kodratoff Y., 2001, Machine learning and its applications. Advanced lectures, P1
   Kulczynski S., 1928, Die pflanzenassoziationen der pieninen
   Le TDB, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P331, DOI 10.1109/SANER.2015.7081843
   Lin DI, 1998, P 6 INT C EXT DAT TE, P103, DOI 10.1007/BFb0100980
   Liu B., 1999, P 5 ACM SIGKDD INT C, P125, DOI DOI 10.1145/312129.312216
   Loevinger J, 1947, SYSTEMATIC APPROACH, V61, DOI [10.1037/h0093565, DOI 10.1037/H0093565]
   McGarry K, 2005, KNOWL ENG REV, V20, P39, DOI 10.1017/S0269888905000408
   Moonen L, 2016, IEEE INT WORK C SO, P207, DOI 10.1109/SCAM.2016.9
   MOSTELLE.F, 1968, J AM STAT ASSOC, V63, P1, DOI 10.2307/2283825
   Pearson K. VII, 1997, Series A, containing papers of a mathematical or physical character, V187, P253, DOI [10.1098/rsta.1896.0007, DOI 10.1098/RSTA.1896.0007]
   Piatetsky-Shapiro G., 1991, Knowledge discovery in databases, P229
   PODGURSKI A, 1990, IEEE T SOFTWARE ENG, V16, P965, DOI 10.1109/32.58784
   Ren XX, 2004, ACM SIGPLAN NOTICES, V39, P432, DOI 10.1145/1035292.1029012
   Robbes R, 2008, WORK CONF REVERSE EN, P42, DOI 10.1109/WCRE.2008.47
   Rolfsnes T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P73, DOI [10.1109/MSR.2016.017, 10.1145/2901739.2901756]
   Rolfsnes T, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P201, DOI 10.1109/SANER.2016.101
   Rosenthal R., 1991, METAANALYTIC PROCEDU
   Sebag M., 1988, P EKAW, V88, P28
   SMYTH P, 1992, IEEE T KNOWL DATA EN, V4, P301, DOI 10.1109/69.149926
   Srikant R., 1997, Proceedings of the Third International Conference on Knowledge Discovery and Data Mining, P67
   Tan PN, 2004, INFORM SYST, V29, P293, DOI 10.1016/S0306-4379(03)00072-3
   Toivonen H., 1995, MINET WORKSHOP STAT, P47
   Vaillant B, 2004, LECT NOTES COMPUT SC, V3245, P290
   van Rijsbergen C. J, 1979, Information Retrieval, V2nd
   Wang Z, 2011, 2011 IEEE 22ND INTERNATIONAL SYMPOSIUM ON PERSONAL INDOOR AND MOBILE RADIO COMMUNICATIONS (PIMRC), P556, DOI 10.1109/PIMRC.2011.6140023
   Wu TY, 2010, DATA MIN KNOWL DISC, V21, P371, DOI 10.1007/s10618-009-0161-2
   Yao Y. Y., 1999, Methodologies for Knowledge Discovery and Data Mining. Third Pacific-Asia Conference, PAKDD-99. Proceedings, P479
   Yazdanshenas A.R., 2011, 2011 27 IEEE INT C S, P193
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Yong S. H., 2002, ELECT NOTES THEOR CO, V70, P158, DOI DOI 10.1016/S1571-0661(04)80583-8
   Yule GU, 1912, J R STAT SOC, V75, P579, DOI 10.2307/2340126
   Yule GU, 1900, PHILOS T R SOC LOND, V194, P257, DOI 10.1098/rsta.1900.0019
   Zaki J. M., 1999, 2 SIAM INT C DAT MIN, P457, DOI DOI 10.1137/1.9781611972726.27
   Zaki M. J., 2000, Proceedings. KDD-2000. Sixth ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P34, DOI 10.1145/347090.347101
   Zanjani Motahareh Bahrami, 2014, P 11 WORK C MIN SOFT, P162, DOI [10.1145/2597073.2597096, DOI 10.1145/2597073.2597096]
   Zhang T, 2000, LECT NOTES ARTIF INT, V1805, P245
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
NR 68
TC 12
Z9 12
U1 1
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2018
VL 23
IS 2
BP 987
EP 1035
DI 10.1007/s10664-017-9560-y
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GC1OI
UT WOS:000429551000010
DA 2024-07-18
ER

PT J
AU Russo, B
   Succi, G
   Pedrycz, W
AF Russo, Barbara
   Succi, Giancarlo
   Pedrycz, Witold
TI Mining system logs to learn error predictors: a case study of a
   telemetry system
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software maintenance; Data mining; System logs; Log analysis;
   Information gain; Classification and prediction of defective log
   sequences
ID STATIC CODE ATTRIBUTES; FAILURE PREDICTION; NEURAL-NETWORKS; DISCOVERY
AB Predicting system failures can be of great benefit to managers that get a better command over system performance. Data that systems generate in the form of logs is a valuable source of information to predict system reliability. As such, there is an increasing demand of tools to mine logs and provide accurate predictions. However, interpreting information in logs poses some challenges. This study discusses how to effectively mining sequences of logs and provide correct predictions. The approach integrates different machine learning techniques to control for data brittleness, provide accuracy of model selection and validation, and increase robustness of classification results. We apply the proposed approach to log sequences of 25 different applications of a software system for telemetry and performance of cars. On this system, we discuss the ability of three well-known support vector machines - multilayer perceptron, radial basis function and linear kernels - to fit and predict defective log sequences. Our results show that a good analysis strategy provides stable, accurate predictions. Such strategy must at least require high fitting ability of models used for prediction. We demonstrate that such models give excellent predictions both on individual applications - e.g., 1 % false positive rate, 94 % true positive rate, and 95 % precision - and across system applications - on average, 9 % false positive rate, 78 % true positive rate, and 95 % precision. We also show that these results are similarly achieved for different degree of sequence defectiveness. To show how good are our results, we compare them with recent studies in system log analysis. We finally provide some recommendations that we draw reflecting on our study.
C1 [Russo, Barbara] Free Univ Bozen Bolzano, Fac Comp Sci, Bolzano, Italy.
   [Succi, Giancarlo] Free Univ Bozen Bolzano, Bolzano, Italy.
   [Pedrycz, Witold] Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB, Canada.
C3 Free University of Bozen-Bolzano; Free University of Bozen-Bolzano;
   University of Alberta
RP Russo, B (corresponding author), Free Univ Bozen Bolzano, Fac Comp Sci, Bolzano, Italy.
EM Barbara.Russo@unibz.it; giancarlo.succi@unibz.it; wpedrycz@ualberta.ca
RI Russo, Barbara/L-5311-2013; Russo, Barbara/AAA-8850-2019; Succi,
   Giancarlo/AAZ-2354-2020
OI Russo, Barbara/0000-0003-3737-9264; Russo, Barbara/0000-0003-3737-9264;
   Succi, Giancarlo/0000-0001-8847-0186
CR Aliferis CF, 2010, J MACH LEARN RES, V11, P171
   Alpaydin E., 2010, Introduction to Machine Learning
   Bishop C. M., 1995, NEURAL NETWORKS PATT
   Chang CC, 2011, ACM T INTEL SYST TEC, V2, DOI 10.1145/1961189.1961199
   Cherkassky V, 1997, IEEE Trans Neural Netw, V8, P1564, DOI 10.1109/TNN.1997.641482
   COX DR, 1972, J R STAT SOC B, V34, P187
   Denaro G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1109/ICSE.2002.1007972
   Featherstun R.W., 2010, Proceedings of the 24th USENIX international confer- ence on Large installation system administration (LISA), LISA'10, P1
   Finan RA, 1996, IEEE IJCNN, P1992, DOI 10.1109/ICNN.1996.549207
   Forrest S, 1996, P IEEE S SECUR PRIV, P120, DOI 10.1109/SECPRI.1996.502675
   Fronza I., 2011, SEKE 2011 - Proceedings of the 23rd International Conference on Software Engineering and Knowledge Engineering, P456
   Fronza I, 2013, J SYST SOFTWARE, V86, P2, DOI 10.1016/j.jss.2012.06.025
   Fu S., 2007, P 2007 ACM IEEE C SU
   Fu S, 2010, J PARALLEL DISTR COM, V70, P1100, DOI 10.1016/j.jpdc.2010.06.010
   Fulp ErrinW., 2008, WASL'08: Proceedings of the First USENIX conference on Analysis of system logs, P5
   Gray David, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P96, DOI 10.1049/ic.2011.0012
   Gross KC, 2003, 27TH ANNUAL NASA GODDARD/IEEE SOFTWARE ENGINEERING WORKSHOP - PROCEEDINGS, P17, DOI 10.1109/SEW.2002.1199445
   Guyon Isabelle, 2003, J MACH LEARN RES, V3, P1157, DOI DOI 10.1162/153244303322753616
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Jayawardena A., 1997, IAHS-AISH P, V239, P173
   Jiang W., 2009, Proccedings of the 7th conference on File and storage technologies, P43
   Jiang ZM, 2008, J SOFTW MAINT EVOL-R, V20, P249, DOI 10.1002/smr.374
   Jiang ZM, 2009, PROC IEEE INT CONF S, P125, DOI 10.1109/ICSM.2009.5306331
   KENT JT, 1983, BIOMETRIKA, V70, P163, DOI 10.1093/biomet/70.1.163
   Khoshgoftaar TM, 2010, PROC INT C TOOLS ART, DOI 10.1109/ICTAI.2010.27
   KHOSHGOFTAAR TM, 1995, J SYST SOFTWARE, V29, P85, DOI 10.1016/0164-1212(94)00130-F
   Khoshgoftaar TM, 1997, IEEE T NEURAL NETWOR, V8, P902, DOI 10.1109/72.595888
   Kim D, 2011, IEEE T SOFTWARE ENG, V37, P430, DOI 10.1109/TSE.2011.20
   LEGALL G, 1990, IEEE J SEL AREA COMM, V8, P234, DOI 10.1109/49.46877
   Leslie C, 2002, P PSB, V7, P564
   Li ZG, 2007, IIE TRANS, V39, P303, DOI 10.1080/07408170600847168
   Liang YL, 2007, IEEE DATA MINING, P583, DOI 10.1109/ICDM.2007.46
   Liu Y, 2010, IEEE T SOFTWARE ENG, V36, P852, DOI 10.1109/TSE.2010.51
   Lo D, 2009, KDD-09: 15TH ACM SIGKDD CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P557
   Mannila H, 1997, DATA MIN KNOWL DISC, V1, P259, DOI 10.1023/A:1009748302351
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan Nachiappan, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P309, DOI 10.1109/ISSRE.2010.25
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Oliner A, 2012, COMMUN ACM, V55, P63, DOI 10.1145/2076450.2076466
   Oliner A, 2007, I C DEPEND SYS NETWO, P575, DOI 10.1109/DSN.2007.103
   Oliner AJ, 2008, IEEE DATA MINING, P959, DOI 10.1109/ICDM.2008.132
   Pinheiro E, 2007, USENIX ASSOCIATION PROCEEDINGS OF THE 5TH USENIX CONFERENCE ON FILE AND STORAGE TECHNOLOGIES ( FAST '07), P17
   PORTER AA, 1990, IEEE SOFTWARE, V7, P46, DOI 10.1109/52.50773
   QUINLAN JR, 1987, INT J MAN MACH STUD, V27, P221, DOI 10.1016/S0020-7373(87)80053-6
   Russo B, 2013, P DAPSEO13 INT WORKS
   Sahlgren M., 2005, P INT C TERMINOLOGY, P1
   Salfner F., 2006, Proceedings. 20th International Parallel and Distributed Processing Symposium (IEEE Cat. No.06TH8860)
   Shang WY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P402, DOI 10.1109/ICSE.2013.6606586
   Steinder M, 2004, IEEE ACM T NETWORK, V12, P809, DOI 10.1109/TNET.2004.836121
   Valette R., 1989, Proceedings. IEEE International Symposium on Intelligent Control 1989 (Cat. No.89TH0282-4), P233, DOI 10.1109/ISIC.1989.238688
   van der Aalst WMP, 2003, DATA KNOWL ENG, V47, P237, DOI 10.1016/S0169-023X(03)00066-1
   Vilalta R, 2002, 2002 IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P474, DOI 10.1109/ICDM.2002.1183991
   Wu XD, 2008, KNOWL INF SYST, V14, P1, DOI 10.1007/s10115-007-0114-2
   Xing F, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P213
   Yamanishi Kenji, 2005, KDD, P499, DOI [10.1145/1081870.1081927, DOI 10.1145/1081870.1081927]
   Zhang HY, 2007, IEEE T SOFTWARE ENG, V33, P635, DOI 10.1109/TSE.2007.70706
NR 61
TC 15
Z9 17
U1 0
U2 20
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2015
VL 20
IS 4
BP 879
EP 927
DI 10.1007/s10664-014-9303-2
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ8MB
UT WOS:000355754500001
DA 2024-07-18
ER

PT J
AU Gómez, MN
   Acuña, ST
AF Gomez, Marta N.
   Acuna, Silvia T.
TI A replicated quasi-experimental study on the influence of personality
   and team climate in software development
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Personality factors; Team climate; Software quality; Team satisfaction;
   Team building; Quasi-experimental replication
ID JOB; PERFORMANCE
AB This article reports a replication of a quasi-experimental study analyzing how personality factors and team climate influence software development team effectiveness, product quality and team member satisfaction. The replication was designed on the basis of the original quasi-experimental study, both of which were run in an academic setting. In the original study, data were collected from a sample of 35 three-member developer teams. All these teams used an adaptation of extreme programming (XP) to the academic environment to develop the same software system. In the replication, the data were collected from a sample of 34 three- or four-member developer teams working on the same software project. Student teams used a common object-oriented software development paradigm to solve the set problem and applied the Unified Process. In both studies all teams were formed at random, and their members were blind to the quasi-experimental conditions and hypotheses. The replication of this empirical study aims to verify the results of the original quasi-experiment. It examines, first, whether personality factors (neuroticism, extroversion, agreeableness, openness to experience and conscientiousness) are related to the quality of the developed software and team member satisfaction and, second, whether the preferences, perceptions and preferences-perceptions fit for the four team climate factors (participative safety, support for innovation, team vision and task orientation) are related to the quality of the developed software and team member satisfaction. The results of the replication corroborate some of the findings of the original study. On the one hand, the results revealed that there is a significant correlation between the extroversion personality factor and software quality, but no significant correlation between the extroversion personality factor and team satisfaction. Also, we found that the perception of team climate where participative safety is high is related to better quality software. We observed significant relationships between the perception of the four team climate factors and team member satisfaction. Additionally, the results showed a positive relationship between software quality and teams in which the real climate perception at the end of the project is better than preferences stated by team members at the outset of the project for the participative safety factor. Finally, we found that teams where the real climate is better than the stated preferences for the team orientation factor exhibit a direct and positive relationship to team member satisfaction.
C1 [Gomez, Marta N.] Univ CEU San Pablo, Escuela Politecn Super, Madrid 28668, Spain.
   [Acuna, Silvia T.] Univ Autonoma Madrid, Escuela Politecn Super, E-28049 Madrid, Spain.
C3 San Pablo CEU University; Autonomous University of Madrid
RP Acuña, ST (corresponding author), Univ Autonoma Madrid, Escuela Politecn Super, Calle Francisco Tomas & Valiente 11, E-28049 Madrid, Spain.
EM mgomez.eps@ceu.es; silvia.acunna@uam.es
RI Acuña, Silvia/A-7395-2008
FU project: Experiment Replication and Synthesis Technologies in SE [MICINN
   TIN2011-23216]; project: Go Lite [MICINN TIN2011-24139]
FX This research has been funded by the following projects: Experiment
   Replication and Synthesis Technologies in SE (MICINN TIN2011-23216) and
   Go Lite (MICINN TIN2011-24139).
CR Acuña ST, 2008, EMPIR SOFTW ENG, V13, P401, DOI 10.1007/s10664-008-9074-8
   Acuña ST, 2009, INFORM SOFTWARE TECH, V51, P627, DOI 10.1016/j.infsof.2008.08.006
   Anderson N., 2003, TEAM SELECTION INVEN
   Anderson N.R., 1994, The team climate inventory: Manual and user's guide
   Anderson Neil., 1999, Team climate inventory : starter set
   Anderson NR, 1998, J ORGAN BEHAV, V19, P235, DOI 10.1002/(SICI)1099-1379(199805)19:3<235::AID-JOB837>3.0.CO;2-C
   [Anonymous], UNIFIED SOFTWARE PRO
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2010, 1 INT WORKSH REPL EM
   [Anonymous], WORK GROUP CLIMATE D
   BARRICK MR, 1991, PERS PSYCHOL, V44, P1, DOI 10.1111/j.1744-6570.1991.tb00688.x
   Barrick MR, 1998, J APPL PSYCHOL, V83, P377, DOI 10.1037/0021-9010.83.3.377
   Barry B, 1997, J APPL PSYCHOL, V82, P62, DOI 10.1037/0021-9010.82.1.62
   Beck Kent, 1999, Extreme Programming Explained: Embrace Change
   Bentley JL, 2000, PROGRAMMING PEARLS
   Brooks A, 2008, GUIDE EMPIRICAL SOFT
   Burch G.S.J., 2004, Journal of Managerial Psychology, V19, P406
   Cook T. D., 1979, Quasi-experimentation: Design analysis issues for field settings
   Costa P.T., 2002, Inventario de Personalidad NEO Revisado (NEO PI-R)
   Cruz Shirley S. J. O., 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P1, DOI 10.1049/ic.2011.0001
   Curral L.A., 2001, EUR J WORK ORGAN PSY, V10, P187, DOI [10.1080/13594320143000627, DOI 10.1080/13594320143000627]
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   GLADSTEIN DL, 1984, ADMIN SCI QUART, V29, P499, DOI 10.2307/2392936
   Gomez OS, 2012, THESIS U POLITECNICA
   Hackman J.R. e., 1980, Work redesign
   IEEE - Institute of Electrical and Electronics Engineers, 2004, GUID SOFTW ENG BOD K
   Jehn KA, 1997, ADMIN SCI QUART, V42, P530, DOI 10.2307/2393737
   JEHN KA, 1995, ADMIN SCI QUART, V40, P256, DOI 10.2307/2393638
   Macias F, 2003, PROCEEDINGS OF THE FOURTH MEXICAN INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE (ENC 2003), P73, DOI 10.1109/ENC.2003.1232877
   Molleman E, 2004, SMALL GR RES, V35, P515, DOI 10.1177/1046496404264361
   Molleman E, 2000, INT J OPER PROD MAN, V20, P889, DOI 10.1108/01443570010332935
   Peslak A. R., 2006, SIGMIS CPR'06. Proceedings of the 2006 ACM SIGMIS CPR Conference. Forty Four Years of Computer Personnel Research: Achievements, Challenges and the Future, P273, DOI 10.1145/1125170.1125233
   Pfleeger S.L., 2001, SOFTWARE ENG THEORY, V2nd
   Pfleeger SL, 2005, IEEE SOFTWARE, V22, P66, DOI 10.1109/MS.2005.19
   Selby RW, 2007, LECT NOTES COMPUT SC, V4336, P184
   Sfetsos P, 2009, EMPIR SOFTW ENG, V14, P187, DOI 10.1007/s10664-008-9093-5
   STOKES JP, 1983, INT J GROUP PSYCHOTH, V33, P449, DOI 10.1080/00207284.1983.11491345
   Sudhakar GP, 2011, TEAM PERFORM MANAG, V17, P187, DOI 10.1108/13527591111143718
   Van der Vegt GS, 2001, PERS PSYCHOL, V54, P51
   Yang HL, 2004, INFORM MANAGE-AMSTER, V41, P335, DOI 10.1016/S0378-7206(03)00078-8
   Zander A., 1994, Making groups effective, V2nd
NR 41
TC 14
Z9 15
U1 0
U2 20
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2014
VL 19
IS 2
BP 343
EP 377
DI 10.1007/s10664-013-9265-9
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA AD1SF
UT WOS:000333013100004
DA 2024-07-18
ER

PT J
AU Walia, GS
   Carver, JC
AF Walia, Gursimran S.
   Carver, Jeffrey C.
TI Using error abstraction and classification to improve requirement
   quality: conclusions from a family of four empirical studies
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software inspections; Error abstraction; Software engineering; Software
   quality; Empirical studies
ID SOFTWARE; PREVENTION; KNOWLEDGE
AB Achieving high software quality is a primary concern for software development organizations. Researchers have developed many quality improvement methods that help developers detect faults early in the lifecycle. To address some of the limitations of fault-based quality improvement approaches, this paper describes an approach based on errors (i.e. the sources of the faults). This research extends Lanubile et al.'s, error abstraction process by providing a formal requirement error taxonomy to help developers identify both faults and errors. The taxonomy was derived from the software engineering and psychology literature. The error abstraction and classification process and the requirement error taxonomy are validated using a family of four empirical studies. The main conclusions derived from the four studies are: (1) the error abstraction and classification process is an effective approach for identifying faults; (2) the requirement error taxonomy is useful addition to the error abstraction process; and (3) deriving requirement errors from cognitive psychology research is useful.
C1 [Walia, Gursimran S.] N Dakota State Univ, Dept Comp Sci, Fargo, ND 58105 USA.
   [Carver, Jeffrey C.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
C3 North Dakota State University Fargo; University of Alabama System;
   University of Alabama Tuscaloosa
RP Carver, JC (corresponding author), Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
EM gursimran.walia@ndsu.edu; carver@cs.ua.edu
RI Carver, Jeffrey/AFP-1987-2022; Carver, Jeffrey/AAM-8202-2020
OI Carver, Jeffrey/0000-0002-7824-9151; Carver, Jeffrey/0000-0002-7824-9151
CR [Anonymous], 1990, 610121990 IEEE
   [Anonymous], 1983, The Psychology of Human-Computer Interaction
   Basili V. R., 1996, Empirical Software Engineering, V1, P133, DOI 10.1007/BF00368702
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bland M, 2000, INTRO MED STAT
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   Card DN, 1998, IEEE SOFTWARE, V15, P56, DOI 10.1109/52.646883
   CARVER JC, 2003, THESIS U MARYLAND CO
   CHAAR JK, 1993, IEEE T SOFTWARE ENG, V19, P1055, DOI 10.1109/32.256853
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Endres A., 2003, A Handbook of Software and Systems Engineering: Empirical Observations, Laws, and Theories
   Field A., 2007, DISCOVERING STAT USI, V2nd
   FLORAC W, 1992, CMUSEI92TR22
   Grady RB, 1996, HEWLETT-PACKARD J, V47, P15
   Jacobs J, 2005, INFORM SOFTWARE TECH, V47, P399, DOI 10.1016/j.infsof.2004.09.006
   KAN SH, 1994, IBM SYST J, V33, P4, DOI 10.1147/sj.331.0004
   Kitchenham B., 2004, Procedures for undertaking systematic reviews
   Lanubile F, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P114, DOI 10.1109/METRIC.1998.731236
   Lawrence CP, 2004, J KNOWL MANAG PR MAY
   Lezak M, 2000, P 22 INT C SOFTW ENG, P428
   Masuck C., 2005, J COMPUTING SCI COLL, V20, P239
   MAYS RG, 1990, IBM SYST J, V29, P4, DOI 10.1147/sj.291.0004
   Nakashima T, 1999, INFORM SOFTWARE TECH, V41, P1059, DOI 10.1016/S0950-5849(99)00049-X
   NORMAN DA, 1981, PSYCHOL REV, V88, P1, DOI 10.1037/0033-295X.88.1.1
   PFLEEGER S.L., 2006, Software Engineering, Theory and Practice
   RASMUSSEN J, 1983, IEEE T SYST MAN CYB, V13, P257, DOI 10.1109/TSMC.1983.6313160
   RASMUSSEN J, 1982, J OCCUP ACCID, V4, P311, DOI 10.1016/0376-6349(82)90041-4
   Reason J., 1991, HUMAN ERROR
   Sakthivel S., 1991, Journal of Information Technology, V6, P68, DOI 10.1057/jit.1991.12
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Seaman CB, 1997, PROC INT CONF SOFTW, P96, DOI 10.1145/253228.253248
   Sommerville Ian, 2016, Software engineering 8
   WALIA G, 2007, 18 IEEE INT S SOFTW
   Walia G.S., 2006, P IEEE S EMPIRICAL S, P336
   Walia GS, 2006, THESIS COMPUT SCI EN
   Walia GS, 2009, INFORM SOFTWARE TECH, V51, P1087, DOI 10.1016/j.infsof.2009.01.004
NR 36
TC 18
Z9 21
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2013
VL 18
IS 4
BP 625
EP 658
DI 10.1007/s10664-012-9202-3
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 174AX
UT WOS:000321126100001
DA 2024-07-18
ER

PT J
AU Myrtveit, I
   Stensrud, E
AF Myrtveit, Ingunn
   Stensrud, Erik
TI Validity and reliability of evaluation procedures in comparative studies
   of effort prediction models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software cost estimation; Effort prediction; Comparative studies; MMRE;
   Mean magnitude of relative error; Evaluation criteria
ID SOFTWARE-DEVELOPMENT; REGRESSION
AB We have in previous studies reported our findings and concern about the reliability and validity of the evaluation procedures used in comparative studies on competing effort prediction models. In particular, we have raised concerns about the use of accuracy statistics to rank and select models. Our concern is strengthened by the observed lack of consistent findings. This study offers more insights into the causes of conclusion instability by elaborating on the findings of our previous work concerning the reliability and validity of the evaluation procedures. We show that model selection based on the accuracy statistics MMRE, MMER, MBRE, and MIBRE contribute to conclusion instability as well as selection of inferior models. We argue and show that the evaluation procedure must include an evaluation of whether the functional form of the prediction model makes sense to better prevent selection of inferior models.
C1 [Myrtveit, Ingunn] Det Norske Veritas DNV, Oslo, Norway.
   [Myrtveit, Ingunn; Stensrud, Erik] BI Norwegian Business Sch, Oslo, Norway.
C3 BI Norwegian Business School
RP Stensrud, E (corresponding author), Det Norske Veritas DNV, Oslo, Norway.
EM erik.stensrud@dnv.com
CR [Anonymous], 1986, Software Engineering Metrics and Models
   [Anonymous], 1979, RELIABILITY VALIDITY
   [Anonymous], 2008, Proceedings of the 4th international workshop on Predictor models in software engineering, DOI [DOI 10.1145/1370788.1370804, 10.1145/1370788.1370804]
   BANKER RD, 1989, IEEE T SOFTWARE ENG, V15, P1199, DOI 10.1109/TSE.1989.559768
   Boehm BW., 1981, Software Engineering Economics
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Gujarati D., 2009, BASIC ECONOMETRICS, DOI DOI 10.1007/S10797-005-1619-9
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Kashigan SK, 1991, MULTIVARIATE STAT AN
   Kitchenham B, 2009, P 5 INT C PRED MOD S, P1, DOI DOI 10.1145/1540438.1540444
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Myrtveit I, 1999, IEEE T SOFTWARE ENG, V25, P510, DOI 10.1109/32.799947
   RINCHARD J. F., 1983, INT STAT REV, V51, P3
NR 15
TC 38
Z9 41
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2012
VL 17
IS 1-2
SI SI
BP 23
EP 33
DI 10.1007/s10664-011-9183-7
PG 11
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 893GG
UT WOS:000300343600003
DA 2024-07-18
ER

PT J
AU Tonella, P
   Torchiano, M
   Du Bois, B
   Systä, T
AF Tonella, Paolo
   Torchiano, Marco
   Du Bois, Bart
   Systa, Tarja
TI Empirical studies in reverse engineering:: state of the art and future
   trends
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE reverse engineering; taxonomy; state of art; empirical framework
ID SOFTWARE; EXPERIMENTATION; ACCEPTANCE; MODEL
AB Starting with the aim of modernizing legacy systems, often written in old programming languages, reverse engineering has extended its applicability to virtually every kind of software system. Moreover, the methods originally designed to recover a diagrammatic, high-level view of the target system have been extended to address several other problems faced by programmers when they need to understand and modify existing software. The authors' position is that the next stage of development for this discipline will necessarily be based on empirical evaluation of methods. In fact, this evaluation is required to gain knowledge about the actual effects of applying a given approach, as well as to convince the end users of the positive cost-benefit trade offs. The contribution of this paper to the state of the art is a roadmap for the future research in the field, which includes: clarifying the scope of investigation, defining a reference taxonomy, and adopting a common framework for the execution of the experiments.
C1 Ctr Ric Sci & Tecnol, ITC Irst, Trento, Italy.
   Politecn Torino, Turin, Italy.
   Univ Antwerp, B-2020 Antwerp, Belgium.
   Tampere Univ Technol, FIN-33101 Tampere, Finland.
C3 Fondazione Bruno Kessler; FBK-ICT - Center for Information &
   Communication Technology; Polytechnic University of Turin; University of
   Antwerp; Tampere University
RP Tonella, P (corresponding author), Ctr Ric Sci & Tecnol, ITC Irst, Trento, Italy.
EM tonella@itc.it; marco.torchiano@polito.it; bart.dubois@ua.ac.be;
   tarja.systa@tut.fi
RI ; Tonella, Paolo/C-1702-2015
OI Torchiano, Marco/0000-0001-5328-368X; Tonella, Paolo/0000-0003-3088-0339
CR [Anonymous], 2004, TRSE0401 U KEEL NAT
   [Anonymous], 1998, 9241 ISO
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BROOKS R, 1977, INT J MAN MACH STUD, V9, P737, DOI 10.1016/S0020-7373(77)80039-4
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   Conradi R., 2003, Empirical Methods and Studies in Software Engineering: Experiences from ESERNET
   DAVIS FD, 1989, MIS QUART, V13, P319, DOI 10.2307/249008
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Erlikh L., 2000, IT Professional, V2, P17, DOI 10.1109/6294.846201
   *IEEE, 1983, GLOSS SOFTW ENG TERM
   *ISO, 1995, 14102 ISOIEC DIS
   John BE, 1997, BEHAV INFORM TECHNOL, V16, P188, DOI 10.1080/014492997119789
   Jones TC, 1998, Estimating software costs
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 1999, J SOFTW MAINT-RES PR, V11, P365, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<365::AID-SMR200>3.0.CO;2-W
   LETHBRIDGE T, 1997, P WORKSH EMP STUD SO, P157
   LETOVSKY S, 1986, P 1 WORKSH EMP STUD
   LITTMAN DC, 1987, J SYST SOFTWARE, V7, P341, DOI 10.1016/0164-1212(87)90033-1
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Muller H., 2000, Proceedings of the Future of Software Engineering, P47, DOI [10.1145/336512.336526, DOI 10.1145/336512.336526]
   NELSON ML, 1996, SOFTWARE MAINTENANCE
   PENNINGTON N, 1987, P 2 WORKSH EMP STUD
   Pfleeger Shari Lawrence, 2001, ACM SIGSOFT Software Engineering Notes, V26, P16, DOI DOI 10.1145/505532.505535
   PFLEEGER SL, 2001, ACM SOFTWARE ENG NOT, V27, P17
   PFLEEGER SL, 2001, ACM SOFTWARE ENG NOT, V27, P16
   PFLEEGER SL, 2001, ACM SOFTWARE ENG NOT, V27, P20
   PFLEEGER SL, 2001, ACM SOFTWARE ENG NOT, V26, P17
   PFLEEGER SL, 2001, ACM SOFTWARE ENG NOT, V26, P20
   PFLEEGER SL, 2001, ACM SOFTWARE ENG NOT, V27, P18
   PFLEEGER SL, 2001, ACM SOFTWARE ENG NOT, V26, P18
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Shadish WR., 2001, EXPT QUASI EXPT DESI
   Shaw NC, 2002, CAS INF TEC, V4, P1
   Shirabad J.S., 2005, The PROMISE Repository of Software Engineering Databases
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
   Shull F, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P7, DOI 10.1109/ISESE.2002.1166920
   Sim SE, 2003, PROC INT CONF SOFTW, P74, DOI 10.1109/ICSE.2003.1201189
   Sim SE, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P184, DOI 10.1109/WCRE.2000.891465
   Sim SE, 2000, SEVENTH WORKING CONFERENCE ON REVERSE ENGINEERING - PROCEEDINGS, P210, DOI 10.1109/WCRE.2000.891471
   SIM SE, 2006, P 13 WORK C REV ENG
   Singer J, 1999, P WORKSH EMP STUD SO, P71
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Sneed HM, 1996, PROCEEDINGS OF THE THIRD WORKING CONFERENCE ON REVERSE ENGINEERING, P104, DOI 10.1109/WCRE.1996.558885
   SOLOWAY E, 1984, IEEE T SOFTWARE ENG, V10, P595, DOI 10.1109/TSE.1984.5010283
   Storey MAD, 1997, PROG COMPREHEN, P17, DOI 10.1109/WPC.1997.601257
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   Venkatesh V, 2000, MANAGE SCI, V46, P186, DOI 10.1287/mnsc.46.2.186.11926
   VONMAYRHAUSER A, 1994, PROC INT CONF SOFTW, P39, DOI 10.1109/ICSE.1994.296764
   WALENSTEIN A, 2002, THESIS SIMON FRASER
   WATERS RC, 1994, COMMUN ACM, V37, P22, DOI 10.1145/175290.175291
   WOHLIN C, 2000, EXPT SOFTW ENG INTR
   Zayour I, 2001, PROG COMPREHEN, P245, DOI 10.1109/WPC.2001.921735
   Zelkowitz MV, 1997, INFORM SOFTWARE TECH, V39, P735, DOI 10.1016/S0950-5849(97)00025-6
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
NR 56
TC 46
Z9 56
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2007
VL 12
IS 5
BP 551
EP 571
DI 10.1007/s10664-007-9037-5
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 213DU
UT WOS:000249647100005
DA 2024-07-18
ER

PT J
AU Kirk, D
   Roper, M
   Wood, M
AF Kirk, Douglas
   Roper, Marc
   Wood, Murray
TI Identifying and addressing problems in object-oriented framework reuse
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE object-oriented frameworks; documentation; empirical study; software
   comprehension; qualitative study; framework reuse
AB This paper describes the results of a long-term empirical investigation into object-oriented framework reuse. The aim is to identify the major problems that occur during framework reuse and the impact of current documentation techniques on these problems. Four major reuse problems are identified: understanding the functionality of framework components; understanding the interactions between framework components; understanding the mapping from the problem domain to the framework implementation; understanding the architectural assumptions in the framework design. Two forms of documentation are identified as having the potential to address these problems, namely pattern languages and micro-architecture descriptions. An in-depth, qualitative analysis suggests that, although pattern languages do provide useful support in terms of introducing framework concepts, this can be bypassed by developers using their previous knowledge, occasionally to the detriment of the final solution. Micro-architecture documentation appears to provide support for simple interaction and functionality queries, but it is not able to address large scale interaction problems involving multiple classes within the framework. The paper concludes that, although a combination of pattern language and micro-architecture documentation is useful for framework reuse, the forms of these documentation types used in this study require further enhancement to become effective. The paper also serves as an example to encourage others to perform evaluation of framework understanding and documentation.
C1 Univ Strathclyde, Dept Comp & Informat Sci, Glasgow G1 1XH, Lanark, Scotland.
C3 University of Strathclyde
RP Wood, M (corresponding author), Univ Strathclyde, Dept Comp & Informat Sci, Livingstone Tower,26 Richmond St, Glasgow G1 1XH, Lanark, Scotland.
EM Douglas.Kirk@cis.strath.ac.uk; Marc.Roper@cis.strath.ac.uk;
   Murray.Wood@cis.strath.ac.uk
OI Wood, Murray/0000-0002-9449-1036
CR Alexander C., 1977, PATTERN LANGUAGE TOW
   [Anonymous], 1996, Pattern oriented software architecture: a system of patters
   [Anonymous], BUILDING APPL FRAMEW
   BECK K, 1994, P ECOOP 94, P139
   BECK K, 2005, HOTDRAW
   Bosch J., 1999, BUILDING APPL FRAMEW, P55
   BUTLER G, 2000, ACM COMPUT SURV, V32
   Campbell DT., 1963, EXPT QUASIEXPERIMENT
   DENOMMEE P, 1998, THESIS CONCORDIA U C
   Dey I., 2003, Qualitative data analysis: A user-friendly guide for social scientists, DOI DOI 10.4324/9780203412497
   FAIRBANKS G, 2004, WORKSH DIR SOFTW ENG
   Fayad Mohamed E., 1999, Building Application Frameworks: Object-oriented Foundations of Framework Design
   Froehlich G, 1997, PROC INT CONF SOFTW, P491, DOI 10.1145/253228.253432
   GAMMA E, 2005, JHOTDRAW
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   GANGOPADHYAY D, 1995, SEVENTH INTERNATIONAL WORKSHOP ON COMPUTER-AIDED SOFTWARE ENGINEERING, PROCEEDINGS, P90, DOI 10.1109/CASE.1995.465325
   HAKALA M, 1999, P WORKSH OBJ OR TECH, P199
   HARRISON W, 2000, WORKSH 5 JUN 2000 22
   HELM R, 1990, P EUR C OBJ OR PROGR, P169
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   JOHNSON RE, 1992, P C OBJ OR PROGR SYS, P63
   Judd C.M., 1991, Research methods in social relations, V6th
   KAISER W, 2005, JHOTDRAW OPEN SOURCE
   KIRK D, 2005, THESIS U STRATHCLYDE
   KRASNER GE, 1988, J OBJECT-ORIENT PROG, V1, P41
   LAJOIE R, 1993, THESIS MCGILL U CANA
   LAJOIE R, 1994, P C OBJ OR DAT SOFTW, P295
   Meusel M, 1997, LECT NOTES COMPUT SC, V1241, P496, DOI 10.1007/BFb0053392
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Moser S, 1996, COMPUTER, V29, P45, DOI 10.1109/2.536783
   *NETU2, 2005, MEDIACAM HIGH SPEED
   *OMG, 2005, CORB
   *OMG, 2005, UN MOD LANG
   ORTIGOSA A, 1999, P ARG S OBJ OR, P103
   Perry DE., 2000, P C FUT SOFTW ENG, P345, DOI DOI 10.1145/336512.336586
   Robitaille S, 2000, PROC IEEE INT CONF S, P22, DOI 10.1109/ICSM.2000.882972
   SCHMIDT DC, 2005, ADAPTIVE COMMUNICATI
   SCHNEIDER K, 1995, P S DES INT SYST PRO, P177
   Shull F, 2000, IEEE T SOFTWARE ENG, V26, P1101, DOI 10.1109/32.881720
   SLANEY J, 1994, TRARP794 AUSTR NAT U
   Sparks S, 1996, COMPUTER, V29, P52, DOI 10.1109/2.536784
   *SUN MICR, 2005, DESKT JAVA JAV FDN C
   *SUN MICR, 2005, J2EE JDBC TECH
   *SUN MICR, 2005, COR JAV JAV TOOL
   van Gurp J, 2002, J SYST SOFTWARE, V61, P105, DOI 10.1016/S0164-1212(01)00152-2
   WHITE S, 2005, JUNG JAVA U NETWORK
   2005, BORLAND DESIGNER
NR 47
TC 17
Z9 18
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2007
VL 12
IS 3
BP 243
EP 274
DI 10.1007/s10664-006-9027-z
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 168JN
UT WOS:000246521000002
DA 2024-07-18
ER

PT J
AU Do, H
   Rothermel, G
   Kinneer, A
AF Do, H
   Rothermel, G
   Kinneer, A
TI Prioritizing JUnit test cases: An empirical assessment and cost-benefits
   analysis
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 15th International Symposium on Software Reliability Engineering
CY NOV 02-05, 2004
CL St Malo, FRANCE
SP IEEE Comp Soc, Reliabil Soc, IRISA, cigital, Microsoft, france telecom R&D, Thales, IBM, CNRS, DGA, INRIA, Metropole Rennes, Bretagne Reg, Univ Rennes
DE software maintenance; regression testing; testing object-oriented
   software; test case prioritization; empirical studies; cost-benefits
   analysis
AB Test case prioritization provides a way to run test cases with the highest priority earliest. Numerous empirical studies have shown that prioritization can improve a test suite's rate of fault detection, but the extent to which these results generalize is an open question because the studies have all focused on a single procedural language, C, and a few specific types of test suites. In particular, Java and the JUnit testing framework are being used extensively to build software systems in practice, and the effectiveness of prioritization techniques on Java systems tested under JUnit has not been investigated. We have therefore designed and performed a controlled experiment examining whether test case prioritization can be effective on Java programs tested under JUnit, and comparing the results to those achieved in earlier studies. Our analyses show that test case prioritization can significantly improve the rate of fault detection of JUnit test suites, but also reveal differences with respect to previous studies that can be related to the language and testing paradigm. To investigate the practical implications of these results, we present a set of cost-benefits models for test case prioritization, and show how the effectiveness differences observed can result in savings in practice, but vary substantially with the cost factors associated with particular testing processes.
C1 Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
C3 University of Nebraska System; University of Nebraska Lincoln
RP Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
EM dohy@cse.unl.edu; grother@cse.unl.edu; akinneer@cse.unl.edu
CR Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], P 24 INT C SOFTW ENG
   [Anonymous], COMM ACM
   Chen TY, 1996, INFORM PROCESS LETT, V60, P135, DOI 10.1016/S0020-0190(96)00135-4
   CHEN YF, 1994, PROC INT CONF SOFTW, P211
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   Elbaum S, 2004, SOFTWARE QUAL J, V12, P185, DOI 10.1023/B:SQJO.0000034708.84524.22
   Elbaum S, 2003, SOFTW TEST VERIF REL, V13, P65, DOI 10.1002/stvr.263
   Elbaum S, 2002, IEEE T SOFTWARE ENG, V28, P159, DOI 10.1109/32.988497
   Elbaum S, 2001, PROC INT CONF SOFTW, P329, DOI 10.1109/ICSE.2001.919106
   Elbaum S., 2000, Software Engineering Notes, V25, P102, DOI 10.1145/347636.348910
   Elbaum S, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P169, DOI 10.1109/METRIC.2001.915525
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Harrold M. J., 1993, ACM Transactions on Software Engineering and Methodology, V2, P270, DOI 10.1145/152388.152391
   Hutchins M., 2004, P INT C SOFTW ENG, P191
   ISHIZAKI K, 1999, ACM 1999 JAV GRAND C, P119
   Malishevsky AG, 2002, PROC IEEE INT CONF S, P204, DOI 10.1109/ICSM.2002.1167767
   OFFUTT J, 1995, P 12 INT C TEST COMP, P111
   POWER J, 2002, NUMCSTR200207 NAT U
   Ramsey F.L., 1997, STAT SLEUTH COURSE M
   Rothermel G, 2004, ACM T SOFTW ENG METH, V13, P277, DOI 10.1145/1027092.1027093
   Rothermel G., 1999, Proceedings IEEE International Conference on Software Maintenance - 1999 (ICSM'99). `Software Maintenance for Business Change' (Cat. No.99CB36360), P179, DOI 10.1109/ICSM.1999.792604
   Rothermel G., 1997, ACM Transactions on Software Engineering and Methodology, V6, P173, DOI 10.1145/248233.248262
   ROTHERMEL G, 2001, IEEE T SOFTW ENG, V27
   ROTHERMEL G, 2002, P 24 INT C SOFTW ENG, P230
   Saff D, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P281, DOI 10.1109/ISSRE.2003.1251050
   SAFF D, 2004, P INT S SOFTW TEST A, P76
   Srivastava A., 2002, P INT S SOFTW TEST A
   STAFF D, 2004, P 2 ECL TECHN EXCH W
   Wang WE, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P264, DOI 10.1109/ISSRE.1997.630875
   WELLS D, 2003, EXTREME PROGRAMMING
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 32
TC 50
Z9 62
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2006
VL 11
IS 1
BP 33
EP 70
DI 10.1007/s10664-006-5965-8
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 013XO
UT WOS:000235443500003
DA 2024-07-18
ER

PT J
AU Syed-Abdullah, S
   Holcombe, M
   Gheorge, M
AF Syed-Abdullah, S
   Holcombe, M
   Gheorge, M
TI The impact of an agile methodology on the well being of development
   teams
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE extreme programming; agile methodology; work related well being; SE
   teams; anxiety; contentment; depression; enthusiasm
ID JOB-SATISFACTION; MENTAL-HEALTH; PERFORMANCE; VALIDITY
AB This paper describes an empirical study, which addresses the aspect of well being amongst members of the software development teams. The question of interest is whether an agile methodology has any distinct effect on the well being of the software developers. Both quantitative and qualitative methods were utilised, including the participative observation, focus group interviews, close-ended questionnaires and simple statistical tests such as Spearman Correlation and Mann-Whitney test. Initial results showed that an agile methodology (XP) has a positive effect on the level of enthusiasm of the software developers in the most dynamic project. To understand why XP can increase enthusiasm, results are interpreted with references to cognitive, affective and managerial properties of the practices studied. This result needs further investigation on the individual effects of each practice on the wellbeing and attitudes of Software Engineering (SE) teams.
C1 Univ Sheffield, Dept Comp Sci, Verificat & Testing Grp, Sheffield S10 2TN, S Yorkshire, England.
C3 University of Sheffield
RP Univ Sheffield, Dept Comp Sci, Verificat & Testing Grp, Sheffield S10 2TN, S Yorkshire, England.
EM s.abdullah@dcs.shef.ac.uk
CR AGHO AO, 1992, J OCCUP ORGAN PSYCH, V65, P185, DOI 10.1111/j.2044-8325.1992.tb00496.x
   ASHFORD SJ, 1989, RES ORGAN BEHAV, V11, P133
   Axtell C, 2002, J OCCUP ORGAN PSYCH, V75, P217, DOI 10.1348/09631790260098596
   BATT R, 1995, BRIT J IND RELAT, V33, P353, DOI 10.1111/j.1467-8543.1995.tb00444.x
   BECK K, 2001, PLANNING EXTREME PRO, P139
   Beck K., 2000, Extreme Programming Explained - Embrace Change, P190
   BLOMQVIST K, 2002, 18 ANN IMP C DIJ FRA
   CHALYKOFF J, 1989, PERS PSYCHOL, V42, P807, DOI 10.1111/j.1744-6570.1989.tb00676.x
   Clegg C, 1997, ERGONOMICS, V40, P851, DOI 10.1080/001401397187694
   FRANCISCO MJ, 2004, EMPIRICAL ASSESSMENT, P189
   Frenkel S.J., 1998, International Journal of Human Resource Management, V9, P957, DOI DOI 10.1080/095851998340694
   HOLCOMBE M, 2003, EXTREME PROGRAMMING, P251
   HOLCOMBE M, 2003, P ESEIW 2003 WORKSH, P37
   Hollman D., 2002, J HUMAN RESOURCE MAN, V12, P35
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Knights D, 1998, J MANAGE STUD, V35, P163, DOI 10.1111/1467-6486.00089
   Lepak DP, 2003, J MANAGE, V29, P681, DOI 10.1016/S0149-2063(03)00031-X
   MACIAS F, 2003, LECT NOTES COMPUT SC, V2675, P394
   Melnik G, 2003, LECT NOTES COMPUT SC, V2753, P172
   MOSES SE, 2003, J MANAGE, V29, P467
   Norman DA, 2003, IBM SYST J, V42, P38, DOI 10.1147/sj.421.0038
   SEVASTOS P, 1992, J OCCUP ORGAN PSYCH, V65, P33, DOI 10.1111/j.2044-8325.1992.tb00482.x
   SIMONS AJH, 2003, DISCOVERY METHOD
   SIMONS AJH, 1998, OBJECT DISCOVERY PRO, P109
   SYEDABDULLAH S, 2003, LNCS, V2675, P354
   WARR P, 1990, J OCCUP PSYCHOL, V63, P193, DOI 10.1111/j.2044-8325.1990.tb00521.x
NR 26
TC 18
Z9 22
U1 2
U2 30
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2006
VL 11
IS 1
BP 143
EP 167
DI 10.1007/s10664-006-5968-5
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 013XO
UT WOS:000235443500006
DA 2024-07-18
ER

PT J
AU Karahasanovi, A
   Anda, B
   Arisholm, E
   Hove, SE
   Jorgensen, M
   Sjoberg, DIK
   Welland, R
AF Karahasanovi, A
   Anda, B
   Arisholm, E
   Hove, SE
   Jorgensen, M
   Sjoberg, DIK
   Welland, R
TI Collecting feedback during software engineering experiments
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE qualitative studies; data collection; tool support; software engineering
   experiments; feedback; experience sampling
AB Objective: To improve the qualitative data obtained from software engineering experiments by gathering feedback during experiments.
   Rationale: Existing techniques for collecting quantitative and qualitative data from software engineering experiments do not provide Sufficient information to validate or explain all our results. Therefore, we would like a cost-effective and unobtrusive method of collecting feedback from subjects during an experiment to augment other sources of data.
   Design of study: We formulated a set of qualitative questions that might be answered by collecting feedback during software engineering experiments. We then developed a tool to collect such feedback from experimental subjects. This feedback-collection tool was used in four different experiments and we evaluated the usefulness of the feedback obtained in the context of each experiment. The feedback data was triangulated with other Sources of quantitative and qualitative data collected for the experiments.
   Results: We have demonstrated that the collection of feedback during experiments provides useful additional data to: validate the data obtained from other sources about solution times and quality of solutions; check process conformance; understand problem solving processes; identify problems with experiments; and understand subjects' perception of experiments.
   Conclusions: Feedback collection has proved useful in four experiments and we intend to use the feedback-collection tool in a range of other experiments to further explore the cost-effectiveness and limitations of this technique. It is also necessary to carry out a systematic study to more fully understand the impact of the feedback-collecting tool on subjects' performance in experiments.
C1 Simula Res Lab, NO-1325 Lysaker, Norway.
   Univ Glasgow, Dept Comp Sci, Glasgow G12 8RZ, Lanark, Scotland.
C3 University of Glasgow
RP Simula Res Lab, POB 134, NO-1325 Lysaker, Norway.
EM amela@simula.no; bentea@simula.no; erika@simula.no; siweh@simula.no;
   magnej@simula.no; dagsj@simula.no; ray@dcs.gla.ac.uk
RI Jorgensen, Magne/H-4402-2016
CR Anda B, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P50, DOI 10.1109/ISESE.2003.1237964
   ANDERSON JR, 1987, BEHAV BRAIN SCI, V10, P467, DOI 10.1017/S0140525X00023554
   [Anonymous], CASE TRENDS DEC
   [Anonymous], 1963, EXPT QUASIEXPERIMENT
   [Anonymous], 1994, CASE STUDY RES DESIG
   Arisholm E., 2002, Nordic Journal of Computing, V9, P231
   ARISHOLM E, 2003, 200304 SINN RES LAB
   ASERINSKY E, 1953, SCIENCE, V118, P273, DOI 10.1126/science.118.3062.273
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   BERNARD HR, 1982, SOC SCI RES, V11, P30, DOI 10.1016/0049-089X(82)90006-0
   BERRY DC, 1990, BEHAV INFORM TECHNOL, V9, P175, DOI 10.1080/01449299008924235
   Boren MT, 2000, IEEE T PROF COMMUN, V43, P261, DOI 10.1109/47.867942
   CHEN H, 1998, WEBNET 98 WORLD C OR
   CONRATH DW, 1983, SOC NETWORKS, V5, P315, DOI 10.1016/0378-8733(83)90031-X
   DAVIDSON GV, 1996, ED MEDIA 96 C ED MUL
   DENNING S, 1990, P HUM FACT SOC 34 AN, P1285
   Ericsson K. A., 1993, PROTOCOL ANAL VERBAL
   Ericsson KA., 1998, Mind, Culture, and Activity, V5, P178, DOI [DOI 10.1207/S15327884MCA0503_3, 10.1207/s15327884mca0503_3]
   ERICSSON KA, 2003, UNPUB VALID NONREACT
   Evans H, 2003, SOFTWARE PRACT EXPER, V33, P99, DOI 10.1002/spe.498
   Freund R., 1998, REGRESSION ANAL STAT
   Garner R., 1988, LEARNING STUDY STRAT, P63
   GENEST M, 1981, COGNITIVE ASSESSMENT, P223
   HAAK MJ, 2003, IEEE COMPUTER SOC, P285
   HURLBURT RT, 1979, J RES PERS, V13, P103, DOI 10.1016/0092-6566(79)90045-X
   Ivory MY, 2001, ACM COMPUT SURV, V33, P470, DOI 10.1145/503112.503114
   Jungk A, 2000, J CLIN MONITOR COMP, V16, P243, DOI 10.1023/A:1011462726040
   KARAHASANOVIC A, 2002, INT WORKSH GRAPH BAS, P22
   KARAHASANOVIC A, 2000, NWPER 2000 NORD WORK, P60
   KARAHASANOVIC A, 2001, 2001 IEEE S VIS MULT, P358
   KARAHASANOVIC A, 2002, THESIS U OSLO
   KARAHASANOVIC A, 2001, INF RES MAN ASS INT, P1027
   LARSON R, 1983, NATURALISTIC APPROAC, P42
   Nathan M. J., 1991, Intelligent Tutoring Media, V2, P101, DOI 10.1080/14626269109408294
   Patel VL, 2001, INT J MED INFORM, V63, P147, DOI 10.1016/S1386-5056(01)00165-4
   SANDERSON PM, 1990, P HUM FACT SOC 34 AN, P1280
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Singer J., 2001, Empirical Software Engineering, V6, P287, DOI DOI 10.1023/A:1011998412776
   United Nations Educational Scientific and Cultural Organization (UNESCO), 2018, INT TECHN GUID SEX E
   von Mayrhauser A, 1999, IEEE T SOFTWARE ENG, V25, P526, DOI 10.1109/32.799950
   Vygotsky L., 1994, THOUGHT LANGUAGE
   WELLAND R, 1997, EMPIRICAL ASSESSMENT
   Wohlin C., 1999, EXPT SOFTWARE ENG IN
   WRIGHT RB, 1992, PROCEEDINGS OF THE HUMAN FACTORS SOCIETY, 36TH ANNUAL MEETING, VOLS 1 AND 2, P1220
NR 44
TC 16
Z9 17
U1 1
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2005
VL 10
IS 2
BP 113
EP 147
DI 10.1007/s10664-004-6189-4
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 918OT
UT WOS:000228558200001
DA 2024-07-18
ER

PT J
AU Khoshgoftaar, TM
   Seliya, N
   Gao, K
AF Khoshgoftaar, TM
   Seliya, N
   Gao, K
TI Assessment of a new three-group software quality classification
   technique: An empirical case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software quality prediction; three-group classification; discriminant
   analysis; decision trees; case-based reasoning; expected cost of
   misclassification
ID HIGH-RISK; PREDICTION; MODELS
AB The primary aim of risk-based software quality classification models is to detect, prior to testing or operations, components that are most-likely to be of high-risk. Their practical usage as quality assurance tools is ganged by the prediction-accuracy and cost-effective aspects of the models. Classifying modules into two risk groups is the more commonly practiced trend. Such models assume that all modules predicted as high-risk will be subjected to quality improvements. Due to the always-limited reliability improvement resources and the variability of the quality risk-factor, a more focused classification model may be desired to achieve cost-effective software quality assurance goals. In such cases, calibrating a three-group (high-risk, medium-risk, and low-risk) classification model is more rewarding.
   We present an innovative method that circumvents the complexities, computational overhead, and difficulties involved in calibrating pore or direct three-group classification models. With the application of the proposed method, practitioners call utilize an existing two-group classification algorithm thrice in order to yield the three risk-based classes. An empirical approach is taken to investigate the effectiveness and validity of the proposed technique. Some commonly used classification techniques are studied to demonstrate the proposed methodology. They include, the C4.5 decision tree algorithm, discriminant analysis, and case-based reasoning. For the first two, we compare the three-group model calibrated using the respective techniques with the one built by applying the proposed method. Any two-group classification technique call be employed by the proposed method, including those that do not provide a direct three-group classification model, e.x., logistic regression and certain binary classification trees, such as CART. Based oil a case study of a large-scale industrial software system, it is observed that the proposed method yielded promising results. For a given classification technique, the expected cost of misclassification of the proposed three-group models were significantly better (generally) when compared to the technique's direct three-group model. In addition, the proposed method is also evaluated against all alternate indirect three-group classification method.
C1 Florida Atlantic Univ, Boca Raton, FL 33431 USA.
C3 State University System of Florida; Florida Atlantic University
RP Florida Atlantic Univ, Boca Raton, FL 33431 USA.
EM taghi@cse.fau.edu; nseliya@cse.fau.edu; kgao@cse.fau.edu
CR [Anonymous], 1996, CASE BASED REASONING
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], 1990, Software testing techniques {
   [Anonymous], 2000, Kluwer international series in software engineering
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   BERENSON ML, 1983, INTEMEDIATE STAT MET
   BHUPATHIRAJU SS, 2002, THESIS FLORIDA ATLAN
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   Ebert C, 1996, SOFTWARE QUAL J, V5, P255, DOI 10.1007/BF00209184
   Fayyad UM, 1996, IEEE EXPERT, V11, P20, DOI 10.1109/64.539013
   Gray A. R., 1999, Empirical Software Engineering, V4, P297, DOI 10.1023/A:1009849100780
   Hochman R, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P13, DOI 10.1109/ISSRE.1997.630844
   Khoshgoftaar T., 1999, International Journal of Reliability, Quality and Safety Engineering, V6, P303
   Khoshgoftaar T. M., 2000, Empirical Software Engineering, V5, P313, DOI 10.1023/A:1009896203228
   Khoshgoftaar TM, 2000, IEEE T RELIAB, V49, P209, DOI 10.1109/24.877340
   KHOSHGOFTAAR TM, 1995, J SYST SOFTWARE, V29, P85, DOI 10.1016/0164-1212(94)00130-F
   Khoshgoftaar TM, 2002, IEEE T RELIAB, V51, P455, DOI 10.1109/TR.2002.804488
   Khoshgoftaar TM, 2003, EMPIR SOFTW ENG, V8, P325, DOI 10.1023/A:1025316301168
   Khoshgoftaar TM, 2002, 13TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P221, DOI 10.1109/ISSRE.2002.1173256
   Khoshgoftaar TM, 2000, PROC INT C TOOLS ART, P54, DOI 10.1109/TAI.2000.889846
   Khoshgoftaar TM, 2000, ANN SOFTW ENG, V9, P103, DOI 10.1023/A:1018972607783
   KHOSHGOFTAAR TM, 2001, RECENT ADV RELIABILI, P247
   Kolodner J.L., 1993, Case-Based Reasoning
   LANNING DL, 1995, IEEE T RELIAB, V44, P677, DOI 10.1109/24.476001
   Michalski R.S., 1998, MACHINE LEARNING DAT
   Ohlsson MC, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P217, DOI 10.1109/METRIC.2002.1011340
   Ohlsson MC, 1998, PROC IEEE INT CONF S, P6, DOI 10.1109/ICSM.1998.738484
   OHLSSON MC, 1999, P AER C ASP CO US, V5, P69
   Ohlsson Niclas., 1996, P 6 INT C SOFTWARE Q, P1
   PONNUSWAMY V, 2001, THESIS FLORIDA ATLAN
   PORTER AA, 1990, IEEE SOFTWARE, V7, P46, DOI 10.1109/52.50773
   Quinlan J. R., 1993, PROGRAMS MACHINE LEA
   RUNESON P, 2001, LECT NOTES COMPUTER, V2188, P341
   Schneidewind NF, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P402, DOI 10.1109/ISSRE.1997.630888
   Schneidewind NF, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P328, DOI 10.1109/METRIC.2001.915540
   Seber G A., 2009, Multivariate observations, DOI DOI 10.1002/9780470316641
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   SONG H, 2001, THESIS FLORIDA ATLAN
   Szabo RM, 2000, 6TH ISSAT INTERNATIONAL CONFERENCE ON RELIABILITY AND QUALITY IN DESIGN, PROCEEDINGS, P90
   SZABO RM, 1995, THESIS FLORIDA ATLAN
   Takahashi R, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P222, DOI 10.1109/ISSRE.1997.630869
   VOTTA LG, 1995, PROC INT CONF SOFTW, P277, DOI 10.1145/225014.225040
   Xu ZW, 2001, COMPUT J, V44, P557, DOI 10.1093/comjnl/44.6.557
NR 43
TC 19
Z9 20
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2005
VL 10
IS 2
BP 183
EP 218
DI 10.1007/s10664-004-6191-x
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 918OT
UT WOS:000228558200003
DA 2024-07-18
ER

PT J
AU Paramitha, R
   Massacci, F
AF Paramitha, Ranindya
   Massacci, Fabio
TI Technical leverage analysis in the Python ecosystem
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Dependencies; Software libraries; Technical leverage; Empirical
   analysis; Vulnerabilities; Python ecosystem; Security
ID SOFTWARE; COST
AB Context: Technical leverage is the ratio between dependencies (other people's code) and own codes of a software package. It has been shown to be useful to characterize the Java ecosystem and there are also studies on the NPM ecosystem available.Objective: By using this metric we aim to analyze the Python ecosystem, how it evolves, and how secure it is, as a developer would perceive it when deciding to adopt or update (or not) a library.Method:We collect a dataset of the top 600 Python packages (corresponding to 21,205 versions) and used a number of innovative approaches for its analysis including the use of a two-part statistical model to deal with excess zeros, a mathematical closed formulation to estimate vulnerabilities that we confirm with bootstrapping on the actual dataset.Results: Small Python package versions have a median technical leverage of 6.9x their own code, while bigger package versions rely on dependencies code a tenth of their own (median leverage of 0.1). In terms of evolution, Python packages tend to have stable technical leverage through their evolution (once highly leveraged, always leveraged). On security, the chance of getting a safe package version when choosing a package is actually better than previous research has shown based on the ratio of safe package versions in the ecosystem.Coclusions: Python packages ship a lot of other people's code and tend to keep doing so. However, developers will have a good chance to choose a safe package version.
C1 [Paramitha, Ranindya; Massacci, Fabio] Univ Trento, Dept Informat Engn & Comp Sci, Trento, Italy.
   [Massacci, Fabio] Vrije Univ Amsterdam, Fdn Secur, Amsterdam, Netherlands.
C3 University of Trento; Vrije Universiteit Amsterdam
RP Paramitha, R (corresponding author), Univ Trento, Dept Informat Engn & Comp Sci, Trento, Italy.
EM ranindya.paramitha@unitn.it; fabio.massacci@ieee.org
RI Paramitha, Ranindya/KRQ-1510-2024
OI Paramitha, Ranindya/0000-0002-6682-4243
FU We would like to thank Ivan Pashchenko for useful discussions on
   technical leverage and Batbayar Narantsogt for providing the first
   initial code base for extracting libraries for Python. We also thank the
   anonymous reviewers whose comments greatly helped t [952647]; EU
FX We would like to thank Ivan Pashchenko for useful discussions on
   technical leverage and Batbayar Narantsogt for providing the first
   initial code base for extracting libraries for Python. We also thank the
   anonymous reviewers whose comments greatly helped to improve the paper.
   Any remaining mistakes were ours. This work was partly funded by the EU
   under the H2020 Program AssureMOSS (Grant n. 952647).
CR Alfadel M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P446, DOI 10.1109/SANER50967.2021.00048
   Allman E, 2012, COMMUN ACM, V55, P50, DOI 10.1145/2160718.2160733
   Allodi L, 2022, RISK ANAL, V42, P1623, DOI 10.1111/risa.13732
   Anonymous, 2022, Zenodo, DOI 10.5281/ZENODO.6585292
   [Anonymous], 2023, MICR
   Bagmar A, 2021, Arxiv, DOI arXiv:2102.06301
   Banker R, 2021, MANAGE SCI, V67, P3174, DOI 10.1287/mnsc.2019.3542
   Bickenbach F., 2001, Markov or not Markov? This should be a question
   Bonaccorsi A, 2003, RES POLICY, V32, P1243, DOI 10.1016/S0048-7333(03)00051-9
   Cox J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P109, DOI 10.1109/ICSE.2015.140
   Cunningham W., 1993, OOPS Messenger, V4, P29
   Dashevskyi Stanislav, 2016, Engineering Secure Software and Systems. 8th International Symposium, ESSoS 2016. Proceedings: LNCS 9639, P190, DOI 10.1007/978-3-319-30806-7_12
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Derr E, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2187, DOI 10.1145/3133956.3134059
   Fitzpatrick B, 2015, Dependencies & vendoring
   Foundation PS, 2022, Pypi the python package index
   Foundation PS, 2023, python-loc-counter
   Foundation PS, 2023, Jettify
   Foundation PS, 2023, Aws
   Frakes WB, 2005, IEEE T SOFTWARE ENG, V31, P529, DOI 10.1109/TSE.2005.85
   GitHub I, 2023, Amazon web services
   GitHub I, 2023, nice-registry/sourceranks
   GitHub I, 2023, boto/botocore
   Gkortzis A, 2021, J SYST SOFTWARE, V172, DOI 10.1016/j.jss.2020.110653
   Hejderup J, 2015, In dependencies we trust: How vulnerable are dependencies in software modules?
   Hejderup J, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10071-9
   Huijgens H., 2017, Proceedings of the 21st International Conference on Evaluation and Assessment in Software Engineering - EASE'17, P51, DOI [10.1145/3084226, DOI 10.1145/3084226]
   Jorgensen M, 2007, IEEE T SOFTWARE ENG, V33, P33, DOI 10.1109/TSE.2007.256943
   Khoirom S., 2020, Int Res J Eng Technol, V7, P4384
   Kikas R, 2017, IEEE WORK CONF MIN S, P102, DOI 10.1109/MSR.2017.55
   Kula Raula Gaikovina, 2018, Empirical Software Engineering, V23, P384, DOI 10.1007/s10664-017-9521-5
   Lachenbruch PA, 2002, STAT METHODS MED RES, V11, P297, DOI 10.1191/0962280202sm289ra
   Lauinger T, 2020, Arxiv, DOI arXiv:1811.00918
   Limited S, 2023, boto3 vulnerabilities
   Manadhata PK, 2011, IEEE T SOFTWARE ENG, V37, P371, DOI 10.1109/TSE.2010.60
   Massacci F, 2022, IEEE SECUR PRIV, V20, P16, DOI 10.1109/MSEC.2022.3185845
   Massacci F, 2021, PROC INT CONF SOFTW, P1386, DOI 10.1109/ICSE43902.2021.00125
   NIST, 2023, Cve-2021-33503 detail
   Pashchenko I, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1513, DOI 10.1145/3372297.3417232
   Pashchenko I, 2022, IEEE T SOFTWARE ENG, V48, P1592, DOI 10.1109/TSE.2020.3025443
   Pashchenko I, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268920
   Pernet C, 2023, Machine-learning python package compromised in supply chain attack
   Pittenger Mike, 2016, Tech. Rep
   Prana GAA, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09959-3
   Rosen S, 2022, Can vendoring dependencies in a build be officially supported?
   Ruohonen J, 2021, 2021 18TH INTERNATIONAL CONFERENCE ON PRIVACY, SECURITY AND TRUST (PST), DOI 10.1109/PST52912.2021.9647791
   Slaughter SA, 1998, COMMUN ACM, V41, P67, DOI 10.1145/280324.280335
   SnykDB, 2022, Snyk vulnerability DB
   Soto-Valero C, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P1021, DOI 10.1145/3468264.3468589
   Soto-Valero C, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09914-8
   Stokey NancyL., 2008, EC INACTION STOCHAST
   Van Kemenade Hugo, 2022, Zenodo, DOI 10.5281/ZENODO.6319631
   Vu DL, 2020, 2020 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (EUROS&PW 2020), P509, DOI 10.1109/EuroSPW51379.2020.00074
   Wang Y, 2020, PROC IEEE INT CONF S, P35, DOI 10.1109/ICSME46990.2020.00014
   Zimmermann M, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P995
NR 56
TC 0
Z9 0
U1 1
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 139
DI 10.1007/s10664-023-10355-2
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA U7XD8
UT WOS:001086888400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Song, LY
   Minku, LL
   Yao, X
AF Song, Liyan
   Minku, Leandro L.
   Yao, Xin
TI On the validity of retrospective predictive performance evaluation
   procedures in just-in-time software defect prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Just-in-time software defect prediction; Performance evaluation
   procedures; Verification latency; Online learning; Concept drift; Label
   noise
AB Just-In-Time Software Defect Prediction (JIT-SDP) is concerned with predicting whether software changes are defect-inducing or clean. It operates in scenarios where labels of software changes arrive over time with delay, which in part corresponds to the time we wait to label software changes as clean (waiting time). However, clean labels decided based on waiting time may be different from the true labels of software changes, i.e., there may be label noise. This typically overlooked issue has recently been shown to affect the validity of continuous performance evaluation procedures used to monitor the predictive performance of JIT-SDP models during the software development process. It is still unknown whether this issue could potentially also affect evaluation procedures that rely on retrospective collection of software changes such as those adopted in JIT-SDP research studies, affecting the validity of the conclusions of a large body of existing work. We conduct the first investigation of the extent with which the choice of waiting time and its corresponding label noise would affect the validity of retrospective performance evaluation procedures. Based on 13 GitHub projects, we found that the choice of waiting time did not have a significant impact on the validity and that even small waiting times resulted in high validity. Therefore, (1) the estimated predictive performances in JIT-SDP studies are likely reliable in view of different waiting times, and (2) future studies can make use of not only larger (5k+ software changes), but also smaller (1k software changes) projects for evaluating performance of JIT-SDP models.
C1 [Song, Liyan; Yao, Xin] Southern Univ Sci & Technol, Res Inst Trustworthy Autonomous Syst, Shenzhen, Peoples R China.
   [Song, Liyan; Yao, Xin] Southern Univ Sci & Technol, Dept Comp Sci & Engn, Guangdong Prov Key Lab Brain inspired Intelligent, Shenzhen, Peoples R China.
   [Minku, Leandro L.] Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, England.
C3 Southern University of Science & Technology; Southern University of
   Science & Technology; University of Birmingham
RP Yao, X (corresponding author), Southern Univ Sci & Technol, Res Inst Trustworthy Autonomous Syst, Shenzhen, Peoples R China.; Yao, X (corresponding author), Southern Univ Sci & Technol, Dept Comp Sci & Engn, Guangdong Prov Key Lab Brain inspired Intelligent, Shenzhen, Peoples R China.; Minku, LL (corresponding author), Univ Birmingham, Sch Comp Sci, Birmingham B15 2TT, England.
EM songly@sustech.edu.cn; L.L.Minku@bham.ac.uk; xiny@sustech.edu.cn
OI Minku, Leandro/0000-0002-2639-0671; Song, Liyan/0000-0003-1172-8825
FU National Natural Science Foundation of China (NSFC) [62002148];
   Guangdong Provincial Key Laboratory [62250710682]; Program for Guangdong
   Introducing Innovative and Enterpreneurial Teams [2020B121201001];
   Research Institute of Trustworthy Autonomous Systems (RITAS); 
   [2017ZT07X386]
FX This work was supported by National Natural Science Foundation of China
   (NSFC) underGrant No. 62002148 and Grant No. 62250710682, Guangdong
   Provincial Key Laboratory under GrantNo. 2020B121201001, the Program for
   Guangdong Introducing Innovative and Enterpreneurial Teams underGrant
   No. 2017ZT07X386, and Research Institute of Trustworthy Autonomous
   Systems (RITAS).
CR Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Aranda J, 2009, PROC INT CONF SOFTW, P298, DOI 10.1109/ICSE.2009.5070530
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Cabral GG, 2023, IEEE T SOFTWARE ENG, V49, P1342, DOI 10.1109/TSE.2022.3175789
   Cabral GG, 2019, PROC INT CONF SOFTW, P666, DOI 10.1109/ICSE.2019.00076
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen T, 2014, PROCEEDINGS OF THE FIFTH INTERNATIONAL SYMPOSIUM ON TEST AUTOMATION & INSTRUMENTATION, VOLS 1 AND 2, P82
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Ditzler G, 2015, IEEE COMPUT INTELL M, V10, P12, DOI 10.1109/MCI.2015.2471196
   Ekanayake J, 2012, EMPIR SOFTW ENG, V17, P348, DOI 10.1007/s10664-011-9180-x
   Eyolfson J., 2011, WORKING C MINING SOF, P153, DOI DOI 10.1145/1985441.1985464
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   Gama J, 2013, MACH LEARN, V90, P317, DOI 10.1007/s10994-012-5320-9
   Harman M, 2014, LECT NOTES COMPUT SC, V8636, P240
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He HB, 2009, IEEE T KNOWL DATA EN, V21, P1263, DOI 10.1109/TKDE.2008.239
   Herbold S, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10092-4
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Kabir MA, 2019, P INT COMP SOFTW APP, P53, DOI 10.1109/COMPSAC.2019.00017
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kubat M, 1997, LECT NOTES ARTIF INT, V1224, P146
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Mauchly JW, 1940, ANN MATH STAT, V11, P204, DOI 10.1214/aoms/1177731915
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Misirli AT, 2016, EMPIR SOFTW ENG, V21, P605, DOI 10.1007/s10664-015-9370-z
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Montgomery D. C., 2020, DESIGN ANAL EXPT
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nguyen H. M., 2011, 2011 International Conference of Soft Computing and Pattern Recognition, P347, DOI 10.1109/SoCPaR.2011.6089268
   Pornprasit C, 2021, IEEE WORK CONF MIN S, P369, DOI 10.1109/MSR52588.2021.00049
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Shihab E, 2012, INT S FDN SOFTW ENG, P1
   Song LY, 2023, IEEE T SOFTWARE ENG, V49, P646, DOI 10.1109/TSE.2022.3158831
   Tabassum S, 2020, PROC INT CONF SOFTW, P554, DOI 10.1145/3377811.3380403
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Wang S, 2018, IEEE T NEUR NET LEAR, V29, P4802, DOI 10.1109/TNNLS.2017.2771290
   Wang S, 2015, IEEE T KNOWL DATA EN, V27, P1356, DOI 10.1109/TKDE.2014.2345380
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Yao JX, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106664
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
NR 49
TC 1
Z9 1
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2023
VL 28
IS 5
AR 124
DI 10.1007/s10664-023-10341-8
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S2JJ1
UT WOS:001069479400003
OA hybrid
DA 2024-07-18
ER

PT J
AU Chouchen, M
   Ouni, A
   Olongo, J
   Mkaouer, MW
AF Chouchen, Moataz
   Ouni, Ali
   Olongo, Jefferson
   Mkaouer, Mohamed Wiem
TI Learning to Predict Code Review Completion Time In Modern Code Review
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Modern Code Review; Code review completion time estimation; Machine
   Learning; Software engineering
ID SOFTWARE QUALITY; PARTICIPATION
AB Modern Code Review (MCR) is being adopted in both open-source and proprietary projects as a common practice. MCR is a widely acknowledged quality assurance practice that allows early detection of defects as well as poor coding practices. It also brings several other benefits such as knowledge sharing, team awareness, and collaboration. For a successful review process, peer reviewers should perform their review tasks promptly while providing relevant feedback about the code change being reviewed. However, in practice, code reviews can experience significant delays to be completed due to various socio-technical factors which can affect the project quality and cost. That is, existing MCR frameworks lack tool support to help developers estimate the time required to complete a code review before accepting or declining a review request. In this paper, we aim to build and validate an automated approach to predict the code review completion time in the context of MCR. We believe that the predictions of our approach can improve the engagement of developers by raising their awareness regarding potential delays while doing code reviews. To this end, we formulate the prediction of the code review completion time as a learning problem. In particular, we propose a framework based on regression machine learning (ML) models based on 69 features that stem from 8 dimensions to (i) effectively estimate the code review completion time, and (ii) investigate the main factors influencing code review completion time. We conduct an empirical study on more than 280K code reviews spanning over five projects hosted on Gerrit. Results indicate that ML models significantly outperform baseline approaches with a relative improvement ranging from 7% to 49%. Furthermore, our experiments show that features related to the date of the code review request, the previous owner and reviewers' activities as well as the history of their interactions are the most important features. Our approach can help further engage the change owner and reviewers by raising their awareness regarding potential delays based on the predicted code review completion time.
C1 [Chouchen, Moataz; Ouni, Ali; Olongo, Jefferson] Univ Quebec, ETS Montreal, Montreal, PQ, Canada.
   [Mkaouer, Mohamed Wiem] Rochester Inst Technol, Rochester, NY USA.
C3 University of Quebec; Ecole de Technologie Superieure - Canada;
   University of Quebec Montreal; Rochester Institute of Technology
RP Ouni, A (corresponding author), Univ Quebec, ETS Montreal, Montreal, PQ, Canada.
EM moataz.chouchen.1@ens.etsmtl.ca; ali.ouni@etsmtl.ca;
   aurelien-jefferson.olongo-onana-noah.1@ens.etsmtl.ca; mwmvse@rit.edu
RI Mkaouer, Mohamed Wiem/N-7476-2017; Ouni, Ali/Y-8280-2019; Chouchen,
   Moataz/JZE-0325-2024
OI Mkaouer, Mohamed Wiem/0000-0001-6010-7561; Ouni,
   Ali/0000-0003-4708-0362; 
FU Natural Sciences and Engineering Research Council of Canada (NSERC)
   [RGPIN-2018-05960]
FX AcknowledgementsThis research has been funded by the Natural Sciences
   and Engineering Research Council of Canada (NSERC) RGPIN-2018-05960.
CR Abdi H, 2010, WIRES COMPUT STAT, V2, P433, DOI 10.1002/wics.101
   Ackerman A. F., 1984, Software Validation, Inspection - Testing - Verification - Alternatives. Proceedings of the Symposium, P13
   AlOmar EA, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P348, DOI 10.1109/ICSE-SEIP52600.2021.00044
   [Anonymous], 2022, MCRDURATION REPL PAC
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Bao LF, 2017, IEEE WORK CONF MIN S, P170, DOI 10.1109/MSR.2017.58
   Barry B, 1981, Software engineering economics, P197
   Baysal O, 2016, EMPIR SOFTW ENG, V21, P932, DOI 10.1007/s10664-015-9366-8
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Bettenburg N, 2015, EMPIR SOFTW ENG, V20, P294, DOI 10.1007/s10664-013-9292-6
   Boehm B., 1995, Annals of Software Engineering, V1, P57, DOI 10.1007/BF02249046
   Bosu A, 2014, 2014 ACM IEEE INT S, P1, DOI DOI 10.1145/2652524.2652544
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Britto R, 2014, INT CONF GLOBAL SOFT, P135, DOI 10.1109/ICGSE.2014.11
   Choetkiertikul M, 2019, IEEE T SOFTWARE ENG, V45, P637, DOI 10.1109/TSE.2018.2792473
   Chouchen M, 2021, Arxiv, DOI arXiv:2109.15141
   Chouchen M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P531, DOI 10.1109/SANER50967.2021.00060
   Chouchen M, 2021, APPL SOFT COMPUT, V100, DOI 10.1016/j.asoc.2020.106908
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Cohen J., 1988, STAT POWER ANAL BEHA
   Dejaeger K, 2012, IEEE T SOFTWARE ENG, V38, P375, DOI 10.1109/TSE.2011.55
   Dogan E, 2022, INFORM SOFTWARE TECH, V142, DOI 10.1016/j.infsof.2021.106737
   Ebert F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09909-5
   Ebert F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P49, DOI [10.1109/SANER.2019.8668024, 10.1109/saner.2019.8668024]
   Egelman CD, 2020, PROC INT CONF SOFTW, P174, DOI 10.1145/3377811.3380414
   Fagan M., 2002, Software Pioneers, P575
   Fan YR, 2018, EMPIR SOFTW ENG, V23, P3346, DOI 10.1007/s10664-018-9602-0
   Ferrucci Filomena, 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P89, DOI 10.1109/SSBSE.2010.20
   Geurts P, 2006, MACH LEARN, V63, P3, DOI 10.1007/s10994-006-6226-1
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Greiler M, 2016, Code reviewing in the trenches: Understanding challenges, Best Practices and Tool Needs
   Hannebauer C, 2016, IEEE INT CONF AUTOM, P99, DOI 10.1145/2970276.2970306
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herbold S, 2017, IEEE T SOFTWARE ENG, V43, P1091, DOI 10.1109/TSE.2017.2748129
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Hirao T, 2020, IEEE Transactions on Software Engineering, DOI [DOI 10.1109/TSE.2020.2977907, 10.1109/TSE.2020.2977907]
   Huang Y, 2019, INT C BLOCKCHAIN TRU, P461
   Islam K, 2022, INFORM SOFTWARE TECH, V142, DOI 10.1016/j.infsof.2021.106756
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Jiarpakdee J., 2020, IEEE Transactions on Software Engineering TSE'20
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Khanan C, 2020, IEEE INT CONF AUTOM, P1336, DOI 10.1145/3324884.3415295
   Kocaguneli E, 2013, IEEE T SOFTWARE ENG, V39, P1040, DOI 10.1109/TSE.2012.88
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Kovalenko V, 2018, IEEE Transactions on Software Engineering
   Kovalenko V, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P29, DOI 10.1145/3195836.3195842
   Leguina A, 2015, INT J RES METHOD EDU, V38, P220, DOI 10.1080/1743727X.2015.1005806
   Liu FT, 2008, IEEE DATA MINING, P413, DOI 10.1109/ICDM.2008.17
   Louppe G., 2013, ADV NEURAL INFORM PR, P431, DOI DOI 10.5555/2999611.2999660
   MacLeod L, 2018, IEEE SOFTWARE, V35, P34, DOI 10.1109/MS.2017.265100500
   Maddila C, 2020, arXiv
   Maddila C, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P874, DOI 10.1145/3338906.3340457
   Matsumoto S, 2010, P 6 INT C PREDICTIVE, P1, DOI DOI 10.1145/1868328.1868356
   Messalas A., 2019, 2019 10 INT C INFORM, P1
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Mustaqeem M, 2021, CLUSTER COMPUT, V24, P2581, DOI 10.1007/s10586-021-03282-8
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Oliveira ALI, 2006, NEUROCOMPUTING, V69, P1749, DOI 10.1016/j.neucom.2005.12.119
   Ouni A, 2016, PROC IEEE INT CONF S, P367, DOI 10.1109/ICSME.2016.65
   Patanamon T, 2015, 22 INT C SOFTW AN EV
   Prykhodko S, 2016, MODERN PROBLEMS TEST, P6
   Rajapaksha D, 2022, IEEE T SOFTWARE ENG, V48, P2814, DOI 10.1109/TSE.2021.3070559
   Rajbahadur GK, 2017, IEEE WORK CONF MIN S, P135, DOI 10.1109/MSR.2017.4
   Rastogi A, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240504
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Ruangwan S, 2019, EMPIR SOFTW ENG, V24, P973, DOI 10.1007/s10664-018-9646-1
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Saidani I, 2020, INFORM SOFTWARE TECH, V128, DOI 10.1016/j.infsof.2020.106392
   Saini N, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P11, DOI 10.1109/ICSE-SEIP52600.2021.00010
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Savor T, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P21, DOI 10.1145/2889160.2889223
   Seo YS, 2013, EMPIR SOFTW ENG, V18, P659, DOI 10.1007/s10664-012-9207-y
   Sharma P, 2017, 2017 INTERNATIONAL CONFERENCE ON NEXT GENERATION COMPUTING AND INFORMATION SYSTEMS (ICNGCIS), P43, DOI 10.1109/ICNGCIS.2017.33
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Singh D, 2020, APPL SOFT COMPUT, V97, DOI 10.1016/j.asoc.2019.105524
   Soares DM, 2015, 30TH ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, VOLS I AND II, P1541, DOI 10.1145/2695664.2695856
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2018, The impact of automated parameter optimization for defect prediction models
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tawosi V, 2021, IEEE Transactions on Software Engineering
   Terrell J, 2017, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.111
   Thongtanunam P, 2021, IEEE T SOFTWARE ENG, V47, P2698, DOI 10.1109/TSE.2020.2964660
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Thongtanunam P, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P168, DOI 10.1109/MSR.2015.23
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Trendowicz A, 2008, IFIP CENTR E EUR C S, P232
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Tsymbal A, 2004, Computer Science Department, Trinity College Dublin
   Ribeiro MT, 2016, Arxiv, DOI [arXiv:1606.05386, 10.48550/arXiv.1606.05386]
   Uchôa A, 2020, PROC IEEE INT CONF S, P511, DOI 10.1109/ICSME46990.2020.00055
   Wang S, 2021, INFORM SOFTWARE TECH, V130, DOI 10.1016/j.infsof.2020.106408
   Wang S, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P46, DOI 10.1145/3345629.3345635
   Wei H, 2019, INFORM SCIENCES, V477, P399, DOI 10.1016/j.ins.2018.10.056
   Weifeng Zhang, 2020, Web Information Systems and Applications. 17th International Conference, WISA 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12432), P168, DOI 10.1007/978-3-030-60029-7_15
   Weisstein Eric W., 2004, Bonferroni correction
   Westfall PH, 2014, AM STAT, V68, P191, DOI 10.1080/00031305.2014.917055
   Whigham PA, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2738037
   Widmer G, 1996, MACH LEARN, V23, P69, DOI 10.1023/A:1018046501280
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Winters Titus, 2020, Software Engineering at Google
   Xia TP, 2018, Arxiv, DOI arXiv:1804.00626
   Xu Z, 2019, INFORM SOFTWARE TECH, V106, P182, DOI 10.1016/j.infsof.2018.10.004
   Yang X., 2021, Collaborative Computing: Networking, Applications and Worksharing, P420
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
   Zanetti MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1032, DOI 10.1109/ICSE.2013.6606653
NR 113
TC 2
Z9 2
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 82
DI 10.1007/s10664-023-10300-3
PG 56
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA G6AO8
UT WOS:000989964400001
DA 2024-07-18
ER

PT J
AU Iwaya, LH
   Babar, MA
   Rashid, A
   Wijayarathna, C
AF Iwaya, Leonardo Horn
   Babar, M. Ali
   Rashid, Awais
   Wijayarathna, Chamila
TI On the privacy of mental health apps An empirical investigation and its
   implications for app development
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Privacy; Security; Mobile health; Mental health apps; Privacy by design;
   Android; Empirical study
ID DATA-SECURITY; POLICIES
AB An increasing number of mental health services are now offered through mobile health (mHealth) systems, such as in mobile applications (apps). Although there is an unprecedented growth in the adoption of mental health services, partly due to the COVID-19 pandemic, concerns about data privacy risks due to security breaches are also increasing. Whilst some studies have analyzed mHealth apps from different angles, including security, there is relatively little evidence for data privacy issues that may exist in mHealth apps used for mental health services, whose recipients can be particularly vulnerable. This paper reports an empirical study aimed at systematically identifying and understanding data privacy incorporated in mental health apps. We analyzed 27 top-ranked mental health apps from Google Play Store. Our methodology enabled us to perform an in-depth privacy analysis of the apps, covering static and dynamic analysis, data sharing behaviour, server-side tests, privacy impact assessment requests, and privacy policy evaluation. Furthermore, we mapped the findings to the LINDDUN threat taxonomy, describing how threats manifest on the studied apps. The findings reveal important data privacy issues such as unnecessary permissions, insecure cryptography implementations, and leaks of personal data and credentials in logs and web requests. There is also a high risk of user profiling as the apps' development do not provide foolproof mechanisms against linkability, detectability and identifiability. Data sharing among 3rd-parties and advertisers in the current apps' ecosystem aggravates this situation. Based on the empirical findings of this study, we provide recommendations to be considered by different stakeholders of mHealth apps in general and apps developers in particular. We conclude that while developers ought to be more knowledgeable in considering and addressing privacy issues, users and health professionals can also play a role by demanding privacy-friendly apps.
C1 [Iwaya, Leonardo Horn; Babar, M. Ali; Wijayarathna, Chamila] Univ Adelaide, Ctr Res Engn Software Technol, Adelaide, SA 5005, Australia.
   [Iwaya, Leonardo Horn; Babar, M. Ali; Wijayarathna, Chamila] Cyber Secur Cooperat Res Ctr CSCRC, Joondalup, Australia.
   [Iwaya, Leonardo Horn] Karlstad Univ, Dept Math & Comp Sci, Privacy & Secur PriSec, Karlstad, Sweden.
   [Rashid, Awais] Univ Bristol, Dept Comp Sci, Bristol Cyber Secur Grp, Bristol, Avon, England.
   [Rashid, Awais] REPHRAIN Natl Res Ctr Privacy Harm Reduct & Adver, Bristol, Avon, England.
C3 University of Adelaide; Karlstad University; University of Bristol
RP Iwaya, LH (corresponding author), Univ Adelaide, Ctr Res Engn Software Technol, Adelaide, SA 5005, Australia.; Iwaya, LH (corresponding author), Cyber Secur Cooperat Res Ctr CSCRC, Joondalup, Australia.; Iwaya, LH (corresponding author), Karlstad Univ, Dept Math & Comp Sci, Privacy & Secur PriSec, Karlstad, Sweden.
EM leonardo.iwaya@kau.se; awais.rashid@bristol.ac.uk
RI Horn Iwaya, Leonardo/C-7818-2013
OI Horn Iwaya, Leonardo/0000-0001-9005-0543; Rashid,
   Awais/0000-0002-0109-1341
FU Cyber Security Cooperative Research Centre (CSCRC) Limited - Australian
   Governments Cooperative Research Centres Programme; European Commissions
   H2020 Programme via the CyberSec4Europe project [830929]; Swedish
   Foundation for Strategic Research (SSF) Secure and Private Connectivity
   in Smart Environments (SURPRISE) Project; Region Varmland via the
   DigitalWell Arena project [RV2018-678]; REPHRAIN, National Research
   Centre on Privacy, Harm Reduction and Adversarial Influence Online
   (EPSRC) [EP/V011189/1]
FX The work has been supported by the Cyber Security Cooperative Research
   Centre (CSCRC) Limited, whose activities are partially funded by the
   Australian Governments Cooperative Research Centres Programme. The work
   of L.H. Iwaya has also been partially supported by the European
   Commissions H2020 Programme via the CyberSec4Europe project (Grant:
   830929), the Swedish Foundation for Strategic Research (SSF) Secure and
   Private Connectivity in Smart Environments (SURPRISE) Project, and the
   Region Varmland via the DigitalWell Arena project (Grant: RV2018-678).
   Awais Rashid is supported by REPHRAIN, National Research Centre on
   Privacy, Harm Reduction and Adversarial Influence Online (EPSRC Grant:
   EP/V011189/1).
CR Adhikari R., 2014, SECURITY PRIVACY ISS
   Alepis E, 2017, LECT NOTES COMPUT SC, V10662, P53, DOI 10.1007/978-3-319-71501-8_4
   Aljedaani B, 2020, ASIA PAC SOFWR ENG, P208, DOI 10.1109/APSEC51365.2020.00029
   Aljedaani B, 2021, JMIR MHEALTH UHEALTH, V9, DOI 10.2196/15654
   Ament C, 2017, P 38 INT C INFORM SY
   [Anonymous], 2020, FINANCIAL IMPACT INT
   [Anonymous], 2016, Official Journal of the European Union, V119
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Aviram N, 2016, PROCEEDINGS OF THE 25TH USENIX SECURITY SYMPOSIUM, P689
   Bakker D, 2016, JMIR MENT HEALTH, V3, DOI 10.2196/mental.4984
   Bal G, 2014, P W3C WORKSHOP PRIVA, P1
   Blenner SR, 2016, JAMA-J AM MED ASSOC, V315, P1051, DOI 10.1001/jama.2015.19426
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brooks S, 2017, 8062 NISTIR
   Cavoukian Ann, 2009, Privacy by design: The 7 foundational principles
   Deng MN, 2011, REQUIR ENG, V16, P3, DOI 10.1007/s00766-010-0115-7
   Donker T, 2013, J MED INTERNET RES, V15, DOI 10.2196/jmir.2791
   Durumeric Z, 2014, PROCEEDINGS OF THE 2014 ACM INTERNET MEASUREMENT CONFERENCE (IMC'14), P475, DOI 10.1145/2663716.2663755
   Egele M., 2013, P 2013 ACM SIGSAC C, P73
   Enck W, 2014, ACM T COMPUT SYST, V32, DOI 10.1145/2619091
   EU Commission, 2017, GUID DAT PROT IMP AS
   FIRSTOrg, 2019, COMM VULN SCOR SYST
   Gardiner J, 2021, P 4 INT WORKSHOP SEC
   GDPREU, 2020, DAT PROT IMP ASS DPI
   Gurses Seda, 2011, COMPUT PRIV DATA PRO, V14, P25
   He Dongjing, 2014, AMIA Annu Symp Proc, V2014, P645
   Heilweil R, 2020, VOX
   Howard M., 2006, The security development lifecycle, V8
   Huang HY, 2017, LECT NOTES COMPUT SC, V10292, P110, DOI 10.1007/978-3-319-58460-7_8
   Huckvale K, 2019, JAMA NETW OPEN, V2, DOI 10.1001/jamanetworkopen.2019.2542
   Hussain M, 2018, COMPUT SECUR, V75, P191, DOI 10.1016/j.cose.2018.02.003
   Hutton L, 2018, JMIR MHEALTH UHEALTH, V6, DOI 10.2196/mhealth.9217
   ICO UK, 2019, GUID GEN DAT PROT RE
   Iwaya LH, 2019, JMIR MHEALTH UHEALTH, V7, DOI 10.2196/11642
   Kleftaras G, 2014, E HLTH TELECOMMUNICA
   Kotipalli SR, 2016, HACKING ANDROID
   Krüger S, 2017, IEEE INT CONF AUTOM, P931, DOI 10.1109/ASE.2017.8115707
   LaMalva G., 2020, 2020 IEEE MIT Undergraduate Research Technology Conference, P1, DOI DOI 10.1109/EIRCON51178.2020.9254035
   Lee J, 2019, THESIS RICE U
   Lippi M, 2019, ARTIF INTELL LAW, V27, P117, DOI 10.1007/s10506-019-09243-2
   Mantovani E., 2017, CODE CONDUCT PRIVACY, P81
   Marvel CL, 2004, PSYCHIAT CLIN N AM, V27, P19, DOI 10.1016/S0193-953X(03)00106-0
   Momen N, 2020, THESIS KARLSTADS U
   Muchagata J, 2019, HEALTHINF: PROCEEDINGS OF THE 12TH INTERNATIONAL JOINT CONFERENCE ON BIOMEDICAL ENGINEERING SYSTEMS AND TECHNOLOGIES - VOL 5: HEALTHINF, P68, DOI 10.5220/0007352200680077
   MWR InfoSecurity, 2015, DROZ US GUID
   NIST, 2022, LINDDUN PRIV THREAT
   O'Loughlin K, 2019, INTERNET INTERV, V15, P110, DOI 10.1016/j.invent.2018.12.001
   OAIC, 2020, GUID UND PRIV IMP AS
   Papageorgiou A, 2018, IEEE ACCESS, V6, P9390, DOI 10.1109/ACCESS.2018.2799522
   Parker L, 2019, INT J LAW PSYCHIAT, V64, P198, DOI 10.1016/j.ijlp.2019.04.002
   Pfitzmann A., 2010, A terminology for talking about privacy by data minimization: Anonymity, Unlinkability, Undetectability, Unobservability, Pseudonymity, and Identity Management
   Powell AC, 2018, JMIR MHEALTH UHEALTH, V6, DOI 10.2196/mhealth.9871
   Prentice JL, 2014, CAN PSYCHOL, V55, P282, DOI 10.1037/a0038113
   Price M, 2014, CLIN PSYCHOL PSYCHOT, V21, P427, DOI 10.1002/cpp.1855
   Ranganath VP, 2020, EMPIR SOFTW ENG, V25, P178, DOI 10.1007/s10664-019-09749-y
   Robillard JM, 2019, INTERNET INTERV, V17, DOI 10.1016/j.invent.2019.100243
   Rosenfeld L, 2017, AM J GERIAT PSYCHIAT, V25, P873, DOI 10.1016/j.jagp.2017.04.009
   Samhi J, 2021, PROC INT CONF SOFTW, P1398, DOI 10.1109/ICSE43902.2021.00126
   Sampat B.H., 2017, Journal of International Technology and Information Management, V26, P126, DOI DOI 10.58729/1941-6679.1353
   Shipp Laura, 2020, Proceedings on Privacy Enhancing Technologies, V2020, P491, DOI 10.2478/popets-2020-0083
   Solomos K, 2019, PROCEEDINGS OF THE 22ND INTERNATIONAL SYMPOSIUM ON RESEARCH IN ATTACKS, INTRUSIONS AND DEFENSES, P227
   Sunyaev A, 2015, J AM MED INFORM ASSN, V22, pE28, DOI 10.1136/amiajnl-2013-002605
   Timpson S., 2009, INT J MOBILE MARKETI, V4, P57
   Wagner A., 2019, P 27 EUR C INF SYST
   Wei FS, 2018, ANALYTICAL METHODS FOR FOOD SAFETY BY MASS SPECTROMETRY, VOL II VETERINARY DRUGS, P1, DOI [10.1016/B978-0-12-814165-6.00001-4, 10.1145/3183575]
   Wong MY, 2016, 23RD ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2016), DOI 10.14722/ndss.2016.23118
   Wuyts K, 2014, LINDDUN THREAT TREE
   Zaeem RN, 2021, ACM TRANS MANAG INF, V12, DOI 10.1145/3389685
   Zaeem RN, 2020, CIKM '20: PROCEEDINGS OF THE 29TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT, P3441, DOI 10.1145/3340531.3417469
   Zaeem RN, 2018, ACM T INTERNET TECHN, V18, DOI 10.1145/3127519
NR 70
TC 12
Z9 12
U1 5
U2 31
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2023
VL 28
IS 1
AR 2
DI 10.1007/s10664-022-10236-0
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6A0EO
UT WOS:000880336500004
PM 36407814
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU da Silva, DF
   Okada, LF
   Assunçao, WKG
   Colanzi, TE
AF da Silva, Diego Fernandes
   Okada, Luiz Fernando
   Assuncao, Wesley K. G.
   Colanzi, Thelma Elita
TI Intensifying the search-based optimization of product line architectures
   with crossover operators
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Multi-objective evolutionary algorithm; Software product line; Software
   architecture; Recombination operators
AB The Product Line Architecture (PLA) is a crucial artifact for the development of Software Product Lines. However, PLA is a complex artifact to be designed due to its large size and the multiple conflicting properties that need to be considered to ensure its quality, requiring a great effort for the architect. PLA designing has been formulated as an optimization problem aiming at improving some architectural properties in order to maximize both the feature modularization and the relational cohesion, and to minimize the class coupling. This kind of problem was successfully solved by multi-objective evolutionary algorithm. Nevertheless, most of existing approaches optimize PLA designs without applying the crossover operator, one of the fundamental genetic operators. To overcome these limitations, this paper aims to intensify the search-based PLA design optimization by presenting three crossover operators. These operators were empirically evaluated in quantitative and qualitative studies using three well-studied PLA designs. The experiments were conducted with eight experimental configurations of NSGA-II in comparison with a baseline that uses only mutation operators. Empirical results showed that there are significant differences among the use of only mutation and mutation with crossover. Also, we observed that the crossover operators contributed to generate solutions with better feature modularization. Finally, we could see that the proposed operators complement each other, since the experiment that combines at least two of the proposed operators achieved better results.
C1 [da Silva, Diego Fernandes; Okada, Luiz Fernando; Colanzi, Thelma Elita] State Univ Maringa UEM, Maringa, Parana, Brazil.
   [Assuncao, Wesley K. G.] DI Pontifical Catholic Univ Rio de Janeiro PUC Ri, Rio De Janeiro, Brazil.
   [Assuncao, Wesley K. G.] PPGComp Western Parana State Univ Unioeste, Cascavel, Brazil.
C3 Universidade Estadual de Maringa
RP da Silva, DF; Colanzi, TE (corresponding author), State Univ Maringa UEM, Maringa, Parana, Brazil.
EM dizzusmon@gmail.com; thelma@din.uem.br
RI Assuncao, Wesley Klewerton Guez/AAA-8331-2020
OI Assuncao, Wesley Klewerton Guez/0000-0002-7557-9091
FU CNPq [428994/2018-0, 408356/2018-9]; CAPES [448977/2019-01]; FAPERJ
   PDR-10 program [202073/2020]
FX The work is supported by CNPq Grants No. 428994/2018-0 and No.
   408356/2018-9, CAPES Grant No. 448977/2019-01, and FAPERJ PDR-10 program
   under Grant No. 202073/2020.
CR [Anonymous], 2005, THESIS U BRIT COLUMB
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Neto JC, 2019, IET SOFTW, V13, P587, DOI 10.1049/iet-sen.2018.5318
   Neto JC, 2018, PROC INT C TOOLS ART, P498, DOI 10.1109/ICTAI.2018.00083
   Colanzi TE, 2020, INFORM SOFTWARE TECH, V127, DOI 10.1016/j.infsof.2020.106372
   Colanzi TE, 2016, J SYST SOFTWARE, V121, P126, DOI 10.1016/j.jss.2016.02.026
   Colanzi TE, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P237, DOI 10.1145/2648511.2648537
   Contieri AC, 2011, LECT NOTES COMPUT SC, V6903, P130, DOI 10.1007/978-3-642-23798-0_13
   Czarnecki K, 2013, LECT NOTES COMPUT SC, V7793, P1, DOI 10.1007/978-3-642-37057-1_1
   da Silva DF, 2020, GECCO'20: PROCEEDINGS OF THE 2020 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1250, DOI 10.1145/3377930.3390215
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2015, SPRINGER HANDBOOK OF COMPUTATIONAL INTELLIGENCE, P995
   Donegan P M, 2007, SBCARS, P3
   Federle Edipo Luis, 2015, P 19 INT C SOFTWARE, P370
   Goldberg D. E., 1989, GENETIC ALGORITHMS S
   Gomaa H, 2011, SOFTWARE MODELING AND DESIGN: UML, USE CASES, PATTERNS, AND SOFTWARE ARCHITECTURES, P1, DOI 10.1017/CBO9780511779183
   Guizzo G, 2019, SOFTW SYST MODEL, V18, P1487, DOI 10.1007/s10270-017-0614-9
   Harman M., 2002, GEN EV COMP C GECCO, P1351
   Harman M, 2007, GECCO 2007: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1106
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kitchenham B., 2007, Guidelines for performing systematic literature reviews in software engineering
   Knowles JD, 2000, EVOL COMPUT, V8, P149, DOI 10.1162/106365600568167
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Li MQ, 2019, ACM COMPUT SURV, V52, DOI 10.1145/3300148
   Marques Freire Willian, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P818, DOI 10.1145/3422392.3422498
   Mishra P, 2019, ANN CARD ANAESTH, V22, P67, DOI 10.4103/aca.ACA_157_18
   Nunes C, 2009, J UNIVERS COMPUT SCI, V15, P2254
   Raiha Outi, 2009, Proceedings of the 2009 World Congress on Nature & Biologically Inspired Computing (NaBIC 2009), P619, DOI 10.1109/NABIC.2009.5393431
   Raiha Outi, 2010, Proceedings 10th International Conference on Intelligent Systems Design and Applications (ISDA 2010), P266, DOI 10.1109/ISDA.2010.5687255
   SEI, 2009, ARC GAM MAK PED PROD
   Simons CL, 2010, IEEE T SOFTWARE ENG, V36, P798, DOI 10.1109/TSE.2010.34
   Surhone LM, 2010, SHAPIRO WILK TEST
   van der Linden F. J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Verdecia Y. D., 2017, 20 IB AM C SOFTW ENG
   Wohlin C., 2000, Experimentation in Software Engineering: An Introduction, V1, DOI DOI 10.1007/978-1-4615-4625-2
   Wohlin C, 2014, P 18 INT C EVALUATIO, DOI DOI 10.1145/2601248.2601268
   Zeleny M., 1973, Multiple criteria decision making
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
   Zitzler E, 1998, LECT NOTES COMPUT SC, V1498, P292, DOI 10.1007/BFb0056872
   Zitzler E, 2001, EVOLUTIONARY METHODS, P95, DOI DOI 10.1007/978-3-540-30217-9_84
NR 41
TC 1
Z9 1
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 166
DI 10.1007/s10664-022-10198-3
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V4SY
UT WOS:000859469500004
PM 36159892
OA Green Published, Bronze
DA 2024-07-18
ER

PT J
AU Abdi, M
   Rocha, H
   Demeyer, S
   Bergel, A
AF Abdi, Mehrdad
   Rocha, Henrique
   Demeyer, Serge
   Bergel, Alexandre
TI Small-Amp: Test amplification in a dynamically typed language
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Test amplification; Pharo smalltalk
AB Some test amplification tools extend a manually created test suite with additional test cases to increase the code coverage. The technique is effective, in the sense that it suggests strong and understandable test cases, generally adopted by software engineers. Unfortunately, the current state-of-the-art for test amplification heavily relies on program analysis techniques which benefit a lot from explicit type declarations present in statically typed languages. In dynamically typed languages, such type declarations are not available and as a consequence test amplification has yet to find its way to programming languages like Smalltalk, Python, Ruby and Javascript. We propose to exploit profiling information -readily obtainable by executing the associated test suite- to infer the necessary type information creating special test inputs with corresponding assertions. We evaluated this approach on 52 selected test classes from 13 mature projects in the Pharo ecosystem containing approximately 400 test methods. We show the improvement in killing new mutants and mutation coverage at least in 28 out of 52 test classes (approximate to 53%). Moreover, these generated tests are understandable by humans: 8 out of 11 pull-requests submitted were merged into the main code base (approximate to 72%). These results are comparable to the state-of-the-art, hence we conclude that test amplification is feasible for dynamically typed languages.
C1 [Abdi, Mehrdad; Demeyer, Serge] Univ Antwerp, Flanders Make Vzw, Antwerp, Belgium.
   [Rocha, Henrique] Loyola Univ Maryland, Baltimore, MD USA.
   [Bergel, Alexandre] Univ Chile, Relat AI USA, Santiago, Chile.
   [Bergel, Alexandre] Univ Chile, Dept Comp Sci, Santiago, Chile.
C3 University of Antwerp; Loyola University Maryland; Universidad de Chile;
   Universidad de Chile
RP Abdi, M (corresponding author), Univ Antwerp, Flanders Make Vzw, Antwerp, Belgium.
EM mehrdad.abdi@uantwerpen.be; henrique.rocha@gmail.com;
   serge.demeyer@uantwerpen.be; abergel@dcc.uchile.cl
RI Demeyer, Serge/JMQ-7341-2023
OI Demeyer, Serge/0000-0002-4463-2945; Rocha, Henrique/0000-0002-9154-0277;
   Abdi, Mehrdad/0000-0001-6984-3098
FU Fonds de la Recherche Scientifique-FNRS; Fonds Wetenschappelijk
   Onderzoek - Vlaanderen (FWO) under EOS Project [30446992 SECO-ASSIST];
   Flanders Make vzw, the strategic research centre for the manufacturing
   industry; Fondecyt Regular [1200067]; Lam Research
FX This work is supported by (a) the Fonds de la Recherche
   Scientifique-FNRS and the Fonds Wetenschappelijk Onderzoek - Vlaanderen
   (FWO) under EOS Project 30446992 SECO-ASSIST (b) Flanders Make vzw, the
   strategic research centre for the manufacturing industry. Bergel is very
   grateful to Lam Research and Fondecyt Regular 1200067 for partially
   sponsoring this work. This work originated during a sabbatical leave by
   Serge Demeyer in the RMOD lab. Stephane Ducasse, Marcus Denker and
   Julien Delplanque helped a lot with the intricacies of Pharo/Smalltalk;
   Pavel Krivanek helped with MuTalk. Finally, we thank the developers
   reviewing and discussing our pull requests, they really helped us in
   improving Small-Amp.
CR Abdi M, 2019, P 18 BELGIUM NETHERL
   Abdi Mehrdad, 2019, P IWST 2019 INT WORK
   Agibalov A, 2015, TESLARATI
   [Anonymous], 2013, DEEP PHARO
   [Anonymous], 2012, International Symposium on Software Testing and Analysis, ISSTA 2012, Minneapolis, MN, USA, July 15-20, 2012, DOI DOI 10.1145/2338965.2336790
   [Anonymous], 2011, Proceedings of the 2011 International Symposium on Software Testing and Analysis, ISSTA'11
   Athanasiou D, 2014, IEEE T SOFTWARE ENG, V40, P1100, DOI 10.1109/TSE.2014.2342227
   Baudry B, 2005, SOFTW TEST VERIF REL, V15, P73, DOI 10.1002/stvr.313
   Baudry B, 2015, ARXIV 150305807
   Beller M, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2021), P268, DOI 10.1109/ICSE-SEIP52600.2021.00036
   Black Andrew P, 2010, Pharo by example
   Brandt C, 2021, ARXIV 210812249
   Chauvel F, 2019, PROC INT SYMP SOFTW, P283, DOI 10.1109/ISSRE.2019.00036
   Costiou S., 2020, Art Sci. Eng. Program., V4
   Danglot B., 2019, EMPIRICAL SOFTWARE E
   Danglot B, 2019, J SYST SOFTWARE, V157, DOI 10.1016/j.jss.2019.110398
   Daniel B, 2009, IEEE INT CONF AUTOM, P433, DOI 10.1109/ASE.2009.17
   Delplanque J, 2019, PROC INT CONF SOFTW, P500, DOI 10.1109/ICSE.2019.00062
   Denker M, 2007, J OBJECT TECHNOL, V6, P275
   Ducasse S, 1999, J OBJECT-ORIENT PROG, V12, P39
   Ducasse S., 2019, PHARO STYLE
   Fard A. M., 2014, Proceedings of the 29th ACM/IEEE International Conference on Automated Software Engineering, ASE'14, P67, DOI 10.1145/2642937.2642991
   Fischer S, 2020, VST '20: PROCEEDINGS OF THE 2020 IEEE 3RD INTERNATIONAL WORKSHOP ON VALIDATION, ANALYSIS, AND EVOLUTION OF SOFTWARE TESTS, P8, DOI [10.1109/VST50071.2020.9051634, 10.1109/vst50071.2020.9051634]
   Fraser G., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P121, DOI 10.1109/ICST.2012.92
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Goldberg A., 1983, Smalltalk 80: The Language and Its Implementation
   Grano G, 2020, PROC IEEE INT CONF S, P336, DOI 10.1109/ICSME46990.2020.00040
   Li N, 2017, IEEE T SOFTWARE ENG, V43, P372, DOI 10.1109/TSE.2016.2597136
   Lu ZX, 2020, VST '20: PROCEEDINGS OF THE 2020 IEEE 3RD INTERNATIONAL WORKSHOP ON VALIDATION, ANALYSIS, AND EVOLUTION OF SOFTWARE TESTS, P1, DOI [10.1109/VST50071.2020.9051637, 10.1109/vst50071.2020.9051637]
   Lukasczyk Stephan, 2020, Search-Based Software Engineering. 12th International Symposium, SSBSE 2020. Proceedings. Lecture Notes in Computer Science (LNCS 12420), P9, DOI 10.1007/978-3-030-59762-7_2
   Mairhofer S, 2011, GECCO-2011: PROCEEDINGS OF THE 13TH ANNUAL GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1859
   Mirshokraie Shabnam, 2015, 2015 IEEE 8th International Conference on Software Testing, Verification and Validation (ICST), DOI 10.1109/ICST.2015.7102595
   Nijkamp N, 2021, 2021 IEEE 21 INT WOR
   Oosterbroek W, 2021, 2021 IEEE 21 INT WOR
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Papadakis M, 2019, ADV COMPUT, V112, P275, DOI 10.1016/bs.adcom.2018.03.015
   Patrick M, 2017, INFORM SOFTWARE TECH, V81, P36, DOI 10.1016/j.infsof.2016.04.009
   Peck MM, 2015, SCI COMPUT PROGRAM, V98, P339, DOI 10.1016/j.scico.2014.05.015
   Petke J, 2018, IEEE T EVOLUT COMPUT, V22, P415, DOI 10.1109/TEVC.2017.2693219
   Petrovic G, 2022, IEEE T SOFTWARE ENG, V48, P3900, DOI 10.1109/TSE.2021.3107634
   Petrovic G, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P163, DOI 10.1145/3183519.3183521
   Pezzè M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P11, DOI 10.1109/ICST.2013.37
   Pluquet F, 2009, ACM SIGPLAN NOTICES, V44, P69, DOI 10.1145/1837513.1640145
   Rojas JM, 2016, SOFTW TEST VERIF REL, V26, P366, DOI 10.1002/stvr.1601
   Salcianu A, 2005, LECT NOTES COMPUT SC, V3385, P199
   Thummalapenta S, 2011, LECT NOTES COMPUT SC, V6603, P294, DOI 10.1007/978-3-642-19811-3_21
   Tillmann N, 2006, IEEE SOFTWARE, V23, P38, DOI 10.1109/MS.2006.117
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Vera-Perez O L, 2019, ARXIV 190904770
   Vera-Pérez OL, 2018, IEEE INT CONF AUTOM, P908, DOI 10.1145/3238147.3240474
   Wibowo JTP, 2015, 2015 INTERNATIONAL CONFERENCE ON DATA AND SOFTWARE ENGINEERING (ICODSE), P241, DOI 10.1109/ICODSE.2015.7437005
   Wilkinson H, 2009, MUTATION TESTING
   Wilkinson H, 2019, PROGRAMMING 2019: PROCEEDINGS OF THE CONFERENCE COMPANION OF THE 3RD INTERNATIONAL CONFERENCE ON ART, SCIENCE, AND ENGINEERING OF PROGRAMMING, DOI 10.1145/3328433.3328443
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Xie T, 2006, LECT NOTES COMPUT SC, V4067, P380
   Xu Z., 2010, PROC GECCO, P1365
   Xu ZH, 2009, ASIA PAC SOFWR ENG, P406, DOI 10.1109/APSEC.2009.29
   Xuan JF, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P910, DOI 10.1145/2786805.2803206
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P171, DOI 10.1002/stvr.435
   Yoshida H., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis. ISSTA 2016, P106, DOI DOI 10.1145/2931037.2931055
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
NR 63
TC 3
Z9 3
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 128
DI 10.1007/s10664-022-10169-8
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2T3AL
UT WOS:000822348600001
OA hybrid
DA 2024-07-18
ER

PT J
AU Feitelson, DG
AF Feitelson, Dror G.
TI Considerations and Pitfalls for Reducing Threats to the Validity of
   Controlled Experiments on Code Comprehension
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Controlled experiment; Code comprehension; Experimental methodology;
   Threats to validity
ID PROGRAM UNDERSTANDING BEHAVIOR; SOFTWARE DEVELOPERS; DESIGN RECOVERY;
   CLOSED-SOURCE; MAINTENANCE; SKILL; ANTIPATTERNS; VALIDATION; EFFICIENCY;
   KNOWLEDGE
AB Understanding program code is a complicated endeavor. As a result, studying code comprehension is also hard. The prevailing approach for such studies is to use controlled experiments, where the difference between treatments sheds light on factors which affect comprehension. But it is hard to conduct controlled experiments with human developers, and we also need to find a way to operationalize what "comprehension" actually means. In addition, myriad different factors can influence the outcome, and seemingly small nuances may be detrimental to the study's validity. In order to promote the development and use of sound experimental methodology, we discuss both considerations which need to be applied and potential problems that might occur, with regard to the experimental subjects, the code they work on, the tasks they are asked to perform, and the metrics for their performance. A common thread is that decisions that were taken in an effort to avoid one threat to validity may pose a larger threat than the one they removed.
C1 [Feitelson, Dror G.] Hebrew Univ Jerusalem, Rachel & Selim Benin Sch Comp Sci & Engn, IL-91904 Jerusalem, Israel.
C3 Hebrew University of Jerusalem
RP Feitelson, DG (corresponding author), Hebrew Univ Jerusalem, Rachel & Selim Benin Sch Comp Sci & Engn, IL-91904 Jerusalem, Israel.
EM feit@cs.huji.ac.il
OI Feitelson, Dror/0000-0002-2733-7709
FU Berthold Badler chair in Computer Science; ISRAEL SCIENCE FOUNDATION
   [832/18]
FX Dror Feitelson holds the Berthold Badler chair in Computer Science.;
   This research was supported by the ISRAEL SCIENCE FOUNDATION (grant no.
   832/18).
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   Adams WK, 2011, INT J SCI EDUC, V33, P1289, DOI 10.1080/09500693.2010.512369
   Ajami S, 2019, EMPIR SOFTW ENG, V24, P287, DOI 10.1007/s10664-018-9628-3
   [Anonymous], 1979, Fed. Regist
   [Anonymous], 2012, 20 IEEE INT C PROGR
   [Anonymous], 2000, The Cathedral and the Bazaar
   [Anonymous], 2008, P 4 INT WORKSHOP END, DOI DOI 10.1145/1370847.1370860
   [Anonymous], 2014, 22 INT C PROGR COMPR, DOI DOI 10.1145/2597008.2597140
   Arnaoudova V, 2016, EMPIR SOFTW ENG, V21, P104, DOI 10.1007/s10664-014-9350-8
   Avidan E, 2017, INT C PROGRAM COMPRE, P55, DOI 10.1109/ICPC.2017.27
   Basili VR, 2007, COMMUN ACM, V50, P33, DOI 10.1145/1297797.1297819
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Bauer J, 2019, INT C PROGRAM COMPRE, P154, DOI 10.1109/ICPC.2019.00033
   Bednarik R., 2006, Proceedings. ETRA 2006. Symposium on Eye Tracking Research and Applications, P125, DOI 10.1145/1117309.1117356
   Bednarik R., 2005, 17th Annual Psychology of Programming Interest Group Workshop, P49
   Bednarik R, 2020, SCI COMPUT PROGRAM, V198, DOI 10.1016/j.scico.2020.102520
   Beniamini G, 2017, INT C PROGRAM COMPRE, P45, DOI 10.1109/ICPC.2017.18
   Bergersen Gunnar R., 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P101, DOI 10.1049/ic.2012.0013
   Bergersen GR, 2014, IEEE T SOFTWARE ENG, V40, P1163, DOI 10.1109/TSE.2014.2348997
   Bergersen GR, 2011, INT SYMP EMP SOFTWAR, P305, DOI 10.1109/ESEM.2011.39
   Bergersen GR, 2011, J INDIVID DIFFER, V32, P201, DOI 10.1027/1614-0001/a000052
   BIGGERSTAFF TJ, 1989, COMPUTER, V22, P36, DOI 10.1109/2.30731
   BROOKS FP, 1987, COMPUTER, V20, P10, DOI 10.1109/MC.1987.1663532
   BROOKS R, 1983, INT J MAN MACH STUD, V18, P543, DOI 10.1016/S0020-7373(83)80031-5
   BROOKS RE, 1980, COMMUN ACM, V23, P207, DOI 10.1145/358841.358847
   Buse R.P., 2008, Proceedings of the 2008 International Symposium on Software Testing and Analysis, P121
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Busjahn T, 2015, INT C PROGRAM COMPRE, P255, DOI 10.1109/ICPC.2015.36
   Campbell J.P., 1993, PERSONNEL SELECTION, P35
   Carver J, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P72, DOI 10.1109/ISESE.2003.1237966
   Carver JC, 2010, EMPIR SOFTW ENG, V15, P35, DOI 10.1007/s10664-009-9109-9
   Cates R, 2021, INT C PROGRAM COMPRE, P118, DOI 10.1109/ICPC52881.2021.00020
   Ceccato M, 2014, EMPIR SOFTW ENG, V19, P1040, DOI 10.1007/s10664-013-9248-x
   Cherubini M, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P557
   CHIKOFSKY EJ, 1990, IEEE SOFTWARE, V7, P13, DOI 10.1109/52.43044
   COOK C, 1984, INFORM PROCESS MANAG, V20, P199, DOI 10.1016/0306-4573(84)90050-5
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   Couceiro R, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2019), P37, DOI 10.1109/ICSE-NIER.2019.00018
   Crosby Martha E, 2002, 14 WORKSH PSYCH PROG, P58
   CURTIS B, 1981, P IEEE, V69, P846, DOI 10.1109/PROC.1981.12088
   Curtis B., 2014, 2 INT WORKSHOP CONDU, P1, DOI [10.1145/2593690.2593699, DOI 10.1145/2593690.2593699]
   Denaro G, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1109/ICSE.2002.1007972
   DIJKSTRA EW, 1968, COMMUN ACM, V11, P147, DOI 10.1145/362929.362947
   Dreyfus H. L., 1980, A five-stage model of mental activities involved in directed skill acquisition
   DuBay W, 2004, The principles of readability
   Dunsmore A, 2000, J SYST SOFTWARE, V52, P121, DOI 10.1016/S0164-1212(99)00138-7
   Dunsmore A, 2000, TECH REP EFOCS 35 20
   EGETH H, 1975, AM J PSYCHOL, V88, P339, DOI 10.2307/1421603
   Ericsson KA, 2007, HARVARD BUS REV, V85, P114
   ERICSSON KA, 1993, PSYCHOL REV, V100, P363, DOI 10.1037/0033-295X.100.3.363
   Fakhoury S, 2020, EMPIR SOFTW ENG, V25, P2140, DOI 10.1007/s10664-019-09751-4
   Falessi D, 2018, EMPIR SOFTW ENG, V23, P452, DOI 10.1007/s10664-017-9523-3
   Feigenspan J, 2011, INT SYMP EMP SOFTWAR, P127, DOI 10.1109/ESEM.2011.21
   Feitelson DG., 2015, ARXIV 151208409 CSSE
   Feitelson DG, 2022, IEEE T SOFTWARE ENG, V48, P37, DOI 10.1109/TSE.2020.2976920
   Feitelson DG, 2021, INT C PROGRAM COMPRE, P106, DOI 10.1109/ICPC52881.2021.00019
   Floyd B, 2017, PROC INT CONF SOFTW, P175, DOI 10.1109/ICSE.2017.24
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fritz T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P402, DOI 10.1145/2568225.2568266
   Geffen Y, 2016, 24 INT C PROGR COMPR, P1, DOI [10.1109/ICPC.2016.7503711, DOI 10.1109/ICPC.2016.7503711]
   Gil Y, 2017, EMPIR SOFTW ENG, V22, P2585, DOI 10.1007/s10664-017-9513-5
   Gopstein D, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P129, DOI 10.1145/3106237.3106264
   Graziotin D, 2018, J SYST SOFTWARE, V140, P32, DOI 10.1016/j.jss.2018.02.041
   Graziotin D, 2015, PEERJ COMPUT SCI, DOI 10.7717/peerj-cs.18
   Graziotin D, 2014, IEEE SOFTWARE, V31, P24, DOI 10.1109/MS.2014.94
   Hannay JE, 2011, MAKING SOFTWARE, P79
   Hannebauer C, 2018, EMPIR SOFTW ENG, V23, P2795, DOI 10.1007/s10664-017-9579-0
   Heathcote A, 2000, PSYCHON B REV, V7, P185, DOI 10.3758/BF03212979
   Hofmeister JC, 2019, EMPIR SOFTW ENG, V24, P417, DOI 10.1007/s10664-018-9621-x
   Hollmann N, 2017, 2017 IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT 2017), P74, DOI 10.1109/VISSOFT.2017.27
   Ivanova AA, 2020, ELIFE, V9, DOI 10.7554/eLife.58906
   Jansen AR, 2003, BEHAV RES METH INS C, V35, P57, DOI 10.3758/BF03195497
   Jbara A, 2017, EMPIR SOFTW ENG, V22, P1440, DOI 10.1007/s10664-016-9477-x
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Juristo N., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P330, DOI 10.1109/ICST.2012.113
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kaczmarczyk LC, 2010, SIGCSE 10: PROCEEDINGS OF THE 41ST ACM TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P107
   Ko AJ, 2015, EMPIR SOFTW ENG, V20, P110, DOI 10.1007/s10664-013-9279-3
   KRUCHTEN PB, 1995, IEEE SOFTWARE, V12, P42, DOI 10.1109/52.469759
   Krueger R, 2020, PROC INT CONF SOFTW, P678, DOI 10.1145/3377811.3380348
   Lawrie D, 2006, INT C PROGRAM COMPRE, P3, DOI 10.1109/ICPC.2006.51
   Levy O, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09938-8
   LIENTZ BP, 1978, COMMUN ACM, V21, P466, DOI 10.1145/359511.359522
   LITTMAN DC, 1987, J SYST SOFTWARE, V7, P341, DOI 10.1016/0164-1212(87)90033-1
   Ma LX, 2007, SIGCSE 2007: PROCEEDINGS OF THE THIRTY-EIGHTH SIGCSE TECHNICAL SYMPOSIUM ON COMPUTER SCIENCE EDUCATION, P499, DOI 10.1145/1227504.1227481
   Madison S., 2002, Journal of Research on Technology in Education, V34, P217
   Martin R. C., 2008, Clean Code: A Handbook of Agile Software Craftsmanship
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   MCKEITHEN KB, 1981, COGNITIVE PSYCHOL, V13, P307, DOI 10.1016/0010-0285(81)90012-8
   McMeekin DA, 2009, IEEE AUS SOFT ENGR, P200, DOI 10.1109/ASWEC.2009.13
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   MIARA RJ, 1983, COMMUN ACM, V26, P861, DOI 10.1145/182.358437
   Mori-Mestanza D., 2022, 30 INT C PROGRAM COM, DOI DOI 10.1145/3524610.3529159
   Nagappan M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P404, DOI 10.1145/2786805.2786834
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Newell A., 1981, COGNITIVE SKILLS THE, P1, DOI DOI 10.4324/9780203728178
   Nyström M, 2013, BEHAV RES METHODS, V45, P272, DOI 10.3758/s13428-012-0247-4
   Obaidellah U, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3145904
   Oliveira D, 2020, PROC IEEE INT CONF S, P348, DOI 10.1109/ICSME46990.2020.00041
   OMAN PW, 1990, COMMUN ACM, V33, P506, DOI 10.1145/78607.78611
   Orso A, 2001, PROG COMPREHEN, P39, DOI 10.1109/WPC.2001.921712
   PARNAS DL, 1985, IEEE T SOFTWARE ENG, V11, P259, DOI 10.1109/TSE.1985.232209
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Paulson JW, 2004, IEEE T SOFTWARE ENG, V30, P246, DOI 10.1109/TSE.2004.1274044
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   PENNINGTON N, 1987, COGNITIVE PSYCHOL, V19, P295, DOI 10.1016/0010-0285(87)90007-7
   Politowski C, 2020, INFORM SOFTWARE TECH, V122, DOI 10.1016/j.infsof.2020.106278
   Prechelt L, 1999, COMMUN ACM, V42, P109, DOI 10.1145/317665.317683
   Purchase HC, 2002, VISSOFT 2002: FIRST INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P13, DOI 10.1109/VISSOF.2002.1019790
   Raghunathan S, 2005, IEEE T SYST MAN CY A, V35, P903, DOI 10.1109/TSMCA.2005.853493
   Rajlich V, 1997, PROG COMPREHEN, P160, DOI 10.1109/WPC.1997.601284
   Rajlich V, 2002, PROG COMPREHEN, P271, DOI 10.1109/WPC.2002.1021348
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   SACKMAN H, 1968, COMMUN ACM, V11, P3, DOI 10.1145/362851.362858
   Salviulo F., 2014, P INT C EV ASS SOFTW, P1, DOI [10.1145/2601248.2601251, DOI 10.1145/2601248.2601251]
   Scalabrino S, 2021, IEEE T SOFTWARE ENG, V47, P595, DOI 10.1109/TSE.2019.2901468
   Scalabrino S, 2016, 2016 IEEE 24TH INTERNATIONAL CONFERENCE ON PROGRAM COMPREHENSION (ICPC)
   Schankin A, 2018, INT C PROGRAM COMPRE, P31, DOI 10.1145/3196321.3196332
   Schenk K. D., 1998, Journal of Management Information Systems, V15, P9
   Shaffer TR, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P954, DOI 10.1145/2786805.2803188
   Shaft T. M., 1998, Journal of Management Information Systems, V15, P51
   Sharafi Z, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3434643
   Sharafi Z, 2020, EMPIR SOFTW ENG, V25, P3128, DOI 10.1007/s10664-020-09829-4
   Sharafi Z, 2015, INFORM SOFTWARE TECH, V67, P79, DOI 10.1016/j.infsof.2015.06.008
   Sharif Bonita, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P196, DOI 10.1109/ICPC.2010.41
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   SHNEIDERMAN B, 1977, INT J MAN MACH STUD, V9, P465, DOI 10.1016/S0020-7373(77)80014-X
   SHNEIDERMAN B, 1979, INT J COMPUT INF SCI, V8, P219, DOI 10.1007/BF00977789
   Shull F, 2008, GUIDE ADV EMPIRICAL
   Siegmund J., 2013, GI-Edition-Lecture Notes in Informatics (LNI), VP-213, P239
   Siegmund J, 2021, ACM T SOFTW ENG METH, V30, DOI 10.1145/3406544
   Siegmund J, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P140, DOI 10.1145/3106237.3106268
   Siegmund J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P378, DOI 10.1145/2568225.2568252
   Siegmund J, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P13, DOI 10.1109/SANER.2016.35
   Siegmund J, 2015, EMPIR SOFTW ENG, V20, P1159, DOI 10.1007/s10664-014-9318-8
   Siegmund J, 2014, EMPIR SOFTW ENG, V19, P1299, DOI 10.1007/s10664-013-9286-4
   SIMON HA, 1973, AM SCI, V61, P394
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Sjoberg DIK, 2003, LECT NOTES COMPUT SC, V2765, P24
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Smith M., 1992, ACCOUNT AUDIT ACCOUN, V5, P84, DOI DOI 10.1108/09513579210019549
   Sochat VV, 2016, FRONT PSYCHOL, V7, DOI 10.3389/fpsyg.2016.00610
   SOLOWAY E, 1984, IEEE T SOFTWARE ENG, V10, P595, DOI 10.1109/TSE.1984.5010283
   Sonnentag S, 1998, J APPL PSYCHOL, V83, P703, DOI 10.1037/0021-9010.83.5.703
   Sonnentag S, 2006, CAMBRIDGE HANDBOOK OF EXPERTISE AND EXPERT PERFORMANCE, P373
   Spolsky J., 2005, PERILS JAVASCHOOLS
   Stefik A, 2013, ACM T COMPUT EDUC, V13, DOI 10.1145/2534973
   Storey MA, 2005, PROG COMPREHEN, P181, DOI 10.1109/WPC.2005.38
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   von Mayrhauser A, 1998, PROG COMPREHEN, P164, DOI 10.1109/WPC.1998.693345
   vonMayrhauser A, 1997, J SOFTW MAINT-RES PR, V9, P299, DOI 10.1002/(SICI)1096-908X(199709/10)9:5<299::AID-SMR157>3.0.CO;2-S
   VONMAYRHAUSER A, 1995, COMPUTER, V28, P44, DOI 10.1109/2.402076
   vonMayrhauser A, 1996, FOURTH WORKSHOP ON PROGRAM COMPREHENSION, PROCEEDINGS, P68, DOI 10.1109/WPC.1996.501122
   WEISER M, 1983, INT J MAN MACH STUD, V19, P391, DOI 10.1016/S0020-7373(83)80061-3
   Weissman L., 1974, SIGPLAN Notices, V9, P25, DOI 10.1145/953233.953237
   Wilson LA, 2019, ARXIV 190405842 CSSE
   Wohlin C., 2012, Experimentation in Software Engineering
NR 159
TC 5
Z9 6
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 123
DI 10.1007/s10664-022-10160-3
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 2H9PO
UT WOS:000814619000001
DA 2024-07-18
ER

PT J
AU Kondo, M
   Kashiwa, Y
   Kamei, Y
   Mizuno, O
AF Kondo, Masanari
   Kashiwa, Yutaro
   Kamei, Yasutaka
   Mizuno, Osamu
TI An empirical study of issue-link algorithms: which issue-link algorithms
   should we use?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Issue-link algorithms; SZZ; Just-in-time defect prediction; Issue
   reports; Commits
ID DEFECT PREDICTION; SOFTWARE CHANGES; VERSION CONTROL; RECOVERY;
   VALIDATION; METRICS
AB The accuracy of the SZZ algorithm is pivotal for just-in-time defect prediction because most prior studies have used the SZZ algorithm to detect defect-inducing commits to construct and evaluate their defect prediction models. The SZZ algorithm has two phases to detect defect-inducing commits: (1) linking issue reports in an issue-tracking system to possible defect-fixing commits in a version control system by using an issue-link algorithm (ILA); and (2) tracing the modifications of defect-fixing commits back to possible defect-inducing commits. Researchers and practitioners can address the second phase by using existing solutions such as a tool called cregit. In contrast, although various ILAs have been proposed for the first phase, no large-scale studies exist in which such ILAs are evaluated under the same experimental conditions. Hence, we still have no conclusions regarding the best-performing ILA for the first phase. In this paper, we compare 10 ILAs collected from our systematic literature study with regards to the accuracy of detecting defect-fixing commits. In addition, we compare the defect prediction performance of ILAs and their combinations that can detect defect-fixing commits accurately. We conducted experiments on five open-source software projects. We found that all ILAs and their combinations prevented the defect prediction model from being affected by missing defect-fixing commits. In particular, the combination of a natural language text similarity approach, Phantom heuristics, a random forest approach, and a support vector machine approach is the best way to statistically significantly reduced the absolute differences from the ground-truth defect prediction performance. We summarized the guidelines to use ILAs as our recommendations.
C1 [Kondo, Masanari; Kashiwa, Yutaro; Kamei, Yasutaka] Kyushu Univ, Principles Software Engn & Programming Languages, Fukuoka, Japan.
   [Mizuno, Osamu] Kyoto Inst Technol, Software Engn Lab SEL, Kyoto, Japan.
C3 Kyushu University; Kyoto Institute of Technology
RP Kondo, M (corresponding author), Kyushu Univ, Principles Software Engn & Programming Languages, Fukuoka, Japan.
EM kondo@ait.kyushu-u.ac.jp; kashiwa@ait.kyushu-u.ac.jp;
   kamei@ait.kyushu-u.ac.jp; o-mizuno@kit.ac.jp
FU JSPS KAKENHI Japan [JP19J23477, JP18H03222]; JSPS International Joint
   Research Program; SNSF (Project "SENSOR")
FX This work has been supported by JSPS KAKENHI Japan (Grant Numbers:
   JP19J23477 and JP18H03222) and JSPS International Joint Research Program
   with SNSF (Project "SENSOR"). We would like to thank Editage
   (www.editage.com) for English language editing.
CR Agrawal A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1050, DOI 10.1145/3180155.3180197
   [Anonymous], **DATA OBJECT**, DOI 10.5281/zenodo.5712318
   [Anonymous], **DATA OBJECT**, DOI 10.5281/zenodo.5612161
   [Anonymous], 2016, Official Journal of the European Union, V119
   [Anonymous], **DATA OBJECT**, DOI 10.5281/zenodo.5573591
   Apache Software Foundation, 2008, ZOOKEEPER
   Apache Software Foundation, 2009, AP AVR TM REL
   Apache Software Foundation, 2013, KNOX
   Apache Software Foundation, 2014, AP FLINK
   Apache Software Foundation, 2009, CHUKW
   Apache Software Foundation, 2009, AVR
   Apache Software Foundation, 2020, AP KAFK DOC
   Ayari K, 2007, P 2007 C CTR ADV STU, P215
   Bachmann A., 2009, DATA RETRIEVAL PROCE
   Bachmann A, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P119
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Benni KE, 2018, IEEE T SOFTWARE ENG, V44, P534, DOI 10.1109/TSE.2017.2731766
   Bergstra J, 2012, J MACH LEARN RES, V13, P281
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bird C, 2010, SIGSOFT FSE, P369
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bissyandé TF, 2013, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2013.19
   Boughorbel S, 2017, PLOS ONE, V12, DOI 10.1371/journal.pone.0177678
   Neto EC, 2019, INT SYMP EMP SOFTWAR, P94
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Cohen J., 1988, STAT POWER ANAL BEHA
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Elkan C., 2008, P ACM SIGKDD, P213, DOI 10.1145/1401890.1401920
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   Fischer M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P90, DOI 10.1109/WCRE.2003.1287240
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fu W, 2016, ARXIV 160902613
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Germans DM, 2019, EMPIR SOFTW ENG, V24, P2725, DOI 10.1007/s10664-019-09704-x
   Git community, 2020, INC SOFTW FREED CONS
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Herbold S, 2021, Arxiv, DOI arXiv:1911.08938
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Nguyen HA, 2013, PROC INT SYMP SOFTW, P138, DOI 10.1109/ISSRE.2013.6698913
   Jung Yungbum., 2009, Proceedings of the ACM First International Workshop on Data-intensive Software Management and Mining, DSMM'09, P13, DOI DOI 10.1145/1651309.1651313
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P33, DOI 10.1109/SANER.2016.56
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kondo M, 2020, EMPIR SOFTW ENG, V25, P890, DOI 10.1007/s10664-019-09736-3
   Kondo M, 2019, EMPIR SOFTW ENG, V24, P1925, DOI 10.1007/s10664-018-9679-5
   Le TDB, 2015, INT C PROGRAM COMPRE, P36, DOI 10.1109/ICPC.2015.13
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Mills C, 2018, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSME.2018.00046
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Nguyen A.T., 2012, P ACM SIGSOFT 20 INT, P1
   Nguyen T. H. D., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P259, DOI 10.1109/WCRE.2010.37
   Ni C., 2020, IEEE Transactions on Software Engineering
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Ramler R, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P173, DOI 10.1109/IWSM-Mensura.2013.33
   Rosen C, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P966, DOI 10.1145/2786805.2803183
   Schermann G, 2015, INT C PROGRAM COMPRE, P4, DOI 10.1109/ICPC.2015.10
   scikit-learn developers, 2020, SKLEARN LIN MOD SGDC
   scikit-learn developers, 2020, US
   scikit-learn developers, 2020, 3 2 4 3 1 SKLEARN EN
   scikit-learn developers, US
   scikit-learn developers, 2020, SKLEARN LIN MOD LOGI
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   SPARCKJONES K, 1972, J DOC, V28, P11, DOI 10.1108/eb026526
   Sun Y, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962605
   Sun Y, 2017, IEEE INT CONF AUTOM, P147, DOI 10.1109/ASE.2017.8115627
   Sun Y, 2017, INFORM SOFTWARE TECH, V84, P33, DOI 10.1016/j.infsof.2016.11.010
   Sureka A, 2011, ASIA PAC SOFWR ENG, P146, DOI [10.1109/APSEC.2011.12, 10.1109/APSC.2011.12]
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Thomas S.W., 2012, LSCP: A Lightweight Source Code Preprocessor
   Tu HY, 2020, Arxiv, DOI arXiv:1905.01719
   WOHLIN Claes, 2014, P 18 INT C EVALUATIO, DOI [10.1145/2601248.2601268.10, 10.1145/2601248.2601268]
   Xie R, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P434, DOI [10.1109/saner.2019.8667969, 10.1109/SANER.2019.8667969]
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yedida R, 2022, IEEE T SOFTWARE ENG, V48, P3103, DOI 10.1109/TSE.2021.3079841
   Zhang F, 2016, PROC INT CONF SOFTW, P309, DOI 10.1145/2884781.2884839
NR 88
TC 1
Z9 1
U1 2
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 136
DI 10.1007/s10664-022-10120-x
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3D0XN
UT WOS:000829035700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Mariani, T
   Kessentini, M
   Vergilio, SR
AF Mariani, Thaina
   Kessentini, Marouane
   Vergilio, Silvia Regina
TI Generation of refactoring algorithms by grammatical evolution
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based software refactoring; Grammatical evolution; Machine
   learning
ID CODE-SMELLS; SOFTWARE; OPTIMIZATION
AB Recent machine learning studies present accurate results generating prediction models to identify refactoring operations for a program. However, such works are limited to prediction, i.e., they learn refactoring operations strictly as applied by developers, but there are possibilities that they might not think. On the other hand, the Search-Based Software Refactoring (SBR) field applies search algorithms to find refactoring operations in a vast space of possibilities to improve diverse quality attributes. Nevertheless, existing SBR approaches do not generate a model as machine learning studies, and then, they need to be reapplied individually for each program needing refactoring. To mitigate this limitation, this work introduces a novel SBR learning approach that generates refactoring algorithms capable of providing refactoring operations to several programs. These algorithms are composed of procedures that use rules to determine the refactoring operations. To create the algorithms, a learning process first extracts refactoring patterns from programs by grouping their elements that were refactored in similar ways. After that, a Grammatical Evolution (GE) is applied to generate the algorithms based on a grammar encompassing details of the extracted patterns. GE works to generate an algorithm that provides refactoring operations similar to those applied in practice while improving quality attributes, such as modularity. The approach is evaluated using refactoring data from 40 Java programs of GitHub repositories. The algorithms are tested against different programs, obtaining an overall average of 60% of modularity improvement and 50% of similarity with actual refactoring operations.
C1 [Mariani, Thaina; Vergilio, Silvia Regina] Univ Fed Parana, Curitiba, Parana, Brazil.
   [Kessentini, Marouane] Univ Michigan, Dearborn, MI 48128 USA.
C3 Universidade Federal do Parana; University of Michigan System;
   University of Michigan
RP Mariani, T (corresponding author), Univ Fed Parana, Curitiba, Parana, Brazil.
EM marianithaina@gmail.com; marouane@umich.edu; silvia@inf.ufpr.br
FU CAPES [88881.135198/2016-01]; CNPq [305968/2018]
FX The authors would like to thank to CAPES by supporting Thaina Mariani by
   the program PDSE associated with the process 88881.135198/2016-01.
   Silvia R. Vergilio is supported by CNPq (Grant:305968/2018).
CR Abid C., 2020, 30 YEARS SOFTWARE RE
   Al Dallal J, 2017, INFORM SOFTWARE TECH, V92, P105, DOI 10.1016/j.infsof.2017.07.013
   Al Dallal J, 2012, INFORM SOFTWARE TECH, V54, P1125, DOI 10.1016/j.infsof.2012.04.004
   Alenezi M., 2020, TELKOMNIKA Telecommunication Computing Electronics and Control, V18, P2977, DOI [10.12928/telkomnika.v18i6.16743, 10.12928/TELKOMNIKA.v18i6.16743, DOI 10.12928/TELKOMNIKA.V18I6.16743]
   Alizadeh V, 2020, IEEE T SOFTWARE ENG, V46, P932, DOI 10.1109/TSE.2018.2872711
   AlOmar EmanAbdullah., 2020, P IEEEACM 42 INT C S, P342, DOI [10.1145/3387940, DOI 10.1145/3387940]
   Amal B, 2014, LECT NOTES COMPUT SC, V8636, P31
   Aniche M, 2022, IEEE T SOFTWARE ENG, V48, P1432, DOI 10.1109/TSE.2020.3021736
   [Anonymous], 2021, SPARTAN REFACTORING
   [Anonymous], 1995, PROFESSIONAL COMPUTI
   [Anonymous], 2000, Data Mining: Practical Machine Learning Tools and Techniques with Java Implementations
   [Anonymous], 2013, P INT C ADV RECENT T
   AutoRefactor, US
   Bansiya J, 2002, IEEE T SOFTWARE ENG, V28, P4, DOI 10.1109/32.979986
   Baqais AAB, 2020, SOFTWARE QUAL J, V28, P459, DOI 10.1007/s11219-019-09477-y
   Barros RC, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1413
   Catolino G, 2020, EMPIR SOFTW ENG, V25, P49, DOI 10.1007/s10664-019-09739-0
   Cohen J., 1988, STAT POWER ANAL BEHA
   Colanzi TE, 2019, LECT NOTES COMPUT SC, V11664, P42, DOI 10.1007/978-3-030-27455-9_4
   Cormen T. H., 2009, Introduction to Algorithms, VSecond
   DEMPSTER AP, 1977, J ROY STAT SOC B MET, V39, P1, DOI 10.1111/j.2517-6161.1977.tb01600.x
   Durillo JJ, 2011, ADV ENG SOFTW, V42, P760, DOI 10.1016/j.advengsoft.2011.05.014
   Fowler M., 2018, REFACTORING IMPROVIN, V2
   Hartigan J. A., 1979, Applied Statistics, V28, P100, DOI 10.2307/2346830
   Hautojrvi P., 1979, Experimentation in software engineering, V1ST, DOI [10.1007/978-3-642-81316-0, 10.1007/978-3-642-29044-2., DOI 10.1007/978-3-642-29044-2]
   Imazato A, 2017, P INT COMP SOFTW APP, P190, DOI 10.1109/COMPSAC.2017.129
   Kaur A, 2019, ADV INTELL SYST COMP, V741, P909, DOI 10.1007/978-981-13-0761-4_86
   Kessentini M, 2013, SOFTWARE QUAL J, V21, P551, DOI 10.1007/s11219-012-9187-6
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Koc E, 2012, COMPUTER AND INFORMATION SCIENCES II, P59, DOI 10.1007/978-1-4471-2155-8_7
   Koc E, 2012, LECT NOTES COMPUT SC, V7331, P318, DOI 10.1007/978-3-642-30976-2_38
   Kosker Y, 2009, EXPERT SYST APPL, V36, P10000, DOI 10.1016/j.eswa.2008.12.066
   KOZA JR, 1994, STAT COMPUT, V4, P87, DOI 10.1007/BF00175355
   Kumar L., 2019, P 12 INN SOFTW ENG C
   LANCE GN, 1967, COMPUT J, V9, P373, DOI 10.1093/comjnl/9.4.373
   Mahouachi R, 2012, LECT NOTES COMPUT SC, V7212, P455, DOI 10.1007/978-3-642-28872-2_31
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mansoor U, 2017, SOFTWARE QUAL J, V25, P473, DOI 10.1007/s11219-015-9284-4
   Mariani T., 2021, DATASET SUPLEMENTARY, DOI [10.6084/m9.figshare.12275981, DOI 10.6084/M9.FIGSHARE.12275981]
   Mariani T, 2017, INFORM SOFTWARE TECH, V83, P14, DOI 10.1016/j.infsof.2016.11.009
   Mariani T, 2016, GECCO'16: PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1069, DOI 10.1145/2908812.2908816
   Mkaouer M. W., 2014, P 29 ACM IEEE INT C, P331, DOI [DOI 10.1145/2642937.2642965, 10.1145/2642937.2642965. u r l, DOI 10.1145/2642937.2642965.URL]
   Mkaouer MW, 2016, EMPIR SOFTW ENG, V21, P2503, DOI 10.1007/s10664-015-9414-4
   Mkaouer W, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2729974
   Mohan Michael, 2018, Journal of Software Engineering Research and Development, V6, DOI 10.1186/s40411-018-0046-4
   Moore I, 1996, ACM SIGPLAN NOTICES, V31, P235, DOI 10.1145/236338.236361
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Ouni A, 2016, ACM T SOFTW ENG METH, V25, DOI 10.1145/2932631
   Ouni A, 2015, J SYST SOFTWARE, V105, P18, DOI 10.1016/j.jss.2015.03.040
   Ouni A, 2014, ADV COMPUT, V94, P103, DOI 10.1016/B978-0-12-800161-5.00004-9
   Ouni A, 2013, GECCO'13: PROCEEDINGS OF THE 2013 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1461
   Ouni A, 2013, EUR CON SFTWR MTNCE, P221, DOI 10.1109/CSMR.2013.31
   Paixao M, 2018, IEEE T EVOLUT COMPUT, V22, P394, DOI 10.1109/TEVC.2017.2691281
   Phongpaibul M., 2007, SOFTWARE ENG B BOEHM
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Ryan C., 1998, P 1 EUR WORKSH GEN P, P8396
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Tan P. N., 2016, INTRO DATA MINING
   Tsantalis N, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P329
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Wang H, 2015, INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND COMMUNICATION ENGINEERING (CSCE 2015), P353
   Xu SH, 2017, PROC INT SYMP SOFTW, P24, DOI 10.1109/ISSRE.2017.35
NR 63
TC 0
Z9 0
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2022
VL 27
IS 5
AR 110
DI 10.1007/s10664-022-10151-4
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1U7GT
UT WOS:000805577100001
DA 2024-07-18
ER

PT J
AU Huang, KF
   Chen, BH
   Xu, CY
   Wang, Y
   Shi, BW
   Peng, X
   Wu, YJ
   Liu, Y
AF Huang, Kaifeng
   Chen, Bihuan
   Xu, Congying
   Wang, Ying
   Shi, Bowen
   Peng, Xin
   Wu, Yijian
   Liu, Yang
TI Characterizing usages, updates and risks of third-party libraries in
   Java projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Library usages; Library updates; Library risks; Security bugs
ID API USAGE; SUPPORT
AB Third-party libraries are a key building block in software development as they allow developers to reuse common functionalities instead of reinventing the wheel. However, third-party libraries and client projects are developed and continuously evolving in an asynchronous way. As a result, outdated third-party libraries might be commonly used in client projects, while developers are unaware of the potential risk (e.g., security bugs) in usages. Outdated third-party libraries might be updated in client projects in a delayed way, while developers are less aware of the potential risk (e.g., API incompatibilities) in updates. Developers of third-party libraries may be unaware of how their third-party libraries are used or updated in client projects. Therefore, a quantitative and holistic study on usages, updates and risks of third-party libraries in open-source projects can provide concrete evidence on these problems, and practical insights to improve the ecosystem sustainably. In this paper, we make the first contribution towards such a study in the Java ecosystem. First, using 806 open-source projects and 13,565 third-party libraries, we conduct a library usage analysis (e.g., usage intensity and usage outdatedness), followed by a library update analysis (e.g., update intensity and update delay). The two analyses aim to quantify usage and update practices from the two holistic perspectives of open-source projects and third-party libraries. Then, we carry out a library risk analysis (e.g., usage risk and update risk) on 806 open-source projects and 544 security bugs. This analysis aims to quantify the potential risk of using and updating outdated third-party libraries with respect to security bugs. Our findings suggest practical implications to developers and researchers on problems and potential solutions in maintaining third-party libraries (e.g., smart alerting and automated updating of outdated third-party libraries). To demonstrate the usefulness of our findings, we propose a security bug-driven alerting system, named LibSecurify, for assisting developers to make confident decisions by quantifying risks and effort when updating outdated third-party libraries. 33 open-source projects have confirmed the presence of security bugs after receiving our alerts, and 24 of those 33 have updated their third-party libraries. We have released our dataset to foster valuable applications and improve the Java third-party library ecosystem.
C1 [Huang, Kaifeng; Chen, Bihuan; Xu, Congying; Wang, Ying; Shi, Bowen; Peng, Xin; Wu, Yijian] Fudan Univ, Sch Comp Sci, D2023,Interdisciplinary Bldg 2,Songhu Rd 2005, Shanghai 201203, Peoples R China.
   [Liu, Yang] Nanyang Technol Univ, Sch Comp Sci & Engn, 02C-84,Block N4,50 Nanyang Ave, Singapore 639798, Singapore.
C3 Fudan University; Nanyang Technological University
RP Chen, BH (corresponding author), Fudan Univ, Sch Comp Sci, D2023,Interdisciplinary Bldg 2,Songhu Rd 2005, Shanghai 201203, Peoples R China.
EM kfhuang16@fudan.edu.cn; bhchen@fudan.edu.cn; XuCY19@fudan.edu.cn;
   wangying18@fudan.edu.cn; 18210240163@fudan.edu.cn; pengxin@fudan.edu.cn;
   wuyijian@fudan.edu.cn; yangliu@ntu.edu.sg
RI WU, YIJIAN/JEP-7584-2023; Huang, Kaifeng/JAC-1467-2023; Liu,
   Yang/D-2306-2013
OI Huang, Kaifeng/0009-0000-1513-8254; Liu, Yang/0000-0001-7300-9215
FU National Natural Science Foundation of China [61802067]
FX This work was supported by the National Natural Science Foundation of
   China (Grant No. 61802067). Bihuan Chen is the corresponding author of
   this paper.
CR Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   Quach A, 2018, PROCEEDINGS OF THE 27TH USENIX SECURITY SYMPOSIUM, P869
   [Anonymous], 2017, Javaparser: visited
   Backes M, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P356, DOI 10.1145/2976749.2978333
   Balaban I, 2005, ACM SIGPLAN NOTICES, V40, P265, DOI 10.1145/1103845.1094832
   Bauer V, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P483, DOI 10.1109/ICSM.2012.6405311
   Bauer V, 2012, EUR CON SFTWR MTNCE, P435, DOI 10.1109/CSMR.2012.55
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1275, DOI 10.1007/s10664-014-9325-9
   Bavota G, 2013, PROC IEEE INT CONF S, P280, DOI 10.1109/ICSM.2013.39
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Cadariu M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P516, DOI 10.1109/SANER.2015.7081868
   Chan W., 2012, PROC ACM SIGSOFT 20, P1, DOI DOI 10.1145/2393596.2393606
   Chen CY, 2016, IEEE INT CONF AUTOM, P834, DOI 10.1145/2970276.2970290
   Chow KS, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P359, DOI 10.1109/ICSM.1996.565039
   Cossette B.E., 2012, P ACM SIGSOFT 20 INT, p55:1, DOI DOI 10.1145/2393596.2393661
   Cox J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P109, DOI 10.1109/ICSE.2015.140
   Dagenais B, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000799.2000805
   Dagenais B, 2009, PROC INT CONF SOFTW, P599, DOI 10.1109/ICSE.2009.5070565
   De Roover C, 2013, CONF PROC INT SYMP C, P152, DOI 10.1109/ICPC.2013.6613843
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Decan A, 2018, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSME.2018.00050
   Decan A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P2, DOI 10.1109/SANER.2017.7884604
   Derr E, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2187, DOI 10.1145/3133956.3134059
   Dietrich J, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P64, DOI 10.1109/CSMR-WCRE.2014.6747226
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Nguyen DC, 2020, ANN COMPUT SECURITY, P263, DOI 10.1145/3427228.3427658
   Fujibayashi D, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P569, DOI 10.1109/SANER.2017.7884681
   Hejderup J, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P101, DOI 10.1145/3183399.3183417
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   Hoan AN, 2010, ACM SIGPLAN NOTICES, V45, P302, DOI 10.1145/1932682.1869486
   Hora A, 2015, PROC IEEE INT CONF S, P321, DOI 10.1109/ICSM.2015.7332478
   Hora A, 2015, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSM.2015.7332471
   HOWELL D.C., 2012, Statistical methods for psychology
   Huang K, ASE
   Huang KF, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P518, DOI 10.1145/3368089.3409689
   Kabinna S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P154, DOI [10.1145/2901739.2901769, 10.1109/MSR.2016.025]
   Khandkar Shahedul Huq, 2009, Open coding
   Kim M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P151, DOI 10.1145/1985793.1985815
   Kula RG, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P288, DOI 10.1109/SANER.2018.8330217
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Kula RG, 2018, INFORM SOFTWARE TECH, V93, P186, DOI 10.1016/j.infsof.2017.09.007
   Kula RG, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P407, DOI 10.1109/SANER.2017.7884643
   Kula RG, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P520, DOI 10.1109/SANER.2015.7081869
   Kula RG, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P127, DOI 10.1109/VISSOFT.2014.29
   Lammel R., 2011, Proceedings of the 2011 ACM Symposium on Applied Computing, P1317, DOI 10.1145/1982185.1982471
   Lauinger T, 2017, 24TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2017), DOI 10.14722/ndss.2017.23414
   Li L, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P403, DOI 10.1109/SANER.2016.52
   Li MH, 2017, PROC INT CONF SOFTW, P335, DOI 10.1109/ICSE.2017.38
   Linares-Vasquez Mario, 2013, P 2013 9 JOINT M FDN, P477, DOI DOI 10.1145/2491411.2491428
   Liu C, 2021, ICSE
   Ma Z, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P653, DOI 10.1145/2889160.2889178
   MATOS AS, 2019, MSR, P360
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Mileva YM, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P57
   Mileva YM, 2010, LECT NOTES COMPUT SC, V6303, P173, DOI 10.1007/978-3-642-15585-7_17
   Mirhosseini S, 2017, IEEE INT CONF AUTOM, P84, DOI 10.1109/ASE.2017.8115621
   Ouni A, 2017, INFORM SOFTWARE TECH, V83, P55, DOI 10.1016/j.infsof.2016.11.007
   Patra J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P741, DOI 10.1145/3180155.3180184
   Plate H, 2015, PROC IEEE INT CONF S, P411, DOI 10.1109/ICSM.2015.7332492
   Ponta SE, 2018, PROC IEEE INT CONF S, P449, DOI 10.1109/ICSME.2018.00054
   Preston-Werner Tom., 2013, Semantic Versioning 2.0.0
   Qiu D, 2016, INFORM SOFTWARE TECH, V73, P81, DOI 10.1016/j.infsof.2016.01.011
   Raemaekers S, 2014, IEEE INT WORK C SO, P215, DOI 10.1109/SCAM.2014.30
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Robbes R., 2012, P ACM SIGSOFT 20 INT, P1, DOI 10.1145/2393596.2393662
   Salza P, 2018, INT C PROGRAM COMPRE, P255, DOI 10.1145/3196321.3196341
   Sawant AA, 2016, PROC IEEE INT CONF S, P400, DOI 10.1109/ICSME.2016.64
   Schäfer T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P471, DOI 10.1145/1368088.1368153
   Sharif H, 2018, IEEE INT CONF AUTOM, P329, DOI 10.1145/3238147.3238160
   Soto-Valero C, 2020, ARXIV200107808
   Teyton C., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P289, DOI 10.1109/WCRE.2012.38
   Teyton C, 2014, J SOFTW-EVOL PROC, V26, P1030, DOI 10.1002/smr.1660
   Teyton C, 2013, WORK CONF REVERSE EN, P192, DOI 10.1109/WCRE.2013.6671294
   Thung F, 2013, IEEE INT CONF AUTOM, P290, DOI 10.1109/ASE.2013.6693088
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Vallee-Rai R., 1999, Proceedings of the 1999 Conference of the Centre for Advanced Studies on Collaborative Research, CASCON'99, page, P13
   Wang CY, 2019, IEEE T INF FOREN SEC, V14, P693, DOI 10.1109/TIFS.2018.2855648
   Wang Y, 2020, PROC IEEE INT CONF S, P35, DOI 10.1109/ICSME46990.2020.00014
   Wang Y, 2019, PROC INT CONF SOFTW, P572, DOI 10.1109/ICSE.2019.00068
   Wang Y, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P319, DOI 10.1145/3236024.3236056
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
   Wu W, 2016, EMPIR SOFTW ENG, V21, P2366, DOI 10.1007/s10664-015-9411-7
   Wu W, 2015, EMPIR SOFTW ENG, V20, P1126, DOI 10.1007/s10664-014-9317-9
   Wu Wei, 2010, P 32 ACMIEEE INT C S, P325, DOI DOI 10.1145/1806799.1806848
   Xing ZC, 2007, IEEE T SOFTWARE ENG, V33, P818, DOI 10.1109/TSE.2007.70747
   Xu Guoqing, 2010, P FSE SDP WORKSH FUT, P421
   Zaimi Asimina., 2015, P 7 BALK C INF BCI 1, P4, DOI [DOI 10.1145/2801081.2801087, 10.1145/2801081.2801087]
   Zapata RE, 2018, PROC IEEE INT CONF S, P559, DOI 10.1109/ICSME.2018.00067
   Zerouali A, 2018, LECT NOTES COMPUT SC, V10826, P95, DOI 10.1007/978-3-319-90421-4_6
   Zhang Y, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P141, DOI 10.1109/SANER.2018.8330204
   Zheng W., 2011, P 19 ACM SIGSOFT S 1, P480
   Zimmermann M, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P995
NR 92
TC 2
Z9 4
U1 3
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2022
VL 27
IS 4
AR 90
DI 10.1007/s10664-022-10131-8
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0N1KR
UT WOS:000782605800001
DA 2024-07-18
ER

PT J
AU Eisty, NU
   Carver, JC
AF Eisty, Nasir U.
   Carver, Jeffrey C.
TI Developers perception of peer code review in research software
   development
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Code review; Survey; Research software; Software engineering
ID SCIENTIFIC SOFTWARE; INSPECTIONS
AB Context Research software is software developed by and/or used by researchers, across a wide variety of domains, to perform their research. Because of the complexity of research software, developers cannot conduct exhaustive testing. As a result, researchers have lower confidence in the correctness of the output of the software. Peer code review, a standard software engineering practice, has helped address this problem in other types of software. Objective Peer code review is less prevalent in research software than it is in other types of software. In addition, the literature does not contain any studies about the use of peer code review in research software. Therefore, through analyzing developers perceptions, the goal of this work is to understand the current practice of peer code review in the development of research software, identify challenges and barriers associated with peer code review in research software, and present approaches to improve the peer code review in research software. Method We conducted interviews and a community survey of research software developers to collect information about their current peer code review practices, difficulties they face, and how they address those difficulties. Results We received 84 unique responses from the interviews and surveys. The results show that while research software teams review a large amount of their code, they lack formal process, proper organization, and adequate people to perform the reviews. Conclusions Use of peer code review is promising for improving the quality of research software and thereby improving the trustworthiness of the underlying research results. In addition, by using peer code review, research software developers produce more readable and understandable code, which will be easier to maintain.
C1 [Eisty, Nasir U.] Boise State Univ, Dept Comp Sci, Boise, ID 83725 USA.
   [Carver, Jeffrey C.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
C3 Idaho; Boise State University; University of Alabama System; University
   of Alabama Tuscaloosa
RP Eisty, NU (corresponding author), Boise State Univ, Dept Comp Sci, Boise, ID 83725 USA.
EM nasireisty@boisestate.edu; carver@cs.ua.edu
RI Eisty, Nasir/HGE-6600-2022
OI Carver, Jeffrey/0000-0002-7824-9151
FU US National Science Foundation [1445344]; NCSA summer internship; Direct
   For Computer & Info Scie & Enginr; Office of Advanced
   Cyberinfrastructure (OAC) [1445344] Funding Source: National Science
   Foundation
FX The authors acknowledge partial support from the US National Science
   Foundation (1445344). Nasir Eisty would like to thank his sponsors for
   the NCSA summer internship, Drs. Gabrielle Allen, Roland Hass and Daniel
   S. Katz. We would also like to thank the interview and survey
   participants.
CR ACKERMAN AF, 1989, IEEE SOFTWARE, V6, P31, DOI 10.1109/52.28121
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Bosu Amiangshu, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P133, DOI 10.1109/ESEM.2013.23
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Bosu A, 2014, J SYST SOFTWARE, V94, P4, DOI 10.1016/j.jss.2014.03.061
   Carver J., 2016, SOFTWARE ENG SCI, DOI [10.1201/9781315368924, DOI 10.1201/9781315368924]
   Carver JC, DATA SET SURVEY PEER, DOI [10.6084/m9.figshare.14736468, DOI 10.6084/M9.FIGSHARE.14736468]
   Carver JC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P1071
   Ciolkowski M, 2003, IEEE SOFTWARE, V20, P46, DOI 10.1109/MS.2003.1241366
   Clune TL, 2011, IEEE SOFTWARE, V28, P49, DOI 10.1109/MS.2011.117
   Eisty NU, 2019, PROCEEDINGS OF EASE 2019 - EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING, P276, DOI 10.1145/3319008.3319351
   Eisty NU, 2018, P IEEE INT C E-SCI, P212, DOI 10.1109/eScience.2018.00036
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Faulk S, 2009, COMPUT SCI ENG, V11, P30, DOI 10.1109/MCSE.2009.205
   Hannay JE, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING, P1, DOI 10.1109/SECSE.2009.5069155
   Heaton D, 2015, INFORM SOFTWARE TECH, V67, P207, DOI 10.1016/j.infsof.2015.07.011
   Hook D, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING, P59, DOI 10.1109/SECSE.2009.5069163
   Kanewala U, 2014, INFORM SOFTWARE TECH, V56, P1219, DOI 10.1016/j.infsof.2014.05.006
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   Morales R, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P171, DOI 10.1109/SANER.2015.7081827
   Nangia Udit, 2017, TRACK 1 PAPER SURVEY, DOI [10.6084/m9.figshare.5328442.v3, DOI 10.6084/M9.FIGSHARE.5328442.V3]
   Petre M, 2014, P 2 WORKSH SUST SOFT
   Potvin R, 2016, COMMUN ACM, V59, P78, DOI 10.1145/2854146
   Remmel H, 2012, COMPUT SCI ENG, V14, P38, DOI 10.1109/MCSE.2011.115
   Rigby PC, 2012, IEEE SOFTWARE, V29, P56, DOI 10.1109/MS.2012.24
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Sanders R, 2008, IEEE SOFTWARE, V25, P21, DOI 10.1109/MS.2008.84
   Segal J, 2005, EMPIR SOFTW ENG, V10, P517, DOI 10.1007/s10664-005-3865-y
   Segal J, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING, P9, DOI 10.1109/SECSE.2009.5069156
   Sutherland A, 2009, PROC INT CONF SOFTW, P259, DOI 10.1109/ICSE-COMPANION.2009.5070996
   Vilkomir SA, 2008, LECT NOTES COMPUT SC, V5103, P291, DOI 10.1007/978-3-540-69389-5_34
NR 35
TC 4
Z9 4
U1 6
U2 21
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 13
DI 10.1007/s10664-021-10053-x
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WO6MV
UT WOS:000712567200001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Wen, FC
   Nagy, C
   Lanza, M
   Bavota, G
AF Wen, Fengcai
   Nagy, Csaba
   Lanza, Michele
   Bavota, Gabriele
TI Quick remedy commits and their impact on mining software repositories
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Fixing commits; Empirical software engineering; Mining software
   repositories
ID VERSION HISTORIES; BUG
AB Most changes during software maintenance and evolution are not atomic changes, but rather the result of several related changes affecting different parts of the code. It may happen that developers omit needed changes, thus leaving a task partially unfinished, introducing technical debt or injecting bugs. We present a study investigating "quick remedy commits" performed by developers to implement changes omitted in previous commits. With quick remedy commits we refer to commits that (i) quickly follow a commit performed by the same developer, and (ii) aim at remedying issues introduced as the result of code changes omitted in the previous commit (e.g., fix references to code components that have been broken as a consequence of a rename refactoring) or simply improve the previously committed change (e.g., improve the name of a newly introduced variable). Through a manual analysis of 500 quick remedy commits, we define a taxonomy categorizing the types of changes that developers tend to omit. The taxonomy can (i) guide the development of tools aimed at detecting omitted changes and (ii) help researchers in identifying corner cases that must be properly handled. For example, one of the categories in our taxonomy groups the reverted commits, meaning changes that are undone in a subsequent commit. We show that not accounting for such commits when mining software repositories can undermine one's findings. In particular, our results show that considering completely reverted commits when mining software repositories accounts, on average, for 0.07 and 0.27 noisy data points when dealing with two typical MSR data collection tasks (i.e., bug-fixing commits identification and refactoring operations mining, respectively).
C1 [Wen, Fengcai; Nagy, Csaba; Lanza, Michele; Bavota, Gabriele] USI Univ Svizzera Italiana, Software Inst, Lugano, Switzerland.
C3 Universita della Svizzera Italiana
RP Bavota, G (corresponding author), USI Univ Svizzera Italiana, Software Inst, Lugano, Switzerland.
EM fengcai.wen@usi.ch; csaba.nagy@usi.ch; michele.lanza@usi.ch;
   gabriele.bavota@usi.ch
RI Nagy, Csaba/B-7109-2014; Lanza, Michele/JNQ-9470-2023
OI Lanza, Michele/0000-0003-4391-0197; BAVOTA, Gabriele/0000-0002-2216-3148
FU Universita della Svizzera italiana
FX Open Access funding provided by Universita della Svizzera italiana.
CR Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   AlOmar EA, 2019, 2019 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON REFACTORING (IWOR 2019), P51, DOI 10.1109/IWoR.2019.00017
   An L, 2014, IEEE INT WORK C SO, P205, DOI 10.1109/SCAM.2014.29
   Aniche M, 2018, EMPIR SOFTW ENG, V23, P2121, DOI 10.1007/s10664-017-9540-2
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   [Anonymous], 2014, P 29 ACM IEEE INT C, DOI DOI 10.1145/2642937.2642956
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Bettenburg N, 2012, SCI COMPUT PROGRAM, V77, P760, DOI 10.1016/j.scico.2010.11.010
   Bieman JM, 2003, PROG COMPREHEN, P44
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bradley NC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P993, DOI 10.1145/3180155.3180238
   Catolino G, 2019, J SOFTW-EVOL PROC, V31, DOI 10.1002/smr.2156
   Claes M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P705, DOI 10.1145/3180155.3180193
   Dai MX, 2014, 2014 3RD INTERNATIONAL WORKSHOP ON EVIDENTIAL ASSESSMENT OF SOFTWARE TECHNOLOGIES (EAST), P24, DOI 10.1145/2627508.2627512
   Daniel B., 2007, P THE 6 JOINT M EURO, P185, DOI 10.1145/1287624.1287651
   Di Penta M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P556, DOI 10.1145/3368089.3409695
   Eyolfson J., 2011, WORKING C MINING SOF, P153, DOI DOI 10.1145/1985441.1985464
   Fakhoury S, 2019, INT C PROGRAM COMPRE, P2, DOI 10.1109/ICPC.2019.00014
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Hattori Lile P., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P63, DOI 10.1109/ASEW.2008.4686322
   Herzig K, 2016, EMPIR SOFTW ENG, V21, P303, DOI 10.1007/s10664-015-9376-6
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Hora A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1102, DOI 10.1145/3180155.3180212
   Izquierdo-Cortazar Daniel, 2011, International Journal of Open Source Software & Processes, V3, P23, DOI 10.4018/jossp.2011040102
   Jiang SY, 2017, IEEE INT CONF AUTOM, P135, DOI 10.1109/ASE.2017.8115626
   Jihun Park, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P40, DOI 10.1109/MSR.2012.6224298
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kochhar Pavneet Singh, 2014, P 2 ACM IEEE INT C, P803, DOI DOI 10.1145/2642937.2642997
   Krinke J, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P170, DOI 10.1109/WCRE.2007.7
   Li Y, 2016, IEEE INT CONF AUTOM, P495, DOI 10.1145/2970276.2970336
   Lin B, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P594, DOI [10.1109/SANER.2019.8667992, 10.1109/saner.2019.8667992]
   Lin B, 2017, IEEE INT WORK C SO, P81, DOI 10.1109/SCAM.2017.17
   Mahmoudi M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P151, DOI [10.1109/saner.2019.8668012, 10.1109/SANER.2019.8668012]
   Martinez M, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: COMPANION PROCEEDINGS (ICSE-COMPANION 2019), P79, DOI 10.1109/ICSE-Companion.2019.00043
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Palomba F, 2017, INT C PROGRAM COMPRE, P176, DOI 10.1109/ICPC.2017.38
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Park J, 2017, EMPIR SOFTW ENG, V22, P436, DOI 10.1007/s10664-016-9432-x
   Peruma A, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P148, DOI 10.1109/MOBILESoft.2019.00030
   Potdar A, 2014, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSME.2014.31
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Rahman F, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P491, DOI 10.1145/1985793.1985860
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Rahman MM, 2017, IEEE WORK CONF MIN S, P215, DOI 10.1109/MSR.2017.17
   Rigby PC, 2013, DISCOVERING ESSENTIA
   Robillard MP, 2018, PROC IEEE INT CONF S, P508, DOI 10.1109/ICSME.2018.00009
   Rodríguez-Pérez G, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267436
   Rodriguez-Perez G, 2017, INT WORKS EMERG TREN, P29, DOI 10.1109/WETSoM.2017.6
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Shimagaki J, 2016, WHY ARE COMMITS BEIN
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Tsantalis N, 2020, REFACTORINGMINER 2 0
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Tufano M, 2019, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2019.00021
   Tufano M, 2018, IEEE INT CONF AUTOM, P832, DOI 10.1145/3238147.3240732
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1797
   Wang CQ, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110667
   Wen FC, 2020, INT C PROGRAM COMPRE, P60, DOI 10.1145/3387904.3389266
   Wen FC, 2019, INT C PROGRAM COMPRE, P53, DOI 10.1109/ICPC.2019.00019
   Yan M, 2019, EMPIR SOFTW ENG, V24, P2171, DOI 10.1007/s10664-019-09688-8
   Zhao YY, 2017, INFORM SOFTWARE TECH, V86, P37, DOI 10.1016/j.infsof.2017.02.003
   Zimmermann T, 2005, IEEE T SOFTWARE ENG, V31, P429, DOI 10.1109/TSE.2005.72
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 69
TC 2
Z9 2
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 14
DI 10.1007/s10664-021-10051-z
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA WO2JZ
UT WOS:000712287300001
PM 34744487
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Hasan, M
   Iqbal, A
   Ul Islam, MR
   Rahman, AJMI
   Bosu, A
AF Hasan, Masum
   Iqbal, Anindya
   Ul Islam, Mohammad Rafid
   Rahman, A. J. M. Imtiajur
   Bosu, Amiangshu
TI Using a balanced scorecard to identify opportunities to improve code
   review effectiveness: an industrial experience report
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Code review; Software development; Usefulness; Productivity; Tool
   development
ID TOOL
AB Peer code review is a widely adopted software engineering practice to ensure code quality and ensure software reliability in both the commercial and open-source software projects. Due to the large effort overhead associated with practicing code reviews, project managers often wonder, if their code reviews are effective and if there are improvement opportunities in that respect. Since project managers at Samsung Research Bangladesh (SRBD) were also intrigued by these questions, this research developed, deployed, and evaluated a production-ready solution using the Balanced SCorecard (BSC) strategy that SRBD managers can use in their day-to-day management to monitor individual developer's, a particular project's or the entire organization's code review effectiveness. Following the four-step framework of the BSC strategy, we- 1) defined the operation goals of this research, 2) defined a set of metrics to measure the effectiveness of code reviews, 3) developed an automated mechanism to measure those metrics, and 4) developed and evaluated a monitoring application to inform the key stakeholders. Our automated model to identify useful code reviews achieves 7.88% and 14.39% improvement in terms of accuracy and minority class F-1 score respectively over the models proposed in prior studies. It also outperforms human evaluators from SRBD, that the model replaces, by a margin of 25.32% and 23.84% respectively in terms of accuracy and minority class F-1 score. In our post-deployment survey, SRBD developers and managers indicated that they found our solution as useful and it provided them with important insights to help their decision makings.
C1 [Hasan, Masum; Iqbal, Anindya; Ul Islam, Mohammad Rafid] Bangladesh Univ Engn & Technol, Dept Comp Sci & Engn, Dhaka, Bangladesh.
   [Rahman, A. J. M. Imtiajur] D Inst Bangladesh, Samsung R, Dhaka, Bangladesh.
   [Bosu, Amiangshu] Wayne State Univ, Dept Comp Sci, Detroit, MI 48202 USA.
C3 Bangladesh University of Engineering & Technology (BUET); Wayne State
   University
RP Bosu, A (corresponding author), Wayne State Univ, Dept Comp Sci, Detroit, MI 48202 USA.
EM masum@ra.cse.buet.ac.bd; anindya@cse.buet.ac.bd;
   rafid@openrefactory.com; m.imtiaz@samsung.com; amiangshu.bosu@wayne.edu
RI Bosu, Amiangshu/AAB-1259-2020
OI Bosu, Amiangshu/0000-0002-3178-6232
FU US National Science Foundation [1850475]; Samsung Research Bangladesh;
   Direct For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [1850475] Funding Source: National Science
   Foundation
FX Work conducted by Dr. Amiangshu Bosu for this research is partially
   supported by the US National Science Foundation under Grant No. 1850475.
   Any opinions, findings, and conclusions or recommendations expressed in
   this material are those of the author(s) and do not necessarily reflect
   the views of the National Science Foundation.; Work conducted for this
   research is also partially supported by a research grant provided by the
   Samsung Research Bangladesh.
CR Ahmed T, 2017, IEEE INT CONF AUTOM, P106, DOI 10.1109/ASE.2017.8115623
   [Anonymous], 2006, BEST KEPT SECRETS PE
   [Anonymous], 2019, GERRIT CODE REV REST
   [Anonymous], 2020, PANDAS QCUT PANDAS 1
   [Anonymous], 2013, P 16 C COMP SUPP COO
   [Anonymous], 2020, Natural Language Toolkit
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2020, TEXTSTAT PYPI
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Barnett M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P134, DOI 10.1109/ICSE.2015.35
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   Bosu Amiangshu, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P133, DOI 10.1109/ESEM.2013.23
   Bosu A, 2017, IEEE T SOFTWARE ENG, V43, P56, DOI 10.1109/TSE.2016.2576451
   Bosu A, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P146, DOI 10.1109/MSR.2015.21
   Buitinck L, 2013, ECML PKDD WORKSH LAN, P108, DOI DOI 10.48550/ARXIV.1309.0238
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Camilo F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P269, DOI 10.1109/MSR.2015.32
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   Chen JH, 2009, IEEE RAD FREQ INTEGR, P127, DOI 10.1109/ICCSE.2009.5228509
   Chen TQ, 2016, KDD'16: PROCEEDINGS OF THE 22ND ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P785, DOI 10.1145/2939672.2939785
   Chouchen M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P531, DOI 10.1109/SANER50967.2021.00060
   Chouchen M, 2021, APPL SOFT COMPUT, V100, DOI 10.1016/j.asoc.2020.106908
   Czerwonka J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P27, DOI 10.1109/ICSE.2015.131
   di Biase M, 2016, IEEE INT WORK C SO, P21, DOI 10.1109/SCAM.2016.30
   Ebert F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P49, DOI [10.1109/SANER.2019.8668024, 10.1109/saner.2019.8668024]
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Flesch R., 2007, Flesch-kincaid readability test
   Flyvbjerg B, 2006, QUAL INQ, V12, P219, DOI 10.1177/1077800405284363
   Fracz W, 2018, PROC IEEE INT CONF S, P695, DOI 10.1109/ICSME.2018.00079
   Hatton L, 2008, IEEE SOFTWARE, V25, P82, DOI 10.1109/MS.2008.100
   Hirao T, 2016, IFIP ADV INF COMM TE, V472, P97, DOI 10.1007/978-3-319-39225-7_8
   Hofner G., 2011, Proceedings of the 2011 6th IEEE International Conference on Global Software Engineering (ICGSE 2011), P35, DOI 10.1109/ICGSE.2011.27
   HOPFIELD JJ, 1988, IEEE CIRCUIT DEVIC, V4, P3, DOI 10.1109/101.8118
   Hosmer DW, 2013, WILEY SER PROBAB ST, P1, DOI 10.1002/9781118548387
   Huq F, 2020, INF SOFTW TECHNOL, DOI DOI 10.1016/J.INFSOF.2021.106765
   Islam MR, 2017, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2017.9
   KAPLAN RS, 1992, HARVARD BUS REV, V70, P71
   Khomh F., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P179, DOI 10.1109/MSR.2012.6224279
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Kononenko O, 2015, PROC IEEE INT CONF S, P111, DOI 10.1109/ICSM.2015.7332457
   Mair S, 2002, IEEE SOFTWARE, V19, P21, DOI 10.1109/MS.2002.1049383
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   Marr B, 2003, MEAS BUS EXCELL
   McCarney R, 2007, BMC MED RES METHODOL, V7, DOI 10.1186/1471-2288-7-30
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Naumenko D, 2018, JAVA DIFF UTILS
   Novielli N, 2018, IEEE WORK CONF MIN S, P364, DOI 10.1145/3196398.3196403
   Papalexandris A, 2004, LONG RANGE PLANN, V37, P351, DOI 10.1016/j.lrp.2004.05.002
   Rahman MM, 2017, IEEE WORK CONF MIN S, P215, DOI 10.1109/MSR.2017.17
   Rahman MM, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P222, DOI 10.1145/2889160.2889244
   Rigby P. C., 2006, DCS305IR U VICT
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   SALTON G, 1988, INFORM PROCESS MANAG, V24, P513, DOI 10.1016/0306-4573(88)90021-0
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   StackOverflow, 2021, WHAT IS REP EARN LOS
   Suykens JAK, 1999, NEURAL PROCESS LETT, V9, P293, DOI 10.1023/A:1018628609742
   Thongtanunam P, 2021, IEEE T SOFTWARE ENG, V47, P2698, DOI 10.1109/TSE.2020.2964660
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Thongtanunam P, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P141, DOI 10.1109/SANER.2015.7081824
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   Tolosi L, 2011, BIOINFORMATICS, V27, P1986, DOI 10.1093/bioinformatics/btr300
NR 63
TC 5
Z9 5
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 129
DI 10.1007/s10664-021-10038-w
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA UU2TA
UT WOS:000698652500001
DA 2024-07-18
ER

PT J
AU Assi, M
   Hassan, S
   Tian, Y
   Zou, Y
AF Assi, Maram
   Hassan, Safwat
   Tian, Yuan
   Zou, Ying
TI FeatCompare: Feature comparison for competing mobile apps leveraging
   user reviews
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Mobile applications; User reviews; Competitor analysis; Competing apps;
   Feature extraction; Google Play Store
AB Given the competitive mobile app market, developers must be fully aware of users' needs, satisfy users' requirements, combat apps of similar functionalities (i.e., competing apps), and thus stay ahead of the competition. While it is easy to track the overall user ratings of competing apps, such information fails to provide actionable insights for developers to improve their apps over the competing apps (AlSubaihin et al., IEEE Trans Softw Eng, 1-1, 2019). Thus, developers still need to read reviews from all their interested competing apps and summarize the advantages and disadvantages of each app. Such a manual process can be tedious and even infeasible with thousands of reviews posted daily. To help developers compare users' opinions among competing apps on high-level features, such as the main functionalities and the main characteristics of an app, we propose a review analysis approach named FeatCompare. FeatCompare can automatically identify high-level features mentioned in user reviews without any manually annotated resource. Then, FeatCompare creates a comparative table that summarizes users' opinions for each identified feature across competing apps. FeatCompare features a novel neural network-based model named G lobal-L ocal sensitive F eature E xtractor (GLFE), which extends Attention-based Aspect Extraction (ABAE), a state-of-the-art model for extracting high-level features from reviews. We evaluate the effectiveness of GLFE on 480 manually annotated reviews sampled from five groups of competing apps. Our experiment results show that GLFE achieves a precision of 79%-82% and recall of 74%-77% in identifying the high-level features associated with reviews and outperforms ABAE by 14.7% on average. We also conduct a case study to demonstrate the usage scenarios of FeatCompare. A survey with 107 mobile app developers shows that more than 70% of developers agree that FeatCompare is of great benefit.
C1 [Assi, Maram; Tian, Yuan; Zou, Ying] Queens Univ, Kingston, ON, Canada.
   [Hassan, Safwat] Thompson Rivers Univ, Kamloops, BC, Canada.
C3 Queens University - Canada
RP Assi, M (corresponding author), Queens Univ, Kingston, ON, Canada.
EM maram.assi@queensu.ca; shassan@tru.ca; y.tian@queensu.ca;
   ying.zou@queensu.ca
RI Hassan, Safwat/JWP-1498-2024; Zou, Ying/KLC-9380-2024; Assi,
   Maram/GQH-7366-2022
CR Al-Subaihin AA, 2021, IEEE T SOFTWARE ENG, V47, P300, DOI 10.1109/TSE.2019.2891715
   [Anonymous], 2006, Proceedings of the 2006 Conference on Empirical Methods in Natural Language Processing (EMNLP 2006), DOI DOI 10.3115/1610075.1610135
   [Anonymous], 2016, APPANNIE APP ANNIE
   [Anonymous], 2013, AKDENIZ GOOGLE PLAY
   [Anonymous], 2020, EMARKETER NUMBER APP
   [Anonymous], 2015, CODING MANUAL QUALIT
   [Anonymous], 2015, PROC 3 INT C LEARN R
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Chen ZY, 2014, PROCEEDINGS OF THE 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P347
   Dalpiaz F, 2019, LECT NOTES COMPUT SC, V11412, P55, DOI 10.1007/978-3-030-15538-4_4
   Di Sorbo A, 2017, PROC IEEE ACM INT C, P55, DOI 10.1109/ICSE-C.2017.5
   El Zarif O, 2020, IEEE WORK CONF MIN S, P339, DOI 10.1145/3379597.3387456
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Gao CY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P48, DOI 10.1145/3180155.3180218
   Gorla A, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1025, DOI 10.1145/2568225.2568276
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Hassan S, 2020, IEEE T SOFTWARE ENG, V46, P773, DOI 10.1109/TSE.2018.2869395
   He RD, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P388, DOI 10.18653/v1/P17-1036
   Iacob C., 2014, Mobile Computing, Applications, and Services. MobiCASE 2013. Lecture Notes of the Institute for Computer Sciences, V130, DOI [10.1007/978-3-319-05452-0_4., DOI 10.1007/978-3-319-05452-0_4]
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Johann T, 2017, INT REQUIR ENG CONF, P21, DOI 10.1109/RE.2017.71
   Keertipati S, 2016, PROCEEDINGS OF THE 20TH INTERNATIONAL CONFERENCE ON EVALUATION AND ASSESSMENT IN SOFTWARE ENGINEERING 2016 (EASE '16), DOI 10.1145/2915970.2916003
   Levy O., 2015, Transactions of the Association for Computational Linguistics, V3, P211
   Li XC, 2018, INT C PROGRAM COMPRE, P144, DOI 10.1145/3196321.3196326
   Li Y., 2017, P ACM INT MOB WEAR U, V1, P751
   Lim SL, 2015, IEEE T SOFTWARE ENG, V41, P40, DOI 10.1109/TSE.2014.2360674
   Lovric Miodrag, 2011, INT ENCY STAT SCI
   Lu Mengmeng., 2017, P 21 INT C EVALUATIO, P344, DOI [10.1145/3084226.3084241, DOI 10.1145/3084226.3084241]
   Ma SQ, 2015, P INT COMP SOFTW APP, P179, DOI 10.1109/COMPSAC.2015.93
   Man YC, 2016, PROC INT SYMP SOFTW, P138, DOI 10.1109/ISSRE.2016.27
   Martin P, 77 WILL NOT DOWNLOAD
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1067, DOI 10.1007/s10664-015-9375-7
   Mikolov T., 2013, INT C LEARNING REPRE, P1
   Mukherjee A., 2012, P 50 ANN M ASS COMP, V1, P339
   Nayebi M, 2017, INT SYMP EMP SOFTWAR, P324, DOI 10.1109/ESEM.2017.46
   Nayebi M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P552, DOI 10.1109/SANER.2016.116
   Noei E, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P283, DOI 10.1145/3236024.3236044
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Pennington J., 2014, P C EMP METH NAT LAN, P1532, DOI DOI 10.3115/V1/D14-1162
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   Ramos J, 2003, P 1 INSTRUCTIONAL C, V242, P29
   Rezaeinia SM, 2019, EXPERT SYST APPL, V117, P139, DOI 10.1016/j.eswa.2018.08.044
   Scalabrino S, 2019, IEEE T SOFTWARE ENG, V45, P68, DOI 10.1109/TSE.2017.2759112
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shah F.A., 2016, P INT WORKSH APP MAR, P15
   Shah FA, 2018, ARXIVABS181005187
   Shah FA, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON APP MARKET ANALYTICS (WAMA '19), P40, DOI 10.1145/3340496.3342756
   Shah FA, 2019, LECT NOTES COMPUT SC, V11412, P21, DOI 10.1007/978-3-030-15538-4_2
   Vasa R., 2012, AUSTR COMP HUM INT C, P241, DOI DOI 10.1145/2414536.2414577
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Vincent P., 2008, INT C MACH LEARN ICM, P1096, DOI [10.1145/1390156.1390294, DOI 10.1145/1390156.1390294]
   Zhao X, 2010, P 2010 C EMP METH NA
NR 57
TC 10
Z9 10
U1 3
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 94
DI 10.1007/s10664-021-09988-y
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UJ9IF
UT WOS:000691590700002
DA 2024-07-18
ER

PT J
AU Ma, YX
   Dey, T
   Bogart, C
   Amreen, S
   Valiev, M
   Tutko, A
   Kennard, D
   Zaretzki, R
   Mockus, A
AF Ma, Yuxing
   Dey, Tapajit
   Bogart, Chris
   Amreen, Sadika
   Valiev, Marat
   Tutko, Adam
   Kennard, David
   Zaretzki, Russell
   Mockus, Audris
TI World of code: enabling a research workflow for mining and analyzing the
   universe of open source VCS data
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software mining; Software supply chain; Software ecosystem
AB Open source software (OSS) is essential for modern society and, while substantial research has been done on individual (typically central) projects, only a limited understanding of the periphery of the entire OSS ecosystem exists. For example, how are the tens of millions of projects in the periphery interconnected through technical dependencies, code sharing, or knowledge flow? To answer such questions we: a) create a very large and frequently updated collection of version control data in the entire FLOSS ecosystems named World of Code (WoC), that can completely cross-reference authors, projects, commits, blobs, dependencies, and history of the FLOSS ecosystems and b) provide capabilities to efficiently correct, augment, query, and analyze that data. Our current WoC implementation is capable of being updated on a monthly basis and contains over 18B Git objects. To evaluate its research potential and to create vignettes for its usage, we employ WoC in conducting several research tasks. In particular, we find that it is capable of supporting trend evaluation, ecosystem measurement, and the determination of package usage. We expect WoC to spur investigation into global properties of OSS development leading to increased resiliency of the entire OSS ecosystem. Our infrastructure facilitates the discovery of key technical dependencies, code flow, and social networks that provide the basis to determine the structure and evolution of the relationships that drive FLOSS activities and innovation.
C1 [Ma, Yuxing; Dey, Tapajit; Amreen, Sadika; Tutko, Adam; Kennard, David; Mockus, Audris] Univ Tennessee, Dept Elect Engn & Comp Sci, Knoxville Min H Kao Bldg,Room 619 1520 Middle Dr, Knoxville, TN 37996 USA.
   [Bogart, Chris; Valiev, Marat] Carnegie Mellon Univ, Inst Software Res, Pittsburgh, PA 15213 USA.
   [Zaretzki, Russell] Univ Tennessee, Dept Business Analyt & Stat, Knoxville Stokely Management Ctr 916 Volunteer Bl, Knoxville, TN 37916 USA.
C3 University of Tennessee System; University of Tennessee Knoxville;
   Carnegie Mellon University; University of Tennessee System; University
   of Tennessee Knoxville
RP Ma, YX (corresponding author), Univ Tennessee, Dept Elect Engn & Comp Sci, Knoxville Min H Kao Bldg,Room 619 1520 Middle Dr, Knoxville, TN 37996 USA.
EM yma28@vols.utk.edu; tdey2@vols.utk.edu; cbogart@andrew.cmu.edu;
   samreen@vols.utk.edu; mvaliev@andrew.cmu.edu; atutko@vols.utk.edu;
   dkennard@vols.utk.edu; rzaretzk@utk.edu; audris@utk.edu
RI Mockus, Audris/AEY-3361-2022; Dey, Tapajit/AAY-9483-2020
OI Dey, Tapajit/0000-0002-1379-8539; Bogart,
   Christopher/0000-0001-8581-115X; Zaretzki, Russell/0000-0001-9769-4894;
   Mockus, Audris/0000-0002-7987-7598
FU National Science Foundation NSF [1633437, 1901102, 1925615]; Direct For
   Computer & Info Scie & Enginr; Div Of Information & Intelligent Systems
   [1633437] Funding Source: National Science Foundation; Direct For
   Computer & Info Scie & Enginr; Div Of Information & Intelligent Systems
   [1901102] Funding Source: National Science Foundation; Division Of
   Computer and Network Systems; Direct For Computer & Info Scie & Enginr
   [1925615] Funding Source: National Science Foundation
FX This work was supported by the National Science Foundation NSF Awards
   1633437, 1901102, and 1925615.
CR Abadi D.J., 2009, B IEEE COMPUTER SOC, V32, P3
   Agrawal Sanjay, 2004, ACM SIGMOD INT C MAN, P359, DOI DOI 10.1145/1007568.1007609
   Amreen S., 2019, ARXIV190103363
   Amreen S, 2020, EMPIR SOFTW ENG, V25, P1136, DOI 10.1007/s10664-019-09786-7
   [Anonymous], 2014, P 31 INT C MACH LEAR
   Bajracharya S, 2014, SCI COMPUT PROGRAM, V79, P241, DOI 10.1016/j.scico.2012.04.008
   Bevan Jennifer., 2005, ESECFSE 13, P177
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   Budde R., 1992, Prototyping, P33
   Chacon S., 2014, Pro Git
   Coelho J, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3240501
   Czerwonka J, 2013, IEEE SOFTWARE, V30, P64, DOI 10.1109/MS.2013.68
   Dey T, 2020, A dataset of bot commits, DOI 10.5281/zenodo.3610205
   Dey T, 2020, P IEEE ACM 42 INT C, P61
   Dey T, 2020, A mapping between Bot Commit, Projects, Files, and Blobs, DOI 10.5281/zenodo.3699665
   Dey T, 2020, DATASET PULL REQUEST, DOI [10.5281/zenodo.3858046, DOI 10.5281/ZENODO.3858046]
   Dey T, 2020, P 14 ACM IEEE INT S, P1
   Dey T, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P36, DOI 10.1145/3345629.3345634
   Dey T, 2020, EMPIR SOFTW ENG, V25, P1596, DOI 10.1007/s10664-019-09791-w
   Dey T, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P56, DOI 10.1145/3273934.3273941
   Dey T, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P66, DOI 10.1145/3273934.3273942
   Dey Tapajit, 2020, P IEEEACM 42 INT C S, P209, DOI DOI 10.1145/3387940.3391502
   Ducasse S., 2005, Proceedings of the 10th European Software Engineering Conference Held Jointly with 13th ACM SIGSOFT International Symposium on Foundations of Software Engineering, ESEC/FSE-13, P99
   Dyer R., 2013, P 2013 COMPANION PUB, P117
   Dyer R, 2015, ACM T SOFTW ENG METH, V25, DOI 10.1145/2803171
   Dyer R, 2014, ACM SIGPLAN NOTICES, V49, P23, DOI [10.1145/2637365.2517226, 10.1145/2517208.2517226]
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Dyer Robert, 2015, ART SCI ANAL SOFTWAR, P593
   Eastlake D., 2001, US Secure Hash Algorithm, V1
   Fry T, 2020, IEEE WORK CONF MIN S, P518, DOI 10.1145/3379597.3387500
   German Daniel., 2003, In Proceedings of the 3rd Workshop on Open Source Software Engineering, P63
   Gorton I, 2016, IEEE SOFTWARE, V33, P32, DOI 10.1109/MS.2016.47
   Gousios Georgios, 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P12, DOI 10.1109/MSR.2012.6224294
   Gousios G., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P384, DOI [DOI 10.1145/2597073.2597126, 10.1145/2597073]
   Gousios G., 2014, Proceedings of the Conference on Mining Software Repositories (MSR), MSR 2014, P368, DOI 10.1145/2597073.2597122
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Gousios G, 2009, PROC INT CONF SOFTW, P579, DOI 10.1109/ICSE.2009.5070560
   Hackbarth RL, 2010, EMPIR SOFTW ENG, V15, P219, DOI 10.1007/s10664-009-9120-1
   Howison J, 2006, INT J INF TECHNOL WE, V1, P17, DOI 10.4018/jitwe.2006070102
   Hung CS, 2020, IEEE WORK CONF MIN S, P147, DOI 10.1145/3379597.3387480
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kim S, 2006, 2006 IEEE WORKSHOP ON MULTIMEDIA SIGNAL PROCESSING, P225
   Leavitt N, 2010, COMPUTER, V43, P12, DOI 10.1109/MC.2010.58
   LICHTER H, 1994, IEEE T SOFTWARE ENG, V20, P825, DOI 10.1109/32.368126
   Ma Y., 2016, PEERJ PREPRINTS, V4
   Ma YX, 2022, IEEE T SOFTWARE ENG, V48, P485, DOI 10.1109/TSE.2020.2993758
   Mockus A, 2020, ARXIV200510176
   Mockus A., 2007, ICSE 07 INT WORKSH E
   Mockus A, 2019, ARXIV190706538
   Mockus A, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P11, DOI 10.1109/MSR.2009.5069476
   Mockus Audris, 2014, ICSE 14 FOSE
   Moniruzzaman A., 2013, Nosql database: New era of databases for big data analytics-classification, characteristics, and comparison
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nexus, 2019, REPOSITORY
   Ossher J, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P183, DOI 10.1109/MSR.2009.5069501
   Pietri Antoine, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P138, DOI 10.1109/MSR.2019.00030
   Qi Z, 2007, Patent No. [7,299,355, 7299355]
   Rajan H., 2017, MSR 17 14 INT C MIN
   Rajan H, 2015, BOA WEBSITE
   Rosch E., 2002, FDN COGNITIVE PSYCHO, P251
   Rozenberg D, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P109, DOI [10.1109/MSR.2016.020, 10.1145/2901739.2901768]
   Russell PS, 2011, TRANSPLANTATION, V91, P847, DOI 10.1097/TP.0b013e3182122f82
   Sayyad Shirabad J., 2005, The PROMISE Repository of Software Engineering Databases
   Spinellis D, 2020, IEEE WORK CONF MIN S, P523, DOI 10.1145/3379597.3387496
   Tiwari NM, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P759, DOI [10.1145/2889160/2892662, 10.1145/2889160.2892662]
   Upadhyaya G, 2018, IEEE T SOFTW ENG
   Upadhyaya G, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P39, DOI 10.1109/ICSE-NIER.2017.11
   Wang X., 2005, COLLISION SEARCH ATT
   Winkler W., 2006, TECH REP
   Winkler W. E., 1990, P SECT SURV RES METH, P354
   Zacchiroli S, 2017, IPRES 2017 14 INT C
NR 73
TC 14
Z9 14
U1 2
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2021
VL 26
IS 2
AR 22
DI 10.1007/s10664-020-09905-9
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QM5PU
UT WOS:000621832000001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fischer, S
   Michelon, GK
   Ramler, R
   Linsbauer, L
   Egyed, A
AF Fischer, Stefan
   Michelon, Gabriela Karoline
   Ramler, Rudolf
   Linsbauer, Lukas
   Egyed, Alexander
TI Automated test reuse for highly configurable software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Variability; Configurable software; Clone-and-own; Reuse; Testing
ID PRODUCT LINES
AB Dealing with highly configurable systems is generally very complex. Researchers and practitioners have conceived hundreds of different analysis techniques to deal with different aspects of configurable systems. One large focal point is the testing of configurable software. This is challenging due to the large number of possible configurations. Moreover, tests themselves are rarely configurable and instead built for specific configurations. However, existing tests need to be adapted to run on a different configuration. In this paper, we report on an experiment about automatically reusing existing tests in configurable systems. We used manually developed tests for specific configurations of three configurable systems and investigated how changing the configuration affects the tests. Subsequently, we employed an approach for automated reuse to generate new test variants (by reusing from existing ones) for combinations of previous configurations and compared their results to the ones from existing tests. Our results showed that we could directly reuse some tests for different configurations. Nonetheless, our automatically generated test variants generally yielded better results. Our generated tests had a higher or equal success rate to the existing tests in most cases. Even in the cases the success rate was equal, our generated tests generally had higher code coverage.
C1 [Fischer, Stefan; Ramler, Rudolf] Software Competence Ctr Hagenberg GmbH, Hagenberg, Austria.
   [Michelon, Gabriela Karoline; Egyed, Alexander] Johannes Kepler Univ Linz, Inst Software Syst Engn, Linz, Austria.
   [Linsbauer, Lukas] Tech Univ Carolo Wilhelmina Braunschweig, Inst Software Engn & Automot Informat, Braunschweig, Germany.
C3 Softwarepark Hagenberg; Johannes Kepler University Linz; Braunschweig
   University of Technology
RP Fischer, S (corresponding author), Software Competence Ctr Hagenberg GmbH, Hagenberg, Austria.
EM stefan.fischer@scch.at; gabriela.michelon@jku.at; rudolf.ramler@scch.at;
   l.linsbauer@tu-braunschweig.de; alexander.egyed@jku.at
RI Egyed, Alexander/E-2632-2017; Fischer, Stefan/JXL-6608-2024
OI Ramler, Rudolf/0000-0001-9903-6107
FU Austrian Ministry for Transport, Innovation and Technology (BMVIT);
   Federal Ministry for Digital and Economic Affairs (BMDW); Province of
   Upper Austria in the frame of the COMET - Competence Centers for
   Excellent Technologies Programme by Austrian Research Promotion Agency
   FFG; Linz Institute of Technology (LIT) Secure and Correct Systems Lab;
   Austrian Science Fund (FWF) [P31989]; Austrian Science Fund (FWF)
   [P31989] Funding Source: Austrian Science Fund (FWF)
FX The research reported in this paper has been funded by the Austrian
   Ministry for Transport, Innovation and Technology (BMVIT), the Federal
   Ministry for Digital and Economic Affairs (BMDW), and the Province of
   Upper Austria in the frame of the COMET - Competence Centers for
   Excellent Technologies Programme managed by Austrian Research Promotion
   Agency FFG. This research was in part funded by the Linz Institute of
   Technology (LIT) Secure and Correct Systems Lab and the Austrian Science
   Fund (FWF), grant no. P31989.
CR Aaltonen Kalle, 2010, P ACM INT C COMPANIO, P153, DOI [10.1145/1869542.1869567, DOI 10.1145/1869542.1869567]
   [Anonymous], 2015, P 19 INT C SOFTW PRO, DOI DOI 10.1145/2791060.2791108
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Cohen M. B., 2006, Software Engineering Notes, V31, P1, DOI [DOI 10.1145/1218776.1218785, 10.1145/1218776.1218785]
   Couto MV, 2011, EUR CON SFTWR MTNCE, P191, DOI 10.1109/CSMR.2011.25
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   Dubinsky Y, 2013, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2013.13
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Fischer S, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P2034, DOI 10.1145/3167132.3167350
   Fischer S, 2015, 2015 IEEE/ACM 37th IEEE International Conference on Software Engineering, Vol 2, P665, DOI 10.1109/ICSE.2015.218
   Fischer S, 2014, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSME.2014.61
   Fischer Stefan, 2019, P 23 INT SYST SOFTW, VA, P1
   Halin A, 2019, EMPIR SOFTW ENG, V24, P674, DOI 10.1007/s10664-018-9635-4
   Holling D, 2016, IEEE ICST WORKSHOP, P152, DOI 10.1109/ICSTW.2016.29
   Nguyen HV, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P907, DOI 10.1145/2568225.2568300
   Kim C.H. P., 2011, Proceedings of the Tenth International Conference on Aspect-oriented Software Development, P57
   Kim C.H. P., 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering, P257
   Krueger CW, 2006, COMMUN ACM, V49, P37, DOI 10.1145/1183236.1183262
   Krüger J, 2018, SPLC'18: PROCEEDINGS OF THE 22ND INTERNATIONAL SYSTEMS AND SOFTWARE PRODUCT LINE CONFERENCE, VOL 1, P143, DOI 10.1145/3233027.3233040
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Lopez-Herrejon R. E., 2015, 8 IEEE INT C SOFTW T, P1, DOI DOI 10.1109/ICSTW.2015.7107435
   Machado I.C., 2012, ACM SIGSOFT SOFTWARE, V37, P1, DOI DOI 10.1145/2382756.2382783
   Machado ID, 2014, INFORM SOFTWARE TECH, V56, P1183, DOI 10.1016/j.infsof.2014.04.002
   Martinez J, 2018, SPLC
   Martinez Jabier, 2017, SPLC
   Moghadam MH, 2014, 2014 4TH INTERNATIONAL CONFERENCE ON COMPUTER AND KNOWLEDGE ENGINEERING (ICCKE), P775, DOI 10.1109/ICCKE.2014.6993419
   Mukelabai M, 2018, IEEE INT CONF AUTOM, P155, DOI 10.1145/3238147.3238201
   Ramler R, 2013, IEEE ICST WORKSHOP, P122, DOI 10.1109/ICSTW.2013.21
   Reisner E., 2010, P ACM IEEE INT C SOF, V1, P445, DOI DOI 10.1145/1806799.1806864
   Skoglund M, 2004, PROC IEEE INT CONF S, P438, DOI 10.1109/ICSM.2004.1357831
   Souto S, 2017, PROC INT CONF SOFTW, P632, DOI 10.1109/ICSE.2017.64
NR 32
TC 8
Z9 8
U1 1
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 5295
EP 5332
DI 10.1007/s10664-020-09884-x
EA SEP 2020
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4BB
UT WOS:000571097200002
DA 2024-07-18
ER

PT J
AU Rousseau, G
   Di Cosmo, R
   Zacchiroli, S
AF Rousseau, Guillaume
   Di Cosmo, Roberto
   Zacchiroli, Stefano
TI Software provenance tracking at the scale of public source code
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software evolution; Open source; Clone detection; Source code tracking;
   Mining software repositories; Provenance tracking
AB We study the possibilities to track provenance of software source code artifacts within the largest publicly accessible corpus of publicly available source code, the Software Heritage archive, with over 4 billions unique source code files and 1 billion commits capturing their development histories across 50 million software projects. We perform a systematic and generic estimate of the replication factor across the different layers of this corpus, analysing how much the same artifacts (e.g., SLOC, files or commits) appear in different contexts (e.g., files, commits or source code repositories). We observe a combinatorial explosion in the number of identical source code files across different commits. To discuss the implication of these findings, we benchmark different data models for capturing software provenance information at this scale, and we identify a viable solution, based on the properties of isochrone subgraphs, that is deployable on commodity hardware, is incremental and appears to be maintainable for the foreseeable future. Using these properties, we quantify, at a scale never achieved previously, the growth rate of original, i.e. never-seen-before, source code files and commits, and find it to be exponential over a period of more than 40 years.
C1 [Rousseau, Guillaume; Di Cosmo, Roberto; Zacchiroli, Stefano] Univ Paris, Paris, France.
   [Di Cosmo, Roberto; Zacchiroli, Stefano] INRIA, Paris, France.
C3 Universite Paris Cite; Inria
RP Rousseau, G (corresponding author), Univ Paris, Paris, France.
EM guillaume.rousseau@univ-paris-diderot.fr; roberto@dicosmo.org;
   zack@irif.fr
RI rousseau, guillaume/B-9945-2019
CR Abramatic JF, 2018, COMMUN ACM, V61, P29, DOI 10.1145/3183558
   Adams B, 2019, P 16 INT C MIN SOFTW, P26
   Albert R, 2002, REV MOD PHYS, V74, P47, DOI 10.1103/RevModPhys.74.47
   Alexandru CV, 2019, EMPIR SOFTW ENG, V24, P332, DOI 10.1007/s10664-018-9630-9
   Alexandru CV, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P148, DOI 10.1109/SANER.2017.7884617
   Allamanis M, 2013, IEEE WORK CONF MIN S, P207, DOI 10.1109/MSR.2013.6624029
   [Anonymous], 2014, Proceedings of the 5th International Workshop on Emerging Trends in Software Metrics, WETSoM 2014, DOI [10.1145/2593868.2593875, DOI 10.1145/2593868.2593875]
   [Anonymous], 2006, PRINCETON STUDIES CO
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Bergin TJT, 2007, COMMUN ACM, V50, P69, DOI 10.1145/1230819.1230841
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Brooks FrederickP., 1978, The Mythical Man-Month: Essays on Softw, V1st
   Caneill M, 2017, EMPIR SOFTW ENG, V22, P1405, DOI 10.1007/s10664-016-9461-5
   Capraro M, 2017, ACM COMPUT SURV, V49, DOI 10.1145/2856821
   Crowston K, 2008, ACM COMPUT SURV, V44, P27
   Davies J, 2013, EMPIR SOFTW ENG, V18, P1195, DOI 10.1007/s10664-012-9199-7
   Di Cosmo Roberto, 2017, IPRES 2017, P1
   Dorogovtsev SN, 2002, ADV PHYS, V51, P1079, DOI 10.1080/00018730110112519
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   German DM, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P81, DOI 10.1109/MSR.2009.5069483
   Gkortzis A, 2018, IEEE WORK CONF MIN S, P18, DOI 10.1145/3196398.3196454
   Godfrey M.W., 2011, Proceedings of the 5th International Workshop on Software Clones, P65
   Godfrey MW, 2015, SCI COMPUT PROGRAM, V97, P86, DOI 10.1016/j.scico.2013.11.021
   Godfrey MW, 2009, P 6 INT WORK C MIN S
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Grieco G, 2016, CODASPY'16: PROCEEDINGS OF THE SIXTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY, P85, DOI 10.1145/2857705.2857720
   Hassan AE, 2008, 2008 FRONTIERS OF SOFTWARE MAINTENANCE, P48, DOI 10.1109/FOSM.2008.4659248
   Hatton L, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1847
   Herraiz I, 2013, ACM COMPUT SURV, V46, DOI 10.1145/2543581.2543595
   Ishio T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P339, DOI [10.1145/2901739.2901773, 10.1109/MSR.2016.042]
   Jiang J, 2017, EMPIR SOFTW ENG, V22, P547, DOI 10.1007/s10664-016-9436-6
   Lehman M. M., 1980, Journal of Systems and Software, V1, P213, DOI 10.1016/0164-1212(79)90022-0
   Leskovec J, 2016, ACM T INTEL SYST TEC, V8, DOI 10.1145/2898361
   Levin DA, 2009, RESOLVING LICENSE DE
   Li F, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2201, DOI 10.1145/3133956.3134072
   Lopes CV, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133908
   Markovtsev V, 2018, IEEE WORK CONF MIN S, P34, DOI 10.1145/3196398.3196464
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   MERKLE RC, 1988, LECT NOTES COMPUT SC, V293, P369
   Mockus A, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P11, DOI 10.1109/MSR.2009.5069476
   Pietri Antoine, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P138, DOI 10.1109/MSR.2019.00030
   Rastogi A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P102, DOI 10.1109/SANER.2016.27
   Rattan D, 2013, INFORM SOFTWARE TECH, V55, P1165, DOI 10.1016/j.infsof.2013.01.008
   Rousseau G, 2010, COMPUTER TOOL MANAGI
   Roy CK, 2007, 115 QUEENS SCH COMP
   Semura Y, 2017, ASIA PAC SOFWR ENG, P654, DOI 10.1109/APSEC.2017.80
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Spinellis D, 2017, EMPIR SOFTW ENG, V22, P1372, DOI 10.1007/s10664-016-9445-5
   Squire Megan, 2017, P 13 INT S OP COLL
   Stol KJ, 2015, IEEE SOFTWARE, V32, P60, DOI 10.1109/MS.2014.77
   Svajlenko J, 2017, PROC IEEE ACM INT C, P27, DOI 10.1109/ICSE-C.2017.3
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Thung F, 2013, EUR CON SFTWR MTNCE, P323, DOI 10.1109/CSMR.2013.41
   Tiwari NM, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P759, DOI [10.1145/2889160/2892662, 10.1145/2889160.2892662]
   Tuunanen T, 2009, AUTOMAT SOFTW ENG, V16, P455, DOI 10.1007/s10515-009-0054-z
   Vendome C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P772, DOI 10.1109/ICSE.2015.245
   Waldin R, 2009, DETERMINING DOCUMENT
   Wu YH, 2017, EMPIR SOFTW ENG, V22, P1194, DOI 10.1007/s10664-016-9487-8
   Yuxing Ma, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P143, DOI 10.1109/MSR.2019.00031
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 60
TC 14
Z9 15
U1 3
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2020
VL 25
IS 4
BP 2930
EP 2959
DI 10.1007/s10664-020-09828-5
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MD8CQ
UT WOS:000544196800015
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Morales, R
   Khomh, F
   Antoniol, G
AF Morales, Rodrigo
   Khomh, Foutse
   Antoniol, Giuliano
TI RePOR: Mimicking humans on refactoring tasks. Are we there yet?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software maintenance; Refactoring; Anti-patterns; Empirical software
   engineering studies; Program Comprehension
ID CODE; IMPACT
AB Refactoring is a maintenance activity that aims to improve design quality while preserving the behavior of a system. Several (semi)automated approaches have been proposed to support developers in this maintenance activity, based on the correction of anti-patterns, which are "poor" solutions to recurring design problems. However, little quantitative evidence exists about the impact of automatically refactored code on program comprehension, and in which context automated refactoring can be as effective as manual refactoring. Leveraging RePOR, an automated refactoring approach based on partial order reduction techniques, we performed an empirical study to investigate whether automated refactoring code structure affects the understandability of systems during comprehension tasks. (1) We surveyed 80 developers, asking them to identify from a set of 20 refactoring changes if they were generated by developers or by a tool, and to rate the refactoring changes according to their design quality; (2) we asked 30 developers to complete code comprehension tasks on 10 systems that were refactored by either a freelancer or an automated refactoring tool. To make comparison fair, for a subset of refactoring actions that introduce new code entities, only synthetic identifiers were presented to practitioners. We measured developers' performance using the NASA task load index for their effort, the time that they spent performing the tasks, and their percentages of correct answers. Our findings, despite current technology limitations, show that it is reasonable to expect a refactoring tools to match developer code. Indeed, results show that for 3 out of the 5 anti-pattern types studied, developers could not recognize the origin of the refactoring (i.e., whether it was performed by a human or an automatic tool). We also observed that developers do not prefer human refactorings over automated refactorings, except when refactoring Blob classes; and that there is no statistically significant difference between the impact on code understandability of human refactorings and automated refactorings. We conclude that automated refactorings can be as effective as manual refactorings. However, for complex anti-patterns types like the Blob, the perceived quality achieved by developers is slightly higher.
C1 [Morales, Rodrigo] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
   [Khomh, Foutse; Antoniol, Giuliano] Ecole Polytechn Montreal, Dept Genie Informat & Genie Logicel, Montreal, PQ, Canada.
C3 Concordia University - Canada; Universite de Montreal; Polytechnique
   Montreal
RP Morales, R (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
EM rodrigomorales2@acm.org; foutse.khomh@polymtl.ca;
   giulio.antoniol@polymtl.ca
RI Alvarado, Rodrigo Morales/AAR-2780-2021
OI Alvarado, Rodrigo Morales/0000-0002-1350-0560
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   [Anonymous], REPOR MIMIKING HUMAN
   [Anonymous], 2004, XP Ser
   [Anonymous], 2006, IASTED C SOFTW ENG
   Arima R, 2018, INT C PROGRAM COMPRE, P316, DOI 10.1145/3196321.3196362
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Cliff N., 2014, ORDINAL METHODS BEHA
   Deligiannis I, 2004, J SYST SOFTWARE, V72, P129, DOI 10.1016/S0164-1212(03)00240-1
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fraser G, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685612
   Griswold W. G., 1993, ACM Transactions on Software Engineering and Methodology, V2, P228, DOI 10.1145/152388.152389
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Kataoka Y, 2002, PROC IEEE INT CONF S, P576, DOI 10.1109/ICSM.2002.1167822
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Moghadam IH, 2012, EUR CON SFTWR MTNCE, P43, DOI 10.1109/CSMR.2012.15
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Morales R, 2018, J SYST SOFTWARE, V145, P25, DOI 10.1016/j.jss.2018.07.076
   Morales R, 2017, J SYST SOFTWARE, V128, P236, DOI 10.1016/j.jss.2016.05.042
   Morales R, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P24, DOI 10.1109/SANER.2016.23
   Moser R, 2008, LECT NOTES COMPUT SC, V5082, P252
   Murphy-Bill E, 2008, IEEE SOFTWARE, V25, P38, DOI 10.1109/MS.2008.123
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Negara S, 2013, LECT NOTES COMPUT SC, V7920, P552, DOI 10.1007/978-3-642-39038-8_23
   Opdyke William F., 1992, THESIS
   Ouni A, 2015, J SYST SOFTWARE, V105, P18, DOI 10.1016/j.jss.2015.03.040
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Parnas D. L., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P279, DOI 10.1109/ICSE.1994.296790
   Romano J., 2006, P ANN M SO ASS I RES
   Seng O, 2006, GECCO 2006: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOL 1 AND 2, P1909
   Sharek D., 2011, P HUM FACT ERG SOC A, P1375, DOI [10.1177/1071181311551286, DOI 10.1177/1071181311551286]
   Sheskin J.D., 2004, Handbook of Parametric and Nonparametric Statistical Procedures, VThird
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Szoke G, 2015, PROC IEEE INT CONF S, P429, DOI 10.1109/ICSM.2015.7332494
   Turing A. M., 1950, Mind, London, N. S., V59, P433, DOI [DOI 10.1007/978-1-4020-6710-5_3, DOI 10.1093/MIND/LIX.236.433]
   Vakilian M, 2012, PROC INT CONF SOFTW, P233, DOI 10.1109/ICSE.2012.6227190
   Wohlin C., 2012, Experimentation in Software Engineering
   Xing ZC, 2006, PROC IEEE INT CONF S, P458
NR 41
TC 2
Z9 3
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2020
VL 25
IS 4
BP 2960
EP 2996
DI 10.1007/s10664-020-09826-7
EA JUN 2020
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MD8CQ
UT WOS:000539338800001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Berger, T
   Steghöfer, JP
   Ziadi, T
   Robin, J
   Martinez, J
AF Berger, Thorsten
   Steghofer, Jan-Philipp
   Ziadi, Tewfik
   Robin, Jacques
   Martinez, Jabier
TI The state of adoption and the challenges of systematic variability
   management in industry
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Variability management; Software product lines; Multiple-case study;
   Challenges
ID SOFTWARE PRODUCT LINES; EVOLUTION; REUSE; MODEL
AB Handling large-scale software variability is still a challenge for many organizations. After decades of research on variability management concepts, many industrial organizations have introduced techniques known from research, but still lament that pure textbook approaches are not applicable or efficient. For instance, software product line engineering-an approach to systematically develop portfolios of products-is difficult to adopt given the high upfront investments; and even when adopted, organizations are challenged by evolving their complex product lines. Consequently, the research community now mainly focuses on re-engineering and evolution techniques for product lines; yet, understanding the current state of adoption and the industrial challenges for organizations is necessary to conceive effective techniques. In this multiple-case study, we analyze the current adoption of variability management techniques in twelve medium- to large-scale industrial cases in domains such as automotive, aerospace or railway systems. We identify the current state of variability management, emphasizing the techniques and concepts they adopted. We elicit the needs and challenges expressed for these cases, triangulated with results from a literature review. We believe our results help to understand the current state of adoption and shed light on gaps to address in industrial practice.
C1 [Berger, Thorsten; Steghofer, Jan-Philipp] Chalmers Univ Gothenburg, Gothenburg, Sweden.
   [Ziadi, Tewfik] Sorbonne Univ, Paris, France.
   [Robin, Jacques] Univ Paris 1 Pantheon Sorbonne, Paris, France.
   [Martinez, Jabier] Tecnalia, Bilbao, Spain.
C3 Chalmers University of Technology; Sorbonne Universite
RP Berger, T (corresponding author), Chalmers Univ Gothenburg, Gothenburg, Sweden.
EM thorsten.berger@chalmers.se; jan-philipp.steghofer@chalmers.se;
   tewfik.ziadi@lip6.fr; jacques.robin@univ-paris1.fr;
   jabier.martinez@tecnalia.com
RI Steghöfer, Jan-Philipp/CAC-0554-2022; Steghöfer,
   Jan-Philipp/AAM-2555-2020
OI Steghöfer, Jan-Philipp/0000-0003-1694-0972; Steghöfer,
   Jan-Philipp/0000-0003-1694-0972; Martinez, Jabier/0000-0001-8742-9640
FU University of Gothenburg
FX Open access funding provided by University of Gothenburg.
CR Abukwaik H, 2018, ICSME NIER TRACK
   Acher M, 2011, P 5 EUR C SOFTW ARCH
   Acher M, 2013, VaMoS, P20
   Acher M, 2010, P 2 INT C SOFTW LANG
   Acher M, 2011, P 2011 26 IEEE ACM I
   Acher M, 2013, SCI COMPUT PROGRAM, V78, P657, DOI 10.1016/j.scico.2012.12.004
   Akesson J, 2019, SPLC
   Ali MS, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P275, DOI 10.1109/SEAA.2009.89
   Andam Berima, 2017, P 11 INT WORKSH VAR, P100, DOI DOI 10.1145/3023956.3023967
   Andersson J, 2005, IEE P-SOFTW, V152, P15, DOI 10.1049/ip-sen:20041007
   [Anonymous], 2015, P 19 INT C SOFTW PRO, DOI DOI 10.1145/2791060.2791108
   [Anonymous], 2000, Generative programming: methods, tools, and applications
   Antkiewicz M, 2014, ICSE
   Apel S., 2013, Feature-Oriented Software Development: Concepts and Implementation
   Apel S, 2009, J OBJECT TECHNOL, V8, P49, DOI 10.5381/jot.2009.8.5.c5
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P2972, DOI 10.1007/s10664-017-9499-z
   Bartholdt J., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P232, DOI 10.1109/SPLC.2011.16
   Bass L., 2013, SOFTWARE ARCHITECTUR
   Bastos JF, 2017, J SYST SOFTWARE, V131, P112, DOI 10.1016/j.jss.2017.05.052
   Bayer J, 2006, GPCE
   Bécan G, 2016, EMPIR SOFTW ENG, V21, P1794, DOI 10.1007/s10664-014-9357-1
   Behjati R, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2581376
   Behringer B, 2017, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2017.58
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Berger T, 2014, VAMOS
   Berger T, 2019, 1 INT WORKSH LANG MO
   Berger T, 2014, MODELS
   Berger T., 2019, DAGSTUHL REPORTS
   Berger T, 2010, SPLC
   Berger T, 2014, SPLC
   Berger T., 2010, P INT C AUT SOFTW EN, P73, DOI DOI 10.1145/1858996.1859010
   Berger T, 2014, INFORM SOFTWARE TECH, V56, P1520, DOI 10.1016/j.infsof.2014.05.005
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Berger Thorsten, 2013, 7 INT WORKSH VAR MOD, DOI DOI 10.1145/2430502.2430513
   Bergey J, 2004, TECHNICAL REPORT
   Beuche D, 2004, PURE VARIANTS ECLIPS
   Bockle G., 2002, Software Product Lines. Second International Conference, SPLC 2. Proceedings (Lecture Notes in Computer Science Vol. 2370), P49
   Bosch J., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P544, DOI 10.1109/ICSE.1999.841044
   Bosch J, 1999, INT FED INFO PROC, V12, P321
   Bosch J, 2002, SPLC
   Bosch J., 2000, Design and Use of Software Architectures: Adopting and Evolving a Product-Line Approach
   Brownsword L, 1996, TECHNICAL REPORT
   Buhrdorf R, 2003, INT WORKSH SOFTW PRO, P317
   Businge J, 2018, PROC IEEE INT CONF S, P625, DOI 10.1109/ICSME.2018.00072
   Chastek G., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P277, DOI 10.1109/SPLC.2011.46
   Chen L, 2009, SPLC 09
   Chen L, 2010, SPLC 10
   Chen LP, 2011, INFORM SOFTWARE TECH, V53, P344, DOI 10.1016/j.infsof.2010.12.006
   Clements P, 2001, TECHNICAL REPORT
   Clements P, 2002, TECHNICAL REPORT
   Clements P.C., 2005, Technical report
   Cohen MB, 2007, ISSTA
   Cohen S, 2004, TECHNICAL REPORT
   Cohen S, 2002, TECHNICAL REPORT
   Czarnecki K, 2012, VAMOS
   Davril Jean-Marc., 2013, JOINT M EUR SOFTW EN, P290, DOI DOI 10.1145/2491411.2491455
   Debbiche J, 2019, SPLC
   Dietrich C., 2012, Em: Proceedings of the 16th International Software Product Line Conference-Volume, V1, P21
   Dikel D, 1997, COMPUTER, V30, P49, DOI 10.1109/2.607064
   Dordowsky F., 2009, Proceedings of the 13th International Software Product Line Conference, P265
   Dubinsky Yael, 2013, CSMR
   Duc AN, 2014, P 8 ACM IEEE INT S E
   Dziobek C, 2008, MACDE
   Eklund U, 2013, SCI COMPUT PROGRAM, V78, P2347, DOI 10.1016/j.scico.2012.06.008
   El-Sharkawy S, 2019, INFORM SOFTWARE TECH, V106, P1, DOI 10.1016/j.infsof.2018.08.015
   Entekhabi S, 2019, 23 INT SYST SOFTW PR
   Etikan I., 2016, AM J THEORETICAL APP, V5, P1, DOI [DOI 10.11648/J.AJTAS.20160501.11, 10.11648/j.atas.20160501.1]
   Fagri TorErlend., 2006, Software Product Lines, P275, DOI DOI 10.1007/978-3-540-33253-4_8
   Fantechi A, 2013, SPLC
   Faulk SR, 2001, P 5 IEEE INT S REQ E
   Faust D, 2003, SOFTWARE PRACT EXPER, V33, P933, DOI 10.1002/spe.530
   Fenske W, 2014, VAMOS
   Fischer S, 2014, PROC IEEE INT CONF S, P391, DOI 10.1109/ICSME.2014.61
   Flores R, 2012, P SPLC
   Fogdal T., 2016, P SPLC, P252
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Ganesan Dharmalingam., 2009, SPLC, P161
   Gannod GC, 2001, IEEE IPCCC, P145, DOI 10.1109/IPCCC.2001.918647
   Ganz C, 1998, INT WORKSH ARCH REAS
   Garcia S, 2019, PROCEEDINGS OF THE 13TH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS '19), DOI 10.1145/3302333.3302350
   Gustavsson H, 2010, SPLC
   Habli I, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P193, DOI 10.1109/SPLINE.2007.37
   Hardung B, 2004, P 4 ACM INT C EMB SO
   Haugen O., 2013, Proceedings of the 17th International Software Product Line Conference, P277
   Hellebrand R, 2017, 21ST INTERNATIONAL SYSTEM & SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2017), VOL 2, P53, DOI 10.1145/3109729.3109735
   Hess KD, 2008, CONQUEST
   Hetrick W. A., 2006, COMP 21 ACM SIGPLAN, P798, DOI DOI 10.1145/1176617.1176726
   Jensen P, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P35, DOI 10.1109/SPLINE.2007.25
   Jepsen HP, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P203
   Jepsen HP, 2009, SPLC
   Ji Wenbin, 2015, INT SYST SOFTW PROD, P61, DOI DOI 10.1145/2791060.2791107
   Johansen Martin Fagereng, 2012, Testing Software and Systems. 24th IFIP WG 6.1 International Conference (ICTSS 2012). Proceedings, P39, DOI 10.1007/978-3-642-34691-0_5
   John I, 2001, IESE02600D
   Kästner C, 2012, ACM SIGPLAN NOTICES, V47, P773, DOI 10.1145/2398857.2384673
   Kang K. C., 1990, Technical Report
   Kastner C, 2009, P ICSE 09
   Kitchenham B, 2002, ACM SIGSOFT SOFTWARE
   Kolassa C, 2015, P ANN HICSS, P5373, DOI 10.1109/HICSS.2015.632
   Kolb R, 2005, PROC IEEE INT CONF S, P369
   Krueger C, 2007, P OOPSLA 07 COMP
   Krueger CW, 2008, SPLC 2008: 12TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P297, DOI 10.1109/SPLC.2008.36
   Krueger CW, 2006, SPLC 2006: 10th International Software Product Line Conference, Proceedings, P95, DOI 10.1109/SPLINE.2006.1691581
   Krueger J, 2019, 27 ACM SIGSOFT INT S
   Krueger J., 2018, VAMOS
   Krueger J, 2019, J SYSTEMS SOFTWARE
   Kruger J., 2018, Features and How to Find Them: A Survey of Manual Feature Location
   Kruger Jacob., 2016, Proceedings of the 20th International Systems and Software Product Line Conference on - SPLC'16, P354, DOI [10.1145/2934466.2962731, DOI 10.1145/2934466.2962731]
   Kruger Jacob, 2017, SPLC
   Lanman J, 2013, P 17 INT SOFTW PROD, P244, DOI [10.1145/2491627.2491649, DOI 10.1145/2491627.2491649]
   Leal B, 2010, INTERNET OF THINGS-BOOK, P3, DOI 10.1007/978-1-4419-1674-7_1
   Li D, 2009, P INT COMP SOFTW APP, P53, DOI 10.1109/COMPSAC.2009.17
   Liang L, 2005, MED IMAGING 2005 PAC
   Liebig J, 2013, ESEC FSE
   Lillack M, 2019, 41 INT C SOFTW ENG I
   Linaker J., 2015, Guidelines for Conducting Surveys in Software Engineering
   Linsbauer L, 2017, PROCEEDINGS OF THE 16TH ACM SIGPLAN INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING: CONCEPTS AND EXPERIENCES (GPCE'17), P49, DOI 10.1145/3136040.3136054
   Lok P., 2004, Journal of Management Development, V23, P321, DOI 10.1108/02621710410529785
   Marimuthu C, 2017, 21 INT SYST SOFTW PR
   Martinez J, 2017, HUM-COMPUT INT-SPRIN, P81, DOI 10.1007/978-3-319-60947-8_3
   Martinez J, 2014, 2014 SECOND IEEE WORKING CONFERENCE ON SOFTWARE VISUALIZATION (VISSOFT), P50, DOI 10.1109/VISSOFT.2014.18
   Martinez Jabier, 2015, P 19 INT C SOFTW PRO, P101, DOI DOI 10.1145/2791060.2791086
   Matsumoto Y, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P163, DOI 10.1109/SPLINE.2007.26
   Melo J., 2016, INT C SOFTW ENG ICSE
   Midtgaard J, 2014, MODULARITY
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   Mohagheghi P, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/1363102.1363104
   Molleri JS, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962619
   Montalvillo L, 2015, SPLC
   Montalvillo L, 2017, SPLC
   Mukelabai M, 2018, 33 IEEE ACM INT C AU
   Mukelabai M, 2018, 40 INT C SOFTW ENG I
   Nadi S., 2015, IEEE Transactions on Software Engineering
   Nadi Sarah., 2014, ICSE
   Nesic D, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P62, DOI 10.1145/3338906.3338974
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Obbink H, 2000, COPA COMPONENT ORIEN
   Passos L., 2015, MODULARITY
   Passos L, 2021, IEEE T SOFTWARE ENG, V47, P146, DOI 10.1109/TSE.2018.2884911
   Passos Leonardo, 2013, VAMOS
   Pech D, 2009, P INT SOFTW PROD LIN, P285
   Perrouin G, 2010, ICST
   Pfofe Tristan, 2016, P 20 INT SYST SOFTW, DOI DOI 10.1145/2934466.2962726
   Pohjalainen P, 2011, P 2011 15 INT SOFTW
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   POTTERS L, 2018, TECHNICAL REPORT, DOI [10.2760/802408x, DOI 10.2760/802408X]
   Quilty G., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P251, DOI 10.1109/SPLC.2011.30
   Rabiser R, 2019, INFORM SOFTWARE TECH, V111, P86, DOI 10.1016/j.infsof.2019.03.013
   Rauf R, 2011, P 2011 IEEE 19 INT R
   Romero D, 2015, LECT NOTES COMPUT SC, V9278, P294, DOI 10.1007/978-3-319-23727-5_25
   Rosel A, 1998, P 2 INT ESPRIT ARES
   Rosenmuller Marko., 2010, VAMOS, P123
   Rubin J, 2013, ICSE
   Rubin J., 2013, SPLC, P101
   Rubin J, 2012, SPLC
   Sattler F, 2018, AUTOMAT SOFTW ENG, V25, P315, DOI 10.1007/s10515-017-0228-z
   Schaefer I, 2010, LECT NOTES COMPUT SC, V6287, P77, DOI 10.1007/978-3-642-15579-6_6
   Schmid K, 2005, ICSE
   Schulze Michael, 2015, SOFTW ENG WORKSH, P71
   Schulze S, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P9, DOI 10.1145/2866614.2866616
   Seidl C, 2017, 21 INT SYST SOFTW PR
   Seiler M., 2017, REFSQ
   Sellier D, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P54, DOI 10.1109/SPLINE.2007.14
   Sharp DC, 1998, 17 DASC AIAA IEEE SA
   She S, 2014, INFORM SOFTWARE TECH, V56, P1122, DOI 10.1016/j.infsof.2014.01.012
   She Steven, 2011, ICSE
   Sinkala ZT, 2018, P 12 EUR C SOFTW ARC
   Slegers W.J., 2009, P 13 INT SOFTWARE PR, P257
   Software Engineering Institute, 2008, CAT SOFTW PROD LIN
   Stanciulescu S, 2016, P 32 INT C SOFTW MAI
   Stanciulescu S, 2015, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSM.2015.7332461
   STAPLES M, 2004, P 11 AS PAC SOFTW EN
   Steger M, 2004, SPLC
   Stoll P, 2009, P 13 INT SOFTW PROD
   Svahnberg M, 1999, J SOFTW MAINT-RES PR, V11, P391, DOI 10.1002/(SICI)1096-908X(199911/12)11:6<391::AID-SMR199>3.0.CO;2-8
   Takebe Y, 2009, SPLC
   Thiel S, 2001, SAE
   Thorn C, 2008, MISE
   Thörn C, 2010, INFORM SOFTWARE TECH, V52, P411, DOI 10.1016/j.infsof.2009.10.009
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Tischer C, 2011, SPLC
   Toft P, 2000, KLUWER INT SER ENG C, V576, P111
   Vale T, 2017, INFORM SOFTWARE TECH, V84, P1, DOI 10.1016/j.infsof.2016.12.004
   van der Linden F, 2002, IEEE SOFTWARE, V19, P41, DOI 10.1109/MS.2002.1020286
   van der Linden F. J., 2007, Software Product Lines in Action: the Best Industrial Practice in Product Line Engineering
   VANGURP J, 2001, P WORK IEEE IFIP C S
   Verlage M, 2005, ICSE
   Voelter Markus, 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P70, DOI 10.1109/SPLC.2011.25
   von Rhein A, 2016, J LOG ALGEBR METHODS, V85, P125, DOI 10.1016/j.jlamp.2015.06.007
   Xing ZZ, 2018, CHINESE PHYS C, V42, DOI 10.1088/1674-1137/42/10/103105
   Yin R.K., 2003, CASE STUDY RES DESIG
   Zhang WS, 2005, LECT NOTES COMPUT SC, V3714, P57
NR 192
TC 43
Z9 44
U1 1
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2020
VL 25
IS 3
SI SI
BP 1755
EP 1797
DI 10.1007/s10664-019-09787-6
EA APR 2020
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LL7FD
UT WOS:000523408000001
OA hybrid
DA 2024-07-18
ER

PT J
AU Hora, A
   Robbes, R
AF Hora, Andre
   Robbes, Romain
TI Characteristics of method extractions in Java: a large scale empirical
   study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Refactoring; Extract method; Software repository mining; Software
   evolution; Empirical software engineering
ID IDENTIFICATION; REFACTORINGS
AB Extract method is the "Swiss army knife" of refactorings: developers perform method extraction to introduce alternative signatures, decompose long code, improve testability, among many other reasons. Although the rationales behind method extraction are well explored, we are not yet aware of its characteristics. Assessing this information can provide the basis to better understand this important refactoring operation as well as improve refactoring tools and techniques based on the actual behavior of developers. In this paper, we assess characteristics of the extract method refactoring. We rely on a state-of-the-art technique to detect method extraction, and analyze over 70K instances of this refactoring, mined from 124 software systems. We investigate five aspects of this operation: magnitude, content, transformation, size, and degree. We find that (i) the extract method is among the most popular refactorings; (ii) extracted methods are over represented on operations related to creation, validation, and setup; (iii) methods that are targets of the extractions are 2.2x longer than the average, and they are reduced by one statement after the extraction; and (iv) single method extraction represents most, but not all, of the cases. We conclude by proposing improvements to refactoring detection, suggestion, and automation tools and techniques to support both practitioners and researchers.
C1 [Hora, Andre] Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, MG, Brazil.
   [Robbes, Romain] Free Univ Bozen Bolzano, Bolzano, Italy.
C3 Universidade Federal de Minas Gerais; Free University of Bozen-Bolzano
RP Hora, A (corresponding author), Univ Fed Minas Gerais, Dept Comp Sci, Belo Horizonte, MG, Brazil.
EM andrehora@dcc.ufmg.br; rrobbes@unibz.it
RI Hora, Andre/HTP-0699-2023; Robbes, Romain/H-3771-2013
OI Hora, Andre/0000-0003-4900-1330; 
CR Alhindawi N, 2013, PROC IEEE INT CONF S, P300, DOI 10.1109/ICSM.2013.41
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Ambler SW, 2006, ADD-WES SIGNAT SER, P1
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Bavota G, 2014, EMPIR SOFTW ENG, V19, P1617, DOI 10.1007/s10664-013-9256-x
   Bavota G, 2014, IEEE T SOFTWARE ENG, V40, P671, DOI 10.1109/TSE.2013.60
   Bavota Gabriele., 2010, Proceedings of the IEEE International Conference on Software Maintenance ICSM, P1
   Borges H, 2018, J SYS SOFTW
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Copeland Tom, 2005, PMD applied, V10
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Dragan N., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P520, DOI 10.1109/ICSM.2011.6080822
   Dragan N, 2006, PROC IEEE INT CONF S, P24
   Dragan N, 2009, PROC IEEE INT CONF S, P567, DOI 10.1109/ICSM.2009.5306394
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Hora A, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1102, DOI 10.1145/3180155.3180212
   Hora A, 2018, SOFTWARE QUAL J, V26, P161, DOI 10.1007/s11219-016-9344-4
   Hora A, 2015, PROC IEEE INT CONF S, P251, DOI 10.1109/ICSM.2015.7332471
   Host EW, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P193, DOI 10.1109/SCAM.2007.18
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kim M., 2012, P ACM SIGSOFT 20 INT, P1
   Kim M., 2010, PROC 18 ACM SIGSOFT, P371, DOI [10.1145/1882291.1882353, DOI 10.1145/1882291.1882353]
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Lippert M., 2006, Refactoring in large software projects: performing complex restructurings successfully
   Livshits V.B., 2005, ESEC SIGSOFT FSE, P296, DOI [DOI 10.1145/1095430.1081754, DOI 10.1145/1081706.1081754]
   Lu HH, 2010, MOLECULAR ENVIRONMENTAL SOIL SCIENCE AT THE INTERFACES IN THE EARTH'S CRITICAL ZONE, P325, DOI 10.1007/978-3-642-05297-2_95
   Mao HF, 2014, C OPTOELECTR MICRO, P149, DOI 10.1109/COMMAD.2014.7038677
   Martin Robert C, 2009, Clean Code: a Handbook of Agile Software Craftsmanship
   Meng SC, 2012, PROC INT CONF SOFTW, P353, DOI 10.1109/ICSE.2012.6227179
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Murphy-Hill E, 2015, IEEE T SOFTWARE ENG, V41, P65, DOI 10.1109/TSE.2014.2357438
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Murphy-Hill E, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P421, DOI 10.1145/1368088.1368146
   Murphy-Hill Emerson, 2008, IEEE SOFTWARE, V25, P5
   Negara S, 2013, LECT NOTES COMPUT SC, V7920, P552, DOI 10.1007/978-3-642-39038-8_23
   ROBERTS D, 1997, THEORY PRACTICE OBJE, V3
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Simon F, 2001, FIFTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P30, DOI 10.1109/CSMR.2001.914965
   Terra R, 2018, J SYST SOFTWARE, V138, P19, DOI 10.1016/j.jss.2017.11.073
   Tourwé T, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P91, DOI 10.1109/CSMR.2003.1192416
   Tsantalis N., 2013, C CTR ADV STUD COLL, P132, DOI [10.5555/2555523.2555539, DOI 10.5555/2555523.2555539]
   Tsantalis N, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P483, DOI 10.1145/3180155.3180206
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Vakilian M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1106, DOI 10.1145/2568225.2568282
   Vasilescu B, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3106237.3106289
   Vassallo C, 2019, SCI COMPUT PROGRAM, V180, P1, DOI 10.1016/j.scico.2019.05.002
   Wang Y, 2009, PROC IEEE INT CONF S, P413, DOI 10.1109/ICSM.2009.5306290
   Weissgerber P, 2006, IEEE INT CONF AUTOM, P231
   Xavier L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P138, DOI 10.1109/SANER.2017.7884616
   Xing ZC, 2006, WORK CONF REVERSE EN, P263
NR 55
TC 10
Z9 11
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2020
VL 25
IS 3
SI SI
BP 1798
EP 1833
DI 10.1007/s10664-020-09809-8
EA MAR 2020
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LR5OS
UT WOS:000519497500001
DA 2024-07-18
ER

PT J
AU Ochodek, M
   Hebig, R
   Meding, W
   Frost, G
   Staron, M
AF Ochodek, Miroslaw
   Hebig, Regina
   Meding, Wilhelm
   Frost, Gert
   Staron, Miroslaw
TI Recognizing lines of code violating company-specific coding guidelines
   using machine learning A Method and Its Evaluation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Measurement; Machine learning; Action research; Code reviews
AB Software developers in big and medium-size companies are working with millions of lines of code in their codebases. Assuring the quality of this code has shifted from simple defect management to proactive assurance of internal code quality. Although static code analysis and code reviews have been at the forefront of research and practice in this area, code reviews are still an effort-intensive and interpretation-prone activity. The aim of this research is to support code reviews by automatically recognizing company-specific code guidelines violations in large-scale, industrial source code. In our action research project, we constructed a machine-learning-based tool for code analysis where software developers and architects in big and medium-sized companies can use a few examples of source code lines violating code/design guidelines (up to 700 lines of code) to train decision-tree classifiers to find similar violations in their codebases (up to 3 million lines of code). Our action research project consisted of (i) understanding the challenges of two large software development companies, (ii) applying the machine-learning-based tool to detect violations of Sun's and Google's coding conventions in the code of three large open source projects implemented in Java, (iii) evaluating the tool on evolving industrial codebase, and (iv) finding the best learning strategies to reduce the cost of training the classifiers. We were able to achieve the average accuracy of over 99% and the average F-score of 0.80 for open source projects when using ca. 40K lines for training the tool. We obtained a similar average F-score of 0.78 for the industrial code but this time using only up to 700 lines of code as a training dataset. Finally, we observed the tool performed visibly better for the rules requiring to understand a single line of code or the context of a few lines (often allowing to reach the F-score of 0.90 or higher). Based on these results, we could observe that this approach can provide modern software development companies with the ability to use examples to teach an algorithm to recognize violations of code/design guidelines and thus increase the number of reviews conducted before the product release. This, in turn, leads to the increased quality of the final software.
C1 [Ochodek, Miroslaw] Poznan Univ Tech, Poznan, Poland.
   [Ochodek, Miroslaw] Univ Gothenburg, Gothenburg, Sweden.
   [Hebig, Regina; Staron, Miroslaw] Chalmers Univ Gothenburg, Comp Sci & Engn Dept, Gothenburg, Sweden.
   [Meding, Wilhelm] Ericsson AB, Gothenburg, Sweden.
   [Frost, Gert] Grundfos, Bjerringbro, Denmark.
C3 Poznan University of Technology; University of Gothenburg; Chalmers
   University of Technology; Ericsson; Grundfos
RP Ochodek, M (corresponding author), Poznan Univ Tech, Poznan, Poland.; Ochodek, M (corresponding author), Univ Gothenburg, Gothenburg, Sweden.
EM miroslaw.ochodek@cs.put.poznan.pl
RI ; Hebig, Regina/B-5284-2015
OI Ochodek, Miroslaw/0000-0002-9103-717X; Hebig, Regina/0000-0002-1459-2081
CR Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   [Anonymous], 2016, REAL WORLD RES
   Axelsson S, 2009, 21 INT C SOFTW ENG K
   Baskerville RL, 1996, J INFORM TECHNOL, V11, P235, DOI 10.1080/026839696345289
   Brar HK, 2015, INT J, V5, P1085
   Brun Y, 2004, PROC INT CONF SOFTW, P480, DOI 10.1109/ICSE.2004.1317470
   Chappell T, 2017, 2017 IEEE INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE), P21, DOI 10.1109/MALTESQUE.2017.7882012
   Dagan I., 1995, Machine Learning. Proceedings of the Twelfth International Conference on Machine Learning, P150
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Emanuelsson P, 2008, ELECTRON NOTES THEOR, V217, P5, DOI 10.1016/j.entcs.2008.06.039
   Fatima A, 2018, INT BHURBAN C APPL S, P465
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fontana FA, 2013, PROC IEEE INT CONF S, P396, DOI 10.1109/ICSM.2013.56
   Freitas A.A., 2013, ACM SIGKDD EXPLORATI, V15, P1, DOI [10.1145/2594473.2594475, DOI 10.1145/2594473.2594475]
   Fu YF, 2013, KNOWL INF SYST, V35, P249, DOI 10.1007/s10115-012-0507-8
   Goodman P.S., 1980, Research in organizational behavior, VII, P215
   IRWIN W, 2001, NZ J COMPUT, V8, P26
   Mantere M, 2009, 2009 THIRD INTERNATIONAL CONFERENCE ON EMERGING SECURITY INFORMATION, SYSTEMS, AND TECHNOLOGIES, P15, DOI 10.1109/SECURWARE.2009.10
   Maruping LM, 2009, EUR J INFORM SYST, V18, P355, DOI 10.1057/ejis.2009.24
   Masters J., 1995, ACTION RES ELECT REA, V22, P2005
   Mi Q, 2018, INFORM SOFTWARE TECH, V104, P60, DOI 10.1016/j.infsof.2018.07.006
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Novak J., 2010, 2010 33rd International Convention on Information and Communication Technology, Electronics and Microelectronics (MIPRO), P418
   Ochodek M, 2017, 2017 IEEE INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE), P14, DOI 10.1109/MALTESQUE.2017.7882011
   Shaukat R, 2018, INT BHURBAN C APPL S, P455, DOI 10.1109/IBCAST.2018.8312264
   Singh D, 2017, S VIS LANG HUM CEN C, P101, DOI 10.1109/VLHCC.2017.8103456
   Smit M., 2011, TR1106 U ALB DEP COM
   SUSMAN GI, 1978, ADMIN SCI QUART, V23, P582, DOI 10.2307/2392581
   Torunski E, 2017, 2017 TWELFTH INTERNATIONAL CONFERENCE ON DIGITAL INFORMATION MANAGEMENT (ICDIM), P6, DOI 10.1109/ICDIM.2017.8244675
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 32
TC 10
Z9 10
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2020
VL 25
IS 1
BP 220
EP 265
DI 10.1007/s10664-019-09769-8
EA NOV 2019
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA KP0WS
UT WOS:000496247900001
OA hybrid
DA 2024-07-18
ER

PT J
AU Vassallo, C
   Proksch, S
   Zemp, T
   Gall, HC
AF Vassallo, Carmine
   Proksch, Sebastian
   Zemp, Timothy
   Gall, Harald C.
TI Every build you break: developer-oriented assistance for build failure
   resolution
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Agile software development; Software development
   tools; Build break; Summarization; Error recovery
AB Continuous integration is an agile software development practice. Instead of integrating features right before a release, they are constantly being integrated into an automated build process. This shortens the release cycle, improves software quality, and reduces time to market. However, the whole process will come to a halt when a commit breaks the build, which can happen for several reasons, e.g., compilation errors or test failures, and fixing the build suddenly becomes a top priority. Developers not only have to find the cause of the build break and fix it, but they have to be quick in all of it to avoid a delay for others. Unfortunately, these steps require deep knowledge and are often time-consuming. To support developers in fixing a build break, we propose Bart, a tool that summarizes the reasons for Maven build failures and suggests possible solutions found on the internet. We will show in a case study with 17 participants that developers find Bart useful to understand build breaks and that using Bart substantially reduces the time to fix a build break, on average by 37%. We have also conducted a qualitative study to better understand the workflows and information needs when fixing builds. We found that typical workflows differ substantially between various error categories, and that several uncommon build errors are both very hard to investigate and to fix. These findings will be useful to inform future research in this area.
C1 [Vassallo, Carmine; Proksch, Sebastian; Zemp, Timothy; Gall, Harald C.] Univ Zurich, Zurich, Switzerland.
C3 University of Zurich
RP Vassallo, C (corresponding author), Univ Zurich, Zurich, Switzerland.
EM vassallo@ifi.uzh.ch; proksch@ifi.uzh.ch; timothy.zemp@uzh.ch;
   gall@ifi.uzh.ch
OI Gall, Harald/0000-0002-3874-5628; Vassallo, Carmine/0000-0003-0495-6803
FU Swiss National Science Foundation [200021-166275]; Swiss National
   Science Foundation (SNF) [200021_166275] Funding Source: Swiss National
   Science Foundation (SNF)
FX We would like to thank all the study participants. C. Vassallo and H.
   Gall acknowledge the support of the Swiss National Science Foundation
   for their project SURF-MobileAppsData (SNF Project No. 200021-166275).
CR Active JPA, 2018, SIMPL ACT REC PATT L
   ANNIE TT YING., 2013, P 2013 9 JOINT M FDN, P655
   [Anonymous], P 14 INT C MIN SOFTW
   [Anonymous], 2018, LOG PARSER PLUGIN
   BART, 2019, JENK PLUG
   Bavota G, 2011, LECT NOTES COMPUT SC, V6981, P168, DOI 10.1007/978-3-642-24485-8_13
   Beller M., 2017, INT C MIN SOFTW REP
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Duvall Paul M., 2007, Continuous integration: improving software quality and reducing risk
   Everitt B.S., 2002, CAMBRIDGE DICT STAT
   Fongo, 2018, FAK OUT MEM MONG JAV
   Fraser G, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699688
   Gallaba K, 2018, IEEE INT CONF AUTOM, P87, DOI 10.1145/3238147.3238171
   Gallaba K, 2020, IEEE T SOFTWARE ENG, V46, P33, DOI 10.1109/TSE.2018.2838131
   Haiduc S., 2010, ICSE
   Hassan F, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1078, DOI 10.1145/3180155.3180181
   Hilton L, 2017, TLS-TIMES LIT SUPPL, P25
   Hilton M, 2016, IEEE INT CONF AUTOM, P426, DOI 10.1145/2970276.2970358
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Kerzazi N, 2014, PROC IEEE INT CONF S, P41, DOI 10.1109/ICSME.2014.26
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Likert R., 1932, TECHNIQUE MEASUREMEN, DOI 1933-01885-001
   Lou Y, 2019, ISSTA, P43
   Macho C, 2018, P INT C SOFTW AN EV
   Maple S., 2016, ZEROTURNAROUND POST
   Miller A, 2008, AGILE 2008, PROCEEDINGS, P289, DOI 10.1109/Agile.2008.8
   Moreno L, 2017, PROC IEEE ACM INT C, P511, DOI 10.1109/ICSE-C.2017.169
   Moreno L, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P880, DOI 10.1109/ICSE.2015.98
   Moreno L, 2013, CONF PROC INT SYMP C, P23, DOI 10.1109/ICPC.2013.6613830
   Myers G J., 2004, The Art of Software Testing, V2nd ed.
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Ponzanelli L, 2014, MSR
   Rahman A, 2019, 41 INT C SOFTW ENG I
   Rastkar Sarah, 2010, P 32 ACM IEEE INT C, V1, P505, DOI DOI 10.1145/1806799.1806872
   Robbins N., 2011, P 2011 JOINT STAT M, DOI DOI 10.1002/LT.25677
   Robinson D, 2003, DE GRUYTER TXB
   Sentry Java, 2018, SENTR SDK JAV OTH JV
   Seo H, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P724, DOI 10.1145/2568225.2568255
   Spencer D., 2009, CARD SORTING DESIGNI
   StackOverflow, 2018, MAV
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Urli S, 2018, ARXIV181109852
   Vasilescu B, 2013, 2013 ASE/IEEE INTERNATIONAL CONFERENCE ON SOCIAL COMPUTING (SOCIALCOM), P188, DOI 10.1109/SocialCom.2013.35
   Vassallo C, 2019, REPLICATION PACKAGE, DOI [10.5281/zenodo.3346615, DOI 10.5281/ZENODO.3346615]
   Vassallo C, 2018, INT C PROGRAM COMPRE, P41, DOI 10.1145/3196321.3196350
   Vassallo C, 2019, PROC INT CONF SOFTW, P105, DOI 10.1109/ICSE.2019.00028
   Vassallo C, 2017, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2017.67
   Vassallo C, 2016, PROC IEEE INT CONF S, P519, DOI 10.1109/ICSME.2016.72
   Vassallo Carmine, 2014, Proceedings of the 22nd International Conference on Program Comprehension, P106
   Vos T, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P407, DOI 10.1109/CSMR-WCRE.2014.6747206
   Wong E, 2013, IEEE INT CONF AUTOM, P562, DOI 10.1109/ASE.2013.6693113
   Zampetti F, 2017, IEEE WORK CONF MIN S, P334, DOI 10.1109/MSR.2017.2
NR 54
TC 8
Z9 8
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2020
VL 25
IS 3
SI SI
BP 2218
EP 2257
DI 10.1007/s10664-019-09765-y
EA OCT 2019
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LL7FD
UT WOS:000489288300001
DA 2024-07-18
ER

PT J
AU Al Mamun, MA
   Berger, C
   Hansson, J
AF Al Mamun, Md Abdullah
   Berger, Christian
   Hansson, Jorgen
TI Effects of measurements on correlations of software code metrics
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software code metrics; Measurement effects on correlations;
   Collinearity; Software engineering; Cumulative measurement
ID OBJECT-ORIENTED SOFTWARE
AB ContextSoftware metrics play a significant role in many areas in the life-cycle of software including forecasting defects and foretelling stories regarding maintenance, cost, etc. through predictive analysis. Many studies have found code metrics correlated to each other at such a high level that such correlated code metrics are considered redundant, which implies it is enough to keep track of a single metric from a list of highly correlated metrics.ObjectiveSoftware is developed incrementally over a period. Traditionally, code metrics are measured cumulatively as cumulative sum or running sum. When a code metric is measured based on the values from individual revisions or commits without consolidating values from past revisions, indicating the natural development of software, this study identifies such a type of measure as organic. Density and average are two other ways of measuring metrics. This empirical study focuses on whether measurement types influence correlations of code metrics.MethodTo investigate the objective, this empirical study has collected 24 code metrics classified into four categories, according to the measurement types of the metrics, from 11,874 software revisions (i.e., commits) of 21 open source projects from eight well-known organizations. Kendall's tau-B is used for computing correlations. To determine whether there is a significant difference between cumulative and organic metrics, Mann-Whitney U test, Wilcoxon signed rank test, and paired-samples sign test are performed.ResultsThe cumulative metrics are found to be highly correlated to each other with an average coefficient of 0.79. For corresponding organic metrics, it is 0.49. When individual correlation coefficients between these two measure types are compared, correlations between organic metrics are found to be significantly lower (with p <0.01) than cumulative metrics. Our results indicate that the cumulative nature of metrics makes them highly correlated, implying cumulative measurement is a major source of collinearity between cumulative metrics. Another interesting observation is that correlations between metrics from different categories are weak.ConclusionsResults of this study reveal that measurement types may have a significant impact on the correlations of code metrics and that transforming metrics into a different type can give us metrics with low collinearity. These findings provide us a simple understanding how feature transformation to a different measurement type can produce new non-collinear input features for predictive models.
C1 [Al Mamun, Md Abdullah; Berger, Christian] Chalmers Univ Gothenburg, Dept Comp Sci & Engn, Gothenburg, Sweden.
   [Hansson, Jorgen] Univ Skovde, Sch Informat, Skovde, Sweden.
C3 Chalmers University of Technology; University of Skovde
RP Al Mamun, MA (corresponding author), Chalmers Univ Gothenburg, Dept Comp Sci & Engn, Gothenburg, Sweden.
EM abdullah.mamun@chalmers.se; christian.berger@chalmers.se;
   jorgen.hansson@his.se
OI Mamun, Abdullah/0000-0003-1504-8130
CR Aggarwal Charu C, 2017, OUTLIER ANAL, DOI [DOI 10.1007/978-1-4614-6396-2, 10.1007/978- 1-4614- 6396-2]
   [Anonymous], NCRERC1076
   Baxter G, 2006, ACM SIGPLAN NOTICES, V41, P397, DOI 10.1145/1167515.1167507
   Chidamber SR, 1998, IEEE T SOFTWARE ENG, V24, P629, DOI 10.1109/32.707698
   COLEMAN D, 1994, COMPUTER, V27, P44, DOI 10.1109/2.303623
   Concas G, 2007, IEEE T SOFTWARE ENG, V33, P687, DOI [10.1109/TSE.2007.1019, 10.1109/TSE.2007.1016]
   Crawford L., 2002, PMIResearch Conference 2002, P181
   Croux C, 2010, STAT METHOD APPL-GER, V19, P497, DOI 10.1007/s10260-010-0142-z
   Deshpande A, 2008, INT FED INFO PROC, V275, P197
   Dormann CF, 2013, ECOGRAPHY, V36, P27, DOI 10.1111/j.1600-0587.2012.07348.x
   Ferreira KAM, 2012, J SYST SOFTWARE, V85, P244, DOI 10.1016/j.jss.2011.05.044
   Field A, 2018, Discovering Statistics Using IBM SPSS Statistics, Vfifth
   Gil Y, 2017, EMPIR SOFTW ENG, V22, P2585, DOI 10.1007/s10664-017-9513-5
   Hair JF, 2010, Multivariate data analysis
   Henry S., 1981, Performance Evaluation Review, V10, P81, DOI 10.1145/1010627.807911
   HENRY S, 1990, IEEE SOFTWARE, V7, P36, DOI 10.1109/52.50772
   Janes A, 2017, ICPE'17: COMPANION OF THE 2017 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING, P97, DOI 10.1145/3053600.3053618
   Jantunen S, 2011, 5 INT WORKSH SOFTW P, P36, DOI [10.1109/IWSPM.2011.6046202, DOI 10.1109/IWSPM.2011.6046202]
   Jay Graylin, 2009, Journal of Software Engineering and Applications, V2, P137, DOI 10.4236/jsea.2009.23020
   Kazman R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P179, DOI 10.1109/ICSE.2015.146
   Kendall M. G., 1948, Rank correlation methods.
   Kim Hae-Young, 2013, Restor Dent Endod, V38, P52, DOI 10.5395/rde.2013.38.1.52
   Landman D, 2016, J SOFTW-EVOL PROC, V28, P589, DOI 10.1002/smr.1760
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Letouzey JL, 2012, IEEE SOFTWARE, V29, P44, DOI 10.1109/MS.2012.129
   Louridas P, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1391984.1391986
   Mamun M.A.A., 2017, P 27 INT WORKSHOP SO, P255, DOI [10.1145/3143434.3143445, DOI 10.1145/3143434.3143445]
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Meloun M, 2002, ANALYST, V127, P433, DOI 10.1039/b110779h
   Meneely A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377661
   Park HM, 2009, UNIVARIATE ANAL NORM
   Riaz M, 2009, INT SYMP EMP SOFTWAR, P368, DOI 10.1109/esem.2009.5314233
   Rudiger Lincke., 2008, International Symposium on Software Testing and Analysis, P131, DOI 10.1145/1390630.1390648
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saini S., 2015, 2015 ANN IEEE INDIA, P1
   Schroeder Jan, 2016, P 25 INT S SOFTW TES, P154
   SHEVLYAKOV GL, 2002, MODERN PROBABILITY S
   Shihab Emad., 2010, P 2010 ACM IEEE INT, P4
   Succi G, 2005, EMPIR SOFTW ENG, V10, P81, DOI 10.1023/B:EMSE.0000048324.12188.a2
   Tashtoush Y, 2014, ARXIV14084523
   TAYLOR R, 1990, J DIAGN MED SONOG, V6, P219, DOI 10.1177/875647939000600404
   van der Meulen MJP, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P203, DOI 10.1109/ISSRE.2007.12
   Wheeldon R, 2003, THIRD IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION - PROCEEDINGS, P45, DOI 10.1109/SCAM.2003.1238030
   Xu WC, 2013, SIGNAL PROCESS, V93, P261, DOI 10.1016/j.sigpro.2012.08.005
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
NR 45
TC 6
Z9 7
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 2764
EP 2818
DI 10.1007/s10664-019-09714-9
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700029
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Pinto, G
   Steinmacher, I
   Dias, LF
   Gerosa, M
AF Pinto, Gustavo
   Steinmacher, Igor
   Dias, Luiz Felipe
   Gerosa, Marco
TI On the challenges of open-sourcing proprietary software projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Open source software; Proprietary software; Community engagement; Open
   collaboration; Popularity
ID MOTIVATIONS
AB The open source software (OSS) movement has become widely recognized as an effective way to deliver software. Even big software companies, well-known for being restrictive when it comes to publishing their source code artifacts, have recently adopted open source initiatives and released for general use the source code of some of their most notable products. We conducted an exploratory study on merits of the widespread belief that open-sourcing a proprietary software project will attract external developers, like casual contributors, and therefore improve software quality (e.g., "given enough eyeballs, all bugs are shallow"). By examining the pre- and post-migration software history of eight active, popular, non-trivial proprietary projects that became open source, we characterize the phenomenon and identify some challenges. Contrary to what many believe, we found that only a few projects experienced a growth in newcomers, contributions, and popularity; furthermore, this growth does not last long. The results from the study can be useful for helping software companies to better understand the hidden challenges of open-sourcing their software projects to attract external developers.
C1 [Pinto, Gustavo] Fed Univ Para, Belem, Para, Brazil.
   [Steinmacher, Igor; Dias, Luiz Felipe] Univ Tecnol Fed Parana, Campo Mourao, Parana, Brazil.
   [Gerosa, Marco] Univ Sao Paulo, Inst Math & Stat, Sao Paulo, Brazil.
C3 Universidade Federal do Para; Universidade Tecnologica Federal do
   Parana; Universidade de Sao Paulo
RP Pinto, G (corresponding author), Fed Univ Para, Belem, Para, Brazil.
EM gpinto@ufpa.br; igorfs@utfpr.edu.br; luizdias@alunos.utfpr.edu.br;
   marco.gerosa@nau.edu
RI Gerosa, Marco Aurelio/A-6686-2009; Igor, Steinmacher/B-6414-2012
OI Gerosa, Marco Aurelio/0000-0003-1399-7535; Igor,
   Steinmacher/0000-0002-0612-5790
CR Abbott T, 2017, OPEN SOURCING ZULIP
   [Anonymous], 2011, Proceedings of the 2011 44th Hawaii International Conference on System Sciences", HICSS'11, DOI [DOI 10.1109/HICSS.2011.264, 10.1109/HICSS.2011.264]
   [Anonymous], 2007, Basics of qualitative research: Techniques and procedures for developing grounded theory
   [Anonymous], 2011, P 19 ACM SIGSOFT S 1
   Anthes G, 2016, COMMUN ACM, V59, P15, DOI 10.1145/2949684
   Avelino Guilherme, 2016, Proceedings of IEEE 24th International Conference on Program Comprehension (ICPC), P1
   Bird Christian, 2006, INT C SOFTWARE ENG P, P137, DOI DOI 10.1145/1137983.1138016
   Borges H, 2016, P 12 INT C PRED MOD, P1
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   CSharpFAQ, 2017, WERE MOVING GITHUB
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   Dias LF, 2016, IEEE INT C SOFTW MAI
   Donohoe C, 2017, SAY HELLO TO HUBOT
   Evans J, 2017, HIPHOP VIRTUAL MACHI
   Fogel Karl, 2013, PRODUCING OPEN SOURC
   GitHub, 2017, GITHUB HELP STARS
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Hars A, 2002, INT J ELECTRON COMM, V6, P25
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   Hopkins WG, 2004, NEW VIEW STAT SPORT
   Jiang J, 2017, EMPIR SOFTW ENG, V22, P547, DOI 10.1007/s10664-016-9436-6
   Jorgensen N, 2007, J MANAG GOV, V11, P119, DOI 10.1007/s10997-007-9026-5
   Kalliamvakou E, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P574, DOI 10.1109/ICSE.2015.74
   Kastrenakes J, 2017, APPLES NEW PROGRAMMI
   Ke WL, 2010, J ASSOC INF SYST, V11, P784
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Kraut RE, 2011, BUILDING SUCCESSFUL ONLINE COMMUNITIES: EVIDENCE-BASED SOCIAL DESIGN, P179
   Landwerth I, 2017, JOURNEY OPEN SOURCE
   Marlow J., 2013, P 2013 C COMP SUPP C
   Marz N, 2017, HIST APACHE STORM LE
   McDonald N., 2013, CHI'13 Extended Abstracts on Human Factors in Computing Systems: ACM, P139
   Meneely A, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P453
   Nagappan M, 2013, 2013 9 JOINT M EUR S, P466, DOI [DOI 10.1145/2491411.2491415, 10.1145/2491411.2491415]
   Oreg S, 2008, COMPUT HUM BEHAV, V24, P2055, DOI 10.1016/j.chb.2007.09.007
   Padhye R., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P332, DOI 10.1145/2597073.2597113
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1209, DOI 10.1109/ICSE.2013.6606680
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P112, DOI 10.1109/ICSE.2013.6606557
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   plotly. js, 2017, PLOTL JS OP SOURC AN
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Raymond Eric Steven, 2001, The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary
   Reboucas M, 2017, IEEE WORK CONF MIN S, P475, DOI 10.1109/MSR.2017.32
   Rebouças M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P634, DOI 10.1109/SANER.2016.66
   Sobo N, 2017, ATOM IS NOW OPEN SOU
   Steinmacher I., 2014, Proceedings of the 7th international workshop on cooperative and human aspects of software engineering, P72, DOI DOI 10.1145/2593702.2593704.ACM
   Steinmacher I, 2015, INFORM SOFTWARE TECH, V59, P67, DOI 10.1016/j.infsof.2014.11.001
   Steinmacher I, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P25, DOI 10.1109/CHASE.2013.6614728
   Steinmacher Igor, 2015, P 18 ACM C COMP SUPP, P1
   Torres M. R. M., 2011, Proceedings of the 2011 International Conference on Complex, Intelligent and Software Intensive Systems (CISIS 2011), P109, DOI 10.1109/CISIS.2011.25
   Tourani P, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P24, DOI 10.1109/SANER.2017.7884606
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Vasilescu B, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P50, DOI 10.1109/CHASE.2015.14
   Wang J, 2011, P 4 INT WORKSH COOP
NR 53
TC 15
Z9 15
U1 7
U2 18
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2018
VL 23
IS 6
BP 3221
EP 3247
DI 10.1007/s10664-018-9609-6
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HC1WE
UT WOS:000451593200005
DA 2024-07-18
ER

PT J
AU Kintis, M
   Papadakis, M
   Papadopoulos, A
   Valvis, E
   Malevris, N
   Le Traon, Y
AF Kintis, Marinos
   Papadakis, Mike
   Papadopoulos, Andreas
   Valvis, Evangelos
   Malevris, Nicos
   Le Traon, Yves
TI How effective are mutation testing tools? An empirical analysis of Java
   mutation testing tools with manual analysis and real faults
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mutation testing; Fault detection; Tool comparison; Human study; Real
   faults
AB Mutation analysis is a well-studied, fault-based testing technique. It requires testers to design tests based on a set of artificial defects. The defects help in performing testing activities by measuring the ratio that is revealed by the candidate tests. Unfortunately, applying mutation to real-world programs requires automated tools due to the vast number of defects involved. In such a case, the effectiveness of the method strongly depends on the peculiarities of the employed tools. Thus, when using automated tools, their implementation inadequacies can lead to inaccurate results. To deal with this issue, we cross-evaluate four mutation testing tools for Java, namely PIT, MUJAVA, Major and the research version of PIT, PITRV, with respect to their fault-detection capabilities. We investigate the strengths of the tools based on: a) a set of real faults and b) manual analysis of the mutants they introduce. We find that there are large differences between the tools' effectiveness and demonstrate that no tool is able to subsume the others. We also provide results indicating the application cost of the method. Overall, we find that PITRV achieves the best results. In particular, PITRV outperforms the other tools by finding 6% more faults than the other tools combined.
C1 [Kintis, Marinos; Papadakis, Mike; Le Traon, Yves] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
   [Papadopoulos, Andreas; Valvis, Evangelos; Malevris, Nicos] Athens Univ Econ & Business, Dept Informat, Athens, Greece.
C3 University of Luxembourg; Athens University of Economics & Business
RP Kintis, M (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, Luxembourg, Luxembourg.
EM marinos.kintis@uni.lu; michail.papadakis@uni.lu; p3100148@aueb.gr;
   p3130019@aueb.gr; ngm@aueb.gr; yves.letraon@uni.lu
RI LE TRAON, Yves/T-2911-2019
OI LE TRAON, Yves/0000-0002-1045-4861; Papadakis, Mike/0000-0003-1852-2547
FU Research Centre of Athens University of Economics and Business (RC AUEB)
FX Marinos Kintis and Nicos Malevris are partly supported by the Research
   Centre of Athens University of Economics and Business (RC AUEB).
CR Ammann P, 2014, 2014 IEEE SEVENTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST), P21, DOI 10.1109/ICST.2014.13
   Ammann Paul, 2008, Introduction to software testing, V1st
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], SOFTWARE
   [Anonymous], PROC INT CONF SOFTW
   Baker R, 2013, IEEE T SOFTWARE ENG, V39, P787, DOI 10.1109/TSE.2012.56
   Bardoczi S., 2015, 2015: Landscape Odyssey-Landscape Architecture in Hungary, P1, DOI DOI 10.1109/ICST.2015.7102607
   BUDD TA, 1982, ACTA INFORM, V18, P31, DOI 10.1007/BF00625279
   Chekam TT, 2017, PROC INT CONF SOFTW, P597, DOI 10.1109/ICSE.2017.61
   Coles H., 2010, PIT MUTATION TESTING
   Coles H., 2016, P 25 INT S SOFTWARE, P449
   Delahaye M, 2015, SOFTWARE PRACT EXPER, V45, P875, DOI 10.1002/spe.2312
   DEMILLO RA, 1978, COMPUTER, V11, P34, DOI 10.1109/C-M.1978.218136
   Deng L, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P84, DOI 10.1109/ICST.2013.20
   Fagerland MW, 2014, STAT MED, V33, P2850, DOI 10.1002/sim.6148
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   GEIST R, 1992, IEEE T COMPUT, V41, P550, DOI 10.1109/12.142681
   Gopinath R, 2017, SOFTWARE QUAL J, V25, P871, DOI 10.1007/s11219-016-9317-7
   Henard C, 2014, LECT NOTES COMPUT SC, V8636, P92
   Jia Yue, 2016, P 25 INT S SOFTWARE, P354
   Just R., 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P612, DOI 10.1109/ASE.2011.6100138
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kintis Marinos, 2018, IEEE Transactions on Software Engineering, V44, P308, DOI 10.1109/TSE.2017.2684805
   Kintis M, 2017, ACCOMPANYING DATA PA, DOI [10.6084/m9.figshare.5558587.v1, DOI 10.6084/M9.FIGSHARE.5558587.V1]
   Kintis M, 2017, SUPPORTING SITE PAPE
   Kintis M., 2016, THESIS THESIS
   Kintis M, 2016, IEEE INT WORK C SO, P147, DOI 10.1109/SCAM.2016.28
   Kintis M, 2015, INFORM SOFTWARE TECH, V68, P1, DOI 10.1016/j.infsof.2015.07.009
   Kintis M, 2015, SOFTW TEST VERIF REL, V25, P508, DOI 10.1002/stvr.1529
   Kintis M, 2010, ASIA PAC SOFWR ENG, P300, DOI 10.1109/APSEC.2010.42
   Kurtz B, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P571, DOI 10.1145/2950290.2950322
   Laurent T, 2017, IEEE INT C SOFTW TES
   Laurent T, 2017, PITRV EXTENDED VERSI
   Li N, 2009, IEEE ICST WORKSHOP, P220, DOI 10.1109/ICSTW.2009.30
   Lindstrom B, 2016, P 11 INT WORKSH MUT
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Ma YS, 2005, SOFTW TEST VERIF REL, V15, P97, DOI 10.1002/stvr.308
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Offutt J, 2011, INFORM SOFTWARE TECH, V53, P1098, DOI 10.1016/j.infsof.2011.03.007
   Pacheco C., 2007, OOPSLA 2007 COMPANIO, P815
   Papadakis Mike, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P121, DOI 10.1109/ISSRE.2010.38
   Papadakis Mike, 2010, Proceedings of the IEEE Third International Conference on Software Testing Verification and Validation - Workshops (ICSTW 2010), P90, DOI 10.1109/ICSTW.2010.50
   Papadakis M., 2017, ADV COMPUTERS
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Papadakis M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P936, DOI 10.1109/ICSE.2015.103
   Papadakis M, 2014, SCI COMPUT PROGRAM, V95, P298, DOI 10.1016/j.scico.2014.05.012
   Rani Shweta, 2015, 2015 4th International Conference on Reliability, Infocom Technologies and Optimization (ICRITO) (Trends and Future Directions), P1, DOI 10.1109/ICRITO.2015.7359265
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Visser W, 2016, IEEE INT CONF AUTOM, P39, DOI 10.1145/2970276.2970345
   Yao XJ, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P919, DOI 10.1145/2568225.2568265
   Yue Jia, 2011, IEEE Transactions on Software Engineering, V37, P649, DOI 10.1109/TSE.2010.62
   Zhang L, 2012, NEUROSIGNALS, V20, P15, DOI 10.1159/000330743
   Zhang Lijun, 2010, Genomics Proteomics & Bioinformatics, V8, P1, DOI 10.1016/S1672-0229(10)60001-0
NR 54
TC 42
Z9 46
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2018
VL 23
IS 4
BP 2426
EP 2463
DI 10.1007/s10664-017-9582-5
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GK0MK
UT WOS:000435804100019
OA Green Published
DA 2024-07-18
ER

PT J
AU Ribeiro, TV
   Massollar, J
   Travassos, GH
AF Ribeiro, Talita Vieira
   Massollar, Jobson
   Travassos, Guilherme Horta
TI Challenges and pitfalls on surveying evidence in the software
   engineering technical literature: an exploratory study with novices
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Novice researchers; Systematic literature review; Evidence-based
   software engineering; Exploratory study
ID SYSTEMATIC REVIEWS; QUALITY; AGREEMENT
AB The evidence-based software engineering approach advocates the use of evidence from empirical studies to support the decisions on the adoption of software technologies by practitioners in the software industry. To this end, many guidelines have been proposed to contribute to the execution and repeatability of literature reviews, and to the confidence of their results, especially regarding systematic literature reviews (SLR). To investigate similarities and differences, and to characterize the challenges and pitfalls of the planning and generated results of SLR research protocols dealing with the same research question and performed by similar teams of novice researchers in the context of the software engineering field. We qualitatively compared (using Jaccard and Kappa coefficients) and evaluated (using DARE) same goal SLR research protocols and outcomes undertaken by similar research teams. Seven similar SLR protocols regarding quality attributes for use cases executed in 2010 and 2012 enabled us to observe unexpected differences in their planning and execution. Even when the participants reached some agreement in the planning, the outcomes were different. The research protocols and reports allowed us to observe six challenges contributing to the divergences in the results: researchers' inexperience in the topic, researchers' inexperience in the method, lack of clearness and completeness of the papers, lack of a common terminology regarding the problem domain, lack of research verification procedures, and lack of commitment to the SLR. According to our findings, it is not possible to rely on results of SLRs performed by novices. Also, similarities at a starting or intermediate step during different SLR executions may not directly translate to the next steps, since non-explicit information might entail differences in the outcomes, hampering the repeatability and confidence of the SLR process and results. Although we do have expectations that the presence and follow-up of a senior researcher can contribute to increasing SLRs' repeatability, this conclusion can only be drawn upon the existence of additional studies on this topic. Yet, systematic planning, transparency of decisions and verification procedures are key factors to guarantee the reliability of SLRs.
C1 [Ribeiro, Talita Vieira; Massollar, Jobson; Travassos, Guilherme Horta] Univ Fed Rio de Janeiro, Syst Engn & Comp Sci Program PESC COPPE, Rio De Janeiro, Brazil.
C3 Universidade Federal do Rio de Janeiro
RP Ribeiro, TV (corresponding author), Univ Fed Rio de Janeiro, Syst Engn & Comp Sci Program PESC COPPE, Rio De Janeiro, Brazil.
EM tvribeiro@cos.ufrj.br; jobson@cos.ufrj.br; ght@cos.ufrj.br
RI Travassos, Guilherme H/G-2842-2012
FU CNPq; CAPES
FX We thank Daniela Cruzes, Marcela Genero, Martin Host, Natalia Juristo,
   Nelly Condori-Fernandez, Oscar Dieste and Oscar Pastor for the initial
   discussions at ISERN 2009 that started this work; Vitor Faria Monteiro
   for his contribution to the original protocol planning; David Budgen for
   suggestions regarding an earlier version of this study report; all
   students for their engagement during the Experimental Software
   Engineering course in 2010 and 2012, and also the CNPq and CAPES for
   supporting this research. Prof. Travassos is a CNPq Researcher.
CR [Anonymous], 2007, EBSE200701 KEEL U
   [Anonymous], 2007, Basics of qualitative research: Techniques and procedures for developing grounded theory
   [Anonymous], 2008, 12 INT C EV ASS SOFT
   Babar M. A., 2009, P 3 INT S EMP SOFTW
   Basili V.R., 1992, Quality, P24, DOI DOI 10.1016/S0164-1212(99)00035-7
   Biolchini J., 2005, Technical Report ES, V679, P31
   Brereton P, 2011, IEEE T EDUC, V54, P558, DOI 10.1109/TE.2010.2090662
   Carver Jeffrey C., 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P203, DOI 10.1109/ESEM.2013.28
   Centre for Reviews and Dissemination University of York, 2002, Effect. Matters, V6, P1
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Condori-Fernandez Nelly, 2009, 2009 3rd International Symposium on Empirical Software Engineering and Measurement (ESEM), P502, DOI 10.1109/ESEM.2009.5314232
   Dias Neto AC, 2007, ES71307 PESCCOPPEUFR
   Dieste O, 2009, EMPIR SOFTW ENG, V14, P513, DOI 10.1007/s10664-008-9091-7
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Fantechi A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P157, DOI 10.1109/ICRE.2002.1048518
   Garousi Vahid, 2017, Software Quality Journal, V25, P1091, DOI 10.1007/s11219-016-9319-5
   Hassler E., 2014, P 18 INT C EV ASS SO, P1
   Jaccard P., 1912, New Phytologist, V11, P37, DOI [10.1111/j.1469-8137.1912.tb05611.x, DOI 10.1111/J.1469-8137.1912.TB05611.X]
   Kasoju A, 2013, INFORM SOFTWARE TECH, V55, P1237, DOI 10.1016/j.infsof.2013.01.005
   Kitchenham Barbara, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P126, DOI 10.1049/ic.2012.0016
   Kitchenham Barbara, 2011, 15th Annual Conference on Evaluation & Assessment in Software Engineering (EASE 2011), P46, DOI 10.1049/ic.2011.0006
   Kuhrmann M, 2017, EMPIR SOFTW ENG, V22, P2852, DOI 10.1007/s10664-016-9492-y
   Lavallée M, 2014, IEEE T EDUC, V57, P175, DOI 10.1109/TE.2013.2292570
   López L, 2015, DATA KNOWL ENG, V99, P17, DOI 10.1016/j.datak.2015.06.007
   Losavio F., 2004, Information Systems Management, V21, P27, DOI 10.1201/1078/43877.21.1.20041201/78984.4
   MacDonell S, 2010, IEEE T SOFTWARE ENG, V36, P676, DOI 10.1109/TSE.2010.28
   Munir H, 2014, INFORM SOFTWARE TECH, V56, P375, DOI 10.1016/j.infsof.2014.01.002
   Oates B. J., 2009, P 13 INT C EVALUATIO, P79
   Pai M, 2004, NATL MED J INDIA, V17, P86
   Petersen K, 2015, INFORM SOFTWARE TECH, V64, P1, DOI 10.1016/j.infsof.2015.03.007
   Petersen K, 2011, INT SYMP EMP SOFTWAR, P351, DOI 10.1109/ESEM.2011.46
   Phalp KT, 2007, SOFTWARE QUAL J, V15, P69, DOI 10.1007/s11219-006-9006-z
   Preiss O, 2001, EUROMICRO CONF PROC, P114, DOI 10.1109/EURMIC.2001.952445
   Rago A, 2013, REQUIR ENG, V18, P67, DOI 10.1007/s00766-011-0142-z
   Rainer Austen, 2006, INT C EV ASS SOFTW E, P91
   Ramos Ricardo, 2009, Proceedings of the 2009 23rd Brazilian Symposium on Software Engineering. SBES 2009, P187, DOI 10.1109/SBES.2009.10
   Riaz M, 2010, INT C EV ASS SOFTW E, P44
   Shull F, 2000, COMPUTER, V33, P73, DOI 10.1109/2.869376
   Travassos GH, 2008, IEEE INT C ENG COMP, P193, DOI 10.1109/ICECCS.2008.30
   Ulziit B, 2015, J SOFTW-EVOL PROC, V27, P763, DOI 10.1002/smr.1720
   Viera AJ, 2005, FAM MED, V37, P360
   Wohlin C, 2014, P 8 ACM IEEE INT S E
   Wohlin C, 2013, J SYST SOFTWARE, V86, P2594, DOI 10.1016/j.jss.2013.04.076
   Zhang H, 2011, INFORM SOFTWARE TECH, V53, P625, DOI 10.1016/j.infsof.2010.12.010
   Zhang HF, 2010, PROCEEDINGS OF THE SECOND INTERNATIONAL POSTGRADUATE CONFERENCE ON INFRASTRUCTURE AND ENVIRONMENT, VOL 2, P111, DOI 10.1109/SOLI.2010.5551598
NR 45
TC 8
Z9 8
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2018
VL 23
IS 3
BP 1594
EP 1663
DI 10.1007/s10664-017-9556-7
PG 70
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GH6DH
UT WOS:000433532300013
DA 2024-07-18
ER

PT J
AU Guo, J
   Gibiec, M
   Cleland-Huang, J
AF Guo, Jin
   Gibiec, Marek
   Cleland-Huang, Jane
TI Tackling the term-mismatch problem in automated trace retrieval
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements engineering; Traceability; Query augmentation; Semantic
   traceability
ID RECOVERING TRACEABILITY LINKS; REQUIREMENTS; CODE; GENERATION; MODELS
AB Software systems operating in any type of safety or security critical domains must comply with an increasingly large and complex set of regulatory standards. Compliance is partially demonstrated through establishing trace links between requirements and regulatory codes. Such links can be constructed manually or through semi-automated techniques in which the text in the regulatory code is used to formulate an information retrieval query. However, trace retrieval solutions are not effective when significant vocabulary mismatches exist between regulatory codes and product level requirements. This paper describes and compares three query augmentation techniques for addressing the term mismatch problem and improving the quality of trace links generated between regulatory codes and requirements. The first trains a classifier to replace the original query with terms learned from a training set of regulation-to-requirements trace links. The second, replaces the original query with terms learned through web-mining; and the third utilizes a domain ontology to augment query terms. The ontology is constructed manually using a guided approach that leverages existing traceability knowledge. All three techniques were evaluated against security regulations from the USA government's Health Insurance Privacy and Portability Act (HIPAA) traced against ten healthcare related requirements specifications. The classification approach returned the best results; however, improvements were observed with both the classification and ontology based solutions. The web-mining technique showed improvements in only a subset of queries. The three query augmentation techniques offer tradeoffs in terms of performance, cost and effort, and usage viability within a specific project context.
C1 [Guo, Jin] Univ Notre Dame, Notre Dame, IN 46556 USA.
   [Cleland-Huang, Jane] Univ Notre Dame, Software Engn, Notre Dame, IN 46556 USA.
   [Gibiec, Marek] Depaul Univ, Chicago, IL 60604 USA.
C3 University of Notre Dame; University of Notre Dame; DePaul University
RP Cleland-Huang, J (corresponding author), Univ Notre Dame, Software Engn, Notre Dame, IN 46556 USA.
EM jguo3@nd.edu; mgibiec@gmail.com; JaneClelandHuang@nd.edu
FU US National Science Foundation [CCF-1319680, CCF-0447594]; Direct For
   Computer & Info Scie & Enginr; Division Of Computer and Network Systems
   [1649008] Funding Source: National Science Foundation; Direct For
   Computer & Info Scie & Enginr; Division of Computing and Communication
   Foundations [1319680, 1649448] Funding Source: National Science
   Foundation
FX The work described in this paper was supported by US National Science
   Foundation grants CCF-1319680 and CCF-0447594.
CR Abebe SL, 2015, SCI COMPUT PROGRAM, V98, P680, DOI 10.1016/j.scico.2014.09.012
   Agrawal R., P 20 INT C VERY LARG
   [Anonymous], 2013, Proceedings of the 2013 9th Joint Meeting on Foundations of Software Engineering-ESEC/FSE 2013, page
   [Anonymous], 2009, P 18 INT C WORLD WID, DOI [DOI 10.1145/1526709.1526773, 10.1145/1526709.1526773]
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Antoniol G, 2000, PROC IEEE INT CONF S, P40, DOI 10.1109/ICSM.2000.883003
   Assawamekin N, 2010, KNOWL INF SYST, V25, P493, DOI 10.1007/s10115-009-0259-2
   Baeza-Yates RA, 1999, ICSE 00, P73
   Berenbach B., 2010, P C SYST ENG RES
   Breaux TD, 2013, S VIS LANG HUM CEN C, P14, DOI 10.1109/RE.2013.6636701
   Broder Andrei, 2007, 30th Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P231, DOI 10.1145/1277741.1277783
   Cleland-Huang J, 2005, 13TH IEEE INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P135, DOI 10.1109/RE.2005.78
   Cleland-Huang J, 2003, IEEE T SOFTWARE ENG, V29, P796, DOI 10.1109/TSE.2003.1232285
   Cleland-Huang J., 2014, RAISE WORKSH REAL AR
   Cleland-Huang J., 2006, P 14 IEEE INT REQUIR, P36
   Cleland-Huang J, 2007, REQUIR ENG, V12, P103, DOI 10.1007/s00766-007-0045-1
   Cleland-Huang J, 2007, COMPUTER, V40, P27, DOI 10.1109/MC.2007.195
   Cuddeback D, 2010, RE 10
   Dasgupta T, 2013, PROC IEEE INT CONF S, P320, DOI 10.1109/ICSM.2013.43
   De Lucia A., 2012, SOFTWARE SYSTEMS TRA, P71, DOI [10.1007/978-1-4471- 2239-5_4, DOI 10.1007/978-1-4471-2239-5_4]
   De Lucia A, 2006, PROC IEEE INT CONF S, P299
   Dietrich T, 2013, IEEE INT CONF AUTOM, P586, DOI 10.1109/ASE.2013.6693117
   Dou Shen, 2006, Proceedings of the Twenty-Ninth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P131, DOI 10.1145/1148170.1148196
   Egyed A, 2003, IEEE T SOFTWARE ENG, V29, P116, DOI 10.1109/TSE.2003.1178051
   Emenecker J., 2010, P 32 ACM IEEE INT C, V1, P155, DOI DOI 10.1145/1806799.1806825
   Falessi D, 2013, IEEE T SOFTWARE ENG, V39, P18, DOI 10.1109/TSE.2011.122
   Gabrilovich E, 2009, ACM T WEB, V3, DOI 10.1145/1513876.1513877
   Gervasi V, 2014, INT REQUIR ENG CONF, P143, DOI 10.1109/RE.2014.6912256
   Gibiec M., 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE '10, P245
   Gotel O, 1997, RE '97 - PROCEEDINGS OF THE THIRD IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, P169, DOI 10.1109/ISRE.1997.566866
   Gotel O., 1994, ANAL REQUIREMENTS TR, P94
   Grando Adela, 2013, AMIA Annu Symp Proc, V2013, P514
   Grando M. A., 2012, 2012 IEEE Second International Conference on Healthcare Informatics, Imaging and Systems Biology (HISB), P51, DOI 10.1109/HISB.2012.19
   GRUBER TR, 1993, KNOWL ACQUIS, V5, P199, DOI 10.1006/knac.1993.1008
   Guizzardi G, 2010, SEMANT WEB, V1, P3, DOI 10.3233/SW-2010-0015
   Guo J., 2014, ASE, P755
   Guo J, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P843, DOI 10.1145/2889160.2889264
   Guo J, 2013, S VIS LANG HUM CEN C, P42, DOI 10.1109/RE.2013.6636704
   Hayashi S, 2010, ASIA PAC SOFWR ENG, P385, DOI 10.1109/APSEC.2010.51
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hayes JH, 2004, 12TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P249
   Hill E., 2008, P 2008 INT WORKING C, P79
   ISO, 2010, 215472010 ISO ISOTS
   Klein D, 2003, 41ST ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P423, DOI 10.3115/1075096.1075150
   Kof L., 2010, MaRK'10
   Li Y., 2009, TRACEABILITY EMERGIN
   Lin D., 1998, Machine Learning. Proceedings of the Fifteenth International Conference (ICML'98), P296
   Lin J, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P363
   Mäder P, 2013, IEEE SOFTWARE, V30, P58, DOI 10.1109/MS.2013.60
   Mahmoud A, 2015, REQUIR ENG, V20, P281, DOI 10.1007/s00766-013-0199-y
   Maletic JI, 2000, PROC INT C TOOLS ART, P46, DOI 10.1109/TAI.2000.889845
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Mirakhorli M, 2012, TACTIC CENTRIC APPRO
   Mirakhorli M, 2016, IEEE T SOFTWARE ENG, V42, P206, DOI 10.1109/TSE.2015.2479217
   Murta LGP, 2006, IEEE INT CONF AUTOM, P135
   Nauman M, 2007, PROCEEDINGS OF THE IEEE/WIC/ACM INTERNATIONAL CONFERENCE ON WEB INTELLIGENCE, P423, DOI 10.1109/WI.2007.44
   PCI, 2006, PCI SEC STAND QUICK
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Rempel P., 2015, Software Engineering Management 2015, Multikonferenz der GIFachbereiche Softwaretechnik (SWT) und Wirtschaftsinformatik, P120
   SALTON G, 1975, COMMUN ACM, V18, P613, DOI 10.1145/361219.361220
   Salton G, 1986, Introduction to Modern Information Retrieval
   Salton G., 1989, Automatic Text Processing: The Transformation, Analysis, and Retrieval of Information by Computer
   Sarbanes-Oxley, 2002, GUIDE SARBANES OXLEY
   Shin Y., 2012, Proceedings of the 27th Annual ACM Symposium on Applied Computing, SAC'12, P1069, DOI DOI 10.1145/2245276.2231943
   Shin Y, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P61, DOI 10.1109/SST.2015.13
   Spanoudakis G, 2004, J SYST SOFTWARE, V72, P105, DOI 10.1016/S0164-1212(03)00242-5
   Stanford, 2013, PROTEGE OPEN SOURCE
   Sultanov H, 2013, S VIS LANG HUM CEN C, P52, DOI 10.1109/RE.2013.6636705
   Sultanov H, 2011, REQUIR ENG, V16, P209, DOI 10.1007/s00766-011-0121-4
   Tufis D., 1998, Proceedings of the First International Conference on Language Resources and Evaluation LREC, P589
   U.S. Food and Drug Administration, 2002, GEN PRINC SOFTW VAL, V1, P1
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Yurekli B, 2009, NSS: 2009 3RD INTERNATIONAL CONFERENCE ON NETWORK AND SYSTEM SECURITY, P560, DOI 10.1109/NSS.2009.27
   Zhang Y, 2008, IET SOFTW, V2, P185, DOI 10.1049/iet-sen:20070062
   Zou XC, 2010, EMPIR SOFTW ENG, V15, P119, DOI 10.1007/s10664-009-9114-z
NR 76
TC 26
Z9 33
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2017
VL 22
IS 3
BP 1103
EP 1142
DI 10.1007/s10664-016-9479-8
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW4GE
UT WOS:000402459200006
DA 2024-07-18
ER

PT J
AU Ståhl, D
   Hallén, K
   Bosch, J
AF Stahl, Daniel
   Hallen, Kristofer
   Bosch, Jan
TI Achieving traceability in large scale continuous integration and
   delivery deployment, usage and validation of the eiffel framework
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Continuous integration; Continuous delivery; Traceability;
   Very-large-scale software systems
AB The importance of traceability in software development has long been recognized, not only for reasons of legality and certification, but also to enable the development itself. At the same time, organizations are known to struggle to live up to traceability requirements, and there is an identified lack of studies on traceability practices in the industry, not least in the area of tooling and infrastructure. This paper presents, investigates and discusses Eiffel, an industry developed solution designed to provide real time traceability in continuous integration and delivery. The traceability needs of industry professionals are also investigated through interviews, providing context to that solution. It is then validated through further interviews, a comparison with previous traceability methods and a review of literature. It is found to address the identified traceability needs and found in some cases to reduce traceability data acquisition times from days to minutes, while at the same time alternatives offering comparable functionality are lacking. In this work, traceability is shown not only to be an important concern to engineers, but also regarded as a prerequisite to successful large scale continuous integration and delivery. At the same time, promising developments in technical infrastructure are documented and clear differences in traceability mindset between separate industry projects is revealed.
C1 [Stahl, Daniel; Hallen, Kristofer] Ericsson AB, Datalinjen 3, Linkoping, Sweden.
   [Bosch, Jan] Chalmers Univ Technol, Software Engn, Lindholmspiren 5, Gothenburg, Sweden.
   [Bosch, Jan] Chalmers Univ Technol, Software Res Ctr, Lindholmspiren 5, Gothenburg, Sweden.
C3 Ericsson; Chalmers University of Technology; Chalmers University of
   Technology
RP Ståhl, D (corresponding author), Ericsson AB, Datalinjen 3, Linkoping, Sweden.
EM daniel.stahl@ericsson.com; kristofer.hallen@ericsson.com;
   Jan@JanBosch.com
CR Abreu R, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P551, DOI 10.1109/ICSE.2015.192
   [Anonymous], DR DOBBS J
   [Anonymous], TL9000 QUAL MAN SYST
   [Anonymous], CONTINUOUS INT UNPUB
   [Anonymous], 2002, SEI SERIES SOFTWARE
   [Anonymous], SOFTW METR 2005 11 I
   [Anonymous], MIS Q
   [Anonymous], P 13 INT C COMP SYST
   [Anonymous], 2007, SOFTWARE PRODUCT LIN
   [Anonymous], ECSSE40C
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Asuncion HU, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P1, DOI 10.1109/TEFSE.2009.5069574
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Bouillon Elke, 2013, Requirements Engineering: Foundation for Software Quality. 19th International Working Conference, REFSQ 2013. Proceedings, P158, DOI 10.1007/978-3-642-37422-7_12
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   Cook T., 1979, QUASIEXPERIMENTATION, V351
   Dabrowski R, 2013, FUND INFORM, V128, P47, DOI 10.3233/FI-2013-932
   Domges R, 1998, COMMUN ACM, V41, P54, DOI 10.1145/290133.290149
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Ki Y, 2009, IEEE INT CONF AUTOM, P525, DOI 10.1109/ASE.2009.73
   Kitchenham Barbara, 2004, Joint Technical Report, V2004, P1
   Mäder P, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P143, DOI 10.1109/RE.2009.23
   MEYER B, 1988, J SYST SOFTWARE, V8, P199, DOI 10.1016/0164-1212(88)90022-2
   Nerur S, 2005, COMMUN ACM, V48, P72, DOI 10.1145/1060710.1060712
   Oliveto Rocco, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P68, DOI 10.1109/ICPC.2010.20
   Radio Technical Commission for Aeronautics, 2011, DO178C RAD TECHN COM
   Ramesh B, 2001, IEEE T SOFTWARE ENG, V27, P58, DOI 10.1109/32.895989
   Rempel P, 2013, S VIS LANG HUM CEN C, P195, DOI 10.1109/RE.2013.6636719
   Roberts M, 2004, LECT NOTES COMPUT SC, V3092, P194
   Robson C., 2011, REAL WORLD RES RESOU
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Ståhl D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P54, DOI 10.1145/2591062.2591186
   Ståhl D, 2014, J SYST SOFTWARE, V87, P48, DOI 10.1016/j.jss.2013.08.032
   Stahl Daniel, 2013, P 2013 12 IASTED INT, P736
   Wang WT, 2015, 1ST INTERNATIONAL WORKSHOP ON JUST-IN-TIME RE (JIT RE 2015), P13, DOI 10.1109/JITRE.2015.7330213
   Wieringa R.J., 1995, INTRO REQUIREMENTS T
NR 37
TC 18
Z9 19
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2017
VL 22
IS 3
BP 967
EP 995
DI 10.1007/s10664-016-9457-1
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW4GE
UT WOS:000402459200002
DA 2024-07-18
ER

PT J
AU Kim, S
   Kim, D
AF Kim, Suntae
   Kim, Dongsun
TI Automatic identifier inconsistency detection using code dictionary
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Inconsistent identifiers; Code dictionary; Source code; Refactoring;
   Code readability; Part-of-speech analysis
AB Inconsistent identifiers make it difficult for developers to understand source code. In particular, large software systems written by several developers can be vulnerable to identifier inconsistency. Unfortunately, it is not easy to detect inconsistent identifiers that are already used in source code. Although several techniques have been proposed to address this issue, many of these techniques can result in false alarms since such techniques do not accept domain words and idiom identifiers that are widely used in programming practice. This paper proposes an approach to detecting inconsistent identifiers based on a custom code dictionary. It first automatically builds a Code Dictionary from the existing API documents of popular Java projects by using an Natural Language Processing (NLP) parser. This dictionary records domain words with dominant part-of-speech (POS) and idiom identifiers. This set of domain words and idioms can improve the accuracy when detecting inconsistencies by reducing false alarms. The approach then takes a target program and detects inconsistent identifiers of the program by leveraging the Code Dictionary. We provide CodeAmigo, a GUI-based tool support for our approach. We evaluated our approach on seven Java based open-/proprietary- source projects. The results of the evaluations show that the approach can detect inconsistent identifiers with 85.4 % precision and 83.59 % recall values. In addition, we conducted an interview with developers who used our approach, and the interview confirmed that inconsistent identifiers frequently and inevitably occur in most software projects. The interviewees then stated that our approach can help to better detect inconsistent identifiers that would have been missed through manual detection.
C1 [Kim, Suntae] Chonbuk Natl Univ, Dept Software Engn, 567 Baekje Daero, Jeollabuk Do 561756, Jeonju Si, South Korea.
   [Kim, Dongsun] Univ Luxembourg, Comp Sci & Commun Res Unit, Fac Sci Technol & Commun, 4 Rue Alphonse Weicker, L-2721 Luxembourg, Luxembourg.
   [Kim, Dongsun] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, 4 Rue Alphonse Weicker, L-2721 Luxembourg, Luxembourg.
C3 Jeonbuk National University; University of Luxembourg; University of
   Luxembourg
RP Kim, D (corresponding author), Univ Luxembourg, Comp Sci & Commun Res Unit, Fac Sci Technol & Commun, 4 Rue Alphonse Weicker, L-2721 Luxembourg, Luxembourg.; Kim, D (corresponding author), Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust, 4 Rue Alphonse Weicker, L-2721 Luxembourg, Luxembourg.
EM jipsin08@gmail.com; dongsun.kim@uni.lu
RI Kim, Dongsun/B-4856-2015
OI Kim, Dongsun/0000-0003-0272-6860
FU research funds of Chonbuk National University; Next-Generation
   Information Computing Development Program through the National Research
   Foundation of Korea (NRF) - Ministry of Science, ICT & Future Planning
   [NRF-2014M3C4A7030505]
FX This paper was supported by research funds of Chonbuk National
   University in 2014. This research was supported by Next-Generation
   Information Computing Development Program through the National Research
   Foundation of Korea (NRF) funded by the Ministry of Science, ICT &
   Future Planning (NRF-2014M3C4A7030505).
CR Abebe Surafel Lemma, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P156, DOI 10.1109/ICPC.2010.29
   Abebe SF, 2008, P WORK C REV ENG, P95
   Abebe SL, 2013, EUR CON SFTWR MTNCE, P263, DOI 10.1109/CSMR.2013.35
   Arnaoudova V, 2013, EUR CON SFTWR MTNCE, P187, DOI 10.1109/CSMR.2013.28
   Binkley D, 2011, Proceedings of the Working Conference on Mining Software Repositories (MSR), P203
   Bloch J., 2001, EFFECTIVE JAVA PROGR
   Bolch J, 2008, EFFECTIVE JAVA
   Budanitsky A, 2006, COMPUT LINGUIST, V32, P13, DOI 10.1162/coli.2006.32.1.13
   Deissenbock F, 2005, P INT WORKSH PROGR C, P261
   Delorey DP, 2009, P 21 C PSYCH PROGR G
   Falleri J.-R, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P4, DOI 10.1109/ICPC.2010.12
   Frakes W.B., 1992, INFORM RETRIVAL DATA
   Goodliffe P., 2006, Code craft: The practice of writing excellent code
   Gupta S, 2013, CONF PROC INT SYMP C, P3, DOI 10.1109/ICPC.2013.6613828
   HABER RN, 1981, J EXP PSYCHOL HUMAN, V7, P573, DOI 10.1037/0096-1523.7.3.573
   Higo Y, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P222, DOI 10.1109/ICSM.2012.6405275
   Host EW, 2009, LECT NOTES COMPUT SC, V5653, P294, DOI 10.1007/978-3-642-03013-0_14
   Hughes E, 2004, ACM SIGPLAN NOTICES, V39, P32, DOI 10.1145/1052883.1052888
   Klein D, 2003, 41ST ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P423, DOI 10.3115/1075096.1075150
   Lawire D, 2010, P 17 WORK C REV ENG, P3
   Lawrie D, 2006, SIXTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P139
   Lawrie D, 2007, EMPIR SOFTW ENG, V12, P359, DOI 10.1007/s10664-006-9032-2
   Lee S, 2012, COMM COM INF SC, V352, P111
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Madani N, 2010, EUR CON SFTWR MTNCE, P68, DOI 10.1109/CSMR.2010.31
   Martin R. C., 2008, Clean Code: A Handbook of Agile Software Craftsmanship
   MONK AF, 1983, MEM COGNITION, V11, P16, DOI 10.3758/BF03197657
   Powers DMW, 2020, J MACH LEARN TECHNOL, P37, DOI DOI 10.9735/2229-3981
   Toutanova K, 2003, HLT-NAACL 2003: HUMAN LANGUAGE TECHNOLOGY CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE MAIN CONFERENCE, P252, DOI 10.3115/1073445.1073478
   [No title captured]
NR 30
TC 27
Z9 30
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2016
VL 21
IS 2
BP 565
EP 604
DI 10.1007/s10664-015-9369-5
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI2ST
UT WOS:000373349700009
DA 2024-07-18
ER

PT J
AU Scholtes, I
   Mavrodiev, P
   Schweitzer, F
AF Scholtes, Ingo
   Mavrodiev, Pavlin
   Schweitzer, Frank
TI From Aristotle to Ringelmann: a large-scale analysis of team
   productivity and coordination in Open Source Software projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering; Repository mining; Productivity factors; Social
   aspects of software engineering; Open source software; Coordination
ID GROUP-SIZE; ECONOMIES; COMMIT
AB Complex software development projects rely on the contribution of teams of developers, who are required to collaborate and coordinate their efforts. The productivity of such development teams, i.e., how their size is related to the produced output, is an important consideration for project and schedule management as well as for cost estimation. The majority of studies in empirical software engineering suggest that - due to coordination overhead - teams of collaborating developers become less productive as they grow in size. This phenomenon is commonly paraphrased as Brooks' law of software project management, which states that "adding manpower to a software project makes it later". Outside software engineering, the non-additive scaling of productivity in teams is often referred to as the Ringelmann effect, which is studied extensively in social psychology and organizational theory. Conversely, a recent study suggested that in Open Source Software (OSS) projects, the productivity of developers increases as the team grows in size. Attributing it to collective synergetic effects, this surprising finding was linked to the Aristotelian quote that "the whole is more than the sum of its parts". Using a data set of 58 OSS projects with more than 580,000 commits contributed by more than 30,000 developers, in this article we provide a large-scale analysis of the relation between size and productivity of software development teams. Our findings confirm the negative relation between team size and productivity previously suggested by empirical software engineering research, thus providing quantitative evidence for the presence of a strong Ringelmann effect. Using fine-grained data on the association between developers and source code files, we investigate possible explanations for the observed relations between team size and productivity. In particular, we take a network perspective on developer-code associations in software development teams and show that the magnitude of the decrease in productivity is likely to be related to the growth dynamics of co-editing networks which can be interpreted as a first-order approximation of coordination requirements.
C1 [Scholtes, Ingo; Mavrodiev, Pavlin; Schweitzer, Frank] ETH, Chair Syst Design, Weinbergstr 56-58, CH-8092 Zurich, Switzerland.
C3 Swiss Federal Institutes of Technology Domain; ETH Zurich
RP Scholtes, I (corresponding author), ETH, Chair Syst Design, Weinbergstr 56-58, CH-8092 Zurich, Switzerland.
EM ischoltes@ethz.ch; pmavrodiev@ethz.ch; fschweitzer@ethz.ch
RI Schweitzer, Frank/B-2127-2012; Scholtes, Ingo/A-8251-2012
OI Scholtes, Ingo/0000-0003-2253-0216
FU Swiss National Science Foundation (SNF) [CR31I1_140644/1]; Swiss
   National Science Foundation (SNF) [CR31I1_140644] Funding Source: Swiss
   National Science Foundation (SNF)
FX Ingo Scholtes and Frank Schweitzer acknowledge support from the Swiss
   National Science Foundation (SNF), grant number CR31I1_140644/1.
CR Adams PJ, 2009, PROC IEEE INT CONF S, P319, DOI 10.1109/ICSM.2009.5306308
   Alali A, 2008, INT C PROGRAM COMPRE, P182, DOI 10.1109/ICPC.2008.24
   Albrech A., 1979, PROC JOINT SHAREGUID, P83
   [Anonymous], 2000, Software Cost Estimation with COCOMO II
   Arafat O., 2009, 42nd Hawaii International Conference on System Sciences, P1, DOI DOI 10.1109/HICSS.2009.421
   BANKER RD, 1994, INFORM SOFTWARE TECH, V36, P275, DOI 10.1016/0950-5849(94)90083-3
   Banker RD, 2004, MANAGE SCI, V50, P281, DOI 10.1287/mnsc.1040.0206
   BANKER RD, 1989, IEEE T SOFTWARE ENG, V15, P1199, DOI 10.1109/TSE.1989.559768
   Banker RD, 1997, MANAGE SCI, V43, P1709, DOI 10.1287/mnsc.43.12.1709
   Blackburn JD, 1996, IEEE T SOFTWARE ENG, V22, P875, DOI 10.1109/32.553636
   Blincoe K., 2013, Proc. 9th Joint Meeting on Foundations of Software Engineering (ESEC/FSE 13), P213, DOI DOI 10.1145/2491411.2491440
   Blincoe K., 2012, Proc. Conf. Computer Supported Cooperative Work (CSCW 12), P1351
   Blincoe KC, 2014, THESIS DREXEL U PHIL
   BOEHM BW, 1984, IEEE T SOFTWARE ENG, V10, P4, DOI 10.1109/TSE.1984.5010193
   Brooks Fred, 1975, The Mythical Man-Month
   Cataldo M., 2006, P 2006 20 06 ANN C C, P353, DOI DOI 10.1145/1180875.1180929
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Chidambaram L, 2005, INFORM SYST RES, V16, P149, DOI 10.1287/isre.1050.0051
   Comstock C, 2011, J SOFTW MAINT EVOL-R, V23, P533, DOI 10.1002/smr.526
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   EARLEY PC, 1989, ADMIN SCI QUART, V34, P565, DOI 10.2307/2393567
   German D., 2006, MSR: Proceedings of the Third International Workshop on Mining Software Repositories, P163
   Gousios G., 2008, P 2008 INT WORKING C, P129, DOI [DOI 10.1145/1370750.1370781, 10.1145/1370750.1370781]
   Gousios G., 2014, Proceedings of the 11th working conference on mining software repositories, Ved, P384, DOI [DOI 10.1145/2597073.2597126, 10.1145/2597073]
   Harison E, 2008, DOES OPEN INNOVATION
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Hofmann P, 2009, INT FED INFO PROC, V299, P105
   INGHAM AG, 1974, J EXP SOC PSYCHOL, V10, P371, DOI 10.1016/0022-1031(74)90033-X
   JACKSON JM, 1985, J PERS SOC PSYCHOL, V49, P1199, DOI 10.1037/0022-3514.49.5.1199
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   KARAU SJ, 1993, J PERS SOC PSYCHOL, V65, P681, DOI 10.1037/0022-3514.65.4.681
   KARAU SJ, 1995, CURR DIR PSYCHOL SCI, V4, P134, DOI 10.1111/1467-8721.ep10772570
   KOENKER R, 1981, J ECONOMETRICS, V17, P107, DOI 10.1016/0304-4076(81)90062-2
   KRAVITZ DA, 1986, J PERS SOC PSYCHOL, V50, P936, DOI 10.1037/0022-3514.50.5.936
   LATANE B, 1979, J PERS SOC PSYCHOL, V37, P822, DOI 10.1037//0022-3514.37.6.822
   Lerner J, 2002, J IND ECON, V50, P197, DOI 10.1111/1467-6451.00174
   Levenshtein V. I., 1966, SOV PHYS DOKL, V10, P707
   Lin MF, 2013, INFORM SYST RES, V24, P906, DOI 10.1287/isre.2013.0480
   Maxwell KD, 1996, IEEE T SOFTWARE ENG, V22, P706, DOI 10.1109/32.544349
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Mockus A., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P263, DOI 10.1109/ICSE.2000.870417
   Paiva E, 2010, INNOVATIONS IN COMPUTING SCIENCES AND SOFTWARE ENGINEERING, P99, DOI 10.1007/978-90-481-9112-3_17
   Premraj R, 2005, 11 IEEE INT S SOFTW, DOI [10.1109/MET-RICS.2005.8, DOI 10.1109/MET-RICS.2005.8]
   Ringelmann M., 1913, Annales de l'Institut National Agronomique, V12, P1
   Robles G., 2004, "Second International Workshop on Remote Analysis and Measurement of Software Systems (RAMSS 04)" - W15S Workshop - 26th International Conference on Software Engineering, P51, DOI 10.1049/ic:20040351
   Scholtes I, 2015, ARISTOTLE RINGELMANN, DOI [10.5281/zenodo.14831, DOI 10.5281/ZENODO.14831]
   SHEPPERD JA, 1993, PSYCHOL BULL, V113, P67, DOI 10.1037/0033-2909.113.1.67
   Shiue YC, 2010, COMPUT HUM BEHAV, V26, P768, DOI 10.1016/j.chb.2010.01.014
   Sornette D, 2014, PLOS ONE, V9, DOI 10.1371/journal.pone.0103023
   Steiner I. D, 1972, SOCIAL PSYCHOL MONOG
   STIGLER GJ, 1958, J LAW ECON, V1, P54, DOI 10.1086/466541
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   WAGNER JA, 1995, ACAD MANAGE J, V38, P152, DOI 10.5465/256731
   WILLIAMS K, 1981, J PERS SOC PSYCHOL, V40, P303, DOI 10.1037/0022-3514.40.2.303
   WILLIAMS KD, 1991, J PERS SOC PSYCHOL, V61, P570, DOI 10.1037/0022-3514.61.4.570
   Wolf T, 2009, IEEE SOFTWARE, V26, P58, DOI 10.1109/MS.2009.16
   YETTON P, 1983, ORGAN BEHAV HUM PERF, V32, P145, DOI 10.1016/0030-5073(83)90144-7
NR 58
TC 37
Z9 40
U1 0
U2 39
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2016
VL 21
IS 2
BP 642
EP 683
DI 10.1007/s10664-015-9406-4
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA DI2ST
UT WOS:000373349700011
DA 2024-07-18
ER

PT J
AU Fernández-Sáez, AM
   Genero, M
   Caivano, D
   Chaudron, MRV
AF Fernandez-Saez, Ana M.
   Genero, Marcela
   Caivano, Danilo
   Chaudron, Michel R. V.
TI Does the level of detail of UML diagrams affect the maintainability of
   source code?: a family of experiments
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE UML diagrams; Software maintenance; Level of detail; Controlled
   experiment; Replication; Family of experiments
ID SOFTWARE; MAINTENANCE; COMPLEXITY; DESIGN; IMPACT
AB Although the UML is considered to be the de facto standard notation with which to model software, there is still resistance to model-based development. UML modeling is perceived to be expensive and not necessarily cost-effective. It is therefore important to collect empirical evidence concerning the conditions under which the use of UML makes a practical difference. The focus of this paper is to investigate whether and how the Level of Detail (LoD) of UML diagrams impacts on the performance of maintenance tasks in a model-centric approach. A family of experiments consisting of one controlled experiment and three replications has therefore been carried out with 81 students with different abilities and levels of experience from 3 countries (The Netherlands, Spain, and Italy). The analysis of the results of the experiments indicates that there is no strong statistical evidence as to the influence of different LoDs. The analysis suggests a slight tendency toward better results when using low LoD UML diagrams, especially if used for the modification of the source code, while a high LoD would appear to be helpful in understanding the system. The participants in our study also favored low LoD diagrams because they were perceived as easier to read. Although the participants expressed a preference for low LoD diagrams, no statistically significant conclusions can be drawn from the set of experiments. One important finding attained from this family of experiments was that the participants minimized or avoided the use of UML diagrams, regardless of their LoD. This effect was probably the result of using small software systems from well-known domains as experimental materials.
C1 [Fernandez-Saez, Ana M.; Genero, Marcela] Univ Castilla La Mancha, Dept Technol & Informat Syst, ALARCOS Res Grp, Paseo Univ 4, E-13071 Ciudad Real, Spain.
   [Caivano, Danilo] Univ Bari, Dept Informat, Via E Orabona 4, I-70126 Bari, Italy.
   [Caivano, Danilo] Univ Bari, Spin Off Co, SER&Practices Srl, Via E Orabona 4, I-70126 Bari, Italy.
   [Chaudron, Michel R. V.] Univ Technol, Joint Comp Sci & Engn Dept Chalmers, SE-41296 Gothenburg, Sweden.
   [Chaudron, Michel R. V.] Univ Gothenburg, SE-41296 Gothenburg, Sweden.
   [Fernandez-Saez, Ana M.; Chaudron, Michel R. V.] Leiden Univ, Leiden Inst Adv Comp Sci, NielsBohrweg 1, NL-2333 CA Leiden, Netherlands.
C3 Universidad de Castilla-La Mancha; Universita degli Studi di Bari Aldo
   Moro; Universita degli Studi di Bari Aldo Moro; University of
   Gothenburg; Leiden University; Leiden University - Excl LUMC
RP Fernández-Sáez, AM (corresponding author), Leiden Univ, Leiden Inst Adv Comp Sci, NielsBohrweg 1, NL-2333 CA Leiden, Netherlands.
EM anamaria.fernandez.saez@gmail.com; Marcela.Genero@uclm.es;
   danilo.caivano@uniba.it; chaudron@chalmers.se
RI Fernández-Sáez, Ana Maria/AAS-8299-2021; GENERO, MARCELA/L-6480-2014
OI Fernández-Sáez, Ana Maria/0000-0001-5768-1650; GENERO,
   MARCELA/0000-0002-6868-7465
FU GEODAS-BC (Ministerio de Economia y Competitividad); GEODAS-BC (Fondo
   Europeo de Desarrollo Regional FEDER) [TIN2012-37493-C03-01]; IMPACTUM
   (Consejeria de Educacion, Ciencia y Cultura de la Junta de Comunidades
   de Castilla La Mancha); IMPACTUM (Fondo Europeo de Desarrollo Regional
   FEDER) [PEII11-0330-4414]
FX This work has been funded by the following projects: GEODAS-BC
   (Ministerio de Economia y Competitividad and Fondo Europeo de Desarrollo
   Regional FEDER, TIN2012-37493-C03-01) and IMPACTUM (Consejeria de
   Educacion, Ciencia y Cultura de la Junta de Comunidades de Castilla La
   Mancha, y Fondo Europeo de Desarrollo Regional FEDER, PEII11-0330-4414).
CR Abrial J-R., 1996, The B Book
   Anda B, 2006, EMPIR SOFTW ENG, V11, P555, DOI 10.1007/s10664-006-9020-6
   [Anonymous], PRACTICAL NONPARAMET
   [Anonymous], 25001 ISOIEC
   [Anonymous], COMPREHENSIVE METAAN
   [Anonymous], INF SOFTW TECHNOL
   [Anonymous], UN MOD LANG DOC ASS
   [Anonymous], 2013, P 17 INT C EV ASS SO
   [Anonymous], SPSS 12 0 SYNT REF G
   [Anonymous], 2003, DESIGN METHODS REACT
   [Anonymous], 2010, P 1 INT WORKSH REPL
   [Anonymous], ACM T SOFTW IN PRESS
   [Anonymous], LNCS
   [Anonymous], P EXP EMP STUD SOFTW
   [Anonymous], SCI AM
   [Anonymous], 2000, QUESTIONNAIRE DESIGN
   [Anonymous], P GUIDE
   [Anonymous], UML 2 TOOLKIT
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Briand LC, 2005, IEEE T SOFTWARE ENG, V31, P833, DOI 10.1109/TSE.2005.105
   Bruegge Bernd., 2010, Object-Oriented Software Engineering: Using UML, Patterns and Java, VThird
   CANT SN, 1995, INFORM SOFTWARE TECH, V37, P351, DOI 10.1016/0950-5849(95)91491-H
   Cohen D, 2004, ADV COMPUT, V62, P1, DOI 10.1016/S0065-2458(03)62001-2
   Devore J., 1999, APPL STAT ENG SCI
   Dobing B, 2006, COMMUN ACM, V49, P109, DOI 10.1145/1125944.1125949
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Erickson J, 2007, COMMUN ACM, V50, P46, DOI 10.1145/1278201.1278205
   Fernández-Sáez AM, 2015, INFORM SOFTWARE TECH, V57, P644, DOI 10.1016/j.infsof.2014.05.014
   Fernández-Sáez AM, 2013, INFORM SOFTWARE TECH, V55, P1119, DOI 10.1016/j.infsof.2012.12.006
   Garousi G., 2013, P 17 INT C EVALUATIO, P24
   Glass R. L., 2002, FACTS FALLACIES SOFT
   Glässer U, 2003, COMPUT NETW, V42, P343, DOI 10.1016/S1389-1286(03)00247-0
   Gravino C., P 2010 ACM S APPL CO, P2365
   Grossman M, 2005, INFORM SOFTWARE TECH, V47, P383, DOI 10.1016/j.infsof.2004.09.005
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Hedges LV., 2014, STAT METHODS META AN
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Jedlitschka A., 2008, REPORTING EXPT SOFTW
   Juristo N., 2013, BASICS SOFTWARE ENG
   Juristo N, 2013, INFORM SOFTWARE TECH, V55, P215, DOI 10.1016/j.infsof.2012.07.016
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Karahasanovic A., 2007, Proc. Ninth Australas. Conf. Comput. Educ., V66, P81
   Keng Siau, 1999, Journal of Database Management, V10, P44, DOI 10.4018/jdm.1999100105
   Kirk R.E., 1995, EXPT DESIGN, V3rd
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Lange CFJ, 2006, IEEE SOFTWARE, V23, P40, DOI 10.1109/MS.2006.50
   LAUESEN S, 2002, SOFTWARE REQUIREMENT
   Lientz B P., 1980, Software Maintenance Management
   LINDSAY RM, 1993, AM STAT, V47, P217, DOI 10.2307/2684982
   Nugroho A, 2009, LECT NOTES COMPUT SC, V5795, P181, DOI 10.1007/978-3-642-04425-0_14
   Nugroho A, 2009, INFORM SOFTWARE TECH, V51, P1670, DOI 10.1016/j.infsof.2009.04.007
   Nugroho A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P90
   Poels G, 2000, LECT NOTES COMPUT SC, V1920, P499
   Roehm T, 2012, PROC INT CONF SOFTW, P255, DOI 10.1109/ICSE.2012.6227188
   Scanniello G, 2010, ICEIS 2010: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 3: INFORMATION SYSTEMS ANALYSIS AND SPECIFICATION, P141
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Spivey J. M., 1989, The Z Notation: A Reference Manual
   Tryggeseth E., 1997, Empirical Software Engineering, V2, P201, DOI 10.1023/A:1009778023863
   Vegas S., 2006, International Symposium on Empirical Software Engineering, P28, DOI DOI 10.1145/1159733.1159741
   Verelst J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17
   Wohlin C., 1999, EXPT SOFTWARE ENG IN
NR 66
TC 23
Z9 24
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2016
VL 21
IS 1
BP 212
EP 259
DI 10.1007/s10664-014-9354-4
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI2SQ
UT WOS:000373349300008
DA 2024-07-18
ER

PT J
AU Afzal, W
   Ghazi, AN
   Itkonen, J
   Torkar, R
   Andrews, A
   Bhatti, K
AF Afzal, Wasif
   Ghazi, Ahmad Nauman
   Itkonen, Juha
   Torkar, Richard
   Andrews, Anneliese
   Bhatti, Khurram
TI An experiment on the effectiveness and efficiency of exploratory testing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Experiment; Exploratory testing; Efficiency;
   Effectiveness
ID DEFECT DETECTION; SOFTWARE
AB The exploratory testing (ET) approach is commonly applied in industry, but lacks scientific research. The scientific community needs quantitative results on the performance of ET taken from realistic experimental settings. The objective of this paper is to quantify the effectiveness and efficiency of ET vs. testing with documented test cases (test case based testing, TCT). We performed four controlled experiments where a total of 24 practitioners and 46 students performed manual functional testing using ET and TCT. We measured the number of identified defects in the 90-minute testing sessions, the detection difficulty, severity and types of the detected defects, and the number of false defect reports. The results show that ET found a significantly greater number of defects. ET also found significantly more defects of varying levels of difficulty, types and severity levels. However, the two testing approaches did not differ significantly in terms of the number of false defect reports submitted. We conclude that ET was more efficient than TCT in our experiment. ET was also more effective than TCT when detection difficulty, type of defects and severity levels are considered. The two approaches are comparable when it comes to the number of false defect reports submitted.
C1 [Afzal, Wasif] Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
   [Ghazi, Ahmad Nauman; Bhatti, Khurram] Blekinge Inst Technol, SE-37179 Karlskrona, Sweden.
   [Itkonen, Juha] Aalto Univ, Dept Comp Sci & Engn, Espoo, Finland.
   [Torkar, Richard] Univ Gothenburg, Chalmers Univ Technol, Dept Comp Sci & Engn, Gothenburg, Sweden.
   [Andrews, Anneliese] Univ Denver, Denver, CO 80208 USA.
C3 Malardalen University; Blekinge Institute Technology; Aalto University;
   Chalmers University of Technology; University of Gothenburg; University
   of Denver
RP Afzal, W (corresponding author), Malardalen Univ, Sch Innovat Design & Engn, Vasteras, Sweden.
EM wasif.afzal@mdh.se; nauman.ghazi@bth.se; juha.itkonen@aalto.fi;
   richard.torkar@cse.gu.se; andrews@cs.du.edu
RI Ghazi, Ahmad Nauman/R-1982-2016; Ghazi, Ahmad Nauman/M-3905-2019;
   Itkonen, Juha/E-8360-2012
OI Ghazi, Ahmad Nauman/0000-0001-9336-4361; Itkonen,
   Juha/0000-0001-9084-495X
CR [Abran A. IEEE Computer Society IEEE Computer Society], 2004, GUIDE SOFTWARE ENG B
   Agruss C, 2000, AD HOC SOFTWARE TEST
   Ahonen JJ, 2004, EMPIR SOFTW ENG, V9, P275, DOI 10.1023/B:EMSE.0000039880.99096.af
   Ali S, 2010, IEEE T SOFTWARE ENG, V36, P742, DOI 10.1109/TSE.2009.52
   Andersson C, 2002, P 2002 INT S EMP SOF
   [Anonymous], 2020, EMPIR SOFTW ENG
   [Anonymous], 2008, GUIDE ADV EMPIRICAL, DOI [10.1007/978-1-84800-044-5_14, DOI 10.1007/978-1-84800-044-5_14]
   Arisholm E, 2007, IEEE T SOFTWARE ENG, V33, P65, DOI 10.1109/TSE.2007.17
   Bach J, 2003, Exploratory testing explained
   Bach Jonathan, 2000, Software Testing and Quality Engineering Magazine, V2, P32
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Beer A, 2008, P EUR C SOFTW ENG AD
   Berner S, 2005, P 27 INT C SOFTW ENG
   Bertolino A, 2008, LECT NOTES COMPUTER, V5089
   Bertolino A, 2007, P 2007 INT C FUT SOF
   Bhatti K, 2010, THESIS BLEKINGE I TE
   Briand LC, 2007, P 1 INT S EMP SOFTW
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Cohen J., 1988, STAT POWER ANAL BEHA
   Neto PADS, 2011, INFORM SOFTWARE TECH, V53, P407, DOI 10.1016/j.infsof.2010.12.003
   do Nascimento LHO, 2007, WORKSH DOM SPEC APPR
   Dustin E., 1999, AUTOMATED SOFTWARE T
   Galletta F., 1993, Accounting, Management Information Technology, V3, P79, DOI [10.1016/0959-8022(93)90001-M, DOI 10.1016/0959-8022(93)90001-M]
   Goodenough J. B., 1975, SIGPLAN Notices, V10, P493, DOI 10.1145/390016.808473
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Grechanik M, 2009, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2009.5070540
   Hartman Alan, 2002, ACM SIGSOFT Software Engineering Notes, V27, P205, DOI DOI 10.1145/566172.566207
   HOST M, 2005, P 27 INT C SOFTW ENG
   Houdek F, 2002, INT J SOFTW ENG KNOW, V12, P637, DOI 10.1142/S0218194002001128
   HUTCHINS M, 1994, PROC INT CONF SOFTW, P191, DOI 10.1109/ICSE.1994.296778
   IEEE, 2010, IEEE Standard 1044-2009 (Revision of IEEE Standard 1044-1993)
   Itkonen J, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P82, DOI 10.1109/ISESE.2005.1541817
   Itkonen Juha, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P61
   Itkonen J., 2008, THESIS HELSINKI U TE
   Itkonen J, 2013, IEEE T SOFTWARE ENG, V39, P707, DOI 10.1109/TSE.2012.55
   Itkonen J, 2009, INT SYMP EMP SOFTWAR, P495
   Jia Y, 2011, IEEE T SOFTWARE ENG, V37, P649, DOI 10.1109/TSE.2010.62
   Juristo N, 2004, EMPIR SOFTW ENG, V9, P7, DOI 10.1023/B:EMSE.0000013513.48963.1b
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kamsties E., 1995, Software Engineering - ESEC '95. 5th European Software Engineering Conference. Proceedings, P362
   Kaner C, 2008, Lessons learned in software testing
   Kettunen V, 2010, P INT S SOFTW TEST A
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Lung J, 2008, ACM IEEE 30 INT C SO
   Lyndsay James, 2003, Adventures in Session-Based Testing
   Myers Glenford J., 2011, The Art of Software Testing
   Naseer A, 2010, THESIS BLEKINGE I TE
   Nie CH, 2011, ACM COMPUT SURV, V43, DOI 10.1145/1883612.1883618
   Poon PL, 2011, SOFTWARE QUAL J, V19, P141, DOI 10.1007/s11219-010-9109-4
   Ryber T, 2007, ESSENTIAL SOFTWARE T
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Svahnberg M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P288
   Taipale O, 2006, 2006 AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P283
   Vaga J, 2002, MANAGING HIGH SPEED, P23
   van Veenendaal E, 2002, TESTING PRACTITIONER
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   WEYUKER EJ, 1993, IEEE T SOFTWARE ENG, V19, P912, DOI 10.1109/32.241773
   Whittaker J., 2010, Exploratory Software Testing
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wood M, 1997, LECT NOTES COMPUT SC, V1301, P262, DOI 10.1145/267896.267915
   Yamaura T, 2002, IEEE SOFTWARE, V15, P30
   Yang B, 2008, IEEE T SOFTWARE ENG, V34, P813, DOI 10.1109/TSE.2008.47
NR 63
TC 22
Z9 24
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2015
VL 20
IS 3
BP 844
EP 878
DI 10.1007/s10664-014-9301-4
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CI1DF
UT WOS:000354480800008
OA Green Submitted
DA 2024-07-18
ER

PT J
AU De Lucia, A
   Di Penta, M
   Oliveto, R
   Panichella, A
   Panichella, S
AF De Lucia, Andrea
   Di Penta, Massimiliano
   Oliveto, Rocco
   Panichella, Annibale
   Panichella, Sebastiano
TI Labeling source code with information retrieval methods: an empirical
   study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Program comprehension; Software artifact labeling; Information
   retrieval; Empirical studies
ID RECOVERING TRACEABILITY LINKS; PROGRAM COMPREHENSION; CONCEPTUAL
   COHESION; LATENT
AB To support program comprehension, software artifacts can be labeled-for example within software visualization tools-with a set of representative words, hereby referred to as labels. Such labels can be obtained using various approaches, including Information Retrieval (IR) methods or other simple heuristics. They provide a bird-eye's view of the source code, allowing developers to look over software components fast and make more informed decisions on which parts of the source code they need to analyze in detail. However, few empirical studies have been conducted to verify whether the extracted labels make sense to software developers. This paper investigates (i) to what extent various IR techniques and other simple heuristics overlap with (and differ from) labeling performed by humans; (ii) what kinds of source code terms do humans use when labeling software artifacts; and (iii) what factors-in particular what characteristics of the artifacts to be labeled-influence the performance of automatic labeling techniques. We conducted two experiments in which we asked a group of students (38 in total) to label 20 classes from two Java software systems, JHotDraw and eXVantage. Then, we analyzed to what extent the words identified with an automated technique-including Vector Space Models, Latent Semantic Indexing (LSI), latent Dirichlet allocation (LDA), as well as customized heuristics extracting words from specific source code elements-overlap with those identified by humans. Results indicate that, in most cases, simpler automatic labeling techniques-based on the use of words extracted from class and method names as well as from class comments-better reflect human-based labeling. Indeed, clustering-based approaches (LSI and LDA) are more worthwhile to be used for source code artifacts having a high verbosity, as well as for artifacts requiring more effort to be manually labeled. The obtained results help to define guidelines on how to build effective automatic labeling techniques, and provide some insights on the actual usefulness of automatic labeling techniques during program comprehension tasks.
C1 [De Lucia, Andrea; Panichella, Annibale] Univ Salerno, Software Engn Lab, I-84084 Fisciano, SA, Italy.
   [Di Penta, Massimiliano; Panichella, Sebastiano] Univ Sannio, RCOST, I-82100 Benevento, Italy.
   [Oliveto, Rocco] Univ Molise, Dept Biosci & Terr, I-86090 Pesche, IS, Italy.
C3 University of Salerno; University of Sannio; University of Molise
RP Oliveto, R (corresponding author), Univ Molise, Dept Biosci & Terr, I-86090 Pesche, IS, Italy.
EM adelucia@unisa.it; dipenta@unisannio.it; rocco.oliveto@unimol.it;
   apanichella@unisa.it; spanichella@unisannio.it
RI Panichella, Annibale/AAJ-8443-2020; Di Penta,
   Massimiliano/AAF-9656-2021; De Lucia, Andrea/AAG-6781-2020
OI Panichella, Sebastiano/0000-0003-4120-626X; Di Penta,
   Massimiliano/0000-0002-0340-9747; De Lucia, Andrea/0000-0002-4238-1425
CR [Anonymous], 2002, Software Design-Cognitive Aspects
   [Anonymous], 2006, Advances in Neural Information Processing Systems
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Baker R.D., 1995, Randomization Tests
   Baldi PF, 2008, ACM SIGPLAN NOTICES, V43, P543, DOI 10.1145/1449955.1449807
   Binkley D, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P99, DOI 10.1109/TAIC.PART.2007.10
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   CANFORA G, 2005, P 11 IEEE INT S SOFT, P20
   Chang J, 2010, ANN APPL STAT, V4, P124, DOI 10.1214/09-AOAS309
   Cullum J. K., 1998, LANCZOS ALGORITHMS L, V1
   De Lucia A, 2007, ACM T SOFTW ENG METH, V16, DOI 10.1145/1276933.1276934
   De Lucia A, 2011, IEEE T SOFTWARE ENG, V37, P205, DOI 10.1109/TSE.2010.89
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Emenecker J., 2010, P 32 ACM IEEE INT C, V1, P155, DOI DOI 10.1145/1806799.1806825
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Gethers M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1034, DOI 10.1145/1985793.1985988
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Guerrouj L, 2011, J SOFTW-EVOL PROC, V25, P575
   Haiduc S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P223, DOI 10.1145/1810295.1810335
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hindle A, 2012, P 28 INT C SOFTW MAI
   Hindle A., 2011, P 8 WORK C MIN SOFTW, P163, DOI DOI 10.1145/1985441.1985466
   HOLM S, 1979, SCAND J STAT, V6, P65
   Ko AJ, 2006, IEEE T SOFTWARE ENG, V32, P971, DOI 10.1109/TSE.2006.116
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Lavrenko V, 2009, INFORM RETRIEVAL SER, V26, P1
   Lawrie D, 2007, J SOFTW MAINT EVOL-R, V19, P205, DOI 10.1002/smr.350
   Liblit B, 2006, P 18 ANN WORKSH PSYC
   Linstead E, 2008, SEVENTH INTERNATIONAL CONFERENCE ON MACHINE LEARNING AND APPLICATIONS, PROCEEDINGS, P813, DOI 10.1109/ICMLA.2008.47
   Liu YX, 2009, PROC IEEE INT CONF S, P233, DOI 10.1109/ICSM.2009.5306318
   Maletic JI, 2001, PROC INT CONF SOFTW, P103, DOI 10.1109/ICSE.2001.919085
   Marcus A, 2005, PROC IEEE INT CONF S, P133
   Marcus A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P107, DOI 10.1109/ASE.2001.989796
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Marcus A, 2008, IEEE T SOFTWARE ENG, V34, P287, DOI 10.1109/TSE.2007.70768
   Medini S, 2012, P 19 WORK C REV ENG
   Murphy G. C, 1996, THESIS U WASHINGTON
   Porteous I., 2008, P 14 ACM SIGKDD INT, P569, DOI DOI 10.1145/1401890.1401960
   PORTER MF, 1980, PROGRAM-AUTOM LIBR, V14, P130, DOI 10.1108/eb046814
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Poshyvanyk D, 2006, PROC IEEE INT CONF S, P469
   Rajlich V, 2002, PROG COMPREHEN, P271, DOI 10.1109/WPC.2002.1021348
   Rastkar S., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P527, DOI 10.1145/1810295.1810464
   SHANNON CE, 1948, BELL SYST TECH J, V27, P379, DOI 10.1002/j.1538-7305.1948.tb01338.x
   Sridhara G, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P101, DOI 10.1145/1985793.1985808
   Sridhara Giriprasad, 2010, 25 IEEEACM INT C AUT, P43
   Srivastava A., 2009, Journal of Administration and Governance
   Storey MA, 2006, SOFTWARE QUAL J, V14, P187, DOI 10.1007/s11219-006-9216-4
   Takang AA, 1996, J PROGRAM LANG, V4, P143
   Thomas SW, 2010, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2010.13
   Thomas SW, 2011, 8 WORK C MIN SOFTW R, P173
NR 55
TC 26
Z9 30
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2014
VL 19
IS 5
BP 1383
EP 1420
DI 10.1007/s10664-013-9285-5
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AP9VT
UT WOS:000342429900008
DA 2024-07-18
ER

PT J
AU Bettenburg, N
   Hassan, AE
AF Bettenburg, Nicolas
   Hassan, Ahmed E.
TI Studying the impact of social interactions on software quality
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Human factors; Software evolution; Metrics/measurement; Software quality
   assurance
ID CODE CHURN; METRICS
AB Correcting software defects accounts for a significant amount of resources in a software project. To make best use of testing efforts, researchers have studied statistical models to predict in which parts of a software system future defects are likely to occur. By studying the mathematical relations between predictor variables used in these models, researchers can form an increased understanding of the important connections between development activities and software quality. Predictor variables used in past top-performing models are largely based on source code-oriented metrics, such as lines of code or number of changes. However, source code is the end product of numerous interlaced and collaborative activities carried out by developers. Traces of such activities can be found in the various repositories used to manage development efforts. In this paper, we develop statistical models to study the impact of social interactions in a software project on software quality. These models use predictor variables based on social information mined from the issue tracking and version control repositories of two large open-source software projects. The results of our case studies demonstrate the impact of metrics from four different dimensions of social interaction on post-release defects. Our findings show that statistical models based on social information have a similar degree of explanatory power as traditional models. Furthermore, our results demonstrate that social information does not substitute, but rather augments traditional source code-based metrics used in defect prediction models.
C1 [Bettenburg, Nicolas; Hassan, Ahmed E.] Queens Univ, Sch Comp, SAIL, Kingston, ON K7L 3N6, Canada.
C3 Queens University - Canada
RP Bettenburg, N (corresponding author), Queens Univ, Sch Comp, SAIL, 156 Barrie St, Kingston, ON K7L 3N6, Canada.
EM nicbet@cs.queensu.ca; ahmed@cs.queensu.ca
RI Ali, Ahmed/HOF-4672-2023; Hassan, Ahmed/AAB-7241-2019; KHALIFA, AHMED
   khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572
CR [Anonymous], 2011, P ACM 2011 C COMP SU, DOI DOI 10.1145/1958824.1958887
   [Anonymous], 2010, PROC ICSE
   [Anonymous], FASE 2010 IN PRESS
   [Anonymous], APPL MULTIPLE REGRES
   [Anonymous], 2010, PROC ACMIEEE INT S E
   [Anonymous], 1993, LANGUAGE COMMUNICATI
   [Anonymous], 1976, ICSE 76
   [Anonymous], 2006, ISESE '06: Proceedings of the 5th International Symposium on Empirical Software Engineering. Volume II: Short Papers and Posters, DOI DOI 10.1145/1159733.1159739.
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bettenburg N., 2008, P 16 ACM SIGSOFT INT, P308
   Bettenburg N., 2008, P 2008 INT WORKING C, P27
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bird Christian, 2008, Proceedings of the 2008 ACM SIGSOFT Symposium on the Foundations of Software Engineering, P24
   Bland JM, 1996, BRIT MED J, V312, P1079
   Cataldo M, 2009, IEEE T SOFTWARE ENG, V35, P864, DOI 10.1109/TSE.2009.42
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   D'Este Claire., 2004, Proceedings of the 4th International Workshop on Epigenetic Robotics, P111
   EDWARDS AWF, 1963, J R STAT SOC SER A-G, V126, P109, DOI 10.2307/2982448
   Fay MP, 2010, STAT SURV, V4, P1, DOI 10.1214/09-SS051
   Fischer M, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P90, DOI 10.1109/WCRE.2003.1287240
   Friendly M, 2002, AM STAT, V56, P316, DOI 10.1198/000313002533
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Jeong G, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P111, DOI 10.1145/1595696.1595715
   Kutner M., 2004, HLTH ENV RES ONLINE, Vfourth
   Meneely A., 2008, P 16 ACM SIGSOFT INT, P13, DOI DOI 10.1145/1453101.1453106
   Mertsalov K, 2009, 2009 INTERNATIONAL CONFERENCE ON ADVANCES IN SOCIAL NETWORKS ANALYSIS AND MINING, P194, DOI 10.1109/ASONAM.2009.73
   Mockus A, 2005, PROC INT CONF SOFTW, P225
   Mockus A, 2009, INT SYMP EMP SOFTWAR, P292
   Munson JC, 1998, PROC IEEE INT CONF S, P24, DOI 10.1109/ICSM.1998.738486
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan Nachiappan, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P364
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Purao S, 2003, ACM COMPUT SURV, V35, P191, DOI 10.1145/857076.857090
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   SHANNON CE, 1948, BELL SYST TECH J, V27, P623, DOI 10.1002/j.1538-7305.1948.tb00917.x
   Shihab E., 2010, Proceedings of the 17th Working Conference on Reverse Engineering (WCRE 2010), P13
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   StanleyWasserman Katherine, 1994, SOCIAL NETWORK ANAL, DOI 10.1017/CBO9780511815478
   Steel R.G.D., 1960, Principles and Procedures of Statistics with Special Reference to the Biological Sciences, P187
   Whiston S.C., 1993, J CAREER DEV, V19, P175
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Zeller A, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zimmermann T., 2007, P ICSE 2007 WORK 3 I, DOI [10.1109/PROMISE.2007.10, DOI 10.1109/PROMISE.2007.10]
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 48
TC 31
Z9 39
U1 0
U2 30
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2013
VL 18
IS 2
BP 375
EP 431
DI 10.1007/s10664-012-9205-0
PG 57
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 077ZD
UT WOS:000314067000006
DA 2024-07-18
ER

PT J
AU Holbrook, EA
   Hayes, JH
   Dekhtyar, A
   Li, WB
AF Holbrook, Elizabeth Ashlee
   Hayes, Jane Huffman
   Dekhtyar, Alex
   Li, Wenbin
TI A study of methods for textual satisfaction assessment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Methods for SQA and V&V; Requirements/specifications; Validation;
   Tracing
ID TRACEABILITY LINKS; DOCUMENTATION; GENERATION; CODE
AB Software projects requiring satisfaction assessment are often large scale systems containing hundreds of requirements and design elements. These projects may exist within a high assurance domain where human lives and millions of dollars are at stake. Satisfaction assessment can help identify unsatisfied requirements early in the software development lifecycle, when issues can be corrected with less impact and lower cost. Manual satisfaction assessment is expensive both in terms of human effort and project cost. Automated satisfaction assessment assists requirements analysts during the satisfaction assessment process to more quickly determine satisfied requirements and to reduce the satisfaction assessment search space. This paper introduces two new automated satisfaction assessment techniques and empirically demonstrates their effectiveness, as well as validates two previously existing automated satisfaction assessment techniques. Validation shows that automatically generated satisfaction assessments have high accuracy, thus reducing the workload of the analyst in the satisfaction assessment process.
C1 [Holbrook, Elizabeth Ashlee] Lexmark, Lexington, KY 40508 USA.
   [Hayes, Jane Huffman; Li, Wenbin] Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
   [Dekhtyar, Alex] Calif Polytech State Univ San Luis Obispo, Dept Comp Sci, San Luis Obispo, CA 93407 USA.
C3 Lexmark International, Inc.; University of Kentucky; California State
   University System; California Polytechnic State University San Luis
   Obispo
RP Hayes, JH (corresponding author), Univ Kentucky, Dept Comp Sci, Lexington, KY 40506 USA.
EM ashleeh@gmail.com; hayes@cs.uky.edu; dekhtyar@calpoly.edu;
   wenbin.li@uky.edu
FU National Science Foundation under NSF grant [CCF-0811140]; NASA
   [NNG05GQ58G]; Division of Computing and Communication Foundations;
   Direct For Computer & Info Scie & Enginr [0811140] Funding Source:
   National Science Foundation
FX This work is funded in part by the National Science Foundation under NSF
   grant CCF-0811140. This work was partially sponsored by NASA under grant
   NNG05GQ58G. We thank David Pruett and the other evaluators for their
   help. We thank Hakim Sultanov and Bill Kidwell. Thanks to Stephanie
   Ferguson, Marcus Fisher, Ken McGill, Tim Menzies, Lisa Montgomery, and
   everyone at the NASA IV&V facility. Thanks also to fellow graduate
   students Jody Larsen, Senthil Sundaram, Liming Zhao, and Sravanthi
   Vadlamudi. We thank statistics professor Dr. Arnold Stromberg.
CR Alspaugh TA, 2008, INFORM SOFTWARE TECH, V50, P198, DOI 10.1016/j.infsof.2006.12.003
   Altman DG, 1991, PRACTICAL STAT MED R
   [Anonymous], ISO90002000
   [Anonymous], 1983, INTRO MODERN INFORM
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Baeza-Yates R., 2003, MODERN INFORM RETRIE
   Cleland-Huang J, 2005, PROC INT CONF SOFTW, P362
   Cleland-Huang J, 2002, JOINT C REQ ENG
   Cuddeback D, 2010, P 18 INT C REQ ENG S
   Di Lucca GA, 2001, BP231 DIP INF SIST
   Diallo MH, 2007, WORKSH ROL SOFTW ARC
   Duran A, 2001, JORN ING REQ APL SEV
   Gotel OCZ, 1996, WORKSH REQ ENG CHANG
   Greenspan S., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P135, DOI 10.1109/ICSE.1994.296773
   Hayes J., 2005, P 3 INT WORKSHOP TRA, P20
   Hayes JH, 2007, INNOV SYST SOFTW ENG, V3, P193, DOI 10.1007/s11334-007-0024-1
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   Hayes JH, 2006, ADV DYNAMIC GENERATI
   HAYES JH, 2003, INT C REQ ENG
   Holbrook EA, 2009, PROCEEDINGS OF THE 2009 17TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, P149, DOI 10.1109/RE.2009.10
   Holbrook EA, 2009, THESIS U KENTUCKY LE
   Lecoeuche R, 2000, FIFTEENTH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P55, DOI 10.1109/ASE.2000.873650
   Letier E., 2004, Software Engineering Notes, V29, P53, DOI 10.1145/1041685.1029905
   Marcus A, 2005, INT J SOFTW ENG KNOW, V15, P811, DOI 10.1142/S0218194005002543
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   Marcus M.P., 1993, COMPUT LINGUIST, V19, P313, DOI DOI 10.21236/ADA273556
   Porter A., 1998, Empirical Software Engineering, V3, P355, DOI 10.1023/A:1009776104355
   Robinson WN, 2009, IEEE SOFTWARE, V26, P58, DOI 10.1109/MS.2009.138
   Robinson WN, 1999, IEEE T SOFTWARE ENG
   Robinson WN, 2005, P P 38 ANN HAW INT C, V7, P1881, DOI [10.1109/HICSS.2005.306, DOI 10.1109/HICSS.2005.306]
   Shull F, 2000, COMPUTER, V33, P73, DOI 10.1109/2.869376
   Spanoudakis G, 2004, J SYST SOFTWARE, V72, P105, DOI 10.1016/S0164-1212(03)00242-5
   Spanoudakis George., 2005, Handbook of Software Engineering and Knowledge Engineering, V3
   Spanoudakis George, 2003, P 15 INT C SOFTWARE, P570
   Spivey J. M., 1988, UNDERSTANDING Z
   Sutcliffe A., 1998, Requirements Engineering, V3, P48, DOI 10.1007/BF02802920
NR 36
TC 6
Z9 8
U1 1
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2013
VL 18
IS 1
BP 139
EP 176
DI 10.1007/s10664-012-9198-8
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 064IW
UT WOS:000313069300006
DA 2024-07-18
ER

PT J
AU Robillard, MP
   DeLine, R
AF Robillard, Martin P.
   DeLine, Robert
TI A field study of API learning obstacles
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Application programming interfaces; Software libraries; Programming;
   Documentation
ID DOCUMENTATION; USABILITY; DESIGN
AB Large APIs can be hard to learn, and this can lead to decreased programmer productivity. But what makes APIs hard to learn? We conducted a mixed approach, multi-phased study of the obstacles faced by Microsoft developers learning a wide variety of new APIs. The study involved a combination of surveys and in-person interviews, and collected the opinions and experiences of over 440 professional developers. We found that some of the most severe obstacles faced by developers learning new APIs pertained to the documentation and other learning resources. We report on the obstacles developers face when learning new APIs, with a special focus on obstacles related to API documentation. Our qualitative analysis elicited five important factors to consider when designing API documentation: documentation of intent; code examples; matching APIs with scenarios; penetrability of the API; and format and presentation. We analyzed how these factors can be interpreted to prioritize API documentation development efforts.
C1 [Robillard, Martin P.] McGill Univ, Sch Comp Sci, Montreal, PQ H3A 2A7, Canada.
   [DeLine, Robert] Microsoft Res, Redmond, WA 98052 USA.
C3 McGill University; Microsoft
RP Robillard, MP (corresponding author), McGill Univ, Sch Comp Sci, 3480 Univ St,318, Montreal, PQ H3A 2A7, Canada.
EM martin@cs.mcgill.ca; rob.deline@microsoft.com
CR [Anonymous], P 2008 IEEE S VIS LA
   [Anonymous], 2007, Basics of qualitative research: Techniques and procedures for developing grounded theory
   [Anonymous], 2008, Practical API design: Confessions of a Java framework architect
   Berglund E, 2003, J SYST SOFTWARE, V68, P65, DOI 10.1016/S0164-1212(02)00136-X
   BLOCH J, 2006, COMP 21 ACM SIGPLAN, P505
   Bore C, 2005, IEEE ICCE, P155, DOI 10.1109/ICCE.2005.1429764
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   CLARKE S, 2004, DOBBS J SPECIAL WIND
   Creswell J.W., 2017, QUALITATIVE INQUIRY
   Cwalina K., 2009, FRAMEWORK DESIGN GUI, V2nd
   DESRIVIERES J, 2004, ECLIPSE APIS LINES S
   Ellis B, 2007, PROC INT CONF SOFTW, P302
   FEILKAS M, 2008, P UL INT C PROGR COM, P248
   Fowler M, 2002, IEEE SOFTWARE, V19, P18, DOI 10.1109/52.991326
   Holmes R, 2006, IEEE T SOFTWARE ENG, V32, P952, DOI 10.1109/TSE.2006.117
   Hou DQ, 2008, PROC IEEE INT CONF S, P37, DOI 10.1109/ICSM.2008.4658052
   Hou DQ, 2005, PROG COMPREHEN, P87
   Jeong SY, 2009, LECT NOTES COMPUT SC, V5435, P86
   KNOWLES MS, 2005, ADUOLT LEARNER
   Ko AJ, 2004, 2004 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN CENTRIC COMPUTING: PROCEEDINGS, P199
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Larman C, 2001, IEEE SOFTWARE, V18, P89, DOI 10.1109/52.922731
   Lutters WG, 2007, INFORM SOFTWARE TECH, V49, P576, DOI 10.1016/j.infsof.2007.02.013
   McLellan SG, 1998, IEEE SOFTWARE, V15, P78, DOI 10.1109/52.676963
   NYKAZA J, 2002, 20 ANN ACM SIGDOC IN, P133
   Olson M.H., 2008, INTRO THEORIES LEARN, V8th
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Rosson Mary Beth, 1996, ACM Transactions on ComputerHuman Interaction (TOCHI), V3, P219
   Seaman CB, 2002, PROC IEEE INT CONF S, P141, DOI 10.1109/ICSM.2002.1167761
   Shull F, 2000, IEEE T SOFTWARE ENG, V26, P1101, DOI 10.1109/32.881720
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   STYLOS J, 2008, P 16 ACM SIGSOFT INT, P105, DOI DOI 10.1145/1453101.1453117
   Stylos J, 2007, VL/HCC 2007: IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P50, DOI 10.1109/VLHCC.2007.44
   Stylos J, 2007, PROC INT CONF SOFTW, P529
   Stylos J, 2008, 2008 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P189, DOI 10.1109/VLHCC.2008.4639083
   Weiss R.S., 1994, Learning From Strangers: The Art and Method of Qualitative Interview Studies
   WESTFALL PH, 1999, MULTIPLE CAMPARISONS
NR 38
TC 214
Z9 245
U1 1
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2011
VL 16
IS 6
BP 703
EP 732
DI 10.1007/s10664-010-9150-8
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 819IX
UT WOS:000294819700001
DA 2024-07-18
ER

PT J
AU Carver, JC
   Jaccheri, L
   Morasca, S
   Shull, F
AF Carver, Jeffrey C.
   Jaccheri, Letizia
   Morasca, Sandro
   Shull, Forrest
TI A checklist for integrating student empirical studies with research and
   teaching goals
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software engineering education; Empirical studies
ID SOFTWARE PROCESS; QUALITY
AB The use of empirical studies with students in software engineering helps researchers gain insight into new or existing techniques and methods. However, due mainly to concerns of external validity, questions have been raised about the value of these types of studies. The authors of this paper draw on their experiences of conducting a large number of empirical studies in university courses in three countries (Italy, Norway, and the United States) to address this important issue. This paper first identifies the requirements that research and pedagogy place on a valid empirical study with students. This information is then used as the basis for a checklist that provides guidance for researchers and educators when planning and conducting studies in university courses. The goal of this checklist is to help ensure that these studies have as much research and pedagogical value as possible. Finally, an example application of the checklist is provided to illustrate its use.
C1 [Carver, Jeffrey C.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
   [Jaccheri, Letizia] Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, N-7034 Trondheim, Norway.
   [Morasca, Sandro] Univ Insubria, Dipartimento Sci Cultura Polit & Informaz, Varese, Italy.
   [Shull, Forrest] Frauhnofer Ctr Expt Software Engn, College Pk, MD USA.
C3 University of Alabama System; University of Alabama Tuscaloosa;
   Norwegian University of Science & Technology (NTNU); University of
   Insubria
RP Carver, JC (corresponding author), Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
EM carver@cs.ua.edu; letizia@idi.ntnu.no; sandro.morasca@uninsubria.it;
   fshull@fc-md.umd.edu
RI Carver, Jeffrey/AAM-8202-2020; Carver, Jeffrey/AFP-1987-2022; Jaccheri,
   Letizia/HGD-0107-2022; Shull, Forrest/GZK-6750-2022; Jaccheri,
   Letizia/C-4417-2013
OI Carver, Jeffrey/0000-0002-7824-9151; Carver,
   Jeffrey/0000-0002-7824-9151; Jaccheri, Letizia/0000-0002-5547-2270;
   Morasca, Sandro/0000-0003-4598-7024
CR BAGERT D, 1999, SEI TECHNICAL REPORT
   Baresi L, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P62, DOI 10.1109/METRIC.2003.1232456
   Baresi L, 2002, WISE 2002: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON WEB INFORMATION SYSTEMS ENGINEERING, P345, DOI 10.1109/WISE.2002.1181670
   Basili VR, 2008, IEEE SOFTWARE, V25, P29, DOI 10.1109/MS.2008.103
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bloom B, 1956, TAXONOMY ED OBJECTIV
   BRAUGHT G, 2005, P 36 SIGCSE TECHN S, P41
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   *CORPORATE, 2001, J ED RESOUR COMPUT, V1, P1
   Daly JohnW., 1996, Replication and a Multi-Method Approach to Empirical Software Engineering Research
   Denning P. J., 1992, Communications of the ACM, V35, P82, DOI 10.1145/138859.138870
   Hilburn TB, 2002, IEEE SOFTWARE, V19, P22, DOI 10.1109/MS.2002.1032848
   HOCHSTEIN L, 2006, CTWATCH Q        NOV, P24
   Höst M, 2005, PROC INT CONF SOFTW, P470
   Höst M, 2002, 15TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P170, DOI 10.1109/CSEE.2002.995209
   Host M., 2000, Empirical Software Engineering, V5, P201, DOI 10.1023/A:1026586415054
   Jaccheri ML, 2001, COMPUT APPL ENG EDUC, V9, P265, DOI 10.1002/cae.10000
   JAY R, 2002, FINANCIAL TIMES MANA
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P79, DOI 10.1016/S0164-1212(02)00160-7
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   MCBURNEY DH, 2001, W THOMSON LEARNING
   Miller J, 2005, INFORM SOFTWARE TECH, V47, P233, DOI 10.1016/j.infsof.2004.08.005
   MORASCA S, 2003, P SOFTW ENG KNOWL EN, P706
   PASTEL R, 2005, INTEGRATING SCI RES
   Port D, 2004, 17TH CONFERENCE ON SOFTWARE ENGINEERING EDUCATION AND TRAINING, PROCEEDINGS, P132, DOI 10.1109/CSEE.2004.1276522
   Shull F, 2000, IEEE T SOFTWARE ENG, V26, P1101, DOI 10.1109/32.881720
   SHULL F, 2001, P JOINT 8 EUR SOFTW, P288
   SHULL F, 2005, P INT S EMP SOFTW EN, P305
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Sjoberg DIK, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P17, DOI 10.1109/ISESE.2002.1166921
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Umphress DA, 2002, IEEE SOFTWARE, V19, P78, DOI 10.1109/MS.2002.1032858
   Vygotsky L. S., 1978, Mind in Society: The Development of Higher Psychological Processes, DOI 10.2307/j.ctvjf9vz4
   Walia G.S., 2006, P IEEE S EMPIRICAL S, P336
   WANG AI, 2008, INFORM SOFT IN PRESS
   Wang AI, 2007, CONF SOFTW ENG EDUC, P291, DOI 10.1109/CSEET.2007.18
   WAYTP, 2005, P 36 SIGCSE TECHN S, P132
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wood M, 1999, J SYST SOFTWARE, V48, P13, DOI 10.1016/S0164-1212(99)00042-4
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
NR 42
TC 66
Z9 74
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2010
VL 15
IS 1
BP 35
EP 59
DI 10.1007/s10664-009-9109-9
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 549GU
UT WOS:000274036300002
DA 2024-07-18
ER

PT J
AU Gupta, A
   Li, JY
   Conradi, R
   Ronneberg, H
   Landre, E
AF Gupta, Anita
   Li, Jingyue
   Conradi, Reidar
   Ronneberg, Harald
   Landre, Einar
TI A case study comparing defect profiles of a reused framework and of
   applications reusing it
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software reuse; Software defect; Empirical study
ID SOFTWARE REUSE; QUALITY; PRODUCTIVITY
AB The benefits of software reuse have been studied for many years. Several previous studies have observed that reused software has a lower defect density than newly built software. However, few studies have investigated empirically the reasons for this phenomenon. To date, we have only the common sense observation that as software is reused over time, the fixed defects will accumulate and will result in high-quality software. This paper reports on an industrial case study in a large Norwegian Oil and Gas company, involving a reused Java class framework and two applications that use that framework. We analyzed all trouble reports from the use of the framework and the applications according to the Orthogonal Defect Classification (ODC), followed by a qualitative Root Cause Analysis (RCA). The results reveal that the framework has a much lower defect density in total than one application and a slightly higher defect density than the other. In addition, the defect densities of the most severe defects of the reused framework are similar to those of the applications that are reusing it. The results of the ODC and RCA analyses reveal that systematic reuse (i.e. clearly defined and stable requirements, better design, hesitance to change, and solid testing) lead to lower defect densities of the functional-type defects in the reused framework than in applications that are reusing it. However, the different "nature" of the framework and the applications (e.g. interaction with other software, number and complexity of business logic, and functionality of the software) may confound the causal relationship between systematic reuse and the lower defect density of the reused software. Using the results of the study as a basis, we present an improved overall cause-effect model between systematic reuse and lower defect density that will facilitate further studies and implementations of software reuse.
C1 [Gupta, Anita; Li, Jingyue; Conradi, Reidar] Norwegian Univ Sci & Technol NTNU, Dept Comp & Informat Sci IDI, Trondheim, Norway.
   [Ronneberg, Harald; Landre, Einar] Statoil KTJ IT, Stavanger, Norway.
C3 Norwegian University of Science & Technology (NTNU); Equinor
RP Gupta, A (corresponding author), Norwegian Univ Sci & Technol NTNU, Dept Comp & Informat Sci IDI, Trondheim, Norway.
EM anitaash@idi.ntnu.no
CR [Anonymous], 1992, PRACTICAL SOFTWARE M
   [Anonymous], 10441993 IEEE
   Baldassarre MT, 2005, PROC IEEE INT CONF S, P283
   BRIAND L, 1998, P 2 INT SOFTW QUAL W, P1
   Card DN, 1998, IEEE SOFTWARE, V15, P56, DOI 10.1109/52.646883
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   El Emam K, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P322, DOI 10.1109/ISSRE.1998.730897
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Frakes WB, 2001, J SYST SOFTWARE, V57, P99, DOI 10.1016/S0164-1212(00)00121-7
   FREIMUT B, 2001, 072001E IESE
   HUBER JT, 2000, P INT C APPL SOFTW M, P1
   *IBM, 2008, ODC CLASS
   LESZAK M, 2000, P INT C SOFTW ENG IE, P282
   LIM WC, 1994, IEEE SOFTWARE, V11, P23, DOI 10.1109/52.311048
   Mohagheghi P, 2004, PROC INT CONF SOFTW, P282, DOI 10.1109/ICSE.2004.1317450
   Mohagheghi P, 2007, EMPIR SOFTW ENG, V12, P471, DOI 10.1007/s10664-007-9040-x
   Morad S, 2005, IEEE INTERNATIONAL CONFERENCE ON SOFTWARE - SCIENCE, TECHNOLOGY AND ENGINEERING, PROCEEDINGS, P110, DOI 10.1109/SWSTE.2005.11
   Morisio M, 2002, IEEE T SOFTWARE ENG, V28, P340, DOI 10.1109/TSE.2002.995420
   Rothenberger MA, 2003, IEEE T SOFTWARE ENG, V29, P825, DOI 10.1109/TSE.2003.1232287
   Selby RW, 2005, IEEE T SOFTWARE ENG, V31, P495, DOI 10.1109/TSE.2005.69
   *SEVO, 2004, SOFTW EV COMP BAS SO
   SINDRE G, 1995, J SYST SOFTWARE, V30, P201, DOI 10.1016/0164-1212(94)00134-9
   Succi G, 2001, IEEE T SOFTWARE ENG, V27, P473, DOI 10.1109/32.922717
   Thomas WM, 1997, J SYST SOFTWARE, V38, P211, DOI 10.1016/S0164-1212(96)00152-5
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zhang XM, 2005, BIOENG DIV ASME, V57, P69
   Zheng J, 2006, IEEE T SOFTWARE ENG, V32, P240, DOI 10.1109/TSE.2006.38
NR 27
TC 14
Z9 15
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2009
VL 14
IS 2
BP 227
EP 255
DI 10.1007/s10664-008-9081-9
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 414VA
UT WOS:000263892100004
DA 2024-07-18
ER

PT J
AU Moser, R
   Russo, B
   Succi, G
AF Moser, Raimund
   Russo, Barbara
   Succi, Giancarlo
TI Empirical analysis on the correlation between GCC compiler warnings and
   revision numbers of source files in five industrial software projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE compiler warnings; revision numbers; software defect prediction;
   bootstrap; meta-analysis
ID METRICS; PREDICTION
AB This article discusses whether using warnings generated by the GNU C++ compiler can be used effectively to identify source code files that are likely to be error prone. We analyze five industrial projects written in C++ and belonging to the telecommunication domain. We find a significant positive correlation between the number of compiler warnings and the number of source files changes. We use such correlation to conclude that compiler warnings may be used as an indicator for the presence of software defects in source code. The result of this research is useful for finding defect-prone modules in newer projects, which lack change history.
C1 Free Univ Bolzano Bozen, Ctr Appl Software Engn, I-39100 Bolzano, Italy.
C3 Free University of Bozen-Bolzano
RP Moser, R (corresponding author), Free Univ Bolzano Bozen, Ctr Appl Software Engn, Piazza Domenicami 3 Dominikanerpl, I-39100 Bolzano, Italy.
EM raimund.moser@unibz.it; Giancarlo.Succi@unibz.it
RI Russo, Barbara/AAA-8850-2019; Russo, Barbara/L-5311-2013; Succi,
   Giancarlo/AAZ-2354-2020
OI Russo, Barbara/0000-0003-3737-9264; Russo, Barbara/0000-0003-3737-9264;
   Succi, Giancarlo/0000-0001-8847-0186
CR [Anonymous], STAT METHODS METAANA
   Basili VR, 2002, IEEE INT C ENG COMP, P129, DOI 10.1109/ICECCS.2002.1181505
   Boehm B, 2001, COMPUTER, V34, P135, DOI 10.1109/2.962984
   BONTEMPI G, 2003, RESAMPLING TECHNIQUE
   EFRON B, 1993, INTRO BOOTSTRAP, pCH12
   El Emam K, 2001, J SYST SOFTWARE, V56, P63, DOI 10.1016/S0164-1212(00)00086-8
   FENTON N, 2000, P FESMA 2 EUR SOFTW
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Hall T, 1997, IEEE SOFTWARE, V14, P55, DOI 10.1109/52.582975
   JOHNSON PM, 2002, P 25 INT C SOFTW ENG
   JOHNSON PM, 1998, P 6 INT S FDN SOFTW
   KRISHNAN MS, 1993, P C CTR ADV STUD COL, V1, P400
   Miller J, 2000, J SYST SOFTWARE, V54, P29, DOI 10.1016/S0164-1212(00)00024-8
   Misic VB, 1998, J SYST SOFTWARE, V41, P133, DOI 10.1016/S0164-1212(97)10014-0
   Nesi P, 1998, J SYST SOFTWARE, V42, P89, DOI 10.1016/S0164-1212(97)10021-8
   OHSSON N, 2000, IEEE T SOFTWARE ENG, V26, P797
   OSTRAND TJ, 2004, P 2 INT WORKSH DYN A
   Pearson K., 1907, Drapers' Company Research Memoirs (Biometric Series, V4
   Ronning OM, 1998, STROKE, V29, P58, DOI 10.1161/01.STR.29.1.58
   SHULL F, 2002, P INT S SOFTW METR M
   Siegel S., 1988, NONPARAMETRIC STAT B
   SILLITTI A, 2003, P EUROMICRO 2003
   Southard RC, 2000, BRAIN RES, V871, P16, DOI 10.1016/S0006-8993(00)02347-7
   STRINGFELLOW C, 2002, EMPIR SOFTW ENG, V7, P297
   Succi G, 2005, EMPIR SOFTW ENG, V10, P81, DOI 10.1023/B:EMSE.0000048324.12188.a2
   TIAN J, 2000, SOFTWARE QUALITY PRO, V2
   WEBER R, 2003, STATISTICS
   WILLIAMS L, 2003, P 14 INT S SOFTW REL
NR 28
TC 4
Z9 4
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2007
VL 12
IS 3
BP 295
EP 310
DI 10.1007/s10664-006-9029-x
PG 16
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 168JN
UT WOS:000246521000004
DA 2024-07-18
ER

PT J
AU Jönsson, P
   Wohlin, C
AF Jonsson, Per
   Wohlin, Claes
TI Benchmarking <i>k</i>-nearest neighbour imputation with homogeneous
   Likert data
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 20th IEEE International Conference on Software Maintenance (ICSM 2004)
CY SEP 11-14, 2004
CL Chicago, IL
SP IEEE Comp Soc
DE missing data; imputation; k-Nearest Neighbour; Likert data
ID MISSING DATA
AB Missing data are common in surveys regardless of research field, undermining statistical analyses and biasing results. One solution is to use an imputation method, which recovers missing data by estimating replacement values. Previously, we have evaluated the hot-deck k-Nearest Neighbour (k-NN) method with Likert data in a software engineering context. In this paper, we extend the evaluation by benchmarking the method against four other imputation methods: Random Draw Substitution, Random Imputation, Median Imputation and Mode Imputation. By simulating both non-response and imputation, we obtain comparable performance measures for all methods. We discuss the performance of k-NN in the light of the other methods, but also for different values of k, different proportions of missing data, different neighbour selection strategies and different numbers of data attributes. Our results show that the k-NN method performs well, even when much data are missing, but has strong competition from both Median Imputation and Mode Imputation for our particular data. However, unlike these methods, k-NN has better performance with more data attributes. We suggest that a suitable value of k is approximately the square root of the number of complete cases, and that letting certain incomplete cases qualify as neighbours boosts the imputation ability of the method.
C1 Blekinge Inst Technol, Sch Engn, SE-37225 Ronneby, Sweden.
C3 Blekinge Institute Technology
RP Jönsson, P (corresponding author), Blekinge Inst Technol, Sch Engn, POB 520, SE-37225 Ronneby, Sweden.
EM per.jonsson@bth.se
OI Wohlin, Claes/0000-0003-0460-5253
CR Batistoni DA, 2001, TR APPL SPECT, V3, P1
   Cartwright MH, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P154, DOI 10.1109/METRIC.2003.1232464
   Chen GY, 2003, ORGAN RES METHODS, V6, P309, DOI 10.1177/1094428103254672
   Chen ZL, 2000, ANAL SCI, V16, P131, DOI 10.2116/analsci.16.131
   de Leeuw ED, 2001, QUAL QUANT, V35, P147, DOI 10.1023/A:1010395805406
   Downey RG, 1998, J GEN PSYCHOL, V125, P175, DOI 10.1080/00221309809595542
   Duda R., 1973, Pattern Classification and Scene Analysis
   Engels JM, 2003, J CLIN EPIDEMIOL, V56, P968, DOI 10.1016/S0895-4356(03)00170-7
   Gediga G, 2003, ARTIF INTELL REV, V19, P93, DOI 10.1023/A:1022188514489
   Gmel G, 2001, STAT MED, V20, P2369, DOI 10.1002/sim.837
   Hu M., 1998, P SURVEY RES METHODS, P308
   Huisman M, 2000, QUAL QUANT, V34, P331, DOI 10.1023/A:1004782230065
   Jönsson P, 2005, LECT NOTES COMPUT SC, V3547, P343
   Jönsson P, 2004, 10TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P108, DOI 10.1109/METRIC.2004.1357895
   Myrtveit I, 2001, IEEE T SOFTWARE ENG, V27, P999, DOI 10.1109/32.965340
   Raaijmakers QAW, 1999, EDUC PSYCHOL MEAS, V59, P725, DOI 10.1177/00131649921970116
   Robson C., 2002, Real world research
   Sande I.G., 1983, Incomplete data in sample surveys, V3, P334
   Scheffer J., 2002, Res Lett Inf Math Sci, V3, P153, DOI DOI 10.1016/J.PMRJ.2015.07.011
   Song QB, 2005, EMPIR SOFTW ENG, V10, P235, DOI 10.1007/s10664-004-6193-8
   Strike K, 2001, IEEE T SOFTWARE ENG, V27, P890, DOI 10.1109/32.962560
   Troyanskaya O, 2001, BIOINFORMATICS, V17, P520, DOI 10.1093/bioinformatics/17.6.520
   Wilson DR, 1997, J ARTIF INTELL RES, V6, P1, DOI 10.1613/jair.346
NR 23
TC 23
Z9 26
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2006
VL 11
IS 3
BP 463
EP 489
DI 10.1007/s10664-006-9001-9
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 063MB
UT WOS:000239021200006
DA 2024-07-18
ER

PT J
AU Khoshgoftaar, TM
   Seliya, N
AF Khoshgoftaar, TM
   Seliya, N
TI Analogy-based practical classification rules for software quality
   estimation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software reliability estimation; case-based reasoning; classification
   models; data clustering; majority voting; software metrics; multiple
   releases
ID HIGH-RISK; MODELS
AB Software metrics-based quality estimation models can be effective tools for identifying which modules are likely to be fault-prone or not fault-prone. The use of such models prior to system deployment can considerably reduce the likelihood of faults discovered during operations, hence improving system reliability. A software quality classification model is calibrated using metrics from a past release or similar project, and is then applied to modules currently under development. Subsequently, a timely prediction of which modules are likely to have faults can be obtained. However, software quality classification models used in practice may not provide a useful balance between the two misclassification rates, especially when there are very few faulty modules in the system being modeled.
   This paper presents, in the context of case-based reasoning, two practical classification rules that allow appropriate emphasis on each type of misclassification as per the project requirements. The suggested techniques are especially useful for high-assurance systems where faulty modules are rare. The proposed generalized classification methods emphasize on the costs of misclassifications, and the unbalanced distribution of the faulty program modules. We illustrate the proposed techniques with a case study that consists of software measurements and fault data collected over multiple releases of a large-scale legacy telecommunication system. In addition to investigating the two classification methods, a brief relative comparison of the techniques is also presented. It is indicated that the level of classification accuracy and model-robustness observed for the case study would be beneficial in achieving high software reliability of its subsequent system releases. Similar observations are made from our empirical studies with other case studies.
C1 Florida Atlantic Univ, Dept Comp Sci & Engn, Empir Software Engn Lab, Boca Raton, FL 33431 USA.
C3 State University System of Florida; Florida Atlantic University
RP Florida Atlantic Univ, Dept Comp Sci & Engn, Empir Software Engn Lab, Boca Raton, FL 33431 USA.
EM taghi@cse.fau.edu; nseliya@cse.fau.edu
CR Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Berenson M.L., 1983, INTERMEDIATE STAT ME
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   BRIAND LC, 1993, IEEE T SOFTWARE ENG, V19, P1028, DOI 10.1109/32.256851
   Dillon W.R., 1984, MULTIVARIATE ANAL ME
   Ebert C, 1996, SOFTWARE QUAL J, V5, P255, DOI 10.1007/BF00209184
   Fayyad UM, 1996, IEEE EXPERT, V11, P20, DOI 10.1109/64.539013
   Ganesan K, 2000, INT J SOFTW ENG KNOW, V10, P139, DOI 10.1142/S0218194000000092
   Gokhale S.S., 1997, PROC 3 ISSAT INT C R, P31
   Gray A. R., 1999, Empirical Software Engineering, V4, P297, DOI 10.1023/A:1009849100780
   Hudepohl JP, 1996, IEEE SOFTWARE, V13, P56, DOI 10.1109/52.536459
   Khoshgoftaar T., 1999, International Journal of Reliability, Quality and Safety Engineering, V6, P303
   Khoshgoftaar TM, 2000, IEEE T RELIAB, V49, P209, DOI 10.1109/24.877340
   Khoshgoftaar TM, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P27, DOI 10.1109/ISSRE.1997.630845
   KHOSHGOFTAAR TM, 1995, J SYST SOFTWARE, V29, P85, DOI 10.1016/0164-1212(94)00130-F
   Khoshgoftaar TM, 2000, PROC INT C TOOLS ART, P54, DOI 10.1109/TAI.2000.889846
   Khoshgoftaar TM, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P198, DOI 10.1109/ISSRE.2000.885872
   KHOSHGOFTAAR TM, 2000, EMPIR SOFTW ENG, V5, P31
   KHOSHGOFTAAR TM, 2001, P 7 INT C REL QUAL D, P31
   KHOSHGOFTAAR TM, 2001, RECENT ADV RELIABILI, P247
   Kolodner J.L., 1993, Case-Based Reasoning
   Michalski R.S., 1998, MACHINE LEARNING DAT
   Ohlsson N., 1997, Empirical Software Engineering, V2, P166, DOI 10.1023/A:1009757419320
   Ohlsson N, 1998, SOFTWARE QUAL J, V7, P51, DOI 10.1023/A:1008844909795
   Porter AA, 1997, IEEE T SOFTWARE ENG, V23, P329, DOI 10.1109/32.601071
   RAMAMOORTHY CV, 1993, FIFTH INTERNATIONAL CONFERENCE ON TOOLS WITH ARTIFICIAL INTELLIGENCE, TAI '93, PROCEEDINGS, P364, DOI 10.1109/TAI.1993.633982
   ROSS FD, 2001, THESIS FLORIDA ATLAN
   RUNESON P, 2001, LECT NOTES COMPUTER, V2188, P341
   Schneidewind N. F., 1995, Annals of Software Engineering, V1, P287, DOI 10.1007/BF02249054
   Schneidewind NF, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P402, DOI 10.1109/ISSRE.1997.630888
   Schneidewind NF, 2000, SEVENTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 2001, PROCEEDINGS, P328, DOI 10.1109/METRIC.2001.915540
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2001, IEEE T SOFTWARE ENG, V27, P1014, DOI 10.1109/32.965341
   Wang S., 1992, Proceedings. Fourth International Conference on Tools with Artificial Intelligence, TAI '92 (Cat. No. 92CH3203-7), P114, DOI 10.1109/TAI.1992.246365
   XU Z, 2001, THESIS FLORIDA ATLAN
NR 35
TC 67
Z9 71
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2003
VL 8
IS 4
BP 325
EP 350
DI 10.1023/A:1025316301168
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 803WH
UT WOS:000220260700001
DA 2024-07-18
ER

PT J
AU Shi, ES
   Wang, YL
   Du, L
   Zhang, HY
   Han, S
   Zhang, DM
   Sun, HB
AF Shi, Ensheng
   Wang, Yanlin
   Du, Lun
   Zhang, Hongyu
   Han, Shi
   Zhang, Dongmei
   Sun, Hongbin
TI CoCoAST: Representing Source Code via Hierarchical Splitting and
   Reconstruction of Abstract Syntax Trees
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Program comprehension; Code representation learning; Abstract syntax
   trees; Neural networks
AB Recently, machine learning techniques especially deep learning techniques have made substantial progress on some code intelligence tasks such as code summarization, code search, clone detection, etc. How to represent source code to effectively capture the syntactic, structural, and semantic information is a key challenge. Recent studies show that the information extracted from abstract syntax trees (ASTs) is conducive to code representation learning. However, existing approaches fail to fully capture the rich information in ASTs due to the large size/depth of ASTs. In this paper, we propose a novel model CoCoAST that hierarchically splits and reconstructs ASTs to comprehensively capture the syntactic and semantic information of code without the loss of AST structural information. First, we hierarchically split a large AST into a set of subtrees and utilize a recursive neural network to encode the subtrees. Then, we aggregate the embeddings of subtrees by reconstructing the split ASTs to get the representation of the complete AST. Finally, we combine AST representation carrying the syntactic and structural information and source code embedding representing the lexical information to obtain the final neural code representation. We have applied our source code representation to two common program comprehension tasks, code summarization and code search. Extensive experiments have demonstrated the superiority of CoCoAST. To facilitate reproducibility, our data and code are available https://github.com/s1530129650/CoCoAST.
C1 [Shi, Ensheng; Sun, Hongbin] Xi An Jiao Tong Univ, Xian, Peoples R China.
   [Wang, Yanlin] Sun Yat Sen Univ, Zhuhai, Peoples R China.
   [Du, Lun; Han, Shi; Zhang, Dongmei] Microsoft, Beijing, Peoples R China.
   [Zhang, Hongyu] Chongqing Univ, Chongqing, Peoples R China.
C3 Xi'an Jiaotong University; Sun Yat Sen University; Chongqing University
RP Sun, HB (corresponding author), Xi An Jiao Tong Univ, Xian, Peoples R China.; Wang, YL (corresponding author), Sun Yat Sen Univ, Zhuhai, Peoples R China.
EM s1530129650@stu.xjtu.edu.cn; wangylin36@mail.sysu.edu.cn;
   lun.du@microsoft.com; hyzhang@cqu.edu.cn; shihan@microsoft.com;
   dongmeiz@microsoft.com; hsun@mail.xjtu.edu.cn
RI zhang, dongmei/B-8011-2013; Du, Lun/H-6417-2018
OI Du, Lun/0000-0002-7625-0650
FU We thank reviewers for their time on this work. This research was
   supported by National Key R amp;D Program of China (No. 2017YFA0700800)
   and Fundamental Research Funds for the Central Universities under Grant
   xtr072022001. We also thank the participants [2017YFA0700800]; National
   Key R amp;D Program of China [xtr072022001]; Fundamental Research Funds
   for the Central Universities
FX We thank reviewers for their time on this work. This research was
   supported by National Key R &D Program of China (No. 2017YFA0700800) and
   Fundamental Research Funds for the Central Universities under Grant
   xtr072022001. We also thank the participants of our human evaluation for
   their time.
CR Ahmad WU, 2021, 2021 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL-HLT 2021), P2655
   Ahmad Wasi Uddin, 2020, ACL
   Allamanis M., 2018, INT C LEARN REPR ICL
   Allamanis M, 2016, PR MACH LEARN RES, V48
   Allamanis M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P38, DOI 10.1145/2786805.2786849
   Alon U., 2021, ICLR
   Alon U., 2019, 7 INT C LEARNING REP
   Alon U, 2019, POPL
   [Anonymous], 2018, WMT
   Banerjee S., 2005, P ACL WORKSH INTR EX, P65
   Bansal A, 2021, INT C PROGRAM COMPRE, P253, DOI 10.1109/ICPC52881.2021.00032
   BENGIO Y, 1993, 1993 IEEE INTERNATIONAL CONFERENCE ON NEURAL NETWORKS, VOLS 1-3, P1183, DOI 10.1109/ICNN.1993.298725
   Cho K., 2014, PROCS C EMPIRICAL ME, P1724, DOI DOI 10.3115/V1/D14-1179
   Du L, 2021, PROCEEDINGS OF THE 30TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT, CIKM 2021, P2994, DOI 10.1145/3459637.3482127
   Eddy BP, 2013, CONF PROC INT SYMP C, P13, DOI 10.1109/ICPC.2013.6613829
   Feng Z, 2020, EMNLP FINDINGS
   Fernandes P, 2019, ICLR
   Fout A, 2017, ADV NEUR IN, V30
   Franks C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P705, DOI 10.1109/ICSE.2015.228
   Gao SZ, 2022, Arxiv, DOI arXiv:2104.09340
   Garg VK, 2020, PR MACH LEARN RES, V119
   Gros David, 2020, ASE
   Gu J, 2021, PROC IEEE INT CONF S, P483, DOI 10.1109/ICSME52107.2021.00049
   Gu WC, 2021, NEURAL NETWORKS, V141, P385, DOI 10.1016/j.neunet.2021.04.019
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Haiduc S., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P35, DOI 10.1109/WCRE.2010.13
   Haije Tjalling, 2016, Automatic comment generation using a neural translation model
   Haldar R., 2020, P 58 ANN M ASS COMP, P8563
   Haque S, 2020, IEEE WORK CONF MIN S, P300, DOI 10.1145/3379597.3387449
   Hellendoorn V.J., 2019, INT C LEARN REPR
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Hu X, 2018, INT C PROGRAM COMPRE, P200, DOI 10.1145/3196321.3196334
   Hu Xing, 2019, EMPIR SOFTW ENG, P1
   Huang J., 2021, ACL
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Iyer S, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2073
   Iyyer M, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P1681
   Jain P, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P5954
   Jiang X., 2021, P 37 C UNCERTAINTY A, V161, P54
   Kaiming He, 2020, 2020 IEEE/CVF Conference on Computer Vision and Pattern Recognition (CVPR). Proceedings, P9726, DOI 10.1109/CVPR42600.2020.00975
   Kanade A, 2020, Arxiv, DOI arXiv:2001.00059
   Kim Y., 2014, P 2014 C EMP METH NA, P1746, DOI [DOI 10.3115/V1/D14-1181, 10.3115/v1/D14-1181]
   LeClair A, 2021, PROC IEEE INT CONF S, P286, DOI 10.1109/ICSME52107.2021.00032
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   LeClair A, 2019, PROC INT CONF SOFTW, P795, DOI 10.1109/ICSE.2019.00087
   Li W, 2020, PROC IEEE INT CONF S, P115, DOI 10.1109/ICSME46990.2020.00021
   Lin Chin-Yew, 2004, P 42 ANN M AOC COMP, P605, DOI [DOI 10.3115/.1218955.1219032, DOI 10.3115/1218955.1219032]
   Lin CY, 2004, ROUGE: A Package for Automatic Evaluation of Summaries, P74, DOI DOI 10.1253/JCJ.34.1213
   Ling CY, 2020, INT C PROGRAM COMPRE, P48, DOI 10.1145/3387904.3389278
   Ling X, 2021, ACM T KNOWL DISCOV D, V15, DOI 10.1145/3447571
   Linstead E, 2009, DATA MIN KNOWL DISC, V18, P300, DOI 10.1007/s10618-008-0118-x
   Liu F, 2020, IEEE INT CONF AUTOM, P473, DOI 10.1145/3324884.3416591
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Loshchilov I., 2019, DECOUPLED WEIGHT DEC
   Lu ML, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P545, DOI 10.1109/SANER.2015.7081874
   Lv F, 2015, IEEE INT CONF AUTOM, P260, DOI 10.1109/ASE.2015.42
   McMillan C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P111, DOI 10.1145/1985793.1985809
   Mou LL, 2016, AAAI CONF ARTIF INTE, P1287
   Papineni K, 2002, 40TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE CONFERENCE, P311, DOI 10.3115/1073083.1073135
   Parikh, 2015, PROC CVPR IEEE, DOI DOI 10.1109/CVPR.2015.7299087
   Parr T., 2013, The Definitive ANTLR 4 Reference
   Rodeghero P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P390, DOI 10.1145/2568225.2568247
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   See A, 2017, PROCEEDINGS OF THE 55TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2017), VOL 1, P1073, DOI 10.18653/v1/P17-1099
   Shi ES, 2023, Arxiv, DOI [arXiv:2204.03293, 10.48550/arXiv.2204.03293]
   Shi ES, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P4053
   Shi ES, 2022, PROC INT CONF SOFTW, P1597, DOI 10.1145/3510003.3510060
   Shi L, 2022, PROCEEDINGS OF THE 30TH ACM JOINT MEETING EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, ESEC/FSE 2022, P107, DOI 10.1145/3540250.3549145
   Shin E.C, 2019, P 33 INT C NEUR INF, P10824
   Shuai J, 2020, INT C PROGRAM COMPRE, P196, DOI 10.1145/3387904.3389269
   Sridhara G., 2010, P IEEE ACM INT C AUT, P43, DOI DOI 10.1145/1858996.1859006
   Sun ZS, 2022, PROC INT CONF SOFTW, P1609, DOI 10.1145/3510003.3510160
   Svyatkovskiy A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1433, DOI 10.1145/3368089.3417058
   Tai KS, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P1556
   vandenOord Aaron, 2018, ARXIV180703748
   Vaswani A, 2017, ADV NEUR IN, V30
   Wan Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P13, DOI 10.1109/ASE.2019.00012
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wang X, 2021, Arxiv, DOI arXiv:2108.04556
   Wang YL, 2021, AAAI CONF ARTIF INTE, V35, P14015
   Wang Yanlin, 2020, Technical Report
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Wei BL, 2019, ADV NEUR IN, V32
   Wei BL, 2020, IEEE INT CONF AUTOM, P349, DOI 10.1145/3324884.3416578
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   Wilcoxon Frank, 1970, SELECTED TABLES MATH, V1, P171, DOI [DOI 10.1002/9780471462422.EOCT, DOI 10.1007/SPRINGERREFERENCE_205698]
   Wu HQ, 2021, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, ACL-IJCNLP 2021, P1078
   Wu YJ, 2020, AAAI CONF ARTIF INTE, V34, P1054
   Wu ZR, 2018, PROC CVPR IEEE, P3733, DOI 10.1109/CVPR.2018.00393
   Yang ML, 2023, Arxiv, DOI arXiv:2202.13852
   Ye W, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P2309, DOI 10.1145/3366423.3380295
   Yu XH, 2020, FINDINGS OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, EMNLP 2020, P3938
   Zhang J, 2020, PROC INT CONF SOFTW, P1385, DOI 10.1145/3377811.3380383
   Zhang J, 2019, PROC INT CONF SOFTW, P783, DOI 10.1109/ICSE.2019.00086
   Zhang JY, 2021, Arxiv, DOI arXiv:2103.13426
   Zhang Z, 2021, INT J MACH LEARN CYB, V12, P1649, DOI 10.1007/s13042-020-01264-7
   Zhu QH, 2020, IEEE INT CONF AUTOM, P883, DOI [10.1145/1122445.1122456, 10.1145/3324884.3416530]
NR 97
TC 1
Z9 1
U1 4
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 135
DI 10.1007/s10664-023-10378-9
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA T7HT5
UT WOS:001079661500001
DA 2024-07-18
ER

PT J
AU Weiss, M
   Gómez, AG
   Tonella, P
AF Weiss, Michael
   Gomez, Andre Garcia
   Tonella, Paolo
TI Generating and detecting true ambiguity: a forgotten danger in DNN
   supervision testing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Neural Networks; Image classification; Ambiguity; Aleatoric uncertainty;
   Data-centric machine learning
AB Deep Neural Networks (DNNs) are becoming a crucial component of modern software systems, but they are prone to fail under conditions that are different from the ones observed during training (out-of-distribution inputs) or on inputs that are truly ambiguous, i.e., inputs that admit multiple classes with nonzero probability in their labels. Recent work proposed DNN supervisors to detect high-uncertainty inputs before their possible misclassification leads to any harm. To test and compare the capabilities of DNN supervisors, researchers proposed test generation techniques, to focus the testing effort on high-uncertainty inputs that should be recognized as anomalous by supervisors. However, existing test generators aim to produce out-of-distribution inputs. No existing model- and supervisor independent technique targets the generation of truly ambiguous test inputs, i.e., inputs that admit multiple classes according to expert human judgment. In this paper, we propose a novel way to generate ambiguous inputs to test DNN supervisors and used it to empirically compare several existing supervisor techniques. In particular, we propose AmbiGuess to generate ambiguous samples for image classification problems. AmbiGuess is based on gradient-guided sampling in the latent space of a regularized adversarial autoencoder. Moreover, we conducted what is -\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${-}$$\end{document} to the best of our knowledge -\documentclass[12pt]{minimal} \usepackage{amsmath} \usepackage{wasysym} \usepackage{amsfonts} \usepackage{amssymb} \usepackage{amsbsy} \usepackage{mathrsfs} \usepackage{upgreek} \setlength{\oddsidemargin}{-69pt} \begin{document}$${-}$$\end{document} the most extensive comparative study of DNN supervisors, considering their capabilities to detect 4 distinct types of high-uncertainty inputs, including truly ambiguous ones. We find that the tested supervisors' capabilities are complementary: Those best suited to detect true ambiguity perform worse on invalid, out-of-distribution and adversarial inputs and vice-versa.
C1 [Weiss, Michael; Gomez, Andre Garcia; Tonella, Paolo] Univ Svizzera Italiana, Lugano, Switzerland.
C3 Universita della Svizzera Italiana
RP Weiss, M (corresponding author), Univ Svizzera Italiana, Lugano, Switzerland.
EM michael.weiss@usi.ch; andre.gg96@gmail.com; paolo.tonella@usi.ch
OI Weiss, Michael/0000-0002-8944-389X
FU Universita della Svizzera italiana
FX Open access funding provided by Universita della Svizzera italiana.
CR Akhtar N, 2021, IEEE ACCESS, V9, P155161, DOI 10.1109/ACCESS.2021.3127960
   Aroyo L, 2021, Uncovering unknown unknowns in machine learning
   Ayhan M. S., 2018, Test-time data augmentation for estimation of heteroscedastic aleatoric uncertainty in deep neural networks, P1
   Berend D, 2020, IEEE INT CONF AUTOM, P1041, DOI 10.1145/3324884.3416609
   Bjarnadottir S, 2019, Climate Adaptation Engineering, P271
   Brown J.M., 2021, State of the Art in Neural Networks and their Applications, P219
   Byun T, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P97, DOI 10.1145/3377816.3381734
   Catak FO, 2021, ACM Transactions on Software Engineering and Methodology
   Catak FO, 2021, Prediction surface uncertainty quantification in object detection models for autonomous driving
   Chollet F, 2020, Keras documentation: Simple mnist convnet
   Clements WR, 2019, Estimating risk and uncertainty in deep reinforcement learning
   Davidson MS, 2021, Biological imaging, V1
   de Hond AAH, 2022, NPJ DIGIT MED, V5, DOI 10.1038/s41746-021-00549-7
   Dola S, 2021, PROC INT CONF SOFTW, P226, DOI 10.1109/ICSE43902.2021.00032
   Dunn I, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P56, DOI 10.1145/3460319.3464801
   Gal Y, 2016, PR MACH LEARN RES, V48
   Gal Yarin, 2016, Uncertainty in deep learning
   Goodfellow I, 2014, ADV NEURAL INFORM PR, P2672
   He KM, 2016, PROC CVPR IEEE, P770, DOI 10.1109/CVPR.2016.90
   Hell F., 2021, COMP SCI CARS S, P1
   Hendrycks D., 2018, INT C LEARN REPR
   Hendrycks Dan, 2017, INT C LEARNING REPRE
   Henriksson J, 2019, EUROMICRO CONF PROC, P113, DOI 10.1109/SEAA.2019.00026
   Henriksson J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON ARTIFICIAL INTELLIGENCE TESTING (AITEST), P27, DOI 10.1109/AITest.2019.00-12
   Huang G, 2017, PROC CVPR IEEE, P2261, DOI 10.1109/CVPR.2017.243
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Hussain M, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-021-00310-0
   Goodfellow IJ, 2015, Arxiv, DOI [arXiv:1412.6572, DOI 10.48550/ARXIV.1412.6572]
   Kang Sungmin, 2020, P IEEEACM 42 INT C S, P521
   Karimi H, 2019, Characterizing the decision boundary of deep neural networks
   Kim J, 2018, Guiding deep learning system testing using surprise adequacy
   Kim J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1466, DOI 10.1145/3368089.3417065
   Kim S, 2021, 2021 IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATION OF SOFTWARE TEST (AST 2021), P80, DOI 10.1109/AST52587.2021.00017
   Kurakin Alexey, 2017, INT C LEARN REPR
   Lakshminarayanan B, 2017, ADV NEUR IN, V30
   Lecun Y, 1998, P IEEE, V86, P2278, DOI 10.1109/5.726791
   Lhoest Q, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021): PROCEEDINGS OF SYSTEM DEMONSTRATIONS, P175
   Lines D, 2019, Disentangling sources of uncertainty for active exploration
   Madry A, 2019, Arxiv, DOI arXiv:1706.06083
   Makhzani A, 2016, Arxiv, DOI [arXiv:1511.05644, DOI 10.48550/ARXIV.1511.05644]
   Moosavi-Dezfooli SM, 2016, PROC CVPR IEEE, P2574, DOI 10.1109/CVPR.2016.282
   Mu N, 2019, arXiv
   Mukhoti J, 2021, ICML UDL 2021 WORKSH
   Odena A, 2019, PR MACH LEARN RES, V97
   Osband I, 2016, WORKSH BAYES DEEP LE
   Kingma DP, 2014, Arxiv, DOI arXiv:1312.6114
   Postels J, 2021, Arxiv, DOI arXiv:2012.03082
   Rauber J, 2018, Arxiv, DOI arXiv:1707.04131
   Riccio V, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P876, DOI 10.1145/3368089.3409730
   Riccio V, 2020, EMPIR SOFTW ENG, V25, P5193, DOI 10.1007/s10664-020-09881-0
   Samek W, 2017, Arxiv, DOI arXiv:1708.08296
   Seca D, 2021, arXiv
   Stocco A, 2020, PROC INT CONF SOFTW, P359, DOI 10.1145/3377811.3380353
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Trappenberg TP, 2000, IEEE IJCNN, P296, DOI 10.1109/IJCNN.2000.859412
   van Amersfoort J, 2022, Arxiv, DOI [arXiv:2102.11409, 10.48550/arXiv.2102.11409]
   Wang HY, 2020, PROC INT CONF SOFTW, P727, DOI 10.1145/3377811.3380379
   Weiss M, 2022, Software Testing, Verification and Reliability
   Weiss M, 2022, PROCEEDINGS OF THE 31ST ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, ISSTA 2022, P139, DOI 10.1145/3533767.3534375
   Weiss M, 2021, 2021 IEEE/ACM THIRD INTERNATIONAL WORKSHOP ON DEEP LEARNING FOR TESTING AND TESTING FOR DEEP LEARNING (DEEPTEST 2021), P17, DOI 10.1109/DeepTest52559.2021.00009
   Weiss M, 2021, IEEE INT CONF SOFTW, P24, DOI 10.1109/ICST49551.2021.00015
   Weiss M, 2021, IEEE INT CONF SOFTW, P436, DOI 10.1109/ICST49551.2021.00056
   Wintersberger P, 2021, IT-INF TECHNOL, V63, P111, DOI 10.1515/itit-2020-0024
   Xiao H., 2017, ARXIV170807747
   Xie XF, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P146, DOI 10.1145/3293882.3330579
   Yang Feng, 2020, ISSTA '20: Proceedings of the 29th ACM SIGSOFT International Symposium on Software Testing and Analysis, P177, DOI 10.1145/3395363.3397357
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang XY, 2020, PROC INT CONF SOFTW, P739, DOI 10.1145/3377811.3380368
NR 68
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 146
DI 10.1007/s10664-023-10393-w
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA W9BB1
UT WOS:001094497200001
OA hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Lan, JP
   Gong, LA
   Zhang, JX
   Zhang, HX
AF Lan, Jinpeng
   Gong, Lina
   Zhang, Jingxuan
   Zhang, Haoxiang
TI BTLink : automatic link recovery between issues and commits based on
   pre-trained BERT model
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Issue-commit links recovery; Issue report; Commit; pre-trained BERT
   model; Mining software repositories
ID ANALYSIS ALGORITHMS; FEATURE LOCATION; PROGRAM
AB Data traceability in software development can connect different software artifacts to enhance the observability of developer practices. In particular, traceability links between issues and commits (i.e., issue-commit links) play a key role in software maintenance tasks (e.g., bug localization and bug prediction). In practice, developers typically manually make the issue-commit links by adding the issue identifier into the message of the corresponding commits, which results in missing issue commit links being prevalent in software projects. To recover the missing issue commit links, previous studies have proposed some automatic approaches. However, due to the difference between heuristic rules and real-world behavior, as well as insufficient semantic understanding, these approaches cannot achieve the expected performance. Since the text contained in issues and commits contains highly related information, thorough text understanding can improve traceability links. Meanwhile, pre-trained models (i.e., PTMs) have been successfully used to explore the semantic information of text in various software engineering tasks (e.g., software code generation). Therefore, our study proposes a novel BERT -based method (i.e., BTLink) that employs the pre-trained models to automatically recover the issue-commits links. Our proposed BTlink method includes a BERT embedding layer, a fusion layer, and a classifier layer. First, we build two pre-trained BERT encoders to respectively explore the feature representation of the issue text in combination with commit code and commit text. Then we build the fusion layer to examine the joint feature vector. Finally, we build the classifier layer to identify the links between issue and commit. In addition, to further our investigation and verify the effectiveness of BTLink, we conduct an extensive case study on 12 issue-commit links datasets from open source software projects, and observe that: (i) compared to state-of-the-art approaches, our proposed BTLink improves the performance of automatic issue-commit links recovery on all studied measures; (ii) both text and code information in the issues and commits are effective to recover more accurate issue-commit links; (iii) our proposed BTLink is more applicable to the cross-project context compared to state-of-the-art approaches.
C1 [Lan, Jinpeng; Gong, Lina; Zhang, Jingxuan] Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.
   [Gong, Lina] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.
   [Gong, Lina] Nanjing Univ Aeronaut & Astronaut, Key Lab Safety Crit Software, Nanjing, Peoples R China.
   [Zhang, Haoxiang] Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
C3 Nanjing University of Aeronautics & Astronautics; Nanjing University;
   Nanjing University of Aeronautics & Astronautics; Queens University -
   Canada
RP Gong, LA; Zhang, JX (corresponding author), Nanjing Univ Aeronaut & Astronaut, Coll Comp Sci & Technol, Nanjing, Peoples R China.; Gong, LA (corresponding author), Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Peoples R China.; Gong, LA (corresponding author), Nanjing Univ Aeronaut & Astronaut, Key Lab Safety Crit Software, Nanjing, Peoples R China.
EM gonglina@nuaa.edu.cn; jxzhang@nuaa.edu.cn
RI LIU, JIALIN/JXN-8034-2024; zheng, Li/JVN-7465-2024; Liu,
   Jinyu/JYQ-6274-2024; li, fei/JYP-3334-2024; zhang,
   jingxuan/KVZ-3600-2024
OI Gong, Lina/0000-0002-5272-6706
FU National Natural Science Foundation of China [62202223]; Natural Science
   Foundation of Jiangsu Province, China [BK20220881]; Foundation of the
   Key National Laboratory of New Technology in Computer Software (Nanjing
   University) [KFKT2022B20]; Foundation of the Key Laboratory of
   Safety-Critical Software (Nanjing University of Aeronautics and
   Astronautics)
FX The authors would like to thank the anonymous reviewers and editors for
   suggesting improvements and for their very helpful comments. This work
   is supported by the National Natural Science Foundation of China under
   grant No. 62202223, the Natural Science Foundation of Jiangsu Province,
   China under grant No. BK20220881, the Foundation of the Key National
   Laboratory of New Technology in Computer Software (Nanjing University)
   under grant No. KFKT2022B20, and the Foundation of the Key Laboratory of
   Safety-Critical Software (Nanjing University of Aeronautics and
   Astronautics).
CR Adoma AF, 2020, I COMP CONF WAVELET, P117, DOI 10.1109/ICCWAMTIP51612.2020.9317379
   Ahmad WU, 2021, Arxiv, DOI [arXiv:2103.06333, 10.48550/arXiv.2103.06333]
   Ahmed T, 2022, Arxiv, DOI arXiv:2104.14671
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Applis L, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1377, DOI 10.1109/ASE51524.2021.9678706
   Beller M, 2019, IEEE T SOFTWARE ENG, V45, P261, DOI 10.1109/TSE.2017.2776152
   Berabi B, 2021, PR MACH LEARN RES, V139
   Bergstra James, 2015, Computational Science and Discovery, V8, DOI 10.1088/1749-4699/8/1/014008
   Bernstein A., 2010, P 18 ACM SIGSOFT INT, P97
   Bhardwaj R, 2021, COGN COMPUT, V13, P1008, DOI 10.1007/s12559-021-09881-2
   Bird C, 2010, SIGSOFT FSE, P369
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Birunda S. Selva, 2021, Innovative Data Communication Technologies and Application. Proceedings of ICIDCA 2020. Lecture Notes on Data Engineering and Communications Technologies (LNDECT 59), P267, DOI 10.1007/978-981-15-9651-3_23
   Borg M, 2019, PROCEEDINGS OF THE 3RD ACM SIGSOFT INTERNATIONAL WORKSHOP ON MACHINE LEARNING TECHNIQUES FOR SOFTWARE QUALITY EVALUATION (MALTESQUE '19), P7, DOI 10.1145/3340482.3342742
   Canbek G, 2017, 2017 INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND ENGINEERING (UBMK), P821, DOI 10.1109/UBMK.2017.8093539
   Cao Junming, 2022, ESEC/FSE 2022: Proceedings of the 30th ACM Joint European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P357, DOI 10.1145/3540250.3549123
   Catal C, 2012, ACTA POLYTECH HUNG, V9, P193
   Chen Tianqi, 2015, R package version 0.4-2 1.4, V1, P1
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Chicco D, 2021, IEEE ACCESS, V9, P78368, DOI 10.1109/ACCESS.2021.3084050
   Chicco D, 2020, BMC GENOMICS, V21, DOI 10.1186/s12864-019-6413-7
   Chongpakdee P, 2017, INT CONF SOFTW ENG, P149, DOI 10.1109/ICSESS.2017.8342885
   Ciborowska A, 2022, PROC INT CONF SOFTW, P946, DOI 10.1145/3510003.3510042
   Claes M, 2020, IEEE WORK CONF MIN S, P503, DOI 10.1145/3379597.3387487
   Cortiz D, 2021, Arxiv, DOI arXiv:2104.02041
   Cubranic D, 2003, PROC INT CONF SOFTW, P408, DOI 10.1109/ICSE.2003.1201219
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Dit B, 2013, EMPIR SOFTW ENG, V18, P277, DOI 10.1007/s10664-011-9194-4
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Flint SW, 2021, IEEE WORK CONF MIN S, P85, DOI 10.1109/MSR52588.2021.00022
   Goldberg Y, 2014, Arxiv, DOI [arXiv:1402.3722, DOI 10.48550/ARXIV.1402.3722]
   Golzadeh M, 2021, 2021 IEEE/ACM THIRD INTERNATIONAL WORKSHOP ON BOTS IN SOFTWARE ENGINEERING (BOTSE 2021), P21, DOI 10.1109/BotSE52550.2021.00012
   Gong L, 2022, IEEE T SOFTW ENG
   Gong L, 2022, ACM T SOFTW ENG METH
   González-Carvajal S, 2021, Arxiv, DOI arXiv:2005.13012
   Guo DY, 2022, Arxiv, DOI arXiv:2203.03850
   Guo DY, 2021, Arxiv, DOI arXiv:2009.08366
   Hall T, 2008, IEEE SOFTWARE, V25, P92, DOI 10.1109/MS.2008.105
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Husain H, 2020, Arxiv, DOI arXiv:1909.09436
   Jagadeesh M, 2020, W NUT EMNLP, P450
   Jivani A.G., 2011, Int. J. Comp. Tech. Appl, V2, P1930
   Jung TH, 2021, Arxiv, DOI arXiv:2105.14242
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kalman R. E., 1960, P 1 INT C AUT CONTR, P481, DOI DOI 10.1109/TAC.1959.1104873
   Kalyan KS, 2020, P KNOWL NLP 1 WORKSH, P21
   Kazameini A, 2020, Arxiv, DOI arXiv:2010.01309
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Lanubile F, 2010, IEEE SOFTWARE, V27, P52, DOI 10.1109/MS.2010.39
   Le TDB, 2015, INT C PROGRAM COMPRE, P36, DOI 10.1109/ICPC.2015.13
   Lin JF, 2021, PROC INT CONF SOFTW, P324, DOI 10.1109/ICSE43902.2021.00040
   Linares-Vásquez M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P709, DOI 10.1109/ICSE.2015.229
   Liu YH, 2019, Arxiv, DOI arXiv:1907.11692
   Loeliger J, 2012, Version Control with Git
   Loper E., 2002, ARXIV
   Lu S, 2021, Arxiv, DOI arXiv:2102.04664
   Lu WH, 2020, CIKM '20: PROCEEDINGS OF THE 29TH ACM INTERNATIONAL CONFERENCE ON INFORMATION & KNOWLEDGE MANAGEMENT, P2645, DOI 10.1145/3340531.3412747
   Maalej Walid, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P191, DOI 10.1109/MSR.2010.5463344
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Mahmud J, 2021, arXiv
   Mashhadi E, 2021, IEEE WORK CONF MIN S, P505, DOI 10.1109/MSR52588.2021.00063
   Mazrae PR, 2021, PROC IEEE INT CONF S, P263, DOI 10.1109/ICSME52107.2021.00030
   Megdadi O, 2019, INFORM SOFTWARE TECH, V109, P80, DOI 10.1016/j.infsof.2019.01.008
   Natekin A, 2013, FRONT NEUROROBOTICS, V7, DOI 10.3389/fnbot.2013.00021
   Nguyen Anh Tuan, 2012, SER FSE 12, P1, DOI DOI 10.1145/2393596.2393671
   Nguyen T. H. D., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P259, DOI 10.1109/WCRE.2010.37
   Ortu M, 2015, Proceedings of the 11th International Conference on Predictive Models and Data Analytics in Software Engineering, PROMISE'15, P1, DOI DOI 10.1145/2810146.2810147
   Ouni S, 2022, SOC NETW ANAL MIN, V12, DOI 10.1007/s13278-022-00970-0
   Peinelt N., 2020, P 58 ANN M ASS COMP, P7047
   Perez Luis, 2021, arXiv, DOI 10.48550/ARXIV.2102.10535
   Picoreti R, 2018, 2018 16TH IEEE INT CONF ON DEPENDABLE, AUTONOM AND SECURE COMP, 16TH IEEE INT CONF ON PERVAS INTELLIGENCE AND COMP, 4TH IEEE INT CONF ON BIG DATA INTELLIGENCE AND COMP, 3RD IEEE CYBER SCI AND TECHNOL CONGRESS (DASC/PICOM/DATACOM/CYBERSCITECH), P776, DOI 10.1109/DASC/PiCom/DataCom/CyberSciTec.2018.00134
   Pour MV, 2021, IEEE INT CONF SOFTW, P36, DOI 10.1109/ICST49551.2021.00016
   Qasim R, 2022, Journal of Healthcare Engineering, V2022
   Qiu XP, 2020, SCI CHINA TECHNOL SC, V63, P1872, DOI 10.1007/s11431-020-1647-3
   Quoc Thai Nguyen, 2020, 2020 7th NAFOSTED Conference on Information and Computer Science (NICS), P302, DOI 10.1109/NICS51282.2020.9335899
   Rahman Foyzur, 2013, P 2013 9 JOINT M FDN, P147
   Ramos Juan., 2003, USING TF IDF DETERMI, V242, P29
   Raulji JaideepsinhK., 2016, INT J COMPUTER APPL, V150, P15
   Reimers N, 2019, Arxiv, DOI [arXiv:1908.10084, 10.48550/arXiv.1908.10084]
   Ruan H, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110406
   Santos EA, 2016, PEERJ PREPR, V4
   Scanniello G, 2015, EMPIR SOFTW ENG, V20, P1666, DOI 10.1007/s10664-014-9327-7
   Sellam T, 2021, arXiv
   Shi ES, 2022, PROC INT CONF SOFTW, P1597, DOI 10.1145/3510003.3510060
   Song YW, 2020, Arxiv, DOI arXiv:2002.04815
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Su J., 2021, PREPRINT, DOI DOI 10.48550/ARXIV.2103.15316
   Sun C, 2019, LECT NOTES ARTIF INT, V11856, P194, DOI 10.1007/978-3-030-32381-3_16
   Sun Y, 2017, IEEE INT CONF AUTOM, P147, DOI 10.1109/ASE.2017.8115627
   Sun Y, 2017, INFORM SOFTWARE TECH, V84, P33, DOI 10.1016/j.infsof.2016.11.010
   Sun Y, 2016, AER ADV ENG RES, V52, P1
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tao W, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10219-1
   Tian HY, 2020, IEEE INT CONF AUTOM, P981, DOI 10.1145/3324884.3416532
   Vasilescu B, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING CHASE 2015, P50, DOI 10.1109/CHASE.2015.14
   Vaswani A, 2017, ADV NEUR IN, V30
   Vieira R, 2019, 15TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING (PROMISE'19), P80, DOI 10.1145/3345629.3345639
   Viera AJ, 2005, FAM MED, V37, P360
   Wallace B., 2015, ARXIV
   Wang Y, 2021, 2021 CONFERENCE ON EMPIRICAL METHODS IN NATURAL LANGUAGE PROCESSING (EMNLP 2021), P8696
   Woolson RF, 2007, Wiley encyclopedia of clinical trials, P1, DOI [10.1002/9780471462422.eoct979, DOI 10.1002/9780471462422.EOCT979]
   Wu RX, 2018, EMPIR SOFTW ENG, V23, P2866, DOI 10.1007/s10664-017-9567-4
   Yang G, 2021, arXiv
   Yogish D, 2019, Recent trends in image processing and pattern recognition, P589, DOI [10.1007/978-981-13-9187-3_53, DOI 10.1007/978-981-13-9187-3_53]
   Yu Wang, 2020, 2020 12th International Conference on Intelligent Human-Machine Systems and Cybernetics (IHMSC), P23, DOI 10.1109/IHMSC49165.2020.00013
   Zhang C, 2020, P 14 WORKSHOP SEMANT, P1071
   Zhang XD, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P41, DOI 10.1145/3377813.3381356
   Zhang ZQ, 2022, PROC INT CONF SOFTW, P1856, DOI 10.1145/3510003.3510191
   Zolkifli Nazatul Nurlisa, 2018, Procedia Computer Science, V135, P408, DOI 10.1016/j.procs.2018.08.191
NR 112
TC 2
Z9 2
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 103
DI 10.1007/s10664-023-10342-7
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA M3YM1
UT WOS:001029580700001
DA 2024-07-18
ER

PT J
AU Mi, Q
   Zhan, Y
   Weng, H
   Bao, QH
   Cui, LJ
   Ma, W
AF Mi, Qing
   Zhan, Yi
   Weng, Han
   Bao, Qinghang
   Cui, Longjie
   Ma, Wei
TI A graph-based code representation method to improve code readability
   classification
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code readability classification; Graph neural network; Code
   representation; Abstract syntax tree; Program comprehension
AB Context Code readability is crucial for developers since it is closely related to code maintenance and affects developers' work efficiency. Code readability classification refers to the source code being classified as pre-defined certain levels according to its readability. So far, many code readability classification models have been proposed in existing studies, including deep learning networks that have achieved relatively high accuracy and good performance.
   Objective However, in terms of representation, these methods lack effective preservation of the syntactic and semantic structure of the source code. To extract these features, we propose a graph-based code representation method.
   Method Firstly, the source code is parsed into a graph containing its abstract syntax tree (AST) combined with control and data flow edges to reserve the semantic structural information and then we convert the graph nodes' source code and type information into vectors. Finally, we train our graph neural networks model composing Graph Convolutional Network (GCN), DMoNPooling, and K-dimensional Graph Neural Networks (k-GNNs) layers to extract these features from the program graph.
   Result We evaluate our approach to the task of code readability classification using a Java dataset provided by Scalabrino et al. (2016). The results show that our method achieves 72.5% and 88% in three-class and two-class classification accuracy, respectively.
   Conclusion We are the first to introduce graph-based representation into code readability classification. Our method outperforms state-of-the-art readability models, which suggests that the graph-based code representation method is effective in extracting syntactic and semantic information from source code, and ultimately improves code readability classification.
C1 [Mi, Qing; Zhan, Yi; Weng, Han; Bao, Qinghang; Cui, Longjie; Ma, Wei] Beijing Univ Technol, Fac Informat Technol, Beijing, Peoples R China.
C3 Beijing University of Technology
RP Ma, W (corresponding author), Beijing Univ Technol, Fac Informat Technol, Beijing, Peoples R China.
EM mawei@bjut.edu.cn
RI Mi, Qing/GQI-1620-2022
OI Mi, Qing/0000-0001-5063-3189; Ma, Wei/0000-0001-9652-4260
FU Spark Project of Beijing University of Technology [20220202,
   ghfund202202028015]
FX This work was supported by the GHfund B (20220202, ghfund202202028015)
   and the Spark Project of Beijing University of Technology (Project No.
   XH-2022-01-28).
CR Alawad D, 2019, Arxiv, DOI arXiv:1909.01760
   Allamanis M, 2018, Arxiv, DOI arXiv:1711.00740
   Allamanis M, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P281, DOI 10.1145/2635868.2635883
   Alon U, 2018, Arxiv, DOI arXiv:1803.09544
   [Anonymous], 2017, P MACHINE LEARNING R
   Brunner E, 2000, BIOMETRICAL J, V42, P17, DOI 10.1002/(SICI)1521-4036(200001)42:1<17::AID-BIMJ17>3.0.CO;2-U
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Cao SC, 2021, INFORM SOFTWARE TECH, V136, DOI 10.1016/j.infsof.2021.106576
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dinella E, 2020, ICLR
   Dorn J, 2012, MCS Thesis, V5, P11
   Fakhoury S, 2019, INT C PROGRAM COMPRE, P2, DOI 10.1109/ICPC.2019.00014
   Feng ZY, 2020, Arxiv, DOI [arXiv:2002.08155, 10.48550/arXiv.2002.08155]
   Fernandes P, 2019, 7 INT C LEARNING REP
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hu ZN, 2020, WEB CONFERENCE 2020: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2020), P2704, DOI 10.1145/3366423.3380027
   Maddison CJ, 2014, Arxiv, DOI arXiv:1401.0514
   Johnson JC, 2019, PROC IEEE INT CONF S, P513, DOI 10.1109/ICSME.2019.00085
   LeClair A, 2020, INT C PROGRAM COMPRE, P184, DOI 10.1145/3387904.3389268
   Lee T, 2013, Int. J. Softw. Eng. Appl, V7, P413
   Li Y., 2016, P 4 INT C LEARNING R
   Ling C. X., 2003, IJCAI
   Ma Y, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P723, DOI 10.1145/3292500.3330982
   Mannan UA, 2018, PROCEEDINGS OF THE 4TH ACM SIGSOFT INTERNATIONAL WORKSHOP ON NLP FOR SOFTWARE ENGINEERING (NL4SE '18), P18, DOI 10.1145/3283812.3283820
   Mi Q, INT C SOFTW ENG KNOW
   Mi Q, 2022, J SYST SOFTWARE, V193, DOI 10.1016/j.jss.2022.111454
   Mi Q, 2018, INFORM SOFTWARE TECH, V104, P60, DOI 10.1016/j.infsof.2018.07.006
   Morris C, 2019, AAAI CONF ARTIF INTE, P4602
   Kipf TN, 2017, Arxiv, DOI arXiv:1609.02907
   Pantiuchina J, 2018, PROC IEEE INT CONF S, P80, DOI 10.1109/ICSME.2018.00017
   Piantadosi V, 2020, EMPIR SOFTW ENG, V25, P5374, DOI 10.1007/s10664-020-09886-9
   Posnett D, 2011, P 8 WORKING C MINING, P73
   Raychev V, 2016, ACM SIGPLAN NOTICES, V51, P731, DOI 10.1145/3022671.2984041
   Scalabrino S, 2016, 2016 IEEE 24 INT C P, P1
   Scalabrino S, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1958
   Sedano T, 2016, CONF SOFTW ENG EDUC, P111, DOI 10.1109/CSEET.2016.36
   Tsitsulin A, 2022, Arxiv, DOI arXiv:2006.16904
   Vagavolu D, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P1296, DOI 10.1109/ASE51524.2021.9678551
   Wang WH, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P261, DOI [10.1109/SANER48275.2020.9054857, 10.1109/saner48275.2020.9054857]
   Wang X, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2022, DOI 10.1145/3308558.3313562
   Xia X, 2018, IEEE T SOFTWARE ENG, V44, P951, DOI 10.1109/TSE.2017.2734091
   Xu K., 2018, arXiv, DOI DOI 10.48550/ARXIV.1810.00826
   Xu KYL, 2018, Arxiv, DOI arXiv:1806.03536
   Yamaguchi F, 2014, P IEEE S SECUR PRIV, P590, DOI 10.1109/SP.2014.44
   Zhang CX, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P793, DOI 10.1145/3292500.3330961
   Zhang KC, 2022, Arxiv, DOI arXiv:2012.04188
   Zhou Y, 2019, ADV NEURAL INF PROCE, V915, P11
NR 47
TC 1
Z9 1
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 87
DI 10.1007/s10664-023-10319-6
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA H2JT2
UT WOS:000994286000002
DA 2024-07-18
ER

PT J
AU Petke, J
   Alexander, B
   Barr, ET
   Brownlee, AEI
   Wagner, M
   White, DR
AF Petke, Justyna
   Alexander, Brad
   Barr, Earl T.
   Brownlee, Alexander E. I.
   Wagner, Markus
   White, David R.
TI Program transformation landscapes for automated program modification
   using Gin
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automated program modification; Genetic improvement; Automated program
   repair; Search-based software engineering
ID SOFTWARE; REPAIR
AB Automated program modification underlies two successful research areas - genetic improvement and program repair. Under the generate-and-validate strategy, automated program modification transforms a program, then validates the result against a test suite. Much work has focused on the search space of application of single fine-grained operators - copy, delete, replace, and swap at both line and statement granularity. This work explores the limits of this strategy. We scale up existing findings an order of magnitude from small corpora to 10 real-world Java programs comprising up to 500k LoC. We decisively show that the grammar-specificity of statement granular edits pays off: its pass rate triples that of line edits and uses 10% less computational resources. We confirm previous findings that delete is the most effective operator for creating test-suite equivalent program variants. We go farther than prior work by exploring the limits of delete 's effectiveness by exhaustively applying it. We show this strategy is too costly in practice to be used to search for improved software variants. We further find that pass rates drop from 12-34% for single statement edits to 2-6% for 5-edit sequences, which implies that further progress will need human-inspired operators that target specific faults or improvements. A program is amenable to automated modification to the extent to which automatically editing it is likely to produce test-suite passing variants. We are the first to systematically search for a code measure that correlates with a program's amenability to automated modification. We found no strong correlations, leaving the question open.
C1 [Petke, Justyna; Barr, Earl T.] UCL, London, England.
   [Alexander, Brad] Univ Adelaide, Adelaide, Australia.
   [Brownlee, Alexander E. I.] Univ Stirling, Stirling, Scotland.
   [Wagner, Markus] Monash Univ, Melbourne, Australia.
   [White, David R.] Univ Sheffield, Sheffield, England.
C3 University of London; University College London; University of Adelaide;
   University of Stirling; Monash University; University of Sheffield
RP Petke, J (corresponding author), UCL, London, England.
EM j.petke@ucl.ac.uk; bradley.alexander@adelaide.edu.au; e.barr@ucl.ac.uk;
   alexander.brownlee@stir.ac.uk; markus.wagner@monash.edu
RI Brownlee, Alexander Edward Ian/I-5904-2012
OI Brownlee, Alexander Edward Ian/0000-0003-2892-5059; Petke,
   Justyna/0000-0002-7833-6044
FU UKRI EPSRC [EP/P023991/1, EP/J017515/1]; Carnegie Trust grant
   [RIG008300]; Australian Research Council projects [DE160100850,
   DP200102364, DP210102670]; EPSRC [EP/P023991/1] Funding Source: UKRI
FX This work was funded by the UKRI EPSRC grants EP/P023991/1 and
   EP/J017515/1; Carnegie Trust grant RIG008300; Australian Research
   Council projects DE160100850, DP200102364, and DP210102670, and by gifts
   from Facebook and Google. For the purpose of open access, the authors
   have applied a Creative Commons Attribution (CC BY) license to any
   Accepted Manuscript version arising.
CR Ahmad H, 2022, DIGGING SEMANTICS DO
   An G, 2018, 2018 ACM/IEEE 4TH INTERNATIONAL GENETIC IMPROVEMENT WORKSHOP (GI@ICSE 2018), P19, DOI 10.1145/3194810.3194814
   [Anonymous], 2017, 1 COMPL SYST DIG CAM
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Bian ZQ, 2021, 2021 IEEE/ACM INTERNATIONAL WORKSHOP ON AUTOMATED PROGRAM REPAIR (APR 2021), P1, DOI 10.1109/APR52552.2021.00008
   Binkley D, 2019, EMPIR SOFTW ENG, V24, P3077, DOI 10.1007/s10664-018-9675-9
   Blot A, 2021, IEEE T EVOLUT COMPUT, V25, P1001, DOI 10.1109/TEVC.2021.3070271
   Brownlee AEI, 2020, IEEE C EVOL COMPUTAT, DOI 10.1109/cec48606.2020.9185708
   Brownlee AEI, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'19), P985, DOI 10.1145/3321707.3321841
   Callan J, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10137-2
   Coelho R, 2017, EMPIR SOFTW ENG, V22, P1264, DOI 10.1007/s10664-016-9443-7
   Cohen J., 1988, STAT POWER ANAL BEHA
   Etemadi K, 2022, J SYST SOFTWARE, V188, DOI 10.1016/j.jss.2022.111263
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Gewirtz P, 1996, YALE LAW J, V105, P1023, DOI 10.2307/797245
   Ginelli D., 2022, COMPREHENSIVE STUDY, DOI [10.1007/s10664-021-10100-7, DOI 10.1007/S10664-021-10100-7]
   Guizzo G, 2021, LECT NOTES COMPUT SC, V12914, P159, DOI 10.1007/978-3-030-88106-1_12
   Gulwani Sumit, 2010, P 12 INT ACM SIGPLAN, P13, DOI [DOI 10.1145/1836089.1836091, 10.1145/1836089.1836091]
   Haraldsson SO, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P1513, DOI 10.1145/3067695.3082517
   Harrand N, 2019, GENET PROGRAM EVOL M, V20, P531, DOI 10.1007/s10710-019-09355-3
   Hassan F, 2020, ESEM 20 ACM IEEE INT, p4:1, DOI [DOI 10.1145/3382494, 10.1145/3382494.3410692, DOI 10.1145/3382494.3410692]
   Kirbas S, 2021, IEEE SOFTWARE, V38, P43, DOI 10.1109/MS.2021.3071086
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Langdon WB, 2017, BIODATA MIN, V10, DOI 10.1186/s13040-017-0149-1
   Langdon W.B., 2010, 2010 IEEE WORLD C CO, P2376, DOI [10.1109/CEC.2010.5585922, DOI 10.1109/CEC.2010.5585922]
   Langdon WB, 2017, LECT NOTES COMPUT SC, V10196, P96, DOI 10.1007/978-3-319-55696-3_7
   Langdon WB, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1063, DOI 10.1145/2739480.2754652
   Le Goues C, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P959, DOI 10.1145/2330163.2330296
   Li J, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P318, DOI 10.1109/QRS.2017.42
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Marginean A, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P269, DOI 10.1109/ICSE-SEIP.2019.00039
   Martinez M, 2018, LECT NOTES COMPUT SC, V11036, P65, DOI 10.1007/978-3-319-99241-9_3
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Mechtaev S, 2016, PROC INT CONF SOFTW, P691, DOI 10.1145/2884781.2884807
   Meyvis T, 2021, NATURE, V592, P189, DOI 10.1038/d41586-021-00592-0
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   NEJMEH BA, 1988, COMMUN ACM, V31, P188, DOI 10.1145/42372.42379
   Ochoa G., 2008, GECCO 08 PROC GENETI, P555, DOI DOI 10.1145/1389095.1389204
   Pandey SK, 2021, EXPERT SYST APPL, V172, DOI 10.1016/j.eswa.2021.114595
   Petke J, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCCO'19 COMPANION), P1715, DOI 10.1145/3319619.3326870
   Petke J, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P1541, DOI 10.1145/3067695.3082520
   Petke J, 2018, IEEE T EVOLUT COMPUT, V22, P415, DOI 10.1109/TEVC.2017.2693219
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Reeves CR, 2000, LECT NOTES COMPUT SC, V1829, P3
   Reidys CM, 2002, SIAM REV, V44, P3, DOI 10.1137/S0036144501395952
   Renzullo J, 2018, 2018 ACM/IEEE 4TH INTERNATIONAL GENETIC IMPROVEMENT WORKSHOP (GI@ICSE 2018), P1, DOI 10.1145/3194810.3194812
   Saha S, 2019, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE.2019.00020
   Schulte E, 2014, GENET PROGRAM EVOL M, V15, P281, DOI 10.1007/s10710-013-9195-8
   Smigielska M, 2021, 2021 IEEE/ACM INTERNATIONAL WORKSHOP ON GENETIC IMPROVEMENT (GI 2021), P1, DOI 10.1109/GI52543.2021.00009
   Soto M, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P221, DOI 10.1109/SANER.2018.8330211
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Wong CP, 2021, PROCEEDINGS OF THE 29TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '21), P354, DOI 10.1145/3468264.3468600
   Wong CP, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276487
   Xin Q, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P226, DOI 10.1145/3092703.3092718
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Yang JQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P831, DOI 10.1145/3106237.3106274
   Ye H, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09920-w
   Yuan Y, 2020, IEEE T SOFTWARE ENG, V46, P1040, DOI 10.1109/TSE.2018.2874648
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
NR 59
TC 2
Z9 2
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 104
DI 10.1007/s10664-023-10344-5
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA M1KF5
UT WOS:001027805700001
OA hybrid
DA 2024-07-18
ER

PT J
AU Han, YS
   Wang, ZD
   Feng, Y
   Zhao, ZH
   Wang, Y
AF Han, Yisi
   Wang, Zhendong
   Feng, Yang
   Zhao, Zhihong
   Wang, Yi
TI Cross-status communication and project outcomes in OSS development A
   language style matching perspective
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Cross-status communication; Language style matching (LSM); Elite and
   non-elite; Developers; Project outcomes
ID SOCIAL DYNAMICS; BIG DATA; DESIGN; PREDICTOR; SYSTEMS
AB Context The success of an open source software (OSS) project requires effective communication among its members. Given that OSS projects often have established social status systems, such communication may happen between individuals of different statuses, particularly, elite developers with project management privileges and ordinary project contributors. They communicate with each other onmany essential activities, e.g., bug fixing, code review, etc., thus having profound influences on project outcomes.
   Objectives We seek to develop an understanding of cross-status communication from a perspective of language stylematching among developers of different status, and its relationships with an OSS project's outcomes in terms of productivity and quality.
   Method We approach the above research objectives with the language stylematching (LSM) tool, which measures the similarities of cross-status communication inmultiple language style features. We first dynamically identify elite developers having project administration privileges for each sampled project. Then, we capture the cross-status communication between elite and non-elite developers; and calculate the LSM features of these two groups of individuals. The LSM variables, together with project outcomes, were used to fit regression models to analyze potential relationships between cross-status communication's language matching and project outcomes.
   Results Using over 275,000 collected conversations, our analyses yield rich insights into cross-status communication in open source development. First, our results reveal that the elite and non-elite developers exhibit quite similar linguistic patterns in using certain categories of words. Second, we explore the relationships between linguistic similarity in cross-status communication and project outcomes. The regression results are generally negative, indicating there might be very limited significant relationships between cross-status communication's language matching and project outcomes, with a few exceptions.
   Limitations The study has several limitations. First, it considers projects hosted on GitHub only. Second, to ensure data availability, our sample is drawn from top projects, thus not representing all projects. Third, we only consider a limited number of linguistic features, and indicators for project outcomes.
   Registered Report This study is developed from the registered report available at: https://arxiv.org/abs/2104.05538. This registered report was accepted at the MSR 2021 Registered Reports Track.
C1 [Han, Yisi; Feng, Yang] Nanjing Univ, Dept Comp Sci, Nanjing 210093, Jiangsu, Peoples R China.
   [Wang, Zhendong] Univ Calif Irvine, Dept Informat, Irvine, CA 92697 USA.
   [Zhao, Zhihong] Suzhou City Univ, Suzhou 215000, Jiangsu, Peoples R China.
   [Wang, Yi] Beijing Univ Posts & Telecommun, Sch Comp Sci, Natl Pilot Software Engn Sch, Beijing 100876, Peoples R China.
   [Wang, Yi] Beijing Univ Posts & Telecommun, MoE, Key Lab Trustworthy Distributed Comp & Serv, Beijing 100876, Peoples R China.
C3 Nanjing University; University of California System; University of
   California Irvine; Suzhou City University; Beijing University of Posts &
   Telecommunications; Beijing University of Posts & Telecommunications
RP Wang, Y (corresponding author), Beijing Univ Posts & Telecommun, Sch Comp Sci, Natl Pilot Software Engn Sch, Beijing 100876, Peoples R China.; Wang, Y (corresponding author), Beijing Univ Posts & Telecommun, MoE, Key Lab Trustworthy Distributed Comp & Serv, Beijing 100876, Peoples R China.
EM hanysannie@gmail.com; zhendow@uci.edu; fengyang@nju.edu.cn;
   zhaozhih@njtech.edu.cn; yiwang@bupt.edu.cn
RI Wang, Zhendong/GZG-5736-2022
FU National Natural Science Foundation of China [62172049]; Fundamental
   Research Funds for the Central Universities, Beijing University of Posts
   and Telecommunications
FX The authors would like to thank the anonymous reviewers in both the
   registered report phase and the paper submission phase. This work is
   partially supported by National Natural Science Foundation of China
   under the grant 62172049, and the Fundamental Research Funds for the
   Central Universities, Beijing University of Posts and Telecommunications
CR Aberdour M, 2007, IEEE SOFTWARE, V24, P58, DOI 10.1109/MS.2007.2
   Al Omran FNA, 2017, IEEE WORK CONF MIN S, P187, DOI 10.1109/MSR.2017.42
   Alrashedy K, 2020, J SYST SOFTW, V162, P1
   [Anonymous], 2013, P 16 C COMP SUPP COO
   Babcock MJ, 2014, J LANG SOC PSYCHOL, V33, P78, DOI 10.1177/0261927X13499331
   BACHARACH SB, 1993, J ORGAN BEHAV, V14, P21, DOI 10.1002/job.4030140104
   BARKER RT, 2010, J BUS COMMUN, V47, P295, DOI DOI 10.1177/0021943610369782
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bayram AB, 2019, NEGOT CONFL MANAG R, V12, P23, DOI 10.1111/ncmr.12142
   Bettenburg Nicolas, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P124, DOI 10.1109/ICPC.2010.46
   Bhatt P, 2016, TECHNOVATION, V52-53, P28, DOI 10.1016/j.technovation.2016.01.004
   Bianchi AJ, 2012, ORGAN SCI, V23, P341, DOI 10.1287/orsc.1100.0580
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bird Christian, 2008, Proceedings of the 2008 ACM SIGSOFT Symposium on the Foundations of Software Engineering, P24
   Boyd D, 2012, INFORM COMMUN SOC, V15, P662, DOI 10.1080/1369118X.2012.678878
   Bunderson JS, 2011, ORGAN SCI, V22, P1182, DOI 10.1287/orsc.1100.0590
   Calefato F, 2019, INFORM SOFTWARE TECH, V114, P1, DOI 10.1016/j.infsof.2019.05.012
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Cannava K, 2017, J SOC PERS RELATSH, V34
   Chan D, 2006, J APPL PSYCHOL, V91, P475, DOI 10.1037/0021-9010.91.2.475
   Chartrand TL, 1999, J PERS SOC PSYCHOL, V76, P893, DOI 10.1037/0022-3514.76.6.893
   Chen CL, 2022, SMARTMAT, V3, P533, DOI [10.1109/SC41404.2022.00089, 10.1002/smm2.1085]
   Chung C, 2007, FRONT SOC PSYCHOL, P343
   CONWAY ME, 1968, DATAMATION, V14, P28
   Cooper N, 2021, PROC INT CONF SOFTW, P957, DOI 10.1109/ICSE43902.2021.00091
   Cosentino V, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P137, DOI [10.1109/MSR.2016.023, 10.1145/2901739.2901776]
   Cowls J, 2015, POLICY INTERNET, V7, P447, DOI 10.1002/poi3.100
   Crowston K, 2006, P HICSS 06, P1
   Crowston K, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089127
   Danescu-Niculescu-Mizil C., 2011, P 20 INT C WORLD WID, P745
   Ducheneaut N., 2005, Computer Supported Cooperative Work: The Journal of Collaborative Computing, V14, P323, DOI 10.1007/s10606-005-9000-1
   Einav L, 2014, SCIENCE, V346, P715, DOI 10.1126/science.1243089
   El Mezouar M, 2019, EMPIR SOFTW ENG, V24, P3790, DOI 10.1007/s10664-019-09700-1
   Fielding RT, 1999, COMMUN ACM, V42, P42, DOI 10.1145/299157.299167
   Foucault M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P829, DOI 10.1145/2786805.2786870
   Germonprez M, 2017, INFORM SYST RES, V28, P64, DOI 10.1287/isre.2016.0662
   Gonzales AL, 2010, COMMUN RES, V37, P3, DOI 10.1177/0093650209351468
   Han YF, 2020, GLOBAL CHANGE BIOL, V26, P7229, DOI 10.1111/gcb.15369
   He JJ, 2020, INT C PROGRAM COMPRE, P117, DOI 10.1145/3387904.3389263
   Hindle A, 2009, PROC IEEE INT CONF S, P339, DOI 10.1109/ICSM.2009.5306310
   Hou Y, 2017, PROC ACM HUM COMPUT, V1, P1
   Idri A, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P21, DOI 10.1109/METRIC.2002.1011322
   Imtiaz N, 2018, 2018 IEEE/ACM 3RD INTERNATIONAL WORKSHOP ON EMOTION AWARENESS IN SOFTWARE ENGINEERING (SEMOTION), P55, DOI 10.1145/3194932.3194938
   Ireland ME, 2014, NEGOT CONFL MANAG R, V7, P1, DOI 10.1111/ncmr.12025
   Ireland ME, 2011, PSYCHOL SCI, V22, P39, DOI 10.1177/0956797610392928
   Joblin M, 2017, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2017.23
   Jongeling R, 2015, PROC IEEE INT CONF S, P531, DOI 10.1109/ICSM.2015.7332508
   Kacewicz E, 2014, J LANG SOC PSYCHOL, V33, P125, DOI 10.1177/0261927X13502654
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kaur R, 2022, E-INFORMATICA, V16, DOI 10.37190/e-Inf220102
   Kavaler D, 2017, IEEE INT CONF AUTOM, P72, DOI 10.1109/ASE.2017.8115620
   Kim S, 2006, Proceedings of the 2006 international workshop on Mining software repositories, P173
   Ko AJ, 2006, IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING, PROCEEDINGS, P127
   Kovacs B, 2020, PSYCHOL SCI, V31, P202, DOI 10.1177/0956797619894557
   LEVENDEL Y, 1990, IEEE T SOFTWARE ENG, V16, P141, DOI 10.1109/32.44378
   Levesque LL, 2001, J ORGAN BEHAV, V22, P135, DOI 10.1002/job.87
   Levina N, 2014, INFORM SYST RES, V25, P468, DOI 10.1287/isre.2014.0535
   Liao JX, 2019, PLOS ONE, V14, DOI 10.1371/journal.pone.0215059
   Lin B, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P94, DOI 10.1145/3180155.3180195
   Lin B, 2017, INT CONF GLOBAL SOFT, P66, DOI 10.1109/ICGSE.2017.11
   Lord SP, 2015, BEHAV THER, V46, P296, DOI 10.1016/j.beth.2014.11.002
   Mair P, 2015, P NATL ACAD SCI USA, V112, P14788, DOI 10.1073/pnas.1506047112
   Mangalaraj G, 2014, MIS QUART, V38, P249, DOI 10.25300/MISQ/2014/38.1.12
   Markowitz DM, 2018, J LANG SOC PSYCHOL, V37, P376, DOI 10.1177/0261927X17751012
   Mockus A, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P503, DOI 10.1109/ICSE.2002.1007994
   Mustansir A, 2022, AUTOMAT SOFTW ENG, V29, DOI 10.1007/s10515-021-00316-8
   Niederhoffer KG, 2002, J LANG SOC PSYCHOL, V21, P337, DOI 10.1177/026192702237953
   Nisbett RE, 2001, PSYCHOL REV, V108, P291, DOI 10.1037//0033-295X.108.2.291
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Pennebaker J.W., 2001, Linguistic inquiry and word count: LIWC 2001, V71, P1
   Pennebaker JW, 2014, PLOS ONE, V9, DOI 10.1371/journal.pone.0115844
   Piazza A, 2014, J MANAGE, V40, P287, DOI 10.1177/0149206313498904
   Rains SA, 2016, COMMUN RES, V43, P694, DOI 10.1177/0093650214565920
   Richardson BH, 2014, LAW HUMAN BEHAV, V38, P357, DOI 10.1037/lhb0000077
   Runeson P, 2007, PROC INT CONF SOFTW, P499
   Savage M, 2007, SOCIOLOGY, V41, P885, DOI 10.1177/0038038507080443
   Sawyer S, 1997, INFORM TECHNOL PEOPL
   Scacchi W, 2004, IEEE SOFTWARE, V21, P59, DOI 10.1109/MS.2004.1259221
   Sedgwick P, 2014, BMJ-BRIT MED J, V348, DOI 10.1136/bmj.g3840
   Shi W, 2019, ACAD MANAGE J, V62, P383, DOI 10.5465/amj.2016.1062
   Silva CC, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-10026-0
   Steel DG, 1996, SURV METHODOL, V22
   Steiger JH, 2004, PSYCHOL METHODS, V9, P164, DOI 10.1037/1082-989X.9.2.164
   Steinmacher I, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P1379, DOI 10.1145/2675133.2675215
   Stewart D, 2005, AM SOCIOL REV, V70, P823, DOI 10.1177/000312240507000505
   Tausczik YR, 2010, J LANG SOC PSYCHOL, V29, P24, DOI 10.1177/0261927X09351676
   Trainer EH, 2016, ACM CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW 2016), P1118, DOI 10.1145/2818048.2819946
   Tsay J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P356, DOI 10.1145/2568225.2568315
   Vale G, 2020, EMPIR SOFTW ENG, V25, P402, DOI 10.1007/s10664-019-09774-x
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   Wang Y, 2020, J COMPUT SOCIAL SCI, P1
   Wang Y, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P230, DOI 10.1109/ASE.2019.00031
   Wang ZD, 2020, ACM T SOFTW ENG METH, V29, DOI 10.1145/3387111
   Wolf T, 2009, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE.2009.5070503
   Wu YH, 2019, EMPIR SOFTW ENG, V24, P637, DOI 10.1007/s10664-018-9634-5
   Xuan Q, 2016, PLOS ONE, V11, DOI 10.1371/journal.pone.0154324
   Xuan Q, 2012, PROCEEDINGS OF THE 2012 ASE INTERNATIONAL CONFERENCE ON SOCIAL INFORMATICS (SOCIALINFORMATICS 2012), P78, DOI 10.1109/SocialInformatics.2012.17
   Zhang Y., 2015, Proceedings of the 7th Asia-Pacific Symposium on Internetware, P83
NR 99
TC 0
Z9 0
U1 1
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2023
VL 28
IS 3
AR 78
DI 10.1007/s10664-023-10298-8
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA G3MS6
UT WOS:000988244400001
DA 2024-07-18
ER

PT J
AU Izadi, M
   Nejati, M
   Heydarnoori, A
AF Izadi, Maliheh
   Nejati, Mahtab
   Heydarnoori, Abbas
TI Semantically-enhanced topic recommendation systems for software projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Recommender system; Topics; Tags; Semantic relationships; Knowledge
   graph; Software projects; GitHub
ID TAG RECOMMENDATION; KNOWLEDGE
AB Software-related platforms such as GitHub and Stack Overflow, have enabled their users to collaboratively label software entities with a form of metadata called topics. Tagging software repositories with relevant topics can be exploited for facilitating various downstream tasks. For instance, a correct and complete set of topics assigned to a repository can increase its visibility. Consequently, this improves the outcome of tasks such as browsing, searching, navigation, and organization of repositories. Unfortunately, assigned topics are usually highly noisy, and some repositories do not have well-assigned topics. Thus, there have been efforts on recommending topics for software projects, however, the semantic relationships among these topics have not been exploited so far. In this work, we propose two recommender models for tagging software projects that incorporate the semantic relationship among topics. Our approach has two main phases; (1) we first take a collaborative approach to curate a dataset of quality topics specifically for the domain of software engineering and development. We also enrich this data with the semantic relationships among these topics and encapsulate them in a knowledge graph we call SED-KGraph. Then, (2) we build two recommender systems; The first one operates only based on the list of original topics assigned to a repository and the relationships specified in our knowledge graph. The second predictive model, however, assumes there are no topics available for a repository, hence it proceeds to predict the relevant topics based on both textual information of a software project (such as its README file), and SED-KGraph. We built SED-KGraph in a crowd-sourced project with 170 contributors from both academia and industry. Through their contributions, we constructed SED-KGraph with 2,234 carefully evaluated relationships among 863 community-curated topics. Regarding the recommenders' performance, the experiment results indicate that our solutions outperform baselines that neglect the semantic relationships among topics by at least 25% and 23% in terms of Average Success Rate and Mean Average Precision metrics, respectively. We share SED-KGraph, as a rich form of knowledge for the community to re-use and build upon. We also release the source code of our two recommender models, KGRec and KGRec+.
C1 [Izadi, Maliheh] Delft Univ Technol, Delft, Netherlands.
   [Nejati, Mahtab] Univ Waterloo, Waterloo, ON, Canada.
   [Heydarnoori, Abbas] Bowling Green State Univ, Bowling Green, OH 43403 USA.
C3 Delft University of Technology; University of Waterloo; University
   System of Ohio; Bowling Green State University
RP Izadi, M (corresponding author), Delft Univ Technol, Delft, Netherlands.; Heydarnoori, A (corresponding author), Bowling Green State Univ, Bowling Green, OH 43403 USA.
EM m.izadi@tudelft.nl; mahtab.nejati@uwaterloo.ca; aheydar@bgsu.edu
RI Heydarnoori, Abbas/ABB-2493-2020
OI Heydarnoori, Abbas/0000-0001-9785-2880; Izadi,
   Maliheh/0000-0001-5093-5523
CR Alonso O, 2014, MSRTR201491, P2014
   Bollacker K., 2008, P 2008 ACM SIGMOD IN, P1247, DOI 10.1145/1376616.1376746
   Cai XY, 2016, P INT COMP SOFTW APP, P63, DOI 10.1109/COMPSAC.2016.124
   Cao J., 2019, 31 INT C SOFTWARE EN, P5
   Chen DS, 2019, 2019 IEEE 1ST INTERNATIONAL WORKSHOP ON INTELLIGENT BUG FIXING (IBF '19), P39, DOI [10.1109/IBF.2019.8665494, 10.1109/ibf.2019.8665494]
   Crestani F, 1997, ARTIF INTELL REV, V11, P453, DOI 10.1023/A:1006569829653
   Di Rocco Juri, 2020, ESEM ' 20, DOI DOI 10.1145/3382494.3410690
   Di Sipio Claudio, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P71, DOI 10.1145/3383219.3383227
   Dong L, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P260
   Escobar-Avila J, 2015, INT C PROGRAM COMPRE, P229, DOI 10.1109/ICPC.2015.33
   Fathalla S, 2018, LECT NOTES ARTIF INT, V11055, P53, DOI 10.1007/978-3-319-98443-8_6
   Golder SA, 2006, J INF SCI, V32, P198, DOI 10.1177/0165551506062337
   Han ZB, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P456, DOI 10.1109/SANER.2018.8330232
   Held C, 2012, COMPUT HUM BEHAV, V28, P34, DOI 10.1016/j.chb.2011.08.008
   Izadi M, 2022, 2022 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON NATURAL LANGUAGE-BASED SOFTWARE ENGINEERING (NLBSE 2022), P48, DOI 10.1145/3528588.3528665
   Izadi M, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10085-3
   Izadi M, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09976-2
   Karthik S, 2019, INT WORK REAL ARTIF, P15, DOI 10.1109/RAISE.2019.00011
   Li HW, 2018, PROC IEEE INT CONF S, P183, DOI 10.1109/ICSME.2018.00028
   Liu J, 2018, AUTOMAT SOFTW ENG, V25, P675, DOI 10.1007/s10515-018-0239-4
   Maity Suman Kalyan, 2019, Advances in Information Retrieval. 41st European Conference on IR Research, ECIR 2019. Proceedings: Lecture Notes in Computer Science (LNCS 11438), P125, DOI 10.1007/978-3-030-15719-7_16
   Mazrae PR, 2021, PROC IEEE INT CONF S, P263, DOI 10.1109/ICSME52107.2021.00030
   McMillan C, 2012, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2012.6227178
   Reyes J, 2016, 2016 INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE & COMPUTATIONAL INTELLIGENCE (CSCI), P514, DOI [10.1109/CSCI.2016.0103, 10.1109/CSCI.2016.102]
   Sun JM, 2021, PROC IEEE INT CONF S, P448, DOI 10.1109/ICSME52107.2021.00046
   Sun JM, 2019, PROC IEEE INT CONF S, P257, DOI 10.1109/ICSME.2019.00039
   Thung F, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P600, DOI 10.1109/ICSM.2012.6405331
   Vargas-Baldrich S, 2015, IEEE INT CONF AUTOM, P289, DOI 10.1109/ASE.2015.38
   Wagner S, 2015, The art and science of analyzing software data, P39, DOI [10.1016/B978-0-12-411519-4.00003-3, DOI 10.1016/B978-0-12-411519-4.00003-3]
   Wang HW, 2018, CIKM'18: PROCEEDINGS OF THE 27TH ACM INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P417, DOI 10.1145/3269206.3271739
   Wang L, 2017, PROC IEEE ACM INT C, P189, DOI 10.1109/ICSE-C.2017.102
   Wang SW, 2018, EMPIR SOFTW ENG, V23, P800, DOI 10.1007/s10664-017-9533-1
   Wang T, 2014, FRONT COMPUT SCI-CHI, V8, P69, DOI 10.1007/s11704-013-2394-x
   Wang XY, 2015, J COMPUT SCI TECH-CH, V30, P1017, DOI 10.1007/s11390-015-1578-2
   Xia X, 2013, IEEE WORK CONF MIN S, P287, DOI 10.1109/MSR.2013.6624040
   Xu K, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P2326
   Yang Y, 2016, LECT NOTES ARTIF INT, V9983, P599, DOI 10.1007/978-3-319-47650-6_47
   Yao XC, 2014, PROCEEDINGS OF THE 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P956
   Zhang Enhao, 2021, P 2021 CHI C HUMAN F, DOI [DOI 10.1145/3411764.3445714, 10.1145/3411764.3445714]
   Zhang Y, 2019, IEEE DATA MINING, P876, DOI 10.1109/ICDM.2019.00098
   Zhang Y, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P13, DOI 10.1109/SANER.2017.7884605
   Zhao XJ, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P56, DOI 10.1109/SANER.2017.7884609
   Zhao YJ, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P599, DOI [10.1109/saner.2019.8668034, 10.1109/SANER.2019.8668034]
   Zhou PY, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P272, DOI 10.1109/SANER.2017.7884628
   Zou XH, 2020, J PHYS CONF SER, V1487, DOI 10.1088/1742-6596/1487/1/012016
NR 45
TC 4
Z9 4
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 50
DI 10.1007/s10664-022-10272-w
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9N9OW
UT WOS:000943238400001
DA 2024-07-18
ER

PT J
AU Temple, WG
   Wu, Y
   Cheh, C
   Li, Y
   Chen, BB
   Kalbarczyk, ZT
   Sanders, WH
   Nicol, D
AF Temple, William G. G.
   Wu, Yue
   Cheh, Carmen
   Li, Yuan
   Chen, Binbin
   Kalbarczyk, Zbigniew T. T.
   Sanders, William H. H.
   Nicol, David
TI CyberSAGE: The cyber security argument graph evaluation tool
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Cybersecurity assessment; Risk assessment; Security argument graph;
   Attack scenario model
ID ATTACK; RISK
AB Cyber risk assessment is a critical step in securing the digital systems that support modern society. Typically this is a manual process carried out by consultants or working groups with little or no software support outside of spreadsheet tools. As cybersecurity threats and digital systems themselves become more complex and dynamic, there is a need for greater tool support in the risk assessment process to document and trace assumptions and facilitate the revision or extension of a threat and risk assessment throughout a system's lifecycle. The Cyber Security Argument Graph Evaluation (CyberSAGE) tool provides a platform for model-based cybersecurity analysis of cyber failure and attack scenarios. It combines models of high-level workflow, system architecture, device properties, attacker capability and skill, to compute holistic, quantitative security metrics. In this paper we describe the models, algorithms, and software architecture of the CyberSAGE tool. To illustrate its application, we describe an assessment carried out on communication systems in two railway lines with the support of an industry partner. Finally, we summarize feedback on the CyberSAGE tool from the railway case study partner, as well as over 40 interviews with practitioners and domain experts and a multinational electronics company who carried out a one year independent evaluation.
C1 [Temple, William G. G.; Wu, Yue; Li, Yuan] Adv Digital Sci Ctr, Singapore, Singapore.
   [Cheh, Carmen; Chen, Binbin] Singapore Univ Technol & Design, Singapore, Singapore.
   [Kalbarczyk, Zbigniew T. T.; Nicol, David] Univ Illinois, Coordinated Sci Lab, Urbana, IL 61801 USA.
   [Sanders, William H. H.] Carnegie Mellon Univ, Coll Engn, Pittsburgh, PA 15213 USA.
C3 Singapore University of Technology & Design; University of Illinois
   System; University of Illinois Urbana-Champaign; Carnegie Mellon
   University
RP Temple, WG (corresponding author), Adv Digital Sci Ctr, Singapore, Singapore.
EM will.gt@gmail.com; wu.yue@adsc-create.edu.sg; carmen_cheh@sutd.edu.sg;
   yuan.li@adsc-create.edu.sg; binbin_chen@sutd.edu.sg;
   kalbarcz@illinois.edu; sanders@cmu.edu; dmnicol@illinois.edu
RI Chen, Binbin/AAA-9619-2022
OI Chen, Binbin/0000-0002-9584-0082; Cheh, Carmen/0000-0002-8510-7274
FU National Research Foundation (NRF), Prime Minister's Office, Singapore,
   under its National Cybersecurity RD Programme [NRF2014NCRNCR001-31,
   GC2018-NCR-0009]; Singapore's Agency for Science, Technology, and
   Research (A*STAR)
FX This work was supported in part by the National Research Foundation
   (NRF), Prime Minister's Office, Singapore, under its National
   Cybersecurity R&D Programme (Award No. NRF2014NCRNCR001-31 and
   GC2018-NCR-0009) and administered by the National Cybersecurity R&D
   Directorate, and supported in part by Singapore's Agency for Science,
   Technology, and Research (A*STAR) under a research grant for the
   Human-centered Cyber-physical Systems Programme at the Advanced Digital
   Sciences Center.
CR Alberts C. J., 2002, Managing information security risks: the OCTAVE approach
   Vu AH, 2014, LECT NOTES COMPUT SC, V8657, P384, DOI 10.1007/978-3-319-10696-0_29
   [Anonymous], 2013, NIST SPECIAL PUBLICA
   CAIRIS, 2020, OP SOURC PLATF BUILD
   Cau D, 2014, GOVERNANCE RISK COMP
   Charis C., 2012, TETRA CRIT COMM ASS
   Cheh C., 2017, P WORKSH CYB PHYS SY, P49, DOI 10.1145/3140241.3140249
   Chen BB, 2013, PROCEEDINGS OF THE 2013 NEW SECURITY PARADIGMS WORKSHOP (NSPW'13), P65, DOI 10.1145/2535813.2535821
   Davis R., 2008, TETRA SEMINARS
   Ekstedt M, 2015, IEEE INT ENTERP, P152, DOI 10.1109/EDOCW.2015.40
   Fila B, 2019, LECT NOTES COMPUT SC, V11720, P95, DOI 10.1007/978-3-030-36537-0_6
   Gadyatskaya O, 2016, LECT NOTES COMPUT SC, V9826, P159, DOI 10.1007/978-3-319-43425-4_10
   Harvey M, 2014, IEEE POWER ENERG CON
   Holm H, 2014, THESIS KTH IND INFOR
   Holm H, 2015, IEEE T DEPEND SECURE, V12, P626, DOI 10.1109/TDSC.2014.2382574
   HSSEDI: The Homeland Security Systems Engineering and Development Institute, 2018, CYB THREAT MOD SURV
   ICS-CERT, 2018, CSET CYB SEC EV TOOL
   IriusRisk, 2020, IR THREAT MOD PLATF
   Ivanova MG, 2016, LECT NOTES COMPUT SC, V9390, P82, DOI 10.1007/978-3-319-29968-6_6
   Jauhar S, 2015, IEEE PAC RIM INT SYM, P319, DOI 10.1109/PRDC.2015.37
   Johnson P, 2019, 13TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES 2018), DOI 10.1145/3230833.3232799
   Johnson P, 2016, PROCEEDINGS OF 2016 11TH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY, (ARES 2016), P278, DOI 10.1109/ARES.2016.77
   Keefe K, 2018, LECT NOTES COMPUT SC, V11178, P173, DOI 10.1007/978-3-030-02227-3_12
   Kohnfelder L., 1999, Microsoft Interface, P33
   Kordy B, 2014, COMPUT SCI REV, V13-14, P1, DOI 10.1016/j.cosrev.2014.07.001
   Lund MS, 2011, MODEL-DRIVEN RISK ANALYSIS: THE CORAS APPROACH, P3, DOI 10.1007/978-3-642-12323-8
   Meland PH, 2012, 2012 SEVENTH INTERNATIONAL CONFERENCE ON AVAILABILITY, RELIABILITY AND SECURITY (ARES), P542, DOI 10.1109/ARES.2012.13
   Microsoft, 2017, MICR THREAT MOD TOOL
   Muehrcke C, 2013, 2013 43 ANN IEEEIFIP, P1
   National Electric Sector Cybersecurity Organization Resource, 2014, EL SECT FAIL SCEN CO
   National Institute of Standards and Technology (NIST), 2012, NIST Special Publication, V800-146
   NERC, 2012, SEC GUID EL SECT VUL
   Noel S, 2009, CATCH 2009: CYBERSECURITY APPLICATIONS AND TECHNOLOGY CONFERENCE FOR HOMELAND SECURITY, PROCEEDINGS, P124, DOI 10.1109/CATCH.2009.19
   O'Hare S, 2008, LECT NOTES COMPUT SC, V5210, P60, DOI 10.1007/978-3-540-85933-8_6
   Ou XM, 2005, USENIX ASSOCIATION PROCEEDINGS OF THE 14TH USENIX SECURITY SYMPOSIUM, P113
   OWASP, 2020, OW THREAT DRAG
   OWASP, 2020, OW PYTM TOOL
   Rausch M, 2018, CRITICAL INFORM INFR
   Recker J, 2010, BUS PROCESS MANAG J, V16, P181, DOI 10.1108/14637151011018001
   securiCAD User Community, 2020, SEC REF MAN
   Sindre G, 2007, LECT NOTES COMPUT SC, V4542, P355
   Temple WG., 2016, INT C CRITICAL INFOR, P213
   TETRA SEKEX Communications, 2018, TETR NETW RAD SOL AP
   ThreatModeler, 2020, THREATM SOFTW INC
   Tippenhauer NO, 2014, IEEE PAC RIM INT SYM, P33, DOI 10.1109/PRDC.2014.13
   Ucedavelez T, 2015, RISK CENTRIC THREAT MODELING: PROCESS FOR ATTACK SIMULATION AND THREAT ANALYSIS, P1, DOI 10.1002/9781118988374
   VERSPRITE, 2020, WAYP ENT THREAT MOD
   Wang LY, 2014, IEEE T DEPEND SECURE, V11, P30, DOI 10.1109/TDSC.2013.24
   Xiong W, 2020, INFORM SYSTEMS SECUR, P272
NR 49
TC 2
Z9 2
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2023
VL 28
IS 1
AR 18
DI 10.1007/s10664-021-10056-8
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6X7FJ
UT WOS:000896574800001
DA 2024-07-18
ER

PT J
AU Hoffmann, B
   Urquhart, N
   Chalmers, K
   Guckert, M
AF Hoffmann, Benjamin
   Urquhart, Neil
   Chalmers, Kevin
   Guckert, Michael
TI An empirical evaluation of a novel domain-specific language - modelling
   vehicle routing problems with Athos
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Domain-specific languages; General-purpose language; Empirical
   evaluation; Vehicle routing problem
AB Domain-specific languages (DSLs) are a popular approach among software engineers who demand for a tailored development interface. A DSL-based approach allows to encapsulate the intricacies of the target platform in transformations that turn DSL models into executable software code. Often, DSLs are even claimed to reduce development complexity to a level that allows them to be successfully applied by domain-experts with limited programming knowledge. Recent research has produced some scientifically backed insights on the benefits and limitations of DSLs. Further empirical studies are required to build a sufficient body of knowledge from which support for different claims related to DSLs can be derived. In this research study, we adopt current DSL evaluation approaches to investigate potential gains in terms of effectiveness and efficiency, through the application of our DSL Athos, a language developed for the domain of traffic and transportation simulation and optimisation. We compare Athos to the alternative of using an application library defined within a general-purpose language (GPL). We specified two sets of structurally identical tasks from the domain of vehicle routing problems and asked study groups with differing levels of programming knowledge to solve the tasks with the two approaches. The results show that inexperienced participants achieved considerable gains in effectiveness and efficiency with the usage of Athos DSL. Though hinting at Athos being the more efficient approach, the results were less distinct for more experienced programmers. The vast majority of participants stated to prefer working with Athos over the usage of the presented GPL's API.
C1 [Hoffmann, Benjamin; Guckert, Michael] TH Mittelhessen, Kompetenzzentrum Informat Technol, Friedberg, Germany.
   [Urquhart, Neil] Edinburgh Napier Univ, Sch Comp, Edinburgh, Midlothian, Scotland.
   [Chalmers, Kevin] Univ Roehampton, Sch Arts, London, England.
C3 Edinburgh Napier University; Roehampton University
RP Hoffmann, B (corresponding author), TH Mittelhessen, Kompetenzzentrum Informat Technol, Friedberg, Germany.
EM benjamin.hoffmann@mnd.thm.de; N.Urquhart@napier.ac.uk;
   Kevin.Chalmers@roehampton.ac.uk; michael.guckert@mnd.thm.de
OI Hoffmann, Benjamin/0000-0002-6400-9966
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL. The research
   presented in this article received no specific grant from any funding
   agency in the public, commercial, or not-for-profit sectors.
CR Baldacci R, 2008, OPER RES COMPUT SCI, V43, P3, DOI 10.1007/978-0-387-77778-8_1
   Barisic A, 2012, ELECTR COMMUN, DOI [10.14279/tuj.eceasst.50.741.750, DOI 10.14279/TUJ.ECEASST.50.741.750]
   Barisic A., 2014, SOFTWARE DESIGN DEV, P2120
   Barisic A, 2012, 2012 EIGHTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY (QUATIC 2012), P342, DOI 10.1109/QUATIC.2012.63
   Basili V. R., 1994, Encyclopedia of Software Engineering, V1, P528
   Challenger M, 2016, SOFTWARE QUAL J, V24, P755, DOI 10.1007/s11219-015-9291-5
   Cordasco G, 2021, CONCURR COMP-PRACT E, V33, DOI 10.1002/cpe.5802
   de Sousa LM, 2018, COGENT ENG, V5, DOI 10.1080/23311916.2018.1436889
   do NascimentoL.M., 2012, 7 INT C SOFTWARE ENG, P179
   Ewais Ahmed, 2014, 6th International Conference on Computer-Supported Education (CSEDU 2014). Proceedings, P459
   Feldt R, 2010, 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING & KNOWLEDGE ENGINEERING (SEKE 2010), P374
   Hermans F, 2009, LECT NOTES COMPUT SC, V5795, P423, DOI 10.1007/978-3-642-04425-0_33
   Hoffmann B, 2020, MODELLIERUNG 2020 GE, P141
   Hoffmann B, 2019, COMMUN ECMS, V33, P296
   Hoffmann B, 2018, LECT NOTES ARTIF INT, V10978, P187, DOI 10.1007/978-3-319-94580-4_15
   ISO-IEC 25010:2011, 2011, 25010 ISOIEC, DOI [10.3403/30215101, DOI 10.3403/30215101]
   Iung A, 2020, EMPIR SOFTW ENG, V25, P4205, DOI 10.1007/s10664-020-09872-1
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Johanson A, 2017, EMPIR SOFTW ENG, V22, P2206, DOI 10.1007/s10664-016-9483-z
   Kahlaoui A., 2008, METRICS NEWS, V13, P43
   Kahraman G, 2015, SOFTW SYST MODEL, V14, P1505, DOI 10.1007/s10270-013-0387-8
   Kosar T, 2018, EMPIR SOFTW ENG, V23, P2734, DOI 10.1007/s10664-017-9593-2
   Kosar T, 2016, INFORM SOFTWARE TECH, V71, P77, DOI 10.1016/j.infsof.2015.11.001
   Kosar T, 2012, EMPIR SOFTW ENG, V17, P276, DOI 10.1007/s10664-011-9172-x
   Kosar T, 2010, COMPUT SCI INF SYST, V7, P247, DOI 10.2298/CSIS1002247K
   Mayer T, 2016, 2016 IEEE 19TH INTERNATIONAL CONFERENCE ON INTELLIGENT TRANSPORTATION SYSTEMS (ITSC), P1305, DOI 10.1109/ITSC.2016.7795725
   Mernik M, 2005, ACM COMPUT SURV, V37, P316, DOI 10.1145/1118890.1118892
   Ombuki B, 2006, APPL INTELL, V24, P17, DOI 10.1007/s10489-006-6926-z
   Pillac V, 2013, EUR J OPER RES, V225, P1, DOI 10.1016/j.ejor.2012.08.015
   Poltronieri I, 2021, LECT NOTES COMPUT SC, V12762, P299, DOI 10.1007/978-3-030-78462-1_23
   Poltronieri I, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P2013, DOI 10.1145/3167132.3167348
   Prumper J., 1999, Human-Computer Interaction: Ergonomics and User Interfaces. Proceedings of HCI International '99 (8th International Conference on Human-Computer Interaction), P1028
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Tekinerdogan B, 2019, SOFTW SYST MODEL, V18, P2907, DOI 10.1007/s10270-018-00705-w
   Thorne DR, 2006, BEHAV RES METHODS, V38, P569, DOI 10.3758/BF03193886
   Tisue S., 2004, P AG 2004 C SOC DYN, P161
   Van Solingen Rini, 1999, The Goal/ Question/ Metric Method: a practical guide for quality improvement of software development
   Vandierendonck Andre, 2018, J Cogn, V1, P8, DOI 10.5334/joc.6
   Vandierendonck A, 2017, BEHAV RES METHODS, V49, P653, DOI 10.3758/s13428-016-0721-5
   Welch P, 2017, DEVELOPING COMMERCIA, DOI [10.13140/RG.2.2.14915.30247, DOI 10.13140/RG.2.2.14915.30247]
   Wohlin C., 2012, Experimentation in Software Engineering
   Woltz DJ, 2006, MEM COGNITION, V34, P668, DOI 10.3758/BF03193587
NR 42
TC 4
Z9 4
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 180
DI 10.1007/s10664-022-10210-w
PG 52
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4S2ZV
UT WOS:000857316300001
PM 36187153
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Panichella, A
   Panichella, S
   Fraser, G
   Sawant, AA
   Hellendoorn, VJ
AF Panichella, Annibale
   Panichella, Sebastiano
   Fraser, Gordon
   Sawant, Anand Ashok
   Hellendoorn, Vincent J.
TI Test smells 20 years later: detectability, validity, and reliability
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Test generation; Test smells; Software quality
ID ALGORITHMS; SELECTION
AB Test smells aim to capture design issues in test code that reduces its maintainability. These have been extensively studied and generally found quite prevalent in both human-written and automatically generated test-cases. However, most evidence of prevalence is based on specific static detection rules. Although those are based on the original, conceptual definitions of the various test smells, recent empirical studies indicate that developers perceive warnings raised by detection tools as overly strict and non-representative of the maintainability and quality of test suites. This leads us to re-assess test smell detection tools' detection accuracy and investigate the prevalence and detectability of test smells more broadly. Specifically, we construct a hand-annotated dataset spanning hundreds of test suites both written by developers and generated by two test generation tools (EvoSuite and JTExpert) and performed a multi-stage, cross-validated manual analysis to identify the presence of six types of test smells in these. We then use this manual labeling to benchmark the performance and external validity of two test smell detection tools-one widely used in prior work and one recently introduced with the express goal to match developer perceptions of test smells. Our results primarily show that the current vocabulary of test smells is highly mismatched to real concerns: multiple smells were ubiquitous on developer-written tests but virtually never correlated with semantic or maintainability flaws; machine-generated tests actually often scored better, but in reality, suffered from a host of problems not well-captured by current test smells. Current test smell detection strategies poorly characterized the issues in these automatically generated test suites; in particular, the older tool's detection strategies misclassified over 70% of test smells, both missing real instances (false negatives) and marking many smell-free tests as smelly (false positives). We identify common patterns in these tests that can be used to improve the tools, refine and update the definition of certain test smells, and highlight as of yet uncharacterized issues. Our findings suggest the need for (i) more appropriate metrics to match development practice, (ii) more accurate detection strategies to be evaluated primarily in industrial contexts.
C1 [Panichella, Annibale] Delft Univ Technol, Delft, Netherlands.
   [Panichella, Sebastiano] Zurich Univ Appl Sci, Zurich, Switzerland.
   [Fraser, Gordon] Univ Passau, Passau, Germany.
   [Sawant, Anand Ashok] Univ Calif Davis, Davis, CA 95616 USA.
   [Hellendoorn, Vincent J.] Carnegie Mellon Univ, Pittsburgh, PA 15213 USA.
C3 Delft University of Technology; Zurich University of Applied Sciences;
   University of Passau; University of California System; University of
   California Davis; Carnegie Mellon University
RP Panichella, A (corresponding author), Delft Univ Technol, Delft, Netherlands.
EM A.Panichella@tudelft.nl; sebastiano.panichella@zhaw.ch;
   Gordon.Fraser@uni-passau.de; asawant@ucdavis.edu; vhellendoorn@cmu.edu
OI Panichella, Sebastiano/0000-0003-4120-626X
FU EPSRC [EP/N023978/2]; Horizon 2020 (EU Commission) [957254-COSMOS];
   EPSRC [EP/N023978/2] Funding Source: UKRI
FX The authors thank Davide Spadini for providing the implementation of
   tsDetect with calibrated thresholds. This work is supported by EPSRC
   project EP/N023978/2. Annibale Panichella and Sebastiano Panichella
   gratefully acknowledges the Horizon 2020 (EU Commission) support for the
   project COSMOS (DevOps for Complex Cyber-physical Systems), Project No.
   957254-COSMOS.
CR Afshan S, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P352, DOI 10.1109/ICST.2013.11
   Almasi MM, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P263, DOI 10.1109/ICSE-SEIP.2017.27
   Ammann Paul, 2008, Introduction to software testing, V1st
   Andrews JH, 2011, IEEE T SOFTWARE ENG, V37, P80, DOI 10.1109/TSE.2010.46
   [Anonymous], 2014, P ACM IEEE INT C AUT, DOI DOI 10.1145/2642937.2642986
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Baresi L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P281, DOI 10.1145/1810295.1810353
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   Birchler C., 2022, 2022 IEEE 29 INT C S
   Birchler C., 2022, ACM Trans. Softw. Eng. Methodol. (TOSEM)
   Bohme M, 2022, RELIABILITY COVERAGE
   Campos J, 2018, INFORM SOFTWARE TECH, V104, P207, DOI 10.1016/j.infsof.2018.08.010
   Canfora G, 2015, SOFTW TEST VERIF REL, V25, P426, DOI 10.1002/stvr.1570
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Csallner C, 2004, SOFTWARE PRACT EXPER, V34, P1025, DOI 10.1002/spe.602
   Daka E, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P57, DOI 10.1145/3092703.3092727
   Daka E, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P107, DOI 10.1145/2786805.2786838
   Derakhshanfar P, 2020, SOFTW TEST VERIF REL, V30, DOI 10.1002/stvr.1733
   Devroey X., 2020, JAVA UNIT TESTING TO, DOI [10.1145/3387940.3392265, DOI 10.1145/3387940.3392265]
   Elbaum Sebastian, 2006, P 14 ACM SIGSOFT INT, P253
   Fowler M., 1999, Refactoring: Improving the Design of Existing Code
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P783, DOI 10.1007/s10664-013-9299-z
   Fraser G, 2015, EMPIR SOFTW ENG, V20, P611, DOI 10.1007/s10664-013-9288-2
   Fraser G, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685612
   Fraser G, 2013, IEEE T SOFTWARE ENG, V39, P276, DOI 10.1109/TSE.2012.14
   Fraser G, 2012, IEEE T SOFTWARE ENG, V38, P278, DOI 10.1109/TSE.2011.93
   Fraser Gordon, 2011, PROC 19 ACM SIGSOFT, P416, DOI 10.1145/2025113.2025179
   Grano G, 2019, J SYST SOFTWARE, V156, P312, DOI 10.1016/j.jss.2019.07.016
   Just R., 2014, INT S SOFTWARE TESTI, P315, DOI [DOI 10.1145/2610384.2610388, 10.1145/2610384.2610388]
   Kifetew F, 2019, 2019 IEEE/ACM 12TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST 2019), P15, DOI 10.1109/SBST.2019.00014
   Ma L, 2015, IEEE INT CONF AUTOM, P212, DOI 10.1109/ASE.2015.49
   Messaoudi S, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P517, DOI 10.1145/3460319.3464824
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Pacheco C, 2007, PROC INT CONF SOFTW, P75
   Palomba F, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P5, DOI [10.1145/2897010.2897016, 10.1109/SBST.2016.010]
   Panichella A., 2020, P IEEE ACM 42 INT C, P549, DOI DOI 10.1145/3387940.3392266
   Panichella A, 2020, PROC IEEE INT CONF S, P523, DOI 10.1109/ICSME46990.2020.00056
   Panichella A, 2018, INFORM SOFTWARE TECH, V104, P236, DOI 10.1016/j.infsof.2018.08.009
   Panichella A, 2018, LECT NOTES COMPUT SC, V11036, P309, DOI 10.1007/978-3-319-99241-9_17
   Panichella A, 2018, IEEE T SOFTWARE ENG, V44, P122, DOI 10.1109/TSE.2017.2663435
   Panichella A, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P32, DOI 10.1109/SBST.2017.7
   Panichella S., 2021, INT C SOFTWARE ENG W
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Panichella S, 2015, PROC IEEE INT CONF S, P586, DOI 10.1109/ICSM.2015.7332519
   Peruma ASA, 2018, WHAT SMELL EMPIRICAL
   Robinson Brian, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P23, DOI 10.1109/ASE.2011.6100059
   Rojas Jose Miguel, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P93, DOI 10.1007/978-3-319-22183-0_7
   Rojas JM, 2017, EMPIR SOFTW ENG, V22, P852, DOI 10.1007/s10664-015-9424-2
   Rojas JM, 2016, SOFTW TEST VERIF REL, V26, P366, DOI 10.1002/stvr.1601
   Roy D, 2020, IEEE INT CONF AUTOM, P287, DOI 10.1145/3324884.3416622
   Sakti A, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P43, DOI 10.1109/SBST.2017.5
   Sakti A, 2015, IEEE T SOFTWARE ENG, V41, P294, DOI 10.1109/TSE.2014.2363479
   Shamshiri S, 2018, IEEE INT CONF SOFTW, P250, DOI 10.1109/ICST.2018.00033
   Soltani M, 2020, IEEE T SOFTWARE ENG, V46, P1294, DOI 10.1109/TSE.2018.2877664
   Spadini D, 2020, INVESTIGATING SEVERI
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Tonella P., 2004, Software Engineering Notes, V29, P119, DOI 10.1145/1013886.1007528
   Tsantalis N, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P4, DOI 10.1109/SANER.2018.8330192
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Xie T, 2006, LECT NOTES COMPUT SC, V4067, P380
   Xuan JF, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P52, DOI 10.1145/2635868.2635906
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zhang S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1173, DOI 10.1109/ICSE.2013.6606671
NR 65
TC 11
Z9 11
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 170
DI 10.1007/s10664-022-10207-5
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V4SY
UT WOS:000859469500012
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Zhang, THR
   Yu, Y
   Mao, XJ
   Lu, Y
   Li, ZX
   Wang, HM
AF Zhang, Tanghaoran
   Yu, Yue
   Mao, Xinjun
   Lu, Yao
   Li, Zhixing
   Wang, Huaimin
TI FENSE: A feature-based ensemble modeling approach to cross-project
   just-in-time defect prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Just-in-time defect prediction; Cross project; Ensemble learning; Model
   selection; Software project feature
ID SOFTWARE; FRAMEWORK; FAULTS
AB Context: Just-in-time defect prediction (JITDP) leverages modern machine learning models to predict the defect-proneness of commits. Such models require adequate training data, which is unavailable in projects with short histories. To address this problem, cross-project methods reuse the data or models in other projects to make predictions, grounded on the assumption that they share similar defect-related features. However, these features are overlooked, which leads to unsatisfying model performance. Objective: This study aims to investigate the relationship between cross-project JITDP performances and project features, thereby improving the performance of cross-project models. Method: We propose a F eature-based ENSE mble modeling approach (FENSE) to cross-project JITDP. For a target project, FENSE pairs it to each source project and obtains 20 features. Leveraging them, it can predict the transferability of each off-the-shelf JITDP model. Then FENSE identifies the most transferable ones and combines them to make cross-project predictions. To achieve this, we conduct a large-scale empirical study of 113,906 project pairs in GitHub and investigate the impact of project features. Results: The results show that: (1) cross-project transferability is highly related to features including programming language and the defect ratio of the source project; (2) our feature-based model selection scheme can improve the cross-project JITDP performance by 10%; (3) FENSE outperforms other models on five evaluation measures without extra time and space costs. Conclusions: Our study suggests that project features can help identify powerful cross-project JITDP models and improve the performance of ensemble approaches.
C1 [Zhang, Tanghaoran; Mao, Xinjun; Lu, Yao] Natl Univ Def Technol, Key Lab Software Engn Complex Syst, Changsha, Hunan, Peoples R China.
   [Yu, Yue; Wang, Huaimin] Natl Univ Def Technol, Key Lab Parallel & Distributed Comp, Changsha, Hunan, Peoples R China.
   [Li, Zhixing] Natl Univ Def Technol, Coll Comp, Changsha, Hunan, Peoples R China.
C3 National University of Defense Technology - China; National University
   of Defense Technology - China; National University of Defense Technology
   - China
RP Mao, XJ (corresponding author), Natl Univ Def Technol, Key Lab Software Engn Complex Syst, Changsha, Hunan, Peoples R China.; Yu, Y (corresponding author), Natl Univ Def Technol, Key Lab Parallel & Distributed Comp, Changsha, Hunan, Peoples R China.
EM zhangthr@nudt.edu.cn; yuyue@nudt.edu.cn; xjmao@nudt.edu.cn;
   luyao08@nudt.edu.cn; lizhixing15@nudt.edu.cn; hmwang@nudt.edu.cn
RI MAO, xinjun/GSI-8779-2022
FU National Key R&D Program of China [2020AAA0103504]; National Natural
   Science Foundation of China [61872373]; Major Key Project of PCL
FX This work is supported by National Key R&D Program of China
   (2020AAA0103504), National Natural Science Foundation of China
   (No.61872373), and the Major Key Project of PCL.
CR Aversano L., 2007, IWPSE 07 9 INT WORKS, P19
   Bettenburg Nicolas, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P124, DOI 10.1109/ICPC.2010.46
   Briand LC, 2002, IEEE T SOFTWARE ENG, V28, P706, DOI 10.1109/TSE.2002.1019484
   Cabral GG, 2019, PROC INT CONF SOFTW, P666, DOI 10.1109/ICSE.2019.00076
   Capiluppi A, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P317, DOI 10.1109/CSMR.2003.1192440
   Catolino G, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P99, DOI 10.1109/MOBILESoft.2019.00023
   Chen X, 2018, INFORM SOFTWARE TECH, V93, P1, DOI 10.1016/j.infsof.2017.08.004
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Cohen P., 2014, Applied multiple regression/correlation analysis for the behavioral sciences, DOI [DOI 10.4324/9781410606266, 10.4324/9781410606266]
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   FARRAR DE, 1967, REV ECON STAT, V49, P92, DOI 10.2307/1937887
   Fu W, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P72, DOI 10.1145/3106237.3106257
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   Guo PJ, 2010, Proceedings of the 32nd ACM/IEEE International Conference on Software Engineering, P495
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Hoang T, 2020, PROC INT CONF SOFTW, P518, DOI 10.1145/3377811.3380361
   Huang Q, 2017, PROC IEEE INT CONF S, P159, DOI 10.1109/ICSME.2017.51
   Järvelin K, 2002, ACM T INFORM SYST, V20, P422, DOI 10.1145/582415.582418
   Jiang T, 2013, IEEE INT CONF AUTOM, P279, DOI 10.1109/ASE.2013.6693087
   Jiarpakdee J, 2018, PROC IEEE INT CONF S, P92, DOI 10.1109/ICSME.2018.00018
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kawata K, 2015, 3RD INTERNATIONAL CONFERENCE ON APPLIED COMPUTING AND INFORMATION TECHNOLOGY (ACIT 2015) 2ND INTERNATIONAL CONFERENCE ON COMPUTATIONAL SCIENCE AND INTELLIGENCE (CSI 2015), P2, DOI 10.1109/ACIT-CSI.2015.104
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kock N, 2012, J ASSOC INF SYST, V13, P546, DOI 10.17705/1jais.00302
   Kondo M, 2020, EMPIR SOFTW ENG, V25, P890, DOI 10.1007/s10664-019-09736-3
   Koru AG, 2009, IEEE T SOFTWARE ENG, V35, P293, DOI 10.1109/TSE.2008.90
   Krishna R, 2016, IEEE INT CONF AUTOM, P122, DOI 10.1145/2970276.2970339
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Lewis C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P372, DOI 10.1109/ICSE.2013.6606583
   Leys C, 2013, J EXP SOC PSYCHOL, V49, P764, DOI 10.1016/j.jesp.2013.03.013
   Li WW, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106364
   Li ZX, 2022, IEEE T SOFTWARE ENG, V48, P2173, DOI 10.1109/TSE.2021.3053403
   Lin DY, 2022, IEEE T SOFTWARE ENG, V48, P2969, DOI 10.1109/TSE.2021.3073920
   Liu JP, 2017, INT SYMP EMP SOFTWAR, P11, DOI 10.1109/ESEM.2017.8
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Matsumoto S, 2010, P 6 INT C PREDICTIVE, P1, DOI DOI 10.1145/1868328.1868356
   Mende T., 2009, P 5 INT C PRED MOD S, P1
   Menzies T, 2010, AUTOMAT SOFTW ENG, V17, P375, DOI 10.1007/s10515-010-0069-5
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   Nagappan N, 2005, PROC INT CONF SOFTW, P284, DOI 10.1145/1062455.1062514
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nakagawa S, 2013, METHODS ECOL EVOL, V4, P133, DOI 10.1111/j.2041-210x.2012.00261.x
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pornprasit C, 2021, IEEE WORK CONF MIN S, P369, DOI 10.1109/MSR52588.2021.00049
   Purushothaman R, 2005, IEEE T SOFTWARE ENG, V31, P511, DOI 10.1109/TSE.2005.74
   Rahman F, 2012, Proceedings of the ACM SIGSOFT 20th International Symposium on the Foundations of Software Engineering, FSE '12, P61
   Shihab E, 2012, SER FSE 12, DOI [10.1145/2393596.2393670, DOI 10.1145/2393596.2393670]
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Tabassum S, 2020, PROC INT CONF SOFTW, P554, DOI 10.1145/3377811.3380403
   Tan M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P99, DOI 10.1109/ICSE.2015.139
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2019, IEEE T SOFTWARE ENG, V45, P683, DOI 10.1109/TSE.2018.2794977
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Thong Hoang, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P34, DOI 10.1109/MSR.2019.00016
   Tin Kam Ho, 1995, Proceedings of the Third International Conference on Document Analysis and Recognition, P278, DOI 10.1109/ICDAR.1995.598994
   Tosun A, 2009, INT SYMP EMP SOFTWAR, P478
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Yan M, 2022, IEEE T SOFTWARE ENG, V48, P82, DOI 10.1109/TSE.2020.2978819
   Yang XL, 2017, INFORM SOFTWARE TECH, V87, P206, DOI 10.1016/j.infsof.2017.03.007
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Yang YB, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P157, DOI 10.1145/2950290.2950353
   Zeng ZR, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P427, DOI 10.1145/3460319.3464819
   Zhang F., 2014, P 11 WORK C MIN SOFT, P182, DOI [10.1145/2597073.2597078, DOI 10.1145/2597073.2597078]
   Zhang F, 2013, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2013.46
   Zhang XH, 2023, IEEE T SOFTWARE ENG, V49, P849, DOI 10.1109/TSE.2022.3165056
   Zhou Z.-H., 2012, ENSEMBLE METHODS FDN, DOI DOI 10.1201/B12207
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 78
TC 3
Z9 4
U1 1
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 162
DI 10.1007/s10664-022-10185-8
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V4SY
UT WOS:000859469500006
DA 2024-07-18
ER

PT J
AU Eisty, NU
   Carver, JC
AF Eisty, Nasir U.
   Carver, Jeffrey C.
TI Testing research software: a survey
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Survey; Research software; Software engineering
ID SCIENTIFIC SOFTWARE; ENGINEERING PRACTICES
AB Background Research software plays an important role in solving real-life problems, empowering scientific innovations, and handling emergency situations. Therefore, the correctness and trustworthiness of research software are of absolute importance. Software testing is an important activity for identifying problematic code and helping to produce high-quality software. However, testing of research software is difficult due to the complexity of the underlying science, relatively unknown results from scientific algorithms, and the culture of the research software community. Aims The goal of this paper is to better understand current testing practices, identify challenges, and provide recommendations on how to improve the testing process for research software development. Method We surveyed members of the research software developer community to collect information regarding their knowledge about and use of software testing in their projects. Results We analysed 120 responses and identified that even though research software developers report they have an average level of knowledge about software testing, they still find it difficult due to the numerous challenges involved. However, there are a number of ways, such as proper training, that can improve the testing process for research software. Conclusions Testing can be challenging for any type of software. This difficulty is especially present in the development of research software, where software engineering activities are typically given less attention. To produce trustworthy results from research software, there is a need for a culture change so that testing is valued and teams devote appropriate effort to writing and executing tests.
C1 [Eisty, Nasir U.] Boise State Univ, Dept Comp Sci, Boise, ID 83725 USA.
   [Carver, Jeffrey C.] Univ Alabama, Dept Comp Sci, Tuscaloosa, AL 35487 USA.
C3 Idaho; Boise State University; University of Alabama System; University
   of Alabama Tuscaloosa
RP Eisty, NU (corresponding author), Boise State Univ, Dept Comp Sci, Boise, ID 83725 USA.
EM nasireisty@boisestate.edu; carver@cs.ua.edu
OI Carver, Jeffrey/0000-0002-7824-9151
CR Ackroyd KS, 2008, IEEE SOFTWARE, V25, P44, DOI 10.1109/MS.2008.93
   Ammann P., 2016, INTRO SOFTWARE TESTI, DOI [10.1017/9781316771273, DOI 10.1017/9781316771273]
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Carver JC, 2021, TESTING RES SOFTWARE, DOI DOI 10.6084/M9.FIGSHARE.16663561
   Clune TL, 2011, IEEE SOFTWARE, V28, P49, DOI 10.1109/MS.2011.117
   Drake JB, 2005, INT J HIGH PERFORM C, V19, P177, DOI 10.1177/1094342005056094
   Easterbrook SM, 2009, COMPUT SCI ENG, V11, P64
   Easterbrook Steve M., 2010, P WORKSH FUT SOFTW E, P99, DOI DOI 10.1145/1882362.1882383
   Eddins SL, 2009, COMPUT SCI ENG, V11, P48, DOI 10.1109/MCSE.2009.186
   Eisty NU, 2018, P IEEE INT C E-SCI, P212, DOI 10.1109/eScience.2018.00036
   Farrell PE, 2011, GEOSCI MODEL DEV, V4, P435, DOI 10.5194/gmd-4-435-2011
   Hannay JE, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING, P1, DOI 10.1109/SECSE.2009.5069155
   Heaton D, 2015, INFORM SOFTWARE TECH, V67, P207, DOI 10.1016/j.infsof.2015.07.011
   Hill C., 2016, 2016 IEEE S VISUAL L, P1, DOI DOI 10.1109/VLHCC.2016.7739651
   Hochstein L, 2008, COMPUTER, V41, P50, DOI 10.1109/MC.2008.101
   Hook D, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR COMPUTATIONAL SCIENCE AND ENGINEERING, P59, DOI 10.1109/SECSE.2009.5069163
   Kanewala U, 2014, INFORM SOFTWARE TECH, V56, P1219, DOI 10.1016/j.infsof.2014.05.006
   Katz DS, 2019, COMPUT SCI ENG, V21, P8, DOI 10.1109/MCSE.2018.2883051
   Kelly D, 2011, IEEE SOFTWARE, V28, P84, DOI 10.1109/MS.2010.88
   Kelly D, 2009, COMPUT SCI ENG, V11, P48, DOI 10.1109/MCSE.2009.139
   Kelly Diane, 2008, P 3 ANN C ASS SOFTWA, P30
   Lemos G. S., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P157, DOI 10.1109/SERE.2012.28
   Miller G, 2006, SCIENCE, V314, P1856, DOI 10.1126/science.314.5807.1856
   Murphy C, 2011, TECHNICAL REPORTS CI, DOI [10.1145/1987993.1988003, DOI 10.1145/1987993.1988003]
   Nguyen-Hoan L., 2010, P 2010 ACM IEEE INT, P1, DOI 10.1145/1852786.1852802
   Post DE, 2004, INT J HIGH PERFORM C, V18, P399, DOI 10.1177/1094342004048534
   Sanders R, 2008, IEEE SOFTWARE, V25, P21, DOI 10.1109/MS.2008.84
   Segal J, 2005, EMPIR SOFTW ENG, V10, P517, DOI 10.1007/s10664-005-3865-y
   Segal J, 2009, COMPUT SUPP COOP W J, V18, P581, DOI 10.1007/s10606-009-9096-9
   Vilkomir SA, 2008, LECT NOTES COMPUT SC, V5103, P291, DOI 10.1007/978-3-540-69389-5_34
NR 30
TC 0
Z9 0
U1 16
U2 46
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 138
DI 10.1007/s10664-022-10184-9
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3F5SW
UT WOS:000830730000002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Herbold, S
   Haar, T
AF Herbold, Steffen
   Haar, Tobias
TI Smoke testing for machine learning: simple tests to discover severe bugs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Machine learning; Classification; Software testing; Smoke testing;
   Combinatorial testing; Equivalence classes; Boundary-value analysis
AB Machine learning is nowadays a standard technique for data analysis within software applications. Software engineers need quality assurance techniques that are suitable for these new kinds of systems. Within this article, we discuss the question whether standard software testing techniques that have been part of textbooks since decades are also useful for the testing of machine learning software. Concretely, we try to determine generic and simple smoke tests that can be used to assert that basic functions can be executed without crashing. We found that we can derive such tests using techniques similar to equivalence classes and boundary value analysis. Moreover, we found that these concepts can also be applied to hyperparameters, to further improve the quality of the smoke tests. Even though our approach is almost trivial, we were able to find bugs in all three machine learning libraries that we tested and severe bugs in two of the three libraries. This demonstrates that common software testing techniques are still valid in the age of machine learning and that considerations how they can be adapted to this new context can help to find and prevent severe bugs, evenin mature machine learning libraries.
C1 [Herbold, Steffen] Tech Univ Clausthal, Inst Software & Syst Engn, Clausthal Zellerfeld, Germany.
   [Haar, Tobias] Univ Goettingen, Inst Comp Sci, Gottingen, Germany.
C3 TU Clausthal; University of Gottingen
RP Herbold, S (corresponding author), Tech Univ Clausthal, Inst Software & Syst Engn, Clausthal Zellerfeld, Germany.
EM steffen.herbold@tu-clausthal.de; tobias.haar@stud.uni-goettingen.de
OI Herbold, Steffen/0000-0001-9765-2803
FU Projekt DEAL
FX Open Access funding enabled and organized by Projekt DEAL.
CR Abadi M., 2015, TENSORFLOW LARGE SCA
   Abadi M, 2016, ACM SIGPLAN NOTICES, V51, P1, DOI [10.1145/3022670.2976746, 10.1145/2951913.2976746]
   [Anonymous], 2008, PROC INT C MACHINE L
   Baltes Sebastian, 2020, ARXIV200207764
   Bao T, 2013, ACM SIGPLAN NOTICES, V48, P817, DOI [10.1145/2509136.2509526, 10.1145/2544173.2509526]
   Ben Braiek H, 2020, J SYST SOFTWARE, V164, DOI 10.1016/j.jss.2020.110542
   Breck E., 2019, P SYSML
   Chandrasekaran J, 2017, IEEE ICST WORKSHOP, P253, DOI 10.1109/ICSTW.2017.46
   Ding JH, 2017, 2017 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON METAMORPHIC TESTING (MET 2017), P28, DOI 10.1109/MET.2017.2
   Donahue J, 2014, PR MACH LEARN RES, V32
   Dua D., 2017, UCI MACHINE LEARNING
   Frank E, 2016, The WEKA workbench. Online appendix for data mining: practical machine learning tools and techniques
   Groce A, 2014, IEEE T SOFTWARE ENG, V40, P307, DOI 10.1109/TSE.2013.59
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Huang CL, 2007, EXPERT SYST APPL, V33, P847, DOI 10.1016/j.eswa.2006.07.007
   Pham HV, 2019, PROC INT CONF SOFTW, P1027, DOI 10.1109/ICSE.2019.00107
   Krizhevsky A, 2017, COMMUN ACM, V60, P84, DOI 10.1145/3065386
   Kuhn DR, 2004, IEEE T SOFTWARE ENG, V30, P418, DOI 10.1109/TSE.2004.24
   Kuhn Max, 2023, CRAN
   Ma L, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P614, DOI [10.1109/saner.2019.8668044, 10.1109/SANER.2019.8668044]
   Maclaurin D, 2015, PR MACH LEARN RES, V37, P2113
   Murphy Christian, 2008, SEKE 2008. The 20th International Conference Proceedings on Software Engineering & Knowledge Engineering, P867
   Murphy C., 2007, P INT WORKSH RAND TE, P38
   Nakajima S, 2016, ASIA PAC SOFWR ENG, P297, DOI [10.1109/APSEC.2016.049, 10.1109/APSEC.2016.19]
   Nejadgholi Mahdi, 2019, 2019 34th IEEE/ACM International Conference on Automated Software Engineering (ASE). Proceedings, P785, DOI 10.1109/ASE.2019.00078
   Nigam K, 2005, Proceedings of the 11th ACM SIGKDD international conference on knowledge discovery in data mining, P419, DOI [10.1145/1081870.1081919, DOI 10.1145/1081870.1081919]
   Paek T, 2010, AAAI CONF ARTIF INTE, P1419
   Patton M.Q., 2017, QUALITATIVE RES EVAL
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Snoek J., 2012, 26 ANN C NEUR INF PR, P2951
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Udeshi S, 2018, IEEE INT CONF AUTOM, P98, DOI 10.1145/3238147.3238165
   Wang Z, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P788, DOI 10.1145/3368089.3409761
   Wohlin C., 2012, Experimentation in Software Engineering
   Xie XF, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1162, DOI 10.1109/ASE.2019.00127
   Xie XY, 2011, J SYST SOFTWARE, V84, P544, DOI 10.1016/j.jss.2010.11.920
   Zaharia Matei, 2010, 2 USENIX WORKSHOP HO
   Zhang J., 2019, Perturbed model validation: A new framework to validate model relevance
   Zhang JB, 2021, INT J GEOGR INF SCI, V35, P193, DOI 10.1080/13658816.2020.1726923
   Zhang Jing, 2011, Journal of Electronics (China), V28, P623, DOI 10.1007/s11767-012-0743-9
NR 42
TC 4
Z9 4
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 45
DI 10.1007/s10664-021-10073-7
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YK7WZ
UT WOS:000745419900001
OA hybrid, Green Submitted, Green Published
DA 2024-07-18
ER

PT J
AU Li, W
   Li, QG
   Ming, YL
   Dai, WJ
   Ying, S
   Yuan, MT
AF Li, Wei
   Li, Qingan
   Ming, Yunlong
   Dai, Weijiao
   Ying, Shi
   Yuan, Mengting
TI An empirical study of the effectiveness of IR-based bug localization for
   large-scale industrial projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug localization; Empirical study; Industrial projects
AB Bug localization, which refers to finding buggy files for a given bug report, is tedious and time-consuming for practical projects with tens of millions of lines of code. Recently, many information retrieval (IR)-based bug localization (IRBL) approaches have been proposed to formulate this problem as a search problem. Despite the excellent performance claimed in the literature, there is hardly any approach adopted in the industrial community to the best of our knowledge. The challenge of adapting IRBL to industrial projects is that the projects have different characteristics compared to open-source projects used in the literatures, which have not been taken into consideration in previous studies. In this paper, we re-implement six state-of-the-art IRBL techniques and evaluate their effectiveness on 10 Huawei projects consisting of 161,967 source code files and 24,437 bug reports in total. Localizing bugs in these projects faces several challenges, including the software product line, the bilingual issue, and the quality of bug reports, etc. We conduct comprehensive experiments to reveal how these factors affect IRBL effectiveness, and modify the data set to test whether some factors could be overcome, if additional information or hints are given. Based on the insights found in our work, we suggest potential improvements on IRBL techniques. This study is also expected to provide empirical evidences for other software tasks which face the same fundamental challenges.
C1 [Li, Wei; Li, Qingan; Ying, Shi; Yuan, Mengting] Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
   [Ming, Yunlong; Dai, Weijiao] Huawei Technol Co Ltd, Shenzhen, Peoples R China.
C3 Wuhan University; Huawei Technologies
RP Li, QG; Yuan, MT (corresponding author), Wuhan Univ, Sch Comp Sci, Wuhan, Peoples R China.
EM weili@whu.edu.cn; qingan@whu.edu.cn; mingyunlong@huawei.com;
   dweijiao@sina.com; yingshi@whu.edu.com; ymt@whu.edu.com
FU Natural Science Foundation of China [61872272, 61640221]; Strategic
   Priority Research Program of Chinese Academy of Science
FX This work is partially supported by Natural Science Foundation of China
   (No. 61872272, 61640221), and the Strategic Priority Research Program of
   Chinese Academy of Science (No.XDC05040100).
CR Akbar SA, 2020, IEEE WORK CONF MIN S, P21, DOI 10.1145/3379597.3387474
   Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   Lam AN, 2015, IEEE INT CONF AUTOM, P476, DOI 10.1109/ASE.2015.73
   Anh Tuan Nguyen, 2011, 2011 26th IEEE/ACM International Conference on Automated Software Engineering, P263, DOI 10.1109/ASE.2011.6100062
   [Anonymous], 2007, P 2014 WORKSH ECL TE, DOI 10.1145/1328279.1328284
   [Anonymous], 2014, P 22 INT C PROGR COM
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Chang Pi-Chuan, 2008, Proceedings of the Third Workshop on Statistical Machine Translation, P224
   Chaparro O, 2019, EMPIR SOFTW ENG, V24, P2947, DOI 10.1007/s10664-018-9672-z
   Devlin J., 2018, BERT PRE TRAINING DE
   Ekstrand Michael D., 2010, Foundations and Trends in Human-Computer Interaction, V4, P81, DOI 10.1561/1100000009
   FURNAS GW, 1987, COMMUN ACM, V30, P964, DOI 10.1145/32206.32212
   Gay G, 2009, PROC IEEE INT CONF S, P351, DOI 10.1109/ICSM.2009.5306315
   Gu XD, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P933, DOI 10.1145/3180155.3180167
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Huo X., 2016, IJCAI, P1606
   Huo X, 2017, PROCEEDINGS OF THE TWENTY-SIXTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P1909
   Jiang Y, 2015, 2015 INTERNATIONAL SYMPOSIUM ON BIOELECTRONICS AND BIOINFORMATICS (ISBB), P1, DOI 10.1109/ISBB.2015.7344908
   Joachims T, 2017, WSDM'17: PROCEEDINGS OF THE TENTH ACM INTERNATIONAL CONFERENCE ON WEB SEARCH AND DATA MINING, P781, DOI 10.1145/3018661.3018699
   Kim D, 2013, IEEE T SOFTWARE ENG, V39, P1597, DOI 10.1109/TSE.2013.24
   Kim S, 2007, PROC INT CONF SOFTW, P489
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Le TDB, 2017, EMPIR SOFTW ENG, V22, P2237, DOI 10.1007/s10664-016-9484-y
   Le TDB, 2014, PROC INT SYMP SOFTW, P335, DOI 10.1109/ISSRE.2014.39
   Lee J, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P61, DOI 10.1145/3213846.3213856
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Mills C, 2020, EMPIR SOFTW ENG, V25, P3086, DOI 10.1007/s10664-020-09823-w
   Mills C, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3078841
   Mills C, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS TRACK (ICSE-NIER), P51, DOI 10.1109/ICSE-NIER.2017.14
   Murali Vijayaraghavan, 2020, P 42 INT C SOFTWARE
   Oard DW, 1998, ANNU REV INFORM SCI, V33, P223
   Paul Clements e Linda Northrop., 2002, Software Product Lines: Practices and Patterns
   Pingclasai N, 2013, ASIA PAC SOFWR ENG, P13, DOI 10.1109/APSEC.2013.105
   Poshyvanyk D, 2007, IEEE T SOFTWARE ENG, V33, P420, DOI [10.1109/TSE.2007.1016, 10.1109/TSE.2007.1016.]
   Qin HM, 2018, INTERNETWARE'18: PROCEEDINGS OF THE TENTH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE, DOI 10.1145/3275219.3275239
   Rahman MM, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P621, DOI 10.1145/3236024.3236065
   Rahman MM, 2018, PROC IEEE ACM INT C, P348, DOI 10.1145/3183440.3195003
   Rao S., 2011, P 8 WORK C MIN SOFTW, P43
   Saha RK, 2014, PROC IEEE INT CONF S, P161, DOI 10.1109/ICSME.2014.38
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Sanderson M, 2010, NAT LANG ENG, V16, P100, DOI 10.1017/S1351324909005129
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Sisman B., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P50, DOI 10.1109/MSR.2012.6224299
   Wan Y, 2018, IEEE INT CONF AUTOM, P397, DOI 10.1145/3238147.3238206
   Wen M, 2016, IEEE INT CONF AUTOM, P262, DOI 10.1145/2970276.2970359
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Ye X, 2016, PROC INT CONF SOFTW, P404, DOI 10.1145/2884781.2884862
   Ye X, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P689, DOI 10.1145/2635868.2635874
   Youm KC, 2015, ASIA PAC SOFWR ENG, P190, DOI 10.1109/APSEC.2015.23
   Zhang HY, 2009, PROC IEEE INT CONF S, P274, DOI 10.1109/ICSM.2009.5306304
   Zhao L, 2012, SIGIR 2012: PROCEEDINGS OF THE 35TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P515, DOI 10.1145/2348283.2348354
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 58
TC 3
Z9 3
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 47
DI 10.1007/s10664-021-10082-6
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YQ3KY
UT WOS:000749212400001
DA 2024-07-18
ER

PT J
AU Strode, D
   Dingsoyr, T
   Lindsjorn, Y
AF Strode, Diane
   Dingsoyr, Torgeir
   Lindsjorn, Yngve
TI A teamwork effectiveness model for agile software development
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Agile leadership; Agile methods; Agile teamwork model; Agile teams; Big
   five model of teamwork; Mutual performance monitoring; Peer feedback;
   Redundancy; Scrum teams; Teamwork model; Teamwork theory
ID SHARED MENTAL MODELS; SERVANT LEADERSHIP; GROUP COHESIVENESS; TEAMS;
   PERFORMANCE; MANAGEMENT; SUCCESS; PRODUCTIVITY; CHALLENGES; QUALITY
AB Teamwork is crucial in software development, particularly in agile development teams which are cross-functional and where team members work intensively together to develop a cohesive software solution. Effective teamwork is not easy; prior studies indicate challenges with communication, learning, prioritization, and leadership. Nevertheless, there is much advice available for teams, from agile methods, practitioner literature, and general studies on teamwork to a growing body of empirical studies on teamwork in the specific context of agile software development. This article presents the agile teamwork effectiveness model (ATEM) for colocated agile development teams. The model is based on evidence from focus groups, case studies, and multi-vocal literature and is a revision of a general team effectiveness model. Our model of agile teamwork effectiveness is composed of shared leadership, team orientation, redundancy, adaptability, and peer feedback. Coordinating mechanisms are needed to facilitate these components. The coordinating mechanisms are shared mental models, communication, and mutual trust. We critically examine the model and discuss extensions for very small, multi-team, distributed, and safety-critical development contexts. The model is intended for researchers, team members, coaches, and leaders in the agile community.
C1 [Strode, Diane] Whitireia Polytech, Sch Informat Technol, Wellington, New Zealand.
   [Dingsoyr, Torgeir] Norwegian Univ Sci & Technol, Dept Comp Sci, NO-7491 Trondheim, Norway.
   [Dingsoyr, Torgeir] SimulaMet, Dept IT Management, POB 134, N-1325 Lysaker, Norway.
   [Lindsjorn, Yngve] Univ Oslo, Dept Informat, Oslo, Norway.
C3 Whitireia Community Polytechnic; Norwegian University of Science &
   Technology (NTNU); University of Oslo
RP Strode, D (corresponding author), Whitireia Polytech, Sch Informat Technol, Wellington, New Zealand.
EM diane.strode@whitireia.ac.nz; torgeir.dingsoyr@ntnu.no;
   ynglin@ifi.uio.no
RI ; Dingsoyr, Torgeir/J-5862-2012
OI Strode, Diane/0000-0002-8419-592X; Dingsoyr, Torgeir/0000-0003-0725-345X
FU project Agile 2.0 - Research Council of Norway [236759]; DNV GL;
   Equinor; Kantega; Kongsberg Defence Aerospace; Sopra Steria; Sticos
FX This work was partially supported by the project Agile 2.0 supported by
   the Research Council of Norway through grant 236759 and by the companies
   DNV GL, Equinor, Kantega, Kongsberg Defence & Aerospace, Sopra Steria
   and Sticos.
CR Ågerfalk P, 2006, COMMUN ACM, V49, P11
   [Anonymous], 2002, Agile software development
   [Anonymous], 2001, BEH MARK WORKSH
   [Anonymous], 2005, Extreme programming explained: Embrace change
   Baham C, 2022, INFORM SYST J, V32, P103, DOI 10.1111/isj.12336
   Beck K., 2000, EXTREME PROGRAMMING
   Bjornson FO., 2018, AGILE PROCESSES SOFT
   Burke CS, 2007, LEADERSHIP QUART, V18, P606, DOI 10.1016/j.leaqua.2007.09.006
   Burke CS, 2006, J APPL PSYCHOL, V91, P1189, DOI 10.1037/0021-9010.91.6.1189
   CANNONBOWERS JA, 1993, INDIVIDUAL AND GROUP DECISION MAKING, P221
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Cohn Mike., 2004, User Stories Applied: For Agile Software Development
   Coman ID, 2014, J SYST SOFTWARE, V91, P124, DOI 10.1016/j.jss.2013.12.037
   Costigan R.D., 1998, J MANAGERIAL ISSUES, V10, P303, DOI DOI 10.2307/40604201
   Crawford ER, 2013, ACAD MANAGE REV, V38, P32, DOI 10.5465/amr.2011.0206
   DeFranco JF, 2018, TEAM PERFORM MANAG, V24, P203, DOI 10.1108/TPM-08-2017-0040
   Dietz AS., 2015, P HUM FACT ERG SOC A
   Dingsoyr T, 2018, EMPIR SOFTW ENG, V23, P490, DOI 10.1007/s10664-017-9524-2
   Dingsoyr T, 2016, IEEE SOFTWARE, V33, P106, DOI 10.1109/MS.2016.100
   Dingsoyr T, 2013, LECT NOTES BUS INF P, V149, P46
   Drury-Grogan ML, 2014, INFORM SOFTWARE TECH, V56, P506, DOI 10.1016/j.infsof.2013.11.003
   Duhigg C., 2016, New York Times
   Edmondson A.C., 2004, Trust and distrust in organizations: Dilemmas and approaches, P239, DOI DOI 10.2307/2666999
   Eisenhardt KM, 2007, ACAD MANAGE J, V50, P25, DOI 10.5465/AMJ.2007.24160888
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fagerholm F, 2015, INFORM SOFTWARE TECH, V64, P132, DOI 10.1016/j.infsof.2015.01.010
   Firth BM, 2015, ACAD MANAGE J, V58, P813, DOI 10.5465/amj.2013.0216
   Fitzgerald B, 2017, J SYST SOFTWARE, V123, P176, DOI 10.1016/j.jss.2015.06.063
   Flin R, 2001, INT J AVIAT PSYCHOL, V11, P95, DOI 10.1207/S15327108IJAP1101_6
   Garousi V, 2019, INFORM SOFTWARE TECH, V106, P101, DOI 10.1016/j.infsof.2018.09.006
   Gatfield D., 2008, BEHAV MARKERS ASSESS
   Grass A, 2020, J PROD INNOVAT MANAG, V37, P324, DOI 10.1111/jpim.12525
   Greenleaf R.K., 2003, The servant-leader within: A transformative path
   Gregor S, 2006, MIS QUART, V30, P611
   Gren L, 2017, J SYST SOFTWARE, V124, P104, DOI 10.1016/j.jss.2016.11.024
   Hannay JE, 2009, INFORM SOFTWARE TECH, V51, P1110, DOI 10.1016/j.infsof.2009.02.001
   Hennel P, 2021, PROJ MANAG J, V52, P11, DOI 10.1177/8756972820933057
   Hoda R, 2016, J SYST SOFTWARE, V117, P245, DOI 10.1016/j.jss.2016.02.049
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Hoegl M, 2001, ORGAN SCI, V12, P435, DOI 10.1287/orsc.12.4.435.10635
   Hollenbeck JR, 2012, ACAD MANAGE REV, V37, P82, DOI 10.5465/amr.2010.0181
   Holtzhausen N, 2018, LEADERSHIP ORG DEV J, V39, P873, DOI 10.1108/LODJ-05-2018-0193
   Hsieh HF, 2005, QUAL HEALTH RES, V15, P1277, DOI 10.1177/1049732305276687
   Iivari J, 2011, INFORM SOFTWARE TECH, V53, P509, DOI 10.1016/j.infsof.2010.10.008
   Janz BD, 1999, INFORM MANAGE-AMSTER, V35, P171, DOI 10.1016/S0378-7206(98)00088-3
   Kang HR, 2006, HUM RELAT, V59, P1681, DOI 10.1177/0018726706072891
   Kasauli R, 2018, EUROMICRO CONF PROC, P470, DOI 10.1109/SEAA.2018.00082
   Katzenbach JR, 2005, HARVARD BUS REV, V83, P162
   Keutel M, 2014, EUR J INFORM SYST, V23, P256, DOI 10.1057/ejis.2013.26
   KNIBERG Henrik., 2011, Lean from the Trenches, Managing Large-Scale Projects with Kanban, s/l
   Kozlowski S.W., 2012, HDB PSYCHOL, V12
   Kude T, 2019, INFORM SYST RES, V30, P1145, DOI 10.1287/isre.2019.0856
   Kuthyola KF, 2017, LECT NOTES BUS INF P, V288, P135, DOI 10.1007/978-3-319-59336-4_10
   LaToza T. D., 2006, 28th International Conference on Software Engineering Proceedings, P492, DOI 10.1145/1134285.1134355
   Lehtinen TOA, 2017, EMPIR SOFTW ENG, V22, P2409, DOI 10.1007/s10664-016-9464-2
   Levesque LL, 2001, J ORGAN BEHAV, V22, P135, DOI 10.1002/job.87
   Lindsjorn Y., 2018, AGILE PROCESSES SOFT
   Lindsjorn Y, 2016, J SYST SOFTWARE, V122, P274, DOI 10.1016/j.jss.2016.09.028
   Lu YB, 2011, COMPUT HUM BEHAV, V27, P811, DOI 10.1016/j.chb.2010.11.006
   Marks MA, 2005, J APPL PSYCHOL, V90, P964, DOI 10.1037/0021-9010.90.5.964
   Mathieu J, 2008, J MANAGE, V34, P410, DOI 10.1177/0149206308316061
   Mayring P., 2004, Qualitative content analysis: theoretical foundation, basic procedures and software solution, V1, P159
   McGrath J.E., 1964, Social psychology: A brief introduction
   Melo CD, 2013, INFORM SOFTWARE TECH, V55, P412, DOI 10.1016/j.infsof.2012.09.004
   Moe NB, 2007, LECT NOTES COMPUTER
   Moe NB, 2009, 42 HAW INT C SYST SC
   Moe NB., 2008, LECT NOTES BUSINESS
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Moe NB, 2009, IEEE SOFTWARE, V26, P20, DOI 10.1109/MS.2009.182
   MUDRACK PE, 1989, SMALL GROUP BEHAV, V20, P37, DOI 10.1177/104649648902000103
   MULLEN B, 1994, PSYCHOL BULL, V115, P210, DOI 10.1037/0033-2909.115.2.210
   Overeem B, 2016, CHARACTERISTICS GREA
   Pare G., 2004, COMMUN ASSOC INF SYS, V13, P233
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Poth A, 2020, LECT NOTES BUS INF P, V396, P101, DOI 10.1007/978-3-030-58858-8_11
   Project Management Institute and Agile Alliance, 2017, AG PRACT GUID
   Rodríguez D, 2012, J SYST SOFTWARE, V85, P562, DOI 10.1016/j.jss.2011.09.009
   Rozovsky J., 2015, 5 KEYS SUCCESSFUL GO
   Salas E, 2005, SMALL GR RES, V36, P555, DOI 10.1177/1046496405277134
   Salas E, 2015, HUM RESOUR MANAGE-US, V54, P599, DOI 10.1002/hrm.21628
   Salo O, 2004, LECT NOTES COMPUT SC, V3092, P184
   Schmidt C, 2016, PROGR IS
   Schmidt C., 2014, ICIS 2014 P
   Schmitz K, 2019, IEEE SOFTWARE, V36, P32, DOI 10.1109/MS.2018.290100623
   Schwaber K., 2002, AGILE SOFTWARE DEV S
   Schwaber KenJeff Sutherland., 2017, The Scrum Guide
   Sharp H, 2006, LECT NOTES COMPUT SC, V4044, P1
   Sharp H, 2010, AGILE SOFTWARE DEVELOPMENT: CURRENT RESEARCH AND FUTURE DIRECTIONS, P61, DOI 10.1007/978-3-642-12575-1_4
   Shastri Y, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-020-09899-4
   Shuffler ML, 2014, RES MANAG GROUP TEAM, V16, P3, DOI 10.1108/S1534-085620140000016001
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Skelton M., 2019, Team Topologies: Organizing Business and Technology Teams for Fast Flow
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Sommerville Ian, 2016, Software engineering 8
   Stewart D.W., 2007, FOCUS GROUPS, V2nd
   Stray V, 2018, 19TH INTERNATIONAL CONFERENCE ON AGILE SOFTWARE DEVELOPMENT (XP '18), DOI 10.1145/3234152.3234182
   Stray V, 2016, J SYST SOFTWARE, V114, P101, DOI 10.1016/j.jss.2016.01.004
   Stray VG, 2011, LECT NOTES BUS INF P, V77, P146
   Strode D, 2015, P 26 AUSTR C INF SYS
   Strode DE, 2016, INFORM SYST FRONT, V18, P23, DOI 10.1007/s10796-015-9574-1
   Strong DR, 2009, ECOLOGY, V90, P1, DOI 10.1890/0012-9658-90.1.1
   Sutherland J., 2020, The Scrum Guide, the Definitive Guide to Scrum:The Rules of the Game
   Syed-Abdullah S, 2006, EMPIR SOFTW ENG, V11, P143, DOI 10.1007/s10664-006-5968-5
   TAKEUCHI H, 1986, HARVARD BUS REV, V64, P137
   Tiwana A, 2004, INFORM SOFTWARE TECH, V46, P899, DOI 10.1016/j.infsof.2004.03.006
   van Dierendonck D, 2011, J MANAGE, V37, P1228, DOI 10.1177/0149206310380462
   Williams L, 2003, COMPUTER, V36, P39, DOI 10.1109/MC.2003.1204373
   Williams L, 2012, COMMUN ACM, V55, P71, DOI 10.1145/2133806.2133823
   Yang Q, 2019, ACM T INTEL SYST TEC, V10, DOI 10.1145/3298981
   Yin R. K., 2009, CASE STUDY RES DESIG, V4th ed.
   Yu XD, 2014, INFORM SOFTWARE TECH, V56, P911, DOI 10.1016/j.infsof.2014.02.010
NR 111
TC 20
Z9 24
U1 27
U2 104
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 56
DI 10.1007/s10664-021-10115-0
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA ZQ6KU
UT WOS:000767212400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Tahir, A
   Bennin, KE
   Xiao, X
   MacDonell, SG
AF Tahir, Amjed
   Bennin, Kwabena E.
   Xiao, Xun
   MacDonell, Stephen G.
TI Does class size matter? An in-depth assessment of the effect of class
   size in software defect prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Defect prediction; Class size; Metrics; Software quality
ID ORIENTED DESIGN METRICS; EMPIRICAL VALIDATION; VALIDITY; CODE;
   MEDIATION; FAILURES; QUALITY
AB In the past 20 years, defect prediction studies have generally acknowledged the effect of class size on software prediction performance. To quantify the relationship between object-oriented (OO) metrics and defects, modelling has to take into account the direct, and potentially indirect, effects of class size on defects. However, some studies have shown that size cannot be simply controlled or ignored, when building prediction models. As such, there remains a question whether, and when, to control for class size. This study provides a new in-depth examination of the impact of class size on the relationship between OO metrics and software defects or defect-proneness. We assess the impact of class size on the number of defects and defect-proneness in software systems by employing a regression-based mediation (with bootstrapping) and moderation analysis to investigate the direct and indirect effect of class size in count and binary defect prediction. Our results show that the size effect is not always significant for all metrics. Of the seven OO metrics we investigated, size consistently has significant mediation impact only on the relationship between Coupling Between Objects (CBO) and defects/defect-proneness, and a potential moderation impact on the relationship between Fan-out and defects/defect-proneness. Other metrics show mixed results, in that they are significant for some systems but not for others. Based on our results we make three recommendations. One, we encourage researchers and practitioners to examine the impact of class size for the specific data they have in hand and through the use of the proposed statistical mediation/moderation procedures. Two, we encourage empirical studies to investigate the indirect effect of possible additional variables in their models when relevant. Three, the statistical procedures adopted in this study could be used in other empirical software engineering research to investigate the influence of potential mediators/moderators.
C1 [Tahir, Amjed; Xiao, Xun] Massey Univ, Software Engn, Palmerston North, New Zealand.
   [Bennin, Kwabena E.] Wageningen Univ & Res, Informat Technol Grp, Wageningen, Netherlands.
   [Xiao, Xun] Massey Univ, Sch Fundamental Sci, Palmerston North, New Zealand.
   [MacDonell, Stephen G.] Auckland Univ Technol, Software Engn, Auckland, New Zealand.
   [MacDonell, Stephen G.] Univ Otago, Informat Sci, Dunedin, New Zealand.
C3 Massey University; Wageningen University & Research; Massey University;
   Auckland University of Technology; University of Otago
RP Tahir, A (corresponding author), Massey Univ, Software Engn, Palmerston North, New Zealand.
EM a.tahir@massey.ac.nz; kwabena.bennin@wur.nl; x.xiao@massey.ac.nz;
   stephen.macdonell@otago.ac.nz
RI Xiao, Xun/HJP-1274-2023
OI Tahir, Amjed/0000-0001-9454-1366
CR [Anonymous], 2016, EMPIR SOFTW ENG, DOI DOI 10.1007/S10664-014-9354-4
   [Anonymous], 2006, ISESE '06: Proceedings of the 5th International Symposium on Empirical Software Engineering. Volume II: Short Papers and Posters, DOI DOI 10.1145/1159733.1159739.
   BARON RM, 1986, J PERS SOC PSYCHOL, V51, P1173, DOI 10.1037/0022-3514.51.6.1173
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Basili VR, 1996, COMMUN ACM, V39, P104, DOI 10.1145/236156.236184
   Bennett K., 2018, Encyclopedia of personality and individual differences, P1, DOI [10.1007/978-3-319-28099-81627-1, DOI 10.1007/978-3-319-28099-81627-1]
   Bennin KE, 2018, IEEE T SOFTW ENG, V44
   Binkley AB, 1998, PROC INT CONF SOFTW, P452, DOI 10.1109/ICSE.1998.671604
   Bolin JH, 2014, J EDUC MEAS, V51, P335, DOI 10.1111/jedm.12050
   Bollen K.A., 1990, Sociol. Methodol, V20, P115, DOI [10.2307/271084, DOI 10.2307/271084]
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Evanco WM, 2003, IEEE T SOFTWARE ENG, V29, P670, DOI 10.1109/TSE.2003.1214331
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Fritz MS, 2007, PSYCHOL SCI, V18, P233, DOI 10.1111/j.1467-9280.2007.01882.x
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gil Y, 2017, EMPIR SOFTW ENG, V22, P2585, DOI 10.1007/s10664-017-9513-5
   Gyimóthy T, 2005, IEEE T SOFTWARE ENG, V31, P897, DOI 10.1109/TSE.2005.112
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Harrison R, 1998, FIFTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM - METRICS 1998, PROCEEDINGS, P150, DOI 10.1109/METRIC.1998.731240
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hayakawa T, 2021, IEICE T INF SYST, VE104D, P327, DOI 10.1587/transinf.2020EDL8098
   Hayes AF, 2009, COMMUN MONOGR, V76, P408, DOI 10.1080/03637750903310360
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herraiz I., 2010, Making Software: What Really Works, and Why We Believe It, P125
   Johnson PE, 2012, ROCKCHALK REGRESSION
   Jureczko M., 2010, P 6 INT C PREDICTIVE
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Lee SY, 2004, MULTIVAR BEHAV RES, V39, P37, DOI 10.1207/s15327906mbr3901_2
   MacKinnon DP, 2002, PSYCHOL METHODS, V7, P83, DOI 10.1037/1082-989X.7.1.83
   McNamee R, 2005, OCCUP ENVIRON MED, V62, P500, DOI 10.1136/oem.2002.001115
   Mei-Huei Tang, 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P242, DOI 10.1109/METRIC.1999.809745
   Mende T., 2009, P 5 INT C PRED MOD S, P1
   Menzies T., 2020, ARXIV200809569
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Osman H, 2018, ARXIV180704486
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Preacher KJ, 2008, BEHAV RES METHODS, V40, P879, DOI 10.3758/BRM.40.3.879
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Sobel M.E., 1982, SOCIOLOGICAL METHODO, P290, DOI DOI 10.2307/270723
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Tahir A., 2021, DOES CLASS SIZE MATT
   Tahir A, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239243
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tingley D, 2014, J STAT SOFTW, V59
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Ying ATT, 2004, IEEE T SOFTWARE ENG, V30, P574, DOI 10.1109/TSE.2004.52
   Zhang HY, 2009, PROC IEEE INT CONF S, P274, DOI 10.1109/ICSM.2009.5306304
   Zhou YM, 2006, IEEE T SOFTWARE ENG, V32, P771, DOI 10.1109/TSE.2006.102
   Zhou YM, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2556777
   Zimmermann T., 2007, P ICSE 2007 WORK 3 I, DOI [10.1109/PROMISE.2007.10, DOI 10.1109/PROMISE.2007.10]
   Zimmermann T., 2008, PREDICTING BUGS HIST, P69, DOI [10.1007/978-3-540-76440-3_4, DOI 10.1007/978-3-540-76440-3_4]
NR 57
TC 4
Z9 5
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 106
DI 10.1007/s10664-021-09991-3
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA UJ9JA
UT WOS:000691592800003
DA 2024-07-18
ER

PT J
AU Oliva, GA
   Hassan, AE
   Jiang, ZM
AF Oliva, Gustavo A.
   Hassan, Ahmed E.
   Jiang, Zhen Ming (Jack)
TI An exploratory study of smart contracts in the Ethereum blockchain
   platform
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Smart contracts; Ethereum; Blockchain
AB Ethereum is a blockchain platform that supports smart contracts. Smart contracts are pieces of code that perform general-purpose computations. For instance, smart contracts have been used to implement crowdfunding initiatives that raised a total of US$6.2 billion from January to June of 2018. In this paper, we conduct an exploratory study of smart contracts. Differently from prior studies that focused on particular aspects of a subset of smart contracts, our goal is to have a broader understanding of all contracts that are currently deployed in Ethereum. In particular, we elucidate how frequently used the contracts are (activity level), what they do (category), and how complex they are (source code complexity). To conduct this study, we mined and cross-linked data from four sources: Ethereum dataset on the Google BigQuery platform, Etherscan, State of the DApps, and CoinMarketCap. Our study period runs from July 2015 (inception of Ethereum) until September 2018. With regards to activity level, we notice that it is concentrated on a very small subset of the contracts. More specifically, only 0.05% of the smart contracts are the target of 80% of the transactions that are sent to contracts. New solutions to cope with Ethereum's limited scalability should take such an activity imbalance into consideration. With regards to categories, we highlight that the new and widely advertised rich programming model of smart contracts is currently being used to develop very simple applications that tend to be token-centric (e.g., ICOs, Crowdsales, etc). Finally, with regards to code complexity, we observe that the source code of high-activity verified contracts is small, with at most 211 instructions in 80% of the cases. These contracts also commonly include at least two subcontracts and libraries in their source code. The comment ratio of these contracts is also significantly higher than that of GitHub top-starred projects written in Java, C++, and C#. Hence, the source code of high-activity verified smart contracts exhibit particular complexity characteristics compared to other popular programming languages. Further studies are necessary to uncover the actual reasons behind such differences. Finally, based on our findings, we propose an open research agenda to drive and foster future studies in the area.
C1 [Oliva, Gustavo A.; Hassan, Ahmed E.] Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
   [Jiang, Zhen Ming (Jack)] York Univ, Dept Elect Engn, Comp Sci, Toronto, ON, Canada.
C3 Queens University - Canada; York University - Canada
RP Oliva, GA (corresponding author), Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
EM gustavo@cs.queensu.ca; ahmed@cs.queensu.ca; zmjiang@cse.yorku.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572
CR [Anonymous], 2017, UNDERSTANDING ETHERE
   [Anonymous], LAYER 1 SHOULD BE IN
   [Anonymous], 2017, CRYPTOKITTIES CRAZE
   [Anonymous], 2018, 25 ANN NETW DISTR SY
   [Anonymous], 2018, 5 BLOCKCHAIN PRODUCT
   [Anonymous], ITS NOT JUST PONZI I
   [Anonymous], 1995, STRAIGHTFORWARD STAT
   [Anonymous], 2018, 35 AMAZING REAL WORL
   [Anonymous], 1 ICO UNICORNS HERE
   [Anonymous], 2017, ARXIV170303779
   [Anonymous], ETHEREUM CRYPTOKITTI
   [Anonymous], 2018, TECHNOLOGY Q
   Bartoletti Massimo, 2017, Financial Cryptography and Data Security. FC 2017 International Workshops WAHC, BITCOIN, VOTING, WTSC, and TA. Revised Selected Papers: LNCS 10323, P494, DOI 10.1007/978-3-319-70278-0_31
   Chen WL, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P1409, DOI 10.1145/3178876.3186046
   Fröwis M, 2017, LECT NOTES COMPUT SC, V10436, P357, DOI 10.1007/978-3-319-67816-0_20
   Grech N, 2019, PROC INT CONF SOFTW, P1176, DOI 10.1109/ICSE.2019.00120
   Grishchenko I, 2018, LECT NOTES COMPUT SC, V10981, P51, DOI 10.1007/978-3-319-96145-3_4
   Gudgeon L., 2019, IACR Cryptol, ePrint Arch., V2019, P360
   Jakobsson M, 1999, INT FED INFO PROC, V23, P258
   JENKS GF, 1971, ANN ASSOC AM GEOGR, V61, P217, DOI 10.1111/j.1467-8306.1971.tb00779.x
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Richmond F., 2018, Exposing blockchain: An inside look at the technology behind smart contracts, cryptocurrency wallets, cryptocurrency mining, bitcoin, and other digital coins (Ethereum, Litecoin, Ripple, and more)
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Sorkin A.R., 2010, Too Big to Fail: The Inside Story of How Wall Street and Washington Fought to Save the Financial System-and Themselves
   Swan Melanie, 2015, BLOCKCHAIN BLUEPRINT
   Szabo N., 1994, SMART CONTRACTS
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   Tonelli R., 2018, ARXIV180201517
   Wan ZY, 2017, IEEE WORK CONF MIN S, P413, DOI 10.1109/MSR.2017.59
   Wood Gavin., 2017, Ethereum Project Yellow Paper 151
   Zheng PL, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P134, DOI 10.1145/3183519.3183546
NR 33
TC 85
Z9 89
U1 2
U2 30
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2020
VL 25
IS 3
SI SI
BP 1864
EP 1904
DI 10.1007/s10664-019-09796-5
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LL7FD
UT WOS:000531720100005
OA Bronze
DA 2024-07-18
ER

PT J
AU Ahasanuzzaman, M
   Asaduzzaman, M
   Roy, CK
   Schneider, KA
AF Ahasanuzzaman, Md
   Asaduzzaman, Muhammad
   Roy, Chanchal K.
   Schneider, Kevin A.
TI CAPS: a supervised technique for classifying Stack Overflow posts
   concerning API issues
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE API issue; Unstructured data mining; Text classification; Feature
   extraction; Stack Overflow
AB The design and maintenance of APIs (Application Programming Interfaces) are complex tasks due to the constantly changing requirements of their users. Despite the efforts of their designers, APIs may suffer from a number of issues (such as incomplete or erroneous documentation, poor performance, and backward incompatibility). To maintain a healthy client base, API designers must learn these issues to fix them. Question answering sites, such as Stack Overflow (SO), have become a popular place for discussing API issues. These posts about API issues are invaluable to API designers, not only because they can help to learn more about the problem but also because they can facilitate learning the requirements of API users. However, the unstructured nature of posts and the abundance of non-issue posts make the task of detecting SO posts concerning API issues difficult and challenging. In this paper, we first develop a supervised learning approach using a Conditional Random Field (CRF), a statistical modeling method, to identify API issue-related sentences. We use the above information together with different features collected from posts, the experience of users, readability metrics and centrality measures of collaboration network to build a technique, called CAPS, that can classify SO posts concerning API issues. In total, we consider 34 features along eight different dimensions. Evaluation of CAPS using carefully curated SO posts on three popular API types reveals that the technique outperforms all three baseline approaches we consider in this study. We then conduct studies to find important features and also evaluate the performance of the CRF-based technique for classifying issue sentences. Comparison with two other baseline approaches shows that the technique has high potential. We also test the generalizability of CAPS results, evaluate the effectiveness of different classifiers, and identify the impact of different feature sets.
C1 [Ahasanuzzaman, Md; Asaduzzaman, Muhammad] Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
   [Roy, Chanchal K.; Schneider, Kevin A.] Univ Saskatchewan, Dept Comp Sci, Saskatoon, SK, Canada.
C3 Queens University - Canada; University of Saskatchewan
RP Ahasanuzzaman, M (corresponding author), Queens Univ, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
EM md.ahasanuzzaman@queensu.ca; muhammad.asaduzzaman@queensu.ca;
   chanchal.roy@usask.ca; kevin.schneider@usask.ca
RI Schneider, Kevin/KQV-5113-2024
OI Schneider, Kevin/0000-0003-1113-1754; Ahasanuzzaman,
   Md/0000-0002-3709-2741
CR Aggarwal K., 2017, Journal of Software: Evolution and Process, V29, pe1821, DOI DOI 10.1002/SMR.1821
   Ahasanuzzaman M, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P244, DOI 10.1109/SANER.2018.8330213
   Ahmed T, 2017, IEEE INT CONF AUTOM, P106, DOI 10.1109/ASE.2017.8115623
   ALLISON P.D., 2012, STAT HORIZONS, V2nd
   [Anonymous], 2010, LREC 10
   [Anonymous], 2004, P INFORM RETRIEVAL Q
   Asaduzzaman M, 2013, IEEE WORK CONF MIN S, P97, DOI 10.1109/MSR.2013.6624015
   Bacchelli A., 2012, 2012 Third International Workshop on Recommendation Systems for Software Engineering (RSSE), P26, DOI 10.1109/RSSE.2012.6233404
   Bacchelli A, 2012, PROC INT CONF SOFTW, P375, DOI 10.1109/ICSE.2012.6227177
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Baltadzhieva A., 2015, P INT C RECENT ADV N, P32
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bazelli B, 2013, PROC IEEE INT CONF S, P460, DOI 10.1109/ICSM.2013.72
   Benjamini Y, 2001, ANN STAT, V29, P1165
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Bonacich P, 2001, SOC NETWORKS, V23, P191, DOI 10.1016/S0378-8733(01)00038-7
   Calefato F, 2018, EMPIR SOFTW ENG, V23, P1352, DOI 10.1007/s10664-017-9546-9
   Chen CY, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P338, DOI 10.1109/SANER.2016.21
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   COLEMAN M, 1975, J APPL PSYCHOL, V60, P283, DOI 10.1037/h0076540
   Correa D., 2013, P 1 ACM C ONLINE SOC, P201, DOI DOI 10.1145/2512938.2512954
   Correa D, 2014, WWW'14: PROCEEDINGS OF THE 23RD INTERNATIONAL CONFERENCE ON WORLD WIDE WEB, P631, DOI 10.1145/2566486.2568036
   Ding S., 2008, P ACL 08 HLT, P710
   Fan Y, 2019, INT J NEUROSCI, V129, P30, DOI 10.1080/00207454.2018.1492575
   Fishburne Jr RP, 1975, TECHNICAL REPORT
   Flesch R, 1948, J APPL PSYCHOL, V32, P221, DOI 10.1037/h0057532
   Garcia D, 2014, P INT C CLOUD GREEN, P410
   Grant S, 2010, IEEE INT WORK C SO, P65, DOI 10.1109/SCAM.2010.22
   Gunning R, 1952, TECHNIQUE CLEAR WRIT
   Guzman E., 2014, Association for Computing Machinery, P352
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hanrahan BV, 2012, P ACM 2012 C COMP SU, P91, DOI DOI 10.1145/2141512.2141550
   Hou D, 2011, CONF PROC INT SYMP C, P91, DOI 10.1109/ICPC.2011.21
   Islam MR, 2017, IEEE WORK CONF MIN S, P203, DOI 10.1109/MSR.2017.9
   Jongeling R, 2017, EMPIR SOFTW ENG, V22, P2543, DOI 10.1007/s10664-016-9493-x
   Linares-Vasquez M, 2014, P 22 INT C PROGR C, P83
   Manning CD, 2014, PROCEEDINGS OF 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: SYSTEM DEMONSTRATIONS, P55, DOI 10.3115/v1/p14-5010
   McCallum A.K., 2002, MALLET MACHINE LEARN
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   MCLAUGHLIN GH, 1969, J READING, V12, P639
   Neuhauser M., 2011, International Encyclopedia of Statistical Science, DOI DOI 10.1007/978-3-642-04898-2615
   Novielli N, 2018, IEEE WORK CONF MIN S, P364, DOI 10.1145/3196398.3196403
   Novielli N, 2015, 7TH INTERNATIONAL WORKSHOP ON SOCIAL SOFTWARE ENGINEERING (SSE 2015), P33, DOI 10.1145/2804381.2804387
   Ortu M, 2015, LECT NOTES BUS INF P, V212, P129, DOI 10.1007/978-3-319-18612-2_11
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Petrosyan G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P869, DOI 10.1109/ICSE.2015.97
   Pletea D., 2014, 11 WORKING C MSR, P348, DOI [10.1145/2597073.2597117, DOI 10.1145/2597073.2597117]
   Ponzanelli L, 2014, PROC IEEE INT CONF S, P541, DOI 10.1109/ICSME.2014.90
   Ponzanelli Luca, 2014, P 11 WORKING C MININ, P102, DOI DOI 10.1145/2597073.2597077
   Raghavan P, 2010, P 16 INT C MAN DAT C, P77
   Robbes R., 2012, P ACM SIGSOFT 20 INT
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Sandor A, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16 COMPANION), P685, DOI 10.1145/2872518.2890568
   Silfverberg M, 2014, PROCEEDINGS OF THE 52ND ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 2, P259
   Sinha V, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P520, DOI [10.1109/MSR.2016.069, 10.1145/2901739.2903501]
   Sutton C, 2012, FOUND TRENDS MACH LE, V4, P267, DOI 10.1561/2200000013
   Toutanova K, 2003, HLT-NAACL 2003: HUMAN LANGUAGE TECHNOLOGY CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, PROCEEDINGS OF THE MAIN CONFERENCE, P252, DOI 10.3115/1073445.1073478
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Uddin G, 2017, IEEE INT CONF AUTOM, P159, DOI 10.1109/ASE.2017.8115629
   Wallach H.M., 2009, P 26 ANN INT C MACH, P1105, DOI [DOI 10.1145/1553374.1553515, 10.1145/1553374.1553515]
   Wang HN, 2011, PROCEEDINGS OF THE 34TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL (SIGIR'11), P435
   Wang W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P224, DOI 10.1109/MSR.2015.28
   Wang W, 2013, IEEE WORK CONF MIN S, P61, DOI 10.1109/MSR.2013.6624006
   Zanetti MS, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1032, DOI 10.1109/ICSE.2013.6606653
   Zhang YY, 2013, CONF PROC INT SYMP C, P142, DOI 10.1109/ICPC.2013.6613842
   Zibran M. F., 2011, 2011 18th Working Conference on Reverse Engineering, P151, DOI 10.1109/WCRE.2011.26
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 69
TC 16
Z9 16
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2020
VL 25
IS 2
SI SI
BP 1493
EP 1532
DI 10.1007/s10664-019-09743-4
EA DEC 2019
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA KT0VU
UT WOS:000500850800001
DA 2024-07-18
ER

PT J
AU Brito, A
   Valente, MT
   Xavier, L
   Hora, A
AF Brito, Aline
   Valente, Marco Tulio
   Xavier, Laerte
   Hora, Andre
TI You broke my code: understanding the motivations for breaking changes in
   APIs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE API evolution; Breaking changes; Firehouse interviews; Stack Overflow
ID USAGE
AB As most software systems, libraries and frameworks also evolve, which may break existing clients. However, the main reasons to introduce breaking changes in APIs are unclear. Therefore, in this paper, we first report the results of an almost 4-month long field study with popular Java libraries and frameworks. We configured an infrastructure to observe all changes in these libraries and to detect breaking changes shortly after their introduction in the code. We detected possible breaking changes in 61 projects. After identifying breaking changes, we asked the developers to explain the reasons behind their decision to change the APIs. By analyzing the developers' answers, we report that breaking changes are mostly motivated by the need to implement new features, by the desire to make the APIs simpler and with fewer elements, and to improve maintainability. To complement this first study, we describe a second study, including the analysis of 110 Stack Overflow posts related to breaking changes. We reveal that breaking changes have an important impact on clients, since 45% of the questions are from clients asking how to overcome specific breaking changes; they are also common in other ecosystems-JavaScript, .NET, etc. We conclude by providing suggestions to language designers, tool builders, software engineering researchers, and API developers.
C1 [Brito, Aline; Valente, Marco Tulio; Xavier, Laerte; Hora, Andre] Fed Univ Minas Gerais UFMG, DCC, BR-31270901 Belo Horizonte, MG, Brazil.
C3 Universidade Federal de Minas Gerais
RP Brito, A (corresponding author), Fed Univ Minas Gerais UFMG, DCC, BR-31270901 Belo Horizonte, MG, Brazil.
EM alinebrito@dcc.ufmg.br; mtov@dcc.ufmg.br; laertexavier@dcc.ufmg.br;
   andrehora@dcc.ufmg.br
RI Hora, Andre/HTP-0699-2023
OI Hora, Andre/0000-0003-4900-1330; Valente, Marco
   Tulio/0000-0002-8180-7548
FU FAPEMIG; CNPq; CAPES
FX We thank the 56 GitHub developers who participated in our study and
   shared their ideas and practices about breaking changes. This research
   is supported by grants from FAPEMIG, CNPq, and CAPES.
CR Abdeen H, 2009, WORK CONF REVERSE EN, P103, DOI 10.1109/WCRE.2009.13
   Ahasanuzzaman M, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P244, DOI 10.1109/SANER.2018.8330213
   [Anonymous], 24 INT S FDN SOFTW E
   Anquetil N., 1999, Sixth Working Conference on Reverse Engineering (Cat. No.PR00303), P235, DOI 10.1109/WCRE.1999.806964
   Bajaj K, 2014, P 11 WORK C MIN SOFT, P112
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Beyer S, 2018, INT C PROGRAM COMPRE, P211, DOI 10.1145/3196321.3196333
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Borges H, 2016, PROC IEEE INT CONF S, P334, DOI 10.1109/ICSME.2016.31
   Boulanger JS, 2006, PROC IEEE INT CONF S, P14
   Brito A, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P507, DOI 10.1109/SANER.2018.8330249
   Brito A, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P255, DOI 10.1109/SANER.2018.8330214
   Businge J, 2015, SOFTWARE QUAL J, V23, P107, DOI 10.1007/s11219-013-9221-3
   Businge J, 2013, EUR CON SFTWR MTNCE, P37, DOI 10.1109/CSMR.2013.14
   Businge J, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P368, DOI 10.1109/ICSM.2012.6405295
   Chow KS, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P359, DOI 10.1109/ICSM.1996.565039
   Cliff N., 2014, Ordinal Methods for Behavioral Data Analysis
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Dagenais B, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P481, DOI 10.1145/1368088.1368154
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   Hoan AN, 2010, ACM SIGPLAN NOTICES, V45, P302, DOI 10.1145/1932682.1869486
   Hora A, 2018, SOFTWARE QUAL J, V26, P161, DOI 10.1007/s11219-016-9344-4
   Jezek K, 2015, INFORM SOFTWARE TECH, V65, P129, DOI 10.1016/j.infsof.2015.02.014
   Kim M, 2009, PROC INT CONF SOFTW, P309, DOI 10.1109/ICSE.2009.5070531
   Konstantopoulos Dino, 2009, 2009 33rd Annual IEEE International Computer Software and Applications Conference (COMPSAC 2009), P287, DOI 10.1109/COMPSAC.2009.151
   Kula RG, 2018, INFORM SOFTWARE TECH, V93, P186, DOI 10.1016/j.infsof.2017.09.007
   Lu HH, 2010, MOLECULAR ENVIRONMENTAL SOIL SCIENCE AT THE INTERFACES IN THE EARTH'S CRITICAL ZONE, P325, DOI 10.1007/978-3-642-05297-2_95
   Mastrangelo L, 2015, ACM SIGPLAN NOTICES, V50, P695, DOI [10.1145/2814270.2814313, 10.1145/2858965.2814313]
   Mazinanian D, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133909
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Meng SC, 2012, PROC INT CONF SOFTW, P353, DOI 10.1109/ICSE.2012.6227179
   Mezzetti G, 2018, 32 EUR C OBJ OR PROG
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Morrison BR, 2013, RES SECOND LANG LEAR, P69
   Moser S, 1996, COMPUTER, V29, P45, DOI 10.1109/2.536783
   Mostafa S, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P215, DOI 10.1145/3092703.3092721
   Murphy-Hill E, 2015, IEEE T SOFTWARE ENG, V41, P65, DOI 10.1109/TSE.2014.2357438
   Murphy-Hill E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P332, DOI 10.1109/ICSE.2013.6606579
   Pinto G., 2014, P 11 WORK C MIN SOFT, P22
   Praditwong K, 2011, IEEE T SOFTWARE ENG, V37, P264, DOI 10.1109/TSE.2010.26
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Reddy Martin., 2011, API Design for C++
   Robbes R, 2012, 20 INT S FDN SOFTW E
   Rogers EM, 2003, DIFFUSION INNOVATION
   Sawant A. A., 2017, EMPIR SOFTW ENG, P1
   Sawant AA, 2016, PROC IEEE INT CONF S, P400, DOI 10.1109/ICSME.2016.64
   Schäfer T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P471, DOI 10.1145/1368088.1368153
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Terra R, 2015, SOFTWARE PRACT EXPER, V45, P315, DOI 10.1002/spe.2228
   Wang W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P224, DOI 10.1109/MSR.2015.28
   Xavier L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P138, DOI 10.1109/SANER.2017.7884616
   Xavier L, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P392, DOI 10.1109/SANER.2017.7884640
   Zhang TY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P886, DOI 10.1145/3180155.3180260
   2010, NANOWIRES, P1
NR 56
TC 19
Z9 22
U1 0
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2020
VL 25
IS 2
SI SI
BP 1458
EP 1492
DI 10.1007/s10664-019-09756-z
EA NOV 2019
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT0VU
UT WOS:000499433700001
DA 2024-07-18
ER

PT J
AU Palomba, F
   Zaidman, A
AF Palomba, Fabio
   Zaidman, Andy
TI RETRACTED: RETRACTED ARTICLE: The smell of fear: on the relation between
   test smells and flaky tests (Retracted Article)
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Retracted Publication
DE Test smells; Flaky tests; Refactoring
ID CODE SMELLS; REFACTORING OPPORTUNITIES; IDENTIFICATION; IMPACT; BAD
AB Regression testing is the activity performed by developers to check whether new modifications have not introduced bugs. A crucial requirement to make regression testing effective is that test cases are deterministic. Unfortunately, this is not always the case as some tests might suffer from so-called flakiness, i.e., tests that exhibit both a passing and a failing outcome with the same code. Flaky tests are widely recognized as a serious issue, since they hide real bugs and increase software inspection costs. While previous research has focused on understanding the root causes of test flakiness and devising techniques that automatically fix them, in this paper we explore an orthogonal perspective: the relation between flaky tests and test smells, i.e., suboptimal development choices applied when developing tests. Relying on (1) an analysis of the state-of-the-art and (2) interviews with industrial developers, we first identify five flakiness-inducing test smell types, namely Resource Optimism, Indirect Testing, Test Run War, Fire and Forget, and Conditional Test Logic, and automate their detection. Then, we perform a large-scale empirical study on 19,532 JUnit test methods of 18 software systems, discovering that the five considered test smells causally co-occur with flaky tests in 75% of the cases. Furthermore, we evaluate the effect of refactoring, showing that it is not only able to remove design flaws, but also fixes all 75% flaky tests causally co-occurring with test smells.
C1 [Palomba, Fabio] Univ Zurich, Zurich, Switzerland.
   [Zaidman, Andy] Delft Univ Technol, Delft, Netherlands.
C3 University of Zurich; Delft University of Technology
RP Palomba, F (corresponding author), Univ Zurich, Zurich, Switzerland.
EM palomba@ifi.uzh.ch; a.e.zaidman@tudelft.nl
OI Palomba, Fabio/0000-0001-9337-5116
FU EU Horizon 2020 ICT-10-2016-RIA "STAMP" project [731529]; NWO
   "TestRoots" project [639.022.314]; SNF "Data-Driven Code Review" project
   [PP00P2_170529]; H2020 - Industrial Leadership [731529] Funding Source:
   H2020 - Industrial Leadership
FX We would like to thank the 10 developers that participated in the
   interviews, and the 2 external inspectors that helped us categorize the
   test smells. We thank the anonymous reviewers, whose comments and
   feedback significantly improved this paper. This work was partially
   sponsored by the EU Horizon 2020 ICT-10-2016-RIA "STAMP" project (No.
   731529), the NWO "TestRoots" project (No. 639.022.314), and the SNF
   "Data-Driven Code Review" project (No. PP00P2_170529).
CR Abbes M, 2011, EUR CON SFTWR MTNCE, P181, DOI 10.1109/CSMR.2011.24
   Al Dallal J, 2015, INFORM SOFTWARE TECH, V58, P231, DOI 10.1016/j.infsof.2014.08.002
   [Anonymous], 2018, P INT C SOFTW MAINT
   [Anonymous], 2018, P INT C SOFTW MAINT
   [Anonymous], 1980, Order No. 8025191
   [Anonymous], 2014, P 2014 INT S SOFTW T
   [Anonymous], 2016, 2016 IEEE 24th International Conference on Program Comprehension (ICPC)
   Arcoverde R., 2011, WORKSH REF TOOLS, P33
   Athanasiou D, 2014, IEEE T SOFTWARE ENG, V40, P1100, DOI 10.1109/TSE.2014.2342227
   Baeza-Yates Ricardo, 1999, MODERN INFORM RETRIE, V463
   Bavota G., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P104, DOI 10.1109/SCAM.2012.20
   Bavota G, 2015, J SYST SOFTWARE, V107, P1, DOI 10.1016/j.jss.2015.05.024
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Beck, 2002, Test Driven Development: By Example
   Bell J, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P433, DOI 10.1145/3180155.3180164
   Bell J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P550, DOI 10.1145/2568225.2568248
   Beller M, 2017, IEEE T SOFTWARE ENG
   Beller M, 2017, IEEE WORK CONF MIN S, P356, DOI 10.1109/MSR.2017.62
   Beller M, 2017, IEEE WORK CONF MIN S, P447, DOI 10.1109/MSR.2017.24
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   Beller M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P559, DOI 10.1109/ICSE.2015.193
   Catolino G, 2018, J SYST SOFTWARE, V143, P14, DOI 10.1016/j.jss.2018.05.003
   Catolino G, 2017, INT C PROGRAM COMPRE, P186, DOI 10.1109/ICPC.2017.19
   Croux C, 2010, STAT METHOD APPL-GER, V19, P497, DOI 10.1007/s10260-010-0142-z
   Daniel B, 2009, IEEE INT CONF AUTOM, P433, DOI 10.1109/ASE.2009.17
   Developers C, 2018, FLAKINESS DASHBOARD
   Developers G, 2012, NO MORE FLAKY TESTS
   Di Nucci D, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P612, DOI 10.1109/SANER.2018.8330266
   Engstrom RN, 2010, DESIGN, MEANING AND CHOICE IN DIRECT DEMOCRACY: THE INFLUENCES OF PETITIONERS AND VOTERS, P3
   Farchi E., 2003, Proceedings International Parallel and Distributed Processing Symposium, DOI 10.1109/IPDPS.2003.1213511
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fowler M., 2011, ERADICATING NONDETER
   Garousi V., 2016, Proceedings of the 20th international conference on evaluation and assessment in software engineering, P26
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Greiler M, 2013, IEEE WORK CONF MIN S, P387, DOI 10.1109/MSR.2013.6624053
   Greiler M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P322, DOI 10.1109/ICST.2013.45
   Guowei Yang, 2012, FM 2012: Formal Methods. Proceedings of the 18th International Symposium, P455, DOI 10.1007/978-3-642-32759-9_37
   Hao D, 2005, PROC IEEE INT CONF S, P683
   Jaccard P., 1901, B SOCIT VAUDOISE SCI, V37, P547, DOI [10.5169/seals-266440, DOI 10.5169/SEALS-266440]
   Jin GL, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P389
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kendall M. G., 1948, Rank correlation methods.
   Khomh F, 2012, EMPIR SOFTW ENG, V17, P243, DOI 10.1007/s10664-011-9171-y
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kleiman S, 1996, PROGRAMMING THREADS
   Lacoste FJ, 2009, AGILE 2009 CONFERENCE, P387, DOI 10.1109/AGILE.2009.35
   Lanza Michele, 2006, Objectoriented metrics in practice: using software metrics to characterize, evaluate, and improve the design of object-oriented systems
   Lozano Angelo., 2007, Ninth International Workshop on Principles of software evolution, P31
   Lu S, 2008, ACM SIGPLAN NOTICES, V43, P329, DOI 10.1145/1353536.1346323
   Luo QZ, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P643, DOI 10.1145/2635868.2635920
   Mackenzie N, 2006, ISS EDUC RES, V16, P193
   Malaiya YK, 2002, IEEE T RELIAB, V51, P420, DOI 10.1109/TR.2002.804489
   Marinescu P., 2014, Proceedings of the 2014 International Symposium on Software Testing and Analysis, ISSTA 2014, P93
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Melski E, 2018, 6 TIPS WRITING ROBUS
   Memon AM, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1479, DOI 10.1109/ICSE.2013.6606750
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Micco J., 2016, Flaky tests at google and how we mitigate them
   Moha N, 2010, IEEE T SOFTWARE ENG, V36, P20, DOI 10.1109/TSE.2009.50
   Moonen L., 2008, Software Evolution, P173
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Munro M. J., 2005, P INT SOFTW METR S M
   Muslu Kivanc., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, ESEC/FSE '11, P496
   Oliveto R, 2010, EUR CON SFTWR MTNCE, P248, DOI 10.1109/CSMR.2010.47
   Palomba F, 2016, P 25 INT S SOFTW TES, P130, DOI [10.1145/2931037.2931057, DOI 10.1145/2931037.2931057]
   Palomba F, 2018, SMELL FEAR RELATION
   Palomba F, 2019, IEEE T SOFTWARE ENG
   Palomba F, 2018, EMPIR SOFTW ENG, V23, P1188, DOI 10.1007/s10664-017-9535-z
   Palomba F, 2018, INFORM SOFTWARE TECH, V99, P1, DOI 10.1016/j.infsof.2018.02.004
   Palomba F, 2017, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2017.12
   Palomba F, 2017, INT C PROGRAM COMPRE, P176, DOI 10.1109/ICPC.2017.38
   Palomba F, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P5, DOI [10.1145/2897010.2897016, 10.1109/SBST.2016.010]
   Palomba F, 2015, IEEE T SOFTWARE ENG, V41, P462, DOI 10.1109/TSE.2014.2372760
   Palomba F, 2014, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSME.2014.32
   Palomba Fabio, 2017, IEEE T SOFTWARE ENG
   Perez A, 2017, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2017.66
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Pinto L.S., 2012, P ACM SIGSOFT 20 INT, P1
   Ratiu D, 2004, CSMR 2004: EIGHTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P223
   SACKETT DL, 1979, J CHRON DIS, V32, P51, DOI 10.1016/0021-9681(79)90012-2
   Sjoberg DIK, 2013, IEEE T SOFTWARE ENG, V39, P1144, DOI 10.1109/TSE.2012.89
   Tsantalis N, 2011, J SYST SOFTWARE, V84, P1757, DOI 10.1016/j.jss.2011.05.016
   Tsantalis N, 2009, IEEE T SOFTWARE ENG, V35, P347, DOI 10.1109/TSE.2009.1
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Vahabzadeh A, 2015, PROC IEEE INT CONF S, P101, DOI 10.1109/ICSM.2015.7332456
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Weiss R. S, 1995, Learning from strangers
   Yamashita A, 2015, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSM.2015.7332458
   Yamashita A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P682, DOI 10.1109/ICSE.2013.6606614
   Yamashita A, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P306, DOI 10.1109/ICSM.2012.6405287
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
   Zhang YC, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P214, DOI 10.1145/2786805.2786858
NR 95
TC 17
Z9 17
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2019
VL 24
IS 5
SI SI
BP 2907
EP 2946
DI 10.1007/s10664-019-09683-z
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IS1CL
UT WOS:000481889700004
DA 2024-07-18
ER

PT J
AU Hu, HY
   Wang, SW
   Bezemer, CP
   Hassan, AE
AF Hu, Hanyang
   Wang, Shaowei
   Bezemer, Cor-Paul
   Hassan, Ahmed E.
TI Studying the consistency of star ratings and reviews of popular free
   hybrid Android and iOS apps
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mobile apps; Star rating; User reviews; Twitter-LDA
AB Nowadays, many developers make their mobile apps available on multiple platforms (e.g., Android and iOS). However, maintaining several versions of a cross-platform app that is built natively (i.e., using platform-specific tools) is a complicated task. Instead, developers can choose to use hybrid development tools, such as PhoneGap, to build hybrid apps. Hybrid apps are based on a single codebase across platforms. There exist two ways to use a hybrid development tool to build a hybrid app that runs on multiple platforms: (1) using web technologies (i.e., HTML, Javascript and CSS) and (2) in a common language, which is then converted to native code. We study whether these hybrid development tools achieve their main purpose: delivering an app that is perceived similarly by users across platforms. Prior studies show that users refer to star ratings and user reviews, when deciding to download an app. Given the importance of star ratings and user reviews, we study whether the usage of a hybrid development tool assists app developers in achieving consistency in the star ratings and user reviews across multiple platforms. We study 68 hybrid app-pairs, i.e., apps that exist both in the Google Play store and Apple App store. We find that 33 out of 68 hybrid apps do not receive consistent star ratings across platforms. We run Twitter-LDA on user reviews and find that the star ratings of the reviews that discuss the same topic could be up to three times as high across platforms. Our findings suggest that while hybrid apps are better at providing consistent star ratings and user reviews when compared to cross-platform apps that are built natively, hybrid apps do not guarantee such consistency. Hence, developers should not solely rely on hybrid development tools to achieve consistency in the star ratings and reviews that are given by users of their apps. In particular, developers should track closely the ratings and reviews of their apps across platforms, so that they can act accordingly when platform-specific issues arise.
C1 [Hu, Hanyang] Queens Univ, Kingston, ON, Canada.
   [Wang, Shaowei; Bezemer, Cor-Paul] Queens Univ, SAIL, Kingston, ON, Canada.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, Kingston, ON, Canada.
C3 Queens University - Canada; Queens University - Canada; Queens
   University - Canada
RP Wang, SW (corresponding author), Queens Univ, Kingston, ON, Canada.
EM hyhu@cs.queensu.ca; shaowei@cs.queensu.ca; bezemer@cs.queensu.ca;
   ahmed@cs.queensu.ca
RI KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan, Ahmed/AAB-7241-2019; Ali,
   Ahmed/HOF-4672-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Bezemer,
   Cor-Paul/0000-0002-0474-5718
CR Adobe, 2017, PHON
   Ali M.Mesbah., 2016, Proceedings of the International Workshop on App Market Analytics WAMA, P50, DOI DOI 10.1145/2993259.2993263
   [Anonymous], MOST POP APPL APP ST
   [Anonymous], 2014, GOOGL PLAY CRAWL JAV
   [Anonymous], 1997, An Algorithm for Suffix Stripping, page
   Apple, 2008, RSS FEED PROV APPL A
   Benenson Z., 2013, CHI 13 EXTENDED ABST, P817
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Chen N, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P767, DOI 10.1145/2568225.2568263
   Dalmasso I, 2013, INT WIREL COMMUN, P323, DOI 10.1109/IWCMC.2013.6583580
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Fu B, 2013, 19TH ACM SIGKDD INTERNATIONAL CONFERENCE ON KNOWLEDGE DISCOVERY AND DATA MINING (KDD'13), P1276
   Graphpad Software, 2015, INT RES SKEWN KURT
   Gu XD, 2015, IEEE INT CONF AUTOM, P760, DOI 10.1109/ASE.2015.57
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hassan S, 2017, EMPIR SOFTW ENG, V22, P505, DOI 10.1007/s10664-016-9435-7
   Heitkotter H., 2013, Evaluating Cross-Platform Development Approaches for Mobile Applications, P120
   Hu H, 2016, STUDYING CONSISTENCY
   Joanes DN, 1998, J ROY STAT SOC D-STA, V47, P183
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Joorabchi ME, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P450, DOI 10.1109/ISSRE.2015.7381838
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Long J.D., 2003, Ordinal Analysis of Behavioral Data
   Man YC, 2016, PROC INT SYMP SOFTW, P138, DOI 10.1109/ISSRE.2016.27
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Martens W., 2016, IEEE T SOFTWARE ENG, P1
   Martin W, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P435, DOI 10.1145/2950290.2950320
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   Microsoft, 2017, XAM MOB APP DEV APP
   NIST/SEMATECH, 2012, EHANDBOOK  STAT METH
   Noei E, 2017, EMPIR SOFTW ENG, V22, P3088, DOI 10.1007/s10664-017-9507-3
   Ohrt J, 2012, COMPUTER, V45, P72, DOI 10.1109/MC.2012.121
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Palmieri Manuel, 2012, 2012 16th International Conference on Intelligence in Next Generation Networks (ICIN 2012): Realising the Power of the Network, P179, DOI 10.1109/ICIN.2012.6376023
   Palomba F, 2017, PROC INT CONF SOFTW, P106, DOI 10.1109/ICSE.2017.18
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Pettey C., 2012, GARTNER SAYS FREE AP
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   Poschenrieder M., 2015, 77% will not download a retail app rated lower than 3 stars
   Ramon L., 2015, Smartphone OS Market Share, 2015 Q2
   Romano J., 2006, P ANN M SO ASS I RES
   Smutny P., 2012, 2012 13th International Carpathian Control Conference (ICCC 2012), P653, DOI 10.1109/CarpathianCC.2012.6228727
   Thomas SW, 2011, 8 WORK C MIN SOFTW R, P173
   Tian Y, 2015, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSM.2015.7332476
   Vashistha C., 2015, Native vs hybrid mobile app: 5 ways to choose right plarform
   Viennot N., 2014, 2014 ACM INT C MEAS, P221, DOI DOI 10.1145/2637364.2592003
   Villarroel L, 2016, PROC INT CONF SOFTW, P14, DOI 10.1145/2884781.2884818
   Zhao WNX, 2011, LECT NOTES COMPUT SC, V6611, P338, DOI 10.1007/978-3-642-20161-5_34
NR 50
TC 26
Z9 31
U1 0
U2 24
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2019
VL 24
IS 1
BP 7
EP 32
DI 10.1007/s10664-018-9617-6
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HL3RV
UT WOS:000458634400001
DA 2024-07-18
ER

PT J
AU Morrison, PJ
   Pandita, R
   Xiao, XS
   Chillarege, R
   Williams, L
AF Morrison, Patrick J.
   Pandita, Rahul
   Xiao, Xusheng
   Chillarege, Ram
   Williams, Laurie
TI Are vulnerabilities discovered and resolved like other defects?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software development; Measurement; Process improvement; Security;
   Orthogonal Defect Classification (ODC)
ID METRICS
AB Software defect data has long been used to drive software development process improvement. If security defects (vulnerabilities) are discovered and resolved by different software development practices than non-security defects, the knowledge of that distinction could be applied to drive process improvement. The goal of this research is to support technical leaders in making security-specific software development process improvements by analyzing the differences between the discovery and resolution of defects versus that of vulnerabilities. We extend Orthogonal Defect Classification (ODC), a scheme for classifying software defects to support software development process improvement, to study process-related differences between vulnerabilities and defects, creating ODC + Vulnerabilities (ODC + V). We applied ODC + V to classify 583 vulnerabilities and 583 defects across 133 releases of three open-source projects (Firefox, phpMyAdmin, and Chrome). Compared with defects, vulnerabilities are found later in the development cycle and are more likely to be resolved through changes to conditional logic. In Firefox, vulnerabilities are resolved 33% more quickly than defects. From a process improvement perspective, these results indicate opportunities may exist for more efficient vulnerability detection and resolution.
C1 [Morrison, Patrick J.; Pandita, Rahul; Williams, Laurie] North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
   [Xiao, Xusheng] Phase Change Software LLC, Denver, CO USA.
   [Chillarege, Ram] Chillarege Inc, Raleigh, NC USA.
C3 North Carolina State University
RP Morrison, PJ (corresponding author), North Carolina State Univ, Dept Comp Sci, Raleigh, NC 27695 USA.
EM pjmorris@ncsu.edu; rpandit@ncsu.edu; xsxiao@case.edu;
   ram@chillarege.com; williams@csc.ncsu.edu
RI Xiao, Xusheng/KIC-3760-2024
OI Xiao, Xusheng/0000-0003-4797-4294
FU IBM; USA National Security Agency (NSA) Science of Security Lablet at
   NCSU
FX This work is supported, in part, by IBM and by the USA National Security
   Agency (NSA) Science of Security Lablet at NCSU. Any opinions expressed
   in this report are those of the author(s) and do not necessarily reflect
   the views of IBM or the NSA. We thank Marc Delisle of the phpMyadmin for
   providing us with the snapshot of defect repostitories for this study,
   and for kindly answering many questions and offering his perspective. We
   also thank Dr. Alyson Wilson for providing helpful feedback on designing
   the classification assignments for the raters. We are grateful to Dr.
   Andy Meneely for providing the Chrome database snapshot, and to Dr.
   Fabio Massacci and the University of Trento for granting access to their
   curated Chrome vulnerability list. Finally, we thank the
   RealSearch<SUP>36</SUP> research group for providing helpful feedback on
   this work.
CR Agresti Alan., 2007, An introduction to categorical data analysis, V135
   Alhazmi OH, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P129, DOI 10.1109/ISSRE.2005.30
   Anbalagan P., 2011, THESIS
   [Anonymous], 1995, The Capability Maturity Model: Guidelines for Improving the Software Process
   Basili V. R., 1987, Proceedings of the 9th International Conference on Software Engineering (Cat. No.87CH2432-3), P345
   BHANDARI I, 1994, IBM SYST J, V33, P182, DOI 10.1147/sj.331.0182
   Boehm BW., 1981, Software Engineering Economics
   Bridge N., 1998, SOFTW QUAL J, V3, P1
   Butcher M, 2002, IBM SYST J, V41, P31, DOI 10.1147/sj.411.0031
   Camilo F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P269, DOI 10.1109/MSR.2015.32
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Chillarege R, 2006, ODC A 10X ROOT CAUSE
   Chowdhury I, 2011, J SYST ARCHITECT, V57, P294, DOI 10.1016/j.sysarc.2010.06.003
   COCHRAN WG, 1954, BIOMETRICS, V10, P417, DOI 10.2307/3001616
   Deming W. E., 1986, OUT CRISIS
   Gegick Michael., 2008, QOP 08, P31, DOI DOI 10.1145/1456362.1456370
   Howard M., 2009, The security development lifecycle
   Hunny U, 2013, P 28 SAC, P1131
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Massacci F, 2014, IEEE T SOFTWARE ENG, V40, P1147, DOI 10.1109/TSE.2014.2354037
   Massacci F, 2011, LECT NOTES COMPUT SC, V6542, P195, DOI 10.1007/978-3-642-19125-1_15
   MAYS RG, 1990, IBM SYST J, V29, P4, DOI 10.1147/sj.291.0004
   McGraw G., 2006, SOFTWARE SECURITY BU, V1
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   Nguyen VietHung., 2013, P 8 ACM SIGSAC S INF, P493
   Ott L., 1988, INTRO STAT METHODS D
   Ozment JA, 2007, THESIS
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Riaz M, 2014, INT REQUIR ENG CONF, P183, DOI 10.1109/RE.2014.6912260
   Robinson B, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P333
   Shewhart WA, 1930, BELL SYST TECH J, V9, P364, DOI 10.1002/j.1538-7305.1930.tb00373.x
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Shostack A., 2014, Threat Modeling: Designing for Security
   Souza R, 2017, IEEE WORK CONF MIN S, P459, DOI 10.1109/MSR.2017.27
   Syed-Mohamad SM, 2008, ASIA PAC SOFWR ENG, P229, DOI 10.1109/APSEC.2008.20
   Theisen C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P199, DOI 10.1109/ICSE.2015.148
   Walden J, 2014, PROC INT SYMP SOFTW, P23, DOI 10.1109/ISSRE.2014.32
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
   Zheng J, 2006, IEEE T SOFTWARE ENG, V32, P240, DOI 10.1109/TSE.2006.38
NR 39
TC 23
Z9 24
U1 1
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2018
VL 23
IS 3
BP 1383
EP 1421
DI 10.1007/s10664-017-9541-1
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GH6DH
UT WOS:000433532300007
DA 2024-07-18
ER

PT J
AU Ali, N
   Baker, S
   O'Crowley, R
   Herold, S
   Buckley, J
AF Ali, Nour
   Baker, Sean
   O'Crowley, Ross
   Herold, Sebastian
   Buckley, Jim
TI Architecture consistency: State of the practice, challenges and
   requirements
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture; Consistency; Architectural drift; Empirical
   study; Architecture recovery; Architecture conformance and erosion
ID SOFTWARE; CHECKING; MODELS; SYSTEM
AB Architecture Consistency (AC) aims to align implemented systems with their intended architectures. Several AC approaches and tools have been proposed and empirically evaluated, suggesting favourable results. In this paper, we empirically examine the state of practice with respect to Architecture Consistency, through interviews with nineteen experienced software engineers. Our goal is to identify 1) any practises that the companies these architects work for, currently undertake to achieve AC; 2) any barriers to undertaking explicit AC approaches in these companies; 3) software development situations where practitioners perceive AC approaches would be useful, and 4) AC tool needs, as perceived by practitioners. We also assess current commercial AC tool offerings in terms of these perceived needs. The study reveals that many practitioners apply informal AC approaches as there are barriers for adopting more formal and explicit approaches. These barriers are: 1) Difficulty in quantifying architectural inconsistency effects, and thus justifying the allocation of resources to fix them to senior management, 2) The near invisibility of architectural inconsistency to customers, 3) Practitioners' reluctance towards fixing architectural inconsistencies, and 4) Practitioners perception that huge effort is required to map the system to the architecture when using more formal AC approaches and tools. Practitioners still believe that AC would be useful in supporting several of the software development activities such as auditing, evolution and ensuring quality attributes. After reviewing several commercial tools, we posit that AC tool vendors need to work on their ability to support analysis of systems made up of different technologies, that AC tools need to enhance their capabilities with respect to artefacts such as services and meta-data, and to focus more on non-maintainability architectural concerns.
C1 [Ali, Nour] Brunel Univ, London, England.
   [Baker, Sean; Buckley, Jim] Univ Limerick, Lero, Limerick, Ireland.
   [O'Crowley, Ross] Red Orkid Ltd, Dublin, Ireland.
   [Herold, Sebastian] Karlstad Univ, Karlstad, Sweden.
C3 Brunel University; University of Limerick; Karlstad University
RP Ali, N (corresponding author), Brunel Univ, London, England.
EM nouraliirshaid@gmail.com; sean.patrick.baker@gmail.com;
   ross@orkidtech.com; sebastian.herold@kau.se; jim.buckley@ul.ie
RI ; Herold, Sebastian/N-3557-2015
OI Buckley, Jim/0000-0001-6928-6746; Ali, Nour/0000-0002-0161-5600; Herold,
   Sebastian/0000-0002-3180-9182
FU Enterprise Ireland under the Commercialisation Fund Programme
   [CF20122719Y]; University of Brighton; Science Foundation Ireland
   [12/IP/1351, 10/CE/I1855]; Science Foundation Ireland (SFI) [12/IP/1351]
   Funding Source: Science Foundation Ireland (SFI)
FX We acknowledge the anonymous participants of the study. This work has
   partly been funded by Enterprise Ireland under the Commercialisation
   Fund Programme, Grant-Ref No:CF20122719Y. Also, by University of
   Brighton under the Rising Star Scheme awarded to Nour Ali. This study
   was also supported in part by Science Foundation Ireland grant
   12/IP/1351 and 10/CE/I1855 to Lero - the Irish Software Engineering
   Research Centre (www.lero.ie).
CR Ali N., 2012, P 8 INT ACM SIGSOFT, P23
   [Anonymous], 2017, TECHBEACON IS AGILE
   [Anonymous], 2005, Researching Information Systems and Computing
   [Anonymous], P INT C SOFTW ENG RE
   Babar MA, 2009, 2009 JOINT WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE AND EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE, P81, DOI 10.1109/WICSA.2009.5290794
   Bachmann F, 2005, IEE P-SOFTW, V152, P153, DOI 10.1049/ip-sen:20045037
   Bang JY, 2015, 2015 12TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P155, DOI 10.1109/WICSA.2015.15
   Behnamghader Pooyan., 2016, Empirical Software Engineering EMSE, P1
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Brunet J., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P257, DOI 10.1109/WCRE.2012.35
   Brunet J, 2015, IEEE SOFTWARE, V32, P30, DOI 10.1109/MS.2014.106
   Buchgeher G, 2011, 2011 9TH WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE (WICSA), P46, DOI 10.1109/WICSA.2011.16
   Buckley J, 2008, J SOFTW MAINT EVOL-R, V20, P107, DOI 10.1002/smr.364
   Buckley J, 2015, INFORM SOFTWARE TECH, V61, P107, DOI 10.1016/j.infsof.2015.01.011
   Buckley J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1291, DOI 10.1109/ICSE.2013.6606700
   Coplien J., 2010, LEAN ARCHITECTURE AG
   de Silva Lakshitha, 2013, Software Architecture. 7th European Conference, ECSA 2013. Proceedings: LNCS 7584, P240, DOI 10.1007/978-3-642-39031-9_21
   de Silva L, 2012, J SYST SOFTWARE, V85, P132, DOI 10.1016/j.jss.2011.07.036
   Ducasse S, 2009, IEEE T SOFTWARE ENG, V35, P573, DOI 10.1109/TSE.2009.19
   Falessi D, 2010, IEEE SOFTWARE, V27, P23, DOI 10.1109/MS.2010.49
   Forster T, 2013, EUR CON SFTWR MTNCE, P295, DOI 10.1109/CSMR.2013.38
   Ganesan D, 2008, 8 INT C QUAL SOFTW
   Garlan D, 2004, LECT NOTES COMPUT SC, V3047, P200
   Girard J, 1997, FINDING COMPONENTS H, P58
   Haitzer T., 2012, P 8 INT ACM SIGSOFT, P61, DOI DOI 10.1145/2304696.2304709
   Herold S, 2015, P 2015 EUR C SOFTW A
   Hochstein L, 2005, INFORM SOFTWARE TECH, V47, P643, DOI 10.1016/j.infsof.2004.11.005
   Ihme T, 2005, INT C AG HELS
   Javed MA., 2014, P 18 INT C EV ASS SO
   Knodel J, 2008, P EUR C SOFTW MAINT, P279
   Knodel J., 2010, THESIS
   Knodel J, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P43
   Koschke R, 2003, 10TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P36, DOI 10.1109/WCRE.2003.1287235
   Kruchten P., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P497, DOI 10.1145/1810295.1810448
   Lago P, 2015, IEEE SOFTWARE, V32, P98, DOI 10.1109/MS.2014.28
   Le DM, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P235, DOI 10.1109/MSR.2015.29
   Le Gear A, 2005, P INT S EMP SOFTW EN, P34
   Lindvall M, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P77, DOI 10.1109/METRIC.2002.1011327
   MacCormack A, 2016, J SYST SOFTWARE, V120, P170, DOI 10.1016/j.jss.2016.06.007
   Madison J, 2010, IEEE SOFTWARE, V27, P41, DOI 10.1109/MS.2010.35
   Malavolta I, 2013, IEEE T SOFTWARE ENG, V39, P869, DOI 10.1109/TSE.2012.74
   Mattsson A., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P369, DOI 10.1145/1810295.1810395
   Mattsson A, 2012, MODELLING AUTOMATIC
   Medvidovic N., 2003, STRAW, V3, P61
   Mirakhorli M, 2014, P 22 ACM SIGSOFT INT, P39
   Mirakhorli M, 2012, PROC INT CONF SOFTW, P639, DOI 10.1109/ICSE.2012.6227153
   Mitchel MI, 2004, RES DESIGN EXPLAINED
   Murphy G. C., 1995, SIGSOFT Software Engineering Notes, V20, P18, DOI 10.1145/222132.222136
   Murphy GC, 1997, COMPUTER, V30, P29, DOI 10.1109/2.607045
   Murta LGP, 2008, AUTOMAT SOFTW ENG, V15, P75, DOI 10.1007/s10515-007-0020-6
   Nguyen TN, 2005, THIRD ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGMENT AND APPLICATIONS, PROCEEDINGS, P86, DOI 10.1109/SERA.2005.54
   Nord R. L., 2012, 2012 Joint Working IEEE/IFIP Conference on Software Architecture (WICSA 2012) & European Conference on Software Architecture (ECSA 2012), P91, DOI 10.1109/WICSA-ECSA.212.17
   Passos L, 2010, IEEE SOFTWARE, V27, P82, DOI 10.1109/MS.2009.117
   Perry DE, 1997, PROC INT CONF SOFTW, P657, DOI 10.1145/253228.253796
   Popescu D, 2008, WORKSH ARCH DEP SYST
   Prechelt L, 1999, 199918 U KARLSR
   Pruijt L, 2017, SOFTWARE PRACT EXPER, V47, P273, DOI 10.1002/spe.2421
   Romano D, 2011, 2011 IE INT C SERV O, P1
   Rosik J, 2014, THESIS
   Rosik J, 2011, SOFTWARE PRACT EXPER, V41, P63, DOI 10.1002/spe.999
   Rosik J, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P80
   Sangal N, 2005, P 20 C OBJ OR PROGR, P67
   Sarkar S, 2009, IEEE SOFTWARE, V26, P28, DOI 10.1109/MS.2009.42
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sefika M, 1996, PROC INT CONF SOFTW, P387, DOI 10.1109/ICSE.1996.493433
   Stoermer C, 2006, SOFTWARE PRACT EXPER, V36, P333, DOI 10.1002/spe.699
   Strauss A, 1998, BASICS QUALITATIVE R, Vxiii, P312
   Tran H, 2011, SOFTW SYST MODEL, V10, P5, DOI 10.1007/s10270-009-0137-0
   Tran J.B., 1999, P 1999 C CTR ADV STU, P12
   Tvedt RT, 2004, ADV COMPUT, V61, P1, DOI 10.1016/S0065-2458(03)61001-6
   Verbaere M, 2008, QUERY TECHNOLOGIES A, P285
   West D, 2010, AGILE DEV MINSTREAM
   Yin R.K., 2011, Qualitative research from start to finish
   Zheng Y, 2003, 34 INT C SOFTW ENG I, P628
   Zheng Y, 2011, 26 IEEE ACM INT C AU, P396
NR 75
TC 34
Z9 38
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2018
VL 23
IS 1
BP 224
EP 258
DI 10.1007/s10664-017-9515-3
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FU9TG
UT WOS:000424199400006
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Zhang, F
   Keivanloo, I
   Zou, Y
AF Zhang, Feng
   Keivanloo, Iman
   Zou, Ying
TI Data Transformation in Cross-project Defect Prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Defect prediction; Data transformation; Software metrics; Box-cox
AB Software metrics rarely follow a normal distribution. Therefore, software metrics are usually transformed prior to building a defect prediction model. To the best of our knowledge, the impact that the transformation has on cross-project defect prediction models has not been thoroughly explored. A cross-project model is built from one project and applied on another project. In this study, we investigate if cross-project defect prediction is affected by applying different transformations (i.e., log and rank transformations, as well as the Box-Cox transformation). The Box-Cox transformation subsumes log and other power transformations (e.g., square root), but has not been studied in the defect prediction literature. We propose an approach, namely Multiple Transformations (MT), to utilize multiple transformations for cross-project defect prediction. We further propose an enhanced approach MT+ to use the parameter of the Box-Cox transformation to determine the most appropriate training project for each target project. Our experiments are conducted upon three publicly available data sets (i.e., AEEEM, ReLink, and PROMISE). Comparing to the random forest model built solely using the log transformation, our MT+ approach improves the F-measure by 7, 59 and 43% for the three data sets, respectively. As a summary, our major contributions are three-fold: 1) conduct an empirical study on the impact that data transformation has on cross-project defect prediction models; 2) propose an approach to utilize the various information retained by applying different transformation methods; and 3) propose an unsupervised approach to select the most appropriate training project for each target project.
C1 [Zhang, Feng] Queens Univ, Sch Comp, Kingston, ON, Canada.
   [Keivanloo, Iman; Zou, Ying] Queens Univ, Dept Elect & Comp Engn, Kingston, ON, Canada.
C3 Queens University - Canada; Queens University - Canada
RP Zhang, F (corresponding author), Queens Univ, Sch Comp, Kingston, ON, Canada.
EM feng@cs.queensu.ca; iman.keivanloo@ieee.org; ying.zou@queensu.ca
RI Zhang, Feng/AAQ-3506-2021; Zou, Ying/KLC-9380-2024
OI Zhang, Feng/0000-0001-9805-395X
CR [Anonymous], 13 BEST PRACTICES DA
   [Anonymous], J POPUL RES
   [Anonymous], PROC INT CONF SOFTW
   [Anonymous], 1993, HDB DATA ANAL BEHAV
   [Anonymous], IEEE T SOFT ENG
   [Anonymous], ED PSYCHOL MEASUREME
   [Anonymous], 2010, Pract. Assess. Res. Eval.
   [Anonymous], THESIS
   [Anonymous], 2012, P ACM SIGSOFT 20 INT
   Bettenburg N., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P60, DOI 10.1109/MSR.2012.6224300
   BOX GEP, 1964, J ROY STAT SOC B, V26, P211, DOI 10.1111/j.2517-6161.1964.tb00553.x
   Breslow N. E., 1980, International Agency for Research on Cancer Scientific Publications, V1
   Canfora G, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P252, DOI 10.1109/ICST.2013.38
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   Cohen J., 2013, APPL MULTIPLE REGRES
   Concas G, 2007, IEEE T SOFTWARE ENG, V33, P687, DOI [10.1109/TSE.2007.1019, 10.1109/TSE.2007.1016]
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Fukushima T., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, MSR 2014, P172, DOI DOI 10.1145/2597073.2597075
   Gaudard M, 2000, COMMUN STAT-SIMUL C, V29, P559, DOI 10.1080/03610910008813628
   Han J, 2012, MOR KAUF D, P1
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Japkowicz N., 2011, Evaluating Learning Algorithms A Classification Perspective, V211, P224, DOI DOI 10.1017/CBO9780511921803
   Jiang Y., 2008, DEFECTS 08 P 2008 WO, P16, DOI [DOI 10.1145/1390817.1390822, 10.1145/1390817.1390822]
   Jing XY, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P496, DOI 10.1145/2786805.2786813
   Jureczko M., 2010, P 6 INT C PREDICTIVE
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kuhn M., 2013, Applied Predictive Modeling, P27
   Louridas P, 2008, ACM T SOFTW ENG METH, V18, DOI 10.1145/1391984.1391986
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Misirli AT, 2011, SOFTWARE QUAL J, V19, P515, DOI 10.1007/s11219-010-9128-1
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Panichella A, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P164, DOI 10.1109/CSMR-WCRE.2014.6747166
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Selim G. M. K., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P13, DOI 10.1109/WCRE.2010.11
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Song QB, 2011, IEEE T SOFTWARE ENG, V37, P356, DOI 10.1109/TSE.2010.90
   Succi G, 2005, EMPIR SOFTW ENG, V10, P81, DOI 10.1023/B:EMSE.0000048324.12188.a2
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Triola M.F., 2004, ELEMENTARY STAT
   Turhan B, 2013, INFORM SOFTWARE TECH, V55, P1101, DOI 10.1016/j.infsof.2012.10.003
   Xia X, 2015, INFORM SOFTWARE TECH, V61, P93, DOI 10.1016/j.infsof.2014.12.006
   Yin RK, 2002, Applied Social Research Methods Series, V34
   Zhang F, 2016, EMPIR SOFTW ENG, V21, P2107, DOI 10.1007/s10664-015-9396-2
   Zhang F, 2013, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2013.46
   Zhang FM, 2014, CRYST GROWTH DES, V14, P2014, DOI 10.1021/cg5001254
   Zhang HY, 2009, INFORM PROCESS MANAG, V45, P477, DOI 10.1016/j.ipm.2009.02.001
   Zhimin He, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P45, DOI 10.1109/ESEM.2013.20
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 54
TC 44
Z9 48
U1 1
U2 24
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2017
VL 22
IS 6
BP 3186
EP 3218
DI 10.1007/s10664-017-9516-2
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FI3MB
UT WOS:000411865400013
DA 2024-07-18
ER

PT J
AU Bajwa, SS
   Wang, XF
   Duc, AN
   Abrahamsson, P
AF Bajwa, Sohaib Shahid
   Wang, Xiaofeng
   Anh Nguyen Duc
   Abrahamsson, Pekka
TI "Failures" to be celebrated: an analysis of major pivots of software
   startups
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Pivot; Software startups; Lean startup; Validated learning; Pivoting
   factor; Side project
AB In the context of software startups, project failure is embraced actively and considered crucial to obtain validated learning that can lead to pivots. A pivot is the strategic change of a business concept, product or the different elements of a business model. A better understanding is needed on different types of pivots and different factors that lead to failures and trigger pivots, for software entrepreneurial teams to make better decisions under chaotic and unpredictable environment. Due to the nascent nature of the topic, the existing research and knowledge on the pivots of software startups are very limited. In this study, we aimed at identifying the major types of pivots that software startups make during their startup processes, and highlighting the factors that fail software projects and trigger pivots. To achieve this, we conducted a case survey study based on the secondary data of the major pivots happened in 49 software startups. 10 pivot types and 14 triggering factors were identified. The findings show that customer need pivot is the most common among all pivot types. Together with customer segment pivot, they are common market related pivots. The major product related pivots are zoom-in and technology pivots. Several new pivot types were identified, including market zoom-in, complete and side project pivots. Our study also demonstrates that negative customer reaction and flawed business model are the most common factors that trigger pivots in software startups. Our study extends the research knowledge on software startup pivot types and pivot triggering factors. Meanwhile it provides practical knowledge to software startups, which they can utilize to guide their effective decisions on pivoting.
C1 [Bajwa, Sohaib Shahid; Wang, Xiaofeng] Free Univ Bozen Bolzano, Fac Comp Sci, Bolzano, Bolzano, Italy.
   [Anh Nguyen Duc; Abrahamsson, Pekka] Norwegian Univ Sci & Technol, Dept Comp & Informat Sci, Trondheim, Norway.
C3 Free University of Bozen-Bolzano; Norwegian University of Science &
   Technology (NTNU)
RP Bajwa, SS (corresponding author), Free Univ Bozen Bolzano, Fac Comp Sci, Bolzano, Bolzano, Italy.
EM bajwa@inf.unibz.it; xiaofeng.wang@unibz.it; anhn@idi.ntnu.no;
   pekkaa@ntnu.no
RI Li, Ye/JBS-2949-2023; Nguyen-Duc, Anh/AAB-5189-2020; li,
   ye/GWN-2672-2022; Hu, Shaolin/N-1791-2018; Wang, Xiaofeng/E-5077-2016;
   Abrahamsson, Pekka/A-5559-2018
OI Nguyen-Duc, Anh/0000-0002-7063-9200; Abrahamsson,
   Pekka/0000-0002-4360-2226
CR [Anonymous], GAMING EMPIRE SUPERC
   [Anonymous], FAILED BY DESIGN
   [Anonymous], REAL HIST TWITT
   [Anonymous], HARVARD BUSINESS REV
   [Anonymous], 2013, 14 famous business pivots
   [Anonymous], 2007, EBSE200701 U DURH DE
   [Anonymous], SEO WARRIOR ESSENTIA
   [Anonymous], 2014, P SEM
   [Anonymous], IEEE SOFTW
   [Anonymous], IEEE T SOFT IN PRESS
   [Anonymous], ENTREPRENEURIAL SUCC
   Blank S., 2013, 4 STEPS EPIPHANY SUC
   Blank S, 2013, HARVARD BUS REV, V91, P64
   Bosch J., 2013, LEAN ENTERPRISE SOFT, V167, DOI [10.1007/978-3-642-44930-7_1, DOI 10.1007/978-3-642-44930-7_1]
   Boslaugh S., 2007, Secondary data sources for public health
   Cruzes DS, 2015, EMPIR SOFTW ENG, V20, P1634, DOI 10.1007/s10664-014-9326-8
   Giardino C., 2015, Key Challenges in Early-Stage Software Startups, P52
   Giardino C, 2014, LECT NOTES BUS INF P, V182, P27
   Linberg KR, 1999, J SYST SOFTWARE, V49, P177, DOI 10.1016/S0164-1212(99)00094-1
   MACMILLAN IC, 1987, J BUS VENTURING, V2, P123, DOI 10.1016/0883-9026(87)90003-6
   Marmer M., 2011, Startup Genome Report 01, A new framework for understanding why startups succeed
   Maurya Ash., 2012, RUNNING LEAN ITERATE
   Mendoza A, 2010, AUSTRALAS J INF SYST, V16
   Nobel C., 2011, Working Knowledge, P1
   Paternoster N, 2014, INFORM SOFTWARE TECH, V56, P1200, DOI 10.1016/j.infsof.2014.04.014
   Ries E., 2011, The lean startup: How today's entrepreneurs use continuous innovation to create radically successful businesses
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Savolainen P, 2012, INT J PROJ MANAG, V30, P458, DOI 10.1016/j.ijproman.2011.07.002
   Shepherd DA, 2009, J BUS VENTURING, V24, P134, DOI 10.1016/j.jbusvent.2007.10.002
   Terho H, 2015, LECT NOTES COMPUT SC, V9459, P555, DOI 10.1007/978-3-319-26844-6_41
   Trzesniewski K.H., 2011, Secondary data analysis: An introduction for psychologists
   Van der Van J. S., 2013, P 8 INT C SOFTW ENG, P310
   Vartanian TP., 2011, SECONDARY DATA ANAL
   Wang XF, 2012, J SYST SOFTWARE, V85, P1287, DOI 10.1016/j.jss.2012.01.061
   Womack J.P., 1990, The Machine That Changed the World Vol. 323 No. 1, pp. 273287
   Yin R.K., 2011, Qualitative research from start to finish
   YIN RK, 1975, ADMIN SCI QUART, V20, P371, DOI 10.2307/2391997
NR 37
TC 63
Z9 72
U1 4
U2 79
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2017
VL 22
IS 5
BP 2373
EP 2408
DI 10.1007/s10664-016-9458-0
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA FE0PC
UT WOS:000407921200004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Martinez, M
   Durieux, T
   Sommerard, R
   Xuan, JF
   Monperrus, M
AF Martinez, Matias
   Durieux, Thomas
   Sommerard, Romain
   Xuan, Jifeng
   Monperrus, Martin
TI Automatic repair of real bugs in java: a large-scale experiment on the
   defects4j dataset
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software repair; Bugs; Defects; Patches; Fixes
AB Defects4J is a large, peer-reviewed, structured dataset of real-world Java bugs. Each bug in Defects4J comes with a test suite and at least one failing test case that triggers the bug. In this paper, we report on an experiment to explore the effectiveness of automatic test-suite based repair on Defects4J. The result of our experiment shows that the considered state-of-the-art repair methods can generate patches for 47 out of 224 bugs. However, those patches are only test-suite adequate, which means that they pass the test suite and may potentially be incorrect beyond the test-suite satisfaction correctness criterion. We have manually analyzed 84 different patches to assess their real correctness. In total, 9 real Java bugs can be correctly repaired with test-suite based repair. This analysis shows that test-suite based repair suffers from under-specified bugs, for which trivial or incorrect patches still pass the test suite. With respect to practical applicability, it takes on average 14.8 minutes to find a patch. The experiment was done on a scientific grid, totaling 17.6 days of computation time. All the repair systems and experimental results are publicly available on Github in order to facilitate future research on automatic repair.
C1 [Martinez, Matias] Univ Valenciennes, Campus Mont Houy, F-59313 Valenciennes, France.
   [Durieux, Thomas; Sommerard, Romain; Monperrus, Martin] Univ Lille, Spirals Team, 40 Ave Halley, F-59650 Villeneuve Dascq, France.
   [Durieux, Thomas; Sommerard, Romain; Monperrus, Martin] INRIA, 40 Ave Halley, F-59650 Villeneuve Dascq, France.
   [Xuan, Jifeng] Wuhan Univ, State Key Lab Software Engn, 299 Bayi Rd, Wuhan 430072, Hubei, Peoples R China.
C3 Universite Polytechnique Hauts-de-France; Universite de Lille; Inria;
   Wuhan University
RP Martinez, M (corresponding author), Univ Valenciennes, Campus Mont Houy, F-59313 Valenciennes, France.
EM matias.martinez@univ-valenciennes.fr; thomas.durieux@inria.fr;
   romain.sommerard@etudiant.univ-lille1.fr; jxuan@whu.edu.cn;
   martin.monperrus@univ-lille1.fr
RI Martinez, Matias/ABA-8871-2021; Durieux, Thomas/AAM-9269-2020;
   Monperrus, Martin/I-3640-2012; Xuan, Jifeng/F-2177-2016
OI Martinez, Matias/0000-0002-2945-866X; Durieux,
   Thomas/0000-0002-1996-6134; Monperrus, Martin/0000-0003-3505-3383; Xuan,
   Jifeng/0000-0002-2968-3496
FU National Natural Science Foundation of China [61502345]
FX This work is partly supported by the National Natural Science Foundation
   of China (under grant 61502345).
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   [Anonymous], P 22 ACM SIGSOFT INT
   [Anonymous], IEEE T SOFT IN PRESS
   Arcuri A, 2008, IEEE C EVOL COMPUTAT, P162, DOI 10.1109/CEC.2008.4630793
   AstorCode, 2016, GITH REP IG JKAL
   Bin Noor T, 2015, 2015 IEEE 1ST INTERNATIONAL WORKSHOP ON SOFTWARE ANALYTICS (SWAN), P13, DOI 10.1109/SWAN.2015.7070482
   Bolze R, 2006, INT J HIGH PERFORM C, V20, P481, DOI 10.1177/1094342006070078
   Cifuentes Cristina, 2009, P 2 INT WORKSHOP DEF, P16, DOI DOI 10.1145/1555860.1555866
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   Debroy Vidroha, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P65, DOI 10.1109/ICST.2010.66
   DeMarco F, 2014, P 6 INT WORKSHOP CON, P30, DOI 10.1145/2593735.2593740
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   ExperimentalData, 2016, GITH REP EXP DAT
   Fry Z.P., 2012, INT S SOFTWARE TESTI, P177, DOI 10.1145/04000800.2336775
   Gopinath D, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P243, DOI 10.1145/2568225.2568303
   Gu Z., 2010, ICSE 10, V1, P55, DOI DOI 10.1145/1806799.1806812
   Nguyen HDT, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P772, DOI 10.1109/ICSE.2013.6606623
   Jha S., 2010, P 32 ACM IEEE INT C, V1, P215, DOI DOI 10.1145/1806799.1806833
   Jin GL, 2011, PLDI 11: PROCEEDINGS OF THE 2011 ACM CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P389
   Jones JA, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P467, DOI 10.1109/ICSE.2002.1007991
   Just R., 2014, 22 INT S FDN SOFTW E
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kong XL, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P194, DOI 10.1109/ISSRE.2015.7381813
   Le Goues C., 2012, IEEE Transactions on Software Engineering, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Long F, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P166, DOI 10.1145/2786805.2786811
   Long F, 2016, ACM SIGPLAN NOTICES, V51, P298, DOI 10.1145/2914770.2837617
   Long F, 2014, ACM SIGPLAN NOTICES, V49, P227, DOI [10.1145/2666356.2594337, 10.1145/2594291.2594337]
   Lu Shan, 2005, P WORKSH EV SOFTW DE
   Martinez M., 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037
   Martinez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P492, DOI 10.1145/2591062.2591114
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Mechtaev S., 2015, P 37 INT C SOFTW ENG
   Menzies T., 2015, The promise repository of empirical software engineering data
   Monperrus M, 2015, HAL01206501 U LILL
   Monperrus M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P234, DOI 10.1145/2568225.2568324
   NopolCode, 2016, GITH REP NOP
   Pei Y, 2014, IEEE T SOFTWARE ENG, V40, P427, DOI 10.1109/TSE.2014.2312918
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi YH, 2013, PROC IEEE INT CONF S, P180, DOI 10.1109/ICSM.2013.29
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Samimi H, 2012, PROC INT CONF SOFTW, P277, DOI 10.1109/ICSE.2012.6227186
   Smith EK, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P532, DOI 10.1145/2786805.2786825
   Tan SH, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P471, DOI 10.1109/ICSE.2015.65
   Tao YD, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P64, DOI 10.1145/2635868.2635873
   Weimer W, 2013, IEEE INT CONF AUTOM, P356, DOI 10.1109/ASE.2013.6693094
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
NR 50
TC 123
Z9 125
U1 0
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2017
VL 22
IS 4
BP 1936
EP 1964
DI 10.1007/s10664-016-9470-4
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FB6ZI
UT WOS:000406290500010
DA 2024-07-18
ER

PT J
AU Kitchenham, B
   Madeyski, L
   Budgen, D
   Keung, J
   Brereton, P
   Charters, S
   Gibbs, S
   Pohthong, A
AF Kitchenham, Barbara
   Madeyski, Lech
   Budgen, David
   Keung, Jacky
   Brereton, Pearl
   Charters, Stuart
   Gibbs, Shirley
   Pohthong, Amnart
TI Robust Statistical Methods for Empirical Software Engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical software engineering; Statistical methods; Robust methods;
   Robust statistical methods
ID NONPARAMETRIC HYPOTHESES; RANK TRANSFORMATIONS; STRUCTURED ABSTRACTS;
   EFFECT SIZE; TESTS; POWER; VARIANCES
AB There have been many changes in statistical theory in the past 30 years, including increased evidence that non-robust methods may fail to detect important results. The statistical advice available to software engineering researchers needs to be updated to address these issues. This paper aims both to explain the new results in the area of robust analysis methods and to provide a large-scale worked example of the new methods. We summarise the results of analyses of the Type 1 error efficiency and power of standard parametric and non-parametric statistical tests when applied to non-normal data sets. We identify parametric and non-parametric methods that are robust to non-normality. We present an analysis of a large-scale software engineering experiment to illustrate their use. We illustrate the use of kernel density plots, and parametric and non-parametric methods using four different software engineering data sets. We explain why the methods are necessary and the rationale for selecting a specific analysis. We suggest using kernel density plots rather than box plots to visualise data distributions. For parametric analysis, we recommend trimmed means, which can support reliable tests of the differences between the central location of two or more samples. When the distribution of the data differs among groups, or we have ordinal scale data, we recommend non-parametric methods such as Cliff's delta or a robust rank-based ANOVA-like method.
C1 [Kitchenham, Barbara; Brereton, Pearl] Keele Univ, Sch Comp & Math, Keele ST5 5BG, Staffs, England.
   [Madeyski, Lech] Wroclaw Univ Sci & Technol, Fac Comp Sci & Management, Wroclaw, Poland.
   [Budgen, David] Univ Durham, Sch Engn & Comp Sci, Durham, England.
   [Keung, Jacky] City Univ Hong Kong, Hong Kong, Hong Kong, Peoples R China.
   [Charters, Stuart; Gibbs, Shirley] Lincoln Univ, Dept Appl Comp, Lincoln, New Zealand.
   [Pohthong, Amnart] Prince Songkla Univ, Hat Yai, Thailand.
C3 Keele University; Wroclaw University of Science & Technology; Durham
   University; City University of Hong Kong; Lincoln University - New
   Zealand; Prince of Songkla University
RP Madeyski, L (corresponding author), Wroclaw Univ Sci & Technol, Fac Comp Sci & Management, Wroclaw, Poland.
EM Lech.Madeyski@pwr.edu.pl
RI Madeyski, Lech/D-4986-2012; Kitchenham, Barbara/AAL-4311-2020; Keung,
   Jacky/X-4693-2019; Keung, Jacky/ABA-7089-2020
OI Madeyski, Lech/0000-0003-3907-3357; Kitchenham,
   Barbara/0000-0002-6134-8460; Keung, Jacky/0000-0002-3803-9600; Budgen,
   David/0000-0001-7143-0241
CR Acion L, 2006, STAT MED, V25, P591, DOI 10.1002/sim.2256
   AGRESTI A, 1986, COMMUN STAT THEORY, V15, P1417, DOI 10.1080/03610928608829193
   AKRITAS MG, 1994, J AM STAT ASSOC, V89, P336, DOI 10.2307/2291230
   Akritas MG, 1997, J AM STAT ASSOC, V92, P258, DOI 10.2307/2291470
   [Anonymous], 1977, Data Analysis and Regression
   [Anonymous], 2022, Introduction to robust estimation and hypothesis testing
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Behrens JT, 1997, PSYCHOL METHODS, V2, P131, DOI 10.1037/1082-989X.2.2.131
   Bergmann R, 2000, AM STAT, V54, P72, DOI 10.2307/2685616
   Boehm BW., 1981, Software Engineering Economics
   Borenstein M., 2009, INTRO METAANALYSIS
   BOX GEP, 1954, ANN MATH STAT, V25, P290, DOI 10.1214/aoms/1177728786
   Braver SL, 2014, PERSPECT PSYCHOL SCI, V9, P333, DOI 10.1177/1745691614529796
   Brunner E, 2002, J STAT PLAN INFER, V108, P37, DOI 10.1016/S0378-3758(02)00269-0
   Budgen David, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P143, DOI 10.1109/ESEM.2013.12
   Budgen D, 2008, EMPIR SOFTW ENG, V13, P435, DOI 10.1007/s10664-008-9075-7
   Budgen D, 2011, EMPIR SOFTW ENG, V16, P244, DOI 10.1007/s10664-010-9139-3
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   COHEN J, 1992, PSYCHOL BULL, V112, P155, DOI 10.1037/0033-2909.112.1.155
   Cohen J., 1988, STAT POWER ANAL BEHA
   CONOVER WJ, 1981, AM STAT, V35, P124, DOI 10.2307/2683975
   DAGOSTINO RB, 1990, AM STAT, V44, P316, DOI 10.2307/2684359
   Dejaeger K, 2012, IEEE T SOFTWARE ENG, V38, P375, DOI 10.1109/TSE.2011.55
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   El-Attar Mohamed, 2012, Journal of Software, V7, P2538, DOI 10.4304/jsw.7.11.2538-2552
   El-Attar M, 2014, J SYST SOFTWARE, V87, P104, DOI 10.1016/j.jss.2013.10.017
   Erceg-Hurn DM, 2008, AM PSYCHOL, V63, P591, DOI 10.1037/0003-066X.63.7.591
   Gandrud Christopher., 2015, Reproducible Research with R and RStudio, p294. isbn
   Goodall C., 1983, Understaning Robust and Exploratory Data Analysis, P339
   Grissom RJ, 1996, J CONSULT CLIN PSYCH, V64, P973, DOI 10.1037/0022-006X.64.5.973
   Hoaglin D. C., 1983, Understanding Robust and Exploratory Data Analysis
   Huijgens H, 2013, TUDSERG2013019 DELFT
   John LK, 2012, PSYCHOL SCI, V23, P524, DOI 10.1177/0956797611430953
   Jureczko M, 2015, E-INFORMATICA, V9, P21, DOI 10.5277/e-Inf150102
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kitchenham B, 1983, P ICSE 15, P477
   Kitchenham B, 2015, P 19 INT C EV ASS SO, V1, DOI [10.1145/2745802.2747956, DOI 10.1145/2745802.2747956]
   Kitchenham BarbaraA., 1996, Software metrics: measurement for software process improvement
   Kraemer HC, 2006, BIOL PSYCHIAT, V59, P990, DOI 10.1016/j.biopsych.2005.09.014
   Kromrey JD, 2005, P JOINT STAT M MINN
   Lipsey M. W., 2001, PRACTICAL METAANALYS, DOI DOI 10.1016/J.AUTNEU.2007.06.087
   Madeyski L, 2015, REPRODUCER REPRODUCE
   Madeyski L, 2012, APPENDIX PAPER OVERC
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   Madeyski L, 2014, IEEE T SOFTWARE ENG, V40, P23, DOI 10.1109/TSE.2013.44
   Madeyski L, 2010, TEST-DRIVEN DEVELOPMENT, P197, DOI 10.1007/978-3-642-04288-1_10
   MICCERI T, 1989, PSYCHOL BULL, V105, P156, DOI 10.1037/0033-2909.105.1.156
   Mudholkar GS, 2002, J STAT PLAN INFER, V104, P485, DOI 10.1016/S0378-3758(01)00253-1
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Price RM, 2001, J STAT COMPUT SIM, V68, P295, DOI 10.1080/00949650108812071
   Ramsey P., 1980, J ED STAT, V5, P337, DOI DOI 10.3102/10769986005004337
   Razali N. M., 2011, J. Stat. Model. and Anal., V2, P21, DOI DOI 10.1515/BILE-2015-0008
   Shadish W. R., 2002, EXPT QUASI EXPT DESI
   SHAPIRO SS, 1968, J AM STAT ASSOC, V63, P1343, DOI 10.2307/2285889
   SHROUT PE, 1979, PSYCHOL BULL, V86, P420, DOI 10.1037/0033-2909.86.2.420
   Stout D.E., 1995, Journal of Accounting Education, V13, P281, DOI DOI 10.1016/0748-5751(95)00010-J
   Tappenden AF, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559936
   Tian T, 2007, J MOD APPL STAT METH, V6, P331, DOI 10.22237/jmasm/1177993800
   Urdan T.C., 2005, Statistics in plain English, V2nd
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Viechtbauer W, 2010, J STAT SOFTW, V36, P1, DOI 10.18637/jss.v036.i03
   Welch BL, 1938, BIOMETRIKA, V29, P350, DOI 10.1093/biomet/29.3-4.350
   Whigham PA, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2738037
   Wilcox RR, 2003, PSYCHOL METHODS, V8, P254, DOI 10.1037/1082-989X.8.3.254
   Wilcox RR, 1998, AM PSYCHOL, V53, P300, DOI 10.1037/0003-066X.53.3.300
   YUEN KK, 1974, BIOMETRIKA, V61, P165, DOI 10.2307/2334299
   Zimmerman DW, 2000, J GEN PSYCHOL, V127, P354, DOI 10.1080/00221300009598589
   ZIMMERMAN DW, 1993, CAN J EXP PSYCHOL, V47, P523, DOI 10.1037/h0078850
NR 70
TC 124
Z9 129
U1 2
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2017
VL 22
IS 2
BP 579
EP 630
DI 10.1007/s10664-016-9437-5
PG 52
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA ES9PL
UT WOS:000399891400001
OA Green Accepted, Green Published
DA 2024-07-18
ER

PT J
AU Alnaeli, SM
   Maletic, JI
   Collard, ML
AF Alnaeli, Saleh M.
   Maletic, Jonathan I.
   Collard, Michael L.
TI An empirical examination of the prevalence of inhibitors to the
   parallelizability of open source software systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Parallelization inhibitors; Data dependency; Function calls; Function
   pointers; Virtual functions; Empirical study
AB An empirical study is presented that examines the potential to parallelize general-purpose software systems. The study is conducted on 13 open source systems comprising over 14 MLOC. Each for-loop is statically analyzed to determine if it can be parallelized or not. A for-loop that can be parallelized is termed a free-loop. Free-loops can be easily parallelized using tools such as OpenMP. For the loops that cannot be parallelized, the various inhibitors to parallelization are determined and tabulated. The data shows that the most prevalent inhibitor by far, is functions called within for-loops that have side effects. This single inhibitor poses the greatest challenge in adapting and re-engineering systems to better utilize modern multi-core architectures. This fact is somewhat contradictory to the literature, which is primarily focused on the removal of data dependencies within loops. Results of this paper also show that function calls via function pointers and virtual methods have very little impact on the for-loop parallelization process. Historical data over a 10-year period of inhibitor counts for the set of systems studied is also presented. It shows that there is little change in the potential for parallelization of loops over time.
C1 [Alnaeli, Saleh M.; Maletic, Jonathan I.] Kent State Univ, Kent, OH 44240 USA.
   [Collard, Michael L.] Univ Akron, Akron, OH 44325 USA.
C3 University System of Ohio; Kent State University; Kent State University
   Salem; Kent State University Kent; University System of Ohio; University
   of Akron
RP Maletic, JI (corresponding author), Kent State Univ, Kent, OH 44240 USA.
EM salnaeli@kent.edu; jmaletic@kent.edu; collard@uakron.edu
FU US National Science Foundation [CNS 13-05292/05217]; Direct For Computer
   & Info Scie & Enginr; Division Of Computer and Network Systems [1305217,
   1305292] Funding Source: National Science Foundation
FX This work was supported in part by a grant from the US National Science
   Foundation CNS 13-05292/05217.
CR Alnaeli S. M., 2012, P 2012 19 WORK C REV
   Alomari H W, 2014, J SOFTW EVOL PROCESS
   [Anonymous], 26 IEEE INT C SOFTW
   [Anonymous], AUTOMATIC PARALLELIZ
   [Anonymous], AUT PAR INT COMP
   Bacon DF, 1996, ACM SIGPLAN NOTICES, V31, P324, DOI 10.1145/236338.236371
   Banerjee U.K., 1988, Dependence Analysis for Supercomputing
   Banning J.P., 1979, Proceedings of the 6th ACM SIGACT-SIGPLAN symposium on Principles of programming languages, P29, DOI [10.1145/567752.567756., DOI 10.1145/567752.567756]
   Barney B., 2012, Introduction to parallel computing
   Bik AJC, 1997, CONCURRENCY-PRACT EX, V9, P579, DOI 10.1002/(SICI)1096-9128(199706)9:6<579::AID-CPE309>3.0.CO;2-G
   Bliss N., 2007, Lincoln Laboratory Journal, V17, P12
   Calder B., 1994, Conference Record of POPL '94: 21st ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages, P397, DOI 10.1145/174675.177973
   Cheng B.-C., 2000, Languages and Compilers for Parallel Computing. 12th International Workshop, LCPC'99. Proceedings (Lecture Notes in Computer Science Vol.1863), P490
   Collard ML, 2011, IEEE INT WORK C SO, P173, DOI 10.1109/SCAM.2011.19
   Collard ML, 2003, PROG COMPREHEN, P134
   Collard ML, 2002, P ACM S DOC ENG, V8
   Dean J, 1995, LECT NOTES COMPUT SC, V952, P77, DOI 10.1007/3-540-49538-x_5
   Dig D., 2009, Proceedings of the 24th ACM SIGPLAN Conference Companion on Object Oriented Programming Systems Languages and Applications, P793
   Dijkstra E., 1979, Classics in software engineering (incoll), P27
   Dragan N, 2009, P IEEE INT C SOFTW M
   EMAMI M, 1994, SIGPLAN NOTICES, V29, P242, DOI 10.1145/773473.178264
   Ghezzi C., 1982, Programming language concepts
   GOFF G, 1991, SIGPLAN NOTICES, V26, P15, DOI 10.1145/113446.113448
   Group TP, 2012, PAR FORTR C C COMP
   Grove D, 1997, ACM SIGPLAN NOTICES, V32, P108, DOI 10.1145/263700.264352
   Hennessy J.L., 2006, Computer Architecture: A Quantitative Approach'', V4th
   Jacobson T., 2003, DEPENDENCY ANALYSIS OF FOR-LOOP STRUCTURES FOR AUTOMATIC PARALLELIZATION OF C CODE Abstract
   Kennedy Ken., 2002, Optimizing compilers for modern architectures: a dependence-based approach
   Kim M., 2010, 2 USENIX WORKSH HOT
   KONG XY, 1991, IEEE T PARALL DISTR, V2, P342, DOI 10.1109/71.86109
   Kulkarni D., 1993, Loop and Data Transformations: A Tutorial
   MAYDAN DE, 1991, SIGPLAN NOTICES, V26, P1, DOI 10.1145/113446.113447
   Mock M, 2005, IEEE T SOFTWARE ENG, V31, P657, DOI 10.1109/TSE.2005.94
   Muth R., 1997, TAPSOFT '97: Theory and Practice of Software Development. 7th International Joint Conference CAAP/FASE. Proceedings, P381, DOI 10.1007/BFb0030612
   Nadgir N., 2001, Using OpenMP to Parallelize a Program
   Nikolopoulos D.S., 2001, ICS '01, P15
   Novillo D, 2006, P GCC DEV SUMM C
   Oracle, 2010, SUBPR CALL LOOP
   Orso A, 2004, ACM T SOFTW ENG METH, V13, P199, DOI 10.1145/1018210.1018212
   Petersen P., 1991, EXPT EVALUATION SOME
   Petersen P.M., 1993, C P, P107
   Petersen PM, 1996, IEEE T PARALL DISTR, V7, P1121, DOI 10.1109/71.544354
   Psarris K., 1999, 1999 International Conference on Parallel Architectures and Compilation Techniques (Cat. No.PR00425), P264, DOI 10.1109/PACT.1999.807571
   Pugh William., 1991, SUPERCOMPUTING 91, P4, DOI DOI 10.1145/125826.125848
   Shah Anand RBG, 1995, LCSRTR244
   Spuler D.A., 1994, Compiler Detection of Function Call Side Effects
   Sundaresan V, 2000, ACM SIGPLAN NOTICES, V35, P264, DOI 10.1145/354222.353189
   WILSON RP, 1994, SIGPLAN NOTICES, V29, P31, DOI 10.1145/193209.193217
   Zhang S., 1994, Complexity of single level function pointer aliasing analysis
NR 49
TC 5
Z9 5
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2016
VL 21
IS 3
BP 1272
EP 1301
DI 10.1007/s10664-015-9385-5
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VO
UT WOS:000379061700016
DA 2024-07-18
ER

PT J
AU Baysal, O
   Kononenko, O
   Holmes, R
   Godfrey, MW
AF Baysal, Olga
   Kononenko, Oleksii
   Holmes, Reid
   Godfrey, Michael W.
TI Investigating technical and non-technical factors influencing modern
   code review
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code review; collaboration; technical and non-technical factors;
   personal and organizational aspects; WebKit; Blink
AB When submitting patches for code review, individual developers are primarily interested in maximizing the chances of their patch being accepted in the least time possible. In principle, code review is a transparent process in which reviewers aim to assess the qualities of the patch on its technical merits in a timely manner; however, in practice the execution of this process can be affected by a variety of factors, some of which are external to the technical content of the patch itself. In this paper, we describe empirical studies of the code review processes for large, open source projects such as WebKit and Google Blink. We first consider factors that have been examined in previous studies patch size, priority, and component-and then extend our enquiries to explore the effects of organization (which company is involved) and developer profile (review load and activity, patch writer experience) on code review response time and eventual outcome. Our approach uses a reverse engineered model of the patch submission process, and extracts key information from the issue-tracking and code review systems. Our findings suggest that these non-technical factors can significantly impact code review outcomes.
C1 [Baysal, Olga] Univ Montreal, Dept Comp Sci & Operat Res, Montreal, PQ, Canada.
   [Kononenko, Oleksii; Holmes, Reid; Godfrey, Michael W.] Univ Waterloo, David R Cheriton Sch Comp Sci, Waterloo, ON, Canada.
C3 Universite de Montreal; University of Waterloo
RP Baysal, O (corresponding author), Univ Montreal, Dept Comp Sci & Operat Res, Montreal, PQ, Canada.
EM olga.baysal@umontreal.ca; okononen@uwaterloo.ca; rtholmes@uwaterloo.ca;
   migod@uwaterloo.ca
RI Godfrey, Michael W/A-1068-2008
CR [Anonymous], 2006, Nonparametrics: Statistical Methods Based on Ranks
   [Anonymous], 2008, Proceedings of the 2008 international working conference on Mining software repositories
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Baysal O., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P447, DOI 10.1109/WCRE.2012.54
   Baysal O., 2012, CS201210 U WAT
   Baysal O, 2013, WORK CONF REVERSE EN, P122, DOI 10.1109/WCRE.2013.6671287
   Beller M., 2014, 11 WORK C MIN SOFTW, P202, DOI DOI 10.1145/2597073.2597082
   CONWAY ME, 1968, DATAMATION, V14, P28
   Herraiz I., 2008, Proceedings of the 2008 International Working Conference on Mining Software Repositories. MSR'08, P145
   Jiang Y., 2013, P 10 IEEE WORK C MIN
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   MASSEY FJ, 1951, J AM STAT ASSOC, V46, P68, DOI 10.2307/2280095
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Protalinski E, 2013, OPERA CONFIRMS IT WI
   Rigby P. C., 2006, DCS305IR U VICT
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
NR 16
TC 49
Z9 56
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2016
VL 21
IS 3
BP 932
EP 959
DI 10.1007/s10664-015-9366-8
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VO
UT WOS:000379061700007
DA 2024-07-18
ER

PT J
AU German, DM
   Adams, B
   Hassan, AE
AF German, Daniel M.
   Adams, Bram
   Hassan, Ahmed E.
TI Continuously mining distributed version control systems: an empirical
   study of how Linux uses Git
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mining software repositories; Distributed version control; Rebasing;
   Empirical software engineering; Measuring bias; Linux; Open source
   development
AB Distributed version control systems (D-VCSs - such as git and mercurial) and their hosting services (such as Github and Bitbucket) have revolutionalized the way in which developers collaborate by allowing them to freely exchange and integrate code changes in a peer-to-peer fashion. However, this flexibility comes at a price: code changes are hard to track because of the proliferation of code repositories and because developers modify ("rebase") and filter ("cherry-pick") the history of these changes to streamline their integration into the repositories of other developers. As a consequence, researchers and practitioners, who typically only consider the (cleaned up) history in the official project repository, are unaware of important elements and activities in the collaborative software development process. In this paper, we present a method that continuously mines all known D-VCSs of a software project to uncover the complete development history of a project. We use this method to (1) show the divergence between the code development history in the official Linux kernel repository and the complete kernel development history, and (2) to investigate the characteristics of the ecosystem of git repositories of the Linux kernel. Finally, we discuss how continuous mining could be adopted by current D-VCS hosting services.
C1 [German, Daniel M.] Univ Victoria, Victoria, BC, Canada.
   [Adams, Bram] Polytech Montreal, Montreal, PQ, Canada.
   [Hassan, Ahmed E.] Queens Univ, Kingston, ON, Canada.
C3 University of Victoria; Universite de Montreal; Polytechnique Montreal;
   Queens University - Canada
RP German, DM (corresponding author), Univ Victoria, Victoria, BC, Canada.
EM dmgerman@uvic.ca; bram.adams@polymtl.ca; ahmed@cs.queensu.ca
RI Ali, Ahmed/HOF-4672-2023; Hassan, Ahmed/AAB-7241-2019; KHALIFA, AHMED
   khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Adams,
   Bram/0000-0001-7213-4006
CR [Anonymous], 2008, Proceedings of the 2008 international working conference on Mining software repositories
   Antoniol Giuliano, 2008, P 2008 C CTR ADV STU
   Barr ET, 2012, LECT NOTES COMPUT SC, V7212, P316, DOI 10.1007/978-3-642-28872-2_22
   Baysal O., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P98, DOI 10.1109/MSR.2012.6224305
   Bird C., 2012, P ACM SIGSOFT 20 INT, P1, DOI [10.1145/2393596.2393648, DOI 10.1145/2393596.2393648]
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bird Christian, 2006, P MSR, P137, DOI DOI 10.1145/1137983.1138016
   Black Duck Inc, 2013, TOOLS COMP REP
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Chacon Scott., 2009, Pro Git, V1st, DOI DOI 10.1016/j.rse.2010.01.021
   Chapman D, 2011, GUIDE KERNEL DEV PRO
   Corbet J, 2005, KERNEL BITKEEPER PAR
   Corbet J, 2008, LINUX NEXT PATCH MAN
   Corbet J., 2008, PARTICIPATE LINUX CO
   Corbet J., 2013, Linux kernel development: How fast it is going, who is doing it, what they are doing, and who is sponsoring it, V2013
   Dhaliwal T, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P202, DOI 10.1109/ICSM.2012.6405273
   Feng Zhang, 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P456, DOI 10.1109/WCRE.2012.55
   Gousios G, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P345, DOI 10.1145/2568225.2568260
   Hassan AE, 2008, APPLIED COMPUTING 2008, VOLS 1-3, P837
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Jiang YJ, 2013, IEEE WORK CONF MIN S, P101, DOI 10.1109/MSR.2013.6624016
   Kalliamvakou E., 2014, P 11 WORKING C MININ, P92, DOI DOI 10.1145/2597073.2597074
   Kawrykow D, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P351, DOI 10.1145/1985793.1985842
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kroah-Hartman G., 2010, ANDROID LINUX KERNEL
   Lee T., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P311
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Nguyen T. H. D., 2010, Proceedings 17th Working Conference on Reverse Engineering (WCRE 2010), P259, DOI 10.1109/WCRE.2010.37
   Parnin C, 2011, SOFTWARE QUAL J, V19, P5, DOI 10.1007/s11219-010-9104-9
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Robbes R, 2007, INT C PROGRAM COMPRE, P155
   Shihab E, 2012, INT SYMP EMP SOFTWAR, P301, DOI 10.1145/2372251.2372305
   Tian Y, 2012, PROC INT CONF SOFTW, P386, DOI 10.1109/ICSE.2012.6227176
   Zou LJ, 2006, WORK CONF REVERSE EN, P71
NR 35
TC 22
Z9 26
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2016
VL 21
IS 1
BP 260
EP 299
DI 10.1007/s10664-014-9356-2
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI2SQ
UT WOS:000373349300009
DA 2024-07-18
ER

PT J
AU Ryu, D
   Choi, O
   Baik, J
AF Ryu, Duksan
   Choi, Okjoo
   Baik, Jongmoon
TI Value-cognitive boosting with a support vector machine for cross-project
   defect prediction
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Boosting; Class imbalance; Cross-project defect prediction; Transfer
   learning
ID SOFTWARE; AREA
AB It is well-known that software defect prediction is one of the most important tasks for software quality improvement. The use of defect predictors allows test engineers to focus on defective modules. Thereby testing resources can be allocated effectively and the quality assurance costs can be reduced. For within-project defect prediction (WPDP), there should be sufficient data within a company to train any prediction model. Without such local data, cross-project defect prediction (CPDP) is feasible since it uses data collected from similar projects in other companies. Software defect datasets have the class imbalance problem increasing the difficulty for the learner to predict defects. In addition, the impact of imbalanced data on the real performance of models can be hidden by the performance measures chosen. We investigate if the class imbalance learning can be beneficial for CPDP. In our approach, the asymmetric misclassification cost and the similarity weights obtained from distributional characteristics are closely associated to guide the appropriate resampling mechanism. We performed the effect size A-statistics test to evaluate the magnitude of the improvement. For the statistical significant test, we used Wilcoxon rank-sum test. The experimental results show that our approach can provide higher prediction performance than both the existing CPDP technique and the existing class imbalance technique.
C1 [Ryu, Duksan; Choi, Okjoo; Baik, Jongmoon] Korea Adv Inst Sci & Technol, Dept Comp Sci, 291 Daehak Ro,373-1 Guseong Dong, Taejon 305701, South Korea.
C3 Korea Advanced Institute of Science & Technology (KAIST)
RP Ryu, D (corresponding author), Korea Adv Inst Sci & Technol, Dept Comp Sci, 291 Daehak Ro,373-1 Guseong Dong, Taejon 305701, South Korea.
EM dsryu@kaist.ac.kr; okjoo.choi@kaist.ac.kr; jbaik@kaist.ac.kr
RI Baik, Jongmoon/C-1780-2011; Ryu, Duksan/AAY-6819-2020
OI Ryu, Duksan/0000-0002-9556-0873
FU National Research Foundation of Korea (NRF) grant - Korea government
   (MSIP) [NRF-2013R1A1A2006985]
FX This work was supported by a National Research Foundation of Korea (NRF)
   grant funded by the Korea government (MSIP) (No. NRF-2013R1A1A2006985).
CR [Anonymous], NASA MDP SOFTWARE DE
   [Anonymous], 2013, P 9 INT C PRED MOD S, DOI DOI 10.1145/2499393.2499394
   [Anonymous], SOFTWARE DEFECT PRED
   [Anonymous], AUTOMAT SOFTW ENG
   [Anonymous], STABILITY SOFTWARE D
   Arcuri A, 2011, LECT NOTES COMPUT SC, V6956, P33, DOI 10.1007/978-3-642-23716-4_6
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Bradley AP, 1997, PATTERN RECOGN, V30, P1145, DOI 10.1016/S0031-3203(96)00142-2
   Chang CJ, 2013, MATH PROBL ENG, V2013, DOI 10.1155/2013/526806
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Dejaeger K, 2013, IEEE T SOFTWARE ENG, V39, P237, DOI 10.1109/TSE.2012.20
   Elish KO, 2008, J SYST SOFTWARE, V81, P649, DOI 10.1016/j.jss.2007.07.040
   Gray D, 2009, COMM COM INF SC, V43, P223
   Haibo He, 2009, IEEE Transactions on Knowledge and Data Engineering, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hand DJ, 2009, MACH LEARN, V77, P103, DOI 10.1007/s10994-009-5119-5
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Hsu Chin-Wei, 2010, Technical Report
   Kim S, 2008, IEEE T SOFTWARE ENG, V34, P181, DOI 10.1109/TSE.2007.70773
   Kim S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P481, DOI 10.1145/1985793.1985859
   Kullback Solomon, 1951, ANN MATH STAT, P4
   Lee T., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering, P311
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Mende T., 2009, P 5 INT C PREDICTOR, P1, DOI [10.1145/1540438.1540448, DOI 10.1145/1540438.1540448]
   Menzies T., 2012, The PROMISE Repository of empirical software engineering data
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Premraj R, 2011, INT SYMP EMP SOFTWAR, P215, DOI 10.1109/ESEM.2011.30
   Ren JS, 2014, J APPL MATH, DOI 10.1155/2014/785435
   Shatnawi R, 2008, J SYST SOFTWARE, V81, P1868, DOI 10.1016/j.jss.2007.12.794
   Singh Y, 2010, SOFTWARE QUAL J, V18, P3, DOI 10.1007/s11219-009-9079-6
   Tan Pang-Ning., 2005, Journal of School Psychology, V19, P51
   Thomas Zimmermann., 2009, P THE 7 JOINT M EURO, P91, DOI DOI 10.1145/1595696.1595713
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang BX, 2010, KNOWL INF SYST, V25, P1, DOI 10.1007/s10115-009-0198-y
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Zheng J, 2010, EXPERT SYST APPL, V37, P4537, DOI 10.1016/j.eswa.2009.12.056
NR 43
TC 133
Z9 147
U1 1
U2 15
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2016
VL 21
IS 1
BP 43
EP 71
DI 10.1007/s10664-014-9346-4
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DI2SQ
UT WOS:000373349300003
DA 2024-07-18
ER

PT J
AU Bass, JM
AF Bass, Julian M.
TI How product owner teams scale agile methods to large distributed
   enterprises
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Agile software development; Scrum; Large scale offshore enterprise
   development programmes; Product owner; Product owner teams; Grounded
   theory
ID SOFTWARE-DEVELOPMENT; COMMUNICATION; SCRUM
AB Software development teams in large scale offshore enterprise development programmes are often under intense pressure to deliver high quality software within challenging time contraints. Project failures can attract adverse publicity and damage corporate reputations. Agile methods have been advocated to reduce project risks, improving both productivity and product quality. This article uses practitioner descriptions of agile method tailoring to explore large scale offshore enterprise development programmes with a focus on product owner role tailoring, where the product owner identifies and prioritises customer requirements. In globalised projects, the product owner must reconcile competing business interests, whilst generating and then prioritising large numbers of requirements for numerous development teams. The study comprises eight international companies, based in London, Bangalore and Delhi. Interviews with 46 practitioners were conducted between February 2010 and May 2012. Grounded theory was used to identify that product owners form into teams. The main contribution of this research is to describe the nine product owner team functions identified: groom, prioritiser, release master, technical architect, governor, communicator, traveller, intermediary and risk assessor. These product owner functions arbitrate between conflicting customer requirements, approve release schedules, disseminate architectural design decisions, provide technical governance and propogate information across teams. The functions identified in this research are mapped to a scrum of scrums process, and a taxonomy of the functions shows how focusing on either decision-making or information dissemination in each helps to tailor agile methods to large scale offshore enterprise development programmes.
C1 Robert Gordon Univ, Sch Comp Sci & Digital Media, Aberdeen AB10 7GJ, Scotland.
C3 Robert Gordon University
RP Bass, JM (corresponding author), Robert Gordon Univ, Sch Comp Sci & Digital Media, Garthdee Rd, Aberdeen AB10 7GJ, Scotland.
EM j.m.bass@rgu.ac.uk
RI Bass, Julian Michael/B-2636-2010
OI Bass, Julian Michael/0000-0002-0570-7086
FU UK Deputy High Commission, Bangalore, Science and Innovation Network;
   Institute for Innovation, Design & Sustainability (IDEAS) at Robert
   Gordon University, UK
FX The anonymous reviewers are thanked for their detailed comments, which
   have substantially improved the clarity of the article. I am also
   grateful to all the companies and interviewees who were generous enough
   to contribute their time and resources to participate in this research.
   Thanks also go to the current and former students of the Executive MBA
   at the Indian Institute of Management, Bangalore, who helped to identify
   target companies. The research benefited in part from travel funding
   from the UK Deputy High Commission, Bangalore, Science and Innovation
   Network; the Institute for Innovation, Design & Sustainability (IDEAS)
   at Robert Gordon University, UK; and accommodation and sustenance from
   Company H during the data collection visit to Delhi, India.
CR Ambler SW, 2008, LECT NOTES COMPUT SC, V5082, P1
   [Anonymous], NVIVO 9
   [Anonymous], 2007, Scaling Software Agility: Best Practices for Large Enterprises
   [Anonymous], 2004, XP Ser
   [Anonymous], 40 ANN HAW INT C SYS
   [Anonymous], 2007, Thematic coding and categorizing
   [Anonymous], 2012, Disciplined agile delivery: A practitioner's guide to agile software delivery in the enterprise
   [Anonymous], 2012, BBC
   [Anonymous], QUALITATIVE DATA ANA
   [Anonymous], 1999, DISCOV GROUNDED THEO
   [Anonymous], DWP WRITES OFF MILLI
   [Anonymous], 2012, COMPUTER WEEKLY
   [Anonymous], SFIA SKILLS FRAM INF
   Balijepally V, 2009, MIS QUART, V33, P91
   Begel Andrew, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P255
   Chow T, 2008, J SYST SOFTWARE, V81, P961, DOI 10.1016/j.jss.2007.08.020
   Coad P., 1999, Java modeling in color With UML: enterprise components and process
   Cockburn A., 2002, AGILE SOFTWARE DEV
   Cohn Mike, 2009, Succeeding with Agile: Software Development Using Scrum, V1st
   Cusumano MA, 2007, COMMUN ACM, V50, P15, DOI 10.1145/1290958.1290979
   de Cesare S, 2010, COMMUN ACM, V53, P126, DOI 10.1145/1743546.1743580
   Franca A.C., 2010, Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, P1, DOI DOI 10.1145/1852786.1852835
   Glaser B.G., 1998, DOING GROUNDED THEOR
   Glaser Barney G., 1992, Basic of grounded theory analysis: emergence vs. forcing
   Hannay JE, 2010, IEEE T SOFTWARE ENG, V36, P61, DOI 10.1109/TSE.2009.41
   Hannay JoE., 2010, Proceedings of the 2010 ACM-IEEE International Symposium on Empirical Software Engineering and Measurement, p15:1, DOI [DOI 10.1145/1852786.1852806, 10.1145/1852786.1852806]
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Hoda R., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P285, DOI [10.1145/1806799.1806843, DOI 10.1145/1806799.1806843]
   Hoda R, 2012, EMPIR SOFTW ENG, V17, P609, DOI 10.1007/s10664-011-9161-0
   Hoda R, 2011, INFORM SOFTWARE TECH, V53, P521, DOI 10.1016/j.infsof.2010.10.009
   Hossain E, 2009, INT CONF GLOBAL SOFT, P175, DOI 10.1109/ICGSE.2009.25
   Hove S. E., 2005, Experiences from conducting semi-structured interviews in empirical software engineering research. Paper presented at: IEEE International Software Metrics Symposium (METRICS), P10, DOI DOI 10.1109/METRICS.2005.24
   Jalali S., 2010, Proceedings of the 2010 Fifth IEEE International Conference Global Software Engineering (ICGSE 2010), P45, DOI 10.1109/ICGSE.2010.14
   Ktata O., 2009, PROCEEDING C3S2E 09, P59
   Kvale S., 2009, INTERVIEWS LEARNING
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   Larman C., 2008, Scaling Lean and Agile Development: Thinking and Organizational Tools for Large-Scale Scrum
   Lui KM, 2008, IEEE T SOFTWARE ENG, V34, P197, DOI 10.1109/TSE.2007.70755
   Martin A. M., 2009, THESIS VICTORIA U WE
   Martin A, 2009, AGILE 2009 CONFERENCE, P57, DOI 10.1109/AGILE.2009.70
   Martin A, 2009, AGILE 2009 CONFERENCE, P33, DOI 10.1109/AGILE.2009.68
   Mens T, 2004, IEEE T SOFTWARE ENG, V30, P126, DOI 10.1109/TSE.2004.1265817
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Monteiro CVF, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P16
   Paasivaara M., 2012, 2012 7th IEEE International Conference on Global Software Engineering (ICGSE 2012), P174, DOI 10.1109/ICGSE.2012.41
   Paasivaara Maria, 2008, Software Process: Improvement and Practice, V13, P527, DOI 10.1002/spip.402
   Paasivaara M, 2012, INT SYMP EMP SOFTWAR, P235, DOI 10.1145/2372251.2372294
   Patton M. Q., 2002, QUALITATIVE RES EVAL, V3rd
   Pikkarainen M, 2008, EMPIR SOFTW ENG, V13, P303, DOI 10.1007/s10664-008-9065-9
   Poppendieck M., 2003, Lean Software Development: An Agile Tollkit
   Raithatha D, 2007, LECT NOTES COMPUT SC, V4536, P184
   Ramesh B, 2006, COMMUN ACM, V49, P41, DOI 10.1145/1164394.1164418
   Reifer DJ, 2003, IEEE SOFTWARE, V20, P12, DOI 10.1109/MS.2003.1207448
   Robson C., 2002, Real World Research, V2nd
   Schwaber K., 2001, Agile software development with scrum
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   Shull F, 2009, IEEE SOFTWARE, V26, P6, DOI 10.1109/MS.2009.145
   Stapleton J., 1997, DSDM DYNAMIC SYSTEMS
   van Waardenburg G, 2013, INFORM SOFTWARE TECH, V55, P2154, DOI 10.1016/j.infsof.2013.07.012
   Weiss R.S., 1994, Learning From Strangers: The Art and Method of Qualitative Interview Studies
   Wilkerson JW, 2012, IEEE T SOFTWARE ENG, V38, P547, DOI 10.1109/TSE.2011.46
   Yin R.K., 2014, Applications of case study research, V2nd
NR 64
TC 55
Z9 63
U1 16
U2 103
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2015
VL 20
IS 6
BP 1525
EP 1557
DI 10.1007/s10664-014-9322-z
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT7YX
UT WOS:000363032900004
DA 2024-07-18
ER

PT J
AU McZara, J
   Sarkani, S
   Holzer, T
   Eveleigh, T
AF McZara, Jason
   Sarkani, Shahryar
   Holzer, Thomas
   Eveleigh, Timothy
TI Software requirements prioritization and selection using linguistic
   tools and constraint solvers-a controlled experiment
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Requirements prioritization; Requirements engineering; Release planning;
   NLP; SMT solver; Controlled experiment
ID COST; MANAGEMENT; ART
AB Implementing the entire set of requirements for a software system is often not feasible owing to time and resource limitations. A key driver for successful delivery of any software system is the ability to prioritize the large number of requirements. Prioritization of requirements is a key challenge because current methods are not scalable to handle a realistic number of requirements. Current methods for requirements prioritization in market-driven software development projects are neither sufficient nor proven. A prioritization technique that is more time-efficient, accurate, and easier to implement for large-scale projects than current practices is needed. We address these challenges with a prioritization method that incorporates the use of a linguistic tool and constraint solver. In this paper we propose a method, referred to as SNIPR, for requirements prioritization and selection based on natural language processing and satisfiability modulo theories solvers. We present a controlled experiment in which 40 systems engineers prioritized and selected 20 requirements from a list of 100 using SNIPR and the weighted sum model. Results show that the SNIPR method consumes less time, improves selection accuracy, and is easier to perform than the weighted sum model. These results motivate further research using linguistic tools and constraint solvers for the prioritization of large sets of requirements.
C1 [McZara, Jason; Sarkani, Shahryar; Holzer, Thomas; Eveleigh, Timothy] George Washington Univ, Dept Engn Management & Syst Engn, Washington, DC 20052 USA.
C3 George Washington University
RP McZara, J (corresponding author), George Washington Univ, Dept Engn Management & Syst Engn, Washington, DC 20052 USA.
EM mczara@gwmail.gwu.edu; emseor2003@yahoo.com; holzert@gwu.edu;
   eveleigh@gwu.edu
CR ABRAN A, 2001, SWEBOK GUIDE SOFTWAR
   Afshari A., 2010, International Journal of Innovation and Technology Management, V1, P511, DOI DOI 10.7763/IJIMT.2010.V1.89
   Ahl A, 2005, THESIS BLEKINGE I TE
   Aho A. V., 1983, DATA STRUCTURES ALGO
   [Anonymous], 1997, Technical Report
   [Anonymous], 2006, YICES SMT SOLVER
   [Anonymous], P 8 INT WORKSH REQ E
   [Anonymous], 1997, Requirements engineering: a good practice guide
   [Anonymous], 2008, P 2008 2 INT WORKSH
   [Anonymous], 1993, 1 IEEE INT S REQUIRE
   Assaad M., 2010, SOI C SOI 2010 IEEE, P1, DOI DOI 10.1109/ICIET.2010.5625687
   Aurum A, 2003, INFORM SOFTWARE TECH, V45, P945, DOI 10.1016/S0950-5849(03)00096-X
   Avesani P, 2005, 13th IEEE International Conference on Requirements Engineering, Proceedings, P297, DOI 10.1109/RE.2005.30
   Avesani P., 2004, P 16 INT C SOFTW ENG, P306
   Babar M. I., 2011, Proceedings of the 1st International Conference on Computer Networks and Information Technology (ICCNIT 2011), P319, DOI 10.1109/ICCNIT.2011.6020888
   Bagchi P., 1992, Managerial and Decision Economics, V13, P91, DOI DOI 10.1002/MDE.4090130202
   Barney S, 2008, J SYST ARCHITECT, V54, P576, DOI 10.1016/j.sysarc.2007.12.004
   Beg Rizwan, 2008, 2008 1st International Conference on Emerging Trends in Engineering and Technology (ICETET), P1216, DOI 10.1109/ICETET.2008.158
   Berander P, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P69, DOI 10.1007/3-540-28244-0_4
   Berander P, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P167
   Berander P., 2006, SERPS, V6, P18
   Berander P, 2009, J SYST SOFTWARE, V82, P836, DOI 10.1016/j.jss.2008.11.841
   Bjarnason E, 2012, INFORM SOFTWARE TECH, V54, P1107, DOI 10.1016/j.infsof.2012.04.006
   Carlshamre P, 2001, FIFTH IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P84
   Dag JNO, 2006, EMPIR SOFTW ENG, V11, P303, DOI 10.1007/s10664-006-6405-5
   Dag JNO, 2005, IEEE SOFTWARE, V22, P32, DOI 10.1109/MS.2005.1
   Danesh AS, 2009, PROCEEDINGS OF THE 2009 INTERNATIONAL CONFERENCE ON COMPUTER TECHNOLOGY AND DEVELOPMENT, VOL 1, P158, DOI 10.1109/ICCTD.2009.41
   Daneva M, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P240, DOI 10.1109/SEAA.2008.46
   Davis AM, 2003, COMPUTER, V36, P42, DOI 10.1109/MC.2003.1185216
   den Akker J. M. V., 2005, Proceedings of the CAiSE'05 FORUM. 17th Conference on Advanced Information Systems Engineering, P119
   Durillo JJ, 2009, 1ST INTERNATIONAL SYMPOSIUM ON SEARCH BASED SOFTWARE ENGINEERING, PROCEEDINGS, P49, DOI 10.1109/SSBSE.2009.21
   Falessi D., 2010, P 2010 ACM IEEE INT
   Firesmith Donald, 2004, J. Object Technol., V3, P35
   Greer D, 1999, NEC RES DEV, V40, P378
   Greer D, 1999, IEEE INTERNATIONAL SYMPOSIUM ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P180, DOI 10.1109/ISRE.1999.777998
   Greer D., 2003, INFORM SOFTWARE TECH, P243
   Hatton S, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P517, DOI 10.1109/ASWEC.2008.22
   Herrmann A, 2009, EMPIR SOFTW ENG, V14, P644, DOI 10.1007/s10664-009-9105-0
   Holbrook EA, 2013, EMPIR SOFTW ENG, V18, P139, DOI 10.1007/s10664-012-9198-8
   Höst M, 2005, PROC INT CONF SOFTW, P470
   Jantunen S, 2011, 5 INT WORKSH SOFTW P, P36, DOI [10.1109/IWSPM.2011.6046202, DOI 10.1109/IWSPM.2011.6046202]
   Jung HW, 1998, IEEE SOFTWARE, V15, P74, DOI 10.1109/52.687950
   Karatzas K, 2003, ENVIRON MODELL SOFTW, V18, P173, DOI 10.1016/S1364-8152(02)00053-1
   Karlsson J., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P146, DOI 10.1109/IWSSD.1996.501157
   Karlsson J., 1997, Requirements Engineering, V2, P51, DOI 10.1007/BF02802897
   Karlsson J, 1996, PROCEEDINGS OF THE SECOND INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, P110, DOI 10.1109/ICRE.1996.491435
   Karlsson J, 1997, IEEE SOFTWARE, V14, P67, DOI 10.1109/52.605933
   Karlsson J, 1998, INFORM SOFTWARE TECH, V39, P939, DOI 10.1016/S0950-5849(97)00053-0
   Karlsson L., 2004, "8th Internation Conference on Empirical Assessment in Software Engineering (EASE 2004)" Workshop - 26th International Conference on Software Engineering, P145, DOI 10.1049/ic:20040407
   Karlsson L, 2007, EMPIR SOFTW ENG, V12, P3, DOI 10.1007/s10664-006-7240-4
   KHAN KA, 2006, THESIS BLEKINGE I TE
   Khurum M, 2009, LECT NOTES COMPUT SC, V5512, P22, DOI 10.1007/978-3-642-02050-6_3
   Laurent P, 2007, INT REQUIR ENG CONF, P131, DOI 10.1109/RE.2007.63
   LEFFINGWELL D, 2000, MANAGING SOFTWARE RE
   Lehtola L., 2006, Software Process Improvement and Practice, V11, P7, DOI 10.1002/spip.249
   Li C, 2010, REQUIR ENG, V15, P375, DOI 10.1007/s00766-010-0104-x
   Ma Q., 2009, EFFECTIVENESS REQUIR
   Mack N., 2005, Qualitative research methods: A data collector's field guide, P6
   Natt och Dag J., 2002, Requirements Engineering, V7, P20, DOI 10.1007/s007660200002
   Ngo-The A, 2005, ENGINEERING AND MANAGING SOFTWARE REQUIREMENTS, P267
   Palma F., 2011, P 19 ACM SIGSOFT S 1, P48, DOI DOI 10.1145/2025113.2025124
   Perini Anna, 2007, 5th International Workshop on Comparative Evaluation in Requirements Engineering (CERE 2007), P23, DOI 10.1109/CERE.2007.1
   Port Dan, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P268, DOI 10.1109/ASE.2008.37
   Racheva Z., 2010, 2010 4 INT C RES CHA, P287, DOI [DOI 10.1109/RCIS.2010.5507388, 10.1109/RCIS.2010.5507388]
   Regnell B., 2000, Empirical Software Engineering, V5, P331, DOI 10.1023/A:1009848320066
   Regnell B., 2001, Requirements Engineering, V6, P51, DOI 10.1007/s007660170015
   Regnell B, 2003, 11TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P254
   Regnell B., 1998, Requirements Engineering, V3, P121, DOI 10.1007/BF02919972
   Regnell B, 2008, LECT NOTES COMPUT SC, V5025, P123, DOI 10.1007/978-3-540-69062-7_11
   Reifer DJ, 2002, IEEE SOFTWARE, V19, P16, DOI 10.1109/MS.2002.1020280
   Ruhe G, 2005, IEEE SOFTWARE, V22, P47, DOI 10.1109/MS.2005.164
   Ruhe G, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P262, DOI 10.1109/ISESE.2003.1237987
   Ruhe G., 2002, Proceedings of the 14th International Conference on Software Engineering and Knowledge Engineering (SEKE'02), P159
   Saaty T.L., 1980, ANAL HIERARCHY PROCE
   Saliu OM, 2009, RELEASE PLANNING SOF
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Svahnberg M, 2010, INFORM SOFTWARE TECH, V52, P237, DOI 10.1016/j.infsof.2009.11.006
   Svensson RB, 2011, INT REQUIR ENG CONF, P69, DOI 10.1109/RE.2011.6051652
   Tonella P., 2010, 2010 Proceedings of Second International Symposium on Search Based Software Engineering (SSBSE), P57, DOI 10.1109/SSBSE.2010.17
   Tonella P., 2012, INFORM SOFTWARE TECH, P57
   Tonella P, 2013, INFORM SOFTWARE TECH, V55, P173, DOI 10.1016/j.infsof.2012.07.003
   Triantaphyllou E, 2005, IEEE T ENG MANAGE, V52, P213, DOI 10.1109/TEM.2005.845221
   Triantaphyllou E., 2000, MULTICRITERIA DECISI, P5, DOI [10.1007/978-1-4757-3157-6_2, DOI 10.1007/978-1-4757-3157-6_2, 10.1007/978-1-4757-3157-62, DOI 10.1007/978-1-4757-3157-62]
   van den Akker M, 2008, INFORM SOFTWARE TECH, V50, P101, DOI 10.1016/j.infsof.2007.10.017
   Wnuk K, 2011, LECT NOTES COMPUT SC, V6606, P54, DOI 10.1007/978-3-642-19858-8_6
   Wnuk K, 2009, LECT NOTES COMPUT SC, V5512, P118, DOI 10.1007/978-3-642-02050-6_10
   Yap BW, 2011, J STAT COMPUT SIM, V81, P2141, DOI 10.1080/00949655.2010.520163
NR 87
TC 28
Z9 33
U1 0
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2015
VL 20
IS 6
BP 1721
EP 1761
DI 10.1007/s10664-014-9334-8
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT7YX
UT WOS:000363032900009
DA 2024-07-18
ER

PT J
AU Octaviano, FR
   Felizardo, KR
   Maldonado, JC
   Fabbri, SCPF
AF Octaviano, Fabio R.
   Felizardo, Katia R.
   Maldonado, Jose C.
   Fabbri, Sandra C. P. F.
TI Semi-automatic selection of primary studies in systematic literature
   reviews: is it reasonable?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Primary study selection activity; Systematic review(SR); Evidence-based
   software engineering (EBSE); StArt tool; Revis tool
ID AGREEMENT
AB The systematic review (SR) is a methodology used to find and aggregate all relevant existing evidence about a specific research question of interest. One of the activities associated with the SR process is the selection of primary studies, which is a time consuming manual task. The quality of primary study selection impacts the overall quality of SR. The goal of this paper is to propose a strategy named "Score Citation Automatic Selection" (SCAS), to automate part of the primary study selection activity. The SCAS strategy combines two different features, content and citation relationships between the studies, to make the selection activity as automated as possible. Aiming to evaluate the feasibility of our strategy, we conducted an exploratory case study to compare the accuracy of selecting primary studies manually and using the SCAS strategy. The case study shows that for three SRs published in the literature and previously conducted in a manual implementation, the average effort reduction was 58.2 % when applying the SCAS strategy to automate part of the initial selection of primary studies, and the percentage error was 12.98 %. Our case study provided confidence in our strategy, and suggested that it can reduce the effort required to select the primary studies without adversely affecting the overall results of SR.
C1 [Octaviano, Fabio R.; Fabbri, Sandra C. P. F.] Univ Fed Sao Carlos, Dept Comp, BR-13565905 Sao Carlos, SP, Brazil.
   [Felizardo, Katia R.] Fed Technol Univ Parana UTFPR, Dept Comp, BR-86300000 Cornelio Procopio, Parana, Brazil.
   [Maldonado, Jose C.] Univ Sao Paulo, Dept Comp Syst, BR-86300000 Cornelio Procopio, Parana, Brazil.
   [Octaviano, Fabio R.] Univ Fed Sao Carlos, Dept Comp Syst, BR-13565905 Sao Carlos, SP, Brazil.
C3 Universidade Federal de Sao Carlos; Universidade Tecnologica Federal do
   Parana; Universidade de Sao Paulo; Universidade Federal de Sao Carlos
RP Octaviano, FR (corresponding author), Univ Fed Sao Carlos, Dept Comp, Rodovia Washington Luis,Km 235-SP-310, BR-13565905 Sao Carlos, SP, Brazil.
EM foctaviano@ifsp.edu.br; katiascannavino@utfpr.edu.br;
   jcmaldon@icmc.usp.br; sfabbri@dc.ufscar.br
RI Maldonado, José Carlos/E-9290-2011
OI Octaviano, Fabio/0000-0002-0664-9893; Romero Felizardo,
   Katia/0000-0001-9080-4165
FU Brazilian funding agency: FAPESP [2012/02524-4]; Fundacao de Amparo a
   Pesquisa do Estado de Sao Paulo (FAPESP) [12/02524-4] Funding Source:
   FAPESP
FX This research is supported by the Brazilian funding agency: FAPESP
   (Process no. 2012/02524-4).
CR [Anonymous], CMUISRI06101 SOFTW E
   Babaie M., 2010, P ESEM 09, P1
   Boell S.K., 2011, ECIS 2011 Proceedings
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   Carletta J, 1996, COMPUT LINGUIST, V22, P249
   Dieste O, 2009, EMPIR SOFTW ENG, V14, P513, DOI 10.1007/s10664-008-9091-7
   Dyba T, 2005, IEEE SOFTWARE, V22, P58, DOI 10.1109/MS.2005.6
   Dyba Tore, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P225
   Fabbri Sandra, 2012, Proceedings of the 14th International Conference on Enterprise Information Systems (ICEIS 2012)., P36
   Felizardo K., 2011, 5th International Symposium on Empirical Software Engineering and Measurement (ESEM), P1
   Felizardo KR, 2012, INFORM SOFTWARE TECH, V54, P1079, DOI 10.1016/j.infsof.2012.04.003
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Malheiros Viviane, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P245
   Marshall Christopher, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P296, DOI 10.1109/ESEM.2013.32
   Oates B., 2009, 13 INT C EVALUATION, P1
   Paulovich FV, 2008, IEEE T VIS COMPUT GR, V14, P1229, DOI 10.1109/TVCG.2008.138
   Petersen K, 2011, INT SYMP EMP SOFTWAR, P351, DOI 10.1109/ESEM.2011.46
   Riaz M., 2010, 14 INT C EV ASS SOFT, P1
   Shepperd M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P304, DOI 10.1109/FOSE.2007.23
   Wohlin C, 2000, EXPT SOFTWARE ENG IN, P63
   Zhang H., 2011, 5 INT S EMP SOFTW EN, P1
NR 23
TC 18
Z9 22
U1 0
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2015
VL 20
IS 6
BP 1898
EP 1917
DI 10.1007/s10664-014-9342-8
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CT7YX
UT WOS:000363032900014
DA 2024-07-18
ER

PT J
AU Wohlin, C
   Aurum, A
AF Wohlin, Claes
   Aurum, Aybueke
TI Towards a decision-making structure for selecting a research design in
   empirical software engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Research methods; Empirical software engineering research; Selecting
   research method; Research design
ID INFORMATION-SYSTEMS RESEARCH; GROUNDED THEORY; QUALITATIVE RESEARCH;
   PROCESS IMPROVEMENT; PRINCIPLES; SET; EXPLORATION; METHODOLOGY; SCIENCE;
   FIELD
AB Several factors make empirical research in software engineering particularly challenging as it requires studying not only technology but its stakeholders' activities while drawing concepts and theories from social science. Researchers, in general, agree that selecting a research design in empirical software engineering research is challenging, because the implications of using individual research methods are not well recorded. The main objective of this article is to make researchers aware and support them in their research design, by providing a foundation of knowledge about empirical software engineering research decisions, in order to ensure that researchers make well-founded and informed decisions about their research designs. This article provides a decision-making structure containing a number of decision points, each one of them representing a specific aspect on empirical software engineering research. The article provides an introduction to each decision point and its constituents, as well as to the relationships between the different parts in the decision-making structure. The intention is the structure should act as a starting point for the research design before going into the details of the research design chosen. The article provides an in-depth discussion of decision points in relation to the research design when conducting empirical research.
C1 [Wohlin, Claes] Blekinge Inst Technol, Karlskrona, Sweden.
C3 Blekinge Institute Technology
RP Wohlin, C (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.
EM claes.wohlin@bth.se; aybuke.aurum@gmail.com
OI Wohlin, Claes/0000-0003-0460-5253
FU Knowledge Foundation in Sweden
FX The Knowledge Foundation in Sweden partially funded this work under a
   research grant for the Blekinge Engineering Software Qualities (BESQ+)
   research environment.
CR Adolph S, 2011, EMPIR SOFTW ENG, V16, P487, DOI 10.1007/s10664-010-9152-6
   Allison I, 2007, INFORM SOFTWARE TECH, V49, P668, DOI 10.1016/j.infsof.2007.02.003
   [Anonymous], USF OPEN ACCESS TXB
   [Anonymous], 2002, CASE STUDY RES
   [Anonymous], THESIS U NEW S WALES
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 1992, EMERGENCE VS FORCING
   [Anonymous], USING QUALITATIVE ME
   [Anonymous], 2011, PRINCIPLES PRACTICE
   [Anonymous], IEEE P FUT SOFTW ENG
   [Anonymous], INT C INF SYST 3 7 D
   [Anonymous], 1988, Statistical methods for the social and behavioral sciences
   [Anonymous], DAGST SEM SOC SCI MI
   [Anonymous], PRACTICE RES SOCIAL
   [Anonymous], FUTURE SOFTWARE ENG
   [Anonymous], INF SOFTW TECHNOL
   [Anonymous], 2004, Proceedings-2004 International Symposium on Empirical Software Engineering, ISESE 2004, DOI DOI 10.1109/ISESE.2004.1334914
   [Anonymous], GUIDE ADV EMPIRICAL
   [Anonymous], 1993, EVALUATION SYSTEMATI
   [Anonymous], 2009, BUSINESS RES
   Barney S, 2014, INFORM SOFTWARE TECH, V56, P20, DOI 10.1016/j.infsof.2013.06.004
   Basili V. R., 1993, Experimental Software Engineering Issues: Critical Assessment and Future Directions. International Workshop Proceedings, P3
   Baskerville R, 2008, EUR J INFORM SYST, V17, P441, DOI 10.1057/ejis.2008.45
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Bertelsen OW, 1997, IEEE SOFTWARE, V14, P87, DOI 10.1109/MS.1997.636682
   Birks DF, 2013, EUR J INFORM SYST, V22, P1, DOI 10.1057/ejis.2012.48
   Boell SK, 2010, AUST ACAD RES LIBR, V41, P129, DOI 10.1080/00048623.2010.10721450
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Brooke C, 2002, J INFORM TECHNOL, V17, P49, DOI 10.1080/02683960210164336
   Butler T, 1998, J INF TECHNOL-UK, V13, P285, DOI 10.1057/jit.1998.7
   Cecez-Kecmanovic D, 2011, EUR J INFORM SYST, V20, P440, DOI 10.1057/ejis.2010.67
   Checkland P., 1981, Systems thinking, systems practice, V10th ed
   Chen WS, 2004, INFORM SYST J, V14, P197, DOI 10.1111/j.1365-2575.2004.00173.x
   Coleman G, 2008, J SYST SOFTWARE, V81, P772, DOI 10.1016/j.jss.2007.07.027
   Coleman G, 2007, INFORM SOFTWARE TECH, V49, P654, DOI 10.1016/j.infsof.2007.02.011
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Davison R, 2004, INFORM SYST J, V14, P65, DOI 10.1111/j.1365-2575.2004.00162.x
   Dunne C, 2011, INT J SOC RES METHOD, V14, P111, DOI 10.1080/13645579.2010.494930
   Dybå T, 2011, EMPIR SOFTW ENG, V16, P425, DOI 10.1007/s10664-011-9163-y
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Ghanam Y, 2012, INFORM SOFTWARE TECH, V54, P968, DOI 10.1016/j.infsof.2012.03.005
   Glaser B. G., 1967, DISCOVERY GROUNDED T, DOI 10.1515/9783111660211/html
   Gregg DG, 2001, INFORM SYST FRONT, V3, P169, DOI 10.1023/A:1011491322406
   Grix J., 2002, POLITICS, V22, P175, DOI [DOI 10.1111/1467-9256.00173, 10.1111/1467-9256.00173]
   Hannah DR, 2011, J MANAGE INQUIRY, V20, P14, DOI 10.1177/1056492610375988
   Hansen S, 2010, INFORM ORGAN-UK, V20, P44, DOI 10.1016/j.infoandorg.2010.01.001
   Harrison JR, 2007, ACAD MANAGE REV, V32, P1229, DOI 10.5465/AMR.2007.26586485
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Jafarazdeh H, 2013, INT J ENTERP INF SYS, V9, P22, DOI 10.4018/jeis.2013070102
   Johnson CF, 1996, SOC SCI J, V33, P287, DOI 10.1016/S0362-3319(96)90024-5
   Johnson R. B., 2004, ED RES, V33, P14, DOI DOI 10.3102/0013189X033007014
   Kachigan S.K., 1986, STAT ANAL INTERDISCI
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham B.A., 2002, ACM SIGSOFT Software Engineering Notes, V27, P18, DOI [DOI 10.1145/566493.566495, 10.1145/566493.566495]
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   Kyburz-Graber R., 2007, ENVIRON EDUC RES, V10, P53
   Law AverillM., 2007, SIMULATION MODELING, V4
   LEE AS, 1989, MIS QUART, V13, P33, DOI 10.2307/248698
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Lyons H, 2009, INNOV EDUC TEACH INT, V46, P27, DOI 10.1080/14703290802646198
   Mack N., 2005, QUALITATIVE RES METH
   MARCH ST, 1995, DECIS SUPPORT SYST, V15, P251, DOI 10.1016/0167-9236(94)00041-2
   McKernan J., 1996, CURRICULUM ACTION RE, VSecond
   McLeod L, 2011, EMPIR SOFTW ENG, V16, P430, DOI 10.1007/s10664-010-9153-5
   Mingers J, 2001, INFORM SYST RES, V12, P240, DOI 10.1287/isre.12.3.240.9709
   Mkansi M., 2012, ELECT J BUSINESS RES, V10, P132
   Moe NB, 2012, INFORM SOFTWARE TECH, V54, P853, DOI 10.1016/j.infsof.2011.11.006
   MYERS MD, 1995, INFORM SYST J, V5, P51, DOI 10.1111/j.1365-2575.1995.tb00089.x
   Myers MD, 1997, MIS QUART, V21, P241, DOI 10.2307/249422
   Myers MD, 2011, MIS QUART, V35, P17
   Nunamaker J. F.  Jr., 1990, Journal of Management Information Systems, V7, P89
   Orlikowski WJ, 1991, INFORM SYST RES, V2, P1, DOI 10.1287/isre.2.1.1
   Ostrowski L., 2011, 2011 Federated Conference on Computer Science and Information Systems (FedCSIS), P317
   Perry C., 1998, EUR J MARKETING, V32, P785, DOI [10.1108/03090569810232237, DOI 10.1108/03090569810232237]
   Pinsonneault A., 1993, Journal of Management Information Systems, V10, P75
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shanks G.G., 2003, POSITIVIST SINGLE CA, P1760
   Shaw M., 2002, International Journal on Software Tools for Technology Transfer, V4, P1, DOI 10.1007/s10009-002-0083-4
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Shull F, 2008, GUIDE ADV EMPIRICAL
   SHYE S, 1988, J APPL PSYCHOL, V73, P308, DOI 10.1037/0021-9010.73.2.308
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Smite D, 2013, J SYST SOFTWARE, V86, P1054, DOI 10.1016/j.jss.2012.10.003
   Smite D, 2010, EMPIR SOFTW ENG, V15, P91, DOI 10.1007/s10664-009-9123-y
   Staron M, 2006, J SYST SOFTWARE, V79, P727, DOI 10.1016/j.jss.2005.09.014
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   SUSMAN GI, 1978, ADMIN SCI QUART, V23, P582, DOI 10.2307/2392581
   TICHY WF, 1995, J SYST SOFTWARE, V28, P9, DOI 10.1016/0164-1212(94)00111-Y
   Tom E, 2013, J SYST SOFTWARE, V86, P1498, DOI 10.1016/j.jss.2012.12.052
   Urquhart C., 2002, Journal of Information Technology Theory and Application, V4, P43
   Walker D, 2006, QUAL HEALTH RES, V16, P547, DOI 10.1177/1049732305285972
   Wohlin C., 2012, Experimentation in Software Engineering
   Wynekoop JL, 1997, INFORM SYST J, V7, P47, DOI 10.1046/j.1365-2575.1997.00004.x
NR 96
TC 67
Z9 94
U1 0
U2 29
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2015
VL 20
IS 6
BP 1427
EP 1455
DI 10.1007/s10664-014-9319-7
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA CT7YX
UT WOS:000363032900001
DA 2024-07-18
ER

PT J
AU Yang, J
   Hotta, K
   Higo, Y
   Igaki, H
   Kusumoto, S
AF Yang, Jiachen
   Hotta, Keisuke
   Higo, Yoshiki
   Igaki, Hiroshi
   Kusumoto, Shinji
TI Classification model for code clones based on machine learning
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Filtering; Classify; Machine learning; Code clone detector
ID SYSTEM
AB Results from code clone detectors may contain plentiful useless code clones, but judging whether each code clone is useful varies from user to user based on a user's purpose for the clone. In this research, we propose a classification model that applies machine learning to the judgments of each individual user regarding the code clones. To evaluate the proposed model, 32 participants completed an online survey to test its usability and accuracy. The result showed several important observations on the characteristics of the true positives of code clones for the users. Our classification model showed more than 70% accuracy on average and more than 90 % accuracy for some particular users and projects.
C1 [Yang, Jiachen; Hotta, Keisuke; Higo, Yoshiki; Igaki, Hiroshi; Kusumoto, Shinji] Osaka Univ, Grad Sch Informat Sci & Technol, Suita, Osaka 5650871, Japan.
C3 Osaka University
RP Yang, J (corresponding author), Osaka Univ, Grad Sch Informat Sci & Technol, 1-5 Yamadaoka, Suita, Osaka 5650871, Japan.
EM jc-yang@ist.osaka-u.ac.jp; k-hotta@ist.osaka-u.ac.jp;
   higo@ist.osaka-u.ac.jp; igaki@ist.osaka-u.ac.jp;
   kusumoto@ist.osaka-u.ac.jp
FU Japan Society for the Promotion of Science [25220003, 24650011];
   Ministry of Education, Culture, Sports, Science and Technology
   [24680002]; Grants-in-Aid for Scientific Research [24650011, 24680002]
   Funding Source: KAKEN
FX This study was supported by Grant-in-Aid for Scientific Research (S)
   (25220003), Grant-in-Aid for Exploratory Research (24650011) from the
   Japan Society for the Promotion of Science, and Grand-in-Aid for Young
   Scientists (A) (24680002) from the Ministry of Education, Culture,
   Sports, Science and Technology
CR [Anonymous], 1994, P 1994 C CTR ADV STU
   Balazinska M., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P292, DOI 10.1109/METRIC.1999.809750
   Baxter ID, 1998, PROC IEEE INT CONF S, P368, DOI 10.1109/ICSM.1998.738528
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bostock M, 2012, DS JS DATA DRIVEN DO
   Church K., 1993, J AM STAT ASSOC, V2, P153, DOI [DOI 10.1080/10618600.1993, 10.2307/1390697, DOI 10.2307/1390697]
   Higo Y, 2002, LECT NOTES COMPUT SC, V2559, P185
   Higo Yoshiki, 2008, IEICE Transactions on Information and Systems, VJ91-D, P1465
   Higo Y, 2008, J SOFTW MAINT EVOL-R, V20, P435, DOI 10.1002/smr.394
   Jiang ZM, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P203, DOI 10.1109/SCAM.2007.19
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kobourov S. G., 2012, Spring embedders and force directed graph drawing algorithms
   Koschke R, 2012, EUR CON SFTWR MTNCE, P309, DOI 10.1109/CSMR.2012.37
   Krinke J, 2008, EIGHTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P57, DOI 10.1109/SCAM.2008.14
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Li ZM, 2006, IEEE T SOFTWARE ENG, V32, P176, DOI 10.1109/TSE.2006.28
   Lucia, 2012, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE.2012.6227175
   Marcus A, 2001, 16TH ANNUAL INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2001), PROCEEDINGS, P107, DOI 10.1109/ASE.2001.989796
   Rosenberg A, 2007, P 2007 JOINT C EMP M, P410, DOI [10 . 7916 / D80V8N84, DOI 10.7916/D80V8N84]
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   SPARCKJONES K, 1972, J DOC, V28, P11, DOI 10.1108/eb026526
   Tairas R, 2009, EMPIR SOFTW ENG, V14, P33, DOI 10.1007/s10664-008-9089-1
   Tiarks R, 2011, SOFTWARE QUAL J, V19, P295, DOI 10.1007/s11219-010-9115-6
   Tiarks R, 2009, IEEE INT WORK C SO, P67, DOI 10.1109/SCAM.2009.16
   UKKONEN E, 1995, ALGORITHMICA, V14, P249, DOI 10.1007/BF01206331
   Van Rysselberghe F, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P336, DOI 10.1109/ASE.2004.1342759
   Wang T, 2013, COMPARE, V31, P81
   Wang XY, 2012, IEEE INT CONF AUTOM, P170, DOI 10.1145/2351676.2351701
NR 28
TC 28
Z9 31
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2015
VL 20
IS 4
BP 1095
EP 1125
DI 10.1007/s10664-014-9316-x
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CJ8MB
UT WOS:000355754500006
OA hybrid
DA 2024-07-18
ER

PT J
AU Kocaguneli, E
   Menzies, T
   Mendes, E
AF Kocaguneli, Ekrem
   Menzies, Tim
   Mendes, Emilia
TI Transfer learning in effort estimation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Transfer learning; Effort estimation; Data mining; k-NN
ID COST ESTIMATION; SOFTWARE; PREDICTION; MODELS; CROSS
AB When projects lack sufficient local data to make predictions, they try to transfer information from other projects. How can we best support this process? In the field of software engineering, transfer learning has been shown to be effective for defect prediction. This paper checks whether it is possible to build transfer learners for software effort estimation. We use data on 154 projects from 2 sources to investigate transfer learning between different time intervals and 195 projects from 51 sources to provide evidence on the value of transfer learning for traditional cross-company learning problems. We find that the same transfer learning method can be useful for transfer effort estimation results for the cross-company learning problem and the cross-time learning problem. It is misguided to think that: (1) Old data of an organization is irrelevant to current context or (2) data of another organization cannot be used for local solutions. Transfer learning is a promising research direction that transfers relevant cross data between time intervals and domains.
C1 [Kocaguneli, Ekrem; Menzies, Tim] W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26505 USA.
   [Mendes, Emilia] Blekinge Inst Technol, Fac Comp, Dept Software Engn, S-37179 Karlskrona, Sweden.
C3 West Virginia University; Blekinge Institute Technology
RP Kocaguneli, E (corresponding author), W Virginia Univ, Lane Dept Comp Sci & Elect Engn, Morgantown, WV 26505 USA.
EM kocaguneli@gmail.com; tim@menzies.us; emilia@cs.auckland.ac.nz
RI Menzies, Tim/X-7680-2019; Mendes, Maria E/B-4207-2015
OI Menzies, Tim/0000-0002-5040-3196; Mendes, Emilia/0000-0003-0449-5322
FU NSF CCF grant [1302169]; Qatar/West Virginia University [NPRP
   09-12-5-2-470]; Direct For Computer & Info Scie & Enginr [1302216]
   Funding Source: National Science Foundation; Direct For Computer & Info
   Scie & Enginr; Division of Computing and Communication Foundations
   [1506586] Funding Source: National Science Foundation; Division of
   Computing and Communication Foundations [1302216] Funding Source:
   National Science Foundation; Division of Computing and Communication
   Foundations; Direct For Computer & Info Scie & Enginr [1302169] Funding
   Source: National Science Foundation
FX The work was partially funded by NSF CCF grant, award number 1302169,
   and the Qatar/West Virginia University research grant NPRP
   09-12-5-2-470.
CR Alpaydin E., 2010, Introduction to Machine Learning
   [Anonymous], IEEE T COMPUT C
   [Anonymous], ASE 10
   [Anonymous], ESEM 11
   [Anonymous], P MSR 12
   [Anonymous], AAAI 07
   [Anonymous], SOFTWARE EF IN PRESS
   [Anonymous], 2007, IEEE T SOFTWARE ENG
   [Anonymous], 2004, P 21 INT C ICML 2004
   [Anonymous], PROMISE 12
   [Anonymous], INT C KNOWL DISC DAT
   [Anonymous], P ASE 11
   [Anonymous], 2008, P INT C SOFTW ENG, DOI DOI 10.1145/1370788.1370793
   [Anonymous], PROMISE
   [Anonymous], P 6 INT C PRED MOD S
   [Anonymous], P RAISE 12
   [Anonymous], MSR 12
   Arnold A., 2007, P 7 IEEE INT C DAT M, P77, DOI [10.1109/ICDMW.2007.109, DOI 10.1109/ICDMW.2007.109]
   Boehm BW., 1981, Software Engineering Economics
   Foss T, 2003, IEEE T SOFTWARE ENG, V29, P985, DOI 10.1109/TSE.2003.1245300
   Foster G., 2010, P 2010 C EMP METH NA, P451
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Hayes JH, 2006, IEEE T SOFTWARE ENG, V32, P4, DOI 10.1109/TSE.2006.3
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   HIHN J, 1991, 13TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P276, DOI 10.1109/ICSE.1991.130653
   Kadoda G., 2000, UK CBR Workshop, P1
   Keung J, 2013, AUTOMAT SOFTW ENG, V20, P543, DOI 10.1007/s10515-012-0108-5
   Keung J, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P294
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Lee S., 2007, P INT C MACHINE LEAR, P489
   Li YF, 2009, J SYST SOFTWARE, V82, P241, DOI 10.1016/j.jss.2008.06.001
   Lokan C., 2009, Proceedings of the Thirty-Second Australasian Conference on Computer Science - Volume 91, P47
   Lokan C, 2009, INT SYMP EMP SOFTWAR, P111, DOI 10.1109/ESEM.2009.5316019
   Ma Y, 2012, INFORM SOFTWARE TECH, V54, P248, DOI 10.1016/j.infsof.2011.09.007
   Meagher M, 2007, IEEE INT CONF INF VI, P601
   Mendes E, 2005, J SYST SOFTWARE, V77, P157, DOI 10.1016/j.jss.2004.08.034
   Mendes E, 2003, EMPIR SOFTW ENG, V8, P163, DOI 10.1023/A:1023062629183
   Mendes E, 2008, IEEE T SOFTWARE ENG, V34, P723, DOI 10.1109/TSE.2008.64
   Menzies T., 2011, IEEE ASE'11
   Menzies Tim., 2012, IEEE Transactions on Software Engineering, V99, P1
   Mihalkova L., 2007, AAAI, V22, P608
   Milicic D, 2004, EUROMICRO CONF PROC, P422, DOI 10.1109/EURMIC.2004.1333398
   Pan SJ, 2010, IEEE T KNOWL DATA EN, V22, P1345, DOI 10.1109/TKDE.2009.191
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Reifer D., 1999, The Journal of Defense Software Engineering, P11
   Robson C., 2002, Real World Research, V2nd
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Stensrud E, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P3, DOI 10.1109/METRIC.2002.1011320
   Storkey A, 2009, NEURAL INF PROCESS S, P3
   Trevor H., 2009, The Elements of Statistical Learning: Data Mining, Inference, and Prediction
   Turhan B, 2012, EMPIR SOFTW ENG, V17, P62, DOI 10.1007/s10664-011-9182-8
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Zhang H, 2004, FOURTH IEEE INTERNATIONAL CONFERENCE ON DATA MINING, PROCEEDINGS, P567, DOI 10.1109/ICDM.2004.10030
   Zhang X, 2007, LECT NOTES COMPUT SC, V4831, P159
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zliobaite I., 2010, CoRR
NR 58
TC 48
Z9 53
U1 6
U2 32
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2015
VL 20
IS 3
BP 813
EP 843
DI 10.1007/s10664-014-9300-5
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CI1DF
UT WOS:000354480800007
DA 2024-07-18
ER

PT J
AU Hindle, A
   Bird, C
   Zimmermann, T
   Nagappan, N
AF Hindle, Abram
   Bird, Christian
   Zimmermann, Thomas
   Nagappan, Nachiappan
TI Do topics make sense to managers and developers?
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE LDA; LDA topics; User study; Requirements; Requirements topic
ID TRACEABILITY LINKS; CODE; MODELS
AB Large organizations like Microsoft tend to rely on formal requirements documentation in order to specify and design the software products that they develop. These documents are meant to be tightly coupled with the actual implementation of the features they describe. In this paper we evaluate the value of high-level topic-based requirements traceability and issue report traceability in the version control system, using Latent Dirichlet Allocation (LDA). We evaluate LDA topics on practitioners and check if the topics and trends extracted match the perception that industrial Program Managers and Developers have about the effort put into addressing certain topics. We then replicate this study again on Open Source Developers using issue reports from issue trackers instead of requirements, confirming our previous industrial conclusions. We found that efforts extracted as commits from version control systems relevant to a topic often matched the perception of the managers and developers of what actually occurred at that time. Furthermore we found evidence that many of the identified topics made sense to practitioners and matched their perception of what occurred. But for some topics, we found that practitioners had difficulty interpreting and labelling them. In summary, we investigate the high-level traceability of requirements topics and issue/bug report topics to version control commits via topic analysis and validate with the actual stakeholders the relevance of these topics extracted from requirements and issues.
C1 [Hindle, Abram] Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
   [Bird, Christian; Zimmermann, Thomas; Nagappan, Nachiappan] Microsoft Res, Empir Software Engn Grp, Redmond, WA USA.
C3 University of Alberta; Microsoft
RP Hindle, A (corresponding author), Univ Alberta, Dept Comp Sci, Edmonton, AB, Canada.
EM abram.hindle@softwareprocess.es; cbird@microsoft.com;
   tzimmer@microsoft.com; nachin@microsoft.com
FU Natural Sciences and Engineering Research Council of Canada
FX Thanks to the many managers and developers at Microsoft who volunteered
   their time to participate in our research and provide their valuable
   insights and feedback. Abram Hindle performed some of this work as a
   visiting researcher at Microsoft Research. Thanks to the Natural
   Sciences and Engineering Research Council of Canada for partially
   funding this work. Thanks to Abram Hindle's first student, Zhang
   Chenlei, for his feedback. Thanks to the FLOSS developers who chose to
   participate: Julian Harty, Lisa Milne, Tobias Leich, Ian Cordasco, Ricky
   Elrod, Anthony Grimes, Geoffrey Greer, Nicolas J. Bouliane, Drew
   DeVault, Daniel Huckstep, Chad Whitacre, Devin Joel Austin, and Gerson
   Goulart.
CR [Anonymous], 25 C UNC ART INT MON
   [Anonymous], 2003, Software requirements
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Baldi PF, 2008, ACM SIGPLAN NOTICES, V43, P543, DOI 10.1145/1449955.1449807
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   Capiluppi A, 2013, EMPIR SOFTW ENG, V18, P60, DOI 10.1007/s10664-011-9191-7
   Cheng BHC, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P285, DOI 10.1109/FOSE.2007.17
   Cleland-Huang J, 2005, PROC INT CONF SOFTW, P362
   De Lucia A., 2012, 2012 IEEE 20th International Conference on Program Comprehension, P193
   De Lucia A., 2012, SOFTWARE SYSTEMS TRA, P71, DOI [10.1007/978-1-4471- 2239-5_4, DOI 10.1007/978-1-4471-2239-5_4]
   Ernst NA, 2010, LECT NOTES COMPUT SC, V6182, P143, DOI 10.1007/978-3-642-14192-8_15
   Gethers M., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P133, DOI 10.1109/ICSM.2011.6080780
   Grant S, 2010, IEEE INT WORK C SO, P65, DOI 10.1109/SCAM.2010.22
   Hindle A., 2011, Automated topic naming to support cross-project analysis of software maintenance activities, P163
   Hindle A, 2012, P 28 IEEE INT C SOFT
   Hoffman M., 2010, P ADV NEUR INF PROC, V23:856-864
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Koch S, 2008, INF ECON POLICY, V20, P345, DOI 10.1016/j.infoecopol.2008.06.004
   Konrad S, 2006, LECT NOTES COMPUT SC, V3844, P48
   Kozlenkov A, 2002, IEEE JOINT INTERNATIONAL CONFERENCE ON REQUIREMENTS ENGINEERING, PROCEEDINGS, P145, DOI 10.1109/ICRE.2002.1048517
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Lukins SK, 2008, WORK CONF REVERSE EN, P155, DOI 10.1109/WCRE.2008.33
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   Marcus A, 2003, PROC INT CONF SOFTW, P125, DOI 10.1109/ICSE.2003.1201194
   McMillan C, 2009, 2009 ICSE WORKSHOP ON TRACEABILITY IN EMERGING FORMS OF SOFTWARE ENGINEERING (TEFSE), P41, DOI 10.1109/TEFSE.2009.5069582
   Murphy GC, 2001, IEEE T SOFTWARE ENG, V27, P364, DOI 10.1109/32.917525
   Panichella A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P522, DOI 10.1109/ICSE.2013.6606598
   Poshyvanyk D, 2008, THESIS WAYNE STATE U
   Ramage D., 2010, ICWSM
   Ramesh B, 1998, COMMUN ACM, V41, P37, DOI 10.1145/290133.290147
   Reiss SP, 2006, IEEE T SOFTWARE ENG, V32, P682, DOI 10.1109/TSE.2006.91
   Sabetzadeh M., 2005, Proceedings of the 3rd International Workshop on Traceability in Emerging Forms of Software Engineering. TEFSE'05, P44, DOI DOI 10.1145/1107656.1107667
   Savage T, 2010, Proceedings of the 2010 IEEE International Conference on Software Maintenance, ICSM '10, P1, DOI [10.1109/ICSM.2010.5609654, DOI 10.1109/ICSM.2010.5609654]
   Shull F., 2010, GUIDE ADV EMPIRICAL
   Sneed HM, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P380
   Thomas SW, 2010, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2010.13
   Thomas SW, 2011, 8 WORK C MIN SOFTW R, P173
   Tillmann N, 2006, LECT NOTES COMPUT SC, V4260, P717
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 40
TC 18
Z9 23
U1 1
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2015
VL 20
IS 2
BP 479
EP 515
DI 10.1007/s10664-014-9312-1
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA CH2AB
UT WOS:000353824000008
DA 2024-07-18
ER

PT J
AU Offutt, J
   Papadimitriou, V
   Praphamontripong, U
AF Offutt, Jeff
   Papadimitriou, Vasileios
   Praphamontripong, Upsorn
TI A case study on bypass testing of web applications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software testing; Web applications; Case study
AB Society's increasing reliance on services provided by web applications places a high demand on their reliability. The flow of control through web applications heavily depends on user inputs and interactions, so user inputs should be thoroughly validated before being passed to the back-end software. Although several techniques are used to validate inputs on the client, users can easily bypass this validation and submit arbitrary data to the server. This can cause unexpected behavior, and even allow unauthorized access. A test technique called bypass testing intentionally sends invalid data to the server by bypassing client-side validation. This paper reports results from a comprehensive case study on 16 deployed, widely used, commercial web applications. As part of this project, the theory behind bypass testing was extended and an automated tool, AutoBypass, was built. The case study found failures in 14 of the 16 web applications tested, some significant. This study gives evidence that bypass testing is effective, has positive return on investment, and scales to real applications.
C1 [Offutt, Jeff; Papadimitriou, Vasileios; Praphamontripong, Upsorn] George Mason Univ, Fairfax, VA 22030 USA.
C3 George Mason University
RP Offutt, J (corresponding author), George Mason Univ, Fairfax, VA 22030 USA.
EM offutt@gmu.edu; vpapadim@gmail.com; uprapham@gmu.edu
CR AMMANN P, 1994, COMPASS '94 - PROCEEDINGS OF THE NINTH ANNUAL CONFERENCE ON COMPUTER ASSURANCE, P69, DOI 10.1109/CMPASS.1994.318466
   Andrews A, 2005, SOFTWARE SYSTEMS MOD, V4, P326, DOI DOI 10.1007/S10270-004-0077-7
   Andrews AA, 2010, INFORM SOFTWARE TECH, V52, P52, DOI 10.1016/j.infsof.2009.06.002
   [Anonymous], 2000, P C FUT SOFTW ENG IC, DOI DOI 10.1145/336512.336532
   ChristeyKarre S, 2011, CWE SANS TOP 25 MOST
   Cooper A, 2003, DESIGNING WEB FACE 2
   DEMILLO RA, 1991, IEEE T SOFTWARE ENG, V17, P900, DOI 10.1109/32.92910
   Di Lucca GA, 2003, FIFTH IEEE INTERNATIONAL WORKSHOP ON WEB SITE EVOLUTION THEME: ARCHITECTURE, PROCEEDINGS, P74, DOI 10.1109/WSE.2003.1234011
   Eaton C., 2007, International Journal of Web Engineering and Technology, V3, P227, DOI 10.1504/IJWET.2007.012055
   Elbaum S, 2005, IEEE T SOFTWARE ENG, V31, P187, DOI 10.1109/TSE.2005.36
   Elbaum S, 2003, PROC INT CONF SOFTW, P49, DOI 10.1109/ICSE.2003.1201187
   Halfond WilliamG. J., 2007, P THE 6 JOINT M EURO, P145
   Hilburn T, 2002, P 15 C SOFTW ENG ED
   Hower Rick., 2002, Web site test tools and site management tools
   Joomla, 2007, JOOML PROJ
   Kung DC, 2000, P INT COMP SOFTW APP, V24, P537, DOI 10.1109/CMPSAC.2000.884778
   Liu CH, 2000, 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P84, DOI 10.1109/ISSRE.2000.885863
   Miller J, 2010, WEB ENG ADVANCEMENTS, P212
   Mouelhi T., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P210, DOI 10.1109/ICST.2011.56
   Nguyen-Tuong A, 2005, P 20 IFIP INT INF SE
   Offutt AJ, 1999, SOFTWARE PRACT EXPER, V29, P167, DOI 10.1002/(SICI)1097-024X(199902)29:2<167::AID-SPE225>3.0.CO;2-V
   Offutt J, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P187, DOI 10.1109/ISSRE.2004.13
   Offutt J, 2004, P INT COMP SOFTW APP, P106
   Offutt J, 2002, IEEE SOFTWARE, V19, P25, DOI 10.1109/52.991329
   Offutt J, 2010, SOFTW SYST MODEL, V9, P257, DOI 10.1007/s10270-009-0125-4
   Papadimitriou V, 2006, THESIS G MASON U FAI
   Raggett D., 1999, HTML 4.01 specification
   Ricca F, 2002, ANN SOFTW ENG, V14, P93, DOI 10.1023/A:1020549507418
   Ricca F, 2001, PROC INT CONF SOFTW, P25, DOI 10.1109/ICSE.2001.919078
   Sampath S, 2004, 19TH INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P132, DOI 10.1109/ASE.2004.1342731
   Sampath S, 2007, IEEE T SOFTWARE ENG, V33, P643, DOI 10.1109/TSE.2007.70723
   Sampath S, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P266
   Sprenkle S, 2005, PROC IEEE INT CONF S, P587
   Sprenkle S, 2012, 5 INT C SOFTW TEST V
   Sprenkle S, 2007, INT S SOFTW REL ENG, P253
   Sprenkle Sara., 2005, AUTOMAT SOFTW ENG, P253, DOI DOI 10.1145/1101908.1101947
   Tappenden A, 2005, AGILE 2005, Proceedings, P29, DOI 10.1109/ADC.2005.11
   van Kestern A, 2008, XMLHTTP REQUEST OBJE
   Wang WL, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P293, DOI 10.1109/ISSRE.2003.1251051
   WU Y, 2002, ISETR0208 G MAS U DE
   XU W, 2005, SECLAB0505 STON BROO
NR 41
TC 4
Z9 5
U1 0
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2014
VL 19
IS 1
BP 69
EP 104
DI 10.1007/s10664-012-9216-x
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AA3HQ
UT WOS:000330983900003
DA 2024-07-18
ER

PT J
AU Huynh, T
   Miller, J
AF Huynh, Toan
   Miller, James
TI An empirical investigation into open source web applications'
   implementation vulnerabilities
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical evaluation; Web applications; Security; Vulnerability;
   Injection; Classification of vulnerabilities
AB Current web applications have many inherent vulnerabilities; in fact, in 2008, over 63% of all documented vulnerabilities are for web applications. While many approaches have been proposed to address various web application vulnerability issues, there has not been a study to investigate whether these vulnerabilities share any common properties. In this paper, we use an approach similar to the Goal-Question-Metric approach to empirically investigate four questions regarding open source web applications vulnerabilities: What proportion of security vulnerabilities in web applications can be considered as implementation vulnerabilities? Are these vulnerabilities the result of interactions between web applications and external systems? What is the proportion of vulnerable lines of code within a web application? Are implementation vulnerabilities caused by implicit or explicit data flows? The results from the investigation show that implementation vulnerabilities dominate. They are caused through interactions between web applications and external systems. Furthermore, these vulnerabilities only contain explicit data flows, and are limited to relatively small sections of the source code.
C1 [Huynh, Toan; Miller, James] Univ Alberta, Dept Elect & Comp Engn, Elect & Comp Engn Res Facil, Edmonton, AB T6G 2V4, Canada.
C3 University of Alberta
RP Miller, J (corresponding author), Univ Alberta, Dept Elect & Comp Engn, Elect & Comp Engn Res Facil, Edmonton, AB T6G 2V4, Canada.
EM huynh@ece.ualberta.ca; jm@ece.ualberta.ca
CR Agrawal Hiralal, 1990, PLDI, P246, DOI 10.1145/93542.93576
   Alhazmi OH, 2007, COMPUT SECUR, V26, P219, DOI 10.1016/j.cose.2006.10.002
   Basili V., 1994, The Goal Question Metric Approach, P528
   Baskerville R, 2004, INFORM SYST J, V14, P237, DOI 10.1111/j.1365-2575.2004.00171.x
   Boyd SW, 2004, LECT NOTES COMPUT SC, V3089, P292
   BUEHRER G, 2005, P 5 INT WORKSH SOFTW, P106, DOI DOI 10.1145/1108473.1108496
   Chen SY, 2006, INT INTEG REL WRKSP, P163, DOI 10.1109/IRWS.2006.305236
   Cova M, 2007, LECT NOTES COMPUT SC, V4637, P63
   DENNING D, 1997, COMMUN ACM, V20, P504
   Halfond WGJ, 2008, IEEE T SOFTWARE ENG, V34, P65, DOI 10.1109/TSE.2007.70748
   Halfond William G. J., 2006, P 14 ACM SIGSOFT INT, P175, DOI [10.1145/1181775.1181797, DOI 10.1145/1181775.1181797]
   Halfond WilliamG. J., 2005, P 20 IEEEACM INT C A, P174, DOI DOI 10.1145/1101908
   Huang XG, 2004, CHINESE J ELECTRON, V13, P40
   Johnson R, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE 13TH USENIX SECURITY SYMPOSIUM, P119
   Jovanovic N, 2006, P IEEE S SECUR PRIV, P258, DOI 10.1109/SP.2006.29
   Kals S., 2006, P 15 INT C WORLD WID, P247, DOI [DOI 10.1145/1135777.1135817, 10.1145/1135777.1135817]
   KIEZUN A, 2008, P 2009 IEEE 31 INT C, P199
   Liu A., 2009, P 2009 ACM S APPL CO, P2054, DOI DOI 10.1145/1529282.1529737
   Martin M.C., 2008, USENIX SECURITY S, P31
   Martinelli N, 2005, CLIN EXP MED, V5, P20, DOI 10.1007/s10238-005-0060-9
   Nguyen-tuong A., 2005, 20 IFIP INT INFORM S, P372
   *OWASP, 2007, TOP 10 2007
   Pietraszek T, 2006, LECT NOTES COMPUT SC, V3858, P124
   *RAPID7, 2005, VULN MAN TRENDS, P1
   Scambray J., 2006, HACKING EXPOSED WEB, V2nd
   Scott David., 2002, P 11 INT WORLD WIDE, P396
   Shankar U, 2001, USENIX ASSOCIATION PROCEEDINGS OF THE 10TH USENIX SECURITY SYMPOSIUM, P201
   SU Z, 2006, 33 ACM SIGPLAN SIGAC, P372
   Swiderski F., 2004, Threat modeling
   TIP F, 1995, J PROGRAM LANG, V3, P121
   WEISER M, 1984, IEEE T SOFTWARE ENG, V10, P352, DOI 10.1109/TSE.1984.5010248
   Zhang XL, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE 11TH USENIX SECURITY SYMPOSIUM, P33
NR 32
TC 8
Z9 8
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2010
VL 15
IS 5
BP 556
EP 576
DI 10.1007/s10664-010-9131-y
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 619WX
UT WOS:000279462100004
DA 2024-07-18
ER

PT J
AU Koch, S
AF Koch, Stefan
TI Exploring the effects of SourceForge.net coordination and communication
   tools on the efficiency of open source projects using data envelopment
   analysis
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Open source software; Data envelopment analysis; Communication;
   Coordination; Tools; Efficiency
ID SOFTWARE-DEVELOPMENT; SCALE ECONOMIES; PRODUCTIVITY; DISTANCE; MATURITY;
   QUALITY; SUCCESS
AB In this paper we explore possible benefits of communication and coordination tools in open source projects using an efficiency score derived from data envelopment analysis (DEA) as dependent variable. DEA is a general non-parametric method for efficiency comparisons without asking the user to define any relations between different factors or a production function. The method can account for economies or diseconomies of scale, and is able to deal with multi-input, multi-output systems in which the factors have different scales. Using two different data sets, successful and random open source projects, retrieved from SourceForge.net, we analyze impacts on their efficiency from the usage of communication and coordination tools. The results were mixed with no clear positive effects being proven consistently: In the data set of successful projects, mostly negative influences were found. On the contrary, tool adoption showed positive relationships to efficiency in the random data set. This stresses the importance of development status as a moderating variable and might also hint at threshold values for tool benefits. In addition, adoption of tools outside the hosting platform may be more likely for successful projects.
C1 Vienna Univ Econ & BA, Inst Informat Business, A-1090 Vienna, Austria.
C3 Vienna University of Economics & Business
RP Koch, S (corresponding author), Vienna Univ Econ & BA, Inst Informat Business, Augasse 2-6, A-1090 Vienna, Austria.
EM stefan.koch@wu-wien.ac.at
RI Koch, Stefan/B-8548-2017
OI Koch, Stefan/0000-0001-5959-3208
CR ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   AMOR JJ, 2006, P 8 INT WORKSH EC DR
   [Anonymous], FUTURE SOFTWARE ENG
   BANKER RD, 1994, INFORM SOFTWARE TECH, V36, P275, DOI 10.1016/0950-5849(94)90083-3
   BANKER RD, 1989, IEEE T SOFTWARE ENG, V15, P1199, DOI 10.1109/TSE.1989.559768
   BANKER RD, 1984, MANAGE SCI, V30, P1078, DOI 10.1287/mnsc.30.9.1078
   BANKER RD, 1991, MIS QUART, V15, P375, DOI 10.2307/249649
   Banker RD, 1997, MANAGE SCI, V43, P1709, DOI 10.1287/mnsc.43.12.1709
   Boehm BW., 2000, SOFTWARE COST ESTIMA, VII
   Brooks Frederick P., 1995, The mythical man-month
   Carmel E, 2001, IEEE SOFTWARE, V18, P22, DOI 10.1109/52.914734
   CHARNES A, 1978, EUR J OPER RES, V2, P429, DOI 10.1016/0377-2217(78)90138-8
   CHARNES A, 1978, 432 CARN U
   Crowston K., 2006, Software Process Improvement and Practice, V11, P123, DOI 10.1002/spip.259
   CROWSTON K, 2004, COLLABORATION CONFLI
   CROWSTON K, 2003, P ICIS 2003 SEATTL W
   DEMETRIOU N, 2006, OPEN SOURCE KNOWLEDG
   DIAZMARTINEZ Z, 2008, DEA DATA ENVELOPMENT
   DIXON R, 2003, OPEN SOURCE SOFTWARE
   Dutoit AH, 1998, IEEE T SOFTWARE ENG, V24, P615, DOI 10.1109/32.707697
   Faraj S, 2000, MANAGE SCI, V46, P1554, DOI 10.1287/mnsc.46.12.1554.12072
   FARRELL MJ, 1957, J R STAT SOC SER A-G, V120, P253, DOI 10.2307/2343100
   Fussell S.R., 1998, P ACM CSCW 98 C COMP, P275
   Gopal A., 2002, Communications of the ACM, V45, P193
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Hertel G, 2003, RES POLICY, V32, P1159, DOI 10.1016/S0048-7333(03)00047-7
   HOLCK J, 2004, FREE OPEN SOURCE SOF
   HOWISON J, 2004, P INT WORKSH MIN SOF, P7
   Hu Q, 1997, IEEE T SOFTWARE ENG, V23, P379, DOI 10.1109/32.601078
   Hunt F., 2002, Proceedings of Open Source Software Development Workshop, P122
   Kitchenham B, 2004, IEEE T SOFTWARE ENG, V30, P1023, DOI 10.1109/TSE.2004.104
   Kitchenham BA, 2002, INFORM SOFTWARE TECH, V44, P13, DOI 10.1016/S0950-5849(01)00204-X
   Koch S, 2002, INFORM SYST J, V12, P27, DOI 10.1046/j.1365-2575.2002.00110.x
   Koch S., 2008, Emerging Free and Open Source Software Practices, P25
   Koch S., 2004, ELECTRON MARK, V14, P77
   KOCH S, 2005, 032005 WIRTSCH WIEN
   Koch S, 2008, J DATABASE MANAGE, V19, P31, DOI 10.4018/jdm.2008040102
   Koch S, 2007, J SOFTW MAINT EVOL-R, V19, P361, DOI 10.1002/smr.348
   KRAUT RE, 1995, COMMUN ACM, V38, P69, DOI 10.1145/203330.203345
   Krishnan MS, 2000, MANAGE SCI, V46, P745, DOI 10.1287/mnsc.46.6.745.11941
   LAURENT LS, 2004, UNDERSTANDING OPEN S
   LEON A, 2000, GUIDE SOFTWARE CONFI
   Michlmayr M, 2005, FRONT ARTIF INTEL AP, V130, P3
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Myrtveit I., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P269, DOI 10.1109/METRIC.1999.809748
   PAULK MC, 1993, IEEE SOFTWARE, V10, P18, DOI 10.1109/52.219617
   Perens B., 1999, Open Sources: Voices from the Open Source Revolution
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Raymond Eric, 1999, KNOWLEDGE TECHNOLOGY, V12, P23, DOI DOI 10.1007/S12130-999-1026-0
   Reel JS, 1999, IEEE SOFTWARE, V16, P18, DOI 10.1109/52.765782
   Robbins J., 2005, Perspectives on Free and Open Source Software
   Rosen Lawrence., 2004, Open Source Licensing: Software Freedom and Intellectual Property Law
   Rusovan Srdjan., 2005, PERSPECTIVES FREE OP
   Scacchi W., 2006, Software Process Improvement and Practice, V11, P95, DOI 10.1002/spip.255
   STALLMAN RM, 2005, FREE SOFTWARE FREE S
   Stewart K. J., 2006, Software Process Improvement and Practice, V11, P177, DOI 10.1002/spip.258
   Stewart KJ, 2006, INFORM SYST RES, V17, P126, DOI 10.1287/isre.1060.0082
   STEWART KJ, 2004, COLLABORATION CONFLI
   Varian H., 2005, INTERMEDIATE MICROEC
   von Mayrhauser A., 2000, Empirical Software Engineering, V5, P125, DOI 10.1023/A:1009815306795
   Weiss D., 2005, Proceedings of the First International Conference on Open Source Systems (OSS 2005), P93
NR 61
TC 14
Z9 21
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2009
VL 14
IS 4
BP 397
EP 417
DI 10.1007/s10664-008-9086-4
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 461TM
UT WOS:000267294400002
DA 2024-07-18
ER

PT J
AU Runeson, P
   Höst, M
AF Runeson, Per
   Hoest, Martin
TI Guidelines for conducting and reporting case study research in software
   engineering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Case study; Research methodology; Checklists; Guidelines
ID EMPIRICAL-RESEARCH; METHODOLOGY
AB Case study is a suitable research methodology for software engineering research since it studies contemporary phenomena in its natural context. However, the understanding of what constitutes a case study varies, and hence the quality of the resulting studies. This paper aims at providing an introduction to case study methodology and guidelines for researchers conducting case studies and readers studying reports of such studies. The content is based on the authors' own experience from conducting and reading case studies. The terminology and guidelines are compiled from different methodology handbooks in other research domains, in particular social science and information systems, and adapted to the needs in software engineering. We present recommended practices for software engineering case studies as well as empirically derived and evaluated checklists for researchers and readers of case study research.
C1 [Runeson, Per; Hoest, Martin] Lund Univ, Dept Comp Sci, SE-22100 Lund, Sweden.
C3 Lund University
RP Runeson, P (corresponding author), Lund Univ, Dept Comp Sci, Box 118, SE-22100 Lund, Sweden.
EM per.runeson@cs.lth.se; martin.host@cs.lth.se
RI Runeson, Per/H-5113-2019; Höst, Martin/KDN-4323-2024
OI Runeson, Per/0000-0003-2795-4851; Höst, Martin/0000-0002-9360-8693
FU Swedish Research Council [622-2004-552]
FX The authors are grateful to the feedback to the checklists from the
   ISERN members and IASESE attendants in September 2007. A special thank
   to Professor Claes Wohlin, Mr. Kim Weyns and Mr. Andreas Jedlitschka for
   their review of an earlier draft of the paper. Thanks also to the
   anonymous reviewers for proposals on substantial improvements. The work
   is partly funded by the Swedish Research Council under grant
   622-2004-552 for a senior researcher position in software engineering.
CR Anastas J.W., 1994, Research design for social workers and the human services
   Andersson C, 2007, IEEE T SOFTWARE ENG, V33, P273, DOI 10.1109/TSE.2007.1005
   Andrews A. A., 2001, Empirical Software Engineering, V6, P105, DOI 10.1023/A:1011442319273
   [Anonymous], 2004, Qualitative research practice
   Avison D., 2001, Information Technology & People, V14, P28, DOI 10.1108/09593840110384762
   BASILI VR, 1984, IEEE T SOFTWARE ENG, V10, P728, DOI 10.1109/TSE.1984.5010301
   BASILI VR, 1986, IEEE T SOFTWARE ENG, V12, P733, DOI 10.1109/TSE.1986.6312975
   Baskerville RL, 1996, J INFORM TECHNOL, V11, P235, DOI 10.1080/026839696345289
   BENBASAT I, 1987, MIS QUART, V11, P369, DOI 10.2307/248684
   Corbin J., 2015, BASICS QUALITATIVE R
   DALKEY N, 1963, MANAGE SCI, V9, P458, DOI 10.1287/mnsc.9.3.458
   Dittrich Y, 2008, EMPIR SOFTW ENG, V13, P231, DOI 10.1007/s10664-007-9057-1
   Dittrich Y, 2007, INFORM SOFTWARE TECH, V49, P531, DOI 10.1016/j.infsof.2007.02.009
   EASTERBROOK S, 2008, GUIDE ADV EMPIRICAL, pCH11
   EISENHARDT KM, 1989, ACAD MANAGE REV, V14, P532, DOI 10.2307/258557
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   Flynn B., 1990, J OPER MANAG, V9, P250, DOI [10.1016/0272-6963(90)90098-X, DOI 10.1016/0272-6963(90)90098-X]
   Gorschek T, 2006, IEEE SOFTWARE, V23, P88, DOI 10.1109/MS.2006.147
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   HOST M, 2007, P 1 INT S EMP SOFTW, P479
   HOVE SE, 2005, P 11 IEEE INT SOFT M, V23, P1
   Iversen JH, 2004, MIS QUART, V28, P395
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Johnson PM, 2005, IEEE SOFTWARE, V22, P76, DOI 10.1109/MS.2005.95
   Karahasanovi A, 2005, EMPIR SOFTW ENG, V10, P113, DOI 10.1007/s10664-004-6189-4
   Karlström D, 2006, EMPIR SOFTW ENG, V11, P203, DOI 10.1007/s10664-006-6402-8
   Karlström D, 2005, IEEE SOFTWARE, V22, P43, DOI 10.1109/MS.2005.59
   KARLSTROM D, 2004, THESIS LUND U
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Kitchenham B., 2007, EBSE200701 KEEL U U
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham B, 2008, EMPIR SOFTW ENG, V13, P97, DOI 10.1007/s10664-007-9053-5
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   LEE AS, 1989, MIS QUART, V13, P33, DOI 10.2307/248698
   Lethbridge TC, 2005, EMPIR SOFTW ENG, V10, P311, DOI 10.1007/s10664-005-1290-x
   Maimbo H, 2005, PACIFIC ASIA CONFERENCE ON INFORMATION SYSTEMS 2005, SECTIONS 1-8 AND POSTER SESSIONS 1-6, P1281
   Moher T., 1981, 5th International Conference on Software Engineering, P224
   Owen S, 2006, COMMUN ACM, V49, P117, DOI 10.1145/1113034.1113039
   PERRY DE, 2005, 29 ANN IEEE NASA SOF, P96
   Ramesh V, 2004, J SYST SOFTWARE, V70, P165, DOI [10.1016/S0164-1212(03)00015-3, 10.1016/S0164-1212(03)00014-1]
   Regnell B., 2001, Requirements Engineering, V6, P51, DOI 10.1007/s007660170015
   Robinson H, 2007, INFORM SOFTWARE TECH, V49, P540, DOI 10.1016/j.infsof.2007.02.007
   Robson C., 2002, Real world research
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Sharp H, 2004, EMPIR SOFTW ENG, V9, P353, DOI 10.1023/B:EMSE.0000039884.79385.54
   Shull F, 2002, 2002 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P7, DOI 10.1109/ISESE.2002.1166920
   Shull F, 2008, GUIDE ADV EMPIRICAL
   SIM SE, 2001, EMPIR SOFTW ENG, V6, P85, DOI [DOI 10.1023/A:1009809824225, 10.1023/A:1009809824225]
   Singer J, 2002, IEEE T SOFTWARE ENG, V28, P1171, DOI 10.1109/TSE.2002.1158289
   Sjoberg D. I. K., 2008, Guide to Advanced Empirical Software Engineering, P312
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Stake Robert E., 1995, The Art of Case Study Research
   Tichy W. F., 2000, Empirical Software Engineering, V5, P309, DOI 10.1023/A:1009844119158
   Tichy WF, 1998, COMPUTER, V31, P32, DOI 10.1109/2.675631
   Van Solingen Rini, 1999, The Goal/ Question/ Metric Method: a practical guide for quality improvement of software development
   vonMayrhauser A, 1996, IEEE T SOFTWARE ENG, V22, P424, DOI 10.1109/32.508315
   Wallace C, 2002, IEEE 2002 SYMPOSIA ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P63, DOI 10.1109/HCC.2002.1046348
   Wohlin C, 2001, INFORM SOFTWARE TECH, V43, P921, DOI 10.1016/S0950-5849(01)00200-2
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Wohlin C., 2003, EMPIRICAL METHODS ST
   Yin R. K., 2015, CASE STUDY RES DESIG
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
NR 62
TC 1960
Z9 2171
U1 10
U2 121
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2009
VL 14
IS 2
BP 131
EP 164
DI 10.1007/s10664-008-9102-8
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 414VA
UT WOS:000263892100001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Andersson, C
AF Andersson, Carina
TI A replicated empirical study of a selection method for software
   reliability growth models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE replication; software reliability
ID COST
AB Replications are commonly considered to be important contributions to investigate the generality of empirical studies. By replicating an original study it may be shown that the results are either valid or invalid in another context, outside the specific environment in which the original study was launched. The results of the replicated study show how much confidence we could possibly have in the original study. We present a replication of a method for selecting software reliability growth models to decide whether to stop testing and release software. We applied the selection method in an empirical study, conducted in a different development environment than the original study. The results of the replication study show that with the changed values of stability and curve fit, the selection method works well on the empirical system test data available, i.e., the method was applicable in an environment that was different from the original one. The application of the SRGMs to failures during functional testing resulted in predictions with low relative error, thus providing a useful approach in giving good estimates of the total number of failures to expect during functional testing.
C1 Lund Univ, Dept Commun Syst, S-22100 Lund, Sweden.
C3 Lund University
RP Andersson, C (corresponding author), Lund Univ, Dept Commun Syst, Box 118, S-22100 Lund, Sweden.
EM Carina.Andersson@telecom.lth.se
CR [Anonymous], 1997, Software metrics: A rigorous and practical approach
   [Anonymous], IEEE COMPUT
   EHRLICH W, 1993, IEEE SOFTWARE, V10, P33, DOI 10.1109/52.199726
   EHRLICH WK, 1990, IEEE SOFTWARE, V7, P56, DOI 10.1109/52.50774
   Fujiwara T, 2003, ELECTRON COMM JPN 3, V86, P11, DOI 10.1002/ecjc.10035
   Gaudoin O, 2003, IEEE T RELIAB, V52, P69, DOI 10.1109/TR.2002.805784
   GOEL AL, 1979, IEEE T RELIAB, V28, P206, DOI 10.1109/TR.1979.5220566
   Huang CY, 2005, J SYST SOFTWARE, V77, P139, DOI 10.1016/j.jss.2004.10.014
   *IEEE STD, 1990, 610121990 IEEE STD
   *INT STAND ORG, 2000, 91261 ISOIEC FDIS
   Jeske DR, 2005, J SYST SOFTWARE, V74, P85, DOI 10.1016/j.jss.2003.10.024
   Kececioglu D., 1991, RELIABILITY ENG HDB, V2
   Lyu M., 1996, Handbook of Software Reliability Engineering
   Miller J, 2005, INFORM SOFTWARE TECH, V47, P233, DOI 10.1016/j.infsof.2004.08.005
   Montgomery DC., 2001, Design and Analysis of Experiments
   Musa J., 1999, SOFTWARE RELIABILITY
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   MUSA JD, 1989, IEEE SOFTWARE, V6, P19, DOI 10.1109/52.28120
   Robson C., 2002, Real world research
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   Stringfellow C., 2002, Empirical Software Engineering, V7, P319, DOI 10.1023/A:1020515105175
   STRINGFELLOW C, 2000, THESIS COLORADO STAT
   Wood A, 1997, EIGHTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P136, DOI 10.1109/ISSRE.1997.630858
   YAMADA S, 1983, IEEE T RELIAB, V32, P475, DOI 10.1109/TR.1983.5221735
   YAMADA S, 1986, IEEE T RELIAB, V35, P19, DOI 10.1109/TR.1986.4335332
NR 25
TC 23
Z9 30
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD APR
PY 2007
VL 12
IS 2
BP 161
EP 182
DI 10.1007/s10664-006-9018-0
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 142YU
UT WOS:000244688000004
DA 2024-07-18
ER

PT J
AU Subramanian, GH
   Pendharkar, PC
   Wallace, M
AF Subramanian, Girish H.
   Pendharkar, Parag C.
   Wallace, Mary
TI An empirical study of the effect of complexity, platform, and program
   type on software development effort of business applications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE software complexity; computer platform; online and batch programs;
   software development effort; empirical studies of programming and
   software engineering
ID DEVELOPMENT COST ESTIMATION; OBJECT-ORIENTED SYSTEMS; MODEL;
   PRODUCTIVITY; MAINTENANCE; PREDICTION; VALIDATION; IMPROVE; METRICS
AB Several popular cost estimation models like COCOMO and function points use adjustment variables, such as software complexity and platform, to modify original estimates and arrive at final estimates. Using data on 666 programs from 15 software projects, this study empirically tests a research model that studies the influence of three adjustment variables-software complexity, computer platform, and program type (batch or online programs) on software effort. The results confirm that all the three adjustment variables have a significant effect on effort. Further, multiple comparison of means also points to two other results for the data examined. Batch programs involve significantly higher software effort than online programs. Programs rated as complex have significantly higher effort than programs rated as average.
C1 Penn State Harrisburg, Sch Business, Middletown, PA 17057 USA.
   Comp Aid Corp, Harrisburg, PA USA.
C3 Pennsylvania Commonwealth System of Higher Education (PCSHE);
   Pennsylvania State University
RP Subramanian, GH (corresponding author), Penn State Harrisburg, Sch Business, E355 Olmsted Bldg,777 W Harrisburg Pike, Middletown, PA 17057 USA.
EM ghs2@psu.edu; pxpl9@psu.edu
RI Wallace, Mary/HLX-7996-2023
CR Abran A, 1996, IEEE T SOFTWARE ENG, V22, P895, DOI 10.1109/32.553638
   ALBRECHT AJ, 1983, IEEE T SOFTWARE ENG, V9, P639, DOI 10.1109/TSE.1983.235271
   [Anonymous], ANN SOFTWARE ENG SPE
   [Anonymous], 1997, Software metrics: A rigorous and practical approach
   BANKER RD, 1993, COMMUN ACM, V36, P81, DOI 10.1145/163359.163375
   Banker RD, 1997, MANAGE SCI, V43, P1709, DOI 10.1287/mnsc.43.12.1709
   Banker RD, 1998, MANAGE SCI, V44, P433, DOI 10.1287/mnsc.44.4.433
   Berenson M.L., 1983, INTERMEDIATE STAT ME
   Boehm B, 2000, ANN SOFTW ENG, V10, P177, DOI 10.1023/A:1018991717352
   Boehm BW., 1981, Software Engineering Economics
   Briand L. C, 2001, P 7 INT S SOFTW METR, P260
   Burgess CJ, 2001, INFORM SOFTWARE TECH, V43, P863, DOI 10.1016/S0950-5849(01)00192-6
   CHRYSLER E, 1978, COMMUN ACM, V21, P472, DOI 10.1145/359511.359523
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   Cowderoy A. J. C., 1988, Second IEE/BCS Conference: Software Engineering 88 (Conf. Publ. No.290), P80
   Fairley R. E., 1992, International Conference on Software Engineering, P382, DOI 10.1145/143062.143155
   Gorla N, 1997, J SYST SOFTWARE, V36, P191, DOI 10.1016/0164-1212(95)00202-2
   Gray A. R., 1999, Proceedings Sixth International Software Metrics Symposium (Cat. No.PR00403), P216, DOI 10.1109/METRIC.1999.809743
   Huang SJ, 2001, INFORM MANAGE-AMSTER, V38, P449, DOI 10.1016/S0378-7206(00)00081-1
   JENSEN DM, 1999, TECH GASTROINTEST EN, V1, P107
   Jensen R. W., 1984, P INT SOC PAR AN, P96
   Johnson B, 2000, IEEE SOFTWARE, V17, P6
   Jones C, 1996, COMPUTER, V29, P116, DOI 10.1109/MC.1996.485905
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jung HW, 2000, J SYST SOFTWARE, V51, P111, DOI 10.1016/S0164-1212(99)00116-8
   KEMERER CF, 1992, IEEE T SOFTWARE ENG, V18, P1011, DOI 10.1109/32.177370
   KEMERER CF, 1987, COMMUN ACM, V30, P416, DOI 10.1145/22899.22906
   KITCHENHAM BA, 1985, J SYST SOFTWARE, V5, P267, DOI 10.1016/0164-1212(85)90026-3
   Laudon K.C., 1999, MANAGEMENT INFORM SY, VFifth
   LEDERER AL, 1990, MIS QUART, V14, P159, DOI 10.2307/248774
   LEDERER AL, 1992, COMMUN ACM, V35, P50
   Lee A, 1998, INFORM MANAGE-AMSTER, V34, P1, DOI 10.1016/S0378-7206(98)00041-X
   LIND RK, 1989, IEEE T SOFTWARE ENG, V15, P649, DOI 10.1109/32.24715
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mendes E, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P131, DOI 10.1109/METRIC.2002.1011332
   MUKHOPADHYAY T, 1992, MIS Q, V16, P5
   Nesi P, 1998, J SYST SOFTWARE, V42, P89, DOI 10.1016/S0164-1212(97)10021-8
   Norden P V, 1963, USEFUL TOOLS PROJECT
   PENDHARKAR P, 2004, EMPIRICAL STUDY ICAS
   Pendharkar PC, 2005, IEEE T SOFTWARE ENG, V31, P615, DOI 10.1109/TSE.2005.75
   Pendharkar PC, 2002, J COMPUT INFORM SYST, V43, P7
   Putnam LH, 1984, J SYST SOFTW, V5, P147
   PUTNAM LH, 1978, IEEE T SOFTWARE ENG, V4, P5
   REIFER DJ, 1987, J SYST SOFTWARE, V7, P279, DOI 10.1016/0164-1212(87)90027-6
   RULE G, 2000, IEEE SOFTWARE, V17, P22
   Shelly G.B., 2001, SYSTEMS ANAL DESIGN
   SHEN VY, 1983, IEEE T SOFTWARE ENG, V9, P155, DOI 10.1109/TSE.1983.236460
   Smith RK, 2001, IEEE T SOFTWARE ENG, V27, P264, DOI 10.1109/32.910861
   Stamelos I, 2003, INFORM SOFTWARE TECH, V45, P51, DOI 10.1016/S0950-5849(02)00163-5
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   Subramanian G. H., 1996, Journal of Management Information Systems, V12, P143
   SUBRAMANIAN GH, 1995, J SYST SOFTWARE, V31, P135, DOI 10.1016/0164-1212(94)00093-3
   SYMONS CR, 1988, IEEE T SOFTWARE ENG, V14, P2, DOI 10.1109/32.4618
   Tam KY, 2001, J MANAGE INFORM SYST, V17, P97
   TEGARDEN DP, 1995, DECIS SUPPORT SYST, V13, P241, DOI 10.1016/0167-9236(93)E0045-F
   WRIGLEY CD, 1991, MIS QUART, V15, P245, DOI 10.2307/249386
   ZELKOWITZ MV, 1988, J SYST SOFTWARE, V8, P331, DOI 10.1016/0164-1212(88)90016-7
NR 57
TC 14
Z9 14
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2006
VL 11
IS 4
BP 541
EP 553
DI 10.1007/s10664-006-9023-3
PG 13
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA 116LS
UT WOS:000242805000003
DA 2024-07-18
ER

PT J
AU Jorgensen, M
AF Jorgensen, M
TI Regression models of software development effort estimation accuracy and
   bias
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT Joint Conference of the
   Evaluation-and-Assessment-in-Software-Engineering
   (EASE)/Psychology-of-Programming-Interest-Group (PPIG)
CY APR, 2003
CL Keele Univ, Keele, ENGLAND
SP Evaluat & Assessment Software Engn, Psychol Programming Interest Grp
HO Keele Univ
AB This paper describes models whose purpose is to explain the accuracy and bias variation of an organization's estimates of software development effort through regression analysis. We collected information about variables that we believed would affect the accuracy or bias of estimates of the performance of tasks completed by the organization. In total, information about 49 software development tasks was collected. We found that the following conditions led to inaccuracies in estimates: (1) Estimates were provided by a person in the role of "software developer" instead of "project leader", (2) The project had as its highest priority time-to-delivery instead of quality or cost, and (3) The estimator did not participate in the completion of the task. The following conditions led to an increased bias towards underestimation: (1) Estimates were provided by a person with the role of "project leader" instead of "software developer". (2) The estimator assessed the accuracy of own estimates of similar, previously completed tasks to be low (more than 20% error). Although all variables included in the models were significant (p < 0.1), the explanatory and predictive power of both models was poor, that is, most of the variance in the accuracy and bias of estimates was not explained or predicted by our models. In addition, there were several important threats to the validity of the coefficients suggested by the models. An analysis of the estimators' own descriptions of the reasons for achieved estimation accuracy on each task suggests that it will be difficult to include all important estimation accuracy and bias factors in regression-based models. It is. for this reason, not realistic to expect such models to replace human judgment in estimation uncertainty assessments and as input to plans for the improvement of estimates. It is, nevertheless, possible that the type of formal analysis and regression-based models presented in this paper may, in some cases, be useful as support for human judgment.
C1 Simula Res Lab, Oslo, Norway.
RP Simula Res Lab, Oslo, Norway.
EM magne.jorgensen@simula.no
RI Jorgensen, Magne/H-4402-2016
CR Angelis L., 2000, Empirical Software Engineering, V5, P35, DOI 10.1023/A:1009897800559
   Briand L. C., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P313, DOI 10.1109/ICSE.1999.841022
   Connolly T, 1997, MANAGE SCI, V43, P1029, DOI 10.1287/mnsc.43.7.1029
   GRAY A, 1999, 6 INT SOFTW METR S I, P216
   JORGENSEN M, 1995, IEEE T SOFTWARE ENG, V21, P674, DOI 10.1109/32.403791
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P79, DOI 10.1016/S0164-1212(02)00160-7
   Jorgensen M, 2003, INFORM SOFTWARE TECH, V45, P123, DOI 10.1016/S0950-5849(02)00188-X
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   JORGENSEN M, 2002, INT C PROJ MAN PROMA, P343
   JORGENSEN M, 2002, EMPIRICAL ASSESSMENT
   MIYAZAKI Y, 1994, J SYST SOFTWARE, V27, P3, DOI 10.1016/0164-1212(94)90110-4
NR 11
TC 26
Z9 28
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2004
VL 9
IS 4
BP 297
EP 314
DI 10.1023/B:EMSE.0000039881.57613.cb
PG 18
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 863NR
UT WOS:000224569200003
DA 2024-07-18
ER

PT J
AU Obie, HO
   Du, H
   Madampe, K
   Shahin, M
   Ilekura, I
   Grundy, J
   Li, L
   Whittle, J
   Turhan, B
   Khalajzadeh, H
AF Obie, Humphrey O.
   Du, Hung
   Madampe, Kashumi
   Shahin, Mojtaba
   Ilekura, Idowu
   Grundy, John
   Li, Li
   Whittle, Jon
   Turhan, Burak
   Khalajzadeh, Hourieh
TI Automated detection, categorisation and developers' experience with the
   violations of honesty in mobile apps
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Human values; Honesty; Mobile apps; Machine Learning; App reviews;
   Mixed-methods; Developer experience
ID DISHONESTY; VALUES
AB Human values such as honesty, social responsibility, fairness, privacy, and the like are things considered important by individuals and society. Software systems, including mobile software applications (apps), may ignore or violate such values, leading to negative effects in various ways for individuals and society. While some works have investigated different aspects of human values in software engineering, this mixed-methods study focuses on honesty as a critical human value. In particular, we studied (i) how to detect honesty violations in mobile apps, (ii) the types of honesty violations in mobile apps, and (iii) the perspectives of app developers on these detected honesty violations. We first develop and evaluate 7 machine learning (ML) models to automatically detect violations of the value of honesty in app reviews from an end-user perspective. The most promising was a Deep Neural Network model with F1 score of 0.921. We then conducted a manual analysis of 401 reviews containing honesty violations and characterised honesty violations in mobile apps into 10 categories: unfair cancellation and refund policies; false advertisements; delusive subscriptions; cheating systems; inaccurate information; unfair fees; no service; deletion of reviews; impersonation; and fraudulent-looking apps. A developer survey and interview study with mobile developers then identified 7 key causes behind honesty violations in mobile apps and 8 strategies to avoid or fix such violations. The findings of our developer study also articulate the negative consequences that honesty violations might bring for businesses, developers, and users. Finally, the app developers' feedback shows that our prototype ML-based models can have promising benefits in practice.
C1 [Obie, Humphrey O.; Madampe, Kashumi; Grundy, John] Monash Univ, Melbourne, Australia.
   [Du, Hung; Khalajzadeh, Hourieh] Deakin Univ, Melbourne, Australia.
   [Shahin, Mojtaba] RMIT Univ, Melbourne, Australia.
   [Ilekura, Idowu] Data Sci Nigeria, Lagos, Nigeria.
   [Li, Li] Beihang Univ, Sch Software, Beijing, Peoples R China.
   [Whittle, Jon] CSIROs Data61, Melbourne, Australia.
   [Turhan, Burak] Univ Oulu, Oulu, Finland.
C3 Monash University; Deakin University; Royal Melbourne Institute of
   Technology (RMIT); Beihang University; Commonwealth Scientific &
   Industrial Research Organisation (CSIRO); University of Oulu
RP Madampe, K (corresponding author), Monash Univ, Melbourne, Australia.
EM humphrey.obie@monash.edu; hung.du@deakin.edu.au;
   kashumi.madampe@monash.edu; mojtaba.shahin@rmit.edu.au;
   ilekuraidowu@gmail.com; john.grundy@monash.edu; lilicoding@ieee.org;
   jon.whittle@data61.csiro.au; burak.turhan@oulu.fi;
   hkhalajzadeh@deakin.edu.au
RI Khalajzadeh, Hourieh/AAR-6188-2020; Grundy, John/AAF-1716-2019; Turhan,
   Burak/G-7400-2011; Madampe, Kashumi/AAY-9008-2021
OI Khalajzadeh, Hourieh/0000-0001-9958-0102; Grundy,
   John/0000-0003-4928-7076; Turhan, Burak/0000-0003-1511-2163; Madampe,
   Kashumi/0000-0003-1363-8786
FU This work is supported by ARC Discovery Grant DP200100020. Madampe and
   Grundy are supported by ARC Laureate Fellowship FL190100035.
   [DP200100020]; ARC Discovery Grant [FL190100035]; ARC Laureate
   Fellowship
FX This work is supported by ARC Discovery Grant DP200100020. Madampe and
   Grundy are supported by ARC Laureate Fellowship FL190100035.
CR Aggarwal Charu C, 2012, A survey of text clustering algorithms, P163, DOI [10.1007/978-1-4614-3223-4, DOI 10.1007/978-1-4614-3223-46]
   Agre PE., 1997, Social science, technical systems, and cooperative work: Beyond the great divide
   Aldewereld Huib, 2015, Design for values information and communication technologies in software development, P831
   AlOmar EA, 2021, CHI '21: PROCEEDINGS OF THE 2021 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3411764.3445281
   Barr K, 2022, Pervasive 'dark patterns' are fooling people into signing up for services they don't want
   Bowman E, 2021, After data breach exposes 530 million, facebook says it will not notify users
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Carreño LVG, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P582, DOI 10.1109/ICSE.2013.6606604
   Chee F. M., 2012, Bulletin of Science, Technology and Society, V32, P497, DOI 10.1177/0270467612469074
   Cheng AS, 2010, P 73 ASIS T ANN M NA
   Ciurumelea A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P91, DOI 10.1109/SANER.2017.7884612
   Devlin J, 2019, 2019 CONFERENCE OF THE NORTH AMERICAN CHAPTER OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS: HUMAN LANGUAGE TECHNOLOGIES (NAACL HLT 2019), VOL. 1, P4171
   Di Sorbo A, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P499, DOI 10.1145/2950290.2950299
   Dictionary C, 2021, Definition of 'impersonate'
   Dictionary C, 2021, Definition of 'honesty'
   Dong F, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P257, DOI 10.1145/3236024.3236045
   Eler MM, 2019, PROCEEDINGS OF THE 18TH BRAZILIAN SYMPOSIUM ON HUMAN FACTORS IN COMPUTING SYSTEMS (IHC 2019), DOI 10.1145/3357155.3358477
   Fochmann M, 2021, J ECON BEHAV ORGAN, V185, P250, DOI 10.1016/j.jebo.2021.02.018
   Gao Y, 2022, ACM JOINT EUR SOFTW
   Goodfellow I, 2020, COMMUN ACM, V63, P139, DOI 10.1145/3422622
   Gotterbarn D, 2018, COMMUN ACM, V61, P121, DOI 10.1145/3173016
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   Haggag O, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10222-6
   Henderson JG, 2022, FTC report shows rise in sophisticated dark patterns designed to trick and trap consumers
   Hu Yangyu, 2019, IEEE Transactions on Dependable and Secure Computing
   Hussain W, 2020, IEEE Transactions on Software Engineering, P1
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Jacquemet N, 2021, PLOS ONE, V16, DOI 10.1371/journal.pone.0244958
   Joerges B, 1999, SOC STUD SCI, V29, P411, DOI 10.1177/030631299029003004
   Keyes R., 2004, The post-truth era: Dishonesty and deception in contemporary life
   Khalajzadeh H, 2022, arXiv
   King C., 2017, William Mary School of Law, V58, P1365
   Kohavi R., 1995, P 14 INT JOINT C ART, P1137
   Kumar CPS, 2010, INT CONF ACOUST SPEE, P5010, DOI 10.1109/ICASSP.2010.5495067
   Lang J.M., 2013, Cheating lessons: Learning from academic dishonesty, DOI DOI 10.4159/HARVARD.9780674726239
   Lennox John, 2020, 2084: Artificial Intelligence and the Future of Humanity
   Levin S, 2019, Arxiv, DOI arXiv:1903.04909
   Levin Stanislav, 2017, P 13 INT C PREDICTIV, P97
   Li C, 2021, A first step towards detecting values-violating defects in android apis
   Li Li, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P170, DOI 10.1109/MOBILESoft.2017.6
   Li L, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P195, DOI 10.1109/QRS.2015.36
   Li Xiaozhou, 2018, SOMET
   Maldonado ED, 2017, IEEE T SOFTWARE ENG, V43, P1044, DOI 10.1109/TSE.2017.2654244
   Mathews C, 2021, PROCEEDINGS OF THE 16TH INTERNATIONAL CONFERENCE ON SOFTWARE TECHNOLOGIES (ICSOFT), P386, DOI 10.5220/0010576503860397
   Mazar N, 2006, J PUBLIC POLICY MARK, V25, P117, DOI 10.1509/jppm.25.1.117
   McCabe DL, 2005, INT J EDUC INTEGR, V1
   Miller Christian B, 2021, Honesty: The Philosophy and Psychology of a Neglected Virtue, DOI DOI 10.1093/OSO/9780197567494.001.0001
   MORRISSEY ER, 1974, SOCIOL METHOD RES, V3, P209, DOI 10.1177/004912417400300204
   Mougouei D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P780, DOI 10.1145/3236024.3264843
   Mougouei Davoud, 2020, P IEEE ACM 42 INT C, P133
   Nakamoto S, 2008, BITCOIN PEER TO PEER, DOI DOI 10.1007/S10838-008-9062-0
   Noble WS, 2006, NAT BIOTECHNOL, V24, P1565, DOI 10.1038/nbt1206-1565
   Nurwidyantoro A, 2021, P 15 ACM IEEE INT S
   Obie HO, 2022, The replication repository of this manuscript
   Obie HO, 2021, Does domain change the opinion of individuals on human values? a preliminary investigation on ehealth apps end-users
   Obie HO, 2022, IEEE WORK CONF MIN S, P321, DOI 10.1145/3524842.3527937
   Obie HO, 2021, 2021 IEEE/ACM 43RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P29, DOI 10.1109/ICSE-SEIS52602.2021.00012
   ONeill Onora., 2002, A question of trust: the 2002 Reith lectures
   Palomba F, 2015, PROC IEEE INT CONF S, P291, DOI 10.1109/ICSM.2015.7332475
   Panichella S, 2015, PROC IEEE INT CONF S, P281, DOI 10.1109/ICSM.2015.7332474
   Pelloni L, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P522, DOI 10.1109/SANER.2018.8330252
   Perera H, 2020, PROC INT CONF SOFTW, P409, DOI 10.1145/3377811.3380393
   Perera H, 2019, INT REQUIR ENG CONF, P404, DOI 10.1109/RE.2019.00053
   Perez Sarah., 2019, Dating app maker match sued by ftc for fraud
   Peters F, 2019, IEEE T SOFTWARE ENG, V45, P615, DOI 10.1109/TSE.2017.2787653
   Vu PM, 2015, IEEE INT CONF AUTOM, P749, DOI 10.1109/ASE.2015.85
   Rokeach M., 1973, NATURE HUMAN VALUES
   Samhi J, 2022, PROC INT CONF SOFTW, P723, DOI 10.1145/3510003.3510135
   Schwartz S. H., 2012, ONLINE READINGS PSYC, V2, DOI [https://doi.org/10.9707/2307-0919.1116, DOI 10.9707/2307-0919.1116]
   SCHWARTZ SH, 1992, ADV EXP SOC PSYCHOL, V25, P1, DOI 10.1016/s0065-2601(08)60281-6
   Seyff Norbert, 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P37, DOI 10.1109/RE.2010.15
   Shaffery P, 2021, Cyber security: When the cover up is worse than the crime: uber & the consequences of hiding a data breach
   Shams R. A., 2021, 54 HAW INT C SYST SC, P1
   Shams RA, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN SOCIETY (ICSE-SEIS 2021), P53, DOI 10.1145/3377815.3381382
   STRUTZEL E, 1968, NURS RES, V17, P364
   Sullins John., 2018, Information technology and moral values
   van Haasteren A, 2019, DIGIT HEALTH, V5, DOI 10.1177/2055207619886463
   Whittle J, 2021, IEEE SOFTWARE, V38, P106, DOI 10.1109/MS.2019.2956701
   Whittle J, 2019, IEEE SOFTWARE, V36, P112, DOI 10.1109/MS.2019.2897397
   WINNER L, 1980, DAEDALUS, V109, P121
   Winter E, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267427
   Yiacoumi R, 2021, Online educator shaw academy to refund students: 'free trial' charged students even when they cancelled
   Zhu L, 2021, Ai and ethics-operationalising responsible ai
   Zhu YK, 2015, IEEE I CONF COMP VIS, P19, DOI 10.1109/ICCV.2015.11
NR 84
TC 1
Z9 1
U1 1
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 134
DI 10.1007/s10664-023-10361-4
PG 52
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA T0IA8
UT WOS:001074898500001
OA hybrid, Green Published, Green Submitted
DA 2024-07-18
ER

PT J
AU Wang, D
   Kondo, M
   Kamei, Y
   Kula, RG
   Ubayashi, N
AF Wang, Dong
   Kondo, Masanari
   Kamei, Yasutaka
   Kula, Raula Gaikovina
   Ubayashi, Naoyasu
TI When conversations turn into work: a taxonomy of converted discussions
   and issues in GitHub
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Communication Channels; GitHub Discussion; Empirical Study
ID BUG REPORT DETECTION
AB Popular and large contemporary open-source projects now embrace a diverse set of documentation for communication channels. Examples include contribution guidelines (i.e., commit message guidelines, coding rules, submission guidelines), code of conduct (i.e., rules and behavior expectations), governance policies, and Q&A forum. In 2020, GitHub released Discussion to distinguish between communication and collaboration. However, it remains unclear how developers maintain these channels, how trivial it is, and whether deciding on conversion takes time. We conducted an empirical study on 259 NPM and 148 PyPI repositories, devising two taxonomies of reasons for converting discussions into issues and vice-versa. The most frequent conversion from a discussion to an issue is when developers request a contributor to clarify their idea into an issue (Reporting a Clarification Request -35.1% and 34.7%, respectively), while agreeing that having non actionable topic (QA, ideas, feature requests -55.0% and 42.0%, respectively) is the most frequent reason of converting an issue into a discussion. Furthermore, we show that not all reasons for conversion are trivial (e.g., not a bug), and raising a conversion intent potentially takes time (i.e., a median of 15.2 and 35.1 h, respectively, taken from issues to discussions). Our work contributes to complementing the GitHub guidelines and helping developers effectively utilize the Issue and Discussion communication channels to maintain their collaboration.
C1 [Wang, Dong; Kondo, Masanari; Kamei, Yasutaka; Ubayashi, Naoyasu] Kyushu Univ, Fukuoka, Japan.
   [Kula, Raula Gaikovina] Nara Inst Sci & Technol, Ikoma, Japan.
C3 Kyushu University; Nara Institute of Science & Technology
RP Wang, D (corresponding author), Kyushu Univ, Fukuoka, Japan.
EM d.wang@ait.kyushu-u.ac.jp; kondo@ait.kyushu-u.ac.jp;
   kamei@ait.kyushu-u.ac.jp; raula-k@is.naist.jp;
   ubayashi@ait.kyushu-u.ac.jp
OI Wang, Dong/0000-0002-2004-0902
FU Japanese Society for the Promotion of Science (JSPS) KAKENHI
   [JP20K19774, JP20H05706, JP22K17874, JP21H04877, JP23K16864]; JSPS; SNSF
   [JPJSJRP20191502]
FX This work is supported by Japanese Society for the Promotion of Science
   (JSPS) KAKENHI grants (JP20K19774, JP20H05706, JP22K17874, JP21H04877,
   JP23K16864), and JSPS and SNSF for the project "SENSOR"
   (JPJSJRP20191502).
CR Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bangash Abdul Ali, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P260, DOI 10.1109/MSR.2019.00052
   Chinthanet B, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09951-x
   Chouchen M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P531, DOI 10.1109/SANER50967.2021.00060
   Cogo FR, 2021, IEEE T SOFTWARE ENG, V47, P2457, DOI 10.1109/TSE.2019.2952130
   Decan A, 2016, ACM PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ECSA-W), DOI 10.1145/2993412.3003382
   Ebert F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P49, DOI [10.1109/SANER.2019.8668024, 10.1109/saner.2019.8668024]
   Harwood T. G., 2003, PRACTICAL ASSESSMENT, V3, P479, DOI [DOI 10.7275/Z6FM-2E34, https://doi.org/10.1362/146934703771910080]
   Hata H, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10058-6
   Hata H, 2019, PROC INT CONF SOFTW, P1211, DOI 10.1109/ICSE.2019.00123
   Hindle A, 2016, EMPIR SOFTW ENG, V21, P368, DOI 10.1007/s10664-015-9387-3
   Hirao T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P578, DOI 10.1145/3338906.3338949
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Kula RG, 2019, ENG FREE LIBR OP SOU, P97
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   Li Z, 2017, P 9 ASIA PACIFIC S I
   Lima M, 2022, Arxiv, DOI arXiv:2206.11971
   Liu XL, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P118, DOI 10.1109/SANER.2018.8330202
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   McHugh ML, 2012, BIOCHEM MEDICA, V22, P276, DOI 10.11613/bm.2012.031
   Mendez C, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1004, DOI 10.1145/3180155.3180241
   Parra E, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10095-1
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Raglianti M, 2022, PROC IEEE INT CONF S, P474, DOI 10.1109/ICSME55016.2022.00062
   Rehman I, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10163-0
   Steinmacher I, 2014, WORKSH GLOB SOFTW DE, V16, P20
   Steinmacher I, 2019, IEEE SOFTWARE, V36, P41, DOI 10.1109/MS.2018.110162131
   Storey MA, 2017, IEEE T SOFTWARE ENG, V43, P185, DOI 10.1109/TSE.2016.2584053
   Stray V, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110717
   Tan X, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P398, DOI 10.1145/3368089.3409746
   Tantisuwankul J, 2019, J SYST SOFTWARE, V158, DOI 10.1016/j.jss.2019.110416
   Treude C, 2017, PROC IEEE INT CONF S, P509, DOI 10.1109/ICSME.2017.24
   Treude C, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P804, DOI 10.1145/1985793.1985907
   Vale G, 2020, EMPIR SOFTW ENG, V25, P402, DOI 10.1007/s10664-019-09774-x
   Van Hecke T, 2012, J STAT MANAG SYST, V15, P241, DOI 10.1080/09720510.2012.10701623
   Vasilescu B, 2012, PROCEEDINGS OF THE 2012 ASE INTERNATIONAL CONFERENCE ON SOCIAL INFORMATICS (SOCIALINFORMATICS 2012), P332, DOI 10.1109/SocialInformatics.2012.81
   Wan ZY, 2021, IEEE T SOFTWARE ENG, V47, P1331, DOI 10.1109/TSE.2019.2921343
   Wang D, 2023, Arxiv, DOI arXiv:2303.15684
   Wang D, 2021, INFORM SOFTWARE TECH, V139, DOI 10.1016/j.infsof.2021.106637
   Wang D, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09997-x
   Wang D, 2021, J SYST SOFTWARE, V180, DOI 10.1016/j.jss.2021.111009
   Wang QY, 2019, 11TH ASIA-PACIFIC SYMPOSIUM ON INTERNETWARE (INTERNETWARE 2019), DOI [10.1007/s11104-019-04156-0, 10.1145/3361242.3361254]
   Xiao WX, 2022, PROC INT CONF SOFTW, P1830, DOI 10.1145/3510003.3510196
   Xin Tan, 2019, Proceedings of the ACM on Human-Computer Interaction, V3, DOI 10.1145/3359210
NR 46
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
DI 10.1007/s10664-023-10366-z
PG 27
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LU0W0
UT WOS:001189206200001
DA 2024-07-18
ER

PT J
AU Guizzo, G
   Califano, F
   Sarro, F
   Ferrucci, F
   Harman, M
AF Guizzo, Giovani
   Califano, Francesco
   Sarro, Federica
   Ferrucci, Filomena
   Harman, Mark
TI Inferring test models from user bug reports using multi-objective search
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Model inference; Search-based software engineering; Multi-objective
   optimisation
ID FINITE AUTOMATA; ALGORITHMS; INFERENCE
AB Bug reports are used by software testers to identify abnormal software behaviour. In this paper, we propose a multi-objective evolutionary approach to automatically generate finite state machines (FSMs) based on bug reports written in natural language, to automatically capture incorrect software behaviour. These FSMs can then be used by testers to both exercise the reported bugs and create tests that can potentially reveal new bugs. The FSM generation is guided by a Multi-Objective Evolutionary Algorithm (MOEA) that simultaneously minimises three objectives: size of the models, number of unrealistic states (over-generalisation), and number of states not covered by the models (under-generalisation). We assess the feasibility of our approach for 10 real-world software programs by exploiting three different MOEAs (NSGA-II, NSGA-III and MOEA/D) and benchmarking them with the baseline tool KLFA. Our results show that KLFA is not practical to be used with real-world software, because it generates models that over generalise software behaviour. Among the three MOEAs, NSGA-II obtained significantly better results than the other two for all 10 programs, detecting a greater number of bugs for 90% of the programs. We also studied the differences in quality and model performance when MOEAs are guided by only two objectives rather than three during the evolution. We found that the use of under-approximation (or over-approximation) and size as objectives generates infeasible solutions. On the other hand, using as objectives over-approximation and under-approximation generates feasible solutions yet still worse than those obtained using all three objectives for 100% of the cases. The size objective acts as a diversity factor. As a consequence, an algorithm guided by all three objectives avoids local optima, controls the size of the models, and makes the results more diverse and closer to the optimal Pareto set.
C1 [Guizzo, Giovani; Califano, Francesco; Sarro, Federica; Harman, Mark] UCL, London, England.
   [Ferrucci, Filomena] Univ Salerno, Salerno, Italy.
C3 University of London; University College London; University of Salerno
RP Guizzo, G (corresponding author), UCL, London, England.
EM g.guizzo@ucl.ac.uk; fr.califano@gmail.com; f.sarro@ucl.ac.uk;
   fferrucci@unisa.it; mark.harman@ucl.ac.uk
OI Guizzo, Giovani/0000-0001-5361-2973
FU ERC Advanced fellowship grant EPIC [741278]; Erasmus programme; European
   Research Council (ERC) [741278] Funding Source: European Research
   Council (ERC)
FX The work of G. Guizzo, F. Sarro, and M. Harman at UCL is supported by
   the ERC Advanced fellowship grant EPIC (741278).F. Califano's visit at
   UCL was supported by the Erasmus programme.
CR Ahmad T, 2019, COMPUT SCI REV, V33, P98, DOI 10.1016/j.cosrev.2019.07.001
   [Anonymous], 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European conference on Foundations of software engineering (FSE'11), DOI [10.1145/2025113.2025121, DOI 10.1145/2025113.2025121]
   [Anonymous], 2004, Metaheuristics for Multiobjective Optimisation
   Arcuri A, 2014, SOFTW TEST VERIF REL, V24, P219, DOI 10.1002/stvr.1486
   Audet C, 2018, 2015 LAT AM COMP C C
   Barros MD, 2012, PROCEEDINGS OF THE FOURTEENTH INTERNATIONAL CONFERENCE ON GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1205, DOI 10.1145/2330163.2330330
   Berrar D., 2018, REFERENCE MODULE LIF, DOI DOI 10.1016/B978-0-12-809633-8.20349-X
   Blank J, 2022, MULTIOBJECTIVE OPTIM
   Boussaïd I, 2017, AUTOMAT SOFTW ENG, V24, P233, DOI 10.1007/s10515-017-0215-4
   Carvalho G., 2014, INT WORKSHOP FORMAL, P19, DOI DOI 10.1007/978-3-319-05416-2_3
   Castro OR, 2017, IEEE C EVOL COMPUTAT, P1451, DOI 10.1109/CEC.2017.7969474
   Chun-Nan Liu, 2016, 2016 International Symposium on VLSI Technology, Systems and Application (VLSI-TSA), P1, DOI 10.1109/VLSI-TSA.2016.7480474
   de Santiago VA, 2012, SOFTWARE QUAL J, V20, P77, DOI 10.1007/s11219-011-9155-6
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Deb K, 2014, IEEE T EVOLUT COMPUT, V18, P577, DOI 10.1109/TEVC.2013.2281535
   Dennis A., 2015, SYSTEMS ANAL DESIGN
   Dias Neto A. C., 2007, P ACM INT WORKSH EMP, P31
   Dumais ST, 2004, ANNU REV INFORM SCI, V38, P189
   Emam SS, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3196883
   Ferrucci F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P462, DOI 10.1109/ICSE.2013.6606592
   Garousi V, 2020, INFORM SOFTWARE TECH, V126, DOI 10.1016/j.infsof.2020.106321
   Guizzo G, 2022, IEEE T SOFTWARE ENG, V48, P803, DOI 10.1109/TSE.2020.3002496
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379787
   Harman M, 2010, LECT NOTES COMPUT SC, V6013, P1, DOI 10.1007/978-3-642-12029-9_1
   Hopcroft J.E., 1979, Introduction to Automata Theory, Languages, and Computation
   Ishibuchi H, 2006, IEEE C EVOL COMPUTAT, P1128
   Konak A, 2006, RELIAB ENG SYST SAFE, V91, P992, DOI 10.1016/j.ress.2005.11.018
   Lucas SM, 2005, IEEE T PATTERN ANAL, V27, P1063, DOI 10.1109/TPAMI.2005.143
   Mariani Leonardo, 2008, 2008 IEEE International Symposium on Software Reliability Engineering, P117, DOI 10.1109/ISSRE.2008.48
   Mariani L, 2017, IEEE T SOFTWARE ENG, V43, P715, DOI 10.1109/TSE.2016.2623623
   Meinke K., 2012, LECT NOTES COMPUTER, V7609, P440, DOI [DOI 10.1007/978-3-642-34026-032, 10.1007/978-3-642-34026-0_32, DOI 10.1007/978-3-642-34026-0_32]
   Michalewicz Z, 1997, FUZZY EVOLUTIONARY COMPUTATION, P3
   Paradkar A, 2004, 15TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P173, DOI 10.1109/ISSRE.2004.28
   RABIN MO, 1959, IBM J RES DEV, V3, P114, DOI 10.1147/rd.32.0114
   Riquelme N, 2015, PROC LAT AM COMPUT C, P286, DOI 10.1109/clei.2015.7360024
   RIVEST RL, 1993, INFORM COMPUT, V103, P299, DOI 10.1006/inco.1993.1021
   Saeed A, 2016, APPL SOFT COMPUT, V49, P1094, DOI 10.1016/j.asoc.2016.08.030
   Sarro F, 2017, IEEE T SOFTWARE ENG, V43, P898, DOI 10.1109/TSE.2017.2650914
   Sarro F, 2016, PROC INT CONF SOFTW, P619, DOI 10.1145/2884781.2884830
   Shin D, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-021-10111-4
   Stobie K, 2005, ELECTRON NOTES THEOR, V111, P5, DOI 10.1016/j.entcs.2004.12.004
   Tawosi V, 2022, IEEE T SOFTWARE ENG, V48, P3185, DOI 10.1109/TSE.2021.3083360
   Tonella P., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P21, DOI 10.1109/ICST.2012.82
   Tonella P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P562, DOI 10.1145/2568225.2568242
   Walkinshaw N, 2013, WORK CONF REVERSE EN, P301, DOI 10.1109/WCRE.2013.6671305
   Walkinshaw N, 2013, EMPIR SOFTW ENG, V18, P791, DOI 10.1007/s10664-012-9210-3
   Wang CH, 2022, IEEE T SOFTWARE ENG, V48, P585, DOI 10.1109/TSE.2020.2998503
   Yuanyuan Zhang, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P301, DOI 10.1007/978-3-319-22183-0_27
   Zhang QF, 2007, IEEE T EVOLUT COMPUT, V11, P712, DOI 10.1109/TEVC.2007.892759
   Zhao Y, 2019, PROC INT CONF SOFTW, P128, DOI 10.1109/ICSE.2019.00030
   Zitzler E, 2003, IEEE T EVOLUT COMPUT, V7, P117, DOI 10.1109/TEVC.2003.810758
NR 52
TC 0
Z9 0
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 95
DI 10.1007/s10664-023-10333-8
PG 41
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA J8IK3
UT WOS:001012002100001
PM 37351370
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Matsubara, PGF
   Steinmacher, I
   Gadelha, B
   Conte, T
AF Matsubara, Patricia G. F.
   Steinmacher, Igor
   Gadelha, Bruno
   Conte, Tayana
TI Much more than a prediction: Expert-based software effort estimation as
   a behavioral act
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software effort estimation; Behavioral software engineering; Bias; Noise
ID OPEN-MINDED THINKING; DEVELOPMENT COST; PLANNING POKER; JUDGMENT;
   UNCERTAINTY; ACCURACY; RECOMMENDATIONS; TAXONOMY; REASONS; CHOICE
AB Traditionally, Software Effort Estimation (SEE) has been portrayed as a technical prediction task, for which we seek accuracy through improved estimation methods and a thorough consideration of effort predictors. In this article, our objective to make explicit the perspective of SEE as a behavioral act, bringing attention to the fact that human biases and noise are relevant components in estimation errors, acknowledging that SEE is more than a prediction task. We employed a thematic analysis of factors affecting expert judgment software estimates to satisfy this objective. We show that estimators do not necessarily behave entirely rationally given the information they have as input for estimation. The reception of estimation requests, the communication of software estimates, and their use also impact the estimation values - something unexpected if estimators were solely focused on SEE as a prediction task. Based on this, we also matched SEE interventions to behavioral ones from Behavioral Economics showing that, although we are already adopting behavioral insights to improve our estimation practices, there are still gaps to build upon. Furthermore, we assessed the strength of evidence for each of our review findings to derive recommendations for practitioners on the SEE interventions they can confidently adopt to improve their estimation processes. Moreover, in assessing the strength of evidence, we adopted the GRADE-CERQual (Confidence in the Evidence from Reviews of Qualitative research) approach. It enabled us to point concrete research paths to strengthen the existing evidence about SEE interventions based on the dimensions of the GRADE-CERQual evaluation scheme.
C1 [Matsubara, Patricia G. F.] Fed Univ Mato Grosso do Sul UFMS, Campo Grande, Brazil.
   [Steinmacher, Igor] Northern Arizona Univ NAU, Flagstaff, AZ USA.
   [Gadelha, Bruno; Conte, Tayana] Fed Univ Amazonas UFAM, Manaus, Brazil.
C3 Universidade Federal de Mato Grosso do Sul; Universidade Federal de
   Amazonas
RP Matsubara, PGF (corresponding author), Fed Univ Mato Grosso do Sul UFMS, Campo Grande, Brazil.
EM patricia.gomes@ufms.br; igor.steinmacher@nau.edu;
   bruno@icomp.ufam.edu.br; tayana@icomp.ufam.edu.br
RI Igor, Steinmacher/B-6414-2012; Matsubara, Patrícia/ADW-7576-2022
OI Igor, Steinmacher/0000-0002-0612-5790; Matsubara,
   Patricia/0000-0001-9230-3620
FU Samsung [001/2020]; Federal University of Mato Grosso do Sul (UFMS);
   Federal University of Amazonas (UFAM); CAPES [001]; CNPq [314174/2020-6,
   313067/2020-1]; FAPEAM [062.00150/2020]; Sao Paulo Research Foundation
   (FAPESP) [2020/05191-2]
FX We thank the reviewers for all their suggestions, many of which we
   incorporated into the paper and significantly improved it. The present
   work is the result of the Research and Development (R & D) project
   001/2020, signed with the Federal University of Amazonas and FAEPI,
   Brazil, which has funding from Samsung, using resources from the
   Informatics Law for the Western Amazon (Federal Law no 8.387/1991), and
   its disclosure is in accordance with article 39 of Decree No.
   10.521/2020. Also supported by the Federal University of Mato Grosso do
   Sul (UFMS), the Federal University of Amazonas (UFAM), CAPES - Financing
   Code 001, CNPq processes 314174/2020-6 and 313067/2020-1, and FAPEAM
   process 062.00150/2020, and grant #2020/05191-2 Sao Paulo Research
   Foundation (FAPESP).
CR Alhamed M, 2021, PROC INT CONF SOFTW, P1, DOI 10.1109/ICSE43902.2021.00014
   Altaleb Abdullah, 2019, Journal of Software, V14, P356, DOI 10.17706/jsw.14.8.356-369
   Altaleb A, 2020, 2020 10TH INTERNATIONAL CONFERENCE ON ADVANCED COMPUTER INFORMATION TECHNOLOGIES (ACIT), P469, DOI 10.1109/ACIT49673.2020.9208985
   Ampatzoglou A, 2019, INFORM SOFTWARE TECH, V106, P201, DOI 10.1016/j.infsof.2018.10.006
   Andrews J, 2013, J CLIN EPIDEMIOL, V66, P719, DOI 10.1016/j.jclinepi.2012.03.013
   Andrews JC, 2013, J CLIN EPIDEMIOL, V66, P726, DOI 10.1016/j.jclinepi.2013.02.003
   Aranda J, 2005, ACM SIGSOFT SOFTWARE, P346, DOI [DOI 10.1145/1095430.1081761, 10.1145/1081706.1081761]
   Arifin HH, 2017, INT WORKSH EMPIR ENG, P35, DOI 10.1109/IWESEP.2017.21
   Arnuphaptrairong T, 2021, 3898965 SSRN
   Benlian A, 2014, ECIS 2014 P
   Braun V., 2006, QUAL RES PSYCHOL, V3, P77, DOI [DOI 10.1191/1478088706QP063OA, 10.1191/1478088706qp063oa]
   Braun V, 2021, QUAL RES PSYCHOL, V18, P328, DOI 10.1080/14780887.2020.1769238
   Briggs R. A., 2019, STANFORD ENCY PHILOS
   Brooks Frederick P., 1995, The mythical man-month
   Brzezicka J, 2014, CONTEMP ECON, V8, P353, DOI 10.5709/ce.1897-9254.150
   Buyalskaya A, 2021, P NATL ACAD SCI USA, V118, DOI 10.1073/pnas.2002923118
   Cohn M., 2005, Agile Estimating and Planning
   Colvin CJ, 2018, IMPLEMENT SCI, V13, DOI [10.1186/s13012-017-0690-9, 10.1186/s13012-017-0688-3, 10.1186/s13012-017-0691-8, 10.1186/s13012-017-0693-6]
   Connelly LM, 2016, CLIN NURSE SPEC, V30, P51, DOI 10.1097/NUR.0000000000000173
   Conoscenti M, 2019, J SYST SOFTWARE, V156, P126, DOI 10.1016/j.jss.2019.06.075
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   DeMarco T., 2013, Peopleware: productive projects and teams
   Dybå T, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P178
   Faegri TE, 2010, LECT NOTES BUS INF P, V48, P28
   Fereday J., 2006, INT J QUAL METH, V5, P80, DOI [10.1177/160940690600500107, DOI 10.1177/160940690600500107]
   Matsubara PGF, 2022, J SYST SOFTWARE, V185, DOI 10.1016/j.jss.2021.111148
   Fox CR, 2005, J EXP PSYCHOL GEN, V134, P538, DOI 10.1037/0096-3445.134.4.538
   Frid-Nielsen SS, 2021, J INTERDISC ECON, V33, P226, DOI 10.1177/0260107920925675
   Furulund KM, 2007, USIC 2007: PROCEEDINGS OF THE SEVENTH INTERNATIONAL CONFERENCE ON QUALITY SOFTWARE, P342
   Gale NK, 2013, BMC MED RES METHODOL, V13, DOI 10.1186/1471-2288-13-117
   Gandomani T.J., 2014, International Journal of Software Engineering and Its Applications, V8, P173
   Gandomani TJ, 2019, 2019 IEEE 5TH CONFERENCE ON KNOWLEDGE BASED ENGINEERING AND INNOVATION (KBEI 2019), P66, DOI [10.1109/kbei.2019.8734960, 10.1109/KBEI.2019.8734960]
   Glass RL, 2008, IEEE SOFTWARE, V25, P90, DOI 10.1109/MS.2008.150
   Glenton C, 2018, IMPLEMENT SCI, V13, DOI 10.1186/s13012-017-0692-7
   Grapenthin S, 2016, 2016 42ND EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS (SEAA), P17, DOI 10.1109/SEAA.2016.24
   Grimstad S, 2005, 2005 11TH INTERNATIONAL SYMPOSIUM ON SOFTWARE METRICS (METRICS), P4
   Grimstad S, 2009, IET SOFTW, V3, P435, DOI 10.1049/iet-sen.2008.0110
   Grimstad S, 2008, P 12 INT C EVALUATIO, P129
   Grinistad S, 2007, J SYST SOFTWARE, V80, P1770, DOI 10.1016/j.jss.2007.03.001
   Guyatt GH, 2011, J CLIN EPIDEMIOL, V64, P380, DOI 10.1016/j.jclinepi.2010.09.011
   Halkjelsvik T, 2018, SIMULA SPRINGERBRIEF, DOI [10.1007/978-3-319-74953-2, DOI 10.1007/978-3-319-74953-2]
   Halkjelsvik T, 2018, TIME PREDICTIONS UND, P71, DOI [10.1007/978-3-319-74953-2_5, DOI 10.1007/978-3-319-74953-2_5]
   Halkjelsvik T, 2018, TIME PREDICTIONS UND, P5, DOI [10.1007/978-3-319-74953-2_2, DOI 10.1007/978-3-319-74953-2_2]
   Halkjelsvik T, 2011, APPL COGNITIVE PSYCH, V25, P314, DOI 10.1002/acp.1693
   Haran U, 2013, JUDGM DECIS MAK, V8, P188
   Haugen NC, 2006, AGILE 2006, PROCEEDINGS, P23, DOI 10.1109/AGILE.2006.16
   He M, 2010, LECT NOTES COMPUT SC, V6156, P306
   Hoda R, 2016, J SYST SOFTWARE, V117, P245, DOI 10.1016/j.jss.2016.02.049
   Hughes RT, 1996, INFORM SOFTWARE TECH, V38, P67, DOI 10.1016/0950-5849(95)01045-9
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P953, DOI 10.1109/TSE.2004.92
   Jorgensen M, 2004, IEEE T SOFTWARE ENG, V30, P993, DOI 10.1109/TSE.2004.103
   Jorgensen M., 2004, International Journal of Project Management, V22, P317, DOI 10.1016/S0263-7863(03)00085-1
   Jorgensen M, 2001, INFORM SOFTWARE TECH, V43, P939, DOI 10.1016/S0950-5849(01)00203-8
   Jorgensen M, 2015, 2015 9 INT C SOFTWAR, P1, DOI [10.1109/SKIMA.2015.7399992, DOI 10.1109/SKIMA.2015.7399992]
   Jorgensen M, 2007, J SYST SOFTWARE, V80, P1472, DOI 10.1016/j.jss.2006.09.047
   Jorgensen M, 2022, INFORM SOFTWARE TECH, V143, DOI 10.1016/j.infsof.2021.106782
   Jorgensen M, 2020, J SYST SOFTWARE, V159, DOI 10.1016/j.jss.2019.110448
   Jorgensen M, 2016, J SYST SOFTWARE, V117, P274, DOI 10.1016/j.jss.2016.03.048
   Jorgensen M, 2014, IEEE SOFTWARE, V31, P37, DOI 10.1109/MS.2014.49
   Jorgensen M, 2013, IEEE SOFTWARE, V30, P74, DOI 10.1109/MS.2012.70
   Jorgensen M, 2012, IEEE T SOFTWARE ENG, V38, P677, DOI 10.1109/TSE.2011.40
   Jorgensen M, 2011, INFORM SOFTWARE TECH, V53, P1382, DOI 10.1016/j.infsof.2011.07.001
   Jorgensen M, 2011, IEEE T SOFTWARE ENG, V37, P695, DOI 10.1109/TSE.2010.78
   Jorgensen M, 2010, J SYST SOFTWARE, V83, P29, DOI 10.1016/j.jss.2009.03.076
   Jorgensen M, 2009, IEEE SOFTWARE, V26, P14, DOI 10.1109/MS.2009.47
   Jorgensen M, 2009, IEEE T SOFTWARE ENG, V35, P368, DOI 10.1109/TSE.2009.2
   Kahneman D, 2016, HARVARD BUSINESS REV, P36
   Karna Hrvoje, 2014, Proceedings of the 9th International Conference on Software Engineering and Applications ICSOFT-EA 2014, P26
   Keaveney S, 2006, ECIS 2006 P
   Kim JY, 2022, INFORM TECHNOL PEOPL, V35, P861, DOI 10.1108/ITP-04-2019-0173
   Kitchenham B, 1997, IEEE SOFTWARE, V14, P69, DOI 10.1109/52.589239
   Labedzki M, 2017, CENTRAL EUR REV EC M, V1, DOI [10.29015/cerem.359, DOI 10.29015/CEREM.359]
   Lagerström R, 2012, SOFTWARE QUAL J, V20, P395, DOI 10.1007/s11219-011-9137-8
   Layman L, 2008, P 2008 INT WORKING C, P43, DOI [10.1145/1370750.1370762, DOI 10.1145/1370750.1370762]
   Lederer A. L., 1991, Computer Personnel, V13, P47, DOI 10.1145/122393.122398
   LEDERER AL, 1990, MIS QUART, V14, P159, DOI 10.2307/248774
   LEDERER AL, 1995, J SYST SOFTWARE, V31, P125, DOI 10.1016/0164-1212(94)00092-2
   Lee M, 2011, AMCIS 2011 PROCEEDINGS
   Lenberg P, 2014, P 7 INT WORKSH COOP, P48, DOI DOI 10.1145/2593702.2593711
   Lenberg P, 2015, J SYST SOFTWARE, V107, P15, DOI 10.1016/j.jss.2015.04.084
   Lewin S, 2018, IMPLEMENT SCI, V13, DOI 10.1186/s13012-017-0688-3
   Lewin S, 2018, IMPLEMENT SCI, V13, DOI 10.1186/s13012-017-0689-2
   Lohre E, 2016, J SYST SOFTWARE, V116, P49, DOI 10.1016/j.jss.2015.03.015
   Magazinius A, 2012, J SYST SOFTWARE, V85, P1770, DOI 10.1016/j.jss.2012.03.026
   Magazinovic A, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P233
   Mahnic V, 2012, J SYST SOFTWARE, V85, P2086, DOI 10.1016/j.jss.2012.04.005
   Makridakis S, 2020, INT J FORECASTING, V36, P15, DOI 10.1016/j.ijforecast.2019.05.011
   Mann A, 2016, NATURE, V538, P308, DOI 10.1038/538308a
   Matos O, 2013, P 17 INT C EVALUATIO, P12, DOI [10.1145/2460999.2461002, DOI 10.1145/2460999.2461002]
   Matsubara P, 2023, MAT MUCH MORE PREDIC, DOI [10.6084/m9.figshare.19406945.v1, DOI 10.6084/M9.FIGSHARE.19406945.V1]
   Matsubara P., 2021, SUPPLEMENTARY MAT SE, DOI [10.6084/m9.figshare.14502405.v2, DOI 10.6084/M9.FIGSHARE.14502405.V2]
   Matsubara PGF, 2021, 2021 IEEE/ACM 13TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2021), P61, DOI 10.1109/CHASE52884.2021.00015
   Mellers B, 2015, PERSPECT PSYCHOL SCI, V10, P267, DOI 10.1177/1745691615577794
   Mellers B, 2015, J EXP PSYCHOL-APPL, V21, P1, DOI 10.1037/xap0000040
   Mendes FF, 2019, INFORM SOFTWARE TECH, V111, P50, DOI 10.1016/j.infsof.2019.03.010
   Merriam-Webster, 2021, MerriamWebster
   Mohanani R, 2020, IEEE T SOFTWARE ENG, V46, P1318, DOI 10.1109/TSE.2018.2877759
   Molokken-Ostvold K, 2004, EMPIR SOFTW ENG, V9, P315, DOI 10.1023/B:EMSE.0000039882.39206.5a
   Molokken-Ostvold K, 2008, J SYST SOFTWARE, V81, P2106, DOI 10.1016/j.jss.2008.03.058
   Münscher R, 2016, J BEHAV DECIS MAKING, V29, P511, DOI 10.1002/bdm.1897
   Munthe-Kaas H, 2018, IMPLEMENT SCI, V13, DOI 10.1186/s13012-017-0690-9
   Nowell LS, 2017, INT J QUAL METH, V16, DOI 10.1177/1609406917733847
   Noyes J, 2018, IMPLEMENT SCI, V13, DOI 10.1186/s13012-017-0693-6
   Organization C, 2021, MEAS MAN V5 0 1
   Petropoulos F, 2022, INT J FORECASTING, V38, P705, DOI 10.1016/j.ijforecast.2021.11.001
   Rahikkala J, 2015, 14 S PROGR LANG SOFT
   Rahikkala J, 2018, E-INFORMATICA, V12, P167, DOI 10.5277/e-Inf180107
   Satopää VA, 2021, MANAGE SCI, V67, P7599, DOI 10.1287/mnsc.2020.3882
   Schneider W.J., 2018, CONT INTELLECTUAL AS, V4th, DOI DOI 10.1002/9781118660584.ESE0431
   Shepperd M, 2018, 33RD ANNUAL ACM SYMPOSIUM ON APPLIED COMPUTING, P1510, DOI 10.1145/3167132.3167293
   Simon H. A., 2000, Mind & Society, V1, P25, DOI [10.1007/BF02512227, DOI 10.1007/BF02512227]
   Svedholm-Häkkinen AM, 2018, THINK REASONING, V24, P21, DOI 10.1080/13546783.2017.1378723
   Tamrakar Ritesh, 2012, 16th International Conference on Evaluation & Assessment in Software Engineering (EASE 2012), P228, DOI 10.1049/ic.2012.0030
   Thaler R. H., 2021, NUDGE FINAL EDITION
   Thaler RH, 2018, AM ECON REV, V108, P1265, DOI 10.1257/aer108.6.1265
   Timon CE, 2020, SIGNS SOC, V8, P472, DOI 10.1086/710840
   Trendowicz Adam, 2011, LECT NOTES COMPUTER, P232
   TVERSKY A, 1974, SCIENCE, V185, P1124, DOI 10.1126/science.185.4157.1124
   TVERSKY A, 1973, COGNITIVE PSYCHOL, V5, P207, DOI 10.1016/0010-0285(73)90033-9
   Usman M., 2015, P 19 INT C EVALUATIO, P1, DOI DOI 10.1145/2745802.2745813
   Usman M, 2018, J SYST SOFTWARE, V146, P286, DOI 10.1016/j.jss.2018.09.054
   Usman M, 2018, INFORM SOFTWARE TECH, V99, P21, DOI 10.1016/j.infsof.2018.02.009
   Usman M, 2017, INT J SOFTW ENG KNOW, V27, P641, DOI 10.1142/S0218194017500243
   VandenBos G, 2015, AM PSYCHOL ASS, DOI [10.1037/14646-000, DOI 10.1037/14646-000]
   Wohlin C, 2021, INFORM SOFTWARE TECH, V134, DOI 10.1016/j.infsof.2021.106555
   Yamagishi T, 2014, PSYCHOL SCI, V25, P1699, DOI 10.1177/0956797614538065
   Yang D, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P253
   Zapata AH, 2013, INT J SOFTW ENG KNOW, V23, P409, DOI 10.1142/S0218194013400081
   Zarour A., 2019, International Journal of Technology in Education and Science, V3, P72
NR 129
TC 1
Z9 1
U1 1
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2023
VL 28
IS 4
AR 98
DI 10.1007/s10664-023-10332-9
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA L4IV3
UT WOS:001022921000001
DA 2024-07-18
ER

PT J
AU Napier, K
   Bhowmik, T
   Wang, SW
AF Napier, Kollin
   Bhowmik, Tanmay
   Wang, Shaowei
TI An empirical study of text-based machine learning models for
   vulnerability detection
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Vulnerability detection; Machine learning; Text-based analysis
ID ANNOUNCEMENTS; IMPACT
AB With an increase in complexity and severity, it is becoming harder to identify and mitigate vulnerabilities. Although traditional tools remain useful, machine learning models are being adopted to expand efforts. To help explore methods of vulnerability detection, we present an empirical study on the effectiveness of text-based machine learning models by utilizing 344 open-source projects, 2,182 vulnerabilities and 38 vulnerability types. With the availability of vulnerabilities being presented in forms such as code snippets, we construct a methodology based on extracted source code functions and create equal pairings. We conduct experiments using seven machine learning models, five natural language processing techniques and three data processing methods. First, we present results based on full context function pairings. Next, we introduce condensed functions and conduct a statistical analysis to determine if there is a significant difference between the models, techniques, or methods. Based on these results, we answer research questions regarding model prediction for testing within and across projects and vulnerability types. Our results show that condensed functions with fewer features may achieve greater prediction results when testing within rather than across. Overall, we conclude that text-based machine learning models are not effective in detecting vulnerabilities within or across projects and vulnerability types.
C1 [Napier, Kollin; Bhowmik, Tanmay] Mississippi State Univ, Dept Comp Sci & Engn, Mississippi State, MS 39762 USA.
   [Wang, Shaowei] Univ Manitoba, Dept Comp Sci, Winnipeg, MB, Canada.
C3 Mississippi State University; University of Manitoba
RP Napier, K (corresponding author), Mississippi State Univ, Dept Comp Sci & Engn, Mississippi State, MS 39762 USA.
EM kollin.napier@msstate.edu; tbhowmik@cse.msstate.edu;
   shaowei.wang@umanitoba.ca
OI Napier, Kollin/0000-0003-0025-5524
CR Harer JA, 2018, Arxiv, DOI [arXiv:1803.04497, 10.48550/arXiv.1803.04497]
   Abdalkareem R, 2017, INFORM SOFTWARE TECH, V88, P148, DOI 10.1016/j.infsof.2017.04.005
   [Anonymous], 2014, Proceedings of the 2014 conference on empirical methods in natural language processing (EMNLP), DOI [DOI 10.3115/V1/D14-1181, 10.3115/v1/D14-1181]
   Ban XB, 2019, CONCURR COMP-PRACT E, V31, DOI 10.1002/cpe.5103
   Bates S., 2017, Methods in Behavioral Research
   Cavusoglu H, 2004, INT J ELECTRON COMM, V9, P69, DOI 10.1080/10864415.2004.11044320
   Chen Y., 2015, THESIS
   Chernis B, 2018, IWSPA '18: PROCEEDINGS OF THE FOURTH ACM INTERNATIONAL WORKSHOP ON SECURITY AND PRIVACY ANALYTICS, P31, DOI 10.1145/3180445.3180453
   Cor K, 2019, Arxiv, DOI arXiv:1808.01883
   Czerwonka J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P27, DOI 10.1109/ICSE.2015.131
   Devlin J, 2019, Arxiv, DOI arXiv:1810.04805
   Dowd M., 2006, The Art of Software Security Assessment: Identifying and Preventing Software Vulnerabilities
   Duan X, 2019, PROCEEDINGS OF THE TWENTY-EIGHTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4665
   DUNN OJ, 1961, J AM STAT ASSOC, V56, P52, DOI 10.2307/2282330
   Egele M, 2012, ACM COMPUT SURV, V44, DOI 10.1145/2089125.2089126
   Fan JH, 2020, IEEE WORK CONF MIN S, P508, DOI 10.1145/3379597.3387501
   Fischer F, 2017, P IEEE S SECUR PRIV, P121, DOI 10.1109/SP.2017.31
   Ghaffarian SM, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3092566
   Gong J, 2016, 2016 IEEE FIRST INTERNATIONAL CONFERENCE ON DATA SCIENCE IN CYBERSPACE (DSC 2016), P642, DOI 10.1109/DSC.2016.33
   Grieco G, 2016, CODASPY'16: PROCEEDINGS OF THE SIXTH ACM CONFERENCE ON DATA AND APPLICATION SECURITY AND PRIVACY, P85, DOI 10.1145/2857705.2857720
   Hovsepyan A., 2012, P 4 INT WORKSH SEC M, P7
   Huang SG, 2010, INT C COMPUT ENG APP, P295, DOI 10.1109/ICCEA.2010.209
   Ijaz M, 2019, INT BHURBAN C APPL S, P687, DOI [10.1109/IBCAST.2019.8667136, 10.1109/ibcast.2019.8667136]
   Kim J, 2019, LECT NOTES COMPUT SC, V11730, P731, DOI 10.1007/978-3-030-30490-4_58
   Klock R, 2021, THESIS OBERLIN COLL
   KRUSKAL WH, 1952, J AM STAT ASSOC, V47, P583, DOI 10.1080/01621459.1952.10483441
   Layton R, 2014, J INF SECUR APPL, V19, P321, DOI 10.1016/j.jisa.2014.10.012
   Li Peng., 2010, 2010 IEEE INT C INFO, P521
   Li X, 2017, 2017 ANN RELIABILITY, P1, DOI [10.1109/RAM.2017.7889792, DOI 10.1109/RAM.2017.7889792]
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2821, DOI 10.1109/TDSC.2021.3076142
   Li Z, 2022, IEEE T DEPEND SECURE, V19, P2244, DOI 10.1109/TDSC.2021.3051525
   Li Z, 2018, Arxiv, DOI arXiv:1801.01681
   Lin GJ, 2020, P IEEE, V108, P1825, DOI 10.1109/JPROC.2020.2993293
   Lin GJ, 2021, IEEE T DEPEND SECURE, V18, P2469, DOI 10.1109/TDSC.2019.2954088
   Lin GJ, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2539, DOI 10.1145/3133956.3138840
   Liu BC, 2012, INT C MULTIMED INFO, P152, DOI 10.1109/MINES.2012.202
   Liu SG, 2022, IEEE T DEPEND SECURE, V19, P438, DOI 10.1109/TDSC.2020.2984505
   Liu SG, 2020, IEEE T FUZZY SYST, V28, P1329, DOI 10.1109/TFUZZ.2019.2958558
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   McQueen MA, 2009, System Sciences, P1, DOI 10.1109/HICSS.2009.186
   Mikolov T, 2013, Arxiv, DOI [arXiv:1301.3781, 10.48550/arXiv.1301.3781]
   Mokbal FMM, 2019, IEEE ACCESS, V7, P100567, DOI 10.1109/ACCESS.2019.2927417
   Mubalaike A, 2017, 2017 INTERNATIONAL CONFERENCE ON COMPUTER SCIENCE AND ENGINEERING (UBMK), P383, DOI 10.1109/UBMK.2017.8093417
   Perl H, 2015, CCS'15: PROCEEDINGS OF THE 22ND ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P426, DOI 10.1145/2810103.2813604
   Phan Nam FL, 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE'10, (New York, NY, USA), P447
   Piessens Frank, 2002, P 13 INT S SOFTW REL, P47
   Plachkinova M., 2018, J. Inf. Syst. Educ, V29, P11
   Qiu XP, 2020, SCI CHINA TECHNOL SC, V63, P1872, DOI 10.1007/s11431-020-1647-3
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Shar LK, 2015, IEEE T DEPEND SECURE, V12, P688, DOI 10.1109/TDSC.2014.2373377
   Shin Y, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P315
   Shu XK, 2017, Arxiv, DOI arXiv:1701.04940
   Spanos Georgios, 2017, Pan-Hellenic conference on informatics, P1
   Spreitzenbarth M, 2015, INT J INF SECUR, V14, P141, DOI 10.1007/s10207-014-0250-0
   Su W., 2015, P INT C THEOR INF RE, P349, DOI 10.1145/2808194.2809481
   Sultana KZ, 2016, P INT COMP SOFTW APP, P257, DOI 10.1109/COMPSAC.2016.34
   Tang GG, 2020, 2020 INTERNATIONAL SYMPOSIUM ON THEORETICAL ASPECTS OF SOFTWARE ENGINEERING (TASE 2020), P1, DOI 10.1109/TASE49443.2020.00010
   Telang R, 2007, IEEE T SOFTWARE ENG, V33, P544, DOI [10.1109/TSE.2007.70712, 10.1109/TSE.2007.1015]
   Tomas M., 2013, arXiv, DOI DOI 10.48550/ARXIV.1310.4546
   Koroteev MV, 2021, Arxiv, DOI [arXiv:2103.11943, DOI 10.48550/ARXIV.2103.11943]
   Le QV, 2014, Arxiv, DOI [arXiv:1405.4053, 10.48550/arXiv.1405.4053, DOI 10.48550/ARXIV.1405.4053]
   Wang HT, 2021, IEEE T INF FOREN SEC, V16, P1943, DOI 10.1109/TIFS.2020.3044773
   Wang P., 2018, Issues in Information Systems, V19
   Wijayasekara D, 2014, IEEE IND ELEC, P3612, DOI 10.1109/IECON.2014.7049035
   Yamaguchi F., 2011, P 5 USENIX C OFFENSI, P13
   Zhang HX, 2021, IEEE T SOFTWARE ENG, V48, P2359, DOI 10.1109/TSE.2021.3058985
   Zhu M., 2004, Recall, precision and average precision, V2, P6
   Zhu YK, 2015, IEEE I CONF COMP VIS, P19, DOI 10.1109/ICCV.2015.11
   Zou DQ, 2021, IEEE T DEPEND SECURE, V18, P2224, DOI 10.1109/TDSC.2019.2942930
NR 69
TC 5
Z9 6
U1 2
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 38
DI 10.1007/s10664-022-10276-6
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 8O3KY
UT WOS:000925737600001
DA 2024-07-18
ER

PT J
AU Mehrpour, S
   LaToza, TD
AF Mehrpour, Sahar
   LaToza, Thomas D.
TI Can static analysis tools find more defects? A qualitative study of
   design rule violations found by code review
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Defect classification; Rule checker classification; Code review; Static
   analysis; Static analysis tools
AB Static analysis tools find defects in code, checking code against rules to reveal potential defects. Many studies have evaluated these tools by measuring their ability to detect known defects in code. But these studies measure the current state of tools rather than their future potential to find more defects. To investigate the prospects for tools to find more defects, we conducted a study where we formulated each issue raised by a code reviewer as a violation of a rule, which we then compared to what static analysis tools might potentially check. We first gathered a corpus of 1323 defects found through code review. Through a qualitative analysis process, for each defect we identified a violated rule and the type of Static Analysis Tool (SAT) which might check this rule. We found that SATs might, in principle, be used to detect as many as 76% of code review defects, considerably more than current tools have been demonstrated to successfully detect. Among a variety of types of SATs, Style Checkers and AST Pattern Checkers had the broadest coverage of defects, each with the potential to detect 25% of all code review defects. We found that static analysis tools might be able to detect more code review defects by better supporting the creation of project-specific rules. We also investigated the characteristics of code review defects not detectable by traditional static analysis techniques, which to detect might require tools which simulate human judgements about code.
C1 [Mehrpour, Sahar; LaToza, Thomas D.] George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
C3 George Mason University
RP Mehrpour, S (corresponding author), George Mason Univ, Dept Comp Sci, Fairfax, VA 22030 USA.
EM smehrpou@gmu.edu; tlatoza@gmu.edu
OI Mehrpour, Sahar/0000-0002-9263-3360; LaToza, Thomas/0000-0002-9564-3337
FU National Science Foundation [NSF CCF-1703734]
FX This work was supported in part by the National Science Foundation under
   grant NSF CCF-1703734.
CR Aftandilian E., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P14, DOI 10.1109/SCAM.2012.28
   Aghajani E, 2019, PROC INT CONF SOFTW, P1199, DOI 10.1109/ICSE.2019.00122
   Aldrich J, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P187, DOI 10.1109/ICSE.2002.1007967
   [Anonymous], 2005, PMD applied
   [Anonymous], 2019, STRUCTURE101
   [Anonymous], 2004, CHECKSTYLE
   [Anonymous], 2014, JCOV
   [Anonymous], 2016, SBSI 2016
   [Anonymous], 2019, JENKINS
   Ayewah N., 2010, Proceedings of the 19th international symposium on Software testing and analysis, P241
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Bader J, 2019, P ACM PROGRAM LANG, V3, DOI 10.1145/3360585
   Balachandran V, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P931, DOI 10.1109/ICSE.2013.6606642
   Barik T, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P633, DOI 10.1145/3236024.3236040
   BASILI VR, 1987, IEEE T SOFTWARE ENG, V13, P1278, DOI 10.1109/TSE.1987.232881
   Beller M, 2014, 11 WORK C MIN SOFTW, V5, P202, DOI [10.1145/2597073.2597082, DOI 10.1145/2597073.2597082]
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   Bessey A, 2010, COMMUN ACM, V53, P66, DOI 10.1145/1646353.1646374
   Beyer Dirk, 2011, Computer Aided Verification. Proceedings 23rd International Conference, CAV 2011, P184, DOI 10.1007/978-3-642-22110-1_16
   Board I., 1993, IEEE STD, P1044
   Brunet J., 2014, P 11 WORK C MIN SOFT, P340
   Burnstein I., 2002, Practical Software Testing
   Calcagno C, 2015, LECT NOTES COMPUT SC, V9058, P3, DOI 10.1007/978-3-319-17524-9_1
   Casalnuovo C, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING RESULTS (ICSE-NIER 2020), P25, DOI 10.1145/3377816.3381720
   CHILLAREGE R, 1992, IEEE T SOFTWARE ENG, V18, P943, DOI 10.1109/32.177364
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Crockford D, 2011, JSLINT JAVASCRIPT CO
   Ebert F, 2018, PROC IEEE INT CONF S, P519, DOI 10.1109/ICSME.2018.00061
   Fard AM, 2013, IEEE INT WORK C SO, P116, DOI 10.1109/SCAM.2013.6648192
   Ghorbani N, 2019, PROC INT CONF SOFTW, P560, DOI 10.1109/ICSE.2019.00067
   Gilb Tom, 1993, Software inspections
   GitHub, 2021, Github copilot
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Group I, 2010, 10442009IEEE
   Habib A, 2018, IEEE INT CONF AUTOM, P317, DOI 10.1145/3238147.3238213
   Hovemeyer David., 2004, ACM Conference on Object-Oriented Programming Systems, Lan-guages, and Applications, OOPSLA '04, P132
   Humphrey W S, 1995, A discipline for software engineering
   Huo X, 2018, IEEE DATA MINING, P1049, DOI 10.1109/ICDM.2018.00133
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Knodel Jens, 2007, 2007 WORKING IEEEIFI, P12, DOI 10.1109/wicsa.2007.1
   Kruchten Philippe., 2004, GRON WORKSH SOFTW VA
   Laitenberger O, 2000, J SYST SOFTWARE, V50, P5, DOI 10.1016/S0164-1212(99)00073-4
   Laitenberger O, 1998, NINTH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P237, DOI 10.1109/ISSRE.1998.730887
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   LaToza TD, 2011, S VIS LANG HUM CEN C, P117, DOI 10.1109/VLHCC.2011.6070388
   Little G, 2009, AUTOMAT SOFTW ENG, V16, P37, DOI 10.1007/s10515-008-0041-9
   Mäntylä MV, 2009, IEEE T SOFTWARE ENG, V35, P430, DOI 10.1109/TSE.2008.71
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Mehrpour S, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P386, DOI 10.1145/3368089.3409751
   Mehrpour S, 2019, S VIS LANG HUM CEN C, P87, DOI [10.1109/VLHCC.2019.8818816, 10.1109/vlhcc.2019.8818816]
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Panichella S, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P161, DOI 10.1109/SANER.2015.7081826
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Pradel M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276517
   Rice A, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133928
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Romano S., 2016, P 31 ANN ACM S APPL, P1538, DOI DOI 10.1145/2851613.2851968
   Roy J. R., 2007, QUEENS SCH COMPUTING, V541, P64
   Runeson P, 2006, IEEE SOFTWARE, V23, P82, DOI 10.1109/MS.2006.89
   Runeson P., 1998, Empirical Software Engineering, V3, P381, DOI 10.1023/A:1009728205264
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Sadowski C, 2018, COMMUN ACM, V61, P58, DOI 10.1145/3188720
   Sadowski C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P598, DOI 10.1109/ICSE.2015.76
   Saldana J, 2015, Sage
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Shafiq S, 2021, IEEE ACCESS, V9, P140896, DOI 10.1109/ACCESS.2021.3119746
   Sharma T, 2018, J SYST SOFTWARE, V138, P158, DOI 10.1016/j.jss.2017.12.034
   Singh D, 2017, S VIS LANG HUM CEN C, P101, DOI 10.1109/VLHCC.2017.8103456
   SonarSource, 2022, COD QUAL COD SEC
   Sui Yulei, 2012, P INT S SOFTW TEST A, P254, DOI [DOI 10.1145/2338965.2336784, DOI 10.1145/04000800.2336784]
   Svajlenko J, 2015, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2015.7332459
   Thelin T, 2003, IEEE SOFTWARE, V20, P30, DOI 10.1109/MS.2003.1207451
   Thung F, 2012, IEEE INT CONF AUTOM, P50, DOI 10.1145/2351676.2351685
   Ueda Y, 2018, INT WORKSH EMPIR ENG, P31, DOI 10.1109/IWESEP.2018.00014
   van Emden E, 2002, NINTH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P97, DOI 10.1109/WCRE.2002.1173068
   Vassallo C, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P38, DOI 10.1109/SANER.2018.8330195
   Viviani G, 2018, 2018 IEEE/ACM 11TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P104, DOI 10.1145/3195836.3195841
   Wagner S, 2005, LECT NOTES COMPUT SC, V3502, P40
   Wang S, 2020, IEEE T SOFTWARE ENG, V46, P1267, DOI 10.1109/TSE.2018.2877612
   Wiegers Karl Eugene, 2002, Peer reviews in software: A practical guide
   Yan D., 2014, INT S CODE GENERATIO, P87
   Zampetti F, 2017, IEEE WORK CONF MIN S, P334, DOI 10.1109/MSR.2017.2
NR 83
TC 1
Z9 1
U1 1
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2023
VL 28
IS 1
AR 5
DI 10.1007/s10664-022-10232-4
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6A0EO
UT WOS:000880336500001
DA 2024-07-18
ER

PT J
AU Rwemalika, R
   Habchi, S
   Papadakis, M
   Le Traon, Y
   Brasseur, MC
AF Rwemalika, Renaud
   Habchi, Sarra
   Papadakis, Mike
   Le Traon, Yves
   Brasseur, Marie-Claude
TI Smells in system user interactive tests
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Test smells; System user interface tests; GUI tests; Refactoring;
   Multivocal literature review
ID TEST CODE; QUALITY; TOOL
AB Test smells are known as bad development practices that reflect poor design and implementation choices in software tests. Over the last decade, there are few attempts to study test smells in the context of system tests that interact with the System Under Test through a Graphical User Interface. To fill the gap, we conduct an exploratory analysis of test smells occurring in System User Interactive Tests (SUIT). We thus, compose a catalog of 35 SUIT-specific smells, identified through a multi-vocal literature review, and show how they differ from smells encountered in unit tests. We also conduct an empirical analysis to assess the diffuseness and removal of these smells in 48 industrial repositories and 12 open-source projects. Our results show that the same type of smells tends to appear in both industrial and open-source projects, but they are not addressed in the same way. We also find that smells originating from a combination of multiple code locations appear more often than those that are localized on a single line. This happens because of the difficulty to observe non-local smells without tool support. Furthermore, we find that smell-removing actions are not frequent with less than 50% of the affected tests ever undergoing a smell removal. Interestingly, while smell-removing actions are rare, some smells disappear while discarding tests, i.e., these smells do not appear in follow-up tests that replace the discarded ones.
C1 [Rwemalika, Renaud; Habchi, Sarra; Papadakis, Mike; Le Traon, Yves] Univ Luxembourg, Luxembourg, Luxembourg.
   [Brasseur, Marie-Claude] BGL BNP Paribas, Luxembourg, Luxembourg.
C3 University of Luxembourg
RP Rwemalika, R (corresponding author), Univ Luxembourg, Luxembourg, Luxembourg.
EM renaud.rwemalika@hotmail.com; sarra.habchi@uni.lu;
   michail.papadakis@uni.lu; yves.letraon@uni.lu;
   marie-claude.brasseur@bgl.lu
RI Habchi, Sarra/AAK-1504-2021; LE TRAON, Yves/T-2911-2019
OI Habchi, Sarra/0000-0002-5989-1413; Rwemalika, Renaud/0000-0003-2945-0286
CR Advolodkin N, 2018, TOP 17 AUTOMATED TES
   Alégroth E, 2016, IEEE ICST WORKSHOP, P257, DOI 10.1109/ICSTW.2016.47
   [Anonymous], 2014, P 2014 INT S SOFTW T
   Archer M, 2010, TEST AUTOMATION SELE
   Athanasiou D, 2014, IEEE T SOFTWARE ENG, V40, P1100, DOI 10.1109/TSE.2014.2342227
   Baker P., 2008, MODEL DRIVEN TESTING, P87
   Banerjee I, 2013, INFORM SOFTWARE TECH, V55, P1679, DOI 10.1016/j.infsof.2013.03.004
   Basit W, 2013, PAK J ENG APPL SCI, V13, P37
   Battat M, 2020, DO YOU SIMPLIFY END
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1052, DOI 10.1007/s10664-014-9313-0
   Bavota G, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P56, DOI 10.1109/ICSM.2012.6405253
   Biagiola M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P142, DOI 10.1145/3338906.3338970
   Bowes D, 2017, INT WORKS EMERG TREN, P9, DOI 10.1109/WETSoM.2017.2
   Breugelmans Manuel, 2008, 1 INT WORKSH ADV SOF
   Brooks P, 2009, SECOND INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION, AND VALIDATION, PROCEEDINGS, P11, DOI 10.1109/ICST.2009.11
   Bushnev Y, 2019, TOP 15 UI TEST AUTOM
   Buwalda H, 2015, TEST DESIGN AUTOMATI
   Buwalda H, 2019, 8 TEST AUTOMATION AN
   Canny A, 2020, IEEE ICST WORKSHOP, P95, DOI 10.1109/ICSTW50294.2020.00029
   Clayton J, 2014, ACCEPTANCE TESTS SIN
   Coppola R, 2019, IEEE T RELIAB, V68, P67, DOI 10.1109/TR.2018.2869227
   Cripsin L, 2018, KEEP YOUR AUTOMATED
   Cunha Marco, 2010, 2010 2nd International Conference on Software Technology and Engineering (ICSTE 2010), P202, DOI 10.1109/ICSTE.2010.5608882
   De Bleser Jonas, 2019, 2019 IEEE/ACM 16th International Conference on Mining Software Repositories (MSR), P457, DOI 10.1109/MSR.2019.00072
   Dharmender K, 2017, AUTOMATION TESTING A
   Di Martino S, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1754
   England T, 2016, CUCUMBER ANTIPATTE 1
   Evangelisti A, 2012, TRANSFORM BAD ACCEPT
   Femmer H., 2014, PROC 1 INT WORKSHOP, P10
   Femmer H, 2017, J SYST SOFTWARE, V123, P190, DOI 10.1016/j.jss.2016.02.047
   Fontana FA, 2016, EMPIR SOFTW ENG, V21, P1143, DOI 10.1007/s10664-015-9378-4
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gao ZB, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P55, DOI 10.1109/ICSE.2015.28
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Gawinecki M, 2016, ANTIPATTERNS TEST AU
   Goldberg Y, 2019, NODEJS JAVASCRIPT TE
   Gomez L, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P72, DOI 10.1109/ICSE.2013.6606553
   Grano G, 2019, J SYST SOFTWARE, V156, P312, DOI 10.1016/j.jss.2019.07.016
   Greiler M, 2013, 2013 IEEE SIXTH INTERNATIONAL CONFERENCE ON SOFTWARE TESTING, VERIFICATION AND VALIDATION (ICST 2013), P322, DOI 10.1109/ICST.2013.45
   Gupta P., 2011, P INT C COMM IND APP, P1, DOI 10.1109/ICCIndA.2011.6146669
   Hall M. W., 1992, ACM Letters on Programming Languages and Systems, V1, P227, DOI 10.1145/151640.151643
   Hammoudi M, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P751, DOI 10.1145/2950290.2950294
   Hammoudi M, 2016, IEEE INT CONF SOFTW, P180, DOI 10.1109/ICST.2016.16
   Hanssen G., 2010, 43 HAW INT C SYST SC, P1, DOI DOI 10.1109/HICSS.2010.344
   Hauptmann B, 2015, INT C PROGRAM COMPRE, P115, DOI 10.1109/ICPC.2015.20
   Hauptmann B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1217, DOI 10.1109/ICSE.2013.6606682
   Humble Jez, 2010, Continuous Delivery: Reliable Software Releases through Build, Test, and Deployment Automation
   Hurdugaci V, 2012, EUR CON SFTWR MTNCE, P11, DOI 10.1109/CSMR.2012.12
   Issa A, 2012, IEEE INT S WEB SYST, P11, DOI 10.1109/WSE.2012.6320526
   Jain N, 2007, PATTERNS ANTIPATTERN
   Kapelonis K, 2018, SOFTWARE TESTING ANT
   Katalon, 2018, MOST STRIKING PROBLE
   Khomh F, 2009, INT CONF QUAL SOFTW, P305, DOI 10.1109/QSIC.2009.47
   Kim DJ, 2020, PROC INT CONF SOFTW, P149, DOI 10.1145/3377812.3382176
   Kirinuki H, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P310, DOI [10.1109/saner.2019.8667976, 10.1109/SANER.2019.8667976]
   Kirkbride J, 2014, TESTING ANTIPATTERNS
   Kitchenham B., 2007, GUIDELINES PERFORMIN
   Klarck P, 2014, ROBOT FRAMEWORK DOS
   Knight A, 2019, BDD 101 WRITING GOOD
   Knight A, 2017, SHOULD GHERKIN STEPS
   Knight A, 2017, BDD 101 WRITING GOOD
   Labuschagne A, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P821, DOI 10.1145/3106237.3106288
   Lanubile F, 2007, LECT NOTES COMPUT SC, V4536, P115
   Lelli V., 2015, 2015 IEEE Eighth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P1, DOI DOI 10.1109/ICSTW.2015.7107403
   Leotta M, 2016, J SOFTW-EVOL PROC, V28, P177, DOI 10.1002/smr.1771
   Leotta M, 2014, 2014 IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING WORKSHOPS (ISSREW), P449, DOI 10.1109/ISSREW.2014.17
   Mabl, 2021, BENCHM REP STAT TEST
   Machiry A., 2013, P 2013 9 JOINT M FDN, P224
   Mao K., 2016, P 25 INT S SOFTW TES, P94
   Marinescu R, 2004, PROC IEEE INT CONF S, P350, DOI 10.1109/ICSM.2004.1357820
   Mathew Delin, 2016, Fullscale Software Engineering/ Current Trends in Release Engineering, P19
   Memon AM, 2010, ADV COMPUT, V80, P121, DOI 10.1016/S0065-2458(10)80003-8
   Mesbah A, 2009, PROC INT CONF SOFTW, P210, DOI 10.1109/ICSE.2009.5070522
   Meszaros G., 2007, Xunit test patterns: refactoring test code
   Moonen Leon, 2001, P 2 INT C EXTR PROGR
   Morlion P, 2019, SOFTWARE TESTING ANT
   Myers B., 1994, Interactions, V1, P73, DOI 10.1145/174800.174808
   Myers B. A., 1992, CHI '92 Conference Proceedings. ACM Conference on Human Factors in Computing Systems. Striking a Balance, P195, DOI 10.1145/142750.142789
   Myers B.A., 1995, ACM T COMPUT-HUM INT, V2, P64, DOI [10.1145/200968.200971, DOI 10.1145/200968.200971]
   Nguyen BN, 2014, AUTOMAT SOFTW ENG, V21, P65, DOI 10.1007/s10515-013-0128-9
   Nguyen V, 2021, SOFTW TEST VERIF REL, V31, DOI 10.1002/stvr.1760
   Pandit P., 2015, Int. J. Comput. Appl, V120, P16
   Peruma A, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1650, DOI 10.1145/3368089.3417921
   Pezzè M, 2018, COMPANION PROCEEDINGS FOR THE ISSTA/ECOOP 2018 WORKSHOPS, P54, DOI 10.1145/3236454.3236489
   Reichhart S, 2007, J OBJECT TECHNOL, V6, P231, DOI 10.5381/jot.2007.6.9.a12
   Renaudin J, 2016, SOFTWARE TESTING ANT
   Ricca Filippo, 2021, SOFSEM 2021: Theory and Practice of Computer Science. 47th International Conference on Current Trends in Theory and Practice of Computer Science (SOFSEM 2021). Proceedings. Lecture Notes in Computer Science (LNCS 12607), P472, DOI 10.1007/978-3-030-67731-2_35
   Ronsse M, 1999, ACM T COMPUT SYST, V17, P133, DOI 10.1145/312203.312214
   Rwemalika R, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P402, DOI 10.1145/3293882.3339003
   Rwemalika R, 2019, IEEE INT CONF SOFTW, P335, DOI 10.1109/ICST.2019.00040
   Saddler JA, 2017, IEEE INT CONF AUTOM, P955, DOI 10.1109/ASE.2017.8115711
   Salihu IA, 2019, IEEE ACCESS, V7, P17158, DOI 10.1109/ACCESS.2019.2895504
   Satopaa V., 2011, Proceedings of the 2011 31st International Conference on Distributed Computing Systems Workshops (ICDCS Workshops), P166, DOI 10.1109/ICDCSW.2011.20
   Sciamanna A, 2019, WHAT ARE ANTIPATTERN
   Scott A, 2015, 5 AUTOMATED ACCEPTAN
   Shay L, 2019, BDD CUCUMBER FEATURE
   Sheth H, 2020, 16 SELENIUM BEST PRA
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Siminiuc A, 2019, WHAT ARE ANTIPATTERN
   Spadini D, 2020, IEEE WORK CONF MIN S, P311, DOI 10.1145/3379597.3387453
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   StackExchange, 2017, WHAT AR ANT TEST AUT
   Tang JF, 2008, 2008 IEEE INTERNATIONAL CONFERENCE ON AUTOMATION AND LOGISTICS, VOLS 1-6, P1631, DOI 10.1109/ICAL.2008.4636415
   Temov J, 2020, WANT SPEED END TO EN
   Tsantalis N., 2013, C CTR ADV STUD COLL, P132, DOI [10.5555/2555523.2555539, DOI 10.5555/2555523.2555539]
   Tufano M, 2016, IEEE INT CONF AUTOM, P4, DOI 10.1145/2970276.2970340
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Van Rompaey B, 2007, IEEE T SOFTWARE ENG, V33, P800, DOI 10.1109/TSE.2007.70745
   Van Rompaey B, 2006, PROC IEEE INT CONF S, P391
   Virginio Tassio, 2020, SBES '20: Proceedings of the 34th Brazilian Symposium on Software Engineering, P92, DOI 10.1145/3422392.3422412
   Woei-Kae Chen, 2012, Proceedings of the 2012 13th ACIS International Conference on Software Engineering, Artificial Intelligence, Networking and Parallel & Distributed Computing (SNPD 2012), P289, DOI 10.1109/SNPD.2012.10
   Yu SC, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P1066, DOI 10.1109/ASE.2019.00103
   Yuan X., 2007, P INT C AUTOMATED SO, P405
NR 113
TC 3
Z9 3
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2023
VL 28
IS 1
AR 20
DI 10.1007/s10664-022-10251-1
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 7C7CM
UT WOS:000899966500001
DA 2024-07-18
ER

PT J
AU Garg, A
   Degiovanni, R
   Jimenez, M
   Cordy, M
   Papadakis, M
   Le Traon, Y
AF Garg, Aayush
   Degiovanni, Renzo
   Jimenez, Matthieu
   Cordy, Maxime
   Papadakis, Mike
   Le Traon, Yves
TI Learning from what we know: How to perform vulnerability prediction
   using noisy historical data
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Vulnerability prediction; Trovon; Training on vulnerabilities only;
   Encoder-decoder; Machine translation; tf-seq2seq
AB Vulnerability prediction refers to the problem of identifying system components that are most likely to be vulnerable. Typically, this problem is tackled by training binary classifiers on historical data. Unfortunately, recent research has shown that such approaches underperform due to the following two reasons: a) the imbalanced nature of the problem, and b) the inherently noisy historical data, i.e., most vulnerabilities are discovered much later than they are introduced. This misleads classifiers as they learn to recognize actual vulnerable components as non-vulnerable. To tackle these issues, we propose TROVON, a technique that learns from known vulnerable components rather than from vulnerable and non-vulnerable components, as typically performed. We perform this by contrasting the known vulnerable, and their respective fixed components. This way, TROVON manages to learn from the things we know, i.e., vulnerabilities, hence reducing the effects of noisy and unbalanced data. We evaluate TROVON by comparing it with existing techniques on three security-critical open source systems, i.e., Linux Kernel, OpenSSL, and Wireshark, with historical vulnerabilities that have been reported in the National Vulnerability Database (NVD). Our evaluation demonstrates that the prediction capability of TROVON significantly outperforms existing vulnerability prediction techniques such as Software Metrics, Imports, Function Calls, Text Mining, Devign, LSTM, and LSTM-RF with an improvement of 40.84% in Matthews Correlation Coefficient (MCC) score under Clean Training Data Settings, and an improvement of 35.52% under Realistic Training Data Settings.
C1 [Garg, Aayush] Univ Luxembourg, Dept Comp Sci, Fac Sci Technol & Med FSTM, Esch Sur Alzette, Luxembourg.
   [Degiovanni, Renzo; Cordy, Maxime; Papadakis, Mike] Univ Luxembourg, Interdisciplinary Ctr Secur Reliabil & Trust SnT, Esch Sur Alzette, Luxembourg.
   [Jimenez, Matthieu] Univ Luxembourg, Fac Sci Technol & Med, Esch Sur Alzette, Luxembourg.
   [Le Traon, Yves] Univ Luxembourg, Esch Sur Alzette, Luxembourg.
C3 University of Luxembourg; University of Luxembourg; University of
   Luxembourg; University of Luxembourg
RP Garg, A (corresponding author), Univ Luxembourg, Dept Comp Sci, Fac Sci Technol & Med FSTM, Esch Sur Alzette, Luxembourg.
EM aayush.garg@uni.lu; renzo.degiovanni@uni.lu; matthieu.jimenez@uni.lu;
   maxime.cordy@uni.lu; michail.papadakis@uni.lu; Yves.LeTraon@uni.lu
RI Degiovanni, Renzo/KUF-0926-2024; LE TRAON, Yves/T-2911-2019
OI Garg, Aayush/0000-0002-2507-8846; Degiovanni, Renzo/0000-0003-1611-3969
FU Luxembourg National Research Funds (FNR) through the CORE project
   [C17/IS/11686509/CODEMATES]
FX This work is supported by the Luxembourg National Research Funds (FNR)
   through the CORE project grant C17/IS/11686509/CODEMATES.
CR Abadi M, 2016, PROCEEDINGS OF OSDI'16: 12TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P265
   [Anonymous], 2021, THE HEARTBLEED BUG
   [Anonymous], 2021, DEFINITION VULNERABI
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Britz D., 2017, ARXIV
   Brownlee J., 2021, USE MLP CNN RNN NEUR
   Brownlee J., 2022, ENCODER DECODER RECU
   Chowdhury I, 2011, J SYST ARCHITECT, V57, P294, DOI 10.1016/j.sysarc.2010.06.003
   Collard ML, 2016, PROC IEEE INT CONF S, P649, DOI 10.1109/ICSME.2016.36
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Garg A, 2022, IEEE T SOFTWARE ENG, P1
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Dam HK, 2021, IEEE T SOFTWARE ENG, V47, P67, DOI 10.1109/TSE.2018.2881961
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Huo X., 2016, IJCAI, P1606
   Jimenez M, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P695, DOI 10.1145/3338906.3338941
   Jimenez M, 2018, IEEE INT WORK C SO, P56, DOI 10.1109/SCAM.2018.00014
   Jimenez M, 2016, ASIA PAC SOFWR ENG, P105, DOI 10.1109/APSEC.2016.58
   kernel, 2021, LINUX KERNAL
   Kononenko I., 1995, IJCAI-95. Proceedings of the Fourteenth International Joint Conference on Artificial Intelligence, P1034
   Li Z, 2018, 25TH ANNUAL NETWORK AND DISTRIBUTED SYSTEM SECURITY SYMPOSIUM (NDSS 2018), DOI 10.14722/ndss.2018.23158
   Linux, 2020, 278 MILLION LINES CO
   MATTHEWS BW, 1975, BIOCHIM BIOPHYS ACTA, V405, P442, DOI 10.1016/0005-2795(75)90109-9
   Morrison P., 2015, P 2015 S BOOTCAMP SC
   Moshtari S., 2016, P 31 ANN ACM S APPL, P1415, DOI DOI 10.1145/2851613.2851777
   Neuhaus S, 2007, CCS'07: PROCEEDINGS OF THE 14TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P529
   NIST, 2021, National vulnerability database-CVE-2021-3011
   Openairinterface, 2021, ABOUT US
   owasp, 2021, VULNERABILITIES
   Potter B, 2004, IEEE SECUR PRIV, V2, P81, DOI 10.1109/MSP.2004.84
   Scandariato R, 2014, IEEE T SOFTWARE ENG, V40, P993, DOI 10.1109/TSE.2014.2340398
   Shepperd M, 2014, IEEE T SOFTWARE ENG, V40, P603, DOI 10.1109/TSE.2014.2322358
   Shewalkar A, 2019, J ARTIF INTELL SOFT, V9, P235, DOI 10.2478/jaiscr-2019-0006
   Shin Y, 2013, EMPIR SOFTW ENG, V18, P25, DOI 10.1007/s10664-011-9190-8
   Shin Y, 2011, IEEE T SOFTWARE ENG, V37, P772, DOI 10.1109/TSE.2010.81
   Shin Y, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P315
   Sutskever I, 2014, ADV NEUR IN, V27
   Tang YM, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P27, DOI 10.1109/QRS.2015.15
   Theisen C, 2020, INFORM SOFTWARE TECH, V119, DOI 10.1016/j.infsof.2019.106204
   Tufano M, 2019, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME.2019.00046
   Tufano M, 2019, ACM T SOFTW ENG METH, V28, DOI 10.1145/3340544
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wang S, 2016, PROC INT CONF SOFTW, P297, DOI 10.1145/2884781.2884804
   White M, 2016, IEEE INT CONF AUTOM, P87, DOI 10.1145/2970276.2970326
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wireshark, 2021, about us
   Yang XL, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P17, DOI 10.1109/QRS.2015.14
   Zhou Y, 2019, Devign: Effective vulnerability identification by learning comprehensive program semantics via graph neural networks
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 52
TC 8
Z9 8
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2022
VL 27
IS 7
AR 169
DI 10.1007/s10664-022-10197-4
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 4V4SY
UT WOS:000859469500005
OA Green Submitted, Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Bokhari, MA
   Alexander, B
AF Bokhari, Mahmoud A.
   Alexander, Bradley
TI A Hybrid Distributed EA Approach for Energy Optimisation on Smartphones
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Search-based software engineering; Genetic improvement of software;
   Distributed evolutionary algorithms; Islands model; Energy optimisation;
   Android
AB For many people, mobile platforms are now an essential part of everyday life. A defining feature of mobile platforms is their reliance on battery performance. Due to this reliance, there is a pressing need for mobile applications that minimise their own impact on batteries. While mobile platforms are improving their capabilities in terms of policing the energy use of applications and rationing energy-hungry devices, mobile application developers still lack knowledge in how to write energy efficient programs. Recent work in automatic program improvement using heuristic search over randomly generated program variants has shown some promise in terms of producing reductions in programs' energy-use. A challenge in this work is accurately measuring the energy-use of program variants. One approach to measurement is to use each platform's internal meter to assess variants on the device itself. This approach has advantages in terms of measuring actual energy-use on each platform but is not ideal for the search for program variants that perform well across multiple platforms. The work in this paper addresses this problem by using an island-like evolutionary search mode to simultaneously evolve variants on multiple platforms. Island models of evolutionary search conduct search on multiple platforms in parallel and share promising variants. The results show that this approach has advantages over isolated evolution in terms of speeding up evolution on each platform and improving the efficiency of search. Validation results show that the island-inspired model is able to evolve variants with good cross-platform performance. In addition, it evolves a solution that outperforms best found solutions using a sequential evolutionary algorithm on it is native platform with an effect size greater than 90%.
C1 [Bokhari, Mahmoud A.] Taibah Univ, Comp Sci Dept, Software Engn Res Grp, Medina, Saudi Arabia.
   [Alexander, Bradley] Univ Adelaide, Sch Comp Sci, Optimisat & Logist, Adelaide, SA, Australia.
C3 Taibah University; University of Adelaide
RP Bokhari, MA (corresponding author), Taibah Univ, Comp Sci Dept, Software Engn Res Grp, Medina, Saudi Arabia.
EM mabokhari@taibahu.edu.sa; bradley.alexander@adelaide.edu.au
OI Bokhari, Mahmoud/0000-0002-0659-8512
CR Alameldeen AR, 2003, NINTH INTERNATIONAL SYMPOSIUM ON HIGH-PERFORMANCE COMPUTER ARCHITECTURE, PROCEEDINGS, P7, DOI 10.1109/HPCA.2003.1183520
   Bhadra S, 2009, 2009 ICSE WORKSHOP ON AUTOMATION OF SOFTWARE TEST, P27, DOI 10.1109/IWAST.2009.5069038
   Blackburn SM, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1167515.1167488
   Bokhari M. A., 2019, IEEE C EVOLUTIONARY
   Bokhari M. A., 2017, ARXIV
   Bokhari M. A., 2020, P GEN EV COMP C, P1232
   Bokhari M, 2016, PROCEEDINGS OF THE 2016 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE (GECCO'16 COMPANION), P1139, DOI 10.1145/2908961.2931691
   Bokhari MA, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCCO'19 COMPANION), P1705, DOI 10.1145/3319619.3326877
   Bokhari MA, 2017, PROCEEDINGS OF THE 2017 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCO'17 COMPANION), P1501, DOI 10.1145/3067695.3082519
   Bokhari MA, 2018, PROCEEDINGS OF THE 15TH EAI INTERNATIONAL CONFERENCE ON MOBILE AND UBIQUITOUS SYSTEMS: COMPUTING, NETWORKING AND SERVICES (MOBIQUITOUS 2018), P207, DOI 10.1145/3286978.3287014
   Brownlee AEI, 2017, IEEE TETCI, V1, P188, DOI 10.1109/TETCI.2017.2699193
   Bruce BR, 2019, IEEE T SOFTWARE ENG, V45, P1150, DOI 10.1109/TSE.2018.2827066
   Bruce BR, 2016, LECT NOTES COMPUT SC, V9962, P238, DOI 10.1007/978-3-319-47106-8_18
   Bruce BR, 2015, GECCO'15: PROCEEDINGS OF THE 2015 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, P1327, DOI 10.1145/2739480.2754752
   Burles Nathan, 2015, Search-Based Software Engineering. 7th International Symposium, SSBSE 2015. Proceedings: LNCS 9275, P255, DOI 10.1007/978-3-319-22183-0_20
   Couto M, 2020, PROCEEDINGS OF THE 2020 IEEE 27TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER '20), P217, DOI [10.1109/SANER48275.2020.9054858, 10.1109/saner48275.2020.9054858]
   Cruz L, 2021, IEEE T SOFTWARE ENG, V47, P2260, DOI 10.1109/TSE.2019.2946163
   Das KK, 2008, INDIAN J MED RES, V128, P412
   Dong M., 2011, MOB SYST APPL SERV M
   Ferreira D, 2011, LECT NOTES COMPUT SC, V6696, P19, DOI 10.1007/978-3-642-21726-5_2
   Georges A, 2008, ACM SIGPLAN NOTICES, V43, P367, DOI 10.1145/1449955.1449794
   Gong Y. -J., 2015, DISTRIBUTED EVOLUTIO, V34
   Hao S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P92, DOI 10.1109/ICSE.2013.6606555
   Hecht G, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P59, DOI [10.1145/2897073.2897100, 10.1109/MobileSoft.2016.030]
   Hindle A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P46, DOI 10.1109/SANER.2016.60
   Hoque MA, 2015, ACM COMPUT SURV, V48, DOI 10.1145/2840723
   Hort M., 2021, SURVEY PERFORMANCE O
   Huang X., 2004, GARBAGE COLLECTION A, V39
   Hussein A., 2015, 8 ACM INT SYST STOR
   Kalibera T., 2005, INT S PERFORMANCE EV
   Keskin S., 2006, COMP SEVERAL UNIVARI, V2
   Langdon WB, 2016, LECT NOTES COMPUT SC, V9921, P249, DOI 10.1007/978-3-319-45823-6_23
   Li D., 2013, INT S SOFTWARE TESTI
   Linares-Vásquez M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P143, DOI 10.1145/2786805.2786847
   Maxim Integrated, 2016, MAX17047 MAX17050 MO
   McDonnell T, 2013, PROC IEEE INT CONF S, P70, DOI 10.1109/ICSM.2013.18
   Mendes M., 2003, Pakistan Journal of Information and Technology, V2, P135
   Morales R, 2018, IEEE T SOFTWARE ENG, V44, P1176, DOI 10.1109/TSE.2017.2757486
   Murmuria R., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P147, DOI 10.1109/SERE.2012.19
   Mytkowicz T, 2009, ACM SIGPLAN NOTICES, V44, P265, DOI 10.1145/1508284.1508275
   Pascual GG, 2015, FUTURE GENER COMP SY, V47, P127, DOI 10.1016/j.future.2014.08.015
   Pathak A, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P153
   Peltonen E, 2015, INT CONF PERVAS COMP, P37, DOI 10.1109/PERCOM.2015.7146507
   Petke J, 2019, PROCEEDINGS OF THE 2019 GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE COMPANION (GECCCO'19 COMPANION), P1715, DOI 10.1145/3319619.3326870
   Pressman R. S., 2005, SOFTWARE ENG PRACTIT
   Pusukuri KK, 2012, ACM T ARCHIT CODE OP, V8, DOI 10.1145/2086696.2086725
   Sachindran N, 2003, ACM SIGPLAN NOTICES, V38, P326, DOI 10.1145/949343.949335
   Schulte E., 2014, 19 INT C ARCHITECTUR
   Schwefel H.-P, 1977, Numerische optimierung von computer-modellen mittels der evolutionsstrategie
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shye Alex, 2009, P 42 ANN IEEE ACM IN
   Sillars D., 2015, HIGHPERFORMANCE ANDR
   Sinha A, 2001, DES AUT CON, P220, DOI 10.1109/DAC.2001.935508
   Skolicki Z, 2005, GECCO 2005: GENETIC AND EVOLUTIONARY COMPUTATION CONFERENCE, VOLS 1 AND 2, P1295
   Spearman C, 1904, AM J PSYCHOL, V15, P72, DOI 10.2307/1412159
   Steinke S., 2001, INT WORKSH POW TIM M
   Vargha A, 2000, J EDUC BEHAV STAT, V25, P101, DOI 10.3102/10769986025002101
   Wilcoxon Frank, 1992, BREAKTHROUGHS STAT
NR 58
TC 0
Z9 0
U1 0
U2 0
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 155
DI 10.1007/s10664-022-10188-5
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3O4IB
UT WOS:000836798500008
DA 2024-07-18
ER

PT J
AU Horváth, F
   Beszédes, A
   Vancsics, B
   Balogh, G
   Vidács, L
   Gyimóthy, T
AF Horvath, Ferenc
   Beszedes, Arpad
   Vancsics, Bela
   Balogh, Gergo
   Vidacs, Laszlo
   Gyimothy, Tibor
TI Using contextual knowledge in interactive fault localization
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Spectrum-based fault localization; Automated debugging; Interactive
   debugging; User simulation; User study; Think-aloud sessions
ID EXPERTISE; USER
AB Tool support for automated fault localization in program debugging is limited because state-of-the-art algorithms often fail to provide efficient help to the user. They usually offer a ranked list of suspicious code elements, but the fault is not guaranteed to be found among the highest ranks. In Spectrum-Based Fault Localization (SBFL) - which uses code coverage information of test cases and their execution outcomes to calculate the ranks -, the developer has to investigate several locations before finding the faulty code element. Yet, all the knowledge she a priori has or acquires during this process is not reused by the SBFL tool. There are existing approaches in which the developer interacts with the SBFL algorithm by giving feedback on the elements of the prioritized list. We propose a new approach called iFL which extends interactive approaches by exploiting contextual knowledge of the user about the next item in the ranked list (e. g., a statement), with which larger code entities (e. g., a whole function) can be repositioned in their suspiciousness. We implemented a closely related algorithm proposed by Gong et al., called Talk. First, we evaluated iFL using simulated users, and compared the results to SBFL and Talk. Next, we introduced two types of imperfections in the simulation: user's knowledge and confidence levels. On SIR and Defects4J, results showed notable improvements in fault localization efficiency, even with strong user imperfections. We then empirically evaluated the effectiveness of the approach with real users in two sets of experiments: a quantitative evaluation of the successfulness of using iFL, and a qualitative evaluation of practical uses of the approach with experienced developers in think-aloud sessions.
C1 [Horvath, Ferenc; Beszedes, Arpad; Vancsics, Bela; Balogh, Gergo; Vidacs, Laszlo; Gyimothy, Tibor] Univ Szeged, Dept Software Engn, Szeged, Hungary.
   [Vidacs, Laszlo; Gyimothy, Tibor] Univ Szeged, MTA SZTE Res Grp Artificial Intelligence, Szeged, Hungary.
C3 Szeged University; Szeged University
RP Horváth, F (corresponding author), Univ Szeged, Dept Software Engn, Szeged, Hungary.
EM hferenc@inf.u-szeged.hu; beszedes@inf.u-szeged.hu;
   vancsics@inf.u-szeged.hu; geryxyz@inf.u-szeged.hu; lac@inf.u-szeged.hu;
   gyimi@inf.u-szeged.hu
RI Vidács, László/M-3028-2018; Balogh, Gergő/ABA-7560-2021; Horvath,
   Ferenc/L-8320-2018
OI Balogh, Gergő/0000-0002-6781-5453; Horvath, Ferenc/0000-0002-8442-7970
FU University of Szeged
FX Open access funding provided by University of Szeged.
CR Abreu R, 2007, TAIC PART 2007 - TESTING: ACADEMIC AND INDUSTRIAL CONFERENCE - PRACTICE AND RESEARCH TECHNIQUES, PROCEEDINGS, P89, DOI 10.1109/TAIC.PART.2007.13
   Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   [Anonymous], 2009, UTDCS45 U TEX DALL
   [Anonymous], 2021, IFL4ECLIPSE
   [Anonymous], 2013, P 2013 INT S SOFTW T, DOI DOI 10.1145/2483760.2483767
   [Anonymous], 2021, JAV HOM
   [Anonymous], 2016, Effective Debugging: 66 Specific Ways to Debug Software and Systems
   [Anonymous], 2010, International Conference on Software Maintenance, DOI DOI 10.1109/ICSM.2010.5609691
   ANZAI Y, 1979, PSYCHOL REV, V86, P124, DOI 10.1037/0033-295X.86.2.124
   Atlas, 2021, ENS ATL JAV C UND CO
   Balogh G, 2019, IFL ECLIPSE TOOL SUP
   Balogh G, 2019, IEEE INT CONF SOFTW, P371, DOI 10.1109/ICST.2019.00045
   Bandyopadhyay A., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P41, DOI 10.1109/ICST.2012.84
   Baudry B., 2006, 28th International Conference on Software Engineering Proceedings, P82, DOI 10.1145/1134285.1134299
   Caballero R, 2017, ACM COMPUT SURV, V50, DOI 10.1145/3106740
   Campos J, 2012, IEEE INT CONF AUTOM, P378, DOI 10.1145/2351676.2351752
   Corritore CL, 1999, INT J HUM-COMPUT ST, V50, P61, DOI 10.1006/ijhc.1998.0236
   DAVIES SP, 1995, HUM-COMPUT INTERACT, V10, P227, DOI 10.1207/s15327051hci1002&3_3
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   EclEmma, 2021, ECL JAV COD COV ECL
   ERICSSON KA, 1980, PSYCHOL REV, V87, P215, DOI 10.1037/0033-295X.87.3.215
   Fan MM, 2020, IEEE T VIS COMPUT GR, V26, P343, DOI 10.1109/TVCG.2019.2934797
   FRANKE RH, 1978, AM SOCIOL REV, V43, P623, DOI 10.2307/2094540
   Fritz T., 2007, ESEC-FSE '07: Proceedings of the the 6th joint meeting of the European software engineering conference and the ACM SIGSOFT symposium on The foundations of software engineering September 2007, P341, DOI [10.1145/ 1287624.1287673, DOI 10.1145/1287624.1287673]
   Fritz T., 2010, P 32 ACMIEEE INT C S, P385
   Fritz T, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P7, DOI 10.1145/2635868.2635905
   GCOV, 2021, GCOV TEST COV PROGR
   Gong L, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P67, DOI 10.1109/ICSM.2012.6405255
   Gopstein D, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P605, DOI 10.1145/3368089.3409714
   Hao D, 2009, J COMPUT SCI TECH-CH, V24, P962, DOI 10.1007/s11390-009-9270-z
   Hodován R, 2017, PROC IEEE INT CONF S, P194, DOI 10.1109/ICSME.2017.26
   Horvath F, 2020, FIGSHARE
   Horvath F, 2020, PROC IEEE INT CONF S, P290, DOI 10.1109/ICSME46990.2020.00036
   iFL, RES INT FAULT LOC
   Janssem T, 2009, IEEE INT CONF AUTOM, P662, DOI 10.1109/ASE.2009.27
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Just R, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P654, DOI 10.1145/2635868.2635929
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   LaToza Thomas D., 2007, P ESECFSE 2007 DUBR, P361, DOI [DOI 10.1145/1287624.1287675, 10.1145/1287624.1287675]
   Le Tien-Duy B., 2013, 2013 IEEE International Conference on Software Maintenance (ICSM), P380, DOI 10.1109/ICSM.2013.52
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Le XBD, 2019, PROC INT CONF SOFTW, P524, DOI 10.1109/ICSE.2019.00064
   Lehmann D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P610, DOI 10.1145/3236024.3236037
   Lei Y, 2012, IEICE T INF SYST, VE95D, P2247, DOI 10.1587/transinf.E95.D.2247
   Lewis C., 1982, USING THINKING ALOUD
   Li XY, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P82, DOI 10.1145/3180155.3180242
   Li XY, 2016, LECT NOTES COMPUT SC, V10028, P82, DOI 10.1007/978-3-319-49052-6_6
   Lin Y, 2017, PROC INT CONF SOFTW, P393, DOI 10.1109/ICSE.2017.43
   Masri W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559932
   McDonald S, 2012, IEEE T PROF COMMUN, V55, P2, DOI 10.1109/TPC.2011.2182569
   Nergaard M., 2006, Designing Interactive Systems. DIS2006, P209
   Olmsted-Hawala E.L., 2010, THINK ALOUD PROTOCOL
   Parmar  P., 2016, INT J COMPUTER APPL, V154, P6, DOI DOI 10.5120/IJCA2016912206
   Parnin C., 2011, P 2011 INT S SOFTWAR, P199, DOI [10.1145/2001420.2001445, DOI 10.1145/2001420.2001445]
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Prabhakararao S, 2003, 200S IEEE SYMPOSIUM ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, P15
   Renieris M, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P30, DOI 10.1109/ASE.2003.1240292
   Riboira A, 2010, LECT NOTES COMPUT SC, V6303, P215, DOI 10.1007/978-3-642-15585-7_25
   Robillard MP, 2004, IEEE T SOFTWARE ENG, V30, P889, DOI 10.1109/TSE.2004.101
   Rojas Jose Miguel, 2015, P ISSTA
   rubberduck, 2021, RUBB DUCK DEB
   Schroer M, 2021, UND OC LIT OC CLIM R
   Shamshiri S, 2015, IEEE INT CONF AUTOM, P201, DOI 10.1109/ASE.2015.86
   Shynkarenko V, 2020, E EUROPEAN J ENTERPR, P29, DOI DOI 10.15587/1729-4061.2020.215090
   Sillito J, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P23, DOI 10.1109/ISESE.2005.1541811
   Sillito J., 2006, QUESTIONS PROGRAMMER, P23
   Silva J, 2011, ADV ENG SOFTW, V42, P976, DOI 10.1016/j.advengsoft.2011.05.024
   SoDA, 2021, SODA LIB
   Sohn J, 2017, PROCEEDINGS OF THE 26TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA'17), P273, DOI 10.1145/3092703.3092717
   Van Someren MW, 1994, AcademicPress
   VESSEY I, 1986, IEEE T SYST MAN CYB, V16, P621, DOI 10.1109/TSMC.1986.289308
   von Mayrhauser A, 1996, COMPREHENSION PROCES
   Wallace C, 2002, ASSERTIONS END USER
   Wong WE, 2016, IEEE T SOFTWARE ENG, V42, P707, DOI 10.1109/TSE.2016.2521368
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Xia X, 2016, PROC IEEE INT CONF S, P268, DOI 10.1109/ICSME.2016.67
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xu XF, 2011, INT J SOFTW ENG KNOW, V21, P803, DOI 10.1142/S0218194011005505
   Yamashita A, 2018, IEEE WORK CONF MIN S, P50, DOI 10.1145/3196398.3196457
   Yoo S, 2017, ACM T SOFTW ENG METH, V26, DOI 10.1145/3078840
   Yoo S, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2491509.2491513
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
   Zeller A, 2009, WHY PROGRAMS FAIL: A GUIDE TO SYSTEMATIC DEBUGGING, 2ND EDITION
   Zhang MX, 2017, LECT NOTES COMPUT SC, V10538, P261, DOI [10.1007/978-3-319-68155-9_20, 10.1145/3092703.3092731]
NR 85
TC 2
Z9 2
U1 1
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2022
VL 27
IS 6
AR 150
DI 10.1007/s10664-022-10190-x
PG 69
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 3O4IB
UT WOS:000836798500002
OA hybrid, Green Accepted
DA 2024-07-18
ER

PT J
AU Li, BW
   Peng, X
   Xiang, QL
   Wang, HZ
   Xie, T
   Sun, J
   Liu, XZ
AF Li, Bowen
   Peng, Xin
   Xiang, Qilin
   Wang, Hanzhang
   Xie, Tao
   Sun, Jun
   Liu, Xuanzhe
TI Enjoy your observability: an industrial survey of microservice tracing
   and analysis
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Microservice; Logging; Tracing; Industrial survey
AB Microservice systems are often deployed in complex cloud-based environments and may involve a large number of service instances being dynamically created and destroyed. It is thus essential to ensure observability to understand these microservice systems' behaviors and troubleshoot their problems. As an important means to achieve the observability, distributed tracing and analysis is known to be challenging. While many companies have started implementing distributed tracing and analysis for microservice systems, it is not clear whether existing approaches fulfill the required observability. In this article, we present our industrial survey on microservice tracing and analysis through interviewing developers and operation engineers of microservice systems from ten companies. Our survey results offer a number of findings. For example, large microservice systems commonly adopt a tracing and analysis pipeline, and the implementations of the pipeline in different companies reflect different tradeoffs among a variety of concerns. Visualization and statistic-based metrics are the most common means for trace analysis, while more advanced analysis techniques such as machine learning and data mining are seldom used. Microservice tracing and analysis is a new big data problem for software engineering, and its practices breed new challenges and opportunities.
C1 [Li, Bowen; Peng, Xin; Xiang, Qilin] Fudan Univ, Sch Comp Sci, Shanghai, Peoples R China.
   [Li, Bowen; Peng, Xin; Xiang, Qilin] Fudan Univ, Shanghai Key Lab Data Sci, Shanghai, Peoples R China.
   [Wang, Hanzhang] eBay Inc, San Jose, CA USA.
   [Xie, Tao; Liu, Xuanzhe] Peking Univ, Beijing, Peoples R China.
   [Xie, Tao; Liu, Xuanzhe] Peking Univ, Key Lab High Confidence Software Technol, Minist Educ, Beijing, Peoples R China.
   [Sun, Jun] Singapore Management Univ, Singapore, Singapore.
C3 Fudan University; Fudan University; eBay Inc.; Peking University; Peking
   University; Singapore Management University
RP Peng, X (corresponding author), Fudan Univ, Sch Comp Sci, Shanghai, Peoples R China.; Peng, X (corresponding author), Fudan Univ, Shanghai Key Lab Data Sci, Shanghai, Peoples R China.
EM pengxin@fudan.edu.cn
FU National Key Research and Development Program of China [2018YFB1004803]
FX This work was supported by the National Key Research and Development
   Program of China under Grant No. 2018YFB1004803.
CR Alibabacloud, 2020, ALIBABACLOUD
   [Anonymous], 2020, QOS
   [Anonymous], 2007, NSDI 2007 USA
   [Anonymous], 2014, Netflix
   Aws, 2020, AMAZON COM AWS
   Barham P, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE SIXTH SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION (OSDE '04), P259
   Barham Paul, 2003, Proceedings of the 9th conference on Hot Topics in Operating Systems, V9, P15, DOI 10.5555/1251054.1251069
   Bogner J, 2019, LECT NOTES COMPUT SC, V11915, P489, DOI 10.1007/978-3-030-35333-9_34
   Bogner J, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE COMPANION (ICSA-C 2019), P187, DOI 10.1109/ICSA-C.2019.00041
   Brown K, 2021, CLOUD ADOPTION PATTE
   Chanda A., 2007, Operating Systems Review, V41, P17, DOI 10.1145/1272998.1273001
   Chen MY, 2004, USENIX ASSOCIATION PROCEEDINGS OF THE FIRST SYMPOSIUM ON NETWORKED SYSTEMS DESIGN AND IMPLEMENTATION (NSDI'04), P309
   Chen R, 2017, ASIA PAC SOFWR ENG, P466, DOI 10.1109/APSEC.2017.53
   Developer, 2020, EBAY DEV PROGR
   Di Francesco P, 2018, 2018 IEEE 15TH INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P29, DOI 10.1109/ICSA.2018.00012
   Di Francesco P, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA 2017), P21, DOI 10.1109/ICSA.2017.24
   Dynatrace, 2020, DYNATRACE
   Elasticsearch, 2020, ELASTICSEARCH
   Engel T, 2018, LECT NOTES BUS INF P, V317, P74, DOI 10.1007/978-3-319-92901-9_8
   Flink.com, AP FLINK
   Fonseca R., 2008, OSDI, P323
   Fonseca R., 2010, I INT NETW MAN WORKS
   Haselböck S, 2018, IEEE INT CONF SERV, P137, DOI 10.1109/SOCA.2018.00028
   Htrace, 2020, HTRACE
   Istio, 2020, ISTIO
   Jaegertracing, 2020, JAEGERTRACING
   Kafka, 2021, AP KAFK
   Kaldor J, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P34, DOI 10.1145/3132747.3132749
   Kibana, 2020, KIBANA
   Kvale S., 2008, Doing interviews, DOI DOI 10.4135/9781849208963
   Lenarduzzi V, 2021, IEEE SOFTWARE, V38, P54, DOI 10.1109/MS.2020.3030803
   Lewis J, 2020, MICROSERVICES
   Logging, 2020, APACHE
   Logstash, 2020, LOGSTASH
   Mace J, 2015, SOSP'15: PROCEEDINGS OF THE TWENTY-FIFTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P378, DOI 10.1145/2815400.2815415
   Naver, 2020, DYNATRACE
   Newman S., 2015, BUILDING MICROSERVIC
   Pham C, 2017, IEEE T PARALL DISTR, V28, P503, DOI 10.1109/TPDS.2016.2575829
   Prometheus, 2020, PROMETHEUS
   Reynolds P, 2006, USENIX ASSOCIATION PROCEEDINGS OF THE 3RD SYMPOSIUM ON NETWORKED SYSTEMS DESIGN & IMPLEMENTATION (NSDI 06), P115
   Richardson Chris., 2019, MICROSERVICE PATTERN
   Sambasivan R.R., 2011, Proc. NSDI, P4
   Sigelman B. H., 2010, DAPPER LARG DISTR SY
   Splunk.Com, SPLUNK OBS
   Sridharan C., 2018, Distributed Systems Observability
   Strauss Anselm, 1990, Grounded theory procedures and techniques, V2, P101
   Taibi D, 2019, CLOSER: PROCEEDINGS OF THE 9TH INTERNATIONAL CONFERENCE ON CLOUD COMPUTING AND SERVICES SCIENCE, P153, DOI 10.5220/0007755901530164
   Thereska E., 2006, Performance Evaluation Review, V34, P3, DOI 10.1145/1140103.1140280
   Wikipedia, 2020, Wikipedia
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Zhang H, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ARCHITECTURE (ICSA), P51, DOI 10.1109/ICSA.2019.00014
   Zhou X, 2021, IEEE T SOFTWARE ENG, V47, P243, DOI 10.1109/TSE.2018.2887384
   Zhou X, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P683, DOI 10.1145/3338906.3338961
   Zhou X, 2018, IEEE INT CONF AUTOM, P802, DOI 10.1145/3238147.3240730
NR 54
TC 29
Z9 30
U1 6
U2 23
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 25
DI 10.1007/s10664-021-10063-9
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XF3VG
UT WOS:000724001300002
PM 34867075
OA Bronze, Green Published
DA 2024-07-18
ER

PT J
AU Revoredo, K
   Djurica, D
   Mendling, J
AF Revoredo, Kate
   Djurica, Djordje
   Mendling, Jan
TI A study into the practice of reporting software engineering experiments
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Guideline for software engineering experiments; Controlled experiments;
   Process mining; Method mining
ID SEQUENCE-ANALYSIS; PERFORMANCE
AB It has been argued that reporting software engineering experiments in a standardized way helps researchers find relevant information, understand how experiments were conducted and assess the validity of their results. Various guidelines have been proposed specifically for software engineering experiments. The benefits of such guidelines have often been emphasized, but the actual uptake and practice of reporting have not yet been investigated since the introduction of many of the more recent guidelines. In this research, we utilize a mixed-method study design including sequence analysis techniques for evaluating to which extent papers follow such guidelines. Our study focuses on the four most prominent software engineering journals and the time period from 2000 to 2020. Our results show that many experimental papers miss information suggested by guidelines, that no de facto standard sequence for reporting exists, and that many papers do not cite any guidelines. We discuss these findings and implications for the discipline of experimental software engineering focusing on the review process and the potential to refine and extend guidelines, among others, to account for theory explicitly.
C1 [Revoredo, Kate; Djurica, Djordje] Vienna Univ Econ & Business Adm, Welthandelspl 1, A-1020 Vienna, Austria.
   [Mendling, Jan] Humboldt Univ, Unter Linden 6, D-10099 Berlin, Germany.
C3 Vienna University of Economics & Business; Humboldt University of Berlin
RP Revoredo, K (corresponding author), Vienna Univ Econ & Business Adm, Welthandelspl 1, A-1020 Vienna, Austria.
EM kate.revoredo@wu.ac.at; djordje.djurica@wu.ac.at;
   jan.mendling@hu-berlin.de
RI Revoredo, Kate/S-2881-2018
OI Revoredo, Kate/0000-0001-8914-9132; Djurica, Djordje/0000-0002-3656-8314
FU Vienna University of Economics and Business (WU)
FX Open access funding provided by Vienna University of Economics and
   Business (WU).
CR ABBOTT A, 1995, ANNU REV SOCIOL, V21, P93, DOI 10.1146/annurev.so.21.080195.000521
   Abbott A, 2000, SOCIOL METHOD RES, V29, P3, DOI 10.1177/0049124100029001001
   Abran Alain, 2004, Software engineering body of knowledge
   [Anonymous], 1969, CONTENT ANAL SOCIAL
   [Anonymous], 2012, EXPT SOFTWARE ENG
   [Anonymous], 2010, P 1 INT WORKSH REPL
   [Anonymous], 2016, Process Mining: Data Science in Action, DOI [DOI 10.1007/978-3-662-49851-4, 10.1007/978-3-662-49851-4]
   Baldassarre M. T., 2014, EASE 2014, P18
   Basili V.R., 1993, Experimental Software Engineering Issues: Critical Assessment and Future Directions, V706, P1
   Basili VR, 1996, PROC INT CONF SOFTW, P442, DOI 10.1109/ICSE.1996.493439
   Berente N, 2019, INFORM SYST RES, V30, P50, DOI 10.1287/isre.2018.0774
   Bettis RA, 2016, STRATEGIC MANAGE J, V37, P2193, DOI 10.1002/smj.2580
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Brinkkemper S, 1996, INFORM SOFTWARE TECH, V38, P275, DOI 10.1016/0950-5849(95)01059-9
   Brown SA, 2016, 2016 INT C INF SYST
   Burnes B., 1996, Management Decision, V34, P11, DOI [10.1108/00251749610150649, DOI 10.1108/00251749610150649]
   Burton-Jones A, 2009, J ASSOC INF SYST, V10, P495
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cruz M, 2020, IEEE ACCESS, V8, P26773, DOI 10.1109/ACCESS.2019.2952191
   De Koninck P, 2017, DATA MIN KNOWL DISC, V31, P774, DOI 10.1007/s10618-016-0488-4
   DIMAGGIO PJ, 1983, AM SOCIOL REV, V48, P147, DOI 10.2307/2095101
   Dybå T, 2006, INFORM SOFTWARE TECH, V48, P745, DOI 10.1016/j.infsof.2005.08.009
   Gabadinho A, 2011, J STAT SOFTW, V40, P1
   Gauch H.G, 2003, SCI METHOD PRACTICE
   GERSICK CJG, 1990, ORGAN BEHAV HUM DEC, V47, P65, DOI 10.1016/0749-5978(90)90047-D
   Hannay JE, 2007, IEEE T SOFTWARE ENG, V33, P87, DOI 10.1109/TSE.2007.12
   Jedlitschka A, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P92, DOI 10.1109/ISESE.2005.1541818
   Jedlitschka A, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P261
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jedlitschka A, 2014, EMPIR SOFTW ENG, V19, P1921, DOI 10.1007/s10664-013-9268-6
   Juristo N., 2013, BASICS SOFTWARE ENG
   Juristo N., 2001, BASICS SOFTWARE ENG, DOI [DOI 10.1007/978-1-4757-3304-4, 10.1007/978-1-4757-3304-4]
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Kaufmann L, 1990, FINDING GROUPS DATA, DOI [10.1002/9780470316801, DOI 10.1002/9780470316801]
   KELLY JR, 1985, J PERS SOC PSYCHOL, V49, P395, DOI 10.1037/0022-3514.49.2.395
   Kitchenham B., 2007, Joint Report
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2004, PROC INT CONF SOFTW, P273
   KWIATKOWSKI D, 1992, J ECONOMETRICS, V54, P159, DOI 10.1016/0304-4076(92)90104-Y
   LEVITT B, 1989, ADMIN SCI QUART, V34, P190, DOI 10.2307/2989895
   Malinova M, 2019, P 40 INT C INF SYST
   Neuendorf K., 2002, The content analysis guidebook
   Ralph P, 2019, IEEE T SOFTWARE ENG, V45, P712, DOI 10.1109/TSE.2018.2796554
   Ralph Paul, 2021, ARXIV201003525
   Recker J., 2012, Scientific research in information systems: a beginner's guide
   Recker J, 2019, J ASSOC INF SYST, V20, P735, DOI 10.17705/1jais.00550
   Ruxton GD, 2006, BEHAV ECOL, V17, P688, DOI 10.1093/beheco/ark016
   Saldana J., 2015, The coding manual for qualitative researchers
   Shaw M, 2003, PROC INT CONF SOFTW, P726, DOI 10.1109/ICSE.2003.1201262
   Shull F, 2004, EMPIR SOFTW ENG, V9, P111, DOI 10.1023/B:EMSE.0000013516.80487.33
   Singer J., 1999, Fifth IEEE Workshop on Empirical Studies of Software Maintenance (WESS99). Theme: How to Wade Through the Mire of Evidence?, P71
   Sjoberg DIK, 2005, IEEE T SOFTWARE ENG, V31, P733, DOI 10.1109/TSE.2005.97
   Sollaci LB, 2004, J MED LIBR ASSOC, V92, P364
   Song M, 2009, LECT NOTES BUS INF P, V17, P109
   Trochim W.M., 2001, Research Methods Knowledge Base, V2
   van der Aalst W, 2012, WIRES DATA MIN KNOWL, V2, P182, DOI 10.1002/widm.1045
   Venkatesh V, 2013, MIS QUART, V37, P21
   Wohlin C., 2000, Experimentation in Software Engineering: An Introduction, V1, DOI DOI 10.1007/978-1-4615-4625-2
   Wohlin C, 2015, J SYST SOFTWARE, V109, P229, DOI 10.1016/j.jss.2015.08.009
NR 59
TC 4
Z9 4
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 113
DI 10.1007/s10664-021-10007-3
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA UC6WX
UT WOS:000686665100004
OA hybrid
DA 2024-07-18
ER

PT J
AU Wang, D
   Xiao, T
   Thongtanunam, P
   Kula, RG
   Matsumoto, K
AF Wang, Dong
   Xiao, Tao
   Thongtanunam, Patanamon
   Kula, Raula Gaikovina
   Matsumoto, Kenichi
TI Understanding shared links and their intentions to meet information
   needs in modern code review: A case study of the OpenStack and Qt
   projects
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Code review; Mining software repositories; Link sharing; Information
   needs
AB Code reviews serve as a quality assurance activity for software teams. Especially for Modern Code Review, sharing a link during a review discussion serves as an effective awareness mechanism where "Code reviews are good FYIs [for your information].". Although prior work has explored link sharing and the information needs of a code review, the extent to which links are used to properly conduct a review is unknown. In this study, we performed a mixed-method approach to investigate the practice of link sharing and their intentions. First, through a quantitative study of the OpenStack and Qt projects, we identify 19,268 reviews that have 39,686 links to explore the extent to which the links are shared, and analyze a correlation between link sharing and review time. Then in a qualitative study, we manually analyze 1,378 links to understand the role and usefulness of link sharing. Results indicate that internal links are more widely referred to (93% and 80% for the two projects). Importantly, although the majority of the internal links are referencing to reviews, bug reports and source code are also shared in review discussions. The statistical models show that the number of internal links as an explanatory factor does have an increasing relationship with the review time. Finally, we present seven intentions of link sharing, with providing context being the most common intention for sharing links. Based on the findings and a developer survey, we encourage the patch author to provide clear context and explore both internal and external resources, while the review team should continue link sharing activities. Future research directions include the investigation of causality between sharing links and the review process, as well as the potential for tool support.
C1 [Wang, Dong; Xiao, Tao; Kula, Raula Gaikovina; Matsumoto, Kenichi] Nara Inst Sci & Technol, Ikoma, Japan.
   [Thongtanunam, Patanamon] Univ Melbourne, Melbourne, Vic, Australia.
C3 Nara Institute of Science & Technology; University of Melbourne
RP Wang, D (corresponding author), Nara Inst Sci & Technol, Ikoma, Japan.
EM wang.dong.vt8@is.naist.jp; tao.xiao.ts2@is.naist.jp;
   patanamon.t@unimelb.edu.au; raula-k@is.naist.jp; matumoto@is.naist.jp
RI Kula, Raula/AAD-6079-2019
OI Kula, Raula/0000-0003-2324-0608; Xiao, Tao/0000-0003-4070-585X
FU Japanese Society for the Promotion of Science (JSPS) KAKENHI
   [JP18H04094, JP20K19774, JP20H05706]; Australian Research Council's
   Discovery Early Career Researcher Award (DECRA) [DE210101091];
   Grants-in-Aid for Scientific Research [20K19774] Funding Source: KAKEN;
   Australian Research Council [DE210101091] Funding Source: Australian
   Research Council
FX This work is supported by Japanese Society for the Promotion of Science
   (JSPS) KAKENHI Grant Numbers JP18H04094, JP20K19774, and JP20H05706. P.
   Thongtanunam was partially supported by the Australian Research
   Council's Discovery Early Career Researcher Award (DECRA) funding scheme
   (DE210101091).
CR [Anonymous], 2012, P ACM SIGSOFT 20 INT, DOI DOI 10.1145/2393596.2393656
   [Anonymous], 2014, 11 WORKING C MINING, DOI [DOI 10.1145/2597073.2597076, DOI 10.1145/2597073]
   Bacchelli A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P712, DOI 10.1109/ICSE.2013.6606617
   Baltes S, 2019, EMPIR SOFTW ENG, V24, P1259, DOI 10.1007/s10664-018-9650-5
   Baysal O, 2016, EMPIR SOFTW ENG, V21, P932, DOI 10.1007/s10664-015-9366-8
   Boisselle V, 2015, IEEE INT WORK C SO, P131, DOI 10.1109/SCAM.2015.7335409
   Ebert F, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P49, DOI [10.1109/SANER.2019.8668024, 10.1109/saner.2019.8668024]
   FAGAN ME, 1976, IBM SYST J, V15, P182, DOI 10.1147/sj.153.0182
   Gómez C, 2013, IEEE WORK CONF MIN S, P81, DOI 10.1109/MSR.2013.6624011
   HARRELL FE, 1984, STAT MED, V3, P143, DOI 10.1002/sim.4780030207
   Hastie T., 2009, The Elements of Statistical Learning
   Hata H, 2019, PROC INT CONF SOFTW, P1211, DOI 10.1109/ICSE.2019.00123
   Hirao T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P578, DOI 10.1145/3338906.3338949
   Huizinga D., 2007, AUTOMATED DEFECT PRE, DOI DOI 10.1002/9780470165171
   Jiang J, 2019, IN PRESS, P101
   Kononenko O, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P124, DOI 10.1145/3183519.3183542
   KREJCIE RV, 1970, EDUC PSYCHOL MEAS, V30, P607, DOI 10.1177/001316447003000308
   McIntosh S, 2016, EMPIR SOFTW ENG, V21, P2146, DOI 10.1007/s10664-015-9381-9
   Moksony F., 1999, Szociologiai Szemle, P130
   Pascarella Luca, 2018, Proceedings of the ACM on Human-Computer Interaction, V2, DOI 10.1145/3274404
   Rath M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P834, DOI 10.1145/3180155.3180207
   Rigby PC, 2013, P 2013 9 JOINT M FDN, P202, DOI DOI 10.1145/2491411.2491444
   Rigby PC, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P541, DOI 10.1145/1985793.1985867
   Ruangwan S, 2018, EMPIR SOFTW ENG, P973
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Thongtanunam P., 2020, IEEE Transactions on Software Engineering TSE'20
   Thongtanunam P, 2017, EMPIR SOFTW ENG, V22, P768, DOI 10.1007/s10664-016-9452-6
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Viera AJ, 2005, FAM MED, V37, P360
   Ye DH, 2017, EMPIR SOFTW ENG, V22, P375, DOI 10.1007/s10664-016-9430-z
   Zampetti F, 2017, INT C PROGRAM COMPRE, P23, DOI 10.1109/ICPC.2017.30
   Zhang Y, 2019, IEEE T SOFTWARE ENG, P1
   Zhang Y, 2020, WORLD WIDE WEB, V23, P1589, DOI 10.1007/s11280-019-00770-1
   Zhang Y, 2018, SOFTWAREMINING '18: PROCEEDINGS OF THE 7TH INTERNATIONAL WORKSHOP ON SOFTWARE MINING, P12, DOI 10.1145/3242887.3242891
NR 34
TC 15
Z9 15
U1 4
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 96
DI 10.1007/s10664-021-09997-x
PG 32
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UJ9IF
UT WOS:000691590700004
OA hybrid
DA 2024-07-18
ER

PT J
AU Hatamian, M
   Wairimu, S
   Momen, N
   Fritsch, L
AF Hatamian, Majid
   Wairimu, Samuel
   Momen, Nurul
   Fritsch, Lothar
TI A privacy and security analysis of early-deployed COVID-19 contact
   tracing Android apps
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE COVID-19; Contact tracing app; Privacy; Security; Vulnerability; GDPR;
   Pandemic
AB As this article is being drafted, the SARS-CoV-2/COVID-19 pandemic is causing harm and disruption across the world. Many countries aimed at supporting their contact tracers with the use of digital contact tracing apps in order to manage and control the spread of the virus. Their idea is the automatic registration of meetings between smartphone owners for the quicker processing of infection chains. To date, there are many contact tracing apps that have already been launched and used in 2020. There has been a lot of speculations about the privacy and security aspects of these apps and their potential violation of data protection principles. Therefore, the developers of these apps are constantly criticized because of undermining users' privacy, neglecting essential privacy and security requirements, and developing apps under time pressure without considering privacy- and security-by-design. In this study, we analyze the privacy and security performance of 28 contact tracing apps available on Android platform from various perspectives, including their code's privileges, promises made in their privacy policies, and static and dynamic performances. Our methodology is based on the collection of various types of data concerning these 28 apps, namely permission requests, privacy policy texts, run-time resource accesses, and existing security vulnerabilities. Based on the analysis of these data, we quantify and assess the impact of these apps on users' privacy. We aimed at providing a quick and systematic inspection of the earliest contact tracing apps that have been deployed on multiple continents. Our findings have revealed that the developers of these apps need to take more cautionary steps to ensure code quality and to address security and privacy vulnerabilities. They should more consciously follow legal requirements with respect to apps' permission declarations, privacy principles, and privacy policy contents.
C1 [Hatamian, Majid] Northumbria Univ, Dept Comp & Informat Sci, Newcastle Upon Tyne, Tyne & Wear, England.
   [Wairimu, Samuel; Momen, Nurul; Fritsch, Lothar] Karlstad Univ, Dept Math & Comp Sci, Karlstad, Sweden.
   [Momen, Nurul] Blekinge Inst Technol, Karlskrona, Sweden.
C3 Northumbria University; Karlstad University; Blekinge Institute
   Technology
RP Hatamian, M (corresponding author), Northumbria Univ, Dept Comp & Informat Sci, Newcastle Upon Tyne, Tyne & Wear, England.
EM majid.hatamian.h@ieee.org; samuel.wairimu@kau.se; nurul.momen@bth.se;
   lothar.fritsch@kau.se
RI Momen, Nurul/IZD-8394-2023; Momen, Nurul/AAF-5389-2019; Hatamian,
   Majid/AAU-9157-2020
OI Momen, Nurul/0000-0002-5235-5335; Momen, Nurul/0000-0002-5235-5335; 
FU Digital Well Research project from Region Varmland, Project Alert,
   Research council of Norway [270969]
FX Part of this work was funded by the Digital Well Research project from
   Region Varmland, Project Alert, Research council of Norway 270969.
CR Achara J.P., 2014, 7th ACM Conference on Security Privacy in Wireless and Mobile Networks, WiSec'14, Oxford, United Kingdom, July 23-25, 2014, WISEC'14, P231, DOI DOI 10.1145/2627393.2627399
   Al-Saffar D, 2015, 2015 LOUGHBOROUGH AN, P1
   Alepis E., 2019, Journal of Hardware and Systems Security, V3, P45, DOI DOI 10.1007/S41635-018-0053-2
   Alepis E, 2017, LECT NOTES COMPUT SC, V10662, P53, DOI 10.1007/978-3-319-71501-8_4
   Almuhimedi H, 2015, CHI 2015: PROCEEDINGS OF THE 33RD ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P787, DOI 10.1145/2702123.2702210
   [Anonymous], 2020, MOBILE APPL SUPPORT
   [Anonymous], 2020, GUIDELINES 042020 US
   [Anonymous], 2020, Mobile Security Framework (MobSF)
   [Anonymous], 2020, Ethical Considerations Relating to Long-Term Residential Care Facilities in the context of COVID-19
   [Anonymous], 2018, INDIAS PERSONAL DATA
   [Anonymous], 2020, COVID-19 Contact tracing: data protection expectations on app development
   [Anonymous], 2020, REUTERS
   [Anonymous], 2020, U APP MANDATES ARE W
   [Anonymous], 2014, DEVELOPERS GUIDE SEC
   [Anonymous], 2020, NEW RESOURCES PROVID
   [Anonymous], 2020, SMARTPHONE MARKET SH
   [Anonymous], 2020, statista
   [Anonymous], 2019, Statista
   [Anonymous], 2020, Guidance on Apps supporting the fight against COVID 19 pandemic in relation to data protection
   [Anonymous], 2019, OFFICE PRIVACY COMMI
   [Anonymous], 2020, MOBILE OPERATING SYS
   [Anonymous], 2020, ISSUE GUIDE COVID 19
   [Anonymous], 2020, Commission Recommendation (EU) 2020/1366 of 23 September 2020 on an EU mechanism for preparedness and management of crises related to migration
   [Anonymous], 2017, PRIVACY DATA PROTECT
   [Anonymous], 2020, EDPB LETT EUROPEAN C
   [Anonymous], 2019, Digital Information World
   [Anonymous], 2020, ONE ZERO
   [Anonymous], 2015, Berkeley Technol Law J
   Apkmirror, 2020, FREE APK DOWNLOADS F
   Apkpure.com, 2020, DOWNLOAD APK FREE ON
   Cavoukian A., 2009, PRIVACY DESIGN 7 FDN, V5
   Cavoukian A., 2009, Identity in the Information Society, V3, P247, DOI DOI 10.1007/S12394-010-0062-Y
   Chaulagain Dewan., 2020, 2020 IEEE Conference on Communications and Network Security (CNS), P1
   Children's online privacy protection rule (coppa), 1998, FED TRAD COMM
   Dar A, 2020, TECHNICAL REPORTS CR
   EDPB, 2020, **DROPPED REF**
   Ferretti L, 2020, SCIENCE, V368, P619, DOI 10.1126/science.abb6936
   Franzen Daniel, 2016, IMPS ESSOS, P11
   Fritsch L., 2017, OPEN IDENTITY SUMMIT
   Fritsch L, 2008, PROFILING EUROPEAN C, P147, DOI [10.1007/978-1-4020-6914-7_8, DOI 10.1007/978-1-4020-6914-7]
   Hameed A, 2016, AIP CONF PROC, V1784, DOI 10.1063/1.4966711
   Han E, 2020, LANCET REGIONAL HLTH
   Hatamian M, 2020, IEEE ACCESS, V8, P35429, DOI 10.1109/ACCESS.2020.2974911
   Hatamian M, 2019, LECT NOTES COMPUT SC, V11498, P87, DOI 10.1007/978-3-030-21752-5_7
   Hatamian M, 2018, LECT NOTES COMPUT SC, V10980, P198, DOI 10.1007/978-3-319-95729-6_13
   Hatamian M, 2017, LECT NOTES COMPUT SC, V10442, P3, DOI 10.1007/978-3-319-64483-7_1
   Ibrar F, 2017, P 9 INT C INF COMM T, P1
   Jain AK, 2012, IT PROF, V14, P28, DOI 10.1109/MITP.2012.72
   Kalaa M.O. A., 2016, IEEE Wireless Communications and Networking Conference, V2016-Septe, P1, DOI DOI 10.1109/WCNC.2016.7564809
   Kishore B, 2018, PLANT BENEFICIARY RH, P1, DOI [10.1007/978-981-13-0044-8, 2018, DOI 10.1007/978-981-13-0044-8,2018]
   Knorr K, 2015, IFIP ADV INF COMM TE, V455, P571, DOI 10.1007/978-3-319-18467-8_38
   Lashgari M, 2018, THESIS KTH IND EC MA
   Luo XN, 2018, INT J DISTRIB SENS N, V14, DOI 10.1177/1550147718812017
   Mell, 2007, PUBLISHED 1 FORUM IN, V1, P23
   Momen N, 2018, THESIS KARLSTADS U
   Momen N, 2019, IEEE SECUR PRIV, V17, P10, DOI 10.1109/MSEC.2019.2938445
   Momen N, 2017, ANN CONF PRIV SECUR, P268, DOI 10.1109/PST.2017.00039
   Momen Nurul, 2020, SICHERHEIT 2020, V2020
   Papageorgiou A, 2018, IEEE ACCESS, V6, P9390, DOI 10.1109/ACCESS.2018.2799522
   Qian K, 2018, 2018 IEEE CONFERENCE ON DEPENDABLE AND SECURE COMPUTING (DSC), P382
   Raskar R, 2020, ARXIV 200308567
   Razaghpanah A, 2015, CORR ARXIV 151001419
   Rocamora A, 2017, FASH THEORY, V21, P505, DOI 10.1080/1362704X.2016.1173349
   SALTZER JH, 1975, P IEEE, V63, P1278, DOI 10.1109/PROC.1975.9939
   Solove DJ, 2006, U PENN LAW REV, V154, P477, DOI 10.2307/40041279
   Sun R, 2020, ARXIV 200610933
   Sunyaev A, 2015, AM MEDICAL INFORMATI, P288
   Trackcorona, 2020, COVID 19 TRACKER LIV
   Tshiluna NB, 2016, 2016 THIRD INTERNATIONAL CONFERENCE ON ADVANCES IN COMPUTING, COMMUNICATION AND ENGINEERING (ICACCE 2016), P13, DOI 10.1109/ICACCE.2016.8073716
   Van Kleek M, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P5208, DOI 10.1145/3025453.3025556
   Zhang Y, 2018, ICCSP 2018: PROCEEDINGS OF THE 2ND INTERNATIONAL CONFERENCE ON CRYPTOGRAPHY, SECURITY AND PRIVACY, P144, DOI 10.1145/3199478.3199492
   Zhauniarovich Y, 2016, LECT NOTES COMPUT SC, V9854, P346, DOI 10.1007/978-3-319-45719-2_16
NR 72
TC 25
Z9 26
U1 0
U2 19
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR 19
PY 2021
VL 26
IS 3
AR 36
DI 10.1007/s10664-020-09934-4
PG 51
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RA0BI
UT WOS:000631083100001
PM 33776548
OA Green Published, Green Accepted, hybrid
DA 2024-07-18
ER

PT J
AU Chen, AR
   Chen, TH
   Wang, SW
AF Chen, An Ran
   Chen, Tse-Hsun (Peter)
   Wang, Shaowei
TI Demystifying the challenges and benefits of analyzing user-reported logs
   in bug reports
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Bug report; Log; Stack trace; Empirical study
ID CHARACTERIZING LOGGING PRACTICES; LOCALIZATION
AB Logs in bug reports provide important debugging information for developers. During the debugging process, developers need to study the bug report and examine user-provided logs to understand the system executions that lead to the problem. Intuitively, user-provided logs illustrate the problems that users encounter and may help developers with the debugging process. However, some logs may be incomplete or inaccurate, which can cause difficulty for developers to diagnose the bug, and thus, delay the bug fixing process. In this paper, we conduct an empirical study on the challenges that developers may encounter when analyzing the user-provided logs and their benefits. In particular, we study both log snippets and exception stack traces in bug reports. We conduct our study on 10 large-scale open-source systems with a total of 1,561 bug reports with logs (BRWL) and 7,287 bug reports without logs (BRNL). Our findings show that: 1) BRWL takes longer time (median ranges from 3 to 91 days) to resolve compared to BRNL (median ranges from 1 to 25 days). We also find that reporters may not attach accurate or sufficient logs (i.e., developers often ask for additional logs in the Comments section of a bug report), which extends the bug resolution time. 2) Logs often provide a good indication of where a bug is located. Most bug reports (73%) have overlaps between the classes that generate the logs and their corresponding fixed classes. However, there is still a large number of bug reports where there is no overlap between the logged and fixed classes. 3) Our manual study finds that there is often missing system execution information in the logs. Many logs only show the point of failure (e.g., exception) and do not provide a direct hint on the actual root cause. In fact, through call graph analysis, we find that 28% of the studied bug reports have the fixed classes reachable from the logged classes, while they are not visible in the logs attached in bug reports. In addition, some logging statements are removed in the source code as the system evolves, which may cause further challenges in analyzing the logs. In short, our findings highlight possible future research directions to better help practitioners attach or analyze logs in bug reports.
C1 [Chen, An Ran; Chen, Tse-Hsun (Peter)] Concordia Univ, Software PErformance Anal & Reliabil SPEAR Lab, Montreal, PQ, Canada.
   [Wang, Shaowei] Univ Manitoba, Dept Comp Sci, Winnipeg, MB, Canada.
C3 Concordia University - Canada; University of Manitoba
RP Chen, AR (corresponding author), Concordia Univ, Software PErformance Anal & Reliabil SPEAR Lab, Montreal, PQ, Canada.
EM anr_chen@encs.concordia.ca; peterc@encs.concordia.ca;
   shaowei@cs.umanitoba.ca
OI Chen, Tse-Hsun/0000-0003-4027-0905; Chen, An Ran/0000-0003-3137-7540
CR Lam AN, 2017, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2017.24
   [Anonymous], 2014, P 2014 INT S SOFTWAR, DOI DOI 10.1145/2610384.2610386
   [Anonymous], 2009, Introduction to the Practice of Statistics
   Anvik John, 2006, P 28 INT C SOFTWARE, P361, DOI DOI 10.1145/1134285.1134336
   Apache, 2019, AAP JIRA
   Bettenburg N, 2008, 9 16 INT S FDN SOFTW
   Bettenburg N, 2008, PROC IEEE INT CONF S, P337, DOI 10.1109/ICSM.2008.4658082
   Bhagwan R, 2018, PROCEEDINGS OF THE 13TH USENIX SYMPOSIUM ON OPERATING SYSTEMS DESIGN AND IMPLEMENTATION, P493
   Bianchi FA, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P705, DOI 10.1145/3106237.3106292
   Cao Y., 2014, Proceedings of the ACM/IEEE International Conference on Automated Software Engineering ASE, P791
   Chaparro O, 2017, PROC IEEE INT CONF S, P376, DOI 10.1109/ICSME.2017.100
   Chen BY, 2018, IEEE INT CONF AUTOM, P305, DOI 10.1145/3238147.3238214
   Chen BY, 2017, EMPIR SOFTW ENG, V22, P330, DOI 10.1007/s10664-016-9429-5
   Chen T, 2014, PROCEEDINGS OF THE FIFTH INTERNATIONAL SYMPOSIUM ON TEST AUTOMATION & INSTRUMENTATION, VOLS 1 AND 2, P82
   Chen TH, 2017, 2017 IEEE/ACM 39TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2017), P243, DOI 10.1109/ICSE-SEIP.2017.26
   Chen TH, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P666, DOI 10.1145/2950290.2950303
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   Dao T, 2017, INT C PROGRAM COMPRE, P241, DOI 10.1109/ICPC.2017.29
   Fu Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P24, DOI 10.1145/2591062.2591175
   Hassani M, 2018, EMPIR SOFTW ENG, V23, P3248, DOI 10.1007/s10664-018-9603-z
   IEEE, IEEE DEFINITIONS
   Jin W, 2012, PROC INT CONF SOFTW, P474, DOI 10.1109/ICSE.2012.6227168
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   LaToza Thomas D., 2010, P 32 ACM IEEE INT C, P185, DOI DOI 10.1145/1806799.1806829
   Li H., 2020, IEEE T SOFTWARE ENG
   Li H, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P1, DOI 10.1145/3183519.3183544
   Li ZH, 2019, PROC INT CONF SOFTW, P152, DOI 10.1109/ICSE.2019.00032
   Li Zhenhao., 2020, P 35 IEEE ACM INT C
   Lin QW, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P102, DOI 10.1145/2889160.2889232
   Liu B, 2016, SOFTW TEST VERIF REL, V26, P431, DOI 10.1002/stvr.1605
   Loyola P, 2018, CIKM'18: PROCEEDINGS OF THE 27TH ACM INTERNATIONAL CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P657, DOI 10.1145/3269206.3271811
   Moreno L, 2014, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSME.2014.37
   Rahman Mohammad Masudur, 2018, 2018 IEEE/ACM 40th International Conference on Software Engineering: Companion (ICSE-Companion). Proceedings, P348, DOI 10.1145/3183440.3195003
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Saha RK, 2013, IEEE INT CONF AUTOM, P345, DOI 10.1109/ASE.2013.6693093
   Satvat K, 2018, 180801718 CORR
   Schroter Adrian, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P118, DOI 10.1109/MSR.2010.5463280
   Shang WY, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P402, DOI 10.1109/ICSE.2013.6606586
   Sisman B., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P50, DOI 10.1109/MSR.2012.6224299
   SOLTANI M, 2018, IEEE T SOFTWARE ENG, P1
   Tucek Joseph, 2007, Operating Systems Review, V41, P131, DOI 10.1145/1323293.1294275
   Wang SW, 2016, J SOFTW-EVOL PROC, V28, P921, DOI 10.1002/smr.1801
   Wong CP, 2014, PROC IEEE INT CONF S, P181, DOI 10.1109/ICSME.2014.40
   Xu W, 2009, SOSP'09: PROCEEDINGS OF THE TWENTY-SECOND ACM SIGOPS SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES, P117
   Yuan D., 2012, P 2012 USENIX S OP S, P293
   Yuan D, 2012, PROC INT CONF SOFTW, P102, DOI 10.1109/ICSE.2012.6227202
   Yuan D, 2011, ACM SIGPLAN NOTICES, V46, P3, DOI 10.1145/1961296.1950369
   Yuan D, 2010, ACM SIGPLAN NOTICES, V45, P143, DOI 10.1145/1735971.1736038
   Yuan Ding, 2014, 11 USENIX S OPERATIN, P249
   Zeller A, 2005, DO CHANGES INDUCE FI, P1
   Zeng Y, 2019, EMPIR SOFTW ENG, V24, P3394, DOI 10.1007/s10664-019-09687-9
   Zhao X., 2014, 11 USENIX S OP SYST, P629
   Zhou J, 2012, PROC INT CONF SOFTW, P14, DOI 10.1109/ICSE.2012.6227210
   Zimmermann T, 2010, IEEE T SOFTWARE ENG, V36, P618, DOI 10.1109/TSE.2010.63
NR 54
TC 13
Z9 13
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN 12
PY 2021
VL 26
IS 1
AR 8
DI 10.1007/s10664-020-09893-w
PG 30
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA PV7VA
UT WOS:000610190100004
DA 2024-07-18
ER

PT J
AU Moslehi, P
   Adams, B
   Rilling, J
AF Moslehi, Parisa
   Adams, Bram
   Rilling, Juergen
TI A feature location approach for mapping application features extracted
   from crowd-based screencasts to source code
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Crowd-based documentation; Mining video content; Speech analysis;
   Feature location; Software traceability; Information extraction;
   Software documentation
ID TOPIC MODELS; SEARCH
AB Crowd-based multimedia documents such as screencasts have emerged as a source for documenting requirements, the workflow and implementation issues of open source and agile software projects. For example, users can show and narrate how they manipulate an application's GUI to perform a certain functionality, or a bug reporter could visually explain how to trigger a bug or a security vulnerability. Unfortunately, the streaming nature of programming screencasts and their binary format limit how developers can interact with a screencast's content. In this research, we present an automated approach for mining and linking the multimedia content found in screencasts to their relevant software artifacts and, more specifically, to source code. We apply LDA-based mining approaches that take as input a set of screencast artifacts, such as GUI text and spoken word, to make the screencast content accessible and searchable to users and to link it to their relevant source code artifacts. To evaluate the applicability of our approach, we report on results from case studies that we conducted on existing WordPress and Mozilla Firefox screencasts. We found that our automated approach can significantly speed up the feature location process. For WordPress, we find that our approach using screencast speech and GUI text can successfully link relevant source code files within the top 10 hits of the result set with median Reciprocal Rank (RR) of 50% (rank 2) and 100% (rank 1). In the case of Firefox, our approach can identify relevant source code directories within the top 100 hits using screencast speech and GUI text with the median RR = 20%, meaning that the first true positive is ranked 5 or higher in more than 50% of the cases. Also, source code related to the frontend implementation that handles high-level or GUI-related aspects of an application is located with higher accuracy. We also found that term frequency rebalancing can further improve the linking results when using less noisy scenarios or locating less technical implementation of scenarios. Investigating the results of using original and weighted screencast data sources (speech, GUI, speech and GUI) that can result in having the highest median RR values in both case studies shows that speech data is an important information source that can result in having RR of 100%.
C1 [Moslehi, Parisa] Concordia Univ, Ambient Software Engn Grp ASEG Lab, Montreal, PQ, Canada.
   [Rilling, Juergen] Concordia Univ, Dept Comp Sci & Software Engn, Montreal, PQ, Canada.
   [Adams, Bram] Queens Univ, Kingston, ON, Canada.
C3 Concordia University - Canada; Concordia University - Canada; Queens
   University - Canada
RP Moslehi, P (corresponding author), Concordia Univ, Ambient Software Engn Grp ASEG Lab, Montreal, PQ, Canada.
EM p_mosleh@encs.concordia.ca; bram.adams@queensu.ca;
   juergen.rilling@concordia.ca
OI Moslehi, Parisa/0000-0002-4414-9160; Adams, Bram/0000-0001-7213-4006
CR ADRIAN K, J SOFTWARE MAINTENAN, V22, P191
   Ali N., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P174, DOI 10.1109/SCAM.2012.26
   Nguyen AT, 2012, IEEE INT CONF AUTOM, P70, DOI 10.1145/2351676.2351687
   [Anonymous], 2013, FINDING SOURCE CODE
   [Anonymous], 2013, SOURCE CODE SIMILARI
   [Anonymous], 2012, ACM SIGSOFT SOFTWARE
   Asuncion HU, 2010, 2010 ACM IEEE 32 INT, V1, P95
   Bajracharya SK, 2012, EMPIR SOFTW ENG, V17, P424, DOI 10.1007/s10664-010-9144-6
   Baldi PF, 2008, OOPSLA 2008 NASHVILLE, CONFERENCE PROCEEDINGS, P543, DOI 10.1145/1449955.1449807
   Bao LF, 2019, IEEE T SOFTWARE ENG, V45, P823, DOI 10.1109/TSE.2018.2802916
   Bao LF, 2017, EMPIR SOFTW ENG, V22, P134, DOI 10.1007/s10664-015-9417-1
   Bao LF, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P399, DOI 10.1109/SANER.2015.7081850
   Baroni M, 2009, LANG RESOUR EVAL, V43, P209, DOI 10.1007/s10579-009-9081-4
   Bassett B, 2013, CONF PROC INT SYMP C, P133, DOI 10.1109/ICPC.2013.6613841
   Blei DM, 2012, COMMUN ACM, V55, P77, DOI 10.1145/2133806.2133826
   Blei DM, 2004, ADV NEUR IN, V16, P17
   Blei DM, 2003, J MACH LEARN RES, V3, P993, DOI 10.1162/jmlr.2003.3.4-5.993
   BRUNELLI R, 1993, IEEE T PATTERN ANAL, V15, P1042, DOI 10.1109/34.254061
   Campbell JC, 2013, IEEE WORK CONF MIN S, P57, DOI 10.1109/MSR.2013.6624005
   Chen TH, 2016, EMPIR SOFTW ENG, V21, P1843, DOI 10.1007/s10664-015-9402-8
   Chen Xiao, 2014, Reluctance torque evaluation for interior permanent magnet machines using frozen permeability, DOI 10.1049/iet-tv.50.19173
   Cheriet M, 2007, CHARACTER RECOGNITION SYSTEMS: A GUIDE FOR STUDENTS AND PRACTIONERS, P1, DOI 10.1002/9780470176535
   Cleland-Huang J., 2012, 2012 IEEE 20th International Requirements Engineering Conference (RE 2012), P231, DOI 10.1109/RE.2012.6345809
   Cleland-Huang J., 2014, FOSE P FUTURE SOFTWA, P55
   DEERWESTER S, 1990, J AM SOC INFORM SCI, V41, P391, DOI 10.1002/(SICI)1097-4571(199009)41:6<391::AID-ASI1>3.0.CO;2-9
   Dit B, 2013, J SOFTW-EVOL PROC, V25, P53, DOI 10.1002/smr.567
   Eddy BP, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1892
   Ellmann Mathias., 2017, Proceedings of the 3rd ACM SIGSOFT International Workshop on Software Analytics, SWAN 2017, P1, DOI [DOI 10.1145/3121257.3121260, 10.1145/3121257.3121260]
   Escobar-Avila J, 2017, PROC IEEE ACM INT C, P341, DOI 10.1109/ICSE-C.2017.121
   Gaffney J.E., 1981, P ACM 81 C, P126, DOI [10.1145/800175.809854, DOI 10.1145/800175.809854]
   Gotel O., 2012, Software and Systems Traceability, P343, DOI DOI 10.1007/978
   Gray WD, 2007, ADV COGNITIVE MODELS
   GRECHANIK M, 2010, P 32 ACM IEEE INT C, V1, P475
   Hofmann T, 2001, MACH LEARN, V42, P177, DOI 10.1023/A:1007617005950
   Jurafsky D., 2009, SPEECH LANGUAGE PROC, V2nd
   KAGDI H., 2007, International Workshop on Traceability in Emerging Forms of Software Engineering, P32
   Kagdi H, 2007, INT C PROGRAM COMPRE, P145
   Keivanloo I, 2014, SCI COMPUT PROGRAM, V95, P426, DOI 10.1016/j.scico.2013.10.006
   Khandwala K, 2018, PROCEEDINGS OF THE FIFTH ANNUAL ACM CONFERENCE ON LEARNING AT SCALE (L@S'18), DOI 10.1145/3231644.3231652
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Kuhn A, 2008, WORK CONF REVERSE EN, P209, DOI 10.1109/WCRE.2008.45
   Leach R., 2000, Introduction to software engineering
   Li CL, 2016, SIGIR'16: PROCEEDINGS OF THE 39TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P165, DOI 10.1145/2911451.2911499
   Lukins SK, 2010, INFORM SOFTWARE TECH, V52, P972, DOI 10.1016/j.infsof.2010.04.002
   MacLeod L, 2017, EMPIR SOFTW ENG, V22, P1478, DOI 10.1007/s10664-017-9501-9
   MacLeod L, 2015, INT C PROGRAM COMPRE, P104, DOI 10.1109/ICPC.2015.19
   Marcus A, 2004, 11TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P214, DOI 10.1109/WCRE.2004.10
   McAuliffe J. D., 2008, ADV NEURAL INFORM PR, P121, DOI DOI 10.1109/MWSCAS.2011.6026348
   Mohorovicic S., 2012, 2012 35th International Convention on Information and Communication Technology, Electronics and Microelectronics, P1293
   Moslehi P, 2020, ADOPTION CROWD BASED
   Moslehi P, 2018, IEEE WORK CONF MIN S, P192, DOI 10.1145/3196398.3196439
   Moslehi P, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P259, DOI 10.1109/MSR.2016.034
   Nasehi SM, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P25, DOI 10.1109/ICSM.2012.6405249
   Nixon MarkS., 2012, Feature Extraction Image Processing for Computer Vision, VThird, P217, DOI DOI 10.1016/B978-0-12-396549-3.00005-7
   Ott J, 2018, IEEE WORK CONF MIN S, P376, DOI 10.1145/3196398.3196402
   Parra E, 2018, INT C PROGRAM COMPRE, P222, DOI 10.1145/3196321.3196351
   Pedrosa G, 2016, PROCEEDINGS OF 2016 5TH BRAZILIAN CONFERENCE ON INTELLIGENT SYSTEMS (BRACIS 2016), P277, DOI [10.1109/BRACIS.2016.48, 10.1109/BRACIS.2016.058]
   Pham R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P112, DOI 10.1109/ICSE.2013.6606557
   Poché E, 2017, INT C PROGRAM COMPRE, P196, DOI 10.1109/ICPC.2017.26
   Ponzanelli Luca, 2019, IEEE Transactions on Software Engineering, V45, P464, DOI 10.1109/TSE.2017.2779479
   Ponzanelli L, 2016, PROC INT CONF SOFTW, P261, DOI 10.1145/2884781.2884824
   Ramage D., 2009, Proceedings of the 2009 Conference on Empirical Methods in Natural Language Processing: Volume 1-Volume 1, EMNLP'09, P248, DOI 10.3115/1699510.1699543
   Sanderson M, 2010, NAT LANG ENG, V16, P100, DOI 10.1017/S1351324909005129
   Storey Margaret-Anne, 2012, Crowd Documentation: Exploring the Coverage and the Dynamics of API Discussions on Stack Overflow, V11
   Storey Margaret-Anne, 2014, FUT SOFTW ENG P, P100, DOI 10.1145/2593882.2593887
   Subramanian S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P643, DOI 10.1145/2568225.2568313
   Thomas S.W., 2012, MINING UNSTRUCTURED
   Thomas SW, 2010, IEEE INT WORK C SO, P55, DOI 10.1109/SCAM.2010.13
   Turk D., 2014, 3 INT C EXTREME PROG, P43
   van der Spek P, 2008, CSMR 2008: 12TH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, P253
   Wallach H. M., 2006, P 23 INT C MACH LEAR, V23, P977, DOI DOI 10.1145/1143844.1143967
   Wang XR, 2007, IEEE DATA MINING, P697, DOI 10.1109/ICDM.2007.86
   Wells J, 2012, IEEE T EDUC, V55, P453, DOI 10.1109/TE.2012.2187451
   Yadid S, 2016, ONWARD!'16: PROCEEDINGS OF THE 2016 ACM INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE, P98, DOI 10.1145/2986012.2986021
NR 74
TC 2
Z9 2
U1 2
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 4873
EP 4926
DI 10.1007/s10664-020-09874-z
EA SEP 2020
PG 54
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4BB
UT WOS:000571097200001
DA 2024-07-18
ER

PT J
AU Kondo, M
   Oliva, GA
   Jiang, ZM
   Hassan, AE
   Mizuno, O
AF Kondo, Masanari
   Oliva, Gustavo A.
   Jiang, Zhen Ming (Jack)
   Hassan, Ahmed E.
   Mizuno, Osamu
TI Code cloning in smart contracts: a case study on verified contracts from
   the Ethereum blockchain platform
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Smart contracts; Code cloning; Ethereum; Blockchain
AB Ethereum is a blockchain platform that hosts and executes smart contracts. Smart contracts have been used to implement cryptocurrencies and crowdfunding initiatives (ICOs). A major concern in Ethereum is the security of smart contracts. Different from traditional software development, smart contracts are immutable once deployed. Hence, vulnerabilities and bugs in smart contracts can lead to catastrophic financial loses. In order to avoid taking the risk of writing buggy code, smart contract developers are encouraged to reuse pieces of code from reputable sources (e.g., OpenZeppelin). In this paper, we study code cloning in Ethereum. Our goal is to quantify the amount of clones in Ethereum (RQ1), understand key characteristics of clone clusters (RQ2), and determine whether smart contracts contain pieces of code that are identical to those published by OpenZeppelin (RQ3). We applied Deckard, a tree-based clone detector, to all Ethereum contracts for which the source code was available. We observe that developers frequently clone contracts. In particular, 79.2% of the studied contracts are clones and we note an upward trend in the number of cloned contracts per quarter. With regards to the characteristics of clone clusters, we observe that: (i) 9 out of the top-10 largest clone clusters are token managers, (ii) most of the activity of a cluster tends to be concentrated on a few contracts, and (iii) contracts in a cluster to be created by several authors. Finally, we note that the studied contracts have different ratios of code blocks that are identical to those provided by the OpenZeppelin project. Due to the immutability of smart contracts, as well as the impossibility of reverting transactions once they are deemed final, we conclude that the aforementioned findings yield implications to the security, development, and usage of smart contracts.
C1 [Kondo, Masanari; Mizuno, Osamu] Kyoto Inst Technol, Dept Informat Sci, Software Engn Lab, Kyoto, Japan.
   [Oliva, Gustavo A.; Hassan, Ahmed E.] Queens Univ, Sch Comp, Software Anal & Intelligence Lab SAIL, Kingston, ON, Canada.
   [Jiang, Zhen Ming (Jack)] York Univ, Dept Elect Engn & Comp Sci, Toronto, ON, Canada.
C3 Kyoto Institute of Technology; Queens University - Canada; York
   University - Canada
RP Kondo, M (corresponding author), Kyoto Inst Technol, Dept Informat Sci, Software Engn Lab, Kyoto, Japan.
EM m-kondo@se.is.kit.ac.jp; gustavo@cs.queensu.ca; zmjiang@cse.yorku.ca;
   ahmed@cs.queensu.ca; o-mizuno@kit.ac.jp
RI KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Mizuno,
   Osamu/0000-0001-8061-7657
FU Natural Sciences and Engineering Research Council (NSERC); JSPS KAKENHI
   Japan [JP16K12415, JP19J23477]
FX This research has been supported by the Natural Sciences and Engineering
   Research Council (NSERC), as well as JSPS KAKENHI Japan (Grant Numbers:
   JP16K12415 and JP19J23477). This study leveraged the computational
   resources provided by the Microsoft Azure for Research program.
CR [Anonymous], 2017, N.Y. TIMES
   [Anonymous], 2018, 25 ANN NETW DISTR SY
   [Anonymous], 2007, SURVEY SOFTWARE CLON
   [Anonymous], ITS NOT JUST PONZI I
   [Anonymous], 2017, ARXIV170303779
   [Anonymous], INT J COMPUTER APPL
   BAKER BS, 1992, COMPUTING SCIENCE AND STATISTICS : VOL 24, P49
   Bellon S, 2007, IEEE T SOFTWARE ENG, V33, P577, DOI 10.1109/TSE.2007.70725
   Bettenburg N, 2012, SCI COMPUT PROGRAM, V77, P760, DOI 10.1016/j.scico.2010.11.010
   Bojanowski P., 2017, Transactions of the Association for Computational Linguistics, V5, P135, DOI DOI 10.1162/TACLA00051
   Ceriani L, 2012, J ECON INEQUAL, V10, P421, DOI 10.1007/s10888-011-9188-x
   Chen WL, 2018, WEB CONFERENCE 2018: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW2018), P1409, DOI 10.1145/3178876.3186046
   Cordy JR, 2011, CONF PROC INT SYMP C, P219, DOI 10.1109/ICPC.2011.26
   di Angelo M, 2019, 2019 IEEE INTERNATIONAL CONFERENCE ON DECENTRALIZED APPLICATIONS AND INFRASTRUCTURES (DAPPCON), P69, DOI 10.1109/DAPPCON.2019.00018
   Dijkstra Edsger W., 1982, On the Role of Scientific Thought, P60, DOI [DOI 10.1007/978-1-4612-5695-3, 10.1007/978-1-4612-5695-3_12, 10.1007/978-1-4612-5695-312, DOI 10.1007/978-1-4612-5695-312]
   Economist T., 2018, EC T
   Fröwis M, 2017, LECT NOTES COMPUT SC, V10436, P357, DOI 10.1007/978-3-319-67816-0_20
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Göde N, 2009, EUR CON SFTWR MTNCE, P219, DOI 10.1109/CSMR.2009.20
   Grishchenko I, 2018, LECT NOTES COMPUT SC, V10981, P51, DOI 10.1007/978-3-319-96145-3_4
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Horwitz J, 2018, CRYPTOKITTIES CLONES
   Jakobsson M, 1999, INT FED INFO PROC, V23, P258
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Jiang Lingxiao, 2007, P THE 6 JOINT M EURO, P55, DOI DOI 10.1145/1287624.1287634
   Jiang P, 2019, AM J MED SCI, V358, P19, DOI 10.1016/j.amjms.2019.04.008
   Juergens E, 2009, PROC INT CONF SOFTW, P485, DOI 10.1109/ICSE.2009.5070547
   Kamiya T, 2002, IEEE T SOFTWARE ENG, V28, P654, DOI 10.1109/TSE.2002.1019480
   Kapser CJ, 2008, EMPIR SOFTW ENG, V13, P645, DOI 10.1007/s10664-008-9076-6
   Kim Miryung, 2005, ESEC/FSE- 13), P187, DOI [10.1145/1081706.1081737, DOI 10.1145/1081706.1081737]
   Koschke R, 2008, IDENTIFYING REMOVING
   Liu H, 2019, INT C PROGRAM COMPRE, P105, DOI 10.1109/ICPC.2019.00024
   Liu H, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P900, DOI 10.1145/3236024.3264596
   Lopes CV, 2017, P ACM PROGRAM LANG, V1, DOI 10.1145/3133908
   Luu L, 2016, CCS'16: PROCEEDINGS OF THE 2016 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P254, DOI 10.1145/2976749.2978309
   Mockus Audris, 2007, International Workshop on Emerging Trends in FLOSS Research and Development, P7, DOI [10.1109/FLOSS.2007.10, DOI 10.1109/FLOSS.2007.10]
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Roos P, 2015, P 37 INT C SOFTW ENG, V2, P757
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Sajnani H, 2016, PROC INT CONF SOFTW, P1157, DOI 10.1145/2884781.2884877
   Skvorc B, 2018, 15 ALTERNATIVES CRYP
   Swan Melanie, 2015, BLOCKCHAIN BLUEPRINT
   Szabo N., 1994, SMART CONTRACTS
   Tikhomirov S, 2018, 2018 IEEE/ACM 1ST INTERNATIONAL WORKSHOP ON EMERGING TRENDS IN SOFTWARE ENGINEERING FOR BLOCKCHAIN (WETSEB), P9, DOI 10.1145/3194113.3194115
   UKKONEN E, 1992, THEOR COMPUT SCI, V92, P191, DOI 10.1016/0304-3975(92)90143-4
   Wahler V, 2004, FOURTH IEEE INTERNATIONAL WORKSHOP ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P128
   Weaver W., 1963, MATH THEORY COMMUNIC
   Wood Gavin., 2017, Ethereum Project Yellow Paper 151
   Zheng PL, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P134, DOI 10.1145/3183519.3183546
NR 50
TC 33
Z9 37
U1 1
U2 28
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 4617
EP 4675
DI 10.1007/s10664-020-09852-5
EA SEP 2020
PG 59
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA OI4BB
UT WOS:000567738100003
DA 2024-07-18
ER

PT J
AU Rahman, A
   Farhana, E
   Williams, L
AF Rahman, Akond
   Farhana, Effat
   Williams, Laurie
TI <i>The 'as code' activities</i>: development anti-patterns for
   infrastructure as code
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Anti-pattern; Bugs; Configuration script; Continuous deployment; Defect;
   Devops; Infrastructure as code; Practice; Puppet; Quality
ID SOFTWARE; AGREEMENT
AB Context: The 'as code' suffix in infrastructure as code (IaC) refers to applying software engineering activities, such as version control, to maintain IaC scripts. Without the application of these activities, defects that can have serious consequences may be introduced in IaC scripts. A systematic investigation of the development anti-patterns for IaC scripts can guide practitioners in identifying activities to avoid defects in IaC scripts. Development anti-patterns are recurring development activities that relate with defective IaC scripts. Goal: The goal of this paper is to help practitioners improve the quality of infrastructure as code (IaC) scripts by identifying development activities that relate with defective IaC scripts. Methodology: We identify development anti-patterns by adopting a mixed-methods approach, where we apply quantitative analysis with 2,138 open source IaC scripts and conduct a survey with 51 practitioners. Findings: We observe five development activities to be related with defective IaC scripts from our quantitative analysis. We identify five development anti-patterns namely, 'boss is not around', 'many cooks spoil', 'minors are spoiler', 'silos', and 'unfocused contribution'. Conclusion: Our identified development anti-patterns suggest the importance of 'as code' activities in IaC because these activities are related to quality of IaC scripts.
C1 [Rahman, Akond] Tennessee Technol Univ, Dept Comp Sci, Cookeville, TN 38505 USA.
   [Farhana, Effat; Williams, Laurie] North Carolina State Univ, Dept Comp Sci, Raleigh, NC USA.
C3 Tennessee Technological University; North Carolina State University
RP Rahman, A (corresponding author), Tennessee Technol Univ, Dept Comp Sci, Cookeville, TN 38505 USA.
EM arahman@tntech.edu; efarhan@ncsu.edu; lawilli3@ncsu.edu
RI Rahman, Akond/ACX-4478-2022
OI Rahman, Akond/0000-0002-5056-757X
FU NSA Science of Security Lablet at the North Carolina State University
   [H98230-17-D-0080]
FX The NSA Science of Security Lablet (award H98230-17-D-0080) at the North
   Carolina State University supported this research study. We thank the
   Realsearch research group members for their useful feedback. We also
   thank the practitioners who answered our questions.
CR Adams B, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P78, DOI 10.1109/SANER.2016.108
   Alali A, 2008, INT C PROGRAM COMPRE, P182, DOI 10.1109/ICPC.2008.24
   Anderson Stuart, 2008, Health Res Policy Syst, V6, P7, DOI 10.1186/1478-4505-6-7
   [Anonymous], 2019, Tech. Rep
   [Anonymous], 2010, 1152009 IEEE, P1, DOI [DOI 10.1109/IEEESTD.2010.5439063, 10.1109/IEEESTD.2010.5439063]
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Arksey H., 2005, INT J SOC RES METHOD, V8, P19, DOI [10.1080/1364557032000119616, DOI 10.1080/1364557032000119616]
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Blewitt ME, 2008, NAT GENET, V40, P663, DOI 10.1038/ng.142
   Breiman L., 2001, Machine Learning, V45, P5, DOI 10.1023/A:1010933404324
   Bright J., 2017, Slalom's approach to breaking down silos between DevOps and Security Teams
   Brooks Frederick P., 1995, The mythical man-month
   Brown WH., 1998, AntiPatterns: refactoring software, architectures, and projects in crisis
   Businge J., 2017, Proceedings of the 13th International Conference on Predictive Models and Data Analytics in Software Engineering. PROMISE, P33, DOI DOI 10.1145/3127005.3127009
   Chen BY, 2017, PROC INT CONF SOFTW, P71, DOI 10.1109/ICSE.2017.15
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Commons W, 2017, INCIDENT DOCUMENTATI
   Cramer Duncan, 2004, The SAGE Dictionary of Statistics: A Practical Resource for Students in the Social Sciences, DOI [DOI 10.4135/9780857020123, 10.4135/9780857020123]
   Devanbu P, 2016, PROC INT CONF SOFTW, P108, DOI 10.1145/2884781.2884812
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Elberzhager F, 2012, EUROMICRO CONF PROC, P406, DOI 10.1109/SEAA.2012.30
   Freedman D., 2005, Statistical Models: Theory and Practice, DOI 10.1017/cbo9781139165495
   Fu W, 2016, INFORM SOFTWARE TECH, V76, P135, DOI 10.1016/j.infsof.2016.04.017
   Garousi V, 2018, J SYST SOFTWARE, V138, P52, DOI 10.1016/j.jss.2017.12.013
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Hersher R, 2017, INCIDENT DOCUMENTATI
   Hove S. E., 2005, Experiences from conducting semi-structured interviews in empirical software engineering research. Paper presented at: IEEE International Software Metrics Symposium (METRICS), P10, DOI DOI 10.1109/METRICS.2005.24
   Huberty C.J., 2006, Applied MANOVA and discriminant analysis, V498
   Islam SMM, 2019, IEEE RADIO WIRELESS, P164, DOI 10.1109/rws.2019.8714272
   Jiang YJ, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P45, DOI 10.1109/MSR.2015.12
   Kitchenham BA, 2008, Guide to advanced empirical software engineering, P63, DOI [DOI 10.1007/978-1-84800-044-5_3, 10.1007/ 978-1-84800-044-5_3]
   Labs P, 2018, PUPPET DOCUMENTATION
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   Leone M, 2016, TECH REP
   MacLeod L, 2018, IEEE SOFTWARE, V35, P34, DOI 10.1109/MS.2017.265100500
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Martin R. C., 2011, The Clean Coder: A Code of Conduct for Professional Programmers
   McCune J.T., 2011, Pro Puppet, V1st, P336, DOI DOI 10.1007/978-1-4302-3058-8
   Meneely A, 2012, ACM T SOFTW ENG METH, V21, DOI 10.1145/2377656.2377661
   Meneely A, 2009, CCS'09: PROCEEDINGS OF THE 16TH ACM CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P453
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Morris K., 2016, Infrastructure as Code: Managing Servers in the Cloud
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Munn Z, 2018, BMC MED RES METHODOL, V18, DOI 10.1186/s12874-017-0468-4
   Oktaba P, 2015, KEEP YOUR COMMITS SM
   Ostrand TJ., 2004, Proceedings of the 2004 ACM SIGSOFT International Symposium on Software Testing and Analysis, ISSTA '04, V29, P86, DOI [DOI 10.1145/1013886.1007524, 10.1145/1013886.1007524]
   Pinzger Martin, 2008, P 16 ACM SIGSOFT INT, P2, DOI DOI 10.1145/1453101.1453105
   Rahman A, 2020, P 42 INT C SOFTW ENG
   Rahman A, 2019, INFORM SOFTWARE TECH, V112, P148, DOI 10.1016/j.infsof.2019.04.013
   Rahman A, 2018, PROCEEDINGS 2018 IEEE/ACM 4TH INTERNATIONAL WORKSHOP ON RAPID CONTINUOUS SOFTWARE ENGINEERING (RCOSE), P16, DOI 10.1145/3194760.3194769
   Rahman A, 2018, IEEE INT CONF SOFTW, P34, DOI 10.1109/ICST.2018.00014
   Rahman F, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P432, DOI 10.1109/ICSE.2013.6606589
   Rigby PC, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P541
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Shambaugh R, 2016, ACM SIGPLAN NOTICES, V51, P416, DOI [10.1145/2908080.2908083, 10.1145/2980983.2908083]
   Sharma T, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P189, DOI [10.1109/MSR.2016.028, 10.1145/2901739.2901761]
   Shihab E, 2011, SOFTWARE PRACT EXPER, V41, P1027, DOI 10.1002/spe.1053
   Smith E, 2013, 2013 6TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE), P89, DOI 10.1109/CHASE.2013.6614738
   Sullivan Gail M, 2012, J Grad Med Educ, V4, P279, DOI 10.4300/JGME-D-12-00156.1
   Tan P. N., 2005, Introduction to Data Mining
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   Tantithamthavorn C, 2016, PROC INT CONF SOFTW, P321, DOI 10.1145/2884781.2884857
   Tosun A, 2010, INFORM SOFTWARE TECH, V52, P1242, DOI 10.1016/j.infsof.2010.06.006
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1797
   Turhan B, 2009, EXPERT SYST APPL, V36, P9986, DOI 10.1016/j.eswa.2008.12.028
   Turnbull J., 2007, Pulling Strings with Puppet. Configuration Management Made Easy, V1st
   van der Bent E, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P164, DOI 10.1109/SANER.2018.8330206
   Van Wyk E, 2007, LECT NOTES COMPUT SC, V4609, P575
   Voelter M, 2013, DSL ENG DESIGNING IM
   Weinberg GeraldM., 1992, QUALITY SOFTWARE MAN, V1
   Weiss A, 2017, IEEE INT CONF AUTOM, P625, DOI 10.1109/ASE.2017.8115673
NR 75
TC 18
Z9 19
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3430
EP 3467
DI 10.1007/s10664-020-09841-8
EA AUG 2020
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000560297100002
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Pickerill, P
   Jungen, HJ
   Ochodek, M
   Mackowiak, M
   Staron, M
AF Pickerill, Peter
   Jungen, Heiko Joshua
   Ochodek, Miroslaw
   Mackowiak, Michal
   Staron, Miroslaw
TI PHANTOM: Curating GitHub for engineered software projects using
   time-series clustering
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Mining software repositories; GitHub; Data curation; Curation tools
AB Context Within the field of Mining Software Repositories, there are numerous methods employed to filter datasets in order to avoid analysing low-quality projects. Unfortunately, the existing filtering methods have not kept up with the growth of existing data sources, such as GitHub, and researchers often rely on quick and dirty techniques to curate datasets. Objective The objective of this study is to develop a method capable of filtering large quantities of software projects in a resource-efficient way. Method This study follows the Design Science Research (DSR) methodology. The proposed method, PHANTOM, extracts five measures from Git logs. Each measure is transformed into a time-series, which is represented as a feature vector for clustering using the k-means algorithm. Results Using the ground truth from a previous study, PHANTOM was shown to be able to rediscover the ground truth on the training dataset, and was able to identify "engineered" projects with up to 0.87 Precision and 0.94 Recall on the validation dataset. PHANTOM downloaded and processed the metadata of 1,786,601 GitHub repositories in 21.5 days using a single personal computer, which is over 33% faster than the previous study which used a computer cluster of 200 nodes. The possibility of applying the method outside of the open-source community was investigated by curating 100 repositories owned by two companies. Conclusions It is possible to use an unsupervised approach to identify engineered projects. PHANTOM was shown to be competitive compared to the existing supervised approaches while reducing the hardware requirements by two orders of magnitude.
C1 [Pickerill, Peter; Jungen, Heiko Joshua] Chalmers Univ Technol, Dept Comp Sci & Engn, Gothenburg, Sweden.
   [Ochodek, Miroslaw; Mackowiak, Michal] Poznan Univ Tech, Poznan, Poland.
   [Staron, Miroslaw] Univ Gothenburg, Chalmers Univ Technol, Gothenburg, Sweden.
C3 Chalmers University of Technology; Poznan University of Technology;
   University of Gothenburg; Chalmers University of Technology
RP Ochodek, M (corresponding author), Poznan Univ Tech, Poznan, Poland.
EM peterpi@student.chalmers.se; jungen@student.chalmers.se;
   miroslaw.ochodek@cs.put.poznan.pl; michal.mackowiak@cs.put.poznan.pl;
   Miroslaw.Staron@cse.gu.se
CR [Anonymous], 2014, DESIGN SCI METHODOLO, DOI DOI 10.1145/1810295.1810446
   Casalnuovo C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P755, DOI 10.1109/ICSE.2015.88
   Cito J, 2017, IEEE WORK CONF MIN S, P323, DOI 10.1109/MSR.2017.67
   Cosentino V, 2017, IEEE ACCESS, V5, P7173, DOI 10.1109/ACCESS.2017.2682323
   Deng HT, 2013, INFORM SCIENCES, V239, P142, DOI 10.1016/j.ins.2013.02.030
   Dyer R, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P422, DOI 10.1109/ICSE.2013.6606588
   Esling P, 2012, ACM COMPUT SURV, V45, DOI 10.1145/2379776.2379788
   Eyolfson J, 2014, EMPIR SOFTW ENG, V19, P1009, DOI 10.1007/s10664-013-9245-0
   Feldt R, 2013, P 39 EUR C SER SOFTW, DOI [10.1109/SEAA.2013.61, DOI 10.1109/SEAA.2013.61]
   Fulcher BD, 2014, IEEE T KNOWL DATA EN, V26, P3026, DOI 10.1109/TKDE.2014.2316504
   Gabel M, 2010, P ACM SIGSOFT S FDN, P147, DOI DOI 10.1145/1882291.1882315
   Gharehyazie M, 2019, EMPIR SOFTW ENG, V24, P1538, DOI 10.1007/s10664-018-9648-z
   GitHub, 2018, GITH TERMS SERV US D
   Gonzalez D, 2017, IEEE WORK CONF MIN S, P391, DOI 10.1109/MSR.2017.8
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Guo C, 2008, TIME SERIES CLUSTERI, P1
   Hebig R, 2016, 19TH ACM/IEEE INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS'16), P173, DOI 10.1145/2976767.2976778
   Hevner AR, 2004, MIS QUART, V28, P75, DOI 10.2307/25148625
   Kalliamvakou E, 2016, EMPIR SOFTW ENG, V21, P2035, DOI 10.1007/s10664-015-9393-5
   Kalliamvakou E, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P574, DOI 10.1109/ICSE.2015.74
   Kolassa C, 2013, P 9 INT S OP COLL, P18
   Macho C, 2017, IEEE WORK CONF MIN S, P368, DOI 10.1109/MSR.2017.65
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Noten J, 2017, IEEE WORK CONF MIN S, P531, DOI 10.1109/MSR.2017.52
   Nunez-Varela AS, 2017, J SYST SOFTWARE, V128, P164, DOI 10.1016/j.jss.2017.03.044
   Padhye R., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P332, DOI 10.1145/2597073.2597113
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Ratanamahatana C., 2004, 3 WORKSH MIN TEMP SE, DOI DOI 10.1097/01.CCM.0000279204.24648.44
   Rausch T, 2017, IEEE WORK CONF MIN S, P345, DOI 10.1109/MSR.2017.54
   Ray B, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P155, DOI 10.1145/2635868.2635922
   Robles G, 2017, IEEE WORK CONF MIN S, P519, DOI 10.1109/MSR.2017.48
   Russell PH, 2018, PLOS ONE, V13, DOI 10.1371/journal.pone.0205898
   Sadat M, 2017, IEEE WORK CONF MIN S, P527, DOI 10.1109/MSR.2017.50
   Sajnani H, 2014, PROC IEEE INT CONF S, P231, DOI 10.1109/ICSME.2014.45
   Shimagaki J, 2016, PROC IEEE INT CONF S, P301, DOI 10.1109/ICSME.2016.83
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Staron M, 2013, P 39 EUR C SER SOFTW, DOI [10.1109/SEAA.2013.9, DOI 10.1109/SEAA.2013.9]
   Staron M, 2013, 2013 JOINT CONFERENCE OF THE 23RD INTERNATIONAL WORKSHOP ON SOFTWARE MEASUREMENT AND THE 2013 EIGHTH INTERNATIONAL CONFERENCE ON SOFTWARE PROCESS AND PRODUCT MEASUREMENT (IWSM-MENSURA), P191, DOI 10.1109/IWSM-Mensura.2013.35
   Vasilescu B, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P805, DOI 10.1145/2786805.2786850
   Wang XZ, 2006, DATA MIN KNOWL DISC, V13, P335, DOI 10.1007/s10618-005-0039-x
   Yu Y, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P367, DOI 10.1109/MSR.2015.42
   Zhao YY, 2017, IEEE INT CONF AUTOM, P60, DOI 10.1109/ASE.2017.8115619
   Zhu CG, 2017, IEEE WORK CONF MIN S, P523, DOI 10.1109/MSR.2017.49
NR 43
TC 15
Z9 16
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2020
VL 25
IS 4
BP 2897
EP 2929
DI 10.1007/s10664-020-09825-8
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA MD8CQ
UT WOS:000544196800014
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Foucault, M
   Blanc, X
   Falleri, JR
   Storey, MA
AF Foucault, Matthieu
   Blanc, Xavier
   Falleri, Jean-Remy
   Storey, Margaret-Anne
TI Fostering good coding practices through individual feedback and
   gamification: an industrial case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Industrial study; Software maintenance; Qualitative research; Developers
   motivation
ID COVERAGE
AB Code quality is a constant challenge faced by today's software industry. To ensure that developers follow good coding practices, a variety of program analysis and test coverage tools are routinely deployed. However, these tools often fail to engage and change the practices of developers when applied to legacy systems as they output a huge number of warnings, quickly overwhelming the developers. In this article, we explore how individual feedback and gamification can motivate developers to pay more attention to good coding practices. To that extent, we implemented these two concepts in a tool that we deployed at two large companies where we conducted a case study. We find out that individual feedback is essential for motivating developers. We also find that gamification can be useful but has to be used with caution as it can frustrate some developers. Finally, we reflect on some lessons learned during our case studies, and conclude that the promising approach of our tool needs to be supported by longitudinal studies as well as comparative studies.
C1 [Foucault, Matthieu; Storey, Margaret-Anne] Univ Victoria, Victoria, BC, Canada.
   [Blanc, Xavier; Falleri, Jean-Remy] Univ Bordeaux, UMR 5800, LaBRI, F-33400 Talence, France.
C3 University of Victoria; Universite de Bordeaux; Centre National de la
   Recherche Scientifique (CNRS)
RP Foucault, M (corresponding author), Univ Victoria, Victoria, BC, Canada.
EM mfoucault@uvic.ca; xblanc@labri.fr; falleri@labri.fr; mstorey@uvic.ca
OI Falleri, Jean-Remy/0000-0002-8284-7218
CR Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   [Anonymous], BAD SMELLS CODE REFA
   Arai S, 2014, INT WORKSH EMPIR ENG, P37, DOI 10.1109/IWESEP.2014.17
   Ayewah N, 2008, IEEE SOFTWARE, V25, P22, DOI 10.1109/MS.2008.130
   Azevedo R, 1995, J EDUC COMPUT RES, V13, P111, DOI 10.2190/9LMD-3U28-3A0G-FTQT
   Batik T, 2016, S VIS LANG HUM CEN C, P134, DOI 10.1109/VLHCC.2016.7739676
   Beecham S, 2008, INFORM SOFTWARE TECH, V50, P860, DOI 10.1016/j.infsof.2007.09.004
   Beller M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P470, DOI 10.1109/SANER.2016.105
   BENNETT K, 1995, IEEE SOFTWARE, V12, P19, DOI 10.1109/52.363157
   Christakis M, 2016, IEEE INT CONF AUTOM, P332, DOI 10.1145/2970276.2970347
   Corbett AT, 1996, 9666 ARI
   Curtis B, 2012, IEEE SOFTWARE, V29, P34, DOI 10.1109/MS.2012.156
   Dal Sasso T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P261, DOI 10.1109/SANER.2017.7884627
   Deci EL, 1999, PSYCHOL BULL, V125, P627, DOI 10.1037/0033-2909.125.6.627
   Deterding S., 2011, P 15 INT AC MINDTREK, P9, DOI [10.1145/2181037.2181040, DOI 10.1145/2181037.2181040]
   Dorling A, 2012, COMM COM INF SC, V290, P295
   Fjola Tomasdottir K, 2017, 32 IEEE ACM INT C AU
   Frana A.C.C., 2011, P C EV ASS SOFTW ENG, P154, DOI [10.1049/ic.2011.0019, DOI 10.1049/IC.2011.0019]
   Gneezy U, 2003, Q J ECON, V118, P1049, DOI 10.1162/00335530360698496
   Hall T, 2008, IEEE SOFTWARE, V25, P92, DOI 10.1109/MS.2008.105
   Inozemtseva L, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P435, DOI 10.1145/2568225.2568271
   Johnson B, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P672, DOI 10.1109/ICSE.2013.6606613
   Letouzey JL, 2012, IEEE SOFTWARE, V29, P44, DOI 10.1109/MS.2012.129
   MILLER JC, 1963, COMMUN ACM, V6, P58, DOI 10.1145/366246.366248
   Mockus A, 2009, INT SYMP EMP SOFTWAR, P292
   NADLER DA, 1979, ORGAN BEHAV HUM PERF, V23, P309, DOI 10.1016/0030-5073(79)90001-1
   Pedreira O, 2015, INFORM SOFTWARE TECH, V57, P157, DOI 10.1016/j.infsof.2014.08.007
   Prause CR, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P649, DOI 10.1145/2786805.2786806
   Rojas JM, 2017, PROC INT CONF SOFTW, P677, DOI 10.1109/ICSE.2017.68
   SCHOOLER LJ, 1990, PROGRAM OF THE TWELFTH ANNUAL CONFERENCE OF THE COGNITIVE SCIENCE SOCIETY, P702
   Seaborn K, 2015, INT J HUM-COMPUT ST, V74, P14, DOI 10.1016/j.ijhcs.2014.09.006
   Sedlmair M, 2012, IEEE T VIS COMPUT GR, V18, P2431, DOI 10.1109/TVCG.2012.213
   Singer L., 2012, Proceedings 2012 2nd International Workshop on Games and Software Engineering: Realizing User Engagement with Game Engineering Techniques (GAS 2012), P5, DOI 10.1109/GAS.2012.6225927
   Snipes W, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P105, DOI 10.1145/2591062.2591171
   Spencer D., 2009, CARD SORTING DESIGNI
   Tikir M. M., 2002, Software Engineering Notes, V27, P86, DOI 10.1145/566171.566186
   Vasilescu B, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P646, DOI 10.1145/2591062.2591091
   Williams TW, 2001, P REL MAINT S, P420, DOI 10.1109/RAMS.2001.902502
NR 38
TC 8
Z9 8
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3731
EP 3754
DI 10.1007/s10664-019-09719-4
PG 24
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA JT6XW
UT WOS:000501131100016
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Jan, S
   Panichella, A
   Arcuri, A
   Briand, L
AF Jan, Sadeeq
   Panichella, Annibale
   Arcuri, Andrea
   Briand, Lionel
TI Search-based multi-vulnerability testing of XML injections in web
   applications
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Security testing; Code injection vulnerabilities; Search-based software
   engineering
ID TEST DATA GENERATION; ALGORITHM; SOAP
AB Modern web applications often interact with internal web services, which are not directly accessible to users. However, malicious user inputs can be used to exploit security vulnerabilities in web services through the application front-ends. Therefore, testing techniques have been proposed to reveal security flaws in the interactions with back-end web services, e.g., XML Injections (XMLi). Given a potentially malicious message between a web application and web services, search-based techniques have been used to find input data to mislead the web application into sending such a message, possibly compromising the target web service. However, state-of-the-art techniques focus on (search for) one single malicious message at a time. Since, in practice, there can be many different kinds of malicious messages, with only a few of them which can possibly be generated by a given front-end, searching for one single message at a time is ineffective and may not scale. To overcome these limitations, we propose a novel co-evolutionary algorithm (COMIX) that is tailored to our problem and uncover multiple vulnerabilities at the same time. Our experiments show that COMIX outperforms a single-target search approach for XMLi and other multi-target search algorithms originally defined for white-box unit testing.
C1 [Jan, Sadeeq; Panichella, Annibale; Briand, Lionel] Univ Luxembourg, SnT, Luxembourg, Luxembourg.
   [Jan, Sadeeq] Univ Engn & Technol, Dept Comp Sci & IT, Peshawar, Pakistan.
   [Panichella, Annibale] Delft Univ Technol, Software Engn Res Grp, Delft, Netherlands.
   [Arcuri, Andrea] Kristiania Univ Coll, Fac Technol, Oslo, Norway.
C3 University of Luxembourg; University of Engineering & Technology
   Peshawar; Delft University of Technology; Kristiania University College
RP Jan, S (corresponding author), Univ Luxembourg, SnT, Luxembourg, Luxembourg.; Jan, S (corresponding author), Univ Engn & Technol, Dept Comp Sci & IT, Peshawar, Pakistan.
EM jan@svv.lu; a.panichella@tudelft.nl; andrea.arcuri@kristiania.no;
   briand@svv.lu
RI Panichella, Annibale/AAJ-8443-2020
OI Panichella, Annibale/0000-0002-7395-3588
CR Afzal W, 2009, INFORM SOFTWARE TECH, V51, P957, DOI 10.1016/j.infsof.2008.12.005
   ALLEN FE, 1976, COMMUN ACM, V19, P137, DOI 10.1145/360018.360025
   Alshraideh M, 2006, SOFTW TEST VERIF REL, V16, P175, DOI 10.1002/stvr.354
   [Anonymous], 2016, TESTING XML INJECTIO
   [Anonymous], 2000, ARCHITECTURAL STYLES
   [Anonymous], 2016, The Magical Code Injection Rainbow!
   [Anonymous], 2016, WSFUZZER TOOL
   [Anonymous], 2005, USENIX SEC S
   [Anonymous], 2004, Wiley InterScience electronic collection.
   [Anonymous], 2006, 2006 IEEE S SEC PRIV
   Appelt D., 2015, 2015 IEEE 8 INT C SO, P1, DOI DOI 10.1109/ICST.2015.7102581
   Appelt D, 2014, 2014 INT S SOFTW TES
   Arcuri A, 2013, EMPIR SOFTW ENG, V18, P594, DOI 10.1007/s10664-013-9249-9
   Arcuri A, 2012, IEEE T SOFTWARE ENG, V38, P258, DOI 10.1109/TSE.2011.121
   Arcuri Andrea, 2017, INT S SEARCH BAS SOF
   Avancini A., 2010, Proceedings of the 2010 ICSE Workshop on Software Engineering for Secure Systems. Cape Town, South Africa, P65, DOI DOI 10.1145/1809100.1809110
   Avancini A, 2011, IEEE INT WORK C SO, P85, DOI 10.1109/SCAM.2011.7
   Bali KK, 2015, LECT NOTES COMPUT SC, V9491, P127, DOI 10.1007/978-3-319-26555-1_15
   Bau J, 2010, P IEEE S SECUR PRIV, P332, DOI 10.1109/SP.2010.27
   Briand L. C., 2006, Genetic Programming and Evolvable Machines, V7, P145, DOI 10.1007/s10710-006-9003-9
   Chen JF, 2014, SERV ORIENTED COMPUT, V8, P1, DOI 10.1007/s11761-013-0139-1
   Chen Q, 2014, TECH REP
   Chess B., 2007, Secure programming with static analysis
   Chunlei W., 2014, INT C INFORM COMMUNI, DOI [10.1049/cp.2014.0589, DOI 10.1049/CP.2014.0589]
   Clause J, 2009, ISSTA 2009: INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P249
   Curbera F, 2002, IEEE INTERNET COMPUT, V6, P86, DOI 10.1109/4236.991449
   Davis P. J., 2007, METHODS NUMERICAL IN
   De Jong K.A., 1975, ANAL BEHAV CLASS GEN
   Deb Kalyanmoy, 2014, International Journal of Artificial Intelligence and Soft Computing, V4, P1, DOI 10.1504/IJAISC.2014.059280
   Deb K, 2002, IEEE T EVOLUT COMPUT, V6, P182, DOI 10.1109/4235.996017
   Del Grosso C, 2008, COMPUT OPER RES, V35, P3125, DOI 10.1016/j.cor.2007.01.013
   Felderer M, 2016, ADV COMPUT, V101, P1, DOI 10.1016/bs.adcom.2015.11.003
   Fraser G, 2014, ACM T SOFTW ENG METH, V24, DOI 10.1145/2685612
   Gallagher T, 2008, US Patent, Patent No. [7,343,626, 7343626]
   García S, 2009, J HEURISTICS, V15, P617, DOI 10.1007/s10732-008-9080-4
   Goh CK, 2009, IEEE T EVOLUT COMPUT, V13, P103, DOI 10.1109/TEVC.2008.920671
   GREFENSTETTE JJ, 1986, IEEE T SYST MAN CYB, V16, P122, DOI 10.1109/TSMC.1986.289288
   Halfond WGJ, 2008, IEEE T SOFTWARE ENG, V34, P65, DOI 10.1109/TSE.2007.70748
   Halfond William G. J., 2006, P 14 ACM SIGSOFT INT, P175, DOI [10.1145/1181775.1181797, DOI 10.1145/1181775.1181797]
   Harman M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P342, DOI 10.1109/FOSE.2007.29
   Harman M, 2010, IEEE T SOFTWARE ENG, V36, P226, DOI 10.1109/TSE.2009.71
   HOLM S, 1979, SCAND J STAT, V6, P65
   Huang XG, 2004, CHINESE J ELECTRON, V13, P40
   Huang YW, 2005, COMPUT NETW, V48, P739, DOI 10.1016/j.comnet.2005.01.003
   Jan S, 2016, P 2016 INT S SOFTW T
   Jan S, 2019, IEEE T SOFTWARE ENG, V45, P335, DOI 10.1109/TSE.2017.2778711
   Jan S, 2015, 2015 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE SECURITY AND RELIABILITY (QRS 2015), P233, DOI 10.1109/QRS.2015.42
   Jan Sadeeq, 2017, P 10 IEEE INT C SOFT
   Jansen T., 2002, Parallel Problem Solving from Nature - PPSN VII. 7th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2439), P33
   Jovanovic N, 2006, P IEEE S SECUR PRIV, P258, DOI 10.1109/SP.2006.29
   Keerativuttitumrong N., 2002, Parallel Problem Solving from Nature - PPSN VII. 7th International Conference. Proceedings (Lecture Notes in Computer Science Vol.2439), P288
   Kiezun A, 2009, PROC INT CONF SOFTW, P199, DOI 10.1109/ICSE.2009.5070521
   Kosuga Y, 2007, TWENTY-THIRD ANNUAL COMPUTER SECURITY APPLICATIONS CONFERENCE, PROCEEDINGS, P107, DOI 10.1109/ACSAC.2007.20
   Liu H, 2008, J SYST SOFTWARE, V81, P222, DOI 10.1016/j.jss.2007.05.007
   Mainka Christian, 2012, 2012 IEEE Eighth World Congress on Services, P163, DOI 10.1109/SERVICES.2012.7
   McMinn P, 2004, SOFTW TEST VERIF REL, V14, P105, DOI 10.1002/stvr.294
   Mei JJ, 2009, PROCEEDINGS OF THE 2009 SIXTH INTERNATIONAL CONFERENCE ON INFORMATION TECHNOLOGY: NEW GENERATIONS, VOLS 1-3, P1411, DOI 10.1109/ITNG.2009.34
   Newman S., 2015, BUILDING MICROSERVIC
   Panichella A., 2017, IEEE T SOFTWARE ENG, VPP, P1
   Panichella A, 2017, 2017 IEEE/ACM 10TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P32, DOI 10.1109/SBST.2017.7
   Panichella A, 2015, 2015 IEEE/ACM 8TH INTERNATIONAL SYMPOSIUM ON SOFTWARE AND SYSTEMS TRACEABILITY, P15, DOI 10.1109/SST.2015.10
   Potter MA, 1994, LECT NOTES COMPUT SC, V866, P249
   Rawat S., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P531, DOI 10.1109/ICSTW.2011.9
   Rosa TM, 2013, IEEE SECUR PRIV, V11, P46, DOI 10.1109/MSP.2012.83
   SCHAFFER JD, 1989, PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON GENETIC ALGORITHMS, P51
   Sharma S., 2017, MICROSERVICES BUILDI
   Smith J. E., 1996, Parallel Problem Solving from Nature - PPSN IV. International Conference on Evolutionary Computation - The 4th International Conference on Parallel Problem Solving from Nature. Proceedings, P441, DOI 10.1007/3-540-61723-X_1008
   STROM RE, 1986, IEEE T SOFTWARE ENG, V12, P157, DOI 10.1109/TSE.1986.6312929
   Tan KC, 2006, IEEE T EVOLUT COMPUT, V10, P527, DOI 10.1109/TEVC.2005.860762
   Thome J., 2014, P 7 INT WORKSH SEARC, P5, DOI DOI 10.1145/2593833.2593835
   Turpe S., 2011, 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation Workshops (ICSTW), P198, DOI 10.1109/ICSTW.2011.96
   Wassermann G, 2007, ACM SIGPLAN NOTICES, V42, P32, DOI 10.1145/1273442.1250739
   Williams J., 2013, TECH REP
NR 73
TC 10
Z9 10
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3696
EP 3729
DI 10.1007/s10664-019-09707-8
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JT6XW
UT WOS:000501131100014
PM 32684796
OA Green Published, hybrid, Green Submitted
DA 2024-07-18
ER

PT J
AU Liu, YP
   Wang, J
   Wei, LL
   Xu, C
   Cheung, SC
   Wu, TY
   Yan, J
   Zhang, J
AF Liu, Yepang
   Wang, Jue
   Wei, Lili
   Xu, Chang
   Cheung, Shing-Chi
   Wu, Tianyong
   Yan, Jun
   Zhang, Jian
TI DroidLeaks: a comprehensive database of resource leaks in Android apps
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Android apps; Resource leak; Mining code repository; Bug database; Fault
   pattern; Tool evaluation
ID JAVA
AB Resource leaks in Android apps are pervasive. They can cause serious performance degradation and system crashes. In recent years, many resource leak detection techniques have been proposed to help Android developers correctly manage system resources. Yet, there exist no common databases of real-world bugs for effectively comparing such techniques to understand their strengths and limitations. This paper describes our effort towards constructing such a bug database named DroidLeaks. To extract real resource leak bugs, we mined 124,215 code revisions of 34 popular open-source Android apps. After automated filtering and manual validation, we successfully found 292 fixed resource leak bugs, which cover a diverse set of resource classes, from 32 analyzed apps. To understand these bugs, we conducted an empirical study, which revealed the characteristics of resource leaks in Android apps and common patterns of resource management mistakes made by developers. To further demonstrate the usefulness of our work, we evaluated eight resource leak detectors from both academia and industry on DroidLeaks and performed a detailed analysis of their performance. We release DroidLeaks for public access to support future research.
C1 [Liu, Yepang] Southern Univ Sci & Technol, Shenzhen Key Lab Computat Intelligence, Dept Comp Sci & Engn, Shenzhen, Guangdong, Peoples R China.
   [Wang, Jue; Xu, Chang] Nanjing Univ, State Key Lab Novel Software Technol, Nanjing, Jiangsu, Peoples R China.
   [Wang, Jue; Xu, Chang] Nanjing Univ, Dept Comp Sci & Technol, Nanjing, Jiangsu, Peoples R China.
   [Wei, Lili; Cheung, Shing-Chi] Hong Kong Univ Sci & Technol, Dept Comp Sci & Engn, Hong Kong, Peoples R China.
   [Wu, Tianyong; Yan, Jun; Zhang, Jian] Chinese Acad Sci, Inst Software, State Key Lab Comp Sci, Beijing, Peoples R China.
   [Wu, Tianyong; Yan, Jun; Zhang, Jian] Univ Chinese Acad Sci, Beijing, Peoples R China.
C3 Southern University of Science & Technology; Nanjing University; Nanjing
   University; Hong Kong University of Science & Technology; Chinese
   Academy of Sciences; Institute of Software, CAS; Chinese Academy of
   Sciences; University of Chinese Academy of Sciences, CAS
RP Liu, YP (corresponding author), Southern Univ Sci & Technol, Shenzhen Key Lab Computat Intelligence, Dept Comp Sci & Engn, Shenzhen, Guangdong, Peoples R China.
EM liuyp1@sustech.edu.cn; juewang591@gmail.com; lweiae@cse.ust.hk;
   changxu@nju.edu.cn; scc@cse.ust.hk; wuty@ios.ac.cn; yanjun@ios.ac.cn;
   zj@ios.ac.cn
RI li, jing/KHY-5337-2024; 黎, 伟/GXM-4040-2022; wei, li/GSD-3630-2022; wei,
   li/ISB-3361-2023; Liu, Chenyu/KBQ-8899-2024; Liu, Yepang/G-6183-2018;
   Cheung, Shing Chi/U-5882-2018
OI Liu, Yepang/0000-0001-8147-8126; Cheung, Shing Chi/0000-0002-3508-7172;
   Wang, Jue/0000-0001-9866-2624
CR Amann S, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P464, DOI [10.1145/2901739.2903506, 10.1109/MSR.2016.055]
   [Anonymous], 2018, ANDROID API GUIDES
   [Anonymous], 2018, JAVA API SPECIFICATI
   [Anonymous], 2011, HOTPAR
   [Anonymous], 2018, ANDROID PROCESSES TH
   [Anonymous], 2018, ANDROID ANR ERRORS
   Arnold M, 2011, ACM T SOFTW ENG METH, V21, DOI 10.1145/2063239.2063241
   Arzt S, 2014, ACM SIGPLAN NOTICES, V49, P259, DOI [10.1145/2666356.2594299, 10.1145/2594291.2594299]
   Banerjee A, 2018, IEEE T SOFTWARE ENG, V44, P470, DOI 10.1109/TSE.2017.2689012
   Bond MD, 2006, ACM SIGPLAN NOTICES, V41, P61, DOI 10.1145/1168918.1168866
   Cabral B, 2007, LECT NOTES COMPUT SC, V4609, P151
   Chilimbi TM, 2004, ACM SIGPLAN NOTICES, V39, P156, DOI 10.1145/1037187.1024412
   Dallmeier V., 2007, P 22 IEEE ACM INT C, P433
   Dillig I, 2008, ISMM'08: PROCEEDINGS OF THE 2008 INTERNATIONAL SYMPOSIUM ON MEMORY MANAGEMENT, P1
   Do HS, 2005, EMPIR SOFTW ENG, V10, P405, DOI 10.1007/s10664-005-3861-2
   F-Droid, 2018, CAT OP SOURC ANDR AP
   Facebook, 2018, INF TOOL DET BUGS JA
   Felt AP, 2011, PROCEEDINGS OF THE 18TH ACM CONFERENCE ON COMPUTER & COMMUNICATIONS SECURITY (CCS 11), P627
   Guo CR, 2013, IEEE INT CONF AUTOM, P389, DOI 10.1109/ASE.2013.6693097
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Hutchins M., 1994, ICSE-16. 16th International Conference on Software Engineering (Cat. No.94CH3409-0), P191, DOI 10.1109/ICSE.1994.296778
   JetBrains, 2018, COD INSP INT JDEA
   Jump M, 2007, CONFERENCE RECORD OF POPL 2007: THE 34TH ACM SIGPLAN SIGACT SYMPOSIUM ON PRINCIPLES OF PROGAMMING LANGUAGES, P31
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Lin Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P341, DOI 10.1145/2635868.2635903
   Linares-Vásquez M, 2017, J SYST SOFTWARE, V130, P1, DOI 10.1016/j.jss.2017.04.018
   Liu JR, 2016, PROC INT SYMP SOFTW, P342, DOI 10.1109/ISSRE.2016.15
   Liu YP, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P396, DOI 10.1145/2950290.2950297
   Liu YP, 2014, IEEE T SOFTWARE ENG, V40, P911, DOI 10.1109/TSE.2014.2323982
   LOVINS JB, 1968, MECH TRANSL, V11, P22
   Lu Shan, 2005, WORKSHOP EVALUATION, P1, DOI 10.1.1.134.8941
   Mitchell N, 2003, LECT NOTES COMPUT SC, V2743, P351
   Pathak A, 2012, IEEE INT CONF NETWOR, P268, DOI 10.1109/ICON.2012.6506568
   PMD, 2018, JAV SOURC COD AN
   Soot, 2018, FRAM AN TRANSF JAV A
   Torlak Emina., 2010, P 32 ACMIEEE INT C S, P535
   Vekris P, 2012, P 2012 USENIX C POW
   Weimer W, 2004, ACM SIGPLAN NOTICES, V39, P419, DOI 10.1145/1035292.1029011
   Wu HW, 2018, INT WORKSH AUTOMAT, P27, DOI 10.1145/3194733.3194734
   Wu TY, 2016, IEEE T SOFTWARE ENG, V42, P1054, DOI 10.1109/TSE.2016.2547385
   Xu GQ, 2010, PLDI '10: PROCEEDINGS OF THE 2010 ACM SIGPLAN CONFERENCE ON PROGRAMMING LANGUAGE DESIGN AND IMPLEMENTATION, P174, DOI 10.1145/1806596.1806617
   Yan DC, 2013, PROC INT SYMP SOFTW, P411, DOI 10.1109/ISSRE.2013.6698894
   Zhang HL, 2016, 2016 IEEE/ACM 11TH INTERNATIONAL WORKSHOP IN AUTOMATION OF SOFTWARE TEST (AST), P64, DOI [10.1109/AST.2016.018, 10.1145/2896921.2896932]
NR 43
TC 17
Z9 20
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2019
VL 24
IS 6
BP 3435
EP 3483
DI 10.1007/s10664-019-09715-8
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA JT6XW
UT WOS:000501131100007
DA 2024-07-18
ER

PT J
AU Nelson, N
   Brindescu, C
   McKee, S
   Sarma, A
   Dig, D
AF Nelson, Nicholas
   Brindescu, Caius
   McKee, Shane
   Sarma, Anita
   Dig, Danny
TI The life-cycle of merge conflicts: processes, barriers, and strategies
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Merge conflicts; Resolution processes; Developer perceptions; Barriers;
   Developer tools; Awareness; Planning; Evaluation
ID CONFIGURATION MANAGEMENT; SOFTWARE; AWARENESS
AB Merge conflicts occur when developers make concurrent changes to the same part of the code. They are an inevitable and disruptive aspect of collaborative software development. Thus tool builders and researchers have focused on the prevention and automatic resolution of merge conflicts. However, there is little empirical knowledge about how developers actually monitor for merge conflicts and plan, perform, and evaluate resolutions. Without such knowledge, tool builders might be building on the wrong assumptions and researchers might miss opportunities for improving the state of the art. We conducted semi-structured interviews with 10 software developers across 7 organizations, including both open-source and commercial projects. We identify key processes, techniques, and perceptions from developers, which we extend and validate via two surveys, a Barriers Survey and a Processes Survey, of 162 and 102 developers, respectively. Among others, we find that developers rely on reactive strategies of monitoring for merge conflicts. We find that developers defer responding to conflicts based on their perception of the complexity of the conflicting code and that deferring affects the workflow of the entire team. Developers also rely on this perception to visually evaluate their merge conflict resolutions for correctness. Finally, developers' perceptions alter the impact of tools and processes designed to preemptively and efficiently resolve merge conflicts. Understanding their processes and perceptions can help design human-oriented tools that better support their individual development processes.
C1 [Nelson, Nicholas; Brindescu, Caius; McKee, Shane; Sarma, Anita; Dig, Danny] Oregon State Univ, Corvallis, OR 97331 USA.
C3 Oregon State University
RP Nelson, N (corresponding author), Oregon State Univ, Corvallis, OR 97331 USA.
EM nelsonni@oregonstate.edu; brindesc@oregonstate.edu; mckeesh@outlook.com;
   anita.sarma@oregonstate.edu; daniel.dig@oregonstate.edu
RI Nelson, Nicholas/AAB-5948-2021
OI Nelson, Nicholas/0000-0002-6365-7152; Sarma, Anita/0000-0002-1859-1692
FU NSF [CCF-1439957, CCF-1553741, CCF-1560526, IIS-1559657]
FX We thank Iftekhar Ahmed, Amin Alipour, Souti Chattopadhyay, Alex Hoffer,
   Michael Hilton, Sarah Nadi, Sruti Ragavan, and the anonymous reviewers
   for their valuable comments on earlier versions of this paper. We also
   thank all of our interview and survey participants, especially those who
   helped distribute survey links. This research was partially supported by
   NSF grants CCF-1439957, CCF-1553741, CCF-1560526, and IIS-1559657.
CR Accioly P, 2018, IEEE WORK CONF MIN S, P576, DOI 10.1145/3196398.3196437
   Accioly P, 2018, EMPIR SOFTW ENG, V23, P2051, DOI 10.1007/s10664-017-9586-1
   [Anonymous], 2012, SIGSOFT
   [Anonymous], 2006, The Internet and Higher Education, DOI [10.1016/j.iheduc.2005.11.00, DOI 10.1016/J.IHEDUC.2005.11.00, DOI 10.1016/J.IHEDUC.2005.11.001]
   [Anonymous], PROC INT CONF SOFTW
   Apel S., 2011, P 19 ACM SIGSOFT S 1, P190, DOI DOI 10.1145/2025113.2025141
   Apel S, 2012, IEEE INT CONF AUTOM, P120, DOI 10.1145/2351676.2351694
   Arong, 2014, PROCEEDINGS OF 2014 IEEE INTERNATIONAL CONFERENCE ON PROGRESS IN INFORMATICS AND COMPUTING (PIC), P51, DOI 10.1109/PIC.2014.6972294
   Beecham S, 2003, EMPIR SOFTW ENG, V8, P7, DOI 10.1023/A:1021764731148
   Begole J., 2002, 2002 ACM C COMPUTER, P334
   Beizer Boris, 1984, Software System Testing and Quality Assurance
   Biehl JT, 2007, CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1 AND 2, P1313
   Binkley D., 1995, ACM Transactions on Software Engineering and Methodology, V4, P3, DOI 10.1145/201055.201056
   Bird C, 2012, P ACM SIGSOFT 20 INT, P45
   Blackwell A, 2002, IEEE 2002 SYMPOSIA ON HUMAN CENTRIC COMPUTING LANGUAGES AND ENVIRONMENTS, PROCEEDINGS, P28, DOI 10.1109/HCC.2002.1046337
   Borg M, 2017, INT C PROGRAM COMPRE, P12, DOI 10.1109/ICPC.2017.20
   Bradley A.W., 2011, Proc. 8th Working Conf. Mining Software Repositories, P193, DOI DOI 10.1145/1985441.1985469
   Brindescu C, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P322, DOI 10.1145/2568225.2568322
   BROOKS FP, 1974, DATAMATION, V20, P44
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Campbell JL, 2013, SOCIOL METHOD RES, V42, P294, DOI 10.1177/0049124113500475
   Cataldo M, 2008, CSCW: 2008 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, CONFERENCE PROCEEDINGS, P579
   Codoban M, 2015, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSM.2015.7332446
   Convertino G, 2003, INTERNATIONAL CONFERENCE ON COORDINATED AND MULTIPLE VIEWS IN EXPLORATORY VISUALIZATION, PROCEEDINGS, P55, DOI 10.1109/CMV.2003.1215003
   Costa C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P523, DOI 10.1145/2950290.2950339
   Czerwinski Mary, 2004, P SIGCHI C HUM FACT, P175, DOI [10.1145/985692.985715, DOI 10.1145/985692.985715]
   Da Silva I.A., 2006, Proc. OOPSLA Workshop on Eclipse Technology eXchange (ETX 07), P11, DOI DOI 10.1145/1188835.1188838
   da Silva JR, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P409, DOI 10.1109/SANER.2015.7081851
   de Mello RM, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962632
   de Souza CRB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P241, DOI 10.1145/1368088.1368122
   de Souza Cleidson R. B., 2003, P 2003 INT ACM SIGGR, P105, DOI DOI 10.1145/958160.958177
   Dig D, 2008, IEEE T SOFTWARE ENG, V34, P321, DOI 10.1109/TSE.2008.29
   Easterbrook S., 2008, GUIDE ADV EMPIRICAL, P285, DOI [DOI 10.1007/978-1-84800-044-5_11, DOI 10.1007/978-1-84800-044-511]
   Estler HC, 2014, INT CONF GLOBAL SOFT, P26, DOI 10.1109/ICGSE.2014.17
   Estler HC, 2013, IEEE AUS SOFT ENGR, P201, DOI 10.1109/ASWEC.2013.32
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Fereday J., 2006, INT J QUAL METH, V5, P80, DOI [10.1177/160940690600500107, DOI 10.1177/160940690600500107]
   Cortés-Coy LF, 2014, IEEE INT WORK C SO, P275, DOI 10.1109/SCAM.2014.14
   Forward A., 2002, Proceedings of the 2002 ACM symposium on Document engineering, P26, DOI 10.1145/585058.585065
   Fritz T., 2010, Proceedings of the 32nd International Conference on Software Engineering - Volume 1, ICSE '10, V1, P175
   Fusch PI, 2015, QUAL REP, V20, P1408
   Garmus David., 2001, AW INFORMAT
   Gil Y, 2017, EMPIR SOFTW ENG, V22, P2585, DOI 10.1007/s10664-017-9513-5
   Gligoric M., 2015, P 2015 INT S SOFTWAR, P211, DOI 10.1145/2771783.2771784
   GOODMAN LA, 1961, ANN MATH STAT, V32, P148, DOI 10.1214/aoms/1177705148
   Gopher D, 2000, J EXP PSYCHOL GEN, V129, P308, DOI 10.1037/0096-3445.129.3.308
   Gousios G, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P358, DOI 10.1109/ICSE.2015.55
   Grinter R. E., 1995, Conference on Organizational Computing Systems, P168, DOI 10.1145/224019.224036
   Guimaraes ML, 2012, PROC INT CONF SOFTW, P342, DOI 10.1109/ICSE.2012.6227180
   Guo J, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P142, DOI [10.1145/2901739.2901740, 10.1109/MSR.2016.024]
   Guzzi A, 2015, PROCEEDINGS OF THE 2015 ACM INTERNATIONAL CONFERENCE ON COMPUTER-SUPPORTED COOPERATIVE WORK AND SOCIAL COMPUTING (CSCW'15), P518, DOI 10.1145/2675133.2675177
   Hattori L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P235, DOI 10.1145/1810295.1810339
   Hattori Lile P., 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P63, DOI 10.1109/ASEW.2008.4686322
   Hindle A, 2009, INT C PROGRAM COMPRE, P30, DOI 10.1109/ICPC.2009.5090025
   Hudson W., 2013, ENCY HUMAN COMPUTER, V2nd
   Hunt JJ, 2002, PROC IEEE INT CONF S, P511, DOI 10.1109/ICSM.2002.1167812
   Kasi BK, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P732, DOI 10.1109/ICSE.2013.6606619
   Ko AJ, 2007, PROC INT CONF SOFTW, P344
   Li C., 2007, EXPCS 07, P2, DOI 10.1145/1281700.1281702
   Lippe E., 1992, SIGSOFT Software Engineering Notes, V17, P78, DOI 10.1145/142882.143753
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mckee S, 2017, PROC IEEE INT CONF S, P467, DOI 10.1109/ICSME.2017.53
   Meiran N, 2000, PSYCHOL RES-PSYCH FO, V63, P234, DOI 10.1007/s004269900004
   Mens T, 2002, IEEE T SOFTWARE ENG, V28, P449, DOI 10.1109/TSE.2002.1000449
   Meyer M, 2014, IEEE SOFTWARE, V31, P14, DOI 10.1109/MS.2014.58
   Nabi T, 2016, S VIS LANG HUM CEN C, P129, DOI 10.1109/VLHCC.2016.7739675
   Nishimura Y, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P661, DOI 10.1109/SANER.2016.46
   Panichella Sebastiano, 2014, P 22 INT C PROGR COM, P177
   Phillips S, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P9
   Ragavan SS, 2017, PROCEEDINGS OF THE 2017 ACM SIGCHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI'17), P6232, DOI 10.1145/3025453.3025818
   Robillard MP, 2008, INT C PROGRAM COMPRE, P202, DOI 10.1109/ICPC.2008.10
   Sarma A, 2003, PROC INT CONF SOFTW, P444, DOI 10.1109/ICSE.2003.1201222
   Sarma A, 2008, THESIS
   Sarma A., 2007, C AUTOMATED SOFTWARE, P94
   Seaman C.B., 2008, Guide to Advanced Empirical Software Engineering, P35, DOI [10.1007/978-1-84800-044-52, DOI 10.1007/978-1-84800-044-52]
   Servant F, 2010, 2010 ICSE WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE 2010), P39
   Sillito J., 2006, Proc. of the ACM SIGSOFT Int'l Symp. on Foundations of Software Engineering, P23, DOI DOI 10.1145/1181775.1181779
   Spencer D., 2009, CARD SORTING DESIGNI
   Spencer L., 2013, QUALITATIVE RES PRAC, V2nd
   Sun X, 2015, WHAT INFORM SOFTWARE, P27
   SYMONS CR, 1988, IEEE T SOFTWARE ENG, V14, P2, DOI 10.1109/32.4618
   Tian J., 2005, Software Quality Engineering: Testing, Quality Assurance, and Quantifiable Improvement
   Weinberg GeraldM., 1992, QUALITY SOFTWARE MAN, V1
   Westfechtel B., 1991, Proceedings of the 3rd International Workshop on Software Configuration Management, P68, DOI 10.1145/111062.111071
   Yamauchi K, 2014, PROC IEEE INT CONF S, P406, DOI 10.1109/ICSME.2014.63
   Yan Y, 2014, PROC IEEE INT CONF S, P471, DOI 10.1109/ICSME.2014.76
NR 86
TC 16
Z9 17
U1 1
U2 6
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2019
VL 24
IS 5
SI SI
BP 2863
EP 2906
DI 10.1007/s10664-018-9674-x
PG 44
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IS1CL
UT WOS:000481889700003
DA 2024-07-18
ER

PT J
AU Kondo, M
   Bezemer, CP
   Kamei, Y
   Hassan, AE
   Mizuno, O
AF Kondo, Masanari
   Bezemer, Cor-Paul
   Kamei, Yasutaka
   Hassan, Ahmed E.
   Mizuno, Osamu
TI The impact of feature reduction techniques on defect prediction models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Feature reduction; Feature selection; Defect prediction; Restricted
   Boltzmann machine; Neural network
ID ATTRIBUTE SELECTION; SOFTWARE; QUALITY; METRICS; FAULTS
AB Defect prediction is an important task for preserving software quality. Most prior work on defect prediction uses software features, such as the number of lines of code, to predict whether a file or commit will be defective in the future. There are several reasons to keep the number of features that are used in a defect prediction model small. For example, using a small number of features avoids the problem of multicollinearity and the so-called curse of dimensionality'. Feature selection and reduction techniques can help to reduce the number of features in a model. Feature selection techniques reduce the number of features in a model by selecting the most important ones, while feature reduction techniques reduce the number of features by creating new, combined features from the original features. Several recent studies have investigated the impact of feature selection techniques on defect prediction. However, there do not exist large-scale studies in which the impact of multiple feature reduction techniques on defect prediction is investigated. In this paper, we study the impact of eight feature reduction techniques on the performance and the variance in performance of five supervised learning and five unsupervised defect prediction models. In addition, we compare the impact of the studied feature reduction techniques with the impact of the two best-performing feature selection techniques (according to prior work). The following findings are the highlights of our study: (1) The studied correlation and consistency-based feature selection techniques result in the best-performing supervised defect prediction models, while feature reduction techniques using neural network-based techniques (restricted Boltzmann machine and autoencoder) result in the best-performing unsupervised defect prediction models. In both cases, the defect prediction models that use the selected/generated features perform better than those that use the original features (in terms of AUC and performance variance). (2) Neural network-based feature reduction techniques generate features that have a small variance across both supervised and unsupervised defect prediction models. Hence, we recommend that practitioners who do not wish to choose a best-performing defect prediction model for their data use a neural network-based feature reduction technique.
C1 [Kondo, Masanari; Mizuno, Osamu] Kyoto Inst Technol, SEL, Kyoto, Japan.
   [Bezemer, Cor-Paul] Univ Alberta, Dept Elect & Comp Engn, Edmonton, AB, Canada.
   [Kamei, Yasutaka] Kyushu Univ, Principles Software Languages Grp POSL, Fukuoka, Fukuoka, Japan.
   [Hassan, Ahmed E.] Queens Univ, Sch Comp, SAIL, Kingston, ON, Canada.
C3 Kyoto Institute of Technology; University of Alberta; Kyushu University;
   Queens University - Canada
RP Kondo, M (corresponding author), Kyoto Inst Technol, SEL, Kyoto, Japan.
EM m-kondo@se.is.kit.ac.jp; bezemer@ualberta.ca; kamei@ait.kyushu-u.ac.jp;
   ahmed@cs.queensu.ca; o-mizuno@kit.ac.jp
RI Ali, Ahmed/HOF-4672-2023; KHALIFA, AHMED khalifa/HKF-2246-2023; Hassan,
   Ahmed/AAB-7241-2019
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Mizuno,
   Osamu/0000-0001-8061-7657; Bezemer, Cor-Paul/0000-0002-0474-5718
FU NSERC; JSPS KAKENHI [JP16K12415, JP18H03222]
FX This work was partially supported by NSERC as well as JSPS KAKENHI
   (Grant Numbers: JP16K12415 and JP18H03222).
CR Abaei G, 2013, 2013 IEEE INTERNATIONAL CONFERENCE ON CONTROL SYSTEM, COMPUTING AND ENGINEERING (ICCSCE 2013), P465, DOI 10.1109/ICCSCE.2013.6720010
   [Anonymous], 2002, RTI PROJECT
   [Anonymous], 2009, FINDING GROUPS DATA
   [Anonymous], J APPL MATH
   [Anonymous], 2010, PROC ACMIEEE INT S E
   [Anonymous], PROC INT CONF SOFTW
   [Anonymous], 2017, IEEE T SOFTWARE ENG
   [Anonymous], 1995, INT C
   [Anonymous], 1977, Elements of software science
   Arora I, 2015, PROCEDIA COMPUT SCI, V46, P906, DOI 10.1016/j.procs.2015.02.161
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bellman R., 1957, Dynamic programming
   Bingham E., 2001, KDD-2001. Proceedings of the Seventh ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, P245, DOI 10.1145/502512.502546
   Bishnu PS, 2012, IEEE T KNOWL DATA EN, V24, P1146, DOI 10.1109/TKDE.2011.163
   Challagulla VUB, 2008, INT J ARTIF INTELL T, V17, P389, DOI 10.1142/S0218213008003947
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   Cohen J., 1988, STAT POWER ANAL BEHA
   D'Ambros Marco, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P31, DOI 10.1109/MSR.2010.5463279
   Dash M, 2003, ARTIF INTELL, V151, P155, DOI 10.1016/S0004-3702(03)00079-1
   Dunn J. C., 1973, Journal of Cybernetics, V3, P32, DOI 10.1080/01969727308546046
   Faloutsos C., 1995, SIGMOD Record, V24, P163, DOI 10.1145/568271.223812
   FARRAR DE, 1967, REV ECON STAT, V49, P92, DOI 10.2307/1937887
   Gao KH, 2011, SOFTWARE PRACT EXPER, V41, P579, DOI 10.1002/spe.1043
   Ghotra B, 2017, IEEE WORK CONF MIN S, P146, DOI 10.1109/MSR.2017.18
   Ghotra B, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P789, DOI 10.1109/ICSE.2015.91
   Gray A. R., 1999, Empirical Software Engineering, V4, P297, DOI 10.1023/A:1009849100780
   Guo L, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P249, DOI 10.1109/ASE.2003.1240314
   Hall M., 2009, ACM SIGKDD Explor. Newsl, V11, P18, DOI DOI 10.1145/1656274.1656278
   Hall M.A., 1999, P 17 INT C MACHINE L, P359
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Han J, 1995, LECT NOTES COMPUT SC, V930, P195
   Hartigan J. A., 1979, Applied Statistics, V28, P100, DOI 10.2307/2346830
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   He ZM, 2012, AUTOMAT SOFTW ENG, V19, P167, DOI 10.1007/s10515-011-0090-3
   Herbold S., 2013, P 9 INT C PREDICTIVE, P1
   Hinton GE, 2006, SCIENCE, V313, P504, DOI 10.1126/science.1127647
   Hira Zena M., 2015, Advances in Bioinformatics, V2015, P198363, DOI 10.1155/2015/198363
   Jureczko M., 2010, P 6 INT C PRED MOD S, P9, DOI 10.1145/1868328.1868342
   Kamei Y, 2016, EMPIR SOFTW ENG, V21, P2072, DOI 10.1007/s10664-015-9400-x
   Kim S, 2007, PROC INT CONF SOFTW, P489
   KOHONEN T, 1990, P IEEE, V78, P1464, DOI 10.1109/5.58325
   Kuhn M, 2015, LIB ASCL
   Landwehr N, 2005, MACH LEARN, V59, P161, DOI 10.1007/s10994-005-0466-3
   Martinetz T., 1991, Artificial Neural Networks. Proceedings of the 1991 International Conference. ICANN-91, P397
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   McDonald J. H., 2014, HDB BIOL STAT
   Menzies T, 2007, COMPUTER, V40, P54, DOI 10.1109/MC.2007.37
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   Muthukumaran K., 2015, P 8 INDIA SOFTWARE E, P120
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Nam J, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P508, DOI 10.1145/2786805.2786814
   Nam J, 2015, IEEE INT CONF AUTOM, P452, DOI 10.1109/ASE.2015.56
   Nam J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P382, DOI 10.1109/ICSE.2013.6606584
   Nam Jaechang., 2014, SURVEY SOFTWARE DEFE
   Neumann DE, 2002, IEEE T SOFTWARE ENG, V28, P904, DOI 10.1109/TSE.2002.1033229
   Pan SJ, 2011, IEEE T NEURAL NETWOR, V22, P199, DOI 10.1109/TNN.2010.2091281
   Peters F, 2013, IEEE T SOFTWARE ENG, V39, P1054, DOI 10.1109/TSE.2013.6
   Petrovic JE, 2017, POLICY FUTURES EDUC, V15, P817, DOI 10.1177/1478210316681204
   Quinlan J.R., 1993, C4.5 : programs for machine learning
   Rathore SS, 2014, PROCEEDINGS OF THE 7TH INDIA SOFTWARE ENGINEERING CONFERENCE 2014, ISEC '14, DOI 10.1145/2590748.2590755
   Rodriguez D, 2007, IRI 2007: PROCEEDINGS OF THE 2007 IEEE INTERNATIONAL CONFERENCE ON INFORMATION REUSE AND INTEGRATION, P667, DOI 10.1109/IRI.2007.4296696
   Rodriguez D, 2007, EUROMICRO CONF PROC, P418
   Rokach L, 2005, DATA MINING AND KNOWLEDGE DISCOVERY HANDBOOK, P321, DOI 10.1007/0-387-25465-X_15
   Shepperd M, 2013, IEEE T SOFTWARE ENG, V39, P1208, DOI 10.1109/TSE.2013.11
   Shihab E, 2014, PROC IEEE INT CONF S, P639, DOI 10.1109/ICSME.2014.114
   Shivaji S, 2013, IEEE T SOFTWARE ENG, V39, P552, DOI 10.1109/TSE.2012.43
   Smolensky P, 1986, P 1986 PARALLEL DIST
   TANTITHAMTHAVOR.C, 2016, PROC INT CONF SOFTW, P321, DOI DOI 10.1145/2884781.2884857
   Tantithamthavorn C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P286, DOI 10.1145/3183519.3183547
   Tantithamthavorn C, 2017, IEEE T SOFTWARE ENG, V43, P1, DOI 10.1109/TSE.2016.2584050
   van der Maaten L, 2014, J MACH LEARN RES, V15, P3221
   van der Maaten L, 2008, J MACH LEARN RES, V9, P2579
   von Luxburg U, 2007, STAT COMPUT, V17, P395, DOI 10.1007/s11222-007-9033-z
   Xu Z, 2016, PROC INT SYMP SOFTW, P309, DOI 10.1109/ISSRE.2016.13
   Yang BB, 2008, IEEE IJCNN, P1891, DOI 10.1109/IJCNN.2008.4634056
   Zhang H., 2004, AA, V1, P3
   Zhong S, 2004, EIGHTH IEEE INTERNATIONAL SYMPOSIUM ON HIGH ASSURANCE SYSTEMS ENGINEERING, PROCEEDINGS, P149
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
   Zwillinger D., 1999, CRC Standard Probability and Statistics Tables and Formulae
NR 80
TC 58
Z9 67
U1 2
U2 21
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2019
VL 24
IS 4
BP 1925
EP 1963
DI 10.1007/s10664-018-9679-5
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA IL9CL
UT WOS:000477582700007
DA 2024-07-18
ER

PT J
AU Almeida, DA
   Murphy, GC
   Wilson, G
   Hoye, M
AF Almeida, Daniel A.
   Murphy, Gail C.
   Wilson, Greg
   Hoye, Michael
TI Investigating whether and how software developers understand open source
   software licensing
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Open source; Software licenses; Empirical studies
ID CHOICE
AB Software provided under open source licenses is widely used, from forming high-profile stand-alone applications (e.g., Mozilla Firefox) to being embedded in commercial offerings (e.g., network routers). Despite the high frequency of use of open source licenses, there has been little work about whether software developers understand the open source licenses that they use. To help understand whether or not developers understand the open source licenses they use, we conducted a survey that posed development scenarios involving three popular open source licenses (GNU GPL 3.0, GNU LGPL 3.0 and MPL 2.0) both alone and in combination. The 375 respondents to the survey, who were largely developers, gave answers consistent with those of a legal expert's opinion in 62% of 42 cases. Although developers clearly understood cases involving one license, they struggled when multiple licenses were involved. To understand the context in which licensing issues arise in practice, we analyzed real-world questions posed by developers about the three licenses considered in the survey on online question-and-answer communities. We also interviewed practicing developers about license interaction problems they have faced. Among several lessons, we learnt that licensing issues can constrain software evolution and that developers are cautious of more restrictive licenses. Our results indicate a need for tool support to help guide developers in understanding the structure of the code and the technical details of a project while taking into account the exact requirements imposed by the licenses involved.
C1 [Almeida, Daniel A.; Murphy, Gail C.] Univ British Columbia, Comp Sci, Vancouver, BC, Canada.
   [Murphy, Gail C.] Univ British Columbia, Res & Innovat, Vancouver, BC, Canada.
   [Wilson, Greg] DataCamp, Toronto, ON, Canada.
   [Hoye, Michael] Mozilla Corp, Toronto, ON, Canada.
C3 University of British Columbia; University of British Columbia
RP Almeida, DA (corresponding author), Univ British Columbia, Comp Sci, Vancouver, BC, Canada.
EM danielalmeida@alumni.ubc.ca; murphy@cs.ubc.ca; gvwilson@third-bit.com;
   mhoye@mozilla.com
OI Araujo Almeida, Daniel/0000-0002-8083-427X
CR Alspaugh TA, 2010, J ASSOC INF SYST, V11, P730
   Aslett M, 2011, CONTINUING DECLINE G
   CORBIN J, 1990, Z SOZIOL, V19, P418, DOI 10.1007/BF00988593
   Di Penta Massimiliano, 2010, P 32 ACMIEEE INT C S, P145, DOI [10.1145/1806799.1806824, DOI 10.1145/1806799.1806824]
   Gamalielsson J, 2017, P 13 INT S OP COLL O
   German Daniel M., 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P84, DOI 10.1109/ICPC.2010.48
   German DM, 2009, PROC INT CONF SOFTW, P188, DOI 10.1109/ICSE.2009.5070520
   German Daniel M., 2010, P 25 IEEE ACM INT C, P437, DOI [10.1145/1858996.1859088, DOI 10.1145/1858996.1859088]
   Hemel A., 2011, P 8 WORK C MIN SOFTW, P63
   Hofmann G., 2013, P IFIP INT C OP SOUR, P245
   Kim M, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P83
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Rosson Mary Beth, 1996, ACM Transactions on ComputerHuman Interaction (TOCHI), V3, P219
   Sen R, 2008, J MANAGE INFORM SYST, V25, P207, DOI 10.2753/MIS0742-1222250306
   Sonatype, 2015, 2015 STAT SOFTW SUPP 2015 STAT SOFTW SUPP
   Stewart KJ, 2006, INFORM SYST RES, V17, P126, DOI 10.1287/isre.1060.0082
   Vendome C, 2017, PROC INT CONF SOFTW, P118, DOI 10.1109/ICSE.2017.19
   Vendome C, 2017, EMPIR SOFTW ENG, V22, P1537, DOI 10.1007/s10664-016-9438-4
   Vendome C, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P811, DOI 10.1145/2889160.2889259
   Vendome C, 2015, PROC IEEE INT CONF S, P31, DOI 10.1109/ICSM.2015.7332449
   Vendome C, 2015, INT C PROGRAM COMPRE, P218, DOI 10.1109/ICPC.2015.32
   Vendome C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P772, DOI 10.1109/ICSE.2015.245
   Wu YH, 2017, EMPIR SOFTW ENG, V22, P1194, DOI 10.1007/s10664-016-9487-8
NR 23
TC 7
Z9 9
U1 0
U2 20
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2019
VL 24
IS 1
BP 211
EP 239
DI 10.1007/s10664-018-9614-9
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HL3RV
UT WOS:000458634400008
DA 2024-07-18
ER

PT J
AU Decan, A
   Mens, T
   Grosjean, P
AF Decan, Alexandre
   Mens, Tom
   Grosjean, Philippe
TI An empirical comparison of dependency network evolution in seven
   software packaging ecosystems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software repository mining; Software ecosystem; Package manager;
   Dependency network; Software evolution
ID SYSTEMS; INDEX
AB Nearly every popular programming language comes with one or more package managers. The software packages distributed by such package managers form large software ecosystems. These packaging ecosystems contain a large number of package releases that are updated regularly and that have many dependencies to other package releases. While packaging ecosystems are extremely useful for their respective communities of developers, they face challenges related to their scale, complexity, and rate of evolution. Typical problems are backward incompatible package updates, and the risk of (transitively) depending on packages that have become obsolete or inactive. This manuscript uses the libraries.io dataset to carry out a quantitative empirical analysis of the similarities and differences between the evolution of package dependency networks for seven packaging ecosystems of varying sizes and ages: Cargo for Rust, CPAN for Perl, CRAN for R, npm for JavaScript, NuGet for the .NET platform, Packagist for PHP, and RubyGems for Ruby. We propose novel metrics to capture the growth, changeability, reusability and fragility of these dependency networks, and use these metrics to analyze and compare their evolution. We observe that the dependency networks tend to grow over time, both in size and in number of package updates, while a minority of packages are responsible for most of the package updates. The majority of packages depend on other packages, but only a small proportion of packages accounts for most of the reverse dependencies. We observe a high proportion of "fragile" packages due to a high and increasing number of transitive dependencies. These findings are instrumental for assessing the quality of a package dependency network, and improving it through dependency management tools and imposed policies.
C1 [Decan, Alexandre; Mens, Tom; Grosjean, Philippe] Univ Mons, COMPLEXYS Res Inst, Mons, Belgium.
C3 University of Mons
RP Decan, A (corresponding author), Univ Mons, COMPLEXYS Res Inst, Mons, Belgium.
EM Alexandre.Decan@umons.ac.be; Tom.Mens@umons.ac.be;
   Philippe.Grosjean@umons.ac.be
FU FRQ-FNRS collaborative research project [R.60.04.18.F]; ARC
   [AUWB-12/17-UMONS-3]; FNRS [J.0023.16]
FX This research was carried out in the context of FRQ-FNRS collaborative
   research project R.60.04.18.F "SECOHealth", ARC research project
   AUWB-12/17-UMONS-3 "Ecological Studies of Open Source Software
   Ecosystems", and FNRS Research Credit J.0023.16 "Analysis of Software
   Project Survival". We express our gratitude to Andrew Nesbitt and Ben
   Nickolls, both from libaries.io and dependencyci.com, for making the
   package manager dependency data available, and for the very useful email
   discussions. We thank Jesus Gonzalez-Barahona and Daniel Izquierdo from
   Bitergia for their relevant feedback. We thank Eleni Constantinou,
   Alexander Serebrenik and Damian Tamburri for proofreading this work.
CR Aalen OO, 2008, STAT BIOL HEALTH, P1
   Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   [Anonymous], 1997, Software engineering with reusable components
   [Anonymous], 2011, JOINT EUR SOFTW ENG
   [Anonymous], P 25 INT C ARCH COMP
   [Anonymous], POSTPR 8 SEM ADV TEC
   Artho C., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P141, DOI 10.1109/MSR.2012.6224274
   Barabasi A L, 2016, Network Science
   Bavota G, 2015, EMPIR SOFTW ENG, V20, P1275, DOI 10.1007/s10664-014-9325-9
   Bird Christian, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P109, DOI 10.1109/ISSRE.2009.17
   Blincoe K, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P202, DOI 10.1109/MSR.2015.26
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Bogart C, 2015, 2015 30TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOP (ASEW), P86, DOI 10.1109/ASEW.2015.21
   Cadariu M, 2015, 2015 22ND INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P516, DOI 10.1109/SANER.2015.7081868
   Cataldo M, 2014, ADV COMPLEX SYST, V17, DOI 10.1142/S0219525914300011
   Claes M, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P308, DOI 10.1109/CSMR-WCRE.2014.6747183
   Constantinou E, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P34, DOI 10.1109/SANER.2017.7884607
   Costas R, 2007, J INFORMETR, V1, P193, DOI 10.1016/j.joi.2007.02.001
   Cox J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P109, DOI 10.1109/ICSE.2015.140
   CRAN Repository Maintainers, 2016, CRAN REP POL
   Decan A, 2016, EUR C SOFTW ARCH WOR, DOI [10. 1145/2993412. 3003382, DOI 10.1145/2993412.3003382.ACM]
   Decan A., 2015, ECSAW 15, DOI DOI 10.1145/2797433.2797476
   Decan A, 2017, REPLICATION PACKAGE, DOI [10. 5281/zenodo. 1109685, DOI 10.5281/ZEN0D0.1109685]
   Decan A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P2, DOI 10.1109/SANER.2017.7884604
   Decan A, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P493, DOI 10.1109/SANER.2016.12
   Di Cosmo R, 2008, 1 INT WORKSH HOT TOP, DOI [10. 1145/1490283. 1490292, DOI 10.1145/1490283.1490292.ACM]
   Dietrich J, 2008, SOFTVIS 2008: PROCEEDINGS OF THE 4TH ACM SYMPOSIUM ON SOFTWARE VISUALIZATION, P91
   German DM, 2013, EUR CON SFTWR MTNCE, P243, DOI 10.1109/CSMR.2013.33
   Giger Emanuel., 2011, P 12 INT WORKSHOP PR, P51
   Gini Corrado., 1912, REPRINTED MEMORIE ME
   Goeminne M, 2015, INT C SOFTW MAINT EV, DOI [10. 1109/ICSM. 2015. 7332512, DOI 10.1109/ICSM.2015.7332512]
   Goeminne M., 2011, JOINT PORCEEDINGS 1, P74
   Gonzalez-Barahona JM, 2009, EMPIR SOFTW ENG, V14, P262, DOI 10.1007/s10664-008-9100-x
   Haney David, 2016, NPM LEFT PAD HAVE WE
   Hemel Z, 2010, JAVASCRIPT LANGUAGE
   Hirsch JE, 2005, P NATL ACAD SCI USA, V102, P16569, DOI 10.1073/pnas.0507655102
   Hornik K, 2012, AUST J STAT, V41, P59
   Jansen S, 2013, SOFTWARE ECOSYSTEMS: ANALYZING AND MANAGING BUSINESS NETWORKS IN THE SOFTWARE INDUSTRY, P1, DOI 10.4337/9781781955635
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Kikas R, 2017, IEEE WORK CONF MIN S, P102, DOI 10.1109/MSR.2017.55
   Kwan I, 2011, IEEE T SOFTWARE ENG, V37, P307, DOI 10.1109/TSE.2011.29
   Kyriakakis P, 2014, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSME.2014.60
   Lehman MM, 1997, FOURTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P20, DOI 10.1109/METRIC.1997.637156
   Lin B, 2017, INT CONF GLOBAL SOFT, P66, DOI 10.1109/ICGSE.2017.11
   Lorenz MO, 1905, PUBL AM STAT ASSOC, V9, P209, DOI 10.2307/2276207
   Manikas K, 2013, J SYST SOFTWARE, V86, P1294, DOI 10.1016/j.jss.2012.12.026
   Mens T, 2016, INT C SOFTW MAIN EV, DOI [10. 1109/ICSME. 2016. 19, DOI 10.1109/ICSME.2016.19.IEEE]
   Mens T, 2015, ARXIV160605431
   Morris B., 2016, REST APIS DONT NEED
   Myers CR, 2003, PHYS REV E, V68, DOI 10.1103/PhysRevE.68.046116
   Nesbitt A, 2017, LIB IO OPEN SOURCE R, DOI [10.5281/zenodo.808273, DOI 10.5281/ZEN0D0.808273]
   Posnett D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P452, DOI 10.1109/ICSE.2013.6606591
   Raemaekers S, 2014, IEEE INT WORK C SO, P215, DOI 10.1109/SCAM.2014.30
   Robbes R, 2012, INT S FDN SOFTW ENG, DOI DOI 10.1145/2393596.2393662.ACM
   Samoladas I, 2010, INFORM SOFTWARE TECH, V52, P902, DOI 10.1016/j.infsof.2010.05.001
   Santana F. W., 2013, P 5 IWSECO, V987, P7
   Scanniello G., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P524, DOI 10.1109/ICSM.2011.6080823
   Schlueter IZ, 2016, NPM BLOG KIK LEFT PA
   Serebrenik A., 2015, P 2015 EUR C SOFTW A, P1, DOI [10.1145/2797433.2797475, DOI 10.1145/2797433.2797475]
   Vasa R, 2009, PROC IEEE INT CONF S, P179, DOI 10.1109/ICSM.2009.5306322
   Vouillon J, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P412, DOI 10.1109/ICSE.2013.6606587
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
   Zheng XL, 2008, PHYSICA A, V387, P6190, DOI 10.1016/j.physa.2008.06.050
NR 63
TC 121
Z9 132
U1 1
U2 21
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2019
VL 24
IS 1
BP 381
EP 416
DI 10.1007/s10664-017-9589-y
PG 36
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA HL3RV
UT WOS:000458634400013
DA 2024-07-18
ER

PT J
AU Scanniello, G
   Gravino, C
   Genero, M
   Cruz-Lemus, JA
   Tortora, G
   Risi, M
   Dodero, G
AF Scanniello, Giuseppe
   Gravino, Carmine
   Genero, Marcela
   Cruz-Lemus, Jose A.
   Tortora, Genoveffa
   Risi, Michele
   Dodero, Gabriella
TI Do software models based on the UML aid in source-code
   comprehensibility? Aggregating evidence from 12 controlled experiments
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Aggregation; Heterogeneity; Unified modeling language; Controlled
   experiments
ID DIAGRAMS; MAINTENANCE; FAMILY; DOCUMENTATION; TRACEABILITY; BENEFITS;
   IMPACT
AB In this paper, we present the results of long-term research conducted in order to study the contribution made by software models based on the Unified Modeling Language (UML) to the comprehensibility of Java source-code deprived of comments. We have conducted 12 controlled experiments in different experimental contexts and on different sites with participants with different levels of expertise (i.e., Bachelor's, Master's, and PhD students and software practitioners from Italy and Spain). A total of 333 observations were obtained from these experiments. The UML models in our experiments were those produced in the analysis and design phases. The models produced in the analysis phase were created with the objective of abstracting the environment in which the software will work (i.e., the problem domain), while those produced in the design phase were created with the goal of abstracting implementation aspects of the software (i.e., the solution/application domain). Source-code comprehensibility was assessed with regard to correctness of understanding, time taken to accomplish the comprehension tasks, and efficiency as regards accomplishing those tasks. In order to study the global effect of UML models on source-code comprehensibility, we aggregated results from the individual experiments using a meta-analysis. We made every effort to account for the heterogeneity of our experiments when aggregating the results obtained from them. The overall results suggest that the use of UML models affects the comprehensibility of source-code, when it is deprived of comments. Indeed, models produced in the analysis phase might reduce source-code comprehensibility, while increasing the time taken to complete comprehension tasks. That is, browsing source code and this kind of models together negatively impacts on the time taken to complete comprehension tasks without having a positive effect on the comprehensibility of source code. One plausible justification for this is that the UML models produced in the analysis phase focus on the problem domain. That is, models produced in the analysis phase say nothing about source code and there should be no expectation that they would, in any way, be beneficial to comprehensibility. On the other hand, UML models produced in the design phase improve source-code comprehensibility. One possible justification for this result is that models produced in the design phase are more focused on implementation details. Therefore, although the participants had more material to read and browse, this additional effort was paid back in the form of an improved comprehension of source code.
C1 [Scanniello, Giuseppe] Univ Basilicata, Dept Math & Comp Sci, Potenza, Italy.
   [Gravino, Carmine; Risi, Michele] Univ Salerno, Dept Comp Sci, Fisciano, Italy.
   [Tortora, Genoveffa] Univ Salerno, Fac Math Phys & Nat Sci, Fisciano, Italy.
   [Tortora, Genoveffa] Univ Salerno, Fisciano, Italy.
   [Genero, Marcela] Univ Castilla La Mancha, Dept Technol & Informat Syst, Ciudad Real, Spain.
   [Genero, Marcela] Univ Castilla La Mancha, Dept Informat Syst & Technol, Ciudad Real, Spain.
   [Dodero, Gabriella] Free Univ Bozen, Bolzano, Italy.
C3 University of Basilicata; University of Salerno; University of Salerno;
   University of Salerno; Universidad de Castilla-La Mancha; Universidad de
   Castilla-La Mancha; Free University of Bozen-Bolzano
RP Gravino, C (corresponding author), Univ Salerno, Dept Comp Sci, Fisciano, Italy.
EM giuseppe.scanniello@unibas.it; gravino@unisa.it; marcela.genero@uclm.es;
   joseantonio.cruz@uclm.es; tortora@unisa.it; mrisi@unisa.it;
   Gabriella.Dodero@unibz.it
RI Tortora, Genoveffa/M-8155-2019; GENERO, MARCELA/L-6480-2014; Cruz-Lemus,
   Jose A./B-7299-2015
OI Scanniello, Giuseppe/0000-0003-0024-7508; GENERO,
   MARCELA/0000-0002-6868-7465; Cruz-Lemus, Jose A./0000-0002-0470-609X
FU SEQUOIA Project - Fondo Europeo de Desarrollo Regional
   [TIN2015-63502-C3-1-R]; Ministerio de Econom/ y Competitividad
FX The authors would like to thank the participants in the experiments and
   all the people who supported the research presented in this paper. This
   work has been partially supported by the SEQUOIA Project,
   (TIN2015-63502-C3-1-R) (MINECO/FEDER) funded by Fondo Europeo de
   Desarrollo Regional and Ministerio de Econom/ y Competitividad
CR Abrahao S, 2013, IEEE T SOFTWARE ENG, V39, P327, DOI 10.1109/TSE.2012.27
   Agarwal R, 2003, COMMUN ACM, V46, P248, DOI 10.1145/903893.903944
   Anda B, 2006, EMPIR SOFTW ENG, V11, P555, DOI 10.1007/s10664-006-9020-6
   [Anonymous], 2011, ISO/IEC 25040:2011
   Antoniol G, 2002, IEEE T SOFTWARE ENG, V28, P970, DOI 10.1109/TSE.2002.1041053
   Arisholm E, 2006, IEEE T SOFTWARE ENG, V32, P365, DOI 10.1109/TSE.2006.59
   BASILI VR, 1988, IEEE T SOFTWARE ENG, V14, P758, DOI 10.1109/32.6156
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Bavota G, 2013, PROC IEEE INT CONF S, P210, DOI 10.1109/ICSM.2013.32
   Bruegge Bernd., 2003, OBJECT ORIENTED SOFT, V2nd
   Budgen D, 2011, SOFTWARE PRACT EXPER, V41, P363, DOI 10.1002/spe.1009
   Cariou E, 2002, SIXTH INTERNATIONAL ENTERPRISE DISTRIBUTED OBJECT COMPUTING CONFERENCE, PROCEEDINGS, P132, DOI 10.1109/EDOC.2002.1137703
   Carver J, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P239
   Corazza Anna, 2018, Software Quality Journal, V26, P751, DOI 10.1007/s11219-016-9347-1
   Dzidek WJ, 2008, IEEE T SOFTWARE ENG, V34, P407, DOI 10.1109/TSE.2008.15
   Eclipse Modeling Framework (EMF), 2012, ECLIPSE MODELING FRA
   Erickson J, 2007, COMMUN ACM, V50, P46, DOI 10.1145/1278201.1278205
   Fe RW, 2011, J CLIN EPIDEMIOL, V64, P1187, DOI 10.1016/j.jclinepi.2010.08.010
   Fernandez-Saez A.M., 2013, P EESSMOD 2013 CEL M, P33
   Fernández-Sáez AM, 2016, EMPIR SOFTW ENG, V21, P212, DOI 10.1007/s10664-014-9354-4
   Fernández-Sáez AM, 2015, 2015 ACM/IEEE 18TH INTERNATIONAL CONFERENCE ON MODEL DRIVEN ENGINEERING LANGUAGES AND SYSTEMS (MODELS), P292, DOI 10.1109/MODELS.2015.7338260
   Fernández-Sáez AM, 2015, INFORM SOFTWARE TECH, V57, P644, DOI 10.1016/j.infsof.2014.05.014
   Fernández-Sáez AM, 2013, INFORM SOFTWARE TECH, V55, P1119, DOI 10.1016/j.infsof.2012.12.006
   Fluri B, 2007, 14TH WORKING CONFERENCE ON REVERSE ENGINEERING, PROCEEDINGS, P70, DOI 10.1109/WCRE.2007.21
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Garousi G., 2013, P 17 INT C EVALUATIO, P24
   Gravino C., P 2010 ACM S APPL CO, P2365
   Gravino C, 2015, J VISUAL LANG COMPUT, V28, P23, DOI 10.1016/j.jvlc.2014.12.004
   Grossman M, 2005, INFORM SOFTWARE TECH, V47, P383, DOI 10.1016/j.infsof.2004.09.005
   Gueheneuc Y.-G., 2007, P EUROPLOP FOC GROUP
   Hammad M, 2011, SOFTWARE QUAL J, V19, P35, DOI 10.1007/s11219-010-9103-x
   Higgins J., 2008, COCHRANE COLLABORATI
   Huedo-Medina TB, 2006, PSYCHOL METHODS, V11, P193, DOI 10.1037/1082-989X.11.2.193
   Hutchinson J, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P471, DOI 10.1145/1985793.1985858
   ISO, 1991, 9126 ISO ISOIEC IS
   ISO, 2000, 924111 ISO
   Jedlitschka A., 2008, Guide to advanced empirical software engineering, P201, DOI DOI 10.1007/978-1-84800-044-5_8
   Jiang Zhen Ming, 2006, MSR '06: Proceedings of the 2006 international workshop on Mining software repositories, P179, DOI DOI 10.1145/1137983.1138030
   Juristo N., 2013, BASICS SOFTWARE ENG
   Kitchenham B., 2007, 23 EBSE, DOI DOI 10.1145/1134285.1134500
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Lehnert S, 2013, EUR CON SFTWR MTNCE, P209, DOI 10.1109/CSMR.2013.30
   Leotta M, 2013, PROC IEEE INT CONF S, P428, DOI 10.1109/ICSM.2013.64
   OMG, 2005, TECHNICAL REPORT
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Pavalkis S, 2013, PROCESS APPL DERIVED, P122
   Pavalkis S, 2013, INF TECHNOL CONTROL, V42, P48, DOI 10.5755/j01.itc.42.1.2470
   Pickard LM, 1998, INFORM SOFTWARE TECH, V40, P811, DOI 10.1016/S0950-5849(98)00101-3
   Ried K, 2008, INTERPRETING UNDERST, V35
   Salviulo F, 2014, P INT C EV ASS SOFTW
   Scanniello G, 2010, P S EMP SOFTW ENG ME
   Scanniello G, 2015, LECT NOTES COMPUT SC, V9459, P311, DOI 10.1007/978-3-319-26844-6_23
   Scanniello G, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2699696
   Scanniello G, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2491912
   Scanniello G, 2010, ICEIS 2010: PROCEEDINGS OF THE 12TH INTERNATIONAL CONFERENCE ON ENTERPRISE INFORMATION SYSTEMS, VOL 3: INFORMATION SYSTEMS ANALYSIS AND SPECIFICATION, P141
   Settimi R, 2004, 7TH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, P49, DOI 10.1109/IWPSE.2004.1334768
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Sillito J, 2008, IEEE T SOFTWARE ENG, V34, P434, DOI 10.1109/TSE.2008.26
   Tang A, 2007, J SYST SOFTWARE, V80, P918, DOI 10.1016/j.jss.2006.08.040
   Tang A, 2007, J SYST SOFTWARE, V80, P127, DOI 10.1016/j.jss.2006.04.004
   Wohlin C., 2012, Experimentation in Software Engineering
   Zhi JJ, 2015, J SYST SOFTWARE, V99, P175, DOI 10.1016/j.jss.2014.09.042
NR 62
TC 14
Z9 14
U1 1
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2018
VL 23
IS 5
BP 2695
EP 2733
DI 10.1007/s10664-017-9591-4
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GO5AW
UT WOS:000440031100006
OA Green Published
DA 2024-07-18
ER

PT J
AU Hassan, S
   Tantithamthavorn, C
   Bezemer, CP
   Hassan, AE
AF Hassan, Safwat
   Tantithamthavorn, Chakkrit
   Bezemer, Cor-Paul
   Hassan, Ahmed E.
TI Studying the dialogue between users and developers of free apps in the
   Google Play Store
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Google play store; User-developer dialogue; Developer reply; Developer
   response; Mixed-effect model; Android mobile apps; Empirical study;
   Software engineering
AB The popularity of mobile apps continues to grow over the past few years. Mobile app stores, such as the Google Play Store and Apple's App Store provide a unique user feedback mechanism to app developers through the possibility of posting app reviews. In the Google Play Store (and soon in the Apple App Store), developers are able to respond to such user feedback. Over the past years, mobile app reviews have been studied excessively by researchers. However, much of prior work (including our own prior work) incorrectly assumes that reviews are static in nature and that users never update their reviews. In a recent study, we started analyzing the dynamic nature of the review-response mechanism. Our previous study showed that responding to a review often has a positive effect on the rating that is given by the user to an app. In this paper, we revisit our prior finding in more depth by studying 4.5 million reviews with 126,686 responses for 2,328 top free-to-download apps in the Google Play Store. One of the major findings of our paper is that the assumption that reviews are static is incorrect. In particular, we find that developers and users in some cases use this response mechanism as a rudimentary user support tool, where dialogues emerge between users and developers through updated reviews and responses. Even though the messages are often simple, we find instances of as many as ten user-developer back-and-forth messages that occur via the response mechanism. Using a mixed-effect model, we identify that the likelihood of a developer responding to a review increases as the review rating gets lower or as the review content gets longer. In addition, we identify four patterns of developers: 1) developers who primarily respond to only negative reviews, 2) developers who primarily respond to negative reviews or to reviews based on their contents, 3) developers who primarily respond to reviews which are posted shortly after the latest release of their app, and 4) developers who primarily respond to reviews which are posted long after the latest release of their app. We perform a qualitative analysis of developer responses to understand what drives developers to respond to a review. We manually analyzed a statistically representative random sample of 347 reviews with responses for the top ten apps with the highest number of developer responses. We identify seven drivers that make a developer respond to a review, of which the most important ones are to thank the users for using the app and to ask the user for more details about the reported issue. Our findings show that it can be worthwhile for app owners to respond to reviews, as responding may lead to an increase in the given rating. In addition, our findings show that studying the dialogue between user and developer can provide valuable insights that can lead to improvements in the app store and user support process.
C1 [Hassan, Safwat; Bezemer, Cor-Paul; Hassan, Ahmed E.] Queens Univ, SAIL, Kingston, ON, Canada.
   [Tantithamthavorn, Chakkrit] Univ Adelaide, Sch Comp Sci, Adelaide, SA, Australia.
C3 Queens University - Canada; University of Adelaide
RP Hassan, S (corresponding author), Queens Univ, SAIL, Kingston, ON, Canada.
EM shassan@cs.queensu.ca; chakkrit.tantithamthavorn@adelaide.edu.au;
   bezemer@cs.queensu.ca; ahmed@cs.queensu.ca
RI Ali, Ahmed/HOF-4672-2023; Hassan, Safwat/JWP-1498-2024; Hassan,
   Ahmed/AAB-7241-2019; KHALIFA, AHMED khalifa/HKF-2246-2023
OI KHALIFA, AHMED khalifa/0000-0002-2918-7572; Tantithamthavorn,
   Chakkrit/0000-0002-5516-9984; Bezemer, Cor-Paul/0000-0002-0474-5718
FU Grants-in-Aid for Scientific Research [16J03360] Funding Source: KAKEN
CR Akdeniz, 2013, GOOGL PLAY CRAWL
   Anderson DR, 2001, WILDLIFE SOC B, V29, P311
   [Anonymous], 2012, MULTILEVEL ANAL INTR
   App Annie, 2013, APP AN APP DAT IND S
   Bates D., 2017, Package "lme4
   Borgatti S., Introduction to grounded theory
   Eisenhauer JG, 2009, TEACH STAT, V31, P42, DOI 10.1111/j.1467-9639.2009.00364.x
   Fox J., 2017, Package "car
   GEHAN EA, 1965, BIOMETRIKA, V52, P203, DOI 10.1093/biomet/52.1-2.203
   Guzman E., 2014, Association for Computing Machinery, P352
   Guzman E, 2014, INT REQUIR ENG CONF, P153, DOI 10.1109/RE.2014.6912257
   HANLEY JA, 1982, RADIOLOGY, V143, P29, DOI 10.1148/radiology.143.1.7063747
   Harman M., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P108, DOI 10.1109/MSR.2012.6224306
   Harrell F.E. J., 2017, Package "Hmisc ."
   Iacob C., 2014, Mobile Computing, Applications, and Services. MobiCASE 2013. Lecture Notes of the Institute for Computer Sciences, V130, DOI [10.1007/978-3-319-05452-0_4., DOI 10.1007/978-3-319-05452-0_4]
   Iacob C, 2013, IEEE WORK CONF MIN S, P41, DOI 10.1109/MSR.2013.6624001
   Khalid H, 2015, IEEE SOFTWARE, V32, P70, DOI 10.1109/MS.2014.50
   Khalid H, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1474, DOI 10.1109/ICSE.2013.6606749
   Khalid MFA, 2015, IEEE INT RF MICROW, P35, DOI 10.1109/RFM.2015.7587707
   Khandkar S.H., 2009, Open Coding
   Long J.D., 2003, Ordinal Analysis of Behavioral Data
   Maalej W, 2015, INT REQUIR ENG CONF, P116, DOI 10.1109/RE.2015.7320414
   Martens W., 2016, IEEE T SOFTWARE ENG, P1
   Martin P, 77 WILL NOT DOWNLOAD
   Martin W, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P123, DOI 10.1109/MSR.2015.19
   McIlroy S, 2017, IEEE SOFTWARE, V34, P64, DOI 10.1109/MS.2015.149
   McIlroy S, 2016, EMPIR SOFTW ENG, V21, P1067, DOI 10.1007/s10664-015-9375-7
   Moran K, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P673, DOI 10.1145/2786805.2786857
   Oh Jeungmin, 2013, Proceedings of the ACM SIGCHI Conference on Human Factors in Computing Systems, CHI'13, P1809
   Pagano D, 2013, S VIS LANG HUM CEN C, P125, DOI 10.1109/RE.2013.6636712
   Perez S, 2017, APPLE WILL FINALLY L
   Romano J., 2006, P ANN M SO ASS I RES
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Snijders T. A. B., Encyclopedia of Statistics in Behavioral Science
   Tantithamthavorn C, 2016, IEEE T SOFTWARE ENG, V42, P1092, DOI 10.1109/TSE.2016.2553030
   Thelwall M, 2010, J AM SOC INF SCI TEC, V61, P2544, DOI 10.1002/asi.21416
   Tourani P., 2014, CASCON, P34
NR 37
TC 45
Z9 49
U1 1
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2018
VL 23
IS 3
BP 1275
EP 1312
DI 10.1007/s10664-017-9538-9
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA GH6DH
UT WOS:000433532300004
DA 2024-07-18
ER

PT J
AU Li, XL
   Wong, WE
   Gao, RZ
   Hu, LH
   Hosono, S
AF Li, Xuelin
   Wong, W. Eric
   Gao, Ruizhi
   Hu, Linghuan
   Hosono, Shigeru
TI Genetic Algorithm-based Test Generation for Software Product Line with
   the Integration of Fault Localization Techniques
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software product line; Genetic algorithm; Test generation;
   Debugging/fault localization; Coverage; EXAM score
ID MUTATION; MODELS
AB In response to the highly competitive market and the pressure to cost-effectively release good-quality software, companies have adopted the concept of software product line to reduce development cost. However, testing and debugging of each product, even from the same family, is still done independently. This can be very expensive. To solve this problem, we need to explore how test cases generated for one product can be used for another product. We propose a genetic algorithm-based framework which integrates software fault localization techniques and focuses on reusing test specifications and input values whenever feasible. Case studies using four software product lines and eight fault localization techniques were conducted to demonstrate the effectiveness of our framework. Discussions on factors that may affect the effectiveness of the proposed framework is also presented. Our results indicate that test cases generated in such a way can be easily reused (with appropriate conversion) between different products of the same family and help reduce the overall testing and debugging cost.
C1 [Li, Xuelin; Wong, W. Eric; Gao, Ruizhi; Hu, Linghuan] Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
   [Hosono, Shigeru] NEC Corp Ltd, Serv Business Dev Div, Tokyo, Japan.
C3 University of Texas System; University of Texas Dallas; NEC Corporation
RP Wong, WE (corresponding author), Univ Texas Dallas, Dept Comp Sci, Richardson, TX 75083 USA.
EM ewong@utdallas.edu
OI Li, Xuelin/0000-0001-7204-0616
CR Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Ahmed MA, 2008, COMPUT OPER RES, V35, P3107, DOI 10.1016/j.cor.2007.01.012
   Ahmed Z.H., 2010, Int. J. Biometrics Bioinform., V3, P96
   Andrews JH, 2006, IEEE T SOFTWARE ENG, V32, P608, DOI 10.1109/TSE.2006.83
   Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 1977, The analysis of contingency tables
   [Anonymous], TECHNICAL REPORT
   [Anonymous], 2004, Understanding Probability
   [Anonymous], 2002, 023 NIST
   Beohar H, 2016, SCI COMPUT PROGRAM, V123, P42, DOI 10.1016/j.scico.2015.06.005
   Bergey JK, 2010, TECHNICAL REPORT
   Bertolino A., 2003, SOFTWARE PRODUCT FAM, P181
   Bürdek J, 2015, LECT NOTES COMPUT SC, V9033, P84, DOI 10.1007/978-3-662-46675-9_6
   Chen TY, 2013, IEEE T RELIAB, V62, P226, DOI 10.1109/TR.2013.2240898
   Do H, 2006, IEEE T SOFTWARE ENG, V32, P733, DOI 10.1109/TSE.2006.92
   Dustin E, 2009, WHY AUTOMATE AUTOMAT
   Engström E, 2011, INFORM SOFTWARE TECH, V53, P2, DOI 10.1016/j.infsof.2010.05.011
   Ensan Faezeh, 2012, Advanced Information Systems Engineering. Proceedings 24th International Conference, CAiSE 2012, P613, DOI 10.1007/978-3-642-31095-9_40
   Fischer S, 2016, 2016 IEEE/ACM 9TH INTERNATIONAL WORKSHOP ON SEARCH-BASED SOFTWARE TESTING (SBST), P15, DOI [10.1145/2897010.2897011, 10.1109/SBST.2016.011]
   FORGY EW, 1965, BIOMETRICS, V21, P768
   Freeman D.H., 1987, APPL CATEGORICAL DAT
   Gao RZ, 2017, SOFTWARE QUAL J, V25, P131, DOI 10.1007/s11219-015-9295-1
   GOEL AL, 1985, IEEE T SOFTWARE ENG, V11, P1411, DOI 10.1109/TSE.1985.232177
   Goodman L.A., 1984, ANAL CROSS CLASSIFIC
   Guo JM, 2011, J SYST SOFTWARE, V84, P2208, DOI 10.1016/j.jss.2011.06.026
   Hall RJ, 2015, AUTOMAT SOFTW ENG, V12, P41
   Harman M, 2014, 18TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE (SPLC 2014), VOL 1, P5, DOI 10.1145/2648511.2648513
   Hartigan J. A., 1979, Applied Statistics, V28, P100, DOI 10.2307/2346830
   Henard C, 2014, LECT NOTES COMPUT SC, V8636, P92
   Henard C, 2014, IEEE T SOFTWARE ENG, V40, P650, DOI 10.1109/TSE.2014.2327020
   Henard C, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1245, DOI 10.1109/ICSE.2013.6606689
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Kakarontzas G, 2008, 2008 INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE FOR MODELLING CONTROL & AUTOMATION, VOLS 1 AND 2, P146, DOI 10.1109/CIMCA.2008.84
   Lee K, 2002, LECT NOTES COMPUT SC, V2319, P62
   Liu C, 2006, IEEE T SOFTWARE ENG, V32, P831, DOI 10.1109/TSE.2006.105
   Lopez-Herrejon R. E., 2015, 8 IEEE INT C SOFTW T, P1, DOI DOI 10.1109/ICSTW.2015.7107435
   MacQueen J., 1967, P 5 BERK S MATH STAT, P281
   MATHUR AP, 2008, FDN SOFTWARE TESTING
   Michael CC, 2001, IEEE T SOFTWARE ENG, V27, P1085, DOI 10.1109/32.988709
   Mitchell M., 1998, INTRO GENETIC ALGORI
   Mohamed Ali M, 2010, 7 INT C INF SYST INF, P1
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Nebut C, 2003, 18TH IEEE INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING, PROCEEDINGS, P263, DOI 10.1109/ASE.2003.1240317
   Northrop L., 2001, SOFTWARE PRODUCT LIN
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Perrouin Gilles, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P459, DOI 10.1109/ICST.2010.43
   Perrouin G, 2012, SOFTWARE QUAL J, V20, P605, DOI 10.1007/s11219-011-9160-9
   Pohl K., 2005, Software Product Line Engineering: Foundations, Principles and Techniques, V1, DOI [10.1007/3-540-28901-1, DOI 10.1007/3-540-28901-1]
   Pohl K, 2006, COMMUN ACM, V49, P78, DOI 10.1145/1183236.1183271
   Reis S., 2006, P INT WORKSHOP SOFTW, P5
   Sinha S., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P295, DOI 10.1109/SPLC.2011.38
   Sivanandam S., 2008, Introduction to genetic algorithms, DOI [10.1007/978-3-540-73190-0_7, DOI 10.1007/978-3-540-73190-0]
   Telcordia Technologies, 1998, US MAN XSUDS TOOLS
   VESSEY I, 1985, INT J MAN MACH STUD, V23, P459, DOI 10.1016/S0020-7373(85)80054-7
   Wang S, 2012, 201220 SIM RES LAB
   Wang S, 2015, J SYST SOFTWARE, V103, P370, DOI 10.1016/j.jss.2014.08.024
   Wong W. E., 2012, Proceedings of the 2012 IEEE Sixth International Conference on Software Security and Reliability (SERE 2012), P21, DOI 10.1109/SERE.2012.12
   Wong WE, 2007, P INT COMP SOFTW APP, P449
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wong WE, 2012, IEEE T SYST MAN CY C, V42, P378, DOI 10.1109/TSMCC.2011.2118751
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   WONG WE, 1995, J SYST SOFTWARE, V31, P185, DOI 10.1016/0164-1212(94)00098-0
   WONG WE, 1995, SOFTWARE QUAL J, V4, P69, DOI 10.1007/BF00404650
   Xie XY, 2013, ACM T SOFTW ENG METH, V22, DOI 10.1145/2522920.2522924
   Xie XY, 2013, INFORM SOFTWARE TECH, V55, P866, DOI 10.1016/j.infsof.2012.08.008
   Xu Z., 2013, P 17 INT SOFTWARE PR, P52, DOI DOI 10.1145/2491627.2491650
   Yu YB, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P201, DOI 10.1145/1368088.1368116
NR 67
TC 36
Z9 40
U1 0
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2018
VL 23
IS 1
BP 1
EP 51
DI 10.1007/s10664-016-9494-9
PG 51
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FU9TG
UT WOS:000424199400001
DA 2024-07-18
ER

PT J
AU Malhotra, R
   Khanna, M
AF Malhotra, Ruchika
   Khanna, Megha
TI An empirical study for software change prediction using imbalanced data
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Change proneness; Data sampling; Empirical validation; Imbalanced
   learning; MetaCost learners; Object-oriented metrics
ID STATIC CODE ATTRIBUTES; CHANGE-PRONE CLASSES; FAULT-PRONENESS; METRICS;
   CLASSIFICATION; FRAMEWORK; QUALITY; SUITE
AB Software change prediction is crucial in order to efficiently plan resource allocation during testing and maintenance phases of a software. Moreover, correct identification of change-prone classes in the early phases of software development life cycle helps in developing cost-effective, good quality and maintainable software. An effective software change prediction model should equally recognize change-prone and not change-prone classes with high accuracy. However, this is not the case as software practitioners often have to deal with imbalanced data sets where instances of one type of class is much higher than the other type. In such a scenario, the minority classes are not predicted with much accuracy leading to strategic losses. This study evaluates a number of techniques for handling imbalanced data sets using various data sampling methods and MetaCost learners on six open-source data sets. The results of the study advocate the use of resample with replacement sampling method for effective imbalanced learning.
C1 [Malhotra, Ruchika] Delhi Technol Univ, Dept Software Engn, Delhi, India.
   [Khanna, Megha] Delhi Technol Univ, Delhi, India.
C3 Delhi Technological University; Delhi Technological University
RP Malhotra, R (corresponding author), Delhi Technol Univ, Dept Software Engn, Delhi, India.
EM ruchikamalhotra2004@yahoo.com; meghakhanna86@gmail.com
RI Malhotra, Ruchika/ABC-3126-2020
OI Malhotra, Ruchika/0000-0003-3872-6213
CR Aman H, 2006, IEICE T INF SYST, VE89D, P1347, DOI 10.1093/ietisy/e89-d.4.1347
   [Anonymous], P 18 INT C EV ASS SO
   [Anonymous], P 37 INT C SOFTW ENG
   [Anonymous], 2014, P 2014 INT C DAT MIN
   [Anonymous], 2012, IEEE T SYST MAN CY C, DOI DOI 10.1109/TSMCC.2011.2161285
   [Anonymous], PATTERN RECOGNITION
   [Anonymous], P INT C SOFTW TEST V
   [Anonymous], P 9 IEEE WORK C MIN
   Apandi ZFM, 2011, IEEE DATA MINING, P243, DOI 10.1109/DMO.2011.5976535
   Arisholm E, 2010, J SYST SOFTWARE, V83, P2, DOI 10.1016/j.jss.2009.06.055
   Bekkar M., 2013, J Inf Eng Appl, V3, P15, DOI DOI 10.5121/IJDKP.2013.3402
   Bieman JM, 2001, PROC IEEE INT CONF S, P580, DOI 10.1109/ICSM.2001.972775
   Breiman L., 2001, Mach. Learn., V45, P5
   Briand L. C., 2001, Empirical Software Engineering, V6, P11, DOI 10.1023/A:1009815306478
   Briand L. C., 1998, Empirical Software Engineering, V3, P65, DOI 10.1023/A:1009783721306
   Briand LC, 2000, J SYST SOFTWARE, V51, P245, DOI 10.1016/S0164-1212(99)00102-8
   Briand LC, 1999, IEEE T SOFTWARE ENG, V25, P91, DOI 10.1109/32.748920
   Cartwright M, 2000, IEEE T SOFTWARE ENG, V26, P786, DOI 10.1109/32.879814
   Catal C, 2009, INFORM SCIENCES, V179, P1040, DOI 10.1016/j.ins.2008.12.001
   Chawla NV, 2002, J ARTIF INTELL RES, V16, P321, DOI 10.1613/jair.953
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   de Carvalho AB, 2010, J SYST SOFTWARE, V83, P868, DOI 10.1016/j.jss.2009.12.023
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Domingos Pedro, 1999, P 5 ACM SIGKDD INT C, P155, DOI DOI 10.1145/312129.312220
   Elish MO, 2013, J SOFTW-EVOL PROC, V25, P407, DOI 10.1002/smr.1549
   Friedman J, 2000, ANN STAT, V28, P337, DOI 10.1214/aos/1016218223
   Gao K., 2015, SOFTWARE ENG KNOWLED, DOI 10.18293/SEKE2015-182
   Haibo He, 2009, IEEE Transactions on Knowledge and Data Engineering, V21, P1263, DOI 10.1109/TKDE.2008.239
   Hall M. A., 2000, P 17 INT C MACH LEAR, P359, DOI DOI 10.5555/645529.657793
   Hall MA, 2003, IEEE T KNOWL DATA EN, V15, P1437, DOI 10.1109/TKDE.2003.1245283
   Harman M, 2014, LECT NOTES COMPUT SC, V8636, P240
   Haykin S, 2004, Neural Networks, V2, P41, DOI DOI 10.5555/541500
   Henderson-Sellers B., 1996, Object-Oriented Metrics, measures of complexity
   Hongmin Lu, 2012, Empirical Software Engineering, V17, P200, DOI 10.1007/s10664-011-9170-z
   Jeni LA, 2013, INT CONF AFFECT, P245, DOI 10.1109/ACII.2013.47
   Kamei Yasutaka, 2007, 2007 First International Symposium on Empirical Software Engineering and Measurement, P196
   Khoshgoftaar TM, 2006, SOFTWARE QUAL J, V14, P85, DOI 10.1007/s11219-006-7597-z
   Koru AG, 2007, J SYST SOFTWARE, V80, P63, DOI 10.1016/j.jss.2006.05.017
   Koru AG, 2005, IEEE T SOFTWARE ENG, V31, P625, DOI 10.1109/TSE.2005.89
   Kubat M., 1997, ADDRESSING CURSE IMB, V97, P179
   Lessmann S, 2008, IEEE T SOFTWARE ENG, V34, P485, DOI 10.1109/TSE.2008.35
   Li M, 2012, AUTOMAT SOFTW ENG, V19, P201, DOI 10.1007/s10515-011-0092-1
   Liu Y, 2006, LECT NOTES ARTIF INT, V3918, P107
   López V, 2013, INFORM SCIENCES, V250, P113, DOI 10.1016/j.ins.2013.07.007
   Malhotra R, 2015, APPL SOFT COMPUT, V27, P504, DOI 10.1016/j.asoc.2014.11.023
   Malhotra R, 2013, INT J MACH LEARN CYB, V4, P273, DOI 10.1007/s13042-012-0095-7
   Martin R. C., 2002, AGILE SOFTWARE DEV P
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P637, DOI 10.1109/TSE.2007.70721
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Munkhdalai T, 2015, BMC BIOINFORMATICS, V16, DOI 10.1186/1471-2105-16-S7-S6
   Murphy K. P., 2006, Technical Report
   Olague HM, 2007, IEEE T SOFTWARE ENG, V33, P402, DOI 10.1109/TSE.2007.1015.
   Pai GJ, 2007, IEEE T SOFTWARE ENG, V33, P675, DOI [10.1109/TSE.2007.70722, 10.1109/TSE.2007.70722.]
   Phua C, 2004, SIGKDD Explorations, V6, P50, DOI DOI 10.1145/1007730.1007738
   Romano D., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P303, DOI 10.1109/ICSM.2011.6080797
   Seiffert C, 2014, INFORM SCIENCES, V259, P571, DOI 10.1016/j.ins.2010.12.016
   Seliya N, 2011, WIRES DATA MIN KNOWL, V1, P448, DOI 10.1002/widm.38
   Shatnawi R., 2012, 2012 International Conference on Innovations in Information Technology (IIT), P54, DOI 10.1109/INNOVATIONS.2012.6207774
   Singh Y, 2010, SOFTWARE QUAL J, V18, P3, DOI 10.1007/s11219-009-9079-6
   STONE M, 1974, J R STAT SOC B, V36, P111, DOI 10.1111/j.2517-6161.1974.tb00994.x
   Su CT, 2007, IEEE T KNOWL DATA EN, V19, P1321, DOI 10.1109/TKDE.2007.190623
   Van Hulse J, 2009, INT CONF DAT MIN WOR, P507, DOI 10.1109/ICDMW.2009.35
   Visa S., 2005, P 16 MIDW ART INT CO, P67
   Wang S, 2013, IEEE T RELIAB, V62, P434, DOI 10.1109/TR.2013.2259203
   Weiss Gary M., 2007, Proceedings of the International Conference on Data Mining. DMIN 2007, P35
   Weiss G.M., 2004, ACM SIGKDD Explorations Newsletter, V6, DOI DOI 10.1145/1007730.1007734
   Weng Cheng G., 2008, P 7 AUSTRALASIAN DAT, V87, P27, DOI DOI 10.1109/IJCNN.2011.6033267
   Witten IH, 2011, MOR KAUF D, P3, DOI 10.1016/B978-0-12-374856-0.00001-8
   Xu RF, 2015, COGN COMPUT, V7, P226, DOI 10.1007/s12559-015-9319-y
   Yang PY, 2014, IEEE T CYBERNETICS, V44, P445, DOI 10.1109/TCYB.2013.2257480
   Zhang XW, 2011, PROCEEDINGS OF THE 2011 INTERNATIONAL SYMPOSIUM - TECHNICAL INNOVATION OF INDUSTRIAL TRANSFORMATION AND STRUCTURAL ADJUSTMENT, P85
   Zhou YM, 2009, IEEE T SOFTWARE ENG, V35, P607, DOI 10.1109/TSE.2009.32
NR 72
TC 47
Z9 50
U1 0
U2 13
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2017
VL 22
IS 6
BP 2806
EP 2851
DI 10.1007/s10664-016-9488-7
PG 46
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FI3MB
UT WOS:000411865400003
DA 2024-07-18
ER

PT J
AU Menzies, T
   Yang, Y
   Mathew, G
   Boehm, B
   Hihn, J
AF Menzies, Tim
   Yang, Ye
   Mathew, George
   Boehm, Barry
   Hihn, Jairus
TI Negative results for software effort estimation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Effort estimation; COCOMO; CART; Nearest neighbor; Clustering; Feature
   selection; Prototype generation; Bootstrap sampling; Effect size; A12
ID PREDICTION; LESSONS
AB More than half the literature on software effort estimation (SEE) focuses on comparisons of new estimation methods. Surprisingly, there are no studies comparing state of the art latest methods with decades-old approaches. Accordingly, this paper takes five steps to check if new SEE methods generated better estimates than older methods. Firstly, collect effort estimation methods ranging from "classical" COCOMO (parametric estimation over a pre-determined set of attributes) to "modern" (reasoning via analogy using spectral-based clustering plus instance and feature selection, and a recent "baseline method" proposed in ACM Transactions on Software Engineering). Secondly, catalog the list of objections that lead to the development of post-COCOMO estimation methods. Thirdly, characterize each of those objections as a comparison between newer and older estimation methods. Fourthly, using four COCOMO-style data sets (from 1991, 2000, 2005, 2010) and run those comparisons experiments. Fifthly, compare the performance of the different estimators using a Scott-Knott procedure using (i) the A12 effect size to rule out "small" differences and (ii) a 99 % confident bootstrap procedure to check for statistically different groupings of treatments. The major negative result of this paper is that for the COCOMO data sets, nothing we studied did any better than Boehms original procedure. Hence, we conclude that when COCOMO-style attributes are available, we strongly recommend (i) using that data and (ii) use COCOMO to generate predictions. We say this since the experiments of this paper show that, at least for effort estimation, how data is collected is more important than what learner is applied to that data.
C1 [Menzies, Tim; Mathew, George] North Carolina State Univ, CS, Raleigh, NC 27695 USA.
   [Yang, Ye] Stevens Inst, SSE, Hoboken, NJ USA.
   [Boehm, Barry] Univ Southern Calif, CS, Los Angeles, CA USA.
   [Hihn, Jairus] CALTECH, Jet Prop Lab, Pasadena, CA USA.
C3 North Carolina State University; Stevens Institute of Technology;
   University of Southern California; California Institute of Technology;
   National Aeronautics & Space Administration (NASA); NASA Jet Propulsion
   Laboratory (JPL)
RP Menzies, T (corresponding author), North Carolina State Univ, CS, Raleigh, NC 27695 USA.
EM tim.menzies@gmail.com; ye.yang@stevens.edu; george.meg91@gmail.com;
   barryboehm@gmail.com; jairus.hihn@jpl.nasa.gov
RI Lang, Ming/HIK-0758-2022; Yang, Ye/GZM-4812-2022; Menzies,
   Tim/X-7680-2019; yang, yang/HGT-7999-2022
OI Menzies, Tim/0000-0002-5040-3196; 
FU Direct For Computer & Info Scie & Enginr; Division of Computing and
   Communication Foundations [1506586] Funding Source: National Science
   Foundation
CR [Anonymous], 2000, Software Cost Estimation with COCOMO II
   [Anonymous], 2013, P ICCM
   [Anonymous], P ASE 11
   [Anonymous], IEEE T SOFTW ENG
   [Anonymous], 1963, CONJECTURES REFUTAT
   [Anonymous], 1995, Empirical methods for artificial intelligence
   Arcuri A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/1985793.1985795
   Auer M, 2006, IEEE T SOFTWARE ENG, V32, P83, DOI 10.1109/TSE.2006.1599418
   BAKER DML, 2007, THESIS
   Black R, 1977, RADCTR77116 BOE COMP
   Boehm B, 2000, IEEE SOFTWARE, V17, P14, DOI 10.1109/52.877854
   Boehm BW., 1981, Software Engineering Economics
   Breiman L, 1998, BIOMETRICS, DOI [10.1201/9781315139470, DOI 10.2307/2530946]
   Burgess CJ, 2001, INFORM SOFTWARE TECH, V43, P863, DOI 10.1016/S0950-5849(01)00192-6
   Chen ZH, 2005, IEEE SOFTWARE, V22, P38, DOI 10.1109/MS.2005.151
   Chen Zhihoa., 2005, PROMISE 05
   Chulani S, 1999, IEEE T SOFTW ENG, V25
   Corazza A., 2010, Proceedings of the 6th International Conference on Predictive Models in Software Engineering, p4:1, DOI [10.1145/1868328.1868335, DOI 10.1145/1868328.1868335]
   Cordero R, 1997, 12 COCOMO FOR
   Dabney JB, 2002, RETURN INVESTMENT 4
   Dejaeger K, 2012, IEEE T SOFTWARE ENG, V38, P375, DOI 10.1109/TSE.2011.55
   Efron B., 1993, INTRO BOOTSTRAP, VVolume 914, DOI DOI 10.1007/978-1-4899-4541-9
   Freiman F. R., 1979, IEEE PINY WORKSH QUA, P32
   Herd J., 1977, RADCTR77220 DOT ASS
   Ingold D., 2013, Proceedings of the 2013 international conference on software and system process, P29
   Jensen R, 1983, IMPROVED MACROLEVEL, P88
   Jorgensen M, 2004, J SYST SOFTWARE, V70, P37, DOI 10.1016/S0164-1212(02)00156-5
   Jorgensen M, 2007, SYSTEMATIC REV SOFTW
   Jorgensen M, 2015, 2015 CREST WORKSH
   Jorgensen M, 2009, IEEE T SOFTWARE ENG, V35, P368, DOI 10.1109/TSE.2009.2
   Kadoda G., 2000, EXPERIENCES USING CA
   Kampenes VB, 2007, INFORM SOFTWARE TECH, V49, P1073, DOI 10.1016/j.infsof.2007.02.015
   Keung J, 2008, ASWEC 2008: 19TH AUSTRALIAN SOFTWARE ENGINEERING CONFERENCE, PROCEEDINGS, P229
   Keung J, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P294
   Keung JW, 2008, IEEE T SOFTWARE ENG, V34, P471, DOI 10.1109/TSE.2008.34
   Kirsopp C, 2002, IEEE P, P149
   Kocaguneli E, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P882, DOI 10.1109/ICSE.2013.6606637
   Kocaguneli E, 2013, IEEE T SOFTWARE ENG, V39, P1040, DOI 10.1109/TSE.2012.88
   Kocaguneli E, 2013, EMPIR SOFTW ENG, V18, P1, DOI 10.1007/s10664-011-9189-1
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P1403, DOI 10.1109/TSE.2011.111
   Kocaguneli E, 2012, IEEE T SOFTWARE ENG, V38, P425, DOI 10.1109/TSE.2011.27
   Li J., 2007, P 3 INT WORKSH PRED, P6
   Li J., 2006, Proceedings of the 2006 ACM/IEEE international symposium on Empirical software engineering, P74
   Li JZ, 2008, EMPIR SOFTW ENG, V13, P63, DOI 10.1007/s10664-007-9054-4
   Li YF, 2009, EMPIR SOFTW ENG, V14, P603, DOI 10.1007/s10664-008-9104-6
   Lokan C, 2006, ACM IEEE INT S EMP S
   Lokan C, 2009, INT SYMP EMP SOFTWAR, P111, DOI 10.1109/ESEM.2009.5316019
   Mao K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P1205, DOI 10.1109/ICSE.2013.6606679
   Menzies T, 2006, IEEE T SOFTW ENG
   Menzies T., 2005, P ICSE
   Menzies T., 2015, Sharing Data and Models in Software Engineering, P239
   Menzies T, 2013, MSR 13
   Menzies T, 2013, IEEE T SOFTWARE ENG, V39, P822, DOI 10.1109/TSE.2012.83
   Menzies T, 2012, EMPIR SOFTW ENG, V17, P1, DOI 10.1007/s10664-011-9193-5
   Miller A., 2002, SUBSET SELECTION REG
   Minku LL, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P446, DOI 10.1145/2568225.2568228
   Minku LL, 2013, INFORM SOFTWARE TECH, V55, P1512, DOI 10.1016/j.infsof.2012.09.012
   Minku LL, 2011, PRINCIPLED EVALUATIO, V106
   Mittas N, 2013, IEEE T SOFTWARE ENG, V39, P537, DOI 10.1109/TSE.2012.45
   Molokken-Ostvold K, 2008, J SYST SOFTWARE, V81, P2106, DOI 10.1016/j.jss.2008.03.058
   Murphy-Hill E, 2012, IEEE T SOFTWARE ENG, V38, P5, DOI 10.1109/TSE.2011.41
   Myrtveit I, 2005, IEEE T SOFTWARE ENG, V31, P380, DOI 10.1109/TSE.2005.58
   Papakroni V, 2013, THESIS
   Park R., 1988, 4 COCOMO US GROUP M
   Passos C., 2011, ESEM'11
   Putnam L, 1976, MACROESTIMATING METH, P38
   Scanniello G, 2013, IEEE INT CONF AUTOM, P640, DOI 10.1109/ASE.2013.6693126
   Shaw M, 2001, PROC INT CONF SOFTW, P656, DOI 10.1109/ICSE.2001.919142
   Shepperd M, 1997, IEEE T SOFTWARE ENG, V23, P736, DOI 10.1109/32.637387
   Shepperd M, 2012, INFORM SOFTWARE TECH, V54, P820, DOI 10.1016/j.infsof.2011.12.008
   Spareref.com, 2002, NAS SHUT CHECK LAUNC
   Valerdi R, 2011, INCOSE INT S
   Walkerden F., 1999, Empirical Software Engineering, V4, P135, DOI 10.1023/A:1009872202035
   WALSTON CE, 1977, IBM SYST J, V16, P54, DOI 10.1147/sj.161.0054
   Whigham PA, 2015, ACM T SOFTW ENG METH, V24, DOI 10.1145/2738037
   WOLVERTO.RW, 1974, IEEE T COMPUT, VC 23, P615, DOI 10.1109/T-C.1974.224002
NR 76
TC 39
Z9 39
U1 0
U2 12
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2017
VL 22
IS 5
BP 2658
EP 2683
DI 10.1007/s10664-016-9472-2
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA FE0PC
UT WOS:000407921200011
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Jbara, A
   Feitelson, DG
AF Jbara, Ahmad
   Feitelson, Dror G.
TI How programmers read regular code: a controlled experiment using eye
   tracking
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Eye-tracking; Controlled experiment; Code regularity; Software
   complexity
ID MOVEMENTS; COMPREHENSION; FIXATIONS
AB Regular code, which includes repetitions of the same basic pattern, has been shown to have an effect on code comprehension: a regular function can be just as easy to comprehend as a non-regular one with the same functionality, despite being significantly longer and including more control constructs. It has been speculated that this effect is due to leveraging the understanding of the first instances to ease the understanding of repeated instances of the pattern. To verify and quantify this effect, we use eye tracking to measure the time and effort spent reading and understanding regular code. The experimental subjects were 18 students and 2 faculty members. The results are that time and effort invested in the initial code segments are indeed much larger than those spent on the later ones, and the decay in effort can be modeled by an exponential model. This shows that syntactic code complexity metrics (such as LOC and MCC) need to be made context-sensitive, e.g. by giving reduced weight to repeated segments according to their place in the sequence. However, it is not the case that repeated code segments are actually read more and more quickly. Rather, initial code segments receive more focus and are looked at more times, while later ones may be only skimmed. Further, a few recurring reading patterns have been identified, which together indicate that in general code reading is far from being purely linear, and exhibits significant variability across experimental subjects.
C1 [Jbara, Ahmad; Feitelson, Dror G.] Hebrew Univ Jerusalem, Sch Comp Sci & Engn, IL-91904 Jerusalem, Israel.
   [Jbara, Ahmad] Netanya Acad Coll, Sch Math & Comp Sci, IL-42100 Netanya, Israel.
C3 Hebrew University of Jerusalem
RP Jbara, A (corresponding author), Hebrew Univ Jerusalem, Sch Comp Sci & Engn, IL-91904 Jerusalem, Israel.; Jbara, A (corresponding author), Netanya Acad Coll, Sch Math & Comp Sci, IL-42100 Netanya, Israel.
EM ahmadjbara@cs.huji.ac.il; feit@cs.huji.ac.il
FU ISRAEL SCIENCE FOUNDATION [407/13]
FX This research was supported by the ISRAEL SCIENCE FOUNDATION (grant no.
   407/13). Many thanks to the reviewers of this extended version who
   helped to improve the paper considerably in terms of analysis and
   presentation relative to the original conference version.
CR [Anonymous], 2014, 22 INT C PROGR COMPR, DOI DOI 10.1145/2597008.2597140
   Bednarik R., 2006, Proceedings. ETRA 2006. Symposium on Eye Tracking Research and Applications, P125, DOI 10.1145/1117309.1117356
   Beller M, 2015, INT C PROGRAM COMPRE, P240, DOI 10.1109/ICPC.2015.34
   Binkley D, 2009, INT C PROGRAM COMPRE, P158, DOI 10.1109/ICPC.2009.5090039
   Brooks A, 1994, EFOCS594RR94172 U ST
   Busjahn T, 2015, INT C PROGRAM COMPRE, P255, DOI 10.1109/ICPC.2015.36
   Busjahn Teresa, 2011, P 11 KOL CALL INT C, p1s9
   Cornelissen B, 2011, IEEE T SOFTWARE ENG, V37, P341, DOI 10.1109/TSE.2010.47
   CROSBY ME, 1990, COMPUTER, V23, P24, DOI 10.1109/2.48797
   Feitelson D. G., 2015, ARXIV151208409CSSE
   Fenton NE, 1998, COURSE TECHNOLOGY
   Fritz T, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P402, DOI 10.1145/2568225.2568266
   Gilchrist ID, 2000, CURR BIOL, V10, P1209, DOI 10.1016/S0960-9822(00)00729-6
   Goldberg JH, 1999, INT J IND ERGONOM, V24, P631, DOI 10.1016/S0169-8141(98)00068-7
   Halstead M. H., 1977, ELEMENTS SOFTWARE SC
   Hua Wang, 2006, Proceedings. ETRA 2006. Symposium on Eye Tracking Research and Applications, P73, DOI 10.1145/1117309.1117346
   Imazato A, 2013, LECT NOTES COMPUT SC, V7983, P298, DOI 10.1007/978-3-642-39259-7_24
   Jbara A, 2014, QUANTIFICATION UNPUB
   Jbara A., 2014, P 22 INT C PROGR COM, P300, DOI [10.1145/2597008.2597801, DOI 10.1145/2597008.2597801]
   Jbara A, 2014, EMPIR SOFTW ENG, V19, P1261, DOI 10.1007/s10664-013-9275-7
   JUST MA, 1980, PSYCHOL REV, V87, P329, DOI 10.1037/0033-295X.87.4.329
   Kenneth HolmqvistMarcus Nystrom., 2011, Eye Tracking: A Comprehensive Guide to Methods and Measures
   Krein J. L., 2011, Proceedings of the 2011 Second International Workshop on Replication in Empirical Software Engineering Research (RESER 2011), P25, DOI 10.1109/RESER.2011.10
   McCabe T. J., 1976, IEEE Transactions on Software Engineering, VSE-2, P308, DOI 10.1109/TSE.1976.233837
   Mennie N, 2007, EXP BRAIN RES, V179, P427, DOI 10.1007/s00221-006-0804-0
   Mondal M, 2015, PROC IEEE INT CONF S, P91, DOI 10.1109/ICSM.2015.7332455
   MURRAY WS, 1988, Q J EXP PSYCHOL-A, V40, P693, DOI 10.1080/14640748808402294
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   OMAN P, 1994, J SYST SOFTWARE, V24, P251, DOI 10.1016/0164-1212(94)90067-1
   Pelz JB, 2001, 2001 INTERNATIONAL CONFERENCE ON IMAGE PROCESSING, VOL II, PROCEEDINGS, P12, DOI 10.1109/ICIP.2001.958410
   Rayner K, 1996, PERCEPT PSYCHOPHYS, V58, P734, DOI 10.3758/BF03213106
   Renshaw JA, 2004, CHI 04 HUM FACT COMP, P1437, DOI [10.1145/985921.986084, DOI 10.1145/985921.986084]
   Rodeghero P, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P390, DOI 10.1145/2568225.2568247
   Rodeghero P, 2015, INT SYMP EMP SOFTWAR, P11
   Sasaki Y, 2012, ASIA PAC SOFWR ENG, P120, DOI 10.1109/APSEC.2012.59
   SCHNEIDER T, 1990, NUCL ACIDS RES, V18
   Shao JQ, 2003, CAN J ELECT COMPUT E, V28, P69, DOI 10.1109/CJECE.2003.1532511
   Shard B., 2012, P S EYE TRACK RES AP, P381
   Sharif Bonita, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P196, DOI 10.1109/ICPC.2010.41
   Sharma B., 2010, P 26 IEEE INT C SOFT, P1, DOI DOI 10.1109/ICSM.2010.5609582
   SHNEIDERMAN B, 1977, INT J MAN MACH STUD, V9, P465, DOI 10.1016/S0020-7373(77)80014-X
   Siegmund J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P378, DOI 10.1145/2568225.2568252
   SOLOWAY E, 1984, IEEE T SOFTWARE ENG, V10, P595, DOI 10.1109/TSE.1984.5010283
   Uwano H., 2005, Eye Tracking Research and Applications Symposium (ETRA), V2005, P133
   Vinju JJ, 2012, 12 WORK C SOURC COD
   Welker KD, 1997, J SOFTW MAINT-RES PR, V9, P127, DOI 10.1002/(SICI)1096-908X(199705)9:3<127::AID-SMR149>3.0.CO;2-S
   WEYUKER EJ, 1988, IEEE T SOFTWARE ENG, V14, P1357, DOI 10.1109/32.6178
   Yusuf S, 2007, INT C PROGRAM COMPRE, P113
NR 48
TC 35
Z9 35
U1 0
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2017
VL 22
IS 3
BP 1440
EP 1477
DI 10.1007/s10664-016-9477-x
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA EW4GE
UT WOS:000402459200017
DA 2024-07-18
ER

PT J
AU Soetens, QD
   Demeyer, S
   Zaidman, A
   Pérez, J
AF Soetens, Quinten David
   Demeyer, Serge
   Zaidman, Andy
   Perez, Javier
TI Change-based test selection: an empirical evaluation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Fine grained changes; Test selection; Developer tests; Dynamic binding
ID REGRESSION; PRIORITIZATION
AB Regression test selection (i.e., selecting a subset of a given regression test suite) is a problem that has been studied intensely over the last decade. However, with the increasing popularity of developer tests as the driver of the test process, more fine-grained solutions that work well within the context of the Integrated Development Environment (IDE) are in order. Consequently, we created two variants of a test selection heuristic which exploit fine-grained changes recorded during actual development inside the IDE. One variant only considers static binding of method invocations while the other variant takes dynamic binding into account. This paper investigates the tradeoffs between these two variants in terms of the reduction (i.e., How many tests could we omit from the test suite, and how much did we gain in runtime execution?) as well as the fault detection ability of the reduced test suite (i.e., Were tests omitted erroneously?). We used our approach on three distinct cases, two open source cases -Cruisecontrol and PMD- and one industrial case - Historia. Our results show that only considering static binding reduces the test suite significantly but occasionally omits a relevant test; considering dynamic binding rarely misses a test yet often boils down to running the complete test suite. Nevertheless, our analysis provides indications on when a given variant is more appropriate.
C1 [Soetens, Quinten David; Demeyer, Serge; Perez, Javier] Univ Antwerp, Middelheimlaan 1, B-2020 Antwerp, Belgium.
   [Zaidman, Andy] Delft Univ Technol, Delft, Netherlands.
C3 University of Antwerp; Delft University of Technology
RP Soetens, QD (corresponding author), Univ Antwerp, Middelheimlaan 1, B-2020 Antwerp, Belgium.
EM quinten.soetens@uantwerpen.be; serge.demeyer@uantwerpen.be;
   A.E.Zaidman@tudelft.nl; javier.perez@uantwerpen.be
RI Demeyer, Serge/JMQ-7341-2023; Zaidman, Andy/O-6542-2014
OI Demeyer, Serge/0000-0002-4463-2945; Zaidman, Andy/0000-0003-2413-3935
FU Interuniversity Attraction Poles Programme - Belgian State Belgian
   Science Policy, project MoVES; Institute for the Promotion of Innovation
   through Science and Technology in Flanders (IWT-Vlaanderen) [120028];
   NWO TestRoots project, the Netherlands
FX This work has been sponsored by (i) the Interuniversity Attraction Poles
   Programme - Belgian State Belgian Science Policy, project MoVES; (ii)
   the Institute for the Promotion of Innovation through Science and
   Technology in Flanders (IWT-Vlaanderen) under project number 120028
   entitled "Change-centric Quality Assurance (CHAQ)"; (iii) the NWO
   TestRoots project, the Netherlands.
CR Andrews JH, 2005, PROC INT CONF SOFTW, P402, DOI 10.1145/1062455.1062530
   [Anonymous], 2011, P INT S FDN SOFTW EN
   [Anonymous], 1999, Testing Object-Oriented Systems: Models, Patterns, and Tools
   Basili V.R., 1994, Encyclopedia of Software Engineering, P528532
   Beck Kent L., 2003, Test Driven Development By Example
   Beller M, 2015, P 37 INT C SOFTW ENG, V2, P559
   Beller M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P179, DOI 10.1145/2786805.2786843
   Bennett K. H., 2000, P C FUT SOFTW ENG, P73
   Catal C, 2013, SOFTWARE QUAL J, V21, P445, DOI 10.1007/s11219-012-9181-z
   DANIEL B, 2009, REASSERT SUGGESTING
   Demeyer S, 1999, TECH REP
   Dösinger S, 2012, IEEE INT CONF AUTOM, P374, DOI 10.1145/2351676.2351751
   Ebraert P., 2007, P 2007 INT C DYN LAN, P3, DOI DOI 10.1145/1352678.1352680
   Engström E, 2010, INFORM SOFTWARE TECH, V52, P14, DOI 10.1016/j.infsof.2009.07.001
   Engström E, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P22
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Fowler M., 2006, TECH REP
   Garousi V, 2010, J SYST SOFTWARE, V83, P2251, DOI 10.1016/j.jss.2010.07.012
   Graves TL, 2001, ACM T SOFTW ENG METH, V10, P184, DOI 10.1145/367008.367020
   Hattori L., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P235, DOI 10.1145/1810295.1810339
   Hunter JD, 2007, COMPUT SCI ENG, V9, P90, DOI 10.1109/MCSE.2007.55
   Hurdugaci V, 2012, EUR CON SFTWR MTNCE, P11, DOI 10.1109/CSMR.2012.12
   Mansour N, 2001, J SYST SOFTWARE, V57, P79, DOI 10.1016/S0164-1212(00)00119-9
   McGregor John., 2007, Journal of Object Technology, V6
   Meszaros G., 2006, XUNIT TEST PATTERNS
   Offutt A. J., 1996, ACM Transactions on Software Engineering and Methodology, V5, P99, DOI 10.1145/227607.227610
   Parsai A, 2014, LECT NOTES BUS INF P, V199, P166
   Qusef A., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P63, DOI 10.1109/ICSM.2011.6080773
   Robbes R, 2007, ELECTRON NOTES THEOR, V166, P93, DOI 10.1016/j.entcs.2006.06.015
   Robbes R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P847, DOI 10.1145/1368088.1368219
   Rothermel G, 2001, IEEE T SOFTWARE ENG, V27, P929, DOI 10.1109/32.962562
   Runeson P, 2006, IEEE SOFTWARE, V23, P22, DOI 10.1109/MS.2006.91
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Saff D., 2004, Software Engineering Notes, V29, P76, DOI 10.1145/1013886.1007523
   Soetens QD, 2013, EUR CON SFTWR MTNCE, P101, DOI 10.1109/CSMR.2013.20
   Soetens QD, 2012, EUR CON SFTWR MTNCE, P535, DOI 10.1109/CSMR.2012.70
   Tillmann N, 2006, IEEE SOFTW, V23
   Van Rompaey B, 2009, EUR CON SFTWR MTNCE, P209, DOI 10.1109/CSMR.2009.39
   Venolia G, 2005, TECH REP
   Weijers Joep, 2012, THESIS
   Yin RK, 2002, Applied Social Research Methods Series, V34
   Yoo S, 2012, SOFTW TEST VERIF REL, V22, P67, DOI [10.1002/stv.430, 10.1002/stvr.430]
   Zaidman A, 2011, EMPIR SOFTW ENG, V16, P325, DOI 10.1007/s10664-010-9143-7
NR 43
TC 19
Z9 21
U1 1
U2 10
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2016
VL 21
IS 5
BP 1990
EP 2032
DI 10.1007/s10664-015-9405-5
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DU2BX
UT WOS:000382017100004
DA 2024-07-18
ER

PT J
AU Passos, L
   Teixeira, L
   Dintzner, N
   Apel, S
   Wasowski, A
   Czarnecki, K
   Borba, P
   Guo, JM
AF Passos, Leonardo
   Teixeira, Leopoldo
   Dintzner, Nicolas
   Apel, Sven
   Wasowski, Andrzej
   Czarnecki, Krzysztof
   Borba, Paulo
   Guo, Jianmei
TI Coevolution of variability models and related software artifacts
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Variability; Evolution; Software product lines; Patterns; Linux
ID PROGRAM FEATURES; PRODUCT LINES; CODE; EVOLUTION; LINUX
AB Variant-rich software systems offer a large degree of customization, allowing users to configure the target system according to their preferences and needs. Facing high degrees of variability, these systems often employ variability models to explicitly capture user-configurable features (e.g., systems options) and the constraints they impose. The explicit representation of features allows them to be referenced in different variation points across different artifacts, enabling the latter to vary according to specific feature selections. In such settings, the evolution of variability models interplays with the evolution of related artifacts, requiring the two to evolve together, or coevolve. Interestingly, little is known about how such coevolution occurs in real-world systems, as existing research has focused mostly on variability evolution as it happens in variability models only. Furthermore, existing techniques supporting variability evolution are usually validated with randomly-generated variability models or evolution scenarios that do not stem from practice. As the community lacks a deep understanding of how variability evolution occurs in real-world systems and how it relates to the evolution of different kinds of software artifacts, it is not surprising that industry reports existing tools and solutions ineffective, as they do not handle the complexity found in practice. Attempting to mitigate this overall lack of knowledge and to support tool builders with insights on how variability models coevolve with other artifact types, we study a large and complex real-world variant-rich software system: the Linux kernel. Specifically, we extract variability-coevolution patterns capturing changes in the variability model of the Linux kernel with subsequent changes in Makefiles and C source code. From the analysis of the patterns, we report on findings concerning evolution principles found in the kernel, and we reveal deficiencies in existing tools and theory when handling changes captured by our patterns.
C1 [Passos, Leonardo; Czarnecki, Krzysztof] Univ Waterloo, Elect & Comp Engn, Waterloo, ON, Canada.
   [Guo, Jianmei] Univ Waterloo, Dept Elect & Comp Engn, Waterloo, ON, Canada.
   [Teixeira, Leopoldo] Univ Fed Pernambuco, Informat Ctr, Recife, PE, Brazil.
   [Borba, Paulo] Univ Fed Pernambuco, Informat Ctr, Software Dev, Recife, PE, Brazil.
   [Dintzner, Nicolas] Delft Univ Technol, Delft, Netherlands.
   [Apel, Sven] Univ Passau, Software Prod Lines, Passau, Germany.
   [Wasowski, Andrzej] IT Univ Copenhagen, Copenhagen, Denmark.
C3 University of Waterloo; University of Waterloo; Universidade Federal de
   Pernambuco; Universidade Federal de Pernambuco; Delft University of
   Technology; University of Passau; IT University Copenhagen
RP Passos, L (corresponding author), Univ Waterloo, Elect & Comp Engn, Waterloo, ON, Canada.
EM lpassos@gsd.uwaterloo.ca; lmt@cin.ufpe.br; N.J.R.Dintzner@tudelft.nl;
   apel@uni-passau.de; wasowski@itu.dk; kczarnec@gsd.uwaterloo.ca;
   phmb@cin.ufpe.br; gjm@gsd.uwaterloo.ca
RI Borba, Paulo/C-5617-2013; Teixeira, Leopoldo M/G-5937-2016
OI Borba, Paulo/0000-0002-0381-2843; Apel, Sven/0000-0003-3687-2233;
   Wasowski, Andrzej/0000-0003-0532-2685; Teixeira,
   Leopoldo/0000-0002-6154-1666
FU CAPES [BEX 0459-10-0]; NECSIS; CNPq [141909/2010-2, 245311/2012-2];
   FACEPE [APQ-0570-1.03/14]; German Research Foundation [AP 206/4, AP
   206/5, AP 206/6]; ARTEMIS JU [295397 VARIES]; Danish Agency for Science,
   Technology and Innovation
FX This work was partially funded by CAPES (BEX 0459-10-0), NECSIS, CNPq
   (141909/2010-2 and 245311/2012-2), FACEPE (APQ-0570-1.03/14), the German
   Research Foundation (AP 206/4, AP 206/5, and AP 206/6), ARTEMIS JU
   (295397 VARIES), and the Danish Agency for Science, Technology and
   Innovation.
CR Alves V., 2006, Proceedings of the 5th international conference on Generative Programming and Component Engineering, P201, DOI [10.1145/1173706, DOI 10.1145/1173706]
   [Anonymous], ANTIPATTERNS IDENTIF
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2013, P 7 INT WORKSH VAR M, DOI DOI 10.1145/2430502.2430526
   [Anonymous], 2014, MSR 14, DOI [DOI 10.1145/2597073.2597124, 10.1145/2597073.2597124]
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   Babar MA, 2010, IEEE SOFTWARE, V27, P89, DOI 10.1109/MS.2010.77
   Baresi L, 2012, COMPUTER, V45, P42, DOI 10.1109/MC.2012.289
   BATORY DS, 1988, IEEE T SOFTWARE ENG, V14, P1711, DOI 10.1109/32.9057
   BERGER T, 2010, COMPUTER SCIENCE
   Berger T., 2010, P INT C AUT SOFTW EN, P73, DOI DOI 10.1145/1858996.1859010
   Berger T, 2014, LECT NOTES COMPUT SC, V8767, P302, DOI 10.1007/978-3-319-11653-2_19
   Berger T, 2013, IEEE T SOFTWARE ENG, V39, P1611, DOI 10.1109/TSE.2013.34
   Borba P, 2012, THEOR COMPUT SCI, V455, P2, DOI 10.1016/j.tcs.2012.01.031
   Bovet D. P., 2005, Understanding the Linux Kernel: from I/O ports to process management
   Corbet J., 2013, Linux kernel development: How fast it is going, who is doing it, what they are doing, and who is sponsoring it, V2013
   Corbet Jonathan, 2005, Linux device drivers, VThird
   Deprez JC, 2000, PROG COMPREHEN, P69, DOI 10.1109/WPC.2000.852481
   Dietrich C., 2012, Em: Proceedings of the 16th International Software Product Line Conference-Volume, V1, P21
   Dintzner N, 2013, P INT WORKSH VAR MOD
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Ernst MD, 2002, IEEE T SOFTWARE ENG, V28, P1146, DOI 10.1109/TSE.2002.1158288
   Favre JM, 1997, PROG COMPREHEN, P29, DOI 10.1109/WPC.1997.601260
   Feitelson DG, 2012, J SYST SOFTWARE, V85, P859, DOI 10.1016/j.jss.2011.10.050
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Godfrey MW, 2000, PROC IEEE INT CONF S, P131, DOI 10.1109/ICSM.2000.883030
   Guo JM, 2012, EXPERT SYST APPL, V39, P4987, DOI 10.1016/j.eswa.2011.10.014
   Holdschick H., 2012, 4 INT WORKSHOP FEATU, P70, DOI [10.1145/2377816.2377826, DOI 10.1145/2377816.2377826]
   Hunsen C, 2014, EMPIR SOFTW IN PRESS
   Izurieta C., 2006, ISESE 06, P204, DOI DOI 10.1145/1159733.1159765
   Janota M, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P13
   Kästner C, 2007, SPLC 2007: 11TH INTERNATIONAL SOFTWARE PRODUCT LINE CONFERENCE, PROCEEDINGS, P223, DOI 10.1109/SPLINE.2007.12
   Kästner C, 2011, OOPSLA 11: PROCEEDINGS OF THE 2011 ACM INTERNATIONAL CONFERENCE ON OBJECT ORIENTED PROGRAMMING SYSTEMS LANGUAGES AND APPLICATIONS, P805
   Kästner C, 2009, J OBJECT TECHNOL, V8, P59
   Kästner C, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P311, DOI 10.1145/1368088.1368131
   Kang K. C., 1990, Technical Report
   Kiczales G, 1997, LECT NOTES COMPUT SC, V1241, P220, DOI 10.1007/BFb0053381
   Kim M, 2013, IEEE T SOFTWARE ENG, V39, P45, DOI 10.1109/TSE.2012.16
   Kuchana P., 2004, Software architecture design patterns in Java
   Kunrong Chen, 2010, Proceedings of the 18th IEEE International Conference on Program Comprehension (ICPC 2010), P1, DOI 10.1109/ICPC.2010.40
   Le D, 2011, S VIS LANG HUM CEN C, P143, DOI 10.1109/VLHCC.2011.6070391
   Liebig Jorg, 2011, AOSD 11
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Lotufo R, 2010, LECT NOTES COMPUT SC, V6287, P136, DOI 10.1007/978-3-642-15579-6_10
   Love Robert, 2010, Linux Kernel Development
   Marcus A, 2005, PROG COMPREHEN, P33, DOI 10.1109/WPC.2005.33
   Massa AnthonyJ., 2002, Embedded Software Development with eCos
   Nadi S, 2013, J SOFTW EVOL PROCESS
   Nadi S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P140, DOI 10.1145/2568225.2568283
   Nadi S, 2012, EUR CON SFTWR MTNCE, P107, DOI 10.1109/CSMR.2012.21
   Neves L, 2011, GPCE 11: PROCEEDINGS OF THE TENTH INTERNATIONAL CONFERENCE ON GENERATIVE PROGRAMMING AND COMPONENT ENGINEERING, P33
   Passos L., 2013, Proc. of the 17th Software Product Line Conference (SPLC), P91
   Passos L., 2012, 4 INT WORKSHOP FEATU, P62, DOI [10.1145/2377816.2377825, DOI 10.1145/2377816.2377825]
   Pleuss A, 2012, J SYST SOFTWARE, V85, P2261, DOI 10.1016/j.jss.2011.08.008
   Rosenmüller M, 2009, DATA KNOWL ENG, V68, P1493, DOI 10.1016/j.datak.2009.07.013
   Rosenmuller M., 2008, SETMDM 08, P1
   Seidl C., 2012, P 16 INT SOFTW PROD, V1, P76, DOI DOI 10.1145/2362536.2362550
   She S., 2010, VaMoS, P45
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Spencer H, 1992, P USENIX SEC S USENI
   Sun J, 2005, IEEE INT C ENG COMP, P303
   Tartler Reinhard, 2012, International Journal on Software Tools for Technology Transfer, V14, P531, DOI 10.1007/s10009-012-0225-2
   Thüm T, 2009, PROC INT CONF SOFTW, P254, DOI 10.1109/ICSE.2009.5070526
   Thum T., 2011, Proceedings of the 2011 15th International Software Product Line Conference (SPLC 2011), P191, DOI 10.1109/SPLC.2011.53
   Valente MT, 2012, IEEE T SOFTWARE ENG, V38, P737, DOI 10.1109/TSE.2011.57
   van Gurp J, 2001, WORKING IEEE/IFIP CONFERENCE ON SOFTWARE ARCHITECTURE, PROCEEDINGS, P45, DOI 10.1109/WICSA.2001.948406
   Venkateswaran S., 2008, Essential Linux device drivers
   WILDE N, 1995, J SOFTW MAINT-RES PR, V7, P49, DOI 10.1002/smr.4360070105
   Wright C, 2002, USENIX ASSOCIATION PROCEEDINGS OF THE 11TH USENIX SECURITY SYMPOSIUM, P17
NR 69
TC 24
Z9 26
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2016
VL 21
IS 4
BP 1744
EP 1793
DI 10.1007/s10664-015-9364-x
PG 50
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VF
UT WOS:000379060700010
OA Green Published
DA 2024-07-18
ER

PT J
AU Dietrich, J
   Jezek, K
   Brada, P
AF Dietrich, Jens
   Jezek, Kamil
   Brada, Premek
TI What Java developers know about compatibility, and why this matters
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Java; Binary compatibility; API compatibility; Empirical study; User
   survey; Linking
AB Real-world programs are neither monolithic nor static-they are constructed using platform and third party libraries, and both programs and libraries continuously evolve in response to change pressure. In case of the Java language, rules defined in the Java Language and Java Virtual Machine Specifications define when library evolution is safe. These rules distinguish between three types of compatibility-binary, source and behavioural. We claim that some of these rules are counter intuitive and not well-understood by many developers. We present the results of a survey where we quizzed developers about their understanding of the various types of compatibility. 414 developers responded to our survey. We find that while most programmers are familiar with the rules of source compatibility, they generally lack knowledge about the rules of binary and behavioural compatibility. This can be problematic when organisations switch from integration builds to technologies that require dynamic linking, such as OSGi. We have assessed the gravity of the problem by studying how often linkage-related problems are referenced in issue tracking systems, and find that they are common.
C1 [Dietrich, Jens] Massey Univ, Sch Engn & Adv Technol, Turitea Palmerston North Campus, Palmerston North, New Zealand.
   [Jezek, Kamil; Brada, Premek] Univ W Bohemia, Fac Sci Appl, Univ 8, Plzen 30614, Czech Republic.
C3 Massey University; University of West Bohemia Pilsen
RP Dietrich, J (corresponding author), Massey Univ, Sch Engn & Adv Technol, Turitea Palmerston North Campus, Palmerston North, New Zealand.
EM j.b.dietrich@massey.ac.nz; kjezek@ntis.zcu.cz; brada@ntis.zcu.cz
RI Brada, Premek/GRR-9271-2022; Brada, Premek/D-1180-2016; Brada,
   Premek/Z-2715-2019
OI Brada, Premek/0000-0001-5617-6396; Brada, Premek/0000-0001-5617-6396;
   Dietrich, Jens/0000-0001-9019-6550
FU European Regional Development Fund (ERDF), project "NTIS-New
   Technologies for the Information Society", European Centre of Excellence
   [CZ.1.05/1.1.00/02.0090]
FX The work was partially supported by European Regional Development Fund
   (ERDF), project "NTIS-New Technologies for the Information Society",
   European Centre of Excellence, CZ.1.05/1.1.00/02.0090.
CR [Anonymous], 2007, EVOLVING JAVA BASED
   [Anonymous], 2012, P 20 ACM SIGSOFT S F
   [Anonymous], 2012, OSGI COR REL 5
   Balaban I, 2005, ACM SIGPLAN NOTICES, V40, P265, DOI 10.1145/1103845.1094832
   Barr M, 2003, PROC IEEE INT CONF S, P129, DOI 10.1109/ICSM.2003.1235414
   Bauml J, 2009, 2009 35TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, PROCEEDINGS, P428, DOI 10.1109/SEAA.2009.80
   Belguidoum M, 2008, ELECTRON NOTES THEOR, V215, P75, DOI 10.1016/j.entcs.2008.06.022
   Beugnard A, 1999, COMPUTER, V32, P38, DOI 10.1109/2.774917
   Bloch Joshua, 2005, Java Puzzlers: Traps, Pitfalls, and Corner Cases
   Buckley A, 2007, DIFFERENT KINDS COMP
   Cardelli L., 1991, TYPEFUL PROGRAMMING
   Chow KS, 1996, INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE, PROCEEDINGS, P359, DOI 10.1109/ICSM.1996.565039
   Corwin J, 2003, ACM SIGPLAN NOTICES, V38, P241, DOI 10.1145/949343.949326
   Darcy JD, 2009, JDK RELEASE TYPES CO
   Darcy Joseph D., 2008, KINDS COMPATIBILITY
   Dietrich J, 2014, P CSRMR 14
   Dietrich J, 2014, 2014 SOFTWARE EVOLUTION WEEK - IEEE CONFERENCE ON SOFTWARE MAINTENANCE, REENGINEERING, AND REVERSE ENGINEERING (CSMR-WCRE), P64, DOI 10.1109/CSMR-WCRE.2014.6747226
   Dig D, 2006, J SOFTW MAINT EVOL-R, V18, P83, DOI 10.1002/smr.328
   Dig D, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P441, DOI 10.1145/1368088.1368148
   Dmitriev M, 2002, ACM SIGPLAN NOTICES, V37, P373, DOI 10.1145/583854.582453
   Drossopoulou S, 1998, ACM SIGPLAN NOTICES, V33, P341, DOI 10.1145/286942.286974
   FORMAN IR, 1995, SIGPLAN NOTICES, V30, P426, DOI 10.1145/217839.217880
   Gosling J., 2012, Java Language Specification, V7
   Henkel J, 2005, PROC INT CONF SOFTW, P274
   HOARE CAR, 1969, COMMUN ACM, V12, P576, DOI 10.1145/363235.363259
   Jezek Kamil, 2013, 2013 39th Euromicro Conference on Software Engineering and Advanced Applications (SEAA), P145, DOI 10.1109/SEAA.2013.58
   Keller R., 1998, ECOOP'98 - Object-Oriented Programming. 12th European Conference. Proceedings, P307, DOI 10.1007/BFb0054097
   Lehman M. M., 1985, Program Evolution: Processes of Software Change
   Lindholm Tim., 2012, The Java virtual machine speci cation, V7
   Mens T, 2008, PROC IEEE INT CONF S, P386, DOI 10.1109/ICSM.2008.4658087
   MEYER B, 1992, COMPUTER, V25, P40, DOI 10.1109/2.161279
   OSGi Alliance, 2010, SEM VERS TECHN WHIT
   Pukall M, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P989, DOI 10.1145/1985793.1985970
   Raemaekers S, 2014, TECHNICAL REPORT
   Raemaekers S, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P378, DOI 10.1109/ICSM.2012.6405296
   Robertson I, 2013, JAVAONE
   Savga Ilie, 2007, P 6 INT C GEN PROGR, P175
   Tempero E, 2010, ASIA PAC SOFWR ENG, P336, DOI 10.1109/APSEC.2010.46
NR 38
TC 8
Z9 9
U1 1
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2016
VL 21
IS 3
BP 1371
EP 1396
DI 10.1007/s10664-015-9389-1
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA DQ2VO
UT WOS:000379061700019
DA 2024-07-18
ER

PT J
AU Ceccato, M
   Di Penta, M
   Falcarin, P
   Ricca, F
   Torchiano, M
   Tonella, P
AF Ceccato, Mariano
   Di Penta, Massimiliano
   Falcarin, Paolo
   Ricca, Filippo
   Torchiano, Marco
   Tonella, Paolo
TI A family of experiments to assess the effectiveness and efficiency of
   source code obfuscation techniques
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Empirical studies; Software obfuscation; Program comprehension
AB Context: code obfuscation is intended to obstruct code understanding and, eventually, to delay malicious code changes and ultimately render it uneconomical. Although code understanding cannot be completely impeded, code obfuscation makes it more laborious and troublesome, so as to discourage or retard code tampering. Despite the extensive adoption of obfuscation, its assessment has been addressed indirectly either by using internal metrics or taking the point of view of code analysis, e.g., considering the associated computational complexity. To the best of our knowledge, there is no publicly available user study that measures the cost of understanding obfuscated code from the point of view of a human attacker. Aim: this paper experimentally assesses the impact of code obfuscation on the capability of human subjects to understand and change source code. In particular, it considers code protected with two well-known code obfuscation techniques, i.e., identifier renaming and opaque predicates. Method: We have conducted a family of five controlled experiments, involving undergraduate and graduate students from four Universities. During the experiments, subjects had to perform comprehension or attack tasks on decompiled clients of two Java network-based applications, either obfuscated using one of the two techniques, or not. To assess and compare the obfuscation techniques, we measured the correctness and the efficiency of the performed task. Results: -at least for the tasks we considered-simpler techniques (i.e., identifier renaming) prove to be more effective than more complex ones (i.e., opaque predicates) in impeding subjects to complete attack tasks.
C1 [Ceccato, Mariano; Tonella, Paolo] Fdn Bruno Kessler, Cit, Trento, Italy.
   [Di Penta, Massimiliano] Univ Sannio, Dept Engn, Benevento, Italy.
   [Falcarin, Paolo] Univ E London, Sch Architecture Comp & Engn, London E15 4LZ, England.
   [Ricca, Filippo] Univ Genoa, DIBRIS, Genoa, Italy.
   [Torchiano, Marco] Politecn Torino, Turin, Italy.
C3 Fondazione Bruno Kessler; University of Sannio; University of East
   London; University of Genoa; Polytechnic University of Turin
RP Ceccato, M (corresponding author), Fdn Bruno Kessler, Cit, Trento, Italy.
EM ceccato@fbk.eu; dipenta@unisannio.it; falcarin@uel.ac.uk;
   filippo.ricca@disi.unige.it; marco.torchiano@polito.it; tonella@fbk.eu
RI Ceccato, Mariano/T-7139-2019; Di Penta, Massimiliano/AAF-9656-2021;
   Ricca, Filippo/ABB-3276-2020; Tonella, Paolo/C-1702-2015; Falcarin,
   Paolo/B-6635-2015
OI Ceccato, Mariano/0000-0001-7325-0316; Tonella,
   Paolo/0000-0003-3088-0339; Torchiano, Marco/0000-0001-5328-368X;
   Falcarin, Paolo/0000-0003-1933-5348; Di Penta,
   Massimiliano/0000-0002-0340-9747
CR Anckaert B, 2007, QOP'07: PROCEEDINGS OF THE 2007 ACM WORKSHOP ON QUALITY OF PROTECTION, P15
   Baker R.D., 1995, Randomization Tests
   Ceccato M, 2009, EFFECTIVENESS SOURCE
   Ceccato M, 2007, SEVENTH IEEE INTERNATIONAL WORKING CONFERENCE ON SOURCE CODE ANALYSIS AND MANIPULATION, PROCEEDINGS, P27
   Ceccato M, 2009, INT C PROGRAM COMPRE, P178, DOI 10.1109/ICPC.2009.5090041
   Chang H, 2002, ACM WORKSH SEC PRIV
   Cohen J., 1988, STAT POWER ANAL BEHA
   Collberg C., 1998, Conference Record of POPL '98: 25th ACM SIGPLAN-SIGACT. Symposium on Principles of Programming Languages, P184, DOI 10.1145/268946.268962
   Collberg C, 2009, SUREPTITIOUS SOFTWAR
   Collberg C., 1997, TAXONOMY OBFUSCATING
   Cordy JR, 2006, SCI COMPUT PROGRAM, V61, P190, DOI 10.1016/j.scico.2006.04.002
   Devore J.L., 2007, Probability and Statistics for Engineering and the Sciences, V7th
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Falcarin P, 2006, IEEE ADV INFORM NETW
   Falcarin P, 2011, IEEE SOFTWARE, V28, P24, DOI 10.1109/MS.2011.34
   Fiutem R, 1999, J SYST SOFTWARE, V44, P213, DOI 10.1016/S0164-1212(98)10058-4
   Goto H., 2000, Information Security. Third International Workshop, ISW 2000. Proceedings (Lecture Notes in Computer Science Vol.1975), P82
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Horne B, 2001, ACM WORKSH SEC PRIV
   Iversen G.R., 1987, ANAL VARIANCE
   Juristo N., 2013, BASICS SOFTWARE ENG
   Motulsky H.J., 2010, INTUITIVE BIOSTATIST, V2nd
   Oppenheim A.N., 1992, QUESTIONNAIRE DESIGN
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Ricca F, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P361, DOI 10.1145/1368088.1368138
   Ricca F, 2010, IEEE T SOFTWARE ENG, V36, P96, DOI 10.1109/TSE.2009.69
   Ricca F, 2009, INFORM SOFTWARE TECH, V51, P270, DOI 10.1016/j.infsof.2008.01.007
   Scandariato R, 2008, ARES 2008: PROCEEDINGS OF THE THIRD INTERNATIONAL CONFERENCE ON AVAILABILITY, SECURITY AND RELIABILITY, P434, DOI 10.1109/ARES.2008.21
   Sheskin DJ., 2003, HDB PARAMETRIC NONPA, DOI [10.1201/9781420036268, DOI 10.1201/9781420036268]
   Sutherland I, 2006, COMPUT SECUR, V25, P221, DOI 10.1016/j.cose.2005.11.002
   TYMA P, 2000, Patent No. 6102966
   Udupa SK, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P45
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
NR 33
TC 49
Z9 54
U1 0
U2 17
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2014
VL 19
IS 4
BP 1040
EP 1074
DI 10.1007/s10664-013-9248-x
PG 35
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA AH8LE
UT WOS:000336388500008
OA Green Submitted, Green Accepted
DA 2024-07-18
ER

PT J
AU Koziolek, H
   Schlich, B
   Becker, S
   Hauck, M
AF Koziolek, Heiko
   Schlich, Bastian
   Becker, Steffen
   Hauck, Michael
TI Performance and reliability prediction for evolving service-oriented
   software systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software architecture; Performance prediciton; Reliablity prediction;
   Case study
ID PALLADIO COMPONENT MODEL; DESIGN
AB During software system evolution, software architects intuitively trade off the different architecture alternatives for their extra-functional properties, such as performance, maintainability, reliability, security, and usability. Researchers have proposed numerous model-driven prediction methods based on queuing networks or Petri nets, which claim to be more cost-effective and less error-prone than current practice. Practitioners are reluctant to apply these methods because of the unknown prediction accuracy and work effort. We have applied a novel model-driven prediction method called Q-ImPrESS on a large-scale process control system from ABB consisting of several million lines of code. This paper reports on the achieved performance prediction accuracy and reliability prediction sensitivity analyses as well as the effort in person hours for achieving these results.
C1 [Koziolek, Heiko; Schlich, Bastian] ABB Corp Res, Ind Software Syst, D-68526 Ladenburg, Germany.
   [Becker, Steffen] Univ Paderborn, D-33098 Paderborn, Germany.
   [Hauck, Michael] Forschungszentrum Informat FZI, Karlsruhe, Germany.
C3 ABB; University of Paderborn
RP Koziolek, H (corresponding author), ABB Corp Res, Ind Software Syst, Wallstadter Str 59, D-68526 Ladenburg, Germany.
EM heiko.koziolek@de.abb.com; bastian.schlich@de.abb.com;
   steffen.becker@upb.de; hauck@fzi.de
RI Koziolek, Heiko/AAF-5917-2020
FU European Union [FP7-215013]
FX This work was funded within the Q-ImPrESS research project (FP7-215013)
   by the European Union under the Information and Communication
   Technologies priority of FP7.
CR [Anonymous], P 1 JOINT WOSP SIPEW
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   Balsamo S, 2004, IEEE T SOFTWARE ENG, V30, P295, DOI 10.1109/TSE.2004.9
   Bause F., 1993, Proceedings. 5th International Workshop on Petri Nets and Performance Models (Cat. No.93TH0558-7), P14, DOI 10.1109/PNPM.1993.393439
   BECKER S, 2008, THESIS U OLDENBURG G
   Becker S, 2008, 10 QIMPRESS CONS
   Becker S, 2009, J SYST SOFTWARE, V82, P3, DOI 10.1016/j.jss.2008.03.066
   Brosch F, 2010, LECT NOTES COMPUT SC, V6093, P36, DOI 10.1007/978-3-642-13821-8_5
   Cheung L, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P111, DOI 10.1145/1368088.1368104
   CHEUNG RC, 1980, IEEE T SOFTWARE ENG, V6, P118, DOI 10.1109/TSE.1980.234477
   Cortellessa V, 2011, MODEL-BASED SOFTWARE PERFORMANCE ANALYSIS, P1, DOI 10.1007/978-3-642-13621-4
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   Franks G, 2009, IEEE T SOFTWARE ENG, V35, P148, DOI 10.1109/TSE.2008.74
   Gokhale SS, 2004, PERFORM EVALUATION, V58, P391, DOI 10.1016/j.peva.2004.04.003
   Gokhale SS, 2007, IEEE T DEPEND SECURE, V4, P32, DOI 10.1109/TDSC.2007.4
   Goseva-Popstojanova K, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P22, DOI 10.1109/ISSRE.2001.989455
   Goseva-Popstojanova K, 2001, PERFORM EVALUATION, V45, P179, DOI 10.1016/S0166-5316(01)00034-7
   Goseva-Popstojanova K, 2006, ISSRE 2006:17TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P197
   Goseva-Popstojanova K, 2005, 16TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P43, DOI 10.1109/ISSRE.2005.25
   Grassi V, 2007, J SYST SOFTWARE, V80, P528, DOI 10.1016/j.jss.2006.07.023
   Happe J, 2010, PERFORM EVALUATION, V67, P694, DOI 10.1016/j.peva.2009.07.006
   Hatvani L, 2010, P 2 INT WORKSH QUAL
   Huber N., 2010, 2010 32nd International Conference on Software Engineering (ICSE), P1, DOI 10.1145/1810295.1810297
   IEEE, 2008, 16332008 IEEE INC
   Immonen A, 2008, SOFTW SYST MODEL, V7, P49, DOI 10.1007/s10270-006-0040-x
   Jin Y, 2007, PROC INT CONF SOFTW, P540
   Kounev S, 2006, IEEE T SOFTWARE ENG, V32, P486, DOI 10.1109/TSE.2006.69
   Koziolek Heiko, 2010, Proceedings of the 2010 IEEE 21st International Symposium on Software Reliability Engineering (ISSRE 2010), P279, DOI 10.1109/ISSRE.2010.15
   Koziolek H, 2011, P 33 ACM IEEE INT C
   Koziolek H, 2010, Q IMPRESS PROJECT DE
   Koziolek H, 2008, LECT NOTES COMPUT SC, V5119, P58, DOI 10.1007/978-3-540-69814-2_6
   Koziolek H, 2010, PERFORM EVALUATION, V67, P634, DOI 10.1016/j.peva.2009.07.007
   LITTLEWOOD B, 1973, ROY STAT SOC C-APP, V22, P332
   Liu Y, 2005, IEEE T SOFTWARE ENG, V31, P928, DOI 10.1109/TSE.2005.127
   Martens A, 2011, EMPIR SOFTW ENG, V16, P587, DOI 10.1007/s10664-010-9142-8
   Masetti M, 2009, Q IMPRESS PROJECT DE
   McConnell S. C., 1993, Code complete: A practical handbook of software construction
   MILLER KW, 1992, IEEE T SOFTWARE ENG, V18, P33, DOI 10.1109/32.120314
   Mizan A., 2011, ICPE 7 1 Proceedings of the second joint WOSP/SIPEWinternational conference on Performance engineering, V39, P61
   Musa J. D., 1987, Software Reliability: Measure-ment, Prediction, Application
   Musa JohnD., 2004, Software Reliability Engineering: More Reliable Software Faster and Cheaper, V2nd
   Nagappan N., 2006, 28th International Conference on Software Engineering Proceedings, P452, DOI 10.1145/1134285.1134349
   Object Management Group (OMG), 2007, UML PROF MARTE BET 1
   Pietrantuono R, 2010, IEEE T SOFTWARE ENG, V36, P323, DOI 10.1109/TSE.2010.6
   ROLIA JA, 1995, IEEE T SOFTWARE ENG, V21, P689, DOI 10.1109/32.403785
   Rombach H. D., 2002, ENCY SOFTWARE ENG, V2, P578
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Sharma VS, 2007, J SYST SOFTWARE, V80, P493, DOI 10.1016/j.jss.2006.07.021
   Singh H, 2001, 12TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P12, DOI 10.1109/ISSRE.2001.989454
   Skuliber I, 2009, CONTEL 2009: PROCEEDINGS OF THE 10TH INTERNATIONAL CONFERENCE ON TELECOMMUNICATIONS, P131
   Smith C.U., 1990, Performance engineering of software systems, VSeventh
   SMITH CU, 2002, PERFORMANCE SOLUTION
   Snipes Will, 2009, 2009 20th International Symposium on Software Reliability Engineering (ISSRE 2009), P90, DOI 10.1109/ISSRE.2009.16
   Stammel J, 2009, P 1 WORKSH GI ARB LA, P87
   Trivedi K.S., 2001, Probability and statistics with reliability, queueing, and computer science applications, V2nd
   Wang WL, 2006, J SYST SOFTWARE, V79, P132, DOI 10.1016/j.jss.2005.09.004
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   Xu J., 2006, SIGSOFT SOFTW ENG NO, V31, P5
   Zhu LM, 2005, SOFTWARE QUAL J, V13, P357, DOI 10.1007/s11219-005-4251-0
NR 60
TC 14
Z9 16
U1 0
U2 42
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD AUG
PY 2013
VL 18
IS 4
BP 746
EP 790
DI 10.1007/s10664-012-9213-0
PG 45
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 174AX
UT WOS:000321126100004
DA 2024-07-18
ER

PT J
AU Murphy, B
AF Murphy, Brendan
TI The difficulties of building generic reliability models for software
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software Engineering; Models; Reliability; Risk; Development
AB The Software Engineering research community have spent considerable effort in developing models to predict the behaviour of software. A number of these models have been derived based on the pre and post behaviour of the development of software products, but when these models are applied to other products, the results are often disappointing. This appears to differentiate Software from other engineering disciplines that often depend on generic predictive models to verify the correctness of their products. This short paper discusses why other engineering disciplines have managed to create generalized models, the challenges faced by the Software industry to build these models, and the change we have made to our process in Microsoft to address some of these challenges.
C1 Microsoft Res, Cambridge CB3 0FB, England.
C3 Microsoft
RP Murphy, B (corresponding author), Microsoft Res, 7 JJ Thomson Ave, Cambridge CB3 0FB, England.
EM bmurphy@microsoft.com
CR [Anonymous], 2008, P 30 INT C SOFTW ENG
   Bartlett J., 1987, EVOLUTION FAULT TOLE
   Chen W-F., 1999, BRIDGE ENG HDB
   Kitchenham BA, 2007, IEEE T SOFTWARE ENG, V33, P316, DOI 10.1109/TSE.2007.1101
   Levidow B, 2000, IEEE INT C DEP SYST
   Rolt LTC, 1998, RED DANGER
   Zimmerman T, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P91, DOI 10.1145/1595696.1595713
NR 7
TC 0
Z9 0
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD FEB
PY 2012
VL 17
IS 1-2
SI SI
BP 18
EP 22
DI 10.1007/s10664-011-9184-6
PG 5
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 893GG
UT WOS:000300343600002
DA 2024-07-18
ER

PT J
AU Arias, TBC
   van der Spek, P
   Avgeriou, P
AF Arias, Trosky B. Callo
   van der Spek, Pieter
   Avgeriou, Paris
TI A practice-driven systematic review of dependency analysis solutions
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Review
DE Systematic review; Dependency analysis; Practice-driven; Large
   software-intensive systems; Architecture-driven; Evolvability
ID GOOGLE SCHOLAR; MODEL; EVOLUTION
AB When following architecture-driven strategies to develop large software-intensive systems, the analysis of the dependencies is not an easy task. In this paper, we report a systematic literature review on dependency analysis solutions. Dependency analysis concerns making dependencies due to interconnections between programs or system components explicit. The review is practice-driven because its research questions, execution, and reporting were influenced by the practice of a group of software architects at Philips Healthcare MRI. The review results in an overview and assessment of the state-of-the-art and applicability of dependency analysis. The overview provides insights about definitions related to dependency analysis, the sort of development activities that need dependency analysis, and the classification and description of a number of dependency analysis solutions. The contribution of this paper is for both practitioners and researchers. They can take it as a reference to learn about dependency analysis, match their own practice to the presented results, and to build similar overviews of other techniques and methods for other domains or types of systems.
C1 [Arias, Trosky B. Callo] Univ Groningen, NL-9747 AG Groningen, Netherlands.
   [van der Spek, Pieter] Vrije Univ Amsterdam, NL-1081 HV Amsterdam, Netherlands.
C3 University of Groningen; Vrije Universiteit Amsterdam
RP Arias, TBC (corresponding author), Univ Groningen, Nijenborgh 9, NL-9747 AG Groningen, Netherlands.
EM trosky@cs.rug.nl; pvdspek@cs.vu.nl; paris@cs.rug.nl
OI Avgeriou, Paris/0000-0002-7101-0754
CR AGARWAL MK, 2004, 15 IFIP IEEE INT WOR, P171
   Allen R., 1997, ACM Transactions on Software Engineering and Methodology, V6, P213, DOI 10.1145/258077.258078
   ALZAMIL Z, 2007, INT C SOFTW ENG ADV
   Arias TBC, 2008, WORK CONF REVERSE EN, P49, DOI 10.1109/WCRE.2008.11
   BALMAS F, 2005, INT C SOFTW MAINT
   Binkley D, 2005, PROC IEEE INT CONF S, P177
   BOHNET J, 2009, ACM S APPL COMP, P438
   Breivold Hongyu Pei, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering - Workshops, P82, DOI 10.1109/ASEW.2008.4686324
   Brereton P, 2007, J SYST SOFTWARE, V80, P571, DOI 10.1016/j.jss.2006.07.009
   BROWN A, 2001, IEEE IFIP INT S INT, P377
   CATALDO M, 2008, 2 INT S EMP SOFTW EN, P2
   Chen KR, 2000, PROG COMPREHEN, P241, DOI 10.1109/WPC.2000.852498
   CHEN Z, 2000, 1 AS PAC C QUAL SOFT, V3, P12
   Chen ZQ, 2002, ACM SIGPLAN NOTICES, V37, P45, DOI 10.1145/596992.597003
   Cornelissen B, 2007, INT C PROGRAM COMPRE, P49
   Cornelissen B, 2009, IEEE T SOFTWARE ENG, V35, P684, DOI 10.1109/TSE.2009.28
   COSSETTE B, 2007, IEEE INT C SOFTW MAI, P214
   Cox Lisa., 2001, Proceedingsofthe9thinternationalconferenceonconceptualstructures,ICCS, P117
   De Souza C. R. B., 2005, RELATIONSHIP SOFTWAR
   DONG X, 2007, P INT C SOFTW MAINT, P375
   Egyed A, 2003, IEEE T SOFTWARE ENG, V29, P116, DOI 10.1109/TSE.2003.1178051
   Eisenbarth T, 2003, IEEE T SOFTWARE ENG, V29, P210, DOI 10.1109/TSE.2003.1183929
   Eisenbarth T, 2001, PROC IEEE INT CONF S, P602, DOI 10.1109/ICSM.2001.972777
   FERRANTE J, 1987, ACM T PROGR LANG SYS, V9, P319, DOI 10.1145/24039.24041
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Fundel K, 2007, BIOINFORMATICS, V23, P365, DOI 10.1093/bioinformatics/btl616
   GAO J, 2004, IEEE IFIP NETW OP MA, V1, P119, DOI DOI 10.1109/NOMS.2004.1317649
   GAROUSI V, 2006, INT C MOD DRIV ENG L
   Glass RL, 2004, COMMUN ACM, V47, P19, DOI 10.1145/986213.986228
   Glorie M, 2009, J SOFTW MAINT EVOL-R, V21, P113, DOI 10.1002/smr.401
   Gotel O. C. Z., 1994, Proceedings of the First International Conference on Requirements Engineering (Cat. No.94TH0613-0), P94, DOI 10.1109/ICRE.1994.292398
   GUPTA M, 2003, 14 IFIP IEEE INT WOR
   HAMOULHADJ A, 2004, C CTR ADV STUD COLL, P42
   HASSAN A, 2004, P 26 INT C SOFTW MAI
   Holmes R, 2007, 4TH IEEE INTERNATIONAL WORKSHOP ON VISUALIZING SOFTWARE FOR UNDERSTANDING AND ANALYSIS, PROCEEDINGS, P100, DOI 10.1109/VISSOF.2007.4290707
   Huang L, 2007, SERA 2007: 5TH ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING RESEARCH, MANAGEMENT, AND APPLICATIONS, PROCEEDINGS, P374, DOI 10.1109/SERA.2007.46
   Ishio T, 2004, PROC IEEE INT CONF S, P178, DOI 10.1109/ICSM.2004.1357802
   Ivkovic I, 2006, INT J SOFTW ENG KNOW, V16, P499, DOI 10.1142/S0218194006002902
   Jacsó P, 2008, ONLINE INFORM REV, V32, P102, DOI 10.1108/14684520810866010
   Jász J, 2008, PROC IEEE INT CONF S, P137, DOI 10.1109/ICSM.2008.4658062
   Jiang T, 2008, INFORM SOFTWARE TECH, V50, P1189, DOI 10.1016/j.infsof.2007.11.001
   JOURDAN G, 2006, 21 INT S COMP INF SC, P1021
   Kagdi Huzefa., 2007, ICSE Workshops MSR'07. Fourth International Workshop on Mining Software Repositories, P17
   KELLER A, 2000, 5 INT C COMP COMM IS
   KELLER A, 2000, INT C PAR DISTR PROC
   KHAN S, 2008, 20 INT C ADV INF SYS, P243
   Kitchenham B, 2004, IEEE T SOFTWARE ENG, V30, P1023, DOI 10.1109/TSE.2004.104
   KITCHENHAM B, 2004, TRSE0104 KEEL U
   Kitchenham B, 2009, INFORM SOFTWARE TECH, V51, P7, DOI 10.1016/j.infsof.2008.09.009
   Kontogiannis K, 2006, PROC IEEE INT CONF S, P497
   Korel B, 2002, PROC IEEE INT CONF S, P214, DOI 10.1109/ICSM.2002.1167768
   Kossiakoff A., 2002, Systems engineering principles and practice
   Kuhn A, 2007, INFORM SOFTWARE TECH, V49, P230, DOI 10.1016/j.infsof.2006.10.017
   Law J, 2003, ISSRE 2003: 14TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P430, DOI 10.1109/ISSRE.2003.1251064
   Law J, 2003, PROC INT CONF SOFTW, P308, DOI 10.1109/ICSE.2003.1201210
   Leitch R, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P309, DOI 10.1109/METRIC.2003.1232477
   Lewandowski D, 2010, ONLINE INFORM REV, V34, P250, DOI 10.1108/14684521011036972
   LI B, 2005, ACM SIGPLAN NOTICES, V40, P36
   Li YC, 2005, ICAC 2005: Second International Conference on Autonomic Computing, Proceedings, P337
   LIANGLI M, 2006, 6 INT C QUAL SOFTW Q, P93
   Lienhard A, 2007, INT C PROGRAM COMPRE, P59
   Lind-Nielsen J, 2001, FORM METHOD SYST DES, V18, P5, DOI 10.1023/A:1008736219484
   Loyall J. P., 1993, Proceedings. Conference on Software Maintenance 1993. CSM-93 (Cat. No.93CH3360-5), P282, DOI 10.1109/ICSM.1993.366934
   MAO C, 2007, 5 INT C COMP SCI APP, P192, DOI DOI 10.1109/ICCSA.2007.25
   Marcus A, 2005, PROC IEEE INT CONF S, P133
   MARCUS A, 2005, IWPC 05, P33
   Maule A, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P451, DOI 10.1145/1368088.1368150
   McComb D, 2002, P INT COMP SOFTW APP, P463, DOI 10.1109/CMPSAC.2002.1045045
   Mehta N. R., 2000, Proceedings of the 2000 International Conference on Software Engineering. ICSE 2000 the New Millennium, P178, DOI 10.1109/ICSE.2000.870409
   Moise DL, 2005, WCRE: 12TH WORKING CONFERENCE ON REVERSE ENGINEERING 2005, PROCEEDINGS, P209
   MORAES RLO, 2005, COMPSAC 05, P181, DOI DOI 10.1109/COMPSAC.2005.78
   MORICONI M, 1990, IEEE T SOFTWARE ENG, V16, P980, DOI 10.1109/32.58785
   Myers Glenford J., 1975, Reliable Software through Composite Design
   NAGAPPAN N, 2007, 1 INT S EMP SOFTW EN, P364
   NARAYANASAMY S, 2006, P 12 INT C ARCH SUPP, P240
   Neuvo Y, 2004, ISSCC DIG TECH PAP I, V47, P32, DOI 10.1109/ISSCC.2004.1332581
   Pfaltz JL, 2006, LECT NOTES COMPUT SC, V3874, P233
   PODGURSKI A, 1990, IEEE T SOFTWARE ENG, V16, P965, DOI 10.1109/32.58784
   Robillard MP, 2008, ACM T SOFTW ENG METH, V17, DOI 10.1145/13487689.13487691
   Robinson ML, 2007, PROGRAM-ELECTRON LIB, V41, P71, DOI 10.1108/00330330710724908
   RONEN I, 2006, C CTR ADV STUD COLL, P3
   Ryser J., 2000, P 17 INT C TEST COMP
   Safyallah H, 2006, INT C PROGRAM COMPRE, P84, DOI 10.1109/ICPC.2006.19
   Sangal N., 2005, P 20 ANN ACM SIGPLAN, P176
   SPEK P, 2008, CSMR 08, P253, DOI DOI 10.1109/CSMR.2008.4493321
   STAFFORD J, 2003, 3 INT SCH FORM METH, P52
   Stafford JA, 2001, INT J SOFTW ENG KNOW, V11, P431, DOI 10.1142/S021819400100061X
   Stafford JudithA., 1998, ISAW 98, P129, DOI DOI 10.1145/288408.288441
   STEINLE M, 2006, P 32 INT C VER LARG, P1102
   Stevens R., 1998, SYSTEMS ENG COPING C
   STEVENS WP, 1974, IBM SYST J, V13, P115, DOI 10.1147/sj.132.0115
   Tallam S, 2007, ACM T ARCHIT CODE OP, V4, DOI 10.1145/1275937.1275943
   van Ommering R, 2002, ICSE 2002: PROCEEDINGS OF THE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P255, DOI 10.1109/ICSE.2002.1007973
   VANDECRAEN P, 2007, EMPIRICAL PERSPECTIV, P48
   VASILACHE S, 2005, 3 ACIS INT C SOFTW E
   VIEIRA M, 2002, 17 IEEE INT C AUT SO, P241
   VIEIRA M, 2001, P 23 INT C SOFTW ENG
   WATKINS R, 1994, IEEE SOFTWARE, V11, P104, DOI 10.1109/52.300100
   Xiao CC, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P124
   Xiao Yang., 2008, Cooperative Information Systems Conference (COOPIS), P139
   XIN B, 2007, P 2007 INT S SOFTW T, P195
   Xing ZC, 2006, INT J SOFTW ENG KNOW, V16, P23, DOI 10.1142/S0218194006002707
   ZHANG W, 2007, 7 ACM SIGPLAN SIGSOF, P55
   ZHAO J, 2001, NEW TECHNOLOGIES COM
   Zhao Jianjun., 2002, INT WORKSHOP PRINCIP, P108
   Zimmermann T, 2007, ISSRE 2007: 18TH IEEE INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING, PROCEEDINGS, P227, DOI 10.1109/ISSRE.2007.19
   Zimmermann T, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P531, DOI 10.1145/1368088.1368161
NR 107
TC 19
Z9 21
U1 0
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2011
VL 16
IS 5
SI SI
BP 544
EP 586
DI 10.1007/s10664-011-9158-8
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 808LJ
UT WOS:000293978900002
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Petersen, K
   Wohlin, C
AF Petersen, Kai
   Wohlin, Claes
TI The effect of moving from a plan-driven to an incremental software
   development approach with agile practices
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Incremental; Agile; Plan-driven; Case study; Migration
AB So far, only few in-depth studies focused on the direct comparison of process models in general, and between plan-driven and incremental/agile approaches in particular. That is, it is not made explicit What the effect is of moving from one model to another model. Furthermore, there is limited evidence on advantages and issues encountered in agile software development, this is specifically true in the context of large-scale development. The objective of the paper is to investigate how the perception of bottlenecks, unnecessary work, and rework (from hereon referred to as issues) changes when migrating from a plan-driven to an incremental software development approach with agile practices (flexible product backlog, face-to-face interaction, and frequent integration), and how commonly perceived these practices are across different systems and development roles. The context in which the objective should be achieved is large-scale development with a market-driven focus. The selection of the context was based on the observation in related work that mostly small software development projects were investigated and that the investigation was focused on one agile model (eXtreme programming). A case study was conducted at a development site of Ericsson AB, located in Sweden in the end of 2007. In total 33 interviews were conducted in order to investigate the perceived change when migrating from plan-driven to incremental and agile software development, the interviews being the primary source of evidence. For triangulation purposes measurements collected by Ericsson were considered, the measurements relating to unnecessary work (amount of discarded requirements) and rework (data on testing efficiency and maintenance effort). Triangulation in this context means that the measurements were used to confirm the perceived changes with an additional data source. In total 64 issues were identified, 24 being of general nature and the remaining 40 being local and therefore unique to individual's opinions or a specific system. The most common ones were documented and analyzed in detail. The commonality refers to how many persons in different roles and across the systems studied have mentioned the issues for each of the process models. The majority of the most common issues relates to plan-driven development. We also identified common issues remaining for agile after the migration, which were related to testing lead-time, test coverage, software release, and coordination overhead. Improvements were identified as many issues commonly raised for the plan-driven approach were not raised anymore for the incremental and agile approach. It is concluded that the recent introduction (start in 2005 with the study being conducted in the end of 2007) of incremental and agile practices brings added values in comparison to the plan-driven approach, which is evident from the absence of critical issues that are encountered in plan-driven development.
C1 [Petersen, Kai; Wohlin, Claes] Blekinge Inst Technol, S-37225 Ronneby, Sweden.
C3 Blekinge Institute Technology
RP Petersen, K (corresponding author), Blekinge Inst Technol, S-37225 Ronneby, Sweden.
EM kai.petersen@bth.se; claes.wohlin@bth.se
OI Wohlin, Claes/0000-0003-0460-5253; Petersen, Kai/0000-0002-1532-8223
CR Anderson D., 2003, AGILE MANAGEMENT SOF
   [Anonymous], ITI 3 INT C INF COMM
   [Anonymous], INT SERIES SOFTWARE
   [Anonymous], 2003, AGILE SOFTWARE DEV S
   Baskerville R, 2003, IEEE SOFTWARE, V20, P70, DOI 10.1109/MS.2003.1241369
   Beck K, 1999, COMPUTER, V32, P70, DOI 10.1109/2.796139
   Benediktsson O, 2006, IEE P-SOFTW, V153, P87, DOI 10.1049/ip-sen:20050061
   Ceschi M, 2005, IEEE SOFTWARE, V22, P21, DOI 10.1109/MS.2005.75
   Damm L.-O., 2006, Software Process Improvement and Practice, V11, P47, DOI 10.1002/spip.253
   Damm LO, 2007, PROC INT CONF SOFTW, P560
   Dybå T, 2008, INFORM SOFTWARE TECH, V50, P833, DOI 10.1016/j.infsof.2008.01.006
   Fairley RE, 2005, COMPUTER, V38, P34, DOI 10.1109/MC.2005.303
   Heijstek W, 2008, PROCEEDINGS OF THE 34TH EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS, P266, DOI 10.1109/SEAA.2008.43
   Hirsch M, 2005, PROC INT CONF SOFTW, P38, DOI 10.1145/1062455.1062472
   Ilieva S, 2004, EUROMICRO CONF PROC, P326, DOI 10.1109/EURMIC.2004.1333387
   Jones C., 1995, Patterns of Software System Failure and Success
   Karlström D, 2005, IEEE SOFTWARE, V22, P43, DOI 10.1109/MS.2005.59
   Koch A.S., 2005, Agile Software Development : Evaluating The Methods For Your Organization
   Laplante P., 2004, QUEUE J ACM, V1, P10, DOI [10.1145/971564.971573, DOI 10.1145/971564.971573]
   Larman Craig., 2003, AGILE ITERATIVE DEV
   Layman L, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P32
   Mannaro K, 2004, LECT NOTES COMPUT SC, V3092, P166
   Martin A, 2004, PROCEEDINGS OF THE AGILE DEVELOPMENT CONFERENCE, P42
   McBreen P., 2003, QUESTIONING EXTREME
   Merisalo-Rantanen H, 2005, J DATABASE MANAGE, V16, P41, DOI 10.4018/jdm.2005100103
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Petersen K, 2009, J SYST SOFTWARE, V82, P1479, DOI 10.1016/j.jss.2009.03.036
   Petersen K, 2009, LECT NOTES BUS INF, V32, P386
   Raccoon L. B. S., 1997, Software Engineering Notes, V22, P88, DOI 10.1145/251759.251878
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schwaber Ken., 2004, Agile Project Management With Scrum (Developer Best Practices)
   Sillitti A., 2005, P 11 IEEE INT SOFTWA, P17, DOI DOI 10.1109/METRICS.2005.29
   Stephens Matt, 2003, Extreme Programming Refactored: The XP
   Svensson H, 2005, NINTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P256, DOI 10.1109/CSMR.2005.33
   Thomas M., 2001, British Computer Society Review
   Wils A, 2006, LECT NOTES COMPUT SC, V4044, P123
   Yin Robert K., 2002, APPL SOCIAL RES METH, V5
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
   [No title captured]
NR 46
TC 100
Z9 118
U1 7
U2 73
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD DEC
PY 2010
VL 15
IS 6
BP 654
EP 693
DI 10.1007/s10664-010-9136-6
PG 40
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 653OB
UT WOS:000282100100004
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Fenton, N
   Neil, M
   Marsh, W
   Hearty, P
   Radlinski, L
   Krause, P
AF Fenton, Norman
   Neil, Martin
   Marsh, William
   Hearty, Peter
   Radlinski, Lukasz
   Krause, Paul
TI On the effectiveness of early life cycle defect prediction with Bayesian
   Nets
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 3rd International Workshop on Predictor Models in Software Engineering
   (PROMISE 2007)
CY MAY, 2007
CL Minneapolis, MN
DE software defect prediction; qualitative factors; quantitative data;
   Bayesian network; decision support; sensitivity analysis
ID SOFTWARE; NUMBER; FAULTS; MODEL
AB Standard practice in building models in software engineering normally involves three steps: collecting domain knowledge (previous results, expert knowledge); building a skeleton of the model based on step 1 including as yet unknown parameters; estimating the model parameters using historical data. Our experience shows that it is extremely difficult to obtain reliable data of the required granularity, or of the required volume with which we could later generalize our conclusions. Therefore, in searching for a method for building a model we cannot consider methods requiring large volumes of data. This paper discusses an experiment to develop a causal model (Bayesian net) for predicting the number of residual defects that are likely to be found during independent testing or operational usage. The approach supports (1) and (2), does not require (3), yet still makes accurate defect predictions (an R-2 of 0.93 between predicted and actual defects). Since our method does not require detailed domain knowledge it can be applied very early in the process life cycle. The model incorporates a set of quantitative and qualitative factors describing a project and its development process, which are inputs to the model. The model variables, as well as the relationships between them, were identified as part of a major collaborative project. A dataset, elicited from 31 completed software projects in the consumer electronics industry, was gathered using a questionnaire distributed to managers of recent projects. We used this dataset to validate the model by analyzing several popular evaluation measures (R-2, measures based on the relative error and Pred). The validation results also confirm the need for using the qualitative factors in the model. The dataset may be of interest to other researchers evaluating models with similar aims. Based on some typical scenarios we demonstrate how the model can be used for better decision support in operational environments. We also performed sensitivity analysis in which we identified the most influential variables on the number of residual defects. This showed that the project size, scale of distributed communication and the project complexity cause the most of variation in number of defects in our model. We make both the dataset and causal model available for research use.
C1 [Radlinski, Lukasz] Univ Szczecin, Inst Informat Technol Management, Szczecin, Poland.
   [Fenton, Norman; Neil, Martin; Marsh, William; Hearty, Peter; Radlinski, Lukasz] Univ London, Dept Comp Sci, London, England.
   [Krause, Paul] Univ Surrey, Dept Comp, Guildford GU2 5XH, Surrey, England.
C3 University of Szczecin; University of London; University of Surrey
RP Radlinski, L (corresponding author), Univ Szczecin, Inst Informat Technol Management, Szczecin, Poland.
EM norman@dcs.qmul.ac.uk; martin@dcs.qmul.ac.uk; william@dcs.qmul.ac.uk;
   hearty@dcs.qmul.ac.uk; lukrad@dcs.qmul.ac.uk; p.krause@surrey.ac.uk
RI Marsh, David W R/A-3213-2016; Fenton, Norman/L-5861-2019; Marsh, David W
   R/JCE-1503-2023; Krause, Paul John/AFD-8391-2022; Radlinski,
   Lukasz/A-6146-2016
OI Marsh, David W R/0000-0003-0212-6363; Fenton,
   Norman/0000-0003-2924-0510; Neil, Martin/0000-0002-4922-0843; Radlinski,
   Lukasz/0000-0003-1007-6597
CR *AGENARISK, 2007, BAYES NETW SOFTW TOO
   [Anonymous], PROMISE REPOSITORY E
   Boehm B., 1995, Annals of Software Engineering, V1, P57, DOI 10.1007/BF02249046
   Cangussu JW, 2003, IEEE T SOFTWARE ENG, V29, P430, DOI 10.1109/TSE.2003.1199072
   Chulani S, 1999, IEEE T SOFTWARE ENG, V25, P573, DOI 10.1109/32.799958
   CHULANI S, 1999, USECSE99510
   COMPTON BT, 1990, J SYST SOFTWARE, V12, P199, DOI 10.1016/0164-1212(90)90040-S
   *EXDECIDE, 2005, QUANT RISK ASS DEC S
   Fenton N, 2004, PROC INT CONF SOFTW, P397, DOI 10.1109/ICSE.2004.1317462
   Fenton N, 2002, IEEE SOFTWARE, V19, P116, DOI 10.1109/MS.2002.1020298
   Fenton N, 2007, P 3 INT WORKSH PRED, V2007, P2, DOI DOI 10.1109/PROMISE.2007.11
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fenton NE, 1999, IEEE T SOFTWARE ENG, V25, P675, DOI 10.1109/32.815326
   FENTON NE, 2002, J APPL NONCLASSICAL, V12, P173
   Fenton N, 2007, INFORM SOFTWARE TECH, V49, P32, DOI 10.1016/j.infsof.2006.09.001
   Fenton NE, 2007, IEEE T KNOWL DATA EN, V19, P1420, DOI 10.1109/TKDE.2007.1068
   GAFFNEY JE, 1984, IEEE T SOFTWARE ENG, V10, P459, DOI 10.1109/TSE.1984.5010260
   HENRY S, 1984, SOFTWARE PRACT EXPER, V14, P561, DOI 10.1002/spe.4380140606
   *ISBSG, 2007, REP DAT REL 10
   Jensen FV, 1996, INTRO BAYESIAN NETWO
   Jones C, 1999, IEE REVIEW, V45, P165, DOI 10.1049/ir:19990406
   JONES C, 1986, PROGRAMMER PRODUCTIV
   Kitchenham B. A., 2001, IEE Proceedings-Software, V148, P81, DOI 10.1049/ip-sen:20010506
   LIPOW M, 1982, IEEE T SOFTWARE ENG, V8, P437, DOI 10.1109/TSE.1982.235579
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   *MODIST, 2003, MOD UNC RISK DISTR S
   Musilek P, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P13, DOI 10.1109/METRIC.2002.1011321
   Neapolitan R. E., 2004, Learning Bayesian Networks
   NEIL M, 2003, SOFTWARE ENG COMPUTA, pCH6
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Radlinski L., 2007, 11 IASTED INT C SOFT, P13
   SALTELLI A, 2000, SENSITIVITY ANAL, P4
   *SIMLAB, 2004, SIM ENV UNC SENS AN
   Stensrud E, 2002, EIGHTH IEEE SYMPOSIUM ON SOFTWARE METRICS, PROCEEDINGS, P3, DOI 10.1109/METRIC.2002.1011320
   WAGNER S, 2007, P 1 INT S EMP SOFTW, P440
   Wagner S., 2007, Proc. International Workshop on Predictor Models in Software Engineering PROMISE'07, P3, DOI [10.1109/PROMISE.2007.7., DOI 10.1109/PROMISE.2007.7]
   Winkler RL., 2003, INTRO BAYESIAN INFER
NR 37
TC 76
Z9 81
U1 0
U2 20
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2008
VL 13
IS 5
BP 499
EP 537
DI 10.1007/s10664-008-9072-x
PG 39
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 350QU
UT WOS:000259369000003
DA 2024-07-18
ER

PT J
AU Weyuker, EJ
   Ostrand, TJ
   Bell, RM
AF Weyuker, Elaine J.
   Ostrand, Thomas J.
   Bell, Robert M.
TI Do too many cooks spoil the broth? Using the number of developers to
   enhance defect prediction models
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article; Proceedings Paper
CT 3rd International Workshop on Predictor Models in Software Engineering
   (PROMISE 2007)
CY MAY, 2007
CL Minneapolis, MN
DE software faults; negative binomial model; empirical study; developer
   counts
ID PRONE SOFTWARE MODULES; SYSTEMS; METRICS; DESIGN; FAULTS
AB Fault prediction by negative binomial regression models is shown to be effective for four large production software systems from industry. A model developed originally with data from systems with regularly scheduled releases was successfully adapted to a system without releases to identify 20% of that system's files that contained 75% of the faults. A model with a pre-specified set of variables derived from earlier research was applied to three additional systems, and proved capable of identifying averages of 81, 94 and 76% of the faults in those systems. A primary focus of this paper is to investigate the impact on predictive accuracy of using data about the number of developers who access individual code units. For each system, including the cumulative number of developers who had previously modified a file yielded no more than a modest improvement in predictive accuracy. We conclude that while many factors can "spoil the broth" (lead to the release of software with too many defects), the number of developers is not a major influence.
C1 [Weyuker, Elaine J.; Ostrand, Thomas J.; Bell, Robert M.] AT&T Labs Res, Florham Pk, NJ 07932 USA.
C3 AT&T
RP Ostrand, TJ (corresponding author), AT&T Labs Res, 180 Pk Ave, Florham Pk, NJ 07932 USA.
EM weyuker@research.att.com; ostrand@research.att.com;
   rbell@research.att.com
CR ADAMS EN, 1984, IBM J RES DEV, V28, P2, DOI 10.1147/rd.281.0002
   [Anonymous], 2002, P 2002 ACM SIGSOFT I
   [Anonymous], 2005, Data mining: Practical machine learning tools and techniques
   ARISHOLM E, 2006, P ACM IEEE ISESE RIO
   BASILI VR, 1984, COMMUN ACM, V27, P42, DOI 10.1145/69605.2085
   Bell R., 2006, Proc. 2006 International Symposium on Software Testing and Analysis, P61
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   DENARO G, 2002, P INT C SOFTW ENG IC
   Eick SG, 2001, IEEE T SOFTWARE ENG, V27, P1, DOI 10.1109/32.895984
   Fenton NE, 2000, IEEE T SOFTWARE ENG, V26, P797, DOI 10.1109/32.879815
   Graves TL, 2000, IEEE T SOFTWARE ENG, V26, P653, DOI 10.1109/32.859533
   GUO L, 2004, P ISSRE 2004 SAINT M
   Hatton L, 1997, IEEE SOFTWARE, V14, P89, DOI 10.1109/52.582978
   Khoshgoftaar TM, 1996, IEEE SOFTWARE, V13, P65, DOI 10.1109/52.476287
   Khoshgoftaar TM, 2002, IEEE T RELIAB, V51, P455, DOI 10.1109/TR.2002.804488
   McCullagh P., 2019, Generalized linear models
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Mockus A, 2000, BELL LABS TECH J, V5, P169, DOI 10.1002/bltj.2229
   MOELLER KH, 1993, P 1 INT SOFTW METR S, P82
   MUNSON JC, 1992, IEEE T SOFTWARE ENG, V18, P423, DOI 10.1109/32.135775
   Nagappan N., 2006, P 28 INT C SOFTW ENG, P452, DOI DOI 10.1145/1134285.1134349
   NAGAPPAN N, 2007, INT S SOFTW ENG MEAS
   Ohlsson N, 1996, IEEE T SOFTWARE ENG, V22, P886, DOI 10.1109/32.553637
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   OSTRAND TJ, 2007, P ACM INT S SOFTW TE
   Pighin M, 2003, 2003 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P206, DOI 10.1109/ISESE.2003.1237979
   SAS, 2004, SAS STAT 9 1 US GUID
   Succi G, 2003, J SYST SOFTWARE, V65, P1, DOI 10.1016/S0164-1212(02)00024-9
NR 28
TC 93
Z9 111
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2008
VL 13
IS 5
BP 539
EP 559
DI 10.1007/s10664-008-9082-8
PG 21
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Conference Proceedings Citation Index - Science (CPCI-S)
SC Computer Science
GA 350QU
UT WOS:000259369000004
DA 2024-07-18
ER

PT J
AU Nagappan, N
   Maximilien, EM
   Bhat, T
   Williams, L
AF Nagappan, Nachiappan
   Maximilien, E. Michael
   Bhat, Thirumalesh
   Williams, Laurie
TI Realizing quality improvement through test driven development: results
   and experiences of four industrial teams
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE test driven development; empirical study; defects/faults; development
   time
AB Test-driven development (TDD) is a software development practice that has been used sporadically for decades. With this practice, a software engineer cycles minute-by-minute between writing failing unit tests and writing implementation code to pass those tests. Test-driven development has recently re-emerged as a critical enabling practice of agile software development methodologies. However, little empirical evidence supports or refutes the utility of this practice in an industrial context. Case studies were conducted with three development teams at Microsoft and one at IBM that have adopted TDD. The results of the case studies indicate that the pre-release defect density of the four products decreased between 40% and 90% relative to similar projects that did not use the TDD practice. Subjectively, the teams experienced a 15-35% increase in initial development time after adopting TDD.
C1 [Maximilien, E. Michael] IBM Almaden Res Ctr, San Jose, CA USA.
   [Williams, Laurie] N Carolina State Univ, Raleigh, NC 27695 USA.
   [Nagappan, Nachiappan; Bhat, Thirumalesh] Microsoft Res, Redmond, WA USA.
C3 International Business Machines (IBM); North Carolina State University;
   Microsoft
RP Nagappan, N (corresponding author), Microsoft Res, Redmond, WA USA.
EM nachin@microsoft.com; maxim@us.ibm.com; thirub@microsoft.com;
   williams@csc.ncsu.edu
CR [Anonymous], 2005, MSRTR200594
   [Anonymous], 2005, Extreme programming explained: Embrace change
   [Anonymous], 2003, TEST DRIVEN DEV EXAM
   Basili VR, 1999, IEEE T SOFTWARE ENG, V25, P456, DOI 10.1109/32.799939
   Beck K, 2001, IEEE SOFTWARE, V18, P87, DOI 10.1109/52.951502
   Beck K., 2001, Planning extreme programming
   BHAT T, 2006, INT S EMP SOFTW ENG
   COCKBUM A, 2001, AGILE SOFTWARE DEV
   CURTIS B, 1989, P INT C SOFTW ENG PI
   Erdogmus H, 2005, IEEE T SOFTWARE ENG, V31, P226, DOI 10.1109/TSE.2005.37
   Erdogmus H., 2003, Engineering Economist, V48, P283, DOI 10.1080/00137910309408770
   FENTON N, 1994, IEEE SOFTWARE, V11, P86, DOI 10.1109/52.300094
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Fowler M., 2000, UML Distilled, V2nd
   GELPERIN D, 1987, P 4 INT C SOFTW TEST
   George B, 2004, INFORM SOFTWARE TECH, V46, P337, DOI 10.1016/j.infsof.2003.09.011
   GEORGE B, 2003, P ACM S APPL COMP ME
   Harris E, 2004, EMBO REP, V5, P7, DOI 10.1038/sj.embor.7400058
   Harrison K A, 1997, Afr J Reprod Health, V1, P7, DOI 10.2307/3583270
   Humphrey W.S., 1989, MANAGING SOFTWARE PR
   *IEEE, 1988, 98221988 IEEE
   JANZEN D, 2006, P C SOFTW ENG ED TRA
   KITCHENHAM B, 1995, IEEE SOFTWARE, V12, P52, DOI 10.1109/52.391832
   Larman C, 2003, COMPUTER, V36, P47, DOI 10.1109/MC.2003.1204375
   Larus JB, 2004, IEEE SOFTWARE, V21, P92, DOI 10.1109/MS.2004.1293079
   Muller M. M., 2002, IEE Proceedings-Software, V149, P131, DOI 10.1049/ip-sen:20020540
   Müller MM, 2001, PROC INT CONF SOFTW, P537, DOI 10.1109/ICSE.2001.919128
   Royce Winston, 1970, Managing the development of large software systems, P1
   Sjoberg D. I., 2002, P INT S EMP SOFTW EN
   WILLIAMS L, 2003, P IEEE INT S SOFTW R
   Zelkowitz MV, 1998, COMPUTER, V31, P23, DOI 10.1109/2.675630
NR 31
TC 74
Z9 86
U1 11
U2 30
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2008
VL 13
IS 3
BP 289
EP 302
DI 10.1007/s10664-008-9062-z
PG 14
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 316RE
UT WOS:000256966600003
DA 2024-07-18
ER

PT J
AU Counsell, S
   Loizou, G
   Najjar, R
AF Counsell, Steve
   Loizou, George
   Najjar, Rajaa
TI Quality of manual data collection in Java software: an empirical
   investigation
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE data collection; Java; software metrics; empirical investigation
ID METRICS
AB Data collection, both automatic and manual, lies at the heart of all empirical studies. The quality of data collected from software informs decisions on maintenance, testing and wider issues such as the need for system re-engineering. While of the two types stated, automatic data collection is preferable, there are numerous occasions when manual data collection is unavoidable. Yet, very little evidence exists to assess the error-proneness of the latter. Herein, we investigate the extent to which manual data collection for Java software compared with its automatic counterpart for the same data. We investigate three hypotheses relating to the difference between automated and manual data collection. Five Java systems were used to support our investigation. Results showed that, as expected, manual data collection was error-prone, but nowhere near the extent we had initially envisaged. Key indicators of mistakes in manual data collection were found to be poor developer coding style, poor adherence to sound OO coding principles, and the existence of relatively large classes in some systems. Some interesting results were found relating to the collection of public class features and the types of error made during manual data collection. The study thus offers an insight into some of the typical problems associated with collecting data manually; more significantly, it highlights the problems that poorly written systems have on the quality of visually extracted data.
C1 Brunel Univ, Sch Comp Informat Syst & Math, Uxbridge UB8 1PH, Middx, England.
   Univ London Birkbeck Coll, Sch Comp Sci & Informat Syst, London WC1E 7HX, England.
   Univ Cyprus, Dept Comp Sci, Nicosia, Cyprus.
C3 Brunel University; University of London; Birkbeck University London;
   University of Cyprus
RP Counsell, S (corresponding author), Brunel Univ, Sch Comp Informat Syst & Math, Uxbridge UB8 1PH, Middx, England.
EM steve.counsell@brunel.ac.uk
CR [Anonymous], EMPIR SOFTW ENG
   Basili VR, 1996, IEEE T SOFTWARE ENG, V22, P751, DOI 10.1109/32.544352
   Bieman JM, 2003, NINTH INTERNATIONAL SOFTWARE METRICS SYMPOSIUM, PROCEEDINGS, P40, DOI 10.1109/METRIC.2003.1232454
   Counsell S, 2000, PROG COMPREHEN, P60, DOI 10.1109/WPC.2000.852480
   COUNSELL S, 2002, P INT C SOFTW SYST E
   Emam KE, 2001, IEEE T SOFTWARE ENG, V27, P630, DOI 10.1109/32.935855
   Fenton N., 1996, SOFTWARE METRICS RIG, VSecond
   Fowler M., 2018, Refactoring: Improving the Design of Existing Code
   Gamma E., 1994, Design patterns: Elements of reusable object-oriented software
   Harrison R., 1998, Empirical Software Engineering, V3, P255, DOI 10.1023/A:1009784121652
   Kitchenham B, 2002, J SYST SOFTWARE, V64, P57, DOI 10.1016/S0164-1212(02)00021-3
   Kitchenham B, 1996, IEEE SOFTWARE, V13, P12, DOI 10.1109/52.476281
   Kitchenham BA, 2002, IEEE T SOFTWARE ENG, V28, P721, DOI 10.1109/TSE.2002.1027796
   Kitchenham BA, 2001, IEEE T SOFTWARE ENG, V27, P788, DOI 10.1109/32.950316
   Najjar R, 2003, SEVENTH EUROPEAN CONFERENCE ON SOFTWARE MAINTENANCE AND REENGINEERING, PROCEEDINGS, P111, DOI 10.1109/CSMR.2003.1192418
   SCHNEIDEWIND NF, 1992, IEEE T SOFTWARE ENG, V18, P410, DOI 10.1109/32.135774
   Siegel Sidney, 1988, Nonparametric statistics for the behavioral sciences
   WEINAND A, 1998, P C OBJ OR PROGR SYS, P46
   [No title captured]
   [No title captured]
NR 20
TC 4
Z9 5
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2007
VL 12
IS 3
BP 275
EP 293
DI 10.1007/s10664-006-9028-y
PG 19
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 168JN
UT WOS:000246521000003
DA 2024-07-18
ER

PT J
AU Segal, J
AF Segal, J
TI When software engineers met research scientists: A case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE case study; software engineers; scientific software; agile
   methodologies; tailoring methodologies
AB This paper describes a case study of software engineers developing a library of software components for a group of research scientists, using a traditional, staged, document-led methodology. The case study reveals two problems with the use of the methodology. The first is that it demands an upfront articulation of requirements, whereas the scientists had experience, and hence expectations, of emergent requirements; the second is that the project documentation does not suffice to construct a shared understanding. Reflecting on our case study, we discuss whether combining agile elements with a traditional methodology might have alleviated these problems. We then argue that the rich picture painted by the case study, and the reflections on methodology that it inspires, has a relevance that reaches beyond the original context of the study.
C1 Open Univ, Fac Math & Comp, Dept Comp, Milton Keynes MK7 6AA, Bucks, England.
C3 Open University - UK
RP Open Univ, Fac Math & Comp, Dept Comp, Milton Keynes MK7 6AA, Bucks, England.
EM j.a.segal@open.ac.uk
CR [Anonymous], 2002, Agile software development
   [Anonymous], EMPIRICAL SOFTWARE E
   BACHE E, 2003, XP2003 GEN IT
   Beck K., 2000, EXTREME PROGRAMMING
   Boehm B, 2002, COMPUTER, V35, P64, DOI 10.1109/2.976920
   Boehm B.W., 2004, Balancing Agility and Discipline: A Guide for the Perplexed
   Cockburn A., 2001, EXTREME PROGRAMMING
   DeMarco T, 2002, COMPUTER, V35, P90, DOI 10.1109/MC.2002.1009175
   Fitzgerald B, 1998, INFORM MANAGE-AMSTER, V34, P317, DOI 10.1016/S0378-7206(98)00072-X
   Glass RL, 2002, INFORM SOFTWARE TECH, V44, P491, DOI 10.1016/S0950-5849(02)00049-6
   Glass RL, 2002, COMMUN ACM, V45, P15
   Jorgensen M., 2002, EMPIR SOFTW ENG, V7, P9, DOI [DOI 10.1023/A:1014866909191, 10.1023/A:1014866909191]
   Klein HK, 1999, MIS QUART, V23, P67, DOI 10.2307/249410
   LEE AS, 1989, MIS QUART, V13, P33, DOI 10.2307/248698
   Paulk M., 2002, J DEFENSE SOFTWARE E, V15, P15
   Robinson H, 1998, COMPUT J, V41, P363, DOI 10.1093/comjnl/41.6.363
   ROBINSON H, 2003, P 2 WORKSH WORKSH SE, P99
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Segal J, 2004, ELEVENTH ANNUAL INTERNATIONAL WORKSHOP ON SOFTWARE TECHNOLOGY AND ENGINEERING PRACTICE, PROCEEDINGS, P40
   Wood WA, 2003, IEEE SOFTWARE, V20, P30, DOI 10.1109/MS.2003.1196317
   ZELKOWITZ MV, 2002, LECT NOTES EMPIRICAL, P229
   [No title captured]
NR 22
TC 63
Z9 74
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD OCT
PY 2005
VL 10
IS 4
BP 517
EP 536
DI 10.1007/s10664-005-3865-y
PG 20
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 969PQ
UT WOS:000232247100005
DA 2024-07-18
ER

PT J
AU Boerstler, J
   Bennin, KE
   Hooshangi, S
   Jeuring, J
   Keuning, H
   Kleiner, C
   Mackellar, B
   Duran, R
   Stoerrle, H
   Toll, D
   van Assema, J
AF Boerstler, Juergen
   Bennin, Kwabena
   Hooshangi, Sara
   Jeuring, Johan
   Keuning, Hieke
   Kleiner, Carsten
   Mackellar, Bonnie
   Duran, Rodrigo
   Stoerrle, Harald
   Toll, Daniel
   van Assema, Jelle
TI Developers talking about code quality
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code quality; Semi-structured interviews; Software development; Source
   code properties; Quality perception
AB There are many aspects of code quality, some of which are difficult to capture or to measure. Despite the importance of software quality, there is a lack of commonly accepted measures or indicators for code quality that can be linked to quality attributes. We investigate software developers' perceptions of source code quality and the practices they recommend to achieve these qualities. We analyze data from semi-structured interviews with 34 professional software developers, programming teachers and students from Europe and the U.S. For the interviews, participants were asked to bring code examples to exemplify what they consider good and bad code, respectively. Readability and structure were used most commonly as defining properties for quality code. Together with documentation, they were also suggested as the most common target properties for quality improvement. When discussing actual code, developers focused on structure, comprehensibility and readability as quality properties. When analyzing relationships between properties, the most commonly talked about target property was comprehensibility. Documentation, structure and readability were named most frequently as source properties to achieve good comprehensibility. Some of the most important source code properties contributing to code quality as perceived by developers lack clear definitions and are difficult to capture. More research is therefore necessary to measure the structure, comprehensibility and readability of code in ways that matter for developers and to relate these measures of code structure, comprehensibility and readability to common software quality attributes.
C1 [Boerstler, Juergen] Blekinge Inst Technol, Karlskrona, Sweden.
   [Bennin, Kwabena] Wageningen Univ & Res, Wageningen, Netherlands.
   [Hooshangi, Sara] Virginia Tech, Falls Church, VA USA.
   [Jeuring, Johan; Keuning, Hieke] Univ Utrecht, Utrecht, Netherlands.
   [Kleiner, Carsten] Univ Appl Sci & Arts Hannover, Hannover, Germany.
   [Mackellar, Bonnie] St Johns Univ, Queens, NY USA.
   [Duran, Rodrigo] Aalto Univ, Helsinki, Finland.
   [Stoerrle, Harald] QAware GmbH, Munich, Germany.
   [Toll, Daniel] Linnaeus Univ, Kalmar, Sweden.
   [van Assema, Jelle] Univ Amsterdam, Amsterdam, Netherlands.
C3 Blekinge Institute Technology; Wageningen University & Research;
   Virginia Polytechnic Institute & State University; Utrecht University;
   Hochschule Hannover-University of Applied Sciences & Arts; Saint John's
   University; Aalto University; Linnaeus University; University of
   Amsterdam
RP Boerstler, J (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.
EM jub@bth.se; kwabena.bennin@wur.nl; shoosh@vt.edu; J.T.Jeuring@uu.nl;
   h.w.keuning@uu.nl; carsten.kleiner@hs-hannover.de; mackellb@stjohns.edu;
   rodrigo.duran@aalto.fi; Harald.Stoerrle@qaware.de; daniel.toll@lnu.se;
   J.vanAssema@uva.nl
RI Börstler, Jürgen/IWE-4001-2023
OI Börstler, Jürgen/0000-0003-0639-4234; Kleiner,
   Carsten/0000-0001-9497-0312
FU This work has in parts been supported by ELLIIT; the Swedish Strategic
   Research Area in IT and Mobile Communications. The authors thank all
   interviewees for sharing their examples and experience.; ELLIIT; Swedish
   Strategic Research Area in IT and Mobile Communications
FX This work has in parts been supported by ELLIIT; the Swedish Strategic
   Research Area in IT and Mobile Communications. The authors thank all
   interviewees for sharing their examples and experience.
CR Ajami S, 2017, INT C PROGRAM COMPRE, P66, DOI 10.1109/ICPC.2017.39
   Al Dallal J, 2018, IEEE T SOFTWARE ENG, V44, P44, DOI 10.1109/TSE.2017.2658573
   Al-Kilidar H, 2005, 2005 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING (ISESE), PROCEEDINGS, P122, DOI 10.1109/ISESE.2005.1541821
   Alshayeb M, 2009, INFORM SOFTWARE TECH, V51, P1319, DOI 10.1016/j.infsof.2009.04.002
   Antinyan V, 2017, EMPIR SOFTW ENG, V22, P3057, DOI 10.1007/s10664-017-9508-2
   Avidan E, 2017, INT C PROGRAM COMPRE, P55, DOI 10.1109/ICPC.2017.27
   Bakota T., 2011, 2011 IEEE 27th International Conference on Software Maintenance, P243, DOI 10.1109/ICSM.2011.6080791
   Bavota G, 2015, PROC IEEE INT CONF S, P81, DOI 10.1109/ICSM.2015.7332454
   Beniamini G, 2017, INT C PROGRAM COMPRE, P45, DOI 10.1109/ICPC.2017.18
   Börstler J, 2017, ITICSE-WGR'17: PROCEEDINGS OF THE 2017 ITICSE CONFERENCE WORKING GROUP REPORTS, P70, DOI 10.1145/3174781.3174785
   Buse RPL, 2010, IEEE T SOFTWARE ENG, V36, P546, DOI 10.1109/TSE.2009.70
   Butler S, 2010, EUR CON SFTWR MTNCE, P156, DOI 10.1109/CSMR.2010.27
   Chatzigeorgiou A, 2010, QUATIC 2010: SEVENTH INTERNATIONAL CONFERENCE ON THE QUALITY OF INFORMATION AND COMMUNICATIONS TECHNOLOGY, P106, DOI 10.1109/QUATIC.2010.16
   Correia JP, 2009, PROC IEEE INT CONF S, P61, DOI 10.1109/ICSM.2009.5306346
   Creswell J. W., 2013, RES DESIGN QUALITATI
   Curtis B, 2022, COMPUTER, V55, P87, DOI 10.1109/MC.2022.3145265
   Davila N, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110951
   Fakhoury S, 2018, INT C PROGRAM COMPRE, P286, DOI 10.1145/3196321.3196347
   Fenton N. E., 1998, Software metrics: a rigorous and practical approach
   Freelon D, 2013, INT J INTERNET SCI, V8, P10
   Gil Y, 2017, EMPIR SOFTW ENG, V22, P2585, DOI 10.1007/s10664-017-9513-5
   Gorla N, 2010, INFORM SOFTWARE TECH, V52, P602, DOI 10.1016/j.infsof.2009.11.012
   Green R, 2011, COMMUN ACM, V54, P57, DOI 10.1145/2043174.2043191
   Hatton L, 2008, IEEE SOFTWARE, V25, P82, DOI 10.1109/MS.2008.100
   Hennink M, 2022, SOC SCI MED, V292, DOI 10.1016/j.socscimed.2021.114523
   Humble A, 2015, Guide to transcribing
   ISO/IEC, 2011, ISO/IEC 25010:2011 Systems and software engineering-Systems and Software Quality Requirements and Evaluation (SQuaRE)-System and Software Quality models
   Jabangwe R, 2015, EMPIR SOFTW ENG, V20, P640, DOI 10.1007/s10664-013-9291-7
   Jorgensen M, 1999, ADV ENG SOFTW, V30, P907, DOI 10.1016/S0965-9978(99)00015-0
   Kim M, 2014, IEEE T SOFTWARE ENG, V40, P633, DOI 10.1109/TSE.2014.2318734
   Ko AJ, 2005, J VISUAL LANG COMPUT, V16, P41, DOI 10.1016/j.jvlc.2004.08.003
   Kollanus S., 2009, Open Softw Eng J, V3, P15, DOI [10.2174/1874107X00903010015, DOI 10.2174/1874107X00903010015]
   Kononenko O, 2016, PROC INT CONF SOFTW, P1028, DOI 10.1145/2884781.2884840
   Malaquias R, 2017, INT C PROGRAM COMPRE, P297, DOI 10.1109/ICPC.2017.41
   Martin R. C., 2008, Clean Code: A Handbook of Agile Software Craftsmanship
   Menzies T, 2007, IEEE T SOFTWARE ENG, V33, P2, DOI 10.1109/TSE.2007.256941
   Miguel JP., 2014, Int. J. Softw. Eng. Appl, V5, P31, DOI [DOI 10.5121/IJSEA.2014.5603, 10.5121/ijsea.2014, DOI 10.5121/IJSEA.2014]
   Müller SC, 2016, PROC INT CONF SOFTW, P452, DOI 10.1145/2884781.2884803
   Nakajima T, 2019, P 1 INT WORKSH EXP S, P1
   Nistala P, 2019, 2019 IEEE/ACM INTERNATIONAL CONFERENCE ON SOFTWARE AND SYSTEM PROCESSES (ICSSP 2019), P125, DOI 10.1109/ICSSP.2019.00025
   Nunez-Varela AS, 2017, J SYST SOFTWARE, V128, P164, DOI 10.1016/j.jss.2017.03.044
   Pantiuchina J, 2018, PROC IEEE INT CONF S, P80, DOI 10.1109/ICSME.2018.00017
   Peters R, 2012, EUR CON SFTWR MTNCE, P411, DOI 10.1109/CSMR.2012.79
   Plösch R, 2014, INT CONF QUAL SOFTW, P333, DOI 10.1109/QSIC.2014.22
   Rashidi H., 2018, Journal of Electrical and Computer Engineering Innovations, V6, P59, DOI [DOI 10.22061/JECEI.2019.1076, 10.22061/JECEI.2019, DOI 10.22061/JECEI.2019]
   Rong G, 2014, P 18 INT C EV ASS SO
   Sadowski C, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P181, DOI 10.1145/3183519.3183525
   Scalabrino S, 2021, IEEE T SOFTWARE ENG, V47, P595, DOI 10.1109/TSE.2019.2901468
   Sutter Herb, 2004, C++ coding standards: 101 rules, guidelines, and best practices
   Sweller J, 2011, EXPLOR LEARN SCI, P3, DOI 10.1007/978-1-4419-8126-4
   Tahir A, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3239243
   Tufano M, 2017, IEEE T SOFTWARE ENG, V43, P1063, DOI 10.1109/TSE.2017.2653105
   Vermeulen A, 2000, The elements of Java (tm) style
   Wintus T., 2020, Software Engineering at Google
NR 54
TC 1
Z9 1
U1 3
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2023
VL 28
IS 6
AR 128
DI 10.1007/s10664-023-10381-0
PG 31
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA S8NI7
UT WOS:001073677200001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Alfadel, M
   Costa, DE
   Shihab, E
AF Alfadel, Mahmoud
   Costa, Diego Elias
   Shihab, Emad
TI Empirical analysis of security vulnerabilities in Python packages
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Python; PyPi; Packages; Vulnerabilities; Empirical studies
ID NPM
AB Software ecosystems play an important role in modern software development, providing an open platform of reusable packages that speed up and facilitate development tasks. However, this level of code reusability supported by software ecosystems also makes the discovery of security vulnerabilities much more difficult, as software systems depend on an increasingly high number of packages. Recently, security vulnerabilities in the npm ecosystem, the ecosystem of Node.js packages, have been studied in the literature. As different software ecosystems embody different programming languages and particularities, we argue that it is also important to study other popular programming languages to build stronger empirical evidence about vulnerabilities in software ecosystems. In this paper, we present an empirical study of 1,396 vulnerability reports affecting 698 Python packages in the Python ecosystem (PyPi). In particular, we study the propagation and life span of security vulnerabilities, accounting for how long they take to be discovered and fixed. In addition, vulnerabilities in packages may affect software projects that depend on them (dependent projects), making them vulnerable too. We study a set of 2,224 GitHub Python projects, to better understand the prevalence of vulnerabilities in their dependencies and how fast it takes to update them. Our findings show that the discovered vulnerabilities in Python packages are increasing over time, and they take more than 3 years to be discovered. A large portion of these vulnerabilities (40.86%) are only fixed after being publicly announced, giving ample time for attackers exploitation. Moreover, we find that more than half of the dependent projects rely on at least one vulnerable package, taking a considerably long time (7 months) to update to a non-vulnerable version. We find similarities in some characteristics of vulnerabilities in PyPi and npm and divergences that can be attributed to specific PyPi policies. By leveraging our findings, we provide a series of implications that can help the security of software ecosystems by improving the process of discovering, fixing and managing package vulnerabilities.
C1 [Alfadel, Mahmoud; Shihab, Emad] Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ, Canada.
   [Costa, Diego Elias] Univ Quebec Montreal, LATECE Lab, Montreal, PQ, Canada.
C3 Concordia University - Canada; University of Quebec; University of
   Quebec Montreal
RP Alfadel, M (corresponding author), Concordia Univ, Dept Comp Sci & Software Engn, Data Driven Anal Software DAS Lab, Montreal, PQ, Canada.
EM alfadelmahmood@gmail.com; costa.diego@uqam.ca; emad.shihab@concordia.ca
RI Costa, Diego/Y-7589-2019
OI Alfadel, Mahmoud/0000-0002-2621-6104
CR Aalen OO, 2008, STAT BIOL HEALTH, P1
   Abdalkareem R, 2020, EMPIR SOFTW ENG, V25, P1168, DOI 10.1007/s10664-019-09792-9
   Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   Alfadel M, 2020, DATASET EMPIRICAL AN
   Alfadel M, 2021, IEEE WORK CONF MIN S, P254, DOI 10.1109/MSR52588.2021.00037
   Alfadel M, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P446, DOI 10.1109/SANER50967.2021.00048
   Allodi L, 2014, ACM T INFORM SYST SE, V17, DOI 10.1145/2630069
   Bewick V, 2004, CRIT CARE, V8, P389, DOI 10.1186/cc2955
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bisht P, 2017, 11 EX INF SYST INC
   Bogart C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P109, DOI 10.1145/2950290.2950325
   Bogart C, 2015, 2015 30TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOP (ASEW), P86, DOI 10.1109/ASEW.2015.21
   Borges H, 2018, J SYST SOFTWARE, V146, P112, DOI 10.1016/j.jss.2018.09.016
   Camilo F, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P269, DOI 10.1109/MSR.2015.32
   Chinthanet B, 2019, EMPIR SOFTW ENG
   Chinthanet B, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09951-x
   Chowdhury MAR, 2021, INT REV FINANC
   Constantinou E, 2017, INNOV SYST SOFTW ENG, V13, P101, DOI 10.1007/s11334-017-0303-4
   Cox J, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P109, DOI 10.1109/ICSE.2015.140
   cwe.mitre, 2020, CW CW 416 US FREE 3
   Dabic O, 2021, IEEE WORK CONF MIN S, P560, DOI 10.1109/MSR52588.2021.00074
   Decan A, 2019, IEEE T SOFTWARE ENG
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Decan A, 2018, IEEE WORK CONF MIN S, P181, DOI 10.1145/3196398.3196401
   Decan A, 2018, PROC IEEE INT CONF S, P404, DOI 10.1109/ICSME.2018.00050
   Decan A, 2016, ACM PROCEEDINGS OF THE 10TH EUROPEAN CONFERENCE ON SOFTWARE ARCHITECTURE WORKSHOPS (ECSA-W), DOI 10.1145/2993412.3003382
   Decan A, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P2, DOI 10.1109/SANER.2017.7884604
   Dependabot, 2020, US
   Dephealth, 2021, HOME
   Derr E, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2187, DOI 10.1145/3133956.3134059
   Di Penta M, 2009, INFORM SOFTWARE TECH, V51, P1469, DOI 10.1016/j.infsof.2009.04.013
   Vu DL, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2093, DOI 10.1145/3372297.3420015
   Durumeric Z, 2014, PROCEEDINGS OF THE 2014 ACM INTERNET MEASUREMENT CONFERENCE (IMC'14), P475, DOI 10.1145/2663716.2663755
   Fard AM, 2017, IEEE INT CONF SOFTW, P230, DOI 10.1109/ICST.2017.28
   Github, 2022, TRANSP REP JAN JUN T
   Godefroid P, 2012, COMMUN ACM, V55, P40, DOI 10.1145/2093548.2093564
   Google, 2020, ANDR GOOGL PLAY PROT
   Hejderup J, 2015, In dependencies we trust: how vulnerable are dependencies in software modules?
   Hejderup J, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P101, DOI 10.1145/3183399.3183417
   ISC, 2020, INT SYST CONS
   Johari R., 2012, Proceedings of the 2012 International Conference on Communication Systems and Network Technologies (CSNT 2012), P453, DOI 10.1109/CSNT.2012.104
   KAPLAN EL, 1958, J AM STAT ASSOC, V53, P457, DOI 10.2307/2281868
   Kula RG, 2018, EMPIR SOFTW ENG, V23, P384, DOI 10.1007/s10664-017-9521-5
   Larios-Vargas E, 2020, Arxiv, DOI arXiv:2005.12574
   Li F, 2017, CCS'17: PROCEEDINGS OF THE 2017 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P2201, DOI 10.1145/3133956.3134072
   Libraries.io, 2021, LIB THE OP SOURC DIS
   Lodash, 2020, LOD NPM
   Lu Long, 2012, P 2012 ACM C COMP CO, P229, DOI DOI 10.1145/2382196.2382223
   Massacci F, 2011, LECT NOTES COMPUT SC, V6542, P195, DOI 10.1007/978-3-642-19125-1_15
   Metha N, 2022, HEARTBLEED SHELLSHOC
   Mezzetti G., 2018, 32 EUR C OBJ OR PROG
   MITRE, 2020, CWE
   Nesbitt Andrew, 2017, Zenodo, DOI 10.5281/zenodo.808273
   Neuhaus S., 2009, P 2009 USENIX ANN TE
   NPM, 2020, REP VULN NPM PACK NP
   NPM, 2020, AUD PACK DEP SEC VUL
   OWASP, 2019, OWASP
   Pashchenko I, 2020, P CCS 20
   Pashchenko I, 2020, IEEE T SOFTWARE ENG
   Pashchenko I, 2020, CCS '20: PROCEEDINGS OF THE 2020 ACM SIGSAC CONFERENCE ON COMPUTER AND COMMUNICATIONS SECURITY, P1513, DOI 10.1145/3372297.3417232
   Pashchenko I, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3268920
   Phan Nam FL, 2010, Proceedings of the IEEE/ACM International Conference on Automated Software Engineering, ASE'10, (New York, NY, USA), P447
   Pillow, 2020, PILL PYP
   Ponta SE, 2020, EMPIR SOFTW ENG, V25, P3175, DOI 10.1007/s10664-020-09830-x
   Ponta SE, 2018, PROC IEEE INT CONF S, P449, DOI 10.1109/ICSME.2018.00054
   Prana GAA, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09959-3
   PyPi, 2018, SEC PYP
   Python, 2020, About us
   Ruohonen J, 2018, INT WORKSH EMPIR ENG, P25, DOI 10.1109/IWESEP.2018.00013
   Sabottke C, 2015, PROCEEDINGS OF THE 24TH USENIX SECURITY SYMPOSIUM, P1041
   Semver, 2020, SEMV PYP
   Snyk, 2020, SNYK FINDS OUT NEW V
   Snyk, 2020, VULN DB SNYK
   Snyk, 2020, SCOR SEC VULN
   Snyk, 2017, STAT OP SOURC SEC
   StackOverflow, 2020, STACK OV DEV SURV
   Staicu C-A, 2016, TUDCS201614663
   Thomé J, 2018, J SYST SOFTWARE, V137, P766, DOI 10.1016/j.jss.2017.02.040
   Thompson H. H., 2003, IEEE Security & Privacy, V1, P83, DOI 10.1109/MSECP.2003.1219078
   Vu DL, 2020, 2020 IEEE EUROPEAN SYMPOSIUM ON SECURITY AND PRIVACY WORKSHOPS (EUROS&PW 2020), P509, DOI 10.1109/EuroSPW51379.2020.00074
   Walden J, 2020, IEEE WORK CONF MIN S, P409, DOI 10.1145/3379597.3387465
   Wang Y, 2020, PROC IEEE INT CONF S, P35, DOI 10.1109/ICSME46990.2020.00014
   Williams J., 2012, The unfortunate reality of insecure libraries, P1
   Wittern E, 2016, 13TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2016), P351, DOI [10.1145/2901739.2901743, 10.1109/MSR.2016.043]
   Zapata RE, 2018, PROC IEEE INT CONF S, P559, DOI 10.1109/ICSME.2018.00067
   Zerouali A, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10154-1
   Zerouali A, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P491, DOI [10.1109/saner.2019.8668013, 10.1109/SANER.2019.8668013]
   Zerouali A, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P619, DOI [10.1109/saner.2019.8667984, 10.1109/SANER.2019.8667984]
   Zimmermann M, 2019, PROCEEDINGS OF THE 28TH USENIX SECURITY SYMPOSIUM, P995
NR 89
TC 5
Z9 5
U1 2
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUN
PY 2023
VL 28
IS 3
AR 59
DI 10.1007/s10664-022-10278-4
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA A7QW2
UT WOS:000957038100001
DA 2024-07-18
ER

PT J
AU Assavakamhaenghan, N
   Wattanakriengkrai, S
   Shimada, N
   Kula, RG
   Ishio, T
   Matsumoto, K
AF Assavakamhaenghan, Noppadol
   Wattanakriengkrai, Supatsara
   Shimada, Naomichi
   Kula, Raula Gaikovina
   Ishio, Takashi
   Matsumoto, Kenichi
TI Does the first response matter for future contributions? A study of
   first contributions
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Sentiment and toxicity; First response; Newcomer
ID SOFTWARE; DEVELOPERS; COMMUNITY; VARIABLES
AB Open Source Software (OSS) projects rely on a continuous stream of new contributors for their livelihood. Recent studies reported that new contributors experience many barriers in their first contribution, with the social barrier being critical. Although a number of studies investigated the social barriers to new contributors, we hypothesize that negative first responses may cause an unpleasant feeling, and subsequently lead to the discontinuity of any future contribution. We execute protocols of a registered report to analyze 2,765,917 first contributions as Pull Requests (PRs) with 642,841 first responses. We characterize most first response as being positive, but less responsive, and exhibiting sentiments of fear, joy and love. Results also indicate that negative first responses have the literal intention to arouse emotions of being either constructive (50.71%) or criticizing (37.68%) in nature. Running different machine learning models, we find that predicting future interactions is low (F1 score of 0.6171), but relatively better than baselines. Furthermore, an analysis of these models show that interactions are positively correlated with a future contribution, with other dimensions (i.e., project, contributor, contribution) having a large effect.
C1 [Assavakamhaenghan, Noppadol; Wattanakriengkrai, Supatsara; Shimada, Naomichi; Kula, Raula Gaikovina; Ishio, Takashi; Matsumoto, Kenichi] Nara Inst Sci & Technol, Ikoma, Japan.
C3 Nara Institute of Science & Technology
RP Assavakamhaenghan, N (corresponding author), Nara Inst Sci & Technol, Ikoma, Japan.
EM noppadol.assavakamhaenghan.mt8@is.naist.jp;
   wattanakri.supatsara.ws3@is.naist.jp; shimada.naomichi.sm3@is.naist.jp;
   raula-k@is.naist.jp; ishio@is.naist.jp; matumoto@is.naist.jp
RI Kula, Raula/AAD-6079-2019
OI Kula, Raula/0000-0003-2324-0608; Ishio, Takashi/0000-0003-4106-699X
FU JSPS KAKENHI [JP20H05706, JP20K19774]
FX This work has been supported by JSPS KAKENHI Grant Number JP20H05706,
   JP20K19774
CR [Anonymous], 2002, P INT WORKSH PRINC S
   Assavakamhaenghan N, 2021, P 18 INT C MIN SOFTW, DOI 10.48550/arXiv.2104.02933
   Barua A, 2014, EMPIR SOFTW ENG, V19, P619, DOI 10.1007/s10664-012-9231-y
   Bertram D, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P291
   Bonaccorsi A., 2006, Knowledge Technology & Policy, V18, P40, DOI 10.1007/s12130-006-1003-9
   Bosu A, 2014, 2014 ACM IEEE INT S, P1, DOI DOI 10.1145/2652524.2652544
   Bougie Gargi, 2011, P 2 INT WORKSHOP WEB, P31, DOI [10.1145/1984701.1984707, DOI 10.1145/1984701.1984707]
   Calefato F, 2017, INT CONF AFFECT, P79, DOI 10.1109/ACIIW.2017.8272591
   Choi B, 2010, 2010 ACM CONFERENCE ON COMPUTER SUPPORTED COOPERATIVE WORK, P107
   Correa D, 2013, IEEE AUS SOFT ENGR, P88, DOI 10.1109/ASWEC.2013.20
   Destefanis G, 2015, PEERJ, DOI [10.7287/peerj.preprints.1515v1, DOI 10.7287/PEERJ.PREPRINTS.1515V1]
   El Asri I, 2019, INFORM SOFTWARE TECH, V114, P37, DOI 10.1016/j.infsof.2019.06.005
   Fagerholm F., 2014, P 8 ACM IEEE INT S E, P1
   Ferreira Isabella, 2021, Proceedings of the ACM on Human-Computer Interaction, V5, DOI 10.1145/3479497
   Gamalielsson J, 2014, J SYST SOFTWARE, V89, P128, DOI 10.1016/j.jss.2013.11.1077
   Golzadeh M, 2021, J SYST SOFTWARE, V175, DOI 10.1016/j.jss.2021.110911
   Gousios G, 2016, PROC INT CONF SOFTW, P285, DOI 10.1145/2884781.2884826
   Gousios G, 2013, IEEE WORK CONF MIN S, P233, DOI 10.1109/MSR.2013.6624034
   Hars A., 2001, Proceedings of the 34th Hawaii International Conference on System Sciences, P1
   Hata H, 2019, PROC INT CONF SOFTW, P1211, DOI 10.1109/ICSE.2019.00123
   Iaffaldano G, 2019, 2019 IEEE/ACM 2ND INTERNATIONAL WORKSHOP ON SOFTWARE HEALTH (SOHEAL 2019), P9, DOI 10.1109/SoHeal.2019.00009
   Iqbal T, 2021, INT REQUIR ENG CONF, P128, DOI 10.1109/RE51729.2021.00019
   Islam MR, 2018, J SYST SOFTWARE, V145, P125, DOI 10.1016/j.jss.2018.08.030
   Kula R. G., 2019, LIFE DEATH SOFTWARE, P97, DOI DOI 10.1007/978-981-13-7099-1_6
   Lakhani K.R., 2005, Perspectives on free and open source software, P3, DOI DOI 10.2139/SSRN.443040
   Lee A, 2017, PROC INT CONF SOFTW, P187, DOI 10.1109/ICSE.2017.25
   Legay D, 2018, Arxiv, DOI arXiv:1812.06269
   Li ZX, 2022, IEEE T SOFTWARE ENG, V48, P2173, DOI 10.1109/TSE.2021.3053403
   MANN HB, 1947, ANN MATH STAT, V18, P50, DOI 10.1214/aoms/1177730491
   Miller C., 2022, did you miss my comment or what?" understanding toxicity in open source discussions,", DOI [10.1145/3510003.3510111, DOI 10.1145/3510003.3510111]
   Pearson K, 1900, PHILOS MAG, V50, P157, DOI 10.1080/14786440009463897
   Pinto G, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P112, DOI 10.1109/SANER.2016.68
   Roberts JA, 2006, MANAGE SCI, V52, P984, DOI 10.1287/mnsc.1060.0554
   Rosenkranze C., 2011, P 32 INT C INF SYST
   Sanei A, 2021, Arxiv, DOI [arXiv:2103.10615, 10.48550/arXiv.2103.10615, DOI 10.48550/ARXIV.2103.10615]
   Sarker J, 2020, ASIA PAC SOFWR ENG, P218, DOI 10.1109/APSEC51365.2020.00030
   Schilling A., 2012, 2012 45th Hawaii International Conference on System Sciences (HICSS), P3446, DOI 10.1109/HICSS.2012.644
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   Shrestha P, 2020, PLOS ONE, V15, DOI 10.1371/journal.pone.0230250
   Sim SE, 1998, PROC INT CONF SOFTW, P361, DOI 10.1109/ICSE.1998.671389
   Steinmacher I, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P256, DOI 10.1145/3180155.3180208
   Subramanian VN, 2022, IEEE SOFTWARE, V39, P93, DOI 10.1109/MS.2020.3041241
   Swap W, 2001, J MANAGE INFORM SYST, V18, P95, DOI 10.1080/07421222.2001.11045668
   Tsay J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P144, DOI 10.1145/2635868.2635882
   Tuarob S, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09966-4
   Viera AJ, 2005, FAM MED, V37, P360
   von Krogh G, 2003, RES POLICY, V32, P1217, DOI 10.1016/S0048-7333(03)00050-7
   Wang D, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09997-x
   Wattanakriengkrai S, 2022, IEEE T SOFTWARE ENG, V48, P1480, DOI 10.1109/TSE.2020.3023177
   Zhou MH, 2012, PROC INT CONF SOFTW, P518, DOI 10.1109/ICSE.2012.6227164
NR 50
TC 0
Z9 0
U1 0
U2 1
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2023
VL 28
IS 3
AR 75
DI 10.1007/s10664-023-10299-7
PG 22
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA F7EY1
UT WOS:000983949400001
OA Green Submitted
DA 2024-07-18
ER

PT J
AU Stocco, A
   Pulfer, B
   Tonella, P
AF Stocco, Andrea
   Pulfer, Brian
   Tonella, Paolo
TI Model vs system level testing of autonomous driving systems: a
   replication and extension study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Autonomous driving; Model testing; System testing; DNN testing; Deep
   neural networks
ID ADVANCED DRIVER ASSISTANCE; GENERATION; SEARCH; CARS
AB Offline model-level testing of autonomous driving software is much cheaper, faster, and diversified than in-field, online system-level testing. Hence, researchers have compared empirically model-level vs system-level testing using driving simulators. They reported the general usefulness of simulators at reproducing the same conditions experienced in-field, but also some inadequacy of model-level testing at exposing failures that are observable only in online mode. In this work, we replicate the reference study on model vs system-level testing of autonomous vehicles while acknowledging several assumptions that we had reconsidered. These assumptions are related to several threats to validity affecting the original study that motivated additional analysis and the development of techniques to mitigate them. Moreover, we also extend the replicated study by evaluating the original findings when considering a physical, radio-controlled autonomous vehicle. Our results show that simulator-based testing of autonomous driving systems yields predictions that are close to the ones of real-world datasets when using neural-based translation to mitigate the reality gap induced by the simulation platform. On the other hand, model-level testing failures are in line with those experienced at the system level, both in simulated and physical environments, when considering the pre-failure site, similar-looking images, and accurate labels.
C1 [Stocco, Andrea; Tonella, Paolo] Univ Svizzera Italiana USI, Via Buffi 13, Lugano, Switzerland.
   [Pulfer, Brian] Univ Geneva, 24 Rue Gen Dufour, CH-1211 Geneva 4, Switzerland.
C3 Universita della Svizzera Italiana; University of Geneva
RP Stocco, A (corresponding author), Univ Svizzera Italiana USI, Via Buffi 13, Lugano, Switzerland.
EM andrea.stocco@usi.ch; brian.pulfer@unige.ch; paolo.tonella@usi.ch
RI Stocco, Andrea/GVT-6917-2022; Tonella, Paolo/C-1702-2015
OI Stocco, Andrea/0000-0001-8956-3894; 
FU Universita della Svizzera italiana; H2020 project PRECRIME under the ERC
   Advanced Grant 2017 Program (ERC) [787703]
FX Open access funding provided by Universita della Svizzera italiana. This
   work was partially supported by the H2020 project PRECRIME, funded under
   the ERC Advanced Grant 2017 Program (ERC Grant Agreement n. 787703).
CR Afzal A, 2021, IEEE INT CONF SOFTW, P263, DOI 10.1109/ICST49551.2021.00036
   [Anonymous], 2021, AWS DEEPRACER
   [Anonymous], 2011, ISO 262622011
   Arrieta A, 2017, IEEE C EVOL COMPUTAT, P688, DOI 10.1109/CEC.2017.7969377
   Balaji B, 2019, Arxiv, DOI arXiv:1911.01562
   Ben Abdessalem R, 2018, IEEE INT CONF AUTOM, P143, DOI 10.1145/3238147.3238192
   Ben Abdessalem R, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1016, DOI 10.1145/3180155.3180160
   Ben Abdessalem R, 2016, IEEE INT CONF AUTOM, P63, DOI 10.1145/2970276.2970311
   Betz J, 2022, Arxiv, DOI arXiv:2202.07008
   Biagiola M, 2022, ACM T SOFTW ENG METH, V31, DOI 10.1145/3511701
   Bojarski M, 2016, Arxiv, DOI [arXiv:1604.07316, 10.48550/arXiv.1604.07316]
   Bulsara A, 2020, OBSTACLE AVOIDANCE U
   Burch R., 1992, 1992 IEEE/ACM International Conference on Computer-Aided Design. Digest of Technical Papers (Cat. No.92CH03183-1), P90, DOI 10.1109/ICCAD.1992.279392
   Cerf VG, 2018, COMMUN ACM, V61, P7, DOI 10.1145/3177753
   Chen ST, 2019, IEEE T INTELL VEHICL, V4, P425, DOI 10.1109/TIV.2019.2919470
   Codevilla F, 2018, Arxiv, DOI arXiv:1809.04843
   Cohen J., 1988, STAT POWER ANAL BEHA
   Deng Y., 2020, An analysis of adversarial attacks and defenses on autonomous driving models
   Donkey Car, 2021, ABOUT US
   Dosovitskiy A., 2017, arXiv
   El Mostadi M, 2021, IEEE INT VEH SYM, P16, DOI 10.1109/IV48863.2021.9575953
   Felbinger H, 2021, RECENT VERIFICATION
   github, 2016, UD SELF DRIV CHALL, V2
   github, 2022, COD ART
   Haq FU, 2020, P 13 IEEE INT C SOFT
   Hendrycks D, 2019, Arxiv, DOI arXiv:1903.12261
   Humbatova N, 2021, ISSTA '21: PROCEEDINGS OF THE 30TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P67, DOI 10.1145/3460319.3464825
   Humbatova N, 2020, PROC INT CONF SOFTW, P1110, DOI 10.1145/3377811.3380395
   Jahangirova G, 2021, IEEE INT CONF SOFTW, P194, DOI 10.1109/ICST49551.2021.00030
   Jain A, 2020, Arxiv, DOI arXiv:2005.04755
   Kalra N, 2016, TRANSPORT RES A-POL, V94, P182, DOI 10.1016/j.tra.2016.09.010
   Kim J, 2019, PROC INT CONF SOFTW, P1039, DOI 10.1109/ICSE.2019.00108
   Kiran BR, 2022, IEEE T INTELL TRANSP, V23, P4909, DOI 10.1109/TITS.2021.3054625
   Kong ZL, 2021, Arxiv, DOI arXiv:1907.04449
   Li YH, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106200
   Liu MY, 2018, Arxiv, DOI arXiv:1703.00848
   Mahmoud Y, 2020, SHS WEB C, V77, P4002, DOI DOI 10.1051/SHSCONF/20207704002
   Media BGR, 2018, LLC WAYM SELF DRIV C
   Mullins GE, 2018, J SYST SOFTWARE, V137, P197, DOI 10.1016/j.jss.2017.10.031
   Evans AN, 2020, Arxiv, DOI arXiv:2006.10177
   Parthasarathy D, 2021, Arxiv, DOI arXiv:2107.07364
   Pei KX, 2017, PROCEEDINGS OF THE TWENTY-SIXTH ACM SYMPOSIUM ON OPERATING SYSTEMS PRINCIPLES (SOSP '17), P1, DOI 10.1145/3132747.3132785
   Riccio V, 2020, TESTING MACHINE LEAR
   Riccio V, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P876, DOI 10.1145/3368089.3409730
   Riccio V, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING ASE 2021, P355, DOI 10.1109/ASE51524.2021.9678764
   Sinha A, 2020, Arxiv, DOI arXiv:2003.03900
   Sotiropoulos T, 2017, 2017 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE QUALITY, RELIABILITY AND SECURITY (QRS), P150, DOI 10.1109/QRS.2017.25
   spectrum.ieee, 2021, SOFTW EAT CAR
   Stellet JE, 2015, IEEE INT C INTELL TR, P1455, DOI 10.1109/ITSC.2015.236
   Stocco A., 2021, arXiv
   Stocco A, 2022, P 37 IEEE ACM INT C
   Stocco A, 2020, P 31 INT S SOFTW REL
   Stocco A, 2022, J SOFTW-EVOL PROC, V34, DOI 10.1002/smr.2386
   Stocco A, 2020, PROC INT CONF SOFTW, P359, DOI 10.1145/3377811.3380353
   Tawn Kramer ME, 2022, CONTRIBUTORS DONKEYC
   Team Autumn, 2016, STEER ANGL MOD AUT
   Team Chauffeur, 2016, STEER ANGL MOD CHAUF
   technologyreview, 2012, MAN CARS HAV 100 MIL
   theatlantic, 2017, WAYM SECR TEST
   Thorn Eric, 2018, A framework for automated driving system testable cases and scenarios
   Tian YC, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P303, DOI 10.1145/3180155.3180220
   Ul Haq F, 2021, EMPIR SOFTW ENG, V26, DOI 10.1007/s10664-021-09982-4
   Unity3D, 2019, US
   Verma Ankit, 2021, SAE WCX DIG SUMM, DOI [10.4271/2021-01-0248, DOI 10.4271/2021-01-0248]
   Viitala A, 2020, Arxiv, DOI arXiv:2008.00715
   Wang Z, 2004, IEEE T IMAGE PROCESS, V13, P600, DOI 10.1109/TIP.2003.819861
   Waymo, 2021, Waymo Driver
   Waymo LLC, 2021, WAYM OP DAT
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Wotawa F, 2017, AUTOMATED DRIVING: SAFER AND MORE EFFICIENT FUTURE DRIVING, P519, DOI 10.1007/978-3-319-31895-0_22
   Yang ZP, 2020, Arxiv, DOI arXiv:2005.03844
   Zhang MS, 2018, IEEE INT CONF AUTOM, P132, DOI 10.1145/3238147.3238187
   Zhang Q, 2019, Arxiv, DOI arXiv:1909.03467
   Zhang XH, 2023, IEEE T SOFTWARE ENG, V49, P991, DOI 10.1109/TSE.2022.3170122
   Zhou HL, 2021, INT C PATT RECOG, P4436, DOI 10.1109/ICPR48806.2021.9412011
   Zhu JY, 2020, Arxiv, DOI [arXiv:1703.10593, DOI 10.48550/ARXIV.1703.10593]
NR 76
TC 3
Z9 3
U1 1
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2023
VL 28
IS 3
AR 73
DI 10.1007/s10664-023-10306-x
PG 26
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA F1YU7
UT WOS:000980380800001
OA Green Submitted, hybrid
DA 2024-07-18
ER

PT J
AU Muse, BA
   Khomh, F
   Antoniol, G
AF Muse, Biruk Asmare
   Khomh, Foutse
   Antoniol, Giuliano
TI Refactoring practices in the context of data-intensive systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Data-intensive systems; Data-access classes; Database access; Empirical
   study
ID CHALLENGES; CODE
AB Developers often refactor code to improve the maintainability and comprehension of the software. There are many studies on refactoring activities in traditional software systems. However, refactoring in data-intensive systems is not well explored. Understanding the refactoring practices of developers is important to develop efficient tool support. We conducted a longitudinal study of refactoring activities in data-access classes using 29 SQL and NoSQL database based data-intensive systems. We investigated the prevalence, co-occurrence, and evolution of data-access refactorings, and the association of data-access refactorings with data-access smells. We also conducted a manual analysis of 500 samples of data-access refactoring instances to identify the functionalities of the code that are targeted by such refactorings. Furthermore, we analyzed 500 sample data-access refactoring commits to understand the context behind the applied refactorings and explored the characteristics and contribution of developers involved in the refactorings. We also conducted a developer survey to complement our analysis on the subject systems. Our results show that data-access refactorings are prevalent and different in type. Most of the data-access refactorings target codes that implement data fetching and insertion, but they mostly do not modify data-access queries. Most of the data-access refactorings are done when adding or modifying features and during bug fixes. data-access refactoring is often performed by developers with higher development and refactoring experience. Overall, the results show that data-access refactorings focus on improving the code quality but not optimizing the underlying data-access operations by fixing data-access smells. Hence, more work is needed from the research community on providing awareness and support to practitioners on the benefits of addressing data-access smells with refactorings.
C1 [Muse, Biruk Asmare; Khomh, Foutse; Antoniol, Giuliano] Polytech Montreal, Quebec City, PQ, Canada.
C3 Universite de Montreal; Polytechnique Montreal
RP Muse, BA (corresponding author), Polytech Montreal, Quebec City, PQ, Canada.
EM biruk-asmare.muse@polymtl.ca; foutse.khomh@polymtl.ca;
   giuliano.antoniol@polymtl.ca
FU Natural Sciences and Engineering Research Council of Canada (NSERC);
   Fonds de Recherchedu Quebec (FRQ)
FX This work is partly funded by the Natural Sciences and Engineering
   Research Council of Canada (NSERC) and the Fonds de Recherchedu Quebec
   (FRQ).
CR Agrawal R., 1993, SIGMOD Record, V22, P207, DOI 10.1145/170036.170072
   AlOmar EA, 2021, EXPERT SYST APPL, V167, DOI 10.1016/j.eswa.2020.114176
   [Anonymous], 1994, P INT C VERY LARGE D
   Arzamasova N, 2018, IEEE T KNOWL DATA EN, V30, P421, DOI 10.1109/TKDE.2017.2772252
   Asmare MB, 2020, IEEE WORK CONF MIN S, P327, DOI 10.1145/3379597.3387467
   Baekkwan Park, 2021, Next Generation Information Processing System. Proceedings of ICCET 2020. Advances in Intelligent Systems and Computing (AISC 1162), P259, DOI 10.1007/978-981-15-4851-2_28
   Brin S., 1997, SIGMOD Record, V26, P255, DOI [10.1145/253262.253327, 10.1145/253262.253325]
   Chávez A, 2017, XXXI BRAZILIAN SYMPOSIUM ON SOFTWARE ENGINEERING (SBES 2017), P74, DOI 10.1145/3131151.3131171
   Chen CLP, 2014, INFORM SCIENCES, V275, P314, DOI 10.1016/j.ins.2014.01.015
   Cramer H., 1946, Mathematical Methods of Statistics, P500
   de Almeida FG, 2019, INT C PROGRAM COMPRE, P116, DOI 10.1109/ICPC.2019.00025
   Dig D, 2006, LECT NOTES COMPUT SC, V4067, P404
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Ferreira I, 2018, PROC IEEE ACM INT C, P406, DOI 10.1145/3183440.3195030
   Foidl H., 2022, P 1 INT C AI ENG SOF, P229
   Foidl H, 2019, EUROMICRO CONF PROC, P338, DOI 10.1109/SEAA.2019.00058
   Fowler Martin, 2002, Extreme Programming and Agile Methods-XP/Agile Universe 2002, V2418, P256, DOI DOI 10.1007/3-540-45672-431
   Hummel O, 2018, EUROMICRO CONF PROC, P362, DOI 10.1109/SEAA.2018.00066
   Iammarino M, 2019, PROC IEEE INT CONF S, P186, DOI 10.1109/ICSME.2019.00029
   Karwin Bill., 2010, Pragmatic Bookshelf
   Khumnin P, 2017, 2017 18TH IEEE/ACIS INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, ARTIFICIAL INTELLIGENCE, NETWORKING AND PARALLEL/DISTRIBUTED COMPUTING (SNDP 2017), P199, DOI 10.1109/SNPD.2017.8022723
   Kim M., 2010, PROC 18 ACM SIGSOFT, P371, DOI [10.1145/1882291.1882353, DOI 10.1145/1882291.1882353]
   Kurtanovic Z, 2018, REQUIR ENG, V23, P357, DOI 10.1007/s00766-018-0293-2
   Mahmoudi M, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P151, DOI [10.1109/saner.2019.8668012, 10.1109/SANER.2019.8668012]
   McDonald N., 2013, CHI'13 Extended Abstracts on Human Factors in Computing Systems: ACM, P139
   Meurice L, 2016, LECT NOTES COMPUT SC, V9694, P491, DOI 10.1007/978-3-319-39696-5_30
   Murphy GC, 2006, IEEE SOFTWARE, V23, P76, DOI 10.1109/MS.2006.105
   Muse BA, 2022, 29 IEEE INT C SOFTWA
   Muse BA, 2022, REPLICATION PACKAGE, DOI [10.5281/zenodo.7140854, DOI 10.5281/ZENODO.7140854]
   Muse BA, 2022, EMPIR SOFTW ENG, V27, DOI 10.1007/s10664-022-10119-4
   Nagy C, 2018, PROC IEEE ACM INT C, P93, DOI 10.1145/3183440.3183496
   Nagy C, 2017, IEEE INT WORK C SO, P147, DOI 10.1109/SCAM.2017.19
   Pedregosa F, 2011, J MACH LEARN RES, V12, P2825
   Perez-Palacin D, 2019, SOFTW SYST MODEL, V18, P3577, DOI 10.1007/s10270-019-00730-3
   Peruma A, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110704
   Peruma A, 2019, 2019 IEEE/ACM 6TH INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2019), P148, DOI 10.1109/MOBILESoft.2019.00030
   Peruma Anthony, 2018, P 2 INT W REF MONTP, P26, DOI DOI 10.1145/3242163.3242169
   Piatetsky S, 1991, DISCOVERY ANAL PRESE
   Sharma T, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P55, DOI 10.1145/3183519.3183529
   Shome A., 2022, P 1 INT C ENG SOFTWA, P205, DOI [10.1145/3522664.3528621, DOI 10.1145/3522664.3528621]
   Silva D, 2020, INT J ENTREP BEHAV R
   Silva D, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P858, DOI 10.1145/2950290.2950305
   Spadini D, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P908, DOI 10.1145/3236024.3264598
   Tsantalis N, 2022, IEEE T SOFTWARE ENG, V48, P930, DOI 10.1109/TSE.2020.3007722
   Vassallo C, 2019, SCI COMPUT PROGRAM, V180, P1, DOI 10.1016/j.scico.2019.05.002
   Wohlin C., 2000, EXPT SOFTWARE ENG IN
   Zhou C, 2018, 2018 IEEE SYMPOSIUM ON VISUAL LANGUAGES AND HUMAN-CENTRIC COMPUTING (VL/HCC), P319, DOI 10.1109/VLHCC.2018.8506577
   Zhou JY, 2021, IEEE T SOFTWARE ENG, V47, P2919, DOI 10.1109/TSE.2020.2974469
NR 48
TC 0
Z9 0
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2023
VL 28
IS 2
AR 46
DI 10.1007/s10664-022-10271-x
PG 66
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 9A3MN
UT WOS:000933965100001
DA 2024-07-18
ER

PT J
AU Nadi, S
   Sakr, N
AF Nadi, Sarah
   Sakr, Nourhan
TI Selecting third-party libraries: the data scientist's perspective
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Library selection; Software libraries; Data scientists; Data science;
   Third-party dependencies
AB With the increased reliance on data-driven decisions and software services, data scientists are becoming an integral part of many software teams and enterprise operations. To perform their tasks, data scientists rely on various third-party libraries (e.g., pandas in Python for data wrangling or ggplot in R for data visualization). Selecting the right library to use is often a difficult task, with many factors influencing this selection. While there has been a lot of research on the factors that software developers take into account when selecting a library, it is not clear if these factors influence data scientists' library selection in the same way, especially given several differences between both groups. To address this gap, we replicate a recent survey of library selection factors, but target data scientists instead of software developers. Our survey of 90 participants shows that data scientists consider several factors when selecting libraries to use, with technical factors such as the usability of the library, fit for purpose, and documentation being the three highest influencing factors. Additionally, we find that there are 11 factors that data scientists rate differently than software developers. For example, data scientists are influenced more by the collective experience of the community but less by the library's security or license. We also uncover new factors that influence data scientists' library selection, such as the statistical rigor of the library. We triangulate our survey results with feedback from five focus groups involving 18 additional data science experts with various roles, whose input allow us to further interpret our survey results. We discuss the implications of our findings for data science library maintainers as well as researchers who want to design recommender and/or comparison systems that help data scientists with library selection.
C1 [Nadi, Sarah] Univ Alberta, Edmonton, AB, Canada.
   [Sakr, Nourhan] Amer Univ Cairo, Cairo, Egypt.
C3 University of Alberta; Egyptian Knowledge Bank (EKB); American
   University Cairo
RP Nadi, S (corresponding author), Univ Alberta, Edmonton, AB, Canada.
EM nadi@ualberta.ca; n.sakr@columbia.edu
OI Nadi, Sarah/0000-0002-0091-6030
FU Canada Research Chairs program
FX We would like to thank all our participants who filled out the survey.
   Thanks to Andrew Nady for help with early data analysis scripts. Sarah
   Nadi's research is funded by the Canada Research Chairs program.
CR Abdalkareem R, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P385, DOI 10.1145/3106237.3106267
   [Anonymous], 2020, KAGGLE
   [Anonymous], 2021, Stack Overflow
   [Anonymous], 2020, What you should know about COVID-19 to protect yourself and others
   Biswas S, 2021, ARXIV211201590
   Czerwonka J, 2013, IEEE SOFTWARE, V30, P64, DOI 10.1109/MS.2013.68
   de la Mora FL, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P22, DOI 10.1145/3273934.3273937
   de la Mora FL, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P37, DOI 10.1145/3183399.3183418
   Dong H, 2021, 2021 36TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING WORKSHOPS (ASEW 2021), P114, DOI 10.1109/ASEW52652.2021.00032
   Economist, 2017, ECONOMIST
   El-Hajj R, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P1591, DOI 10.1145/3368089.3417922
   Gizas A., 2012, P 21 INT C COMPANION, P513
   Harris H., 2013, ANAL ANAL INTROSPECT
   Hora A, 2015, PROC IEEE INT CONF S, P321, DOI 10.1109/ICSM.2015.7332478
   Hu JM, 2020, PROC INT CONF SOFTW, P1086, DOI 10.1145/3377811.3380366
   Kandel S, 2012, IEEE T VIS COMPUT GR, V18, P2917, DOI 10.1109/TVCG.2012.219
   Kery MB, 2018, PROCEEDINGS OF THE 2018 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS (CHI 2018), DOI 10.1145/3173574.3173748
   Kim M, 2018, IEEE T SOFTWARE ENG, V44, P1024, DOI 10.1109/TSE.2017.2754374
   Kim M, 2016, PROC INT CONF SOFTW, P96, DOI 10.1145/2884781.2884783
   Kontio J, 2004, 2004 INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING, PROCEEDINGS, P271
   Kross S, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300493
   Larios Vargas E, 2020, P 28 ACM JOINT M EUR, P245, DOI 10.1145/3368089.3409711
   Larios Vargas E, 2020, SELECTING 3 PARTY LI, DOI 10.5281/zenodo.3979446
   Ma YX, 2022, IEEE T SOFTWARE ENG, V48, P485, DOI 10.1109/TSE.2020.2993758
   Matplotlib, 2021, about us
   Metwalli SA, 2020, DATA VISUALIZATION 1
   Mileva YM, 2009, IWPSE-EVOL 09: ERCIM WORKSHOP ON SOFTWARE EVOLUTION (EVOL) AND INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION (IWPSE), P57
   Muller M, 2019, CHI 2019: PROCEEDINGS OF THE 2019 CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, DOI 10.1145/3290605.3300356
   Myers BA, 2016, COMMUN ACM, V59, P62, DOI 10.1145/2896587
   Nahar N, 2022, P 44 INT C SOFTW ENG
   Nguyen G, 2019, ARTIF INTELL REV, V52, P77, DOI 10.1007/s10462-018-09679-z
   Ni AS, 2021, PROC INT CONF SOFTW, P112, DOI 10.1109/ICSE43902.2021.00023
   pandemric, 2021, about us
   Pano A, 2018, EMPIR SOFTW ENG, V23, P3503, DOI 10.1007/s10664-018-9613-x
   Patil DJ., 2011, Building data science teams
   Piccioni Marco, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P5, DOI 10.1109/ESEM.2013.14
   Pressman R.S., 2005, Software engineering: a Practitioner's Approach
   Psallidas F, 2019, ABS191209536 CORR
   Ralph P, 2020, ARXIV201003525
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robinson S, 2018, BEST MACHINE LEARNIN
   Siebert J., 2021, Engineering Proceeding, V5, P22, DOI [DOI 10.3390/ENGPROC2021005022, DOI 10.3390/ENGPR0C2021005022]
   Sol T, 2021, CHOOSING OPEN SOURCE
   Stancin I, 2019, 2019 42ND INTERNATIONAL CONVENTION ON INFORMATION AND COMMUNICATION TECHNOLOGY, ELECTRONICS AND MICROELECTRONICS (MIPRO), P977, DOI [10.23919/mipro.2019.8757088, 10.23919/MIPRO.2019.8757088]
   T. S. community, 2021, SCIPY LIB
   Tensorflow, 2021, about us
   Teyton C., 2012, 2012 19th Working Conference on Reverse Engineering (WCRE), P289, DOI 10.1109/WCRE.2012.38
   Teyton C, 2014, J SOFTW-EVOL PROC, V26, P1030, DOI 10.1002/smr.1660
   The SciPy community, 2021, WILC RANK SUM TEST
   Thung F, 2013, WORK CONF REVERSE EN, P182, DOI 10.1109/WCRE.2013.6671293
   Uddin G, 2017, ASE 17
   Wickham H, 2021, US
   Xu BW, 2020, EMPIR SOFTW ENG, V25, P755, DOI 10.1007/s10664-019-09771-0
   Yang C, 2021, P 36 IEEE ACM INT C, V11
   Zhang Amy X., 2020, Proceedings of the ACM on Human-Computer Interaction, V4, DOI 10.1145/3392826
NR 55
TC 1
Z9 1
U1 3
U2 7
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2023
VL 28
IS 1
AR 15
DI 10.1007/s10664-022-10241-3
PG 25
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 6W3EC
UT WOS:000895613000001
DA 2024-07-18
ER

PT J
AU Alégroth, E
   Karl, K
   Rosshagen, H
   Helmfridsson, T
   Olsson, N
AF Alegroth, Emil
   Karl, Kristian
   Rosshagen, Helena
   Helmfridsson, Tomas
   Olsson, Nils
TI Practitioners' best practices to Adopt, Use or Abandon Model-based
   Testing with Graphical models for Software-intensive Systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Model-based testing; Test automation; Software Engineering; Industrial
   study; Expert knowledge
AB Model-based testing (MBT) has been extensively researched for software-intensive systems but, despite the academic interest, adoption of the technique in industry has been sparse. This phenomenon has been observed by our industrial partners for MBT with graphical models. They perceive one cause to be a lack of evidence-based MBT guidelines that, in addition to technical guidelines, also take non-technical aspects into account. This hypothesis is supported by a lack of such guidelines in the literature.
   Objective: The objective of this study is to elicit, and synthesize, MBT experts' best practices for MBT with graphical models. The results aim to give guidance to practitioners and aspire to give researchers new insights to inspire future research.
   Method: An interview survey is conducted using deep, semi-structured, interviews with an international sample of 17 MBT experts, in different roles, from software industry. Interview results are synthesised through semantic equivalence analysis and verified by MBT experts from industrial practice.
   Results: 13 synthesised conclusions are drawn from which 23 best-practice guidelines are derived for the adoption, use and abandonment of the technique. In addition, observations and expert insights are discussed that help explain the lack of wide-spread adoption of MBT with graphical models in industrial practice.
   Conclusions: Several technical aspects of MBT are covered by the results as well as conclusions that cover process- and organizational factors. These factors relate to the mindset, knowledge, organization, mandate and resources that enable the technique to be used effectively within an organization. The guidelines presented in this work complement existing knowledge and, as a primary objective, provide guidance for industrial practitioners to better succeed with MBT with graphical models.
C1 [Alegroth, Emil; Karl, Kristian; Rosshagen, Helena; Helmfridsson, Tomas; Olsson, Nils] SERL Sweden Blekinge Inst Technol Karlskrona, Karlskrona, Sweden.
RP Alégroth, E (corresponding author), SERL Sweden Blekinge Inst Technol Karlskrona, Karlskrona, Sweden.
EM emil.alegroth@bth.se; krikar@spotify.com; helena.rosshagen@addq.se;
   tomas.helmfridsson@addq.se; nils.olsson@arcticblue.se
FU Blekinge Institute of Technology
FX Open access funding provided by Blekinge Institute of Technology.
CR Aho P., 2011, Proceedings of the 2011 Eighth International Conference on Information Technology: New Generations (ITNG), P268, DOI 10.1109/ITNG.2011.54
   Alégroth E, 2017, EMPIR SOFTW ENG, V22, P2937, DOI 10.1007/s10664-016-9497-6
   [Anonymous], 2011, ADV SYSTEM TESTING V
   [Anonymous], 2020, EMPIR SOFTW ENG
   Arefin SS, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P256, DOI 10.1145/3183519.3183551
   Asaadi Hamid Reza, 2012, Fundamentals of Software Engineering. 4th IPM International Conference, FSEN 2011. Revised Selected Papers, P253, DOI 10.1007/978-3-642-29320-7_17
   Azevedo V., 2017, REV ENFERMAGEM REFER, VIV Srie, P159, DOI DOI 10.12707/RIV17018
   Baskarada S, 2014, QUAL REP, V19
   Broy M., 2005, Springer LNCS
   Drave I, 2018, EUROMICRO CONF PROC, P146, DOI 10.1109/SEAA.2018.00032
   Felderer M, 2016, SOFTW TEST VERIF REL, V26, P119, DOI 10.1002/stvr.1580
   Freeman P, 2004, COMMUN ACM, V47, P19, DOI 10.1145/1012037.1012054
   Garousi V, 2021, ARXIV 210402152
   Gurbuz HG, 2018, SOFTWARE QUAL J, V26, P1327, DOI 10.1007/s11219-017-9386-2
   Habib A, 2018, IEEE INT CONF AUTOM, P317, DOI 10.1145/3238147.3238213
   Irshad M, 2021, J SYST SOFTWARE, V177, DOI 10.1016/j.jss.2021.110944
   Janicki M, 2012, SOFTW TEST VERIF REL, V22, P313, DOI 10.1002/stvr.460
   Jin K, 2021, 14 INNOVATIONS SOFTW, P110
   Jorgensen P.C., 2017, The Craft of Model-Based Testing
   Khan MA, 2019, IEEE INT CONF COMM, DOI 10.1109/iccw.2019.8757155
   Khan MU, 2018, COMPUT STAND INTER, V55, P156, DOI 10.1016/j.csi.2017.08.002
   Kramer A., 2016, MODEL BASED TESTING, DOI [10.1002/9781119130161, DOI 10.1002/9781119130161]
   Li N, 2016, IEEE INT CONF SOFTW, P393, DOI 10.1109/ICST.2016.41
   Lima Bruno., 2015, 2015 10th International Joint Conference on Software Technologies (ICSOFT), V1, P1
   Munaiah Nuthan, 2017, INT S ENG SEC SOFTW, P70
   Nguyen PH, 2017, INFORM SOFTWARE TECH, V83, P116, DOI 10.1016/j.infsof.2016.11.004
   Nikiforova A, 2021, EXTENDED REVISED SEL, V15, P2544
   North D., 2006, BETTER SOFTWARE MAGA
   Obando Vasquez Rebeca, 2019, Information Technology and Systems. Proceedings of ICITS 2019. Advances in Intelligent Systems and Computing (AISC 918), P294, DOI 10.1007/978-3-030-11890-7_29
   Offutt AJ, 1996, SOFTWARE PRACT EXPER, V26, P165, DOI 10.1002/(SICI)1097-024X(199602)26:2<165::AID-SPE5>3.0.CO;2-K
   Peleska Jan, 2018, Leveraging Applications of Formal Methods, Verification and Validation. Industrial Practice. 8th International Symposium, ISoLA 2018. Proceedings: Lecture Notes in Computer Science (LNCS 11247), P82, DOI 10.1007/978-3-030-03427-6_11
   Peleska J, 2013, ELECTRON P THEOR COM, P3, DOI 10.4204/EPTCS.111.1
   Rueda U., 2015, ACTAS 20 JORNADAS IN, P236
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Schneider S., 2021, THESIS WIEN
   Utting M, 2012, SOFTW TEST VERIF REL, V22, P297, DOI 10.1002/stvr.456
   Villalobos-Arias L., 2019, CIBSE, V22, P3, DOI [10.19153/cleiej.22.1.3, DOI 10.19153/CLEIEJ.22.1.3]
   Vsquez R O, 2019, INT C INFORM TECHNOL
   Zafar Muhammad Nouman, 2021, ISEC 2021: Proceedings of the 14th Innovations in Software Engineering Conference (formerly known as India Software Engineering Conference), DOI 10.1145/3452383.3452388
NR 39
TC 2
Z9 3
U1 0
U2 4
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2022
VL 27
IS 5
AR 103
DI 10.1007/s10664-022-10145-2
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 1U7GT
UT WOS:000805577100009
PM 35668867
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Liu, F
   Li, G
   Wei, BL
   Xia, X
   Fu, ZY
   Jin, Z
AF Liu, Fang
   Li, Ge
   Wei, Bolin
   Xia, Xin
   Fu, Zhiyi
   Jin, Zhi
TI A unified multi-task learning model for AST-level and token-level code
   completion
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Code completion; Deep learning; Multi-task learning
AB Code completion, one of the most useful features in the Integrated Development Environments (IDEs), can accelerate software development by suggesting the next probable tokens based on existing code in real-time. Recent studies have shown that recurrent neural networks based statistical language models can improve the performance of code completion tools through learning from large-scale software repositories. However, most of the existing approaches treat code completion as a single generation task in which the model predicts the value of the tokens or AST nodes based on the contextual source code without considering the syntactic constraints such as the static type information. Besides, the semantic relationships in programs can be very long. Existing recurrent neural networks based language models are not sufficient to model the long-term dependency. In this paper, we tackle the aforementioned limitations by building a unified multi-task learning based code completion model for both AST-level and token-level code completion. To model the relationship and constraints between the type and value of the code elements, we adopt a multi-task learning framework to predict the type and value of the tokens (AST nodes) simultaneously. To capture the long-term dependency in the input programs, we employ a self-attentional architecture based network as the base language model. We apply our approach to both AST-level and token-level code completion. Experimental results demonstrate the effectiveness of our model when compared with state-of-the-art methods.
C1 [Liu, Fang; Li, Ge; Wei, Bolin; Fu, Zhiyi; Jin, Zhi] Peking Univ, Minist Educ, Key Lab High Confidence Software Technol, Beijing, Peoples R China.
   [Liu, Fang; Li, Ge; Wei, Bolin; Fu, Zhiyi; Jin, Zhi] Peking Univ, Sch Comp Sci, Beijing, Peoples R China.
   [Xia, Xin] Huawei, Shenzhen, Peoples R China.
C3 Peking University; Peking University; Huawei Technologies
RP Li, G (corresponding author), Peking Univ, Minist Educ, Key Lab High Confidence Software Technol, Beijing, Peoples R China.; Li, G (corresponding author), Peking Univ, Sch Comp Sci, Beijing, Peoples R China.
EM liufang816@pku.edu.cn; lige@pku.edu.cn; bolin.wbl@gmail.com;
   xin.xia@acm.org; ypfzy@pku.edu.cn; zhijin@pku.edu.cn
RI Liu, Fang/HNI-6790-2023; Jin, Zhi/E-1288-2013
OI fu, zhi yi/0000-0003-0260-6404
FU National Natural Science Foundation of China [62072007, 62192731,
   62192733, 61832009, 62192730]
FX This research is supported by the National Natural Science Foundation of
   China under Grant Nos. 62072007, 62192731, 62192733, 61832009, 62192730.
   Zhi Jin and Ge Li are corresponding authors.
CR Abadi M, 2016, ACM SIGPLAN NOTICES, V51, P1, DOI [10.1145/3022670.2976746, 10.1145/2951913.2976746]
   Nguyen AT, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P858, DOI 10.1109/ICSE.2015.336
   Bahdanau D, 2016, Arxiv, DOI [arXiv:1409.0473, 10.48550/arXiv.1409.0473]
   Bhoopchand, 2016, ARXIV161108307
   Bielik P, 2016, PR MACH LEARN RES, V48
   Bruch M, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P213, DOI 10.1145/1595696.1595728
   Caruana R, 1997, MACH LEARN, V28, P41, DOI 10.1023/A:1007379606734
   Chelba, 1998, P 36 ANN M ASS COMP, V1, P225
   Chelba C, 1997, 5 EUR C SPEECH COMM
   Cho Kyunghyun, 2014, SYNTAX SEMANTICS STR, P5, DOI [10.3115/v1/w14-4012, 10.3115 /v1/D14-1179, DOI 10.3115/V1/D14-1179]
   Costa C, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P523, DOI 10.1145/2950290.2950339
   Dai ZH, 2019, 57TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2019), P2978
   Deng L, 2013, INT CONF ACOUST SPEE, P8599, DOI 10.1109/ICASSP.2013.6639344
   Devlin J., 2018, BERT PRE TRAINING DE
   Dong DX, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P1723
   Fang Liu, 2020, 2020 35th IEEE/ACM International Conference on Automated Software Engineering (ASE), P473, DOI 10.1145/3324884.3416591
   Feng Zhangyin, 2020, ARXIV200208155
   Gage P., 1994, C Users Journal, V12, P23
   Guo H, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P687
   Han JX, 2019, P INT COMP SOFTW APP, P21, DOI 10.1109/COMPSAC.2019.00013
   Hellendoorn VJ, 2019, PROC INT CONF SOFTW, P960, DOI 10.1109/ICSE.2019.00101
   Hellendoorn VJ, 2018, ESEC/FSE'18: PROCEEDINGS OF THE 2018 26TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P152, DOI 10.1145/3236024.3236051
   Hellendoorn VJ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P763, DOI 10.1145/3106237.3106290
   Hindle A, 2012, PROC INT CONF SOFTW, P837, DOI 10.1109/ICSE.2012.6227135
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Hou Daqing, 2010, P 2 INT WORKSHOP REC, P26
   Hu X, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P2269
   Isonuma M., 2017, P 2017 C EMP METH NA, P2101, DOI DOI 10.18653/V1/D17-1223
   Karampatsis RM, 2020, PROC INT CONF SOFTW, P1073, DOI 10.1145/3377811.3380342
   Khandelwal U, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P284
   Kingma D. P., 2014, arXiv
   Li J, 2018, PROCEEDINGS OF THE TWENTY-SEVENTH INTERNATIONAL JOINT CONFERENCE ON ARTIFICIAL INTELLIGENCE, P4159
   Lin Y, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL), VOL 1, P799
   Liu F, 2020, INT C PROGRAM COMPRE, P37, DOI 10.1145/3387904.3389261
   Liu Xiaodong., 2015, Proceedings of the 2015 Conference of the North American Chapter of the Association for Computational Linguistics: Human Language Technologies, P912
   Long M, 2015, ARXIV150602117
   Lu YX, 2017, PROC CVPR IEEE, P1131, DOI 10.1109/CVPR.2017.126
   Luong M.-T., 2016, P INT C LEARN REPR I
   Macbeth G, 2011, UNIV PSYCHOL, V10, P545, DOI 10.11144/Javeriana.upsy10-2.cdcp
   Maddison CJ, 2014, PR MACH LEARN RES, V32, P649
   Malik RS, 2019, PROC INT CONF SOFTW, P304, DOI 10.1109/ICSE.2019.00045
   Nguyen T.T., 2013, P 2013 9 JOINT M FDN, P532, DOI DOI 10.1145/2491411.2491458
   Peng Nanyun., 2017, P 2 WORKSHOP REPRESE, P91, DOI DOI 10.18653/V1/W17-2612
   Raychev V, 2016, ACM SIGPLAN NOTICES, V51, P731, DOI 10.1145/3022671.2984041
   Robbes Romain, 2008, 2008 23rd IEEE/ACM International Conference on Automated Software Engineering, P317, DOI 10.1109/ASE.2008.42
   Ruder S, 2017, arXiv preprint arXiv:1706.05098
   Schuster M, 1997, IEEE T SIGNAL PROCES, V45, P2673, DOI 10.1109/78.650093
   Song Dawn, 2016, Neural code completion
   Svyatkovskiy A, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2727, DOI 10.1145/3292500.3330699
   Svyatkovskoy Alexey, 2020, ARXIV200413651
   Tu ZP, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P269, DOI 10.1145/2635868.2635875
   Vaswani A, 2017, ADV NEUR IN, V30
   Wei Bolin, 2019, P 33 ANN C NEURAL IN, P6563
   White M, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P334, DOI 10.1109/MSR.2015.38
   WILCOXON F, 1945, BIOMETRICS BULL, V1, P80, DOI 10.1093/jee/39.2.269
   Yao ZY, 2019, WEB CONFERENCE 2019: PROCEEDINGS OF THE WORLD WIDE WEB CONFERENCE (WWW 2019), P2203, DOI 10.1145/3308558.3313632
   Zaremoodi P, 2018, PROCEEDINGS OF THE 56TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 2, P656
NR 57
TC 10
Z9 10
U1 1
U2 11
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JUL
PY 2022
VL 27
IS 4
AR 91
DI 10.1007/s10664-022-10140-7
PG 38
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA 0S6VM
UT WOS:000786409300001
DA 2024-07-18
ER

PT J
AU Businge, J
   Openja, M
   Nadi, S
   Berger, T
AF Businge, John
   Openja, Moses
   Nadi, Sarah
   Berger, Thorsten
TI Reuse and maintenance practices among divergent forks in three software
   ecosystems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Clone-and-own; Change propagation; Variant synchronisation; Empirical
   study; Variant developers; Version control systems; Pull requests;
   Cherry-picking changes; Rebasing changes; Squashing changes; Software
   product lines; Variants
ID GITHUB
AB With the rise of social coding platforms that rely on distributed version control systems, software reuse is also on the rise. Many software developers leverage this reuse by creating variants through forking, to account for different customer needs, markets, or environments. Forked variants then form a so-called software family; they share a common code base and are maintained in parallel by same or different developers. As such, software families can easily arise within software ecosystems, which are large collections of interdependent software components maintained by communities of collaborating contributors. However, little is known about the existence and characteristics of such families within ecosystems, especially about their maintenance practices. Improving our empirical understanding of such families will help build better tools for maintaining and evolving such families. We empirically explore maintenance practices in such fork-based software families within ecosystems of open-source software. Our focus is on three of the largest software ecosystems existence today: Android, .NET, and JavaScript. We identify and analyze software families that are maintained together and that exist both on the official distribution platform (Google play, nuget, and npm) as well as on GitHub , allowing us to analyze reuse practices in depth. We mine and identify 38 software families, 526 software families, and 8,837 software families from the ecosystems of Android, .NET, and JavaScript, to study their characteristics and code-propagation practices. We provide scripts for analyzing code integration within our families. Interestingly, our results show that there is little code integration across the studied software families from the three ecosystems. Our studied families also show that techniques of direct integration using git outside of GitHub is more commonly used than GitHub pull requests. Overall, we hope to raise awareness about the existence of software families within larger ecosystems of software, calling for further research and better tools support to effectively maintain and evolve them.
C1 [Businge, John] Mbarara Univ Sci & Technol, Mbarara, Uganda.
   [Businge, John] Univ Antwerp, Antwerp, Belgium.
   [Openja, Moses] Ecole Polytech Montreal, SWAT Lab, Montreal, PQ, Canada.
   [Nadi, Sarah] Univ Alberta, Edmonton, AB, Canada.
   [Berger, Thorsten] Ruhr Univ Bochum, Bochum, Germany.
   [Berger, Thorsten] Chalmers Univ Gothenburg, Gothenburg, Sweden.
C3 Mbarara University of Science & Technology; University of Antwerp;
   Universite de Montreal; Polytechnique Montreal; University of Alberta;
   Ruhr University Bochum; Chalmers University of Technology
RP Businge, J (corresponding author), Mbarara Univ Sci & Technol, Mbarara, Uganda.; Businge, J (corresponding author), Univ Antwerp, Antwerp, Belgium.
EM johnxu21@gmail.com; openjamosesopm@gmail.com; nadi@ualberta.ca;
   thorsten.berger@rub.de
RI Openja, Moses/HDN-9364-2022
OI Businge, John/0000-0003-3206-7085
FU FWO-Vlaanderen; F.R.S.-FNRS via the EOS project [30446992 SECO-ASSIST];
   Swedish research council; Canada Research Chairs Program; Wallenberg
   Academy
FX We thank Serge Demeyer for comments on earlier drafts of this work. John
   Businge's work is supported by the FWO-Vlaanderen and F.R.S.-FNRS via
   the EOS project 30446992 SECO-ASSIST. Thorsten Berger's work is
   supported by Swedish research council and Wallenberg Academy. Sarah
   Nadi's research was undertaken, in part, thanks to funding from the
   Canada Research Chairs Program.
CR [Anonymous], 2014, PROGIT APRESS
   [Anonymous], 2005, OVERVIEW GENERATIVE
   [Anonymous], 2016, Feature-Oriented Software Product Lines
   [Anonymous], 2020, ONLINE APPENDIX
   Berger T, 2020, EMPIR SOFTW ENG, V25, P1755, DOI 10.1007/s10664-019-09787-6
   Berger T, 2014, INFORM SOFTWARE TECH, V56, P1520, DOI 10.1016/j.infsof.2014.05.005
   Brun Y., 2011, Proceedings of the 19th ACM SIGSOFT symposium and the 13th European Conference on Foundations of Software Engineering (FSE'11), P168, DOI [10.1145/2025113.2025139, DOI 10.1145/2025113.2025139]
   Businge J., 2012, 2012 12th IEEE Working Conference on Source Code Analysis and Manipulation (SCAM 2012), P164, DOI 10.1109/SCAM.2012.10
   Businge J., 2010, EVOL IWPSE 10, P63, DOI [10.1145/1862372.1862389, DOI 10.1145/1862372.1862389]
   Businge J., 2017, Proceedings of the 13th International Conference on Predictive Models and Data Analytics in Software Engineering. PROMISE, P33, DOI DOI 10.1145/3127005.3127009
   Businge J., 2020, BELGIUM NETHERLANDS, V2912
   Businge J, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P117, DOI [10.1109/saner.2019.8668018, 10.1109/SANER.2019.8668018]
   Businge J, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P287, DOI [10.1109/saner.2019.8667998, 10.1109/SANER.2019.8667998]
   Businge J, 2018, PROC IEEE INT CONF S, P625, DOI 10.1109/ICSME.2018.00072
   Businge J, 2015, SOFTWARE QUAL J, V23, P107, DOI 10.1007/s11219-013-9221-3
   Businge J, 2013, EUR CON SFTWR MTNCE, P37, DOI 10.1109/CSMR.2013.14
   Businge J, 2012, 2012 28TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE MAINTENANCE (ICSM), P368, DOI 10.1109/ICSM.2012.6405295
   Chacon Scott, 2014, Git Tools-Rewriting History
   Chua BB, 2017, 21 PAC AS C INF SYST, P75
   de Souza Cleidson R. B., 2003, P 2003 INT ACM SIGGR, P105, DOI DOI 10.1145/958160.958177
   Decan A, 2019, EMPIR SOFTW ENG, V24, P381, DOI 10.1007/s10664-017-9589-y
   Dixion J., 2009, DIFFERENT KINDS OPEN
   Dubinsky Y, 2013, EUR CON SFTWR MTNCE, P25, DOI 10.1109/CSMR.2013.13
   Ernst N. A., 2010, ARXIV10042889
   Gamalielsson J, 2014, J SYST SOFTWARE, V89, P128, DOI 10.1016/j.jss.2013.11.1077
   German DM, 2016, EMPIR SOFTW ENG, V21, P260, DOI 10.1007/s10664-014-9356-2
   GitHub I, 2020, PULL REQUEST MERGES
   Jang JY, 2012, P IEEE S SECUR PRIV, P48, DOI 10.1109/SP.2012.13
   Jiang J, 2017, EMPIR SOFTW ENG, V22, P547, DOI 10.1007/s10664-016-9436-6
   Kalliamvakou E., 2014, P 11 WORK C MIN SOFT
   Kawuma S, 2016, 2016 IEEE 24 INT C P, P1, DOI DOI 10.1109/ICPC.2016.7503716
   Kononenko O, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING - SOFTWARE ENGINEERING IN PRACTICE TRACK (ICSE-SEIP 2018), P124, DOI 10.1145/3183519.3183542
   Krueger J, 2020, 24 ACM INT SYST SOFT
   Krueger J, 2020, VAMOS
   Krüger J, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P432, DOI 10.1145/3368089.3409684
   Laurent AS., 2008, UNDERSTANDING OPEN S
   Li L, 2016, SPLC
   Lillack M, 2019, 41 INT C SOFTW ENG I
   Mahmood W, 2020, 14 INT WORK C VAR MO
   Mojica IJ, 2014, IEEE SOFTWARE, V31, P78, DOI 10.1109/MS.2013.142
   Mukelabai M, 2021, ICSE NIER
   Munaiah N, 2017, EMPIR SOFTW ENG, V22, P3219, DOI 10.1007/s10664-017-9512-6
   Nyman L., 2012, 8 IFIP WG 2 3 INT C, P274, DOI DOI 10.1007/978-3-642-33442-9_21FF.FFHAL-01519038F
   Nyman L, 2013, TECHNOL INNOV MANAG, P7
   Nyman L, 2011, IFIP ADV INF COMM TE, V365, P259
   Nyman Linus, 2014, P INT S OPEN COLLABO, V6, P1
   Openja M, 2020, PROC IEEE INT CONF S, P104, DOI 10.1109/ICSME46990.2020.00020
   Paixao M, 2019, IEEE INT WORK C SO, P45, DOI 10.1109/SCAM.2019.00014
   Parnas D. L., 1976, IEEE Transactions on Software Engineering, VSe-2, P1, DOI 10.1109/TSE.1976.233797
   Perry DE, 2001, ACM T SOFTW ENG METH, V10, P308, DOI 10.1145/383876.383878
   Raymond Eric Steven, 2001, The Cathedral and the Bazaar: Musings on Linux and Open Source by an Accidental Revolutionary
   Ren LY, 2018, PROC IEEE ACM INT C, P179, DOI 10.1145/3183440.3195085
   Robles G., 2012, OPEN SOURCE SYSTEMS, P1, DOI DOI 10.1007/978-3-642-33442-91
   Sattler F, 2018, AUTOMAT SOFTW ENG, V25, P315, DOI 10.1007/s10515-017-0228-z
   Silva LD, 2020, 36 IEEE INT C SOFTW
   Sousa M, 2018, P ACM PROGRAM LANG, V2, DOI 10.1145/3276535
   Stanciulescu S, 2015, PROC IEEE INT CONF S, P151, DOI 10.1109/ICSM.2015.7332461
   Sung CH, 2020, 2020 IEEE/ACM 42ND INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP), P172, DOI 10.1145/3377813.3381362
   Vandehey S, 2019, REBASE MERGE
   Viseur R, 2012, INT J ADV COMPUT SC, V3, P117
   Zhou SR, 2020, PROC INT CONF SOFTW, P445, DOI 10.1145/3377811.3380412
   Zhou SR, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P350, DOI 10.1145/3338906.3338918
   Zhou SR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P105, DOI 10.1145/3180155.3180205
NR 63
TC 11
Z9 11
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 54
DI 10.1007/s10664-021-10078-2
PG 47
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA ZN0BC
UT WOS:000764709800002
OA hybrid
DA 2024-07-18
ER

PT J
AU Herbold, S
   Trautsch, A
   Trautsch, F
   Ledel, B
AF Herbold, Steffen
   Trautsch, Alexander
   Trautsch, Fabian
   Ledel, Benjamin
TI Problems with SZZ and features: An empirical study of the state of
   practice of defect prediction data collection
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE SZZ; Bug fix labeling; Bug inducing changes; Defect prediction data;
   Data set
ID CODE; AGREEMENT; FAULTS
AB Context The SZZ algorithm is the de facto standard for labeling bug fixing commits and finding inducing changes for defect prediction data. Recent research uncovered potential problems in different parts of the SZZ algorithm. Most defect prediction data sets provide only static code metrics as features, while research indicates that other features are also important. Objective We provide an empirical analysis of the defect labels created with the SZZ algorithm and the impact of commonly used features on results. Method We used a combination of manual validation and adopted or improved heuristics for the collection of defect data. We conducted an empirical study on 398 releases of 38 Apache projects. Results We found that only half of the bug fixing commits determined by SZZ are actually bug fixing. If a six-month time frame is used in combination with SZZ to determine which bugs affect a release, one file is incorrectly labeled as defective for every file that is correctly labeled as defective. In addition, two defective files are missed. We also explored the impact of the relatively small set of features that are available in most defect prediction data sets, as there are multiple publications that indicate that, e.g., churn related features are important for defect prediction. We found that the difference of using more features is not significant. Conclusion Problems with inaccurate defect labels are a severe threat to the validity of the state of the art of defect prediction. Small feature sets seem to be a less severe threat.
C1 [Herbold, Steffen; Ledel, Benjamin] Tech Univ Clausthal, Inst Software & Syst Engn, Clausthal Zellerfeld, Germany.
   [Trautsch, Alexander; Trautsch, Fabian] Univ Goettingen, Inst Comp Sci, Gottingen, Germany.
C3 TU Clausthal; University of Gottingen
RP Herbold, S (corresponding author), Tech Univ Clausthal, Inst Software & Syst Engn, Clausthal Zellerfeld, Germany.
EM steffen.herbold@tu-clausthal.de;
   alexander.trautsch@cs.uni-goettingen.de;
   fabian.trautsch@cs.uni-goettingen.de; benjamin.ledel@tu-clausthal.de
OI Herbold, Steffen/0000-0001-9765-2803
FU DFG [402774445]
FX This work is partially funded by DFG Grant 402774445. We also want to
   thank the GWDG for the support in using their high performance computing
   infrastructure, that enabled the collection of the large amounts of
   software metric data.
CR Altinger H, 2015, 12TH WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES (MSR 2015), P494, DOI 10.1109/MSR.2015.72
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Antoniol G, 2008, P 2008 C CTR ADV STU, P304
   Bird C, 2010, SIGSOFT FSE, P369
   Bird C., 2011, P 19 ACM SIGSOFT S 1, P4, DOI DOI 10.1145/2025113.2025119
   Bird C, 2009, 7TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P121, DOI 10.1145/1595696.1595716
   Bird C, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P1, DOI 10.1109/MSR.2009.5069475
   Bissyandé TF, 2013, EUR CON SFTWR MTNCE, P89, DOI 10.1109/CSMR.2013.19
   Bowes David., 2016, Proceedings of the 25th International Symposium on Software Testing and Analysis, P330, DOI DOI 10.1145/2931037.2931039
   Neto EC, 2019, INT SYMP EMP SOFTWAR, P94
   Neto EC, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P380, DOI 10.1109/SANER.2018.8330225
   Cheung S.-C., 2011, P 19 ACM SIGSOFT S 1, P15
   CHIDAMBER SR, 1994, IEEE T SOFTWARE ENG, V20, P476, DOI 10.1109/32.295895
   CLIFF N, 1993, PSYCHOL BULL, V114, P494, DOI 10.1037/0033-2909.114.3.494
   COHEN J, 1960, EDUC PSYCHOL MEAS, V20, P37, DOI 10.1177/001316446002000104
   Cruz AEC, 2009, INT SYMP EMP SOFTWAR, P461
   D'Ambros M, 2012, EMPIR SOFTW ENG, V17, P531, DOI 10.1007/s10664-011-9173-9
   da Costa DA, 2017, IEEE T SOFTWARE ENG, V43, P641, DOI 10.1109/TSE.2016.2616306
   Demsar J, 2006, J MACH LEARN RES, V7, P1
   Di Penta M, 2020, PROCEEDINGS OF THE 28TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE '20), P556, DOI 10.1145/3368089.3409695
   Fan YR, 2021, IEEE T SOFTWARE ENG, V47, P1559, DOI 10.1109/TSE.2019.2929761
   Ferenc R, 2020, J SYST SOFTWARE, V169, DOI 10.1016/j.jss.2020.110691
   Ferenc R, 2020, SOFTWARE QUAL J, V28, P1447, DOI 10.1007/s11219-020-09515-0
   Ferenc R, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P12, DOI 10.1145/3273934.3273936
   Fischer M, 2003, PROC IEEE INT CONF S, P23, DOI 10.1109/ICSM.2003.1235403
   Fluri B, 2007, IEEE T SOFTWARE ENG, V33, P725, DOI 10.1109/TSE.2007.70731
   Friedman M, 1940, ANN MATH STAT, V11, P86, DOI 10.1214/aoms/1177731944
   Hall T, 2012, IEEE T SOFTWARE ENG, V38, P1276, DOI 10.1109/TSE.2011.103
   Hassan AE, 2009, PROC INT CONF SOFTW, P78, DOI 10.1109/ICSE.2009.5070510
   Herbold S, 2021, IEEE T SOFTWARE ENG, V47, P2617, DOI 10.1109/TSE.2019.2957794
   Herbold S, 2018, IEEE T SOFTWARE ENG, V44, P811, DOI 10.1109/TSE.2017.2724538
   Herzig K, 2013, PROC INT SYMP SOFTW, P118, DOI 10.1109/ISSRE.2013.6698911
   Herzig K, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P392, DOI 10.1109/ICSE.2013.6606585
   Hosseini S, 2019, IEEE T SOFTWARE ENG, V45, P111, DOI 10.1109/TSE.2017.2770124
   Jingxiu Yao, 2020, EASE2020. Proceedings of the Evaluation and Assessment in Software Engineering, P120, DOI 10.1145/3383219.3383232
   Jureczko M, 2010, P 6 INT C PREDICTIVE, DOI DOI 10.1145/1868328.1868342
   Kamei Y, 2013, IEEE T SOFTWARE ENG, V39, P757, DOI 10.1109/TSE.2012.70
   Kim S, 2006, IEEE INT CONF AUTOM, P81
   Kovalenko V, 2018, IEEE INT CONF AUTOM, P202, DOI 10.1145/3238147.3238169
   LANDIS JR, 1977, BIOMETRICS, V33, P159, DOI 10.2307/2529310
   liwerski J, 2005, ACM SIGSOFT SOFTWARE, V30, P1, DOI [10.1145/1082983.1083147, DOI 10.1145/1083142.1083147, DOI 10.1145/1082983.1083147]
   Madeyski L, 2015, SOFTWARE QUAL J, V23, P393, DOI 10.1007/s11219-014-9241-7
   McIntosh S, 2018, IEEE T SOFTWARE ENG, V44, P412, DOI 10.1109/TSE.2017.2693980
   Menzies T., 2017, The SEACRAFT Repository of Empirical Software Engineering Data
   Menzies T., 2015, The promise repository of empirical software engineering data
   Mills C, 2018, PROC IEEE INT CONF S, P381, DOI 10.1109/ICSME.2018.00046
   Mockus A, 2009, 2009 6TH IEEE INTERNATIONAL WORKING CONFERENCE ON MINING SOFTWARE REPOSITORIES, P11, DOI 10.1109/MSR.2009.5069476
   Moser R, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P181, DOI 10.1145/1368088.1368114
   NASA, 2004, NAS 4 FAC METR DAT P
   NEMENYI P, 1962, BIOMETRICS, V18, P263
   Ostrand TJ, 2005, IEEE T SOFTWARE ENG, V31, P340, DOI 10.1109/TSE.2005.49
   Palomba F, 2019, IEEE T SOFTWARE ENG, V45, P194, DOI 10.1109/TSE.2017.2770122
   Pascarella L, 2019, J SYST SOFTWARE, V150, P22, DOI 10.1016/j.jss.2018.12.001
   Plosch R., 2008, Proceedings of the 2008 32nd Annual IEEE Software Engineering Workshop. SEW 2008, P169, DOI 10.1109/SEW.2008.17
   Rahman F, 2011, Proceedings of the 19th ACM SIGSOFT Symposium and the 13th European Conference on Foundations of Software Engineering, ESEC/FSE '11, P322, DOI DOI 10.1145/2025113
   Rahman F, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P424, DOI 10.1145/2568225.2568269
   Rodríguez-Pérez G, 2020, EMPIR SOFTW ENG, V25, P1294, DOI 10.1007/s10664-019-09781-y
   Rodríguez-Pérez G, 2018, PROCEEDINGS OF THE 12TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT (ESEM 2018), DOI 10.1145/3239235.3267436
   Rodríguez-Pérez G, 2018, INFORM SOFTWARE TECH, V99, P164, DOI 10.1016/j.infsof.2018.03.009
   Romano J, 2006, ANN M FLOR ASS I RES, P1
   Rosa G, 2021, PROC INT CONF SOFTW, P436, DOI 10.1109/ICSE43902.2021.00049
   ROUSSEEUW PJ, 1993, J AM STAT ASSOC, V88, P1273, DOI 10.2307/2291267
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Shippey T, 2016, ESEM'16: PROCEEDINGS OF THE 10TH ACM/IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, DOI 10.1145/2961111.2962620
   Shull FJ, 2008, EMPIR SOFTW ENG, V13, P211, DOI 10.1007/s10664-008-9060-1
   Silva D, 2017, IEEE WORK CONF MIN S, P269, DOI 10.1109/MSR.2017.14
   Spadini D, 2018, PROC IEEE INT CONF S, P1, DOI 10.1109/ICSME.2018.00010
   Tantithamthavorn C, 2020, IEEE T SOFTWARE ENG, V46, P1200, DOI 10.1109/TSE.2018.2876537
   Tantithamthavorn C, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P812, DOI 10.1109/ICSE.2015.93
   Thongtanunam P, 2016, PROC INT CONF SOFTW, P1039, DOI 10.1145/2884781.2884852
   Tóth Z, 2016, LECT NOTES COMPUT SC, V9789, P625, DOI 10.1007/978-3-319-42089-9_44
   Trautsch A, 2020, PROC INT CONF SOFTW, P25, DOI 10.1145/3377812.3382139
   Trautsch A, 2020, PROC IEEE INT CONF S, P127, DOI 10.1109/ICSME46990.2020.00022
   Trautsch F, 2018, EMPIR SOFTW ENG, V23, P1036, DOI 10.1007/s10664-017-9537-x
   Tufano M, 2017, J SOFTW-EVOL PROC, V29, DOI 10.1002/smr.1838
   Turhan B, 2009, EMPIR SOFTW ENG, V14, P540, DOI 10.1007/s10664-008-9103-7
   Turing AM, 1937, P LOND MATH SOC, V42, P230, DOI 10.1112/plms/s2-42.1.230
   Williams C, 2008, P 2008 WORKSHOP DEFE, P32
   Yatish S, 2019, PROC INT CONF SOFTW, P654, DOI 10.1109/ICSE.2019.00075
   Zhang F., 2014, P 11 WORK C MIN SOFT, P182, DOI [10.1145/2597073.2597078, DOI 10.1145/2597073.2597078]
   Zhang F, 2017, IEEE T SOFTWARE ENG, V43, P476, DOI 10.1109/TSE.2016.2599161
   Zhang H, 2005, INT J PATTERN RECOGN, V19, P183, DOI 10.1142/S0218001405003983
   Zhao YY, 2017, INFORM SOFTWARE TECH, V86, P37, DOI 10.1016/j.infsof.2017.02.003
   Zhou YM, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3183339
NR 84
TC 23
Z9 24
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2022
VL 27
IS 2
AR 42
DI 10.1007/s10664-021-10092-4
PG 49
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA YJ9DE
UT WOS:000744825800001
OA hybrid
DA 2024-07-18
ER

PT J
AU Li, Y
   Wang, SH
   Wang, WB
   Nguyen, TN
   Wang, Y
   Ye, XY
AF Li, Yi
   Wang, Shaohua
   Wang, Wenbo
   Nguyen, Tien N.
   Wang, Yan
   Ye, Xinyue
TI Rap4DQ: Learning to recommend relevant API documentation for developer
   questions
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Developer forums; Question answering; API documentation; Deep learning;
   Learning-to-Rank
ID NEURAL-NETWORK
AB Developers often face difficulties in using different API methods during the software development process. Answering API related questions on API Q&A forums often costs API development teams a lot of time. To help save time for API development teams, we propose a deep learning-based approach, namely Rap4DQ, to identify relevant web API documentation for developer's API related questions on API Q&A forums. Rap4DQ learns representation vectors for questions and API documentation separately using Gated Recurrent Unit (GRU) and adds different weights to reflect the various importance of varied API documents during training. Rap4DQ is designed to train on positive and negative samples with a loss function that minimizes the distances between questions and their relevant documentation, but maximizes the distances between questions and their irrelevant documentation. In the end, we construct a learning-to-rank layer to rank the API documentation based on learned representation vectors from GRUs. We have conducted several experiments to evaluate Rap4DQ on three popular and large API Q&A forums, Twitter, eBay, and AdWords. The results show that Rap4DQ can outperform all baselines by having a relative improvement up to 84.3% in terms of AUC. Rap4DQ can obtain a high AUC of 0.84, 0.88, and 0.94 on identifying relevant API documentation on Twitter, eBay, and AdWords, respectively.
C1 [Li, Yi; Wang, Shaohua; Wang, Wenbo] New Jersey Inst Technol, Newark, NJ 07102 USA.
   [Nguyen, Tien N.] Univ Texas Dallas, 800 W Campbell Rd, Richardson, TX 75080 USA.
   [Wang, Yan] Cent Univ Finance & Econ, Beijing 100081, Peoples R China.
   [Ye, Xinyue] Texas A&M Univ, 400 Bizzell St, College Stn, TX 77843 USA.
C3 New Jersey Institute of Technology; University of Texas System;
   University of Texas Dallas; Central University of Finance & Economics;
   Texas A&M University System; Texas A&M University College Station
RP Wang, SH (corresponding author), New Jersey Inst Technol, Newark, NJ 07102 USA.
EM yl622@njit.edu; davidsw@njit.edu; ww6@njit.edu;
   Tien.N.Nguyen@utdallas.edu; dayanking@gmail.com; xinyue.ye@tamu.edu
RI Li, Yi/ISA-9366-2023; Wang, Shaohua/AAF-7235-2019; ye,
   xinyue/A-7677-2011
OI ye, xinyue/0000-0001-8838-9476
CR AdWords, 2019, ADW QUEST CREAT DYN
   [Anonymous], 2020, RAP4DQ REPL
   Berger A., 2000, SIGIR Forum, V34, P192
   Bishop Christopher M., 2006, Pattern Recognition and Machine Learning, V4
   Brokos Georgios-Ioannis, 2016, ARXIV160803905
   Burke RD, 1997, AI MAG, V18, P57
   Cao QQ, 2020, 58TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS (ACL 2020), P4487
   CAO X, 2010, P 19 INT C WORLD WID, P201, DOI DOI 10.1145/1772690.1772712
   Cho K., 2014, ARXIV14061078
   Devlin J., 2018, BERT PRE TRAINING DE
   Duan H, 2008, ACL, P156
   Ebay, 2019, EB QUEST FIND PROD D
   Er MJ, 2016, INFORM SCIENCES, V373, P388, DOI 10.1016/j.ins.2016.08.084
   Figueroa A, 2016, KNOWL-BASED SYST, V96, P1, DOI 10.1016/j.knosys.2016.01.008
   Gu XD, 2016, FSE'16: PROCEEDINGS OF THE 2016 24TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON FOUNDATIONS OF SOFTWARE ENGINEERING, P631, DOI 10.1145/2950290.2950334
   Guo JF, 2016, CIKM'16: PROCEEDINGS OF THE 2016 ACM CONFERENCE ON INFORMATION AND KNOWLEDGE MANAGEMENT, P55, DOI 10.1145/2983323.2983769
   Hassan AE., 2018, IEEE Transactions on Software Engineering
   He Hangfeng, 2020, P 58 ANN M ASS COMPU
   Hochreiter S, 1997, NEURAL COMPUT, V9, P1735, DOI [10.1162/neco.1997.9.1.1, 10.1007/978-3-642-24797-2]
   Huang Q, 2018, IEEE INT CONF AUTOM, P293, DOI 10.1145/3238147.3238191
   Jeon J, 2005, P 14 ACM INT C INF K, P84, DOI DOI 10.1145/1099554.1099572
   Ji Z., 2012, P 21 ACM INT C INF K, P2471, DOI DOI 10.1145/2396761.2398669
   Keras, 2019, KERAS DOCUMENTATION
   Kim Y., 2014, P 2014 C EMPIRICAL M
   Kokkinos Y, 2015, INFORM SCIENCES, V294, P612, DOI 10.1016/j.ins.2014.08.025
   Kusner MJ, 2015, PR MACH LEARN RES, V37, P957
   Li J, 2018, INFORM SCIENCES, V448, P36, DOI 10.1016/j.ins.2018.03.014
   Li XY, 2018, INT CON DISTR COMP S, P1, DOI 10.1109/ICDCS.2018.00011
   Li Y, 2020, PROC INT CONF SOFTW, P318, DOI 10.1145/3377812.3390897
   Lilleberg J, 2015, PROCEEDINGS OF 2015 IEEE 14TH INTERNATIONAL CONFERENCE ON COGNITIVE INFORMATICS & COGNITIVE COMPUTING (ICCI*CC), P136, DOI 10.1109/ICCI-CC.2015.7259377
   Liu K., 2011, P 49 ANN M ASS COMP, V1, P653
   Luong M.-T., 2015, P 2015 C EMPIRICAL M, DOI DOI 10.18653/V1/D15-1166
   Mamykina L, 2011, 29TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, P2857
   Mikolov T., 2013, INT C LEARN REPR SCO, DOI 10.48550/ARXIV.1301.3781
   NASSIF H, 2016, P 1 WORKSH REPR LEAR, P137, DOI DOI 10.18653/V1/W16-1616
   Nicosia M., 2015, Proceedings of the 9th International Workshop on Semantic Evaluation, P203, DOI 10.18653/v1/S15-2036
   PAL SK, 1992, IEEE T NEURAL NETWOR, V3, P683, DOI 10.1109/72.159058
   Palangi H, 2016, IEEE-ACM T AUDIO SPE, V24, P694, DOI 10.1109/TASLP.2016.2520371
   Radford A., 2019, LANGUAGE MODELS ARE
   Radford Alec, 2018, IMPROVING LANGUAGE U, DOI DOI 10.18653/V1/N18-1202
   Rahman MM, 2018, PROC IEEE INT CONF S, P473, DOI 10.1109/ICSME.2018.00057
   Rahman MM, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P349, DOI 10.1109/SANER.2016.80
   Rajaraman Anand, 2011, Mining of Massive Datasets
   Renxu Sun, 2005, SIGIR 2005. Proceedings of the Twenty-Eighth Annual International ACM SIGIR Conference on Research and Development in Information Retrieval, P651
   Robertson Stephen, 2009, Foundations and Trends in Information Retrieval, V3, P333, DOI 10.1561/1500000019
   SAKAI T, 2011, P 4 ACM INT C WEB SE, P187
   Severyn A, 2015, SIGIR 2015: PROCEEDINGS OF THE 38TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P373, DOI 10.1145/2766462.2767738
   Severyn Aliaksei, 2016, ARXIV160401178
   Silva RFG, 2019, INT C PROGRAM COMPRE, P358, DOI 10.1109/ICPC.2019.00054
   Singh P, 2016, PROCEEDINGS OF THE 25TH INTERNATIONAL CONFERENCE ON WORLD WIDE WEB (WWW'16 COMPANION), P699, DOI 10.1145/2872518.2890569
   Squire M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 2, P219, DOI 10.1109/ICSE.2015.150
   Surdeanu M., 2008, PROC ACL HLT, P719
   Sutskever I, 2014, ADV NEUR IN, V27
   Tan M, 2016, PROCEEDINGS OF THE 54TH ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS, VOL 1, P464, DOI 10.18653/v1/p16-1044
   Uddin G, 2017, IEEE INT CONF AUTOM, P159, DOI 10.1109/ASE.2017.8115629
   Venkatesh PK, 2016, 2016 IEEE INTERNATIONAL CONFERENCE ON WEB SERVICES (ICWS), P131, DOI 10.1109/ICWS.2016.25
   Wu QA, 2010, INFORM RETRIEVAL, V13, P254, DOI 10.1007/s10791-009-9112-1
   Xue X., 2008, P 31 ANN INT ACM SIG, P475, DOI DOI 10.1145/1390334.1390416
   Yan R, 2016, SIGIR'16: PROCEEDINGS OF THE 39TH INTERNATIONAL ACM SIGIR CONFERENCE ON RESEARCH AND DEVELOPMENT IN INFORMATION RETRIEVAL, P55, DOI 10.1145/2911451.2911542
   Yao Y, 2015, INFORM SCIENCES, V302, P70, DOI 10.1016/j.ins.2014.12.038
   Yen SJ, 2013, INFORM SCIENCES, V224, P77, DOI 10.1016/j.ins.2012.10.014
   Zhou G, 2013, P 23 INT JOINT C ART, P2239
   Zhou GY, 2015, PROCEEDINGS OF THE 53RD ANNUAL MEETING OF THE ASSOCIATION FOR COMPUTATIONAL LINGUISTICS AND THE 7TH INTERNATIONAL JOINT CONFERENCE ON NATURAL LANGUAGE PROCESSING, VOL 1, P250
   Zhou GY, 2016, KNOWL-BASED SYST, V93, P75, DOI 10.1016/j.knosys.2015.11.002
NR 64
TC 0
Z9 0
U1 1
U2 9
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD JAN
PY 2022
VL 27
IS 1
AR 23
DI 10.1007/s10664-021-10067-5
PG 34
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA XE8NX
UT WOS:000723640000001
DA 2024-07-18
ER

PT J
AU Arizon-Peretz, R
   Hadar, I
   Luria, G
   Sherman, S
AF Arizon-Peretz, Renana
   Hadar, Irit
   Luria, Gil
   Sherman, Sofia
TI Understanding developers' privacy and security mindsets via climate
   theory
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Data protection; Privacy; Security; Privacy by design; Security by
   design; Organizational climate; Qualitative research
ID SAFETY CLIMATE; ORGANIZATIONAL-CLIMATE; PSYCHOLOGICAL CLIMATE; SERVICE
   CLIMATE; CROSS-LEVEL; TRANSFORMATIONAL LEADERSHIP; SOFTWARE QUALITY;
   TEAM CLIMATE; STRENGTH; PERCEPTIONS
AB Privacy and security by design are policy measures that guide software developers to engineer privacy and security solutions inherently into the software systems they develop. However, although these policy measures have been widely discussed and promoted over the years, recent studies still show a consistent underperformance of privacy and security practices in industry. This research follows previous findings that indicate the role the organizational work environments of developers play in forming their mindsets and behavior. Specifically, we aimed to explore the potential of using organizational climate theory for attaining a better understanding of developers' perceptions and behaviors and the underlying forces affecting them, and to unveil the constructs that compose organizational privacy and security climates. To this end, we conducted interviews with 27 practitioners involved in developing software systems from 14 companies and qualitatively analyzed the collected data. Our findings indicate that software developers are faced with inconsistent and confusing cues conveyed by management and other parties in their work environment, many of which indicate that these facets are of relatively low priority, leading to perceptions and behaviors that are not in line with those expected and recommended by policy makers. Further, we show how these perceptions and behaviors can be explained by constructs of the organizational climate theory and how, based on our findings, organizational climate mechanisms can be used to go beyond understanding developers' current privacy and security mindsets toward improving them, thereby leading to an effective implementation of privacy and security by design.
C1 [Arizon-Peretz, Renana; Hadar, Irit] Univ Haifa, Dept Informat Syst, Haifa, Israel.
   [Luria, Gil] Univ Haifa, Dept Human Serv, Haifa, Israel.
   [Sherman, Sofia] Acad Coll Tel Aviv Yaffo, Dept Informat Syst, Tel Aviv, Israel.
C3 University of Haifa; University of Haifa
RP Hadar, I (corresponding author), Univ Haifa, Dept Informat Syst, Haifa, Israel.
EM renana.ar.peretz@gmail.com; hadari@is.haifa.ac.il;
   gluria@univ.haifa.ac.il; sofiash@mta.ac.il
OI Luria, Gil/0000-0002-7983-2517; Hadar, Irit/0000-0002-4267-0235
FU Center for Cyber Law & Policy (CCLP) by the University of Haifa; Israeli
   National Cyber Bureau
FX This research was supported by the Center for Cyber Law & Policy (CCLP),
   established by the University of Haifa in collaboration with the Israeli
   National Cyber Bureau.
CR Acuña ST, 2008, EMPIR SOFTW ENG, V13, P401, DOI 10.1007/s10664-008-9074-8
   Acuña ST, 2015, INFORM SOFTWARE TECH, V57, P141, DOI 10.1016/j.infsof.2014.09.002
   Andres HP., 1995, AMCIS 1995 P, P59
   [Anonymous], 1974, COMMUNICATIONS ORG C
   [Anonymous], 2012, EXPT SOFTWARE ENG
   Arizon-Peretz R, 2021, SAFETY SCI, V138
   Bartels J, 2007, J ORGAN BEHAV, V28, P173, DOI 10.1002/job.420
   Bednar K, 2019, INFORM SOC, V35, P122, DOI 10.1080/01972243.2019.1583296
   Birnhack Michael, 2014, Jurimetrics: Journal of Law, Science and Technology, V55, P55
   Blumer H., 1986, Symbolic Interactionism: Perspective and Method
   Bowen DE, 2004, ACAD MANAGE REV, V29, P203, DOI 10.2307/20159029
   Carr JZ, 2003, J APPL PSYCHOL, V88, P605, DOI 10.1037/0021-9010.88.4.605
   Cavoukian A., 2013, PRIVACY SECURITY DES
   Christian MS, 2009, J APPL PSYCHOL, V94, P1103, DOI 10.1037/a0016172
   Clarke S, 2006, J OCCUP HEALTH PSYCH, V11, P315, DOI 10.1037/1076-8998.11.4.315
   Clincy Victor A, 2003, Journal of Computing Sciences in Colleges, V19, P278
   Davis M, 2013, SCI ENG ETHICS, V19, P851, DOI 10.1007/s11948-012-9412-5
   Dragoni L, 2005, J APPL PSYCHOL, V90, P1084, DOI 10.1037/0021-9010.90.6.1084
   Flin R, 2000, SAFETY SCI, V34, P177, DOI 10.1016/S0925-7535(00)00012-6
   Ghahramani A, 2015, SAF HEALTH WORK, V6, P97, DOI 10.1016/j.shaw.2015.01.003
   González-Romá V, 2002, J APPL PSYCHOL, V87, P465, DOI 10.1037//0021-9010.87.3.465
   González-Romá V, 2009, J OCCUP ORGAN PSYCH, V82, P511, DOI 10.1348/096317908X370025
   GUBA EG, 1981, ECTJ-EDUC COMMUN TEC, V29, P75
   Hadar I., 2018, EMPIR SOFTW ENG, V23, P259, DOI [10.1007/s10664-017-9517-1, DOI 10.1007/s10664-017-9517-1]
   Hofmann DA, 1999, J APPL PSYCHOL, V84, P286, DOI 10.1037/0021-9010.84.2.286
   Hong Y, 2013, J APPL PSYCHOL, V98, P237, DOI 10.1037/a0031666
   James LR, 2008, EUR J WORK ORGAN PSY, V17, P5, DOI 10.1080/13594320701662550
   Johnson JW, 1996, PERS PSYCHOL, V49, P831, DOI 10.1111/j.1744-6570.1996.tb02451.x
   Johnson T, 2005, ANN EPIDEMIOL, V15, P381, DOI 10.1016/j.annepidem.2004.09.004
   JONES AP, 1979, ORGAN BEHAV HUM PERF, V23, P201, DOI 10.1016/0030-5073(79)90056-4
   Joseph B, 2011, COMM COM INF SC, V141, P23
   KOZLOWSKI SWJ, 1989, J APPL PSYCHOL, V74, P546, DOI 10.1037/0021-9010.74.4.546
   Krumay B., 2011, 2011 Sixth International Conference on Availability, Reliability and Security, P313, DOI 10.1109/ARES.2011.53
   Luria G., 2008, J QUALITY MANAGEMENT, V15, P27, DOI DOI 10.1080/10686967.2008.11918054
   Luria G, 2008, J SAFETY RES, V39, P273, DOI 10.1016/j.jsr.2007.12.003
   Luria G, 2008, LEADERSHIP QUART, V19, P42, DOI 10.1016/j.leaqua.2007.12.004
   Luria G, 2019, J ORGAN BEHAV, DOI 10.1002/job.2417
   Luria G, 2016, WILEY BLACK HB ORG P, P357
   Luria G, 2014, SAFETY SCI, V70, P288, DOI 10.1016/j.ssci.2014.07.003
   Luria G, 2010, ACCIDENT ANAL PREV, V42, P1423, DOI 10.1016/j.aap.2009.02.016
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   Maxwell JA, 2010, QUAL INQ, V16, P475, DOI 10.1177/1077800410364740
   Miles M.B., 2014, Qualitative data analysis: A methods sourcebook, V3rd
   Myers M. D., 2007, Information and Organization, V17, P2, DOI 10.1016/j.infoandorg.2006.11.001
   Myers MD, 1997, MIS QUART, V21, P241, DOI 10.2307/249422
   Naumann SE, 2000, ACAD MANAGE J, V43, P881, DOI 10.5465/1556416
   Neal A., 2004, The Psychology of Workplace Safety, P15, DOI DOI 10.1037/10662-002
   Ostroff C., 2003, COMPREHENSIVE HDB PS, V12, P565, DOI [10.1002/0471264385.wei1222, DOI 10.1002/0471264385.WEI1222]
   Parker SK, 2010, J MANAGE, V36, P827, DOI 10.1177/0149206310363732
   Pereira CMM, 2012, INT J HUM RESOUR MAN, V23, P4301, DOI 10.1080/09585192.2012.667434
   RENTSCH JR, 1990, J APPL PSYCHOL, V75, P668, DOI 10.1037/0021-9010.75.6.668
   Roberson Q., 2006, SOC JUSTICE RES, V19, P323, DOI [10.1007/s11211-006-0010-z, DOI 10.1007/S11211-006-0010-Z]
   Salanova M, 2005, J APPL PSYCHOL, V90, P1217, DOI 10.1037/0021-9010.90.6.1217
   Schneider B, 1996, ORGAN DYN, V24, P7, DOI 10.1016/S0090-2616(96)90010-8
   SCHNEIDER B, 1975, PERS PSYCHOL, V28, P447, DOI 10.1111/j.1744-6570.1975.tb01386.x
   SCHNEIDER B, 1983, PERS PSYCHOL, V36, P19, DOI 10.1111/j.1744-6570.1983.tb00500.x
   Schneider B, 2002, J APPL PSYCHOL, V87, P220, DOI 10.1037//0021-9010.87.2.220
   SCHNEIDER B, 1992, J APPL PSYCHOL, V77, P705, DOI 10.1037/0021-9010.77.5.705
   Schneider B, 1998, J APPL PSYCHOL, V83, P150, DOI 10.1037/0021-9010.83.2.150
   Schneider B., 1990, ORG CLIMATE CULTURE, DOI DOI 10.1300/1366V05
   Schneider B., 1988, FUTURES ORG, P181
   Schneider B, 2017, J APPL PSYCHOL, V102, P468, DOI 10.1037/apl0000090
   Schneider B, 2013, ANNU REV PSYCHOL, V64, P361, DOI 10.1146/annurev-psych-113011-143809
   Schulte M, 2009, J APPL PSYCHOL, V94, P618, DOI 10.1037/a0014365
   Schulte M, 2006, J OCCUP ORGAN PSYCH, V79, P645, DOI 10.1348/096317905X72119
   Seaman CB, 1999, IEEE T SOFTWARE ENG, V25, P557, DOI 10.1109/32.799955
   Senarath Awanthika, 2018, P 22 INT C EV ASS SO
   Sharma A, 2012, INT J PROJ MANAG, V30, P176, DOI 10.1016/j.ijproman.2011.05.003
   Sheth S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P859, DOI 10.1145/2568225.2568244
   Spiekermann S, 2019, P IEEE, V107, P600, DOI 10.1109/JPROC.2018.2866769
   Spiekermann S, 2009, IEEE T SOFTWARE ENG, V35, P67, DOI 10.1109/TSE.2008.88
   Strauss E, 1998, CLIN ORTHOP RELAT R, P2
   Szekely I, 2011, INTERNET SURVEILLANC
   Tsaur SH, 2004, TOURISM MANAGE, V25, P471, DOI 10.1016/S0261-5177(03)00117-1
   van de Mortel TF, 2008, AUST J ADV NURS, V25, P40
   Vroom V. H., 1964, Work and motivation
   Walsham G, 2006, EUR J INFORM SYST, V15, P320, DOI 10.1057/palgrave.ejis.3000589
   Weick K., 1995, SENSEMAKING ORG
   Weick KE, 2005, ORGAN SCI, V16, P409, DOI 10.1287/orsc.1050.0133
   Yagil D., 2014, Oxford Handbook of Organizational Climate and Culture, P297, DOI DOI 10.1093/OXFORDHB/9780199860715.013.0016
   Yagil D, 2010, GROUP ORGAN MANAGE, V35, P727, DOI 10.1177/1059601110390936
   Zohar D, 2005, J APPL PSYCHOL, V90, P616, DOI 10.1037/0021-9010.90.4.616
   ZOHAR D, 1980, J APPL PSYCHOL, V65, P96, DOI 10.1037/0021-9010.65.1.96
   Zohar D, 2004, J APPL PSYCHOL, V89, P322, DOI 10.1037/0021-9010.89.2.322
   Zohar D, 2002, J ORGAN BEHAV, V23, P75, DOI 10.1002/job.130
   Zohar D, 2003, J SAFETY RES, V34, P567, DOI 10.1016/j.jsr.2003.05.006
   Zohar D., 2012, OXFORD HDB IND ORG P
   Zohar D., 2003, Health and safety in organizations, P201
   Zohar D., 2014, The Oxford Handbook of Organizational Climate and Culture, P317, DOI [DOI 10.1093/OXFORDHB/9780199860715.013.0017, 10.1093/oxfordhb/9780199860715.013.0017]
   Zohar D, 2008, J APPL PSYCHOL, V93, P744, DOI 10.1037/0021-9010.93.4.744
   Zohar D, 2014, J APPL PSYCHOL, V99, P113, DOI 10.1037/a0034096
   Zohar D, 2010, APPL PSYCHOL-INT REV, V59, P647, DOI 10.1111/j.1464-0597.2010.00421.x
   Zohar D, 2010, ACCIDENT ANAL PREV, V42, P1517, DOI 10.1016/j.aap.2009.12.019
NR 93
TC 7
Z9 8
U1 3
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 123
DI 10.1007/s10664-021-09995-z
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA UO7PL
UT WOS:000694884900002
DA 2024-07-18
ER

PT J
AU Yang, DH
   Liu, K
   Kim, D
   Koyuncu, A
   Kim, K
   Tian, HY
   Lei, Y
   Mao, XG
   Klein, J
   Bissyandé, TF
AF Yang, Deheng
   Liu, Kui
   Kim, Dongsun
   Koyuncu, Anil
   Kim, Kisub
   Tian, Haoye
   Lei, Yan
   Mao, Xiaoguang
   Klein, Jacques
   Bissyande, Tegawende F.
TI Where were the repair ingredients for Defects4j bugs? Exploring the
   impact of repair ingredient retrieval on the performance of 24 program
   repair systems
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Automated Program Repair; Fix Ingredient; Code Change Action; Donor Code
ID CODE
AB A significant body of automated program repair research has built approaches under the redundancy assumption. Patches are then heuristically generated by leveraging repair ingredients (change actions and donor code) that are found in code bases (either the buggy program itself or big code). For example, common change actions (i.e., fix patterns) are frequently mined offline and serve as an important ingredient for many patch generation engines. Although the repetitiveness of code changes has been studied in general, the literature provides little insight into the relationship between the performance of the repair system and the source code base where the change actions were mined. Similarly, donor code is another important repair ingredient to concretize patches guided by abstract patterns. Yet, little attention has been paid to where such ingredients can actually be found. Through a large scale empirical study on the execution results of 24 repair systems evaluated on real-world bugs from Defects4J, we provide a comprehensive view on the distribution of repair ingredients that are relevant for these bugs. In particular, we show that (1) a half of bugs cannot be fixed simply because the relevant repair ingredient is not available in the search space of donor code; (2) bugs that are correctly fixed by literature tools are mostly addressed with shallow change actions; (3) programs with little history of changes can benefit from mining change actions in other programs; (4) parts of donor code to repair a given bug can be found separately at different search locations; (5) bug-triggering test cases are a rich source for donor code search.
C1 [Yang, Deheng; Mao, Xiaoguang] Natl Univ Def Technol, Changsha, Peoples R China.
   [Liu, Kui] Nanjing Univ Aeronaut & Astronaut, Nanjing, Peoples R China.
   [Liu, Kui] State Key Lab Math Engn & Adv Comp, Wuxi, Jiangsu, Peoples R China.
   [Liu, Kui] Nanjing Univ Aeronaut & Astronaut, Minist Ind & Informat Technol, Key Lab Safety Crit Software, Nanjing, Peoples R China.
   [Kim, Dongsun] Kyungpook Natl Univ, Daegu, South Korea.
   [Koyuncu, Anil] Sabanci Univ, Istanbul, Turkey.
   [Kim, Kisub; Tian, Haoye; Klein, Jacques; Bissyande, Tegawende F.] Univ Luxembourg, SnT, Luxembourg, Luxembourg.
   [Lei, Yan] Chongqing Univ, Chongqing, Peoples R China.
C3 National University of Defense Technology - China; Nanjing University of
   Aeronautics & Astronautics; Nanjing University of Aeronautics &
   Astronautics; Kyungpook National University; Sabanci University;
   University of Luxembourg; Chongqing University
RP Liu, K (corresponding author), Nanjing Univ Aeronaut & Astronaut, Nanjing, Peoples R China.; Liu, K (corresponding author), State Key Lab Math Engn & Adv Comp, Wuxi, Jiangsu, Peoples R China.; Liu, K (corresponding author), Nanjing Univ Aeronaut & Astronaut, Minist Ind & Informat Technol, Key Lab Safety Crit Software, Nanjing, Peoples R China.
EM yangdeheng13@nudt.edu.cn; kui.liu@nuaa.edu.cn; darkrsw@knu.ac.kr;
   anil.koyuncn@sabanciuniv.edu; kisub.kim@uni.lu; haoye.tian@uni.lu;
   yanlei@cqu.edu.cn; xgmao@nudt.edu.cn; jacques.klein@uni.lu;
   tegawende.bissyande@uni.lu
RI Kim, Kisub/GMX-3152-2022; , Haoye/JBJ-7365-2023; , Haoye/GQQ-5062-2022;
   Kim, Dongsun/B-4856-2015
OI Klein, Jacques/0000-0003-4052-475X; Kim, Dongsun/0000-0003-0272-6860;
   TIAN, Haoye/0000-0002-8049-3997; LIU, Kui/0000-0003-0145-615X
FU Open Project Program of the State Key Laboratory of Mathematical
   Engineering and Advanced Computing [2020A06]; Open Project Program of
   the Key Laboratory of Safety-Critical Software (Nanjing University of
   Aeronautics and Astronautics), Ministry of Industry and Information
   Technology [XCA20026]; National Key R&D Program of China
   [2020AAA0107704]; National Research Foundation of Korea (NRF) - Korea
   government (MSIT) [2021R1A5A1021944]; National Defense Basic Scientific
   Research Program [WDZC20205500308]; Fundamental Research Funds for the
   Central Universities [2021CDJKYJH032, 2020CDCGRJ037, 2020CDCGRJ072];
   National Natural Science Foundation of China [61872445, 61672529];
   European Research Council (ERC) under the European Union [949014];
   European Research Council (ERC) [949014] Funding Source: European
   Research Council (ERC)
FX This research was supported by the Open Project Program of the State Key
   Laboratory of Mathematical Engineering and Advanced Computing (No.
   2020A06) and the Open Project Program of the Key Laboratory of
   Safety-Critical Software (Nanjing University of Aeronautics and
   Astronautics), Ministry of Industry and Information Technology (No.
   XCA20026), the National Key R&D Program of China (No. 2020AAA0107704),
   the National Research Foundation of Korea (NRF) grant funded by the
   Korea government (MSIT) (No. 2021R1A5A1021944), the National Defense
   Basic Scientific Research Program (No. WDZC20205500308), the Fundamental
   Research Funds for the Central Universities (Nos. 2021CDJKYJH032,
   2020CDCGRJ037, 2020CDCGRJ072) and the National Natural Science
   Foundation of China (Nos. 61872445, 61672529), as well as the funding
   from the European Research Council (ERC) under the European Union's
   Horizon 2020 research and innovation programme (grant agreement No
   949014).
CR [Anonymous], 2013, P 2013 INT S SOFTW T
   Barr ET, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P306, DOI 10.1145/2635868.2635898
   Britton T, 2013, Reversible Debugging Software "Quantify the Time and Cost Saved Using Reversible Debuggers
   Chen LS, 2017, IEEE INT CONF AUTOM, P637, DOI 10.1109/ASE.2017.8115674
   Durieux T, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P302, DOI 10.1145/3338906.3338911
   Durieux T, 2017, 2017 IEEE 24TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), P349, DOI 10.1109/SANER.2017.7884635
   Falleri Jean-Remy, 2014, P 29 ACM IEEE INT C, P313
   Gazzola L, 2019, IEEE T SOFTWARE ENG, V45, P34, DOI 10.1109/TSE.2017.2755013
   Ghanbari A, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P19, DOI 10.1145/3293882.3330559
   GitHub, 2021, DEFECTS4J
   Gupta R, 2017, AAAI CONF ARTIF INTE, P1345
   Nguyen HA, 2013, IEEE INT CONF AUTOM, P180, DOI 10.1109/ASE.2013.6693078
   Hovemeyer D, 2004, ACM SIGPLAN NOTICES, V39, P92, DOI 10.1145/1052883.1052895
   Hua JR, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P12, DOI 10.1145/3180155.3180245
   Jiang JJ, 2019, 34TH IEEE/ACM INTERNATIONAL CONFERENCE ON AUTOMATED SOFTWARE ENGINEERING (ASE 2019), P255, DOI 10.1109/ASE.2019.00033
   Jiang JJ, 2019, SCI CHINA INFORM SCI, V62, DOI 10.1007/s11432-018-1465-6
   Jiang JJ, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P298, DOI 10.1145/3213846.3213871
   Jiang LX, 2007, PROC INT CONF SOFTW, P96
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Just R, 2018, ISSTA'18: PROCEEDINGS OF THE 27TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS, P287, DOI 10.1145/3213846.3213870
   Kim D, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P802, DOI 10.1109/ICSE.2013.6606626
   Kim J, 2019, EMPIR SOFTW ENG, V24, P4071, DOI 10.1007/s10664-019-09742-5
   Koyuncu A, 2020, EMPIR SOFTW ENG, V25, P1980, DOI 10.1007/s10664-019-09780-z
   Koyuncu A, 2019, ESEC/FSE'2019: PROCEEDINGS OF THE 2019 27TH ACM JOINT MEETING ON EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING, P314, DOI 10.1145/3338906.3338935
   Le Goues C, 2019, COMMUN ACM, V62, P56, DOI 10.1145/3318162
   Le Goues C, 2012, IEEE T SOFTWARE ENG, V38, P54, DOI 10.1109/TSE.2011.104
   Le Goues C, 2012, PROC INT CONF SOFTW, P3, DOI 10.1109/ICSE.2012.6227211
   Le XBD, 2019, PROC INT CONF SOFTW, P524, DOI 10.1109/ICSE.2019.00064
   Le XBD, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 1, P213, DOI 10.1109/SANER.2016.76
   Liu K, 2020, PROC INT CONF SOFTW, P615, DOI 10.1145/3377811.3380338
   Liu K, 2021, J SYST SOFTWARE, V171, DOI 10.1016/j.jss.2020.110817
   Liu K, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P31, DOI 10.1145/3293882.3330577
   Liu K, 2021, IEEE T SOFTWARE ENG, V47, P165, DOI 10.1109/TSE.2018.2884955
   Liu K, 2019, IEEE INT CONF SOFTW, P102, DOI 10.1109/ICST.2019.00020
   Liu K, 2018, ASIA PAC SOFWR ENG, P658, DOI 10.1109/APSEC.2018.00085
   Liu K, 2019, 2019 IEEE 26TH INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER), P456, DOI 10.1109/saner.2019.8667970
   Liu K, 2018, PROC IEEE INT CONF S, P275, DOI 10.1109/ICSME.2018.00037
   Liu XL, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P118, DOI 10.1109/SANER.2018.8330202
   Long F, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P727, DOI 10.1145/3106237.3106253
   Long F, 2016, PROC INT CONF SOFTW, P702, DOI 10.1145/2884781.2884872
   Lou YL, 2019, PROCEEDINGS OF THE 28TH ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON SOFTWARE TESTING AND ANALYSIS (ISSTA '19), P43, DOI 10.1145/3293882.3330578
   Martinez M., 2016, P 25 INT S SOFTWARE, P441, DOI 10.1145/2931037
   Martinez M, 2017, EMPIR SOFTW ENG, V22, P1936, DOI 10.1007/s10664-016-9470-4
   Martinez M, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P492, DOI 10.1145/2591062.2591114
   Martínez M, 2015, EMPIR SOFTW ENG, V20, P176, DOI 10.1007/s10664-013-9282-8
   Mockus A, 2000, PROC IEEE INT CONF S, P120, DOI 10.1109/ICSM.2000.883028
   Monperrus M, 2018, ACM COMPUT SURV, V51, DOI 10.1145/3105906
   Motwani M, 2018, EMPIR SOFTW ENG, V23, P2901, DOI [10.1007/s10664-017-9550-0, 10.1145/3180155.3182533]
   Pan K, 2009, EMPIR SOFTW ENG, V14, P286, DOI 10.1007/s10664-008-9077-5
   Qi YH, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P254, DOI 10.1145/2568225.2568254
   Qi Zichao, 2015, P 2015 INT S SOFTW T, P24, DOI DOI 10.1145/2771783.2771791
   Qin YH, 2021, 2021 IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2021), P295, DOI 10.1109/SANER50967.2021.00035
   Rolim Reudismam, 2018, ARXIV180303806
   Roy CK, 2009, SCI COMPUT PROGRAM, V74, P470, DOI 10.1016/j.scico.2009.02.007
   Saha RK, 2017, IEEE INT CONF AUTOM, P648, DOI 10.1109/ASE.2017.8115675
   Saha S, 2019, PROC INT CONF SOFTW, P13, DOI 10.1109/ICSE.2019.00020
   Sobreira V, 2018, 2018 25TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION AND REENGINEERING (SANER 2018), P130, DOI 10.1109/SANER.2018.8330203
   Tian HY, 2020, IEEE INT CONF AUTOM, P981, DOI 10.1145/3324884.3416532
   Weimer W, 2009, PROC INT CONF SOFTW, P364, DOI 10.1109/ICSE.2009.5070536
   Wen M, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P1, DOI 10.1145/3180155.3180233
   Xin Q, 2017, IEEE INT CONF AUTOM, P660, DOI 10.1109/ASE.2017.8115676
   Xiong YF, 2018, PROCEEDINGS 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P789, DOI 10.1145/3180155.3180182
   Xiong YF, 2017, PROC INT CONF SOFTW, P416, DOI 10.1109/ICSE.2017.45
   Xu XZ, 2019, PROC INT CONF SOFTW, P512, DOI 10.1109/ICSE.2019.00063
   Xuan JF, 2017, IEEE T SOFTWARE ENG, V43, P34, DOI 10.1109/TSE.2016.2560811
   Xuan JF, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P52, DOI 10.1145/2635868.2635906
   Yang DH, 2021, FRONT COMPUT SCI-CHI, V15, DOI 10.1007/s11704-020-9263-1
   Yang DH, 2017, PROC IEEE INT CONF S, P504, DOI 10.1109/ICSME.2017.37
   Yuan Y, 2020, IEEE T SOFTWARE ENG, V46, P1040, DOI 10.1109/TSE.2018.2874648
   Yue RR, 2017, PROC IEEE INT CONF S, P422, DOI 10.1109/ICSME.2017.16
   Zhong H, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P913, DOI 10.1109/ICSE.2015.101
NR 71
TC 6
Z9 6
U1 1
U2 14
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2021
VL 26
IS 6
AR 122
DI 10.1007/s10664-021-10003-7
PG 33
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA UO7PL
UT WOS:000694884900001
DA 2024-07-18
ER

PT J
AU Haakman, M
   Cruz, L
   Huijgens, H
   van Deursen, A
AF Haakman, Mark
   Cruz, Luis
   Huijgens, Hennie
   van Deursen, Arie
TI AI lifecycle models need to be revised An exploratory study in Fintech
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE AI engineering; AI lifecycle; SE4AI; Machine learning; Case study
AB Tech-leading organizations are embracing the forthcoming artificial intelligence revolution. Intelligent systems are replacing and cooperating with traditional software components. Thus, the same development processes and standards in software engineering ought to be complied in artificial intelligence systems. This study aims to understand the processes by which artificial intelligence-based systems are developed and how state-of-the-art lifecycle models fit the current needs of the industry. We conducted an exploratory case study at ING, a global bank with a strong European base. We interviewed 17 people with different roles and from different departments within the organization. We have found that the following stages have been overlooked by previous lifecycle models: data collection, feasibility study, documentation, model monitoring, and model risk assessment. Our work shows that the real challenges of applying Machine Learning go much beyond sophisticated learning algorithms - more focus is needed on the entire lifecycle. In particular, regardless of the existing development tools for Machine Learning, we observe that they are still not meeting the particularities of this field.
C1 [Haakman, Mark; Huijgens, Hennie] ING, AI Fintech Res, Amsterdam, Netherlands.
   [Cruz, Luis; van Deursen, Arie] Delft Univ Technol, Delft, Netherlands.
C3 ING Group; Delft University of Technology
RP Cruz, L (corresponding author), Delft Univ Technol, Delft, Netherlands.
EM Mark.Haakman@ing.com; l.cruz@tudelft.nl; Hennie.Huijgens@ing.com;
   Arie.vanDeursen@tudelft.nl
RI Cruz, Luis/AAJ-1874-2021; van Deursen, Arie/G-3084-2011
OI Cruz, Luis/0000-0002-1615-355X; van Deursen, Arie/0000-0003-4850-3312
CR Ahmed Z, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P2448, DOI 10.1145/3292500.3330667
   Akkiraju R, 2020, LECT NOTES COMPUT SC, V12168, P17, DOI 10.1007/978-3-030-58666-9_2
   Amershi S, 2019, 2019 IEEE/ACM 41ST INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: SOFTWARE ENGINEERING IN PRACTICE (ICSE-SEIP 2019), P291, DOI 10.1109/ICSE-SEIP.2019.00042
   [Anonymous], 1990, Basics of qualitative research
   [Anonymous], 1989, KLUWER INT SERIES EN
   [Anonymous], 2015, 15288 ISOIECIEEE
   [Anonymous], 2003, Brain Mind
   Arpteg A, 2018, EUROMICRO CONF PROC, P50, DOI 10.1109/SEAA.2018.00018
   Bernardi L, 2019, KDD'19: PROCEEDINGS OF THE 25TH ACM SIGKDD INTERNATIONAL CONFERENCCE ON KNOWLEDGE DISCOVERY AND DATA MINING, P1743, DOI 10.1145/3292500.3330744
   Breck E, 2017, IEEE INT CONF BIG DA, P1123, DOI 10.1109/BigData.2017.8258038
   Brereton Pearl., 2008, Proceedings of the 12th International Conference on Evaluation and Assessment in Software Engineering, P41
   Brummer C, 2019, GEORGETOWN LAW J, V107, P235
   Cruz L, 2019, EMPIR SOFTW ENG, V24, P2209, DOI 10.1007/s10664-019-09682-0
   DAMIANI E, 2018, INT C CONCEPTUAL MOD, P3
   Ericson G, 2017, TEAM DATA SCI PROCES
   FASICK FA, 1978, PUBLIC OPIN QUART, V41, P549
   Fereday J., 2006, INT J QUAL METH, V5, P80, DOI [10.1177/160940690600500107, DOI 10.1177/160940690600500107]
   Haakman M, 2020, MACHINE LEARNING SCE
   Halcomb EJ, 2006, APPL NURS RES, V19, P38, DOI 10.1016/j.apnr.2005.06.001
   Hill C, 2016, S VIS LANG HUM CEN C, P162, DOI 10.1109/VLHCC.2016.7739680
   ING,, 2019, ING GLANC
   Kavuri A.S., 2019, FinTech and the future of financial services: What are the research gaps?
   Kim M, 2018, IEEE T SOFTWARE ENG, V44, P1024, DOI 10.1109/TSE.2017.2754374
   Larios Vargas Enrique, 2020, ESEC/FSE 2020: Proceedings of the 28th ACM Joint Meeting on European Software Engineering Conference and Symposium on the Foundations of Software Engineering, P245, DOI 10.1145/3368089.3409711
   Lin J., 2013, ACM SIGKDD Explorations Newsletter, V14, P6, DOI DOI 10.1145/2481244.2481247
   Lincoln Y. S., 1985, NATURALISTIC INQUIRY, V75, DOI DOI 10.1016/0147-1767(85)90062-8
   LWAKATARE LE, 2020, INT C PROD FOC SOFT, P185
   Mariscal G, 2010, KNOWL ENG REV, V25, P137, DOI 10.1017/S0269888910000032
   Martinez-Plumed F, 2017, ARXIV 170909003
   Martínez-Plumed F, 2021, IEEE T KNOWL DATA EN, V33, P3048, DOI 10.1109/TKDE.2019.2962680
   MAXWELL JA, 1992, HARVARD EDUC REV, V62, P279, DOI 10.17763/haer.62.3.8323320856251826
   Menzies T, 2020, IEEE SOFTWARE, V37, P81, DOI 10.1109/MS.2019.2954841
   Mitchell M, 2019, FAT*'19: PROCEEDINGS OF THE 2019 CONFERENCE ON FAIRNESS, ACCOUNTABILITY, AND TRANSPARENCY, P220, DOI 10.1145/3287560.3287596
   Mitchell TR, 1997, J EXP SOC PSYCHOL, V33, P421, DOI 10.1006/jesp.1997.1333
   Moyle S, 2001, RAMSYS METHODOLOGY S, V64
   Nicolescu B., 2008, Transdisciplinary theory and practice
   Rollins J., 2015, Foundational methodology for data science
   Ryan Michael J., 2017, INCOSE International Symposium, V27, P1277, DOI 10.1002/j.2334-5837.2017.00427.x
   Sculley D, 2015, ADV NEUR IN, V28
   Serban A, 2020, EMPIRICAL SOFTWARE E
   Shearer C., 2000, J. Data Warehous, V5, P13
   Stol KJ, 2016, PROC INT CONF SOFTW, P120, DOI 10.1145/2884781.2884833
   Van Loo R, 2018, UCLA LAW REV, V65, P232
   Wengraff Tom., 2001, Qualitative Research Interviewing
   Wu C J, 2019, MACHINE LEARNING FAC
   Wu XD, 2014, IEEE T KNOWL DATA EN, V26, P97, DOI 10.1109/TKDE.2013.109
   Yin R. K., 2018, Case Study Research and Applications: Design and Methods, DOI DOI 10.1016/J.TECHFORE.2018.10.013
   Zhang J.M., 2020, IEEE Trans. Softw. Eng
NR 48
TC 26
Z9 26
U1 3
U2 18
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 95
DI 10.1007/s10664-021-09993-1
PG 29
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA UJ9IF
UT WOS:000691590700003
OA hybrid, Green Published
DA 2024-07-18
ER

PT J
AU Moe, NB
   Smite, D
   Paasivaara, M
   Lassenius, C
AF Moe, Nils Brede
   Smite, Darja
   Paasivaara, Maria
   Lassenius, Casper
TI Finding the sweet spot for organizational control and team autonomy in
   large-scale agile software development
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Large-scale agile; Autonomy; Self-management; Communities of practice;
   Multiple-case study
ID SELF-MANAGEMENT; DECISION-MAKING; WORK; CHALLENGES
AB Agile methods and the related concepts of employee empowerment, self-management, and autonomy have reached large-scale software organizations and raise questions about commonly adopted principles for authority distribution. However, the optimum mechanism to balance the need for alignment, quality, and process control with the need or willingness of teams to be autonomous remains an unresolved issue. In this paper, we report our findings from a multiple-case study in two large-scale software development organizations in the telecom industry. We analysed the autonomy of the agile teams in the organizations using Hackman's classification of unit authority and found that the teams were partly self-managing. Further, we found that alignment across teams can be achieved top-down by management and bottom-up through membership in communities or through dialogue between the team and management. However, the degree of team autonomy was limited by the need for organizational alignment. Top-down alignment and control were maintained through centralized decision-making for certain areas, the use of supervisory roles, mandatory processes, and checklists. One case employed a bottom-up approach to alignment through the formation of a community composed of all teams, experts, and supporting roles, but excluding managers. This community-based alignment involved teams in decision-making and engaged them in alignment initiatives. We conclude that implementation of such bottom-up structures seems to provide one possible mechanism for balancing organizational control and team autonomy in large-scale software development.
C1 [Moe, Nils Brede] Blekinge Inst Technol, Karlskrona, Sweden.
   [Smite, Darja] Blekinge Inst Technol, Software Engn, Karlskrona, Sweden.
   [Moe, Nils Brede; Smite, Darja] SINTEF Digital, Trondheim, Norway.
   [Paasivaara, Maria; Lassenius, Casper] Aalto Univ, Helsinki, Finland.
   [Paasivaara, Maria] LUT Univ, Empir Software Engn, Lahti, Finland.
   [Lassenius, Casper] Simula Metropolitan Ctr Digital Engn, Oslo, Norway.
C3 Blekinge Institute Technology; Blekinge Institute Technology; SINTEF;
   Aalto University
RP Moe, NB (corresponding author), Blekinge Inst Technol, Karlskrona, Sweden.; Moe, NB (corresponding author), SINTEF Digital, Trondheim, Norway.
EM nilsm@sintef.no
RI Moe, Nils Brede/AAD-8183-2021; Lassenius, Casper/A-4339-2013
OI Moe, Nils Brede/0000-0003-2669-0778; Lassenius,
   Casper/0000-0003-4192-7024
FU SINTEF AS; GoLD project; Swedish Knowledge Foundation under the KK-Hog
   [2016/0191]; Research Council of Norway [235359]; TEKES as part of the
   Need for Speed research programme of DIMECC (Finnish Strategic Center
   for Science, Technology and Innovation in the field of ICT and digital
   business)
FX Open access funding provided by SINTEF AS. This research is partially
   funded by the GoLD project and the Swedish Knowledge Foundation under
   the KK-Hog grant 2016/0191, by the A-team project and the Research
   Council of Norway under the grants 235359, and by TEKES as part of the
   Need for Speed research programme of DIMECC (Finnish Strategic Center
   for Science, Technology and Innovation in the field of ICT and digital
   business).
CR [Anonymous], 1986, Psychology and work
   Bäcklander G, 2019, CREAT INNOV MANAG, V28, P42, DOI 10.1111/caim.12303
   Barney HT, 2009, LECT NOTES BUS INF P, V31, P53
   Beck K., 2000, EXTREME PROGRAMMING
   Beedle SK., 2001, AGILE SOFTWARE DEV S
   Berczuk S, 2010, IEEE SOFTWARE, V27, P12, DOI 10.1109/MS.2010.151
   Bick S, 2018, IEEE T SOFTWARE ENG, V44, P932, DOI 10.1109/TSE.2017.2730870
   Boehm B, 2005, IEEE SOFTWARE, V22, P30, DOI 10.1109/MS.2005.129
   BROWN SL, 1995, ACAD MANAGE REV, V20, P343, DOI 10.2307/258850
   Cohen SG, 1997, J MANAGE, V23, P239, DOI 10.1177/014920639702300303
   Conboy K, 2019, IEEE SOFTWARE, V36, P44, DOI 10.1109/MS.2018.2884865
   Dikert K, 2016, J SYST SOFTWARE, V119, P87, DOI 10.1016/j.jss.2016.06.013
   Dingsoyr T, 2019, IEEE SOFTWARE, V36, P30, DOI 10.1109/MS.2018.2884884
   Dingsoyr T, 2018, EMPIR SOFTW ENG, V23, P490, DOI 10.1007/s10664-017-9524-2
   Farrow A, 2008, AGILE 2008, PROCEEDINGS, P224, DOI 10.1109/Agile.2008.83
   Fenton-O'Creevy M, 1998, J ORGAN BEHAV, V19, P67, DOI 10.1002/(SICI)1099-1379(199801)19:1<67::AID-JOB827>3.0.CO;2-Y
   Gittell J.H., 2006, RELATIONAL PERSPECTI, P74, DOI DOI 10.4337/9781781950548.00011
   Guzzo RA, 1996, ANNU REV PSYCHOL, V47, P307, DOI 10.1146/annurev.psych.47.1.307
   Heikkilä VT, 2017, EMPIR SOFTW ENG, V22, P2892, DOI 10.1007/s10664-016-9491-z
   Hewitt B, 2005, P 38 ANN HI INT C SY, P256
   Hoda R, 2017, PROC INT CONF SOFTW, P141, DOI 10.1109/ICSE.2017.21
   Hoda R, 2013, IEEE T SOFTWARE ENG, V39, P422, DOI 10.1109/TSE.2012.30
   Hoegl M, 2006, HUM RESOURCE MANAGE, V45, P67, DOI 10.1002/hrm.20092
   Ingvaldsen JA, 2012, HUM RELAT, V65, P861, DOI 10.1177/0018726712448203
   Kirsch LJ, 2010, ORGAN SCI, V21, P469, DOI 10.1287/orsc.1090.0458
   KITZINGER J, 1995, BRIT MED J, V311, P299, DOI 10.1136/bmj.311.7000.299
   Klakegg OJ, 2016, INT J PROJ MANAG, V34, P282, DOI 10.1016/j.ijproman.2015.03.008
   Kniberg H, 2014, SPOTIFY ENG CULTUR 2
   Langfred CW, 2007, ACAD MANAGE J, V50, P885, DOI 10.5465/AMJ.2007.26279196
   Langfred CW, 2000, J ORGAN BEHAV, V21, P563, DOI 10.1002/1099-1379(200008)21:5<563::AID-JOB31>3.0.CO;2-H
   Larman C., 2016, LARGE SCALE SCRUM MO, P368
   Lee MY, 2017, RES ORGAN BEHAV, V37, P35, DOI 10.1016/j.riob.2017.10.002
   Leffingwell D., 2018, SAFE 4 5 REFERENCE G
   Lewis J, 2007, AGILE 2007, PROCEEDINGS, P389, DOI 10.1109/AGILE.2007.45
   Mankins M., 2017, HARVARD BUS REV, V95, P1
   Mathieu J, 2008, J MANAGE, V34, P410, DOI 10.1177/0149206308316061
   Moe NB, 2019, PROCEEDINGS OF THE 52ND ANNUAL HAWAII INTERNATIONAL CONFERENCE ON SYSTEM SCIENCES, P6997
   Moe NB, 2012, INFORM SOFTWARE TECH, V54, P853, DOI 10.1016/j.infsof.2011.11.006
   Moe NB, 2010, INFORM SOFTWARE TECH, V52, P480, DOI 10.1016/j.infsof.2009.11.004
   Moe NB, 2009, IEEE SOFTWARE, V26, P20, DOI 10.1109/MS.2009.182
   Morgan G., 1996, IMAGES ORG, V2nd
   Olsson HH, 2016, LECT NOTES COMPUT SC, V10027, P86, DOI 10.1007/978-3-319-49094-6_6
   OUCHI WG, 1979, MANAGE SCI, V25, P833, DOI 10.1287/mnsc.25.9.833
   Paasivaara M, 2019, IEEE SOFTWARE, V36, P64, DOI 10.1109/MS.2018.2886827
   Paasivaara M, 2014, INFORM SOFTWARE TECH, V56, P1556, DOI 10.1016/j.infsof.2014.06.008
   Paasivaara M, 2013, 2013 IEEE 8TH INTERNATIONAL CONFERENCE ON GLOBAL SOFTWARE ENGINEERING (ICGSE 2013), P134, DOI 10.1109/ICGSE.2013.25
   Paasivaara M, 2012, INT SYMP EMP SOFTWAR, P235, DOI 10.1145/2372251.2372294
   Patton M.Q., 2014, Qualitative Research and Evaluation Methods, V4th
   Pearce CL, 2004, ACAD MANAGE EXEC, V18, P47, DOI 10.5465/AME.2004.12690298
   Petersen K, 2010, EMPIR SOFTW ENG, V15, P654, DOI 10.1007/s10664-010-9136-6
   Puranam P, 2014, ACAD MANAGE REV, V39, P162, DOI 10.5465/amr.2011.0436
   Rolland K., 2016, Thirty Seventh International Conference on Information Systems, Thirty Seventh International Conference on Information Systems, P1
   Saldana J., 2016, CODING MANUAL QUALIT, DOI DOI 10.1017/CBO9781107415324.004
   Schwaber K., 2020, Scrum Guide
   Schwaber KenJeff Sutherland., 2017, The Scrum Guide
   SEMLER R, 1989, HARVARD BUS REV, V67, P76
   Smite D, 2020, COMMUNICATIONS ACM
   Smite D, 2019, IEEE SOFTWARE, V36, P51, DOI 10.1109/MS.2018.2886178
   Smite D, 2017, INFORM SOFTWARE TECH, V86, P71, DOI 10.1016/j.infsof.2017.01.003
   Stray V, 2020, J SYST SOFTWARE, V170, DOI 10.1016/j.jss.2020.110717
   Trist EL, 1951, HUM RELAT, V4, P3, DOI 10.1177/001872675100400101
   Wenger E., 2002, Cultivating Communities of Practice: A Guide to Managing Knowledge
   Wieringa R, 2015, SCI COMPUT PROGRAM, V101, P136, DOI 10.1016/j.scico.2014.11.013
   Yin R. K., 2017, CASE STUDY RES DESIG
NR 64
TC 13
Z9 14
U1 2
U2 27
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2021
VL 26
IS 5
AR 101
DI 10.1007/s10664-021-09967-3
PG 42
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA UJ9IQ
UT WOS:000691591800002
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Cashman, M
   Firestone, J
   Cohen, MB
   Thianniwet, T
   Niu, W
AF Cashman, Mikaela
   Firestone, Justin
   Cohen, Myra B.
   Thianniwet, Thammasak
   Niu, Wei
TI An empirical investigation of organic software product lines
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software product lines; Synthetic biology; Reverse engineering;
   BioBricks
ID DESIGN; VECTOR
AB Software product line engineering is a best practice for managing reuse in families of software systems that is increasingly being applied to novel and emerging domains. In this work we investigate the use of software product line engineering in one of these new domains, synthetic biology. In synthetic biology living organisms are programmed to perform new functions or improve existing functions. These programs are designed and constructed using small building blocks made out of DNA. We conjecture that there are families of products that consist of common and variable DNA parts, and we can leverage product line engineering to help synthetic biologists build, evolve, and reuse DNA parts. In this paper we perform an investigation of domain engineering that leverages an open-source repository of more than 45,000 reusable DNA parts. We show the feasibility of these new types of product line models by identifying features and related artifacts in up to 93.5% of products, and that there is indeed both commonality and variability. We then construct feature models for four commonly engineered functions leading to product lines ranging from 10 to 7.5 x 10(20) products. In a case study we demonstrate how we can use the feature models to help guide new experimentation in aspects of application engineering. Finally, in an empirical study we demonstrate the effectiveness and efficiency of automated reverse engineering on both complete and incomplete sets of products. In the process of these studies, we highlight key challenges and uncovered limitations of existing SPL techniques and tools which provide a roadmap for making SPL engineering applicable to new and emerging domains.
C1 [Cashman, Mikaela; Cohen, Myra B.] Iowa State Univ, Dept Comp Sci, Ames, IA 50011 USA.
   [Cashman, Mikaela] Oak Ridge Natl Lab, Biosci Div, Oak Ridge, TN 37830 USA.
   [Firestone, Justin] Univ Nebraska, Dept Comp Sci & Engn, Lincoln, NE 68588 USA.
   [Thianniwet, Thammasak] Suranaree Univ Technol, DIGITECH, Nakhon Ratchasima, Thailand.
   [Thianniwet, Thammasak] Suranaree Univ Technol, Sch Informat Technol, Nakhon Ratchasima, Thailand.
   [Niu, Wei] Univ Nebraska, Dept Chem & Biomol Engn, Lincoln, NE 68588 USA.
C3 Iowa State University; United States Department of Energy (DOE); Oak
   Ridge National Laboratory; University of Nebraska System; University of
   Nebraska Lincoln; Suranaree University of Technology; Suranaree
   University of Technology; University of Nebraska System; University of
   Nebraska Lincoln
RP Cashman, M (corresponding author), Iowa State Univ, Dept Comp Sci, Ames, IA 50011 USA.; Cashman, M (corresponding author), Oak Ridge Natl Lab, Biosci Div, Oak Ridge, TN 37830 USA.
EM mcashman.isu@gmail.com; jfiresto@cse.unl.edu; mcohen@iastate.edu;
   thammasak@sut.ac.th; wniu2@unl.edu
OI Firestone, Justin/0000-0002-1927-2036; Cashman,
   Mikaela/0000-0003-0620-7830; Niu, Wei/0000-0003-3826-1276; Cohen, Myra
   B./0000-0003-2443-2425
FU NSF [CCF-1901543, CBET-1805528]; National Institute of Justice
   [2016-R2-CX-0023]; ORNL Post-Doc Educational Investment funds; Center
   for Bioenergy Innovation (CBI) [DE-AC05-00OR22725]; Office of Biological
   and Environmental Research in the DOE Office of Science
FX We would like to thank the Haynes Lab at Emory University (formally
   Arizona State University) for sharing additional artifacts with us,
   especially Dr. Karmella A. Haynes and Dr. Stefan Tekel. This work is
   supported in part by NSF Grant CCF-1901543, National Institute of
   Justice Grant 2016-R2-CX-0023, and NSF Grant CBET-1805528. This work was
   also supported by ORNL Post-Doc Educational Investment funds, and
   funding was provided by the Center for Bioenergy Innovation (CBI) under
   Contract No. DE-AC05-00OR22725. The Center for Bioenergy Innovation is a
   U.S. Department of Energy Bioenergy Research Center supported by the
   Office of Biological and Environmental Research in the DOE Office of
   Science.
CR Acher M, 2011, LECT NOTES COMPUT SC, V6903, P220, DOI 10.1007/978-3-642-23798-0_25
   Anderson J, 2012, EMBO REP, V13, P584, DOI 10.1038/embor.2012.81
   [Anonymous], ASU iGEM 2017: Engineering variable regulators for a quorum sensing toolbox
   Aponte-Ubillus JJ, 2018, APPL MICROBIOL BIOT, V102, P1045, DOI 10.1007/s00253-017-8670-1
   Assunçao WKG, 2017, EMPIR SOFTW ENG, V22, P1763, DOI 10.1007/s10664-016-9462-4
   Ayala I, 2015, SENSORS-BASEL, V15, P15640, DOI 10.3390/s150715640
   Benavides D, 2006, MANAGING VARIABILITY, V85, P86
   Benavides D, 2010, INFORM SYST, V35, P615, DOI 10.1016/j.is.2010.01.001
   Bereza-Malcolm LT, 2015, ACS SYNTH BIOL, V4, P535, DOI 10.1021/sb500286r
   Bockle G., SOFTWARE PRODUCT LIN
   Bornhol J, 2016, ACM SIGPLAN NOTICES, V51, P637, DOI [10.1145/2872362.2872397, 10.1145/2954679.2872397]
   Cai YZ, 2010, NUCLEIC ACIDS RES, V38, P2637, DOI 10.1093/nar/gkq086
   Cameron DE, 2014, NAT REV MICROBIOL, V12, P381, DOI 10.1038/nrmicro3239
   Cetina C, 2009, ICAS: 2009 FIFTH INTERNATIONAL CONFERENCE ON AUTONOMIC AND AUTONOMOUS SYSTEMS, P179, DOI 10.1109/ICAS.2009.50
   Cleland-Huang J, 2018, 2018 IEEE/ACM 40TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING: NEW IDEAS AND EMERGING TECHNOLOGIES RESULTS (ICSE-NIER), P109, DOI 10.1145/3183399.3183408
   Clements Paul., 2001, SOFTWARE PRODUCT LIN
   Cohen DM, 1997, IEEE T SOFTWARE ENG, V23, P437, DOI 10.1109/32.605761
   Cohen M, P INT C COMP SAF REL, P22
   Cohen M, SCALING FITNESS FUNC
   Damiani F, 2019, SCI COMPUT PROGRAM, V172, P203, DOI 10.1016/j.scico.2018.11.005
   Daniel R, 2013, NATURE, V497, P619, DOI 10.1038/nature12148
   Diaz O, P 19 INT C SOFTW PRO, P111
   Eichberg M, ECMDA TRAC WORKSH EC, P87
   Elowitz MB, 2000, NATURE, V403, P335, DOI 10.1038/35002125
   Freiburg Bioware, FREIB BIOW IGEM 2010
   Galindo J, ACOTA, P29
   Gardner TS, 2000, NATURE, V403, P339, DOI 10.1038/35002131
   Garvin B, FAILURE AVOIDANCE CO
   Garvin BJ, 2011, EMPIR SOFTW ENG, V16, P61, DOI 10.1007/s10664-010-9135-7
   Grunbacher P, P 18 ACM SIGPLAN INT, P115
   HCC, HOLLAND COMPUTING CT
   Henderson E, P 20 IEEE INT REQ EN, P211
   Holl G, 2012, INFORM SOFTWARE TECH, V54, P828, DOI 10.1016/j.infsof.2012.02.002
   Holler M., 2013, NONPARAMETRIC STAT M, V751
   Hughes RA, 2017, CSH PERSPECT BIOL, V9, DOI 10.1101/cshperspect.a023812
   iGEM API, REG STAND BIOL PARTS
   iGEM Competition, INT GEN ENG MACH COM
   iGEM Registry, REG STAND BIOL PARTS, V13, P2019
   iGEM Viral Vectors, VIR VECT AD ASS VIR
   Kis Z, 2015, J R SOC INTERFACE, V12, DOI 10.1098/rsif.2014.1000
   Leich T, P 2 INT WORKSH FEAT, P25
   Levine F, 1999, MOL MED TODAY, V5, P165, DOI 10.1016/S1357-4310(98)01425-7
   Lopez-Herrejon R, SEARCH BASED SOFTWAR, P168
   Lopez-Herrejon RE, 2015, J SYST SOFTWARE, V103, P353, DOI 10.1016/j.jss.2014.10.037
   Lotufo R, 2010, LECT NOTES COMPUT SC, V6287, P136, DOI 10.1007/978-3-642-15579-6_10
   Ma SY, 2012, CURR OPIN CHEM BIOL, V16, P260, DOI 10.1016/j.cbpa.2012.05.001
   Marques M, 2019, INFORM SOFTWARE TECH, V105, P190, DOI 10.1016/j.infsof.2018.08.014
   Miller MB, 2001, ANNU REV MICROBIOL, V55, P165, DOI 10.1146/annurev.micro.55.1.165
   Nadi S, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P140, DOI 10.1145/2568225.2568283
   Nadi S, 2015, IEEE T SOFTWARE ENG, V41, P820, DOI 10.1109/TSE.2015.2415793
   Naso MF, 2017, BIODRUGS, V31, P317, DOI 10.1007/s40259-017-0234-5
   Nieke M, 2016, TENTH INTERNATIONAL WORKSHOP ON VARIABILITY MODELLING OF SOFTWARE-INTENSIVE SYSTEMS (VAMOS 2016), P73, DOI 10.1145/2866614.2866625
   Nielsen AAK, 2016, SCIENCE, V352, DOI 10.1126/science.aac7341
   Niu W, P INT SYST SOFTW PRO, P1
   Peterson A, CMUSEI90TR021 CARN M
   Plakidas K, SOFTWARE ECOSYSTEMS
   Quan JY, 2009, PLOS ONE, V4, DOI 10.1371/journal.pone.0006441
   Quinton C, LEVERAGING FEATURE M
   R Core Team, R LANG ENV STAT COMP
   Reiser MO, 2006, RE'06: 14TH IEEE INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE, PROCEEDINGS, P149
   Rossello Ricardo A, 2010, Commun Integr Biol, V3, P53
   Ruiz-cortes A, P 1 INT WORKSH VAR M, P129
   Saake G, P 23 INT SYST SOFTW, P257
   SBOL, SYNTHETIC BIOL OPEN
   Schnoor H, P 22 INT JOINT C ART, P566
   SHAPIRO SS, 1965, BIOMETRIKA, V52, P591, DOI 10.1093/biomet/52.3-4.591
   She S, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P461, DOI 10.1145/1985793.1985856
   Sincero J, IS LINUX KERNEL SOFT
   Stirling F, BIORXIV
   Stirling F, 2017, MOL CELL, V68, P686, DOI 10.1016/j.molcel.2017.10.033
   Storch M, BIORXIV
   Swanson J, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P377, DOI 10.1145/2635868.2635915
   Tavella F, DNA MOL STORAGE SYST
   Tekel SJ, 2019, FRONT BIOENG BIOTECH, V7, DOI 10.3389/fbioe.2019.00080
   Thianniwet T, SPLREVO OPTIMIZING C
   Thianniwet T, SPL XFACTOR FRAMEWOR
   Thüm T, 2014, ACM COMPUT SURV, V47, DOI 10.1145/2580950
   Thüma T, 2014, SCI COMPUT PROGRAM, V79, P70, DOI 10.1016/j.scico.2012.06.002
   Trujillo-Tzanahua G, TRENDS APPL SOFTWARE, P117
   Tzeremes V, SOFTWARE PRODUCT LIN
   Valverde S, SOFTWARE CRISIS SYNT
   Weasowski A, P 16 INT SOFTW PROD, V1, P106
   Weber W, 2007, P NATL ACAD SCI USA, V104, P2643, DOI 10.1073/pnas.0606398104
   Weber W, 2012, NAT REV GENET, V13, P21, DOI 10.1038/nrg3094
   Westfechtel B, P 23 INT SYST SOFTW, VB, P44
   Whitaker WB, 2015, CURR OPIN BIOTECH, V33, P165, DOI 10.1016/j.copbio.2015.01.007
   Whitford CM, 2018, J BIOL ENG, V12, DOI 10.1186/s13036-018-0105-8
   Winfree E, DNA BASED COMPUTERS
   Zanker M, P 2012 INT C CONF CO, V958, P31
   Zhu J, P 8 ACM IEEE INT S E, P1
NR 90
TC 2
Z9 2
U1 0
U2 3
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR 25
PY 2021
VL 26
IS 3
AR 44
DI 10.1007/s10664-021-09940-0
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA RF4SZ
UT WOS:000634831400001
OA hybrid
DA 2024-07-18
ER

PT J
AU Karhapää, P
   Behutiye, W
   Rodríguez, P
   Oivo, M
   Costal, D
   Franch, X
   Aaramaa, S
   Choras, M
   Partanen, J
   Abherve, A
AF Karhapaa, Pertti
   Behutiye, Woubshet
   Rodriguez, Pilar
   Oivo, Markku
   Costal, Dolors
   Franch, Xavier
   Aaramaa, Sanja
   Choras, Michal
   Partanen, Jari
   Abherve, Antonin
TI Strategies to manage quality requirements in agile software development:
   a multiple case study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Agile software development; Requirements engineering; Quality
   requirements; Requirements management practices; Non-functional
   requirements; Agile requirements engineering
ID ENGINEERING PRACTICES; NONFUNCTIONAL REQUIREMENTS; CHALLENGES
AB Agile methods can deliver software that fulfills customer needs rapidly and continuously. Quality requirements (QRs) are important in this regard; however, detailed studies on how companies applying agile methods to manage QRs are limited, as are studies on the rationale for choosing specific QR management practices and related challenges. The aim of this study was to address why practitioners manage QRs as they do and what challenges they face. We also analyzed how existing practices mitigate some of the found challenges. Lastly, we connect the contextual elements of the companies with their practices and challenges. We conducted 36 interviews with practitioners from four companies of varying sizes. Since each company operates in different domains, comparing QR management strategies and related challenges in different contexts was possible. We found that the companies apply proactive, reactive, and interactive strategies to manage QRs. Additionally, our study revealed 40 challenges in six categories that companies applying agile methods may face in QR management. We also identified nine contextual elements that affect QR management practice choices and which, importantly, can explain many related challenges. Based on these findings, we constructed a theoretical model about the connection between context, QR management practices, and challenges. Practitioners in similar contexts can learn from the practices identified in this study. Our preliminary theoretical model can help other practitioners identify what challenges they can expect to face in QR management in different developmental contexts as well as which practices to apply to mitigate these challenges.
C1 [Karhapaa, Pertti; Behutiye, Woubshet; Oivo, Markku] Univ Oulu, Fac Informat Technol & Elect Engn ITEE, M3S, Oulu 90014, Finland.
   [Rodriguez, Pilar] Univ Politecn Madrid, Fac Comp Sci, Dept Languages Comp Syst & Software Engn, Madrid, Spain.
   [Costal, Dolors] Univ Politecn Cataluna, UPC BarcelonaTech, Barcelona 08034, Spain.
   [Franch, Xavier] UPC BarcelonaTech, Dept Serv & Informat Syst Engn, Barcelona 08034, Spain.
   [Aaramaa, Sanja] Nokia Oy, Oulu 90620, Finland.
   [Choras, Michal] ITTI Sp Zoo, PL-61612 Poznan, Poland.
   [Choras, Michal] UTP Univ Sci & Technol, Univ Sci & Technol, PL-5796 Bydgoszcz, Poland.
   [Partanen, Jari] Bittium Wireless Ltd, Oulu 90590, Finland.
   [Abherve, Antonin] Softeam, F-75016 Paris, France.
C3 University of Oulu; Universidad Politecnica de Madrid; Universitat
   Politecnica de Catalunya; Universitat Politecnica de Catalunya;
   Bydgoszcz University of Science & Technology
RP Karhapää, P (corresponding author), Univ Oulu, Fac Informat Technol & Elect Engn ITEE, M3S, Oulu 90014, Finland.
EM pertti.karhapaa@oulu.fi; woubshet.behutiye@oulu.fi;
   pilar.rodrigues@upm.es; markku.oivo@oulu.fi; dolors@essi.upc.edu;
   franch@essi.upc.edu; sanja.aaramaa@nokia.com; mchoras@itti.com.pl;
   jari.partanen@bittium.com; antonin.abherve@softeam.fr
RI Franch, Xavier/A-8588-2008; Rodriguez, Pilar/HSE-9989-2023; Rodriguez,
   Pilar/C-1449-2015; Costal, Dolors/F-7862-2016
OI Partanen, Jari/0000-0002-4698-2156; Karhapaa,
   Pertti/0000-0003-1233-772X; Rodriguez, Pilar/0000-0002-0618-6104; Oivo,
   Markku/0000-0002-1698-2323; Costal, Dolors/0000-0002-7340-0414; Franch,
   Xavier/0000-0001-9733-8830; Behutiye, Woubshet/0000-0002-9015-9941
FU University of Oulu including Oulu University Hospital
FX Open Access funding provided by University of Oulu including Oulu
   University Hospital.
CR Acuna ST, 2016, SEKE 2016
   Aljallabi BM, 2015, 2015 International Conference on Computing, Control, Networking, Electronics and Embedded Systems Engineering (ICCNEEE), P428, DOI 10.1109/ICCNEEE.2015.7381407
   Alsaqaf W, 2019, INFORM SOFTWARE TECH, V110, P39, DOI 10.1016/j.infsof.2019.01.009
   Alsaqaf W, 2017, LECT NOTES COMPUT SC, V10153, P219, DOI 10.1007/978-3-319-54045-0_17
   [Anonymous], 2012, CASE STUDY RES SOFTW, DOI DOI 10.1002/9781118181034
   [Anonymous], 2013, SOFTWARE REQUIREMENT
   Anwar S, 2014, 17TH IEEE INTERNATIONAL MULTI TOPIC CONFERENCE 2014, P161
   Ayalew T, 2013, LECT NOTES COMPUT SC, V8208, P139, DOI 10.1007/978-3-642-41488-6_10
   Azham Z., 2011, 2011 5th Malaysian Conference in Software Engineering (MySEC), P414, DOI 10.1109/MySEC.2011.6140708
   Behutiye W, 2020, INFORM SOFTWARE TECH, V123, DOI 10.1016/j.infsof.2019.106225
   Behutiye W, 2017, LECT NOTES COMPUT SC, V10611, P515, DOI 10.1007/978-3-319-69926-4_41
   Bourimi Mohamed, 2013, Online Communities and Social Computing. 5th International Conference, OCSC 2013 Held as Part of HCI International 2013. Proceedings. LNCS 8029, P345, DOI 10.1007/978-3-642-39371-6_39
   Bourimi M, 2010, LECT NOTES COMPUT SC, V6409, P182, DOI 10.1007/978-3-642-16488-0_15
   Bourque Pierre, 2014, SWEBOK: Guide to the Software Engineering Body of Knowledge, V3rd
   Cajander Å, 2013, LECT NOTES COMPUT SC, V8119, P762
   Cannizzo F, 2008, AGILE 2008, PROCEEDINGS, P501, DOI 10.1109/Agile.2008.31
   Cao L, 2008, IEEE SOFTWARE, V25, P60, DOI 10.1109/MS.2008.1
   CMMI Product team, 2010, CMMI DEV VERSION 13
   Cruzes DS, 2011, INT SYMP EMP SOFTWAR, P275, DOI 10.1109/ESEM.2011.36
   Cruzes DS, 2017, LECT NOTES BUS INF P, V283, P201, DOI 10.1007/978-3-319-57633-6_13
   Curcio K, 2018, J SYST SOFTWARE, V139, P32, DOI 10.1016/j.jss.2018.01.036
   Dybå T, 2012, INT SYMP EMP SOFTWAR, P19, DOI 10.1145/2372251.2372256
   Farid W.M., 2013, Proceedings of IEEE: Southeastcon, P1, DOI [10.1109/SECON.2013.6567413, DOI 10.1109/SECON.2013.6567413]
   Farid WM, 2012, ASIA PAC SOFWR ENG, P322, DOI 10.1109/APSEC.2012.23
   Fowler M., 2001, Software Development, V9, P28
   Gary K, 2011, SOFTWARE PRACT EXPER, V41, P945, DOI 10.1002/spe.1075
   Glass RL, 1998, IEEE SOFTWARE, V15, P103, DOI 10.1109/52.676973
   Heck P., 2016, SOFTW QUAL J, P1
   Heikkilä VT, 2015, PROCEEDINGS 41ST EUROMICRO CONFERENCE ON SOFTWARE ENGINEERING AND ADVANCED APPLICATIONS SEAA 2015, P199, DOI 10.1109/SEAA.2015.70
   Inayat I, 2015, COMPUT HUM BEHAV, V51, P915, DOI 10.1016/j.chb.2014.10.046
   Kalenda M, 2018, J SOFTW-EVOL PROC, V30, DOI 10.1002/smr.1954
   Käpyaho M, 2015, INT REQUIR ENG CONF, P334, DOI 10.1109/RE.2015.7320450
   Karhapaa Pertti, 2017, P 21 INT C EVALUATIO, P354, DOI DOI 10.1145/3084226
   Kasauli R, 2017, INT REQUIR ENG CONF, P352, DOI 10.1109/RE.2017.60
   Knauss E, 2017, 2017 IEEE 25TH INTERNATIONAL REQUIREMENTS ENGINEERING CONFERENCE WORKSHOPS (REW), P427, DOI 10.1109/REW.2017.35
   Lianping Chen, 2015, IEEE Software, V32, P50, DOI 10.1109/MS.2015.27
   Medeiros J, 2020, INFORM SOFTWARE TECH, V117, DOI 10.1016/j.infsof.2019.106194
   Miles M. B., 1984, Qualitative data analysis: An expanded sourcebook
   MYLOPOULOS J, 1992, IEEE T SOFTWARE ENG, V18, P483, DOI 10.1109/32.142871
   Nawrocki J, 2014, LECT NOTES COMPUT SC, V8327, P40, DOI 10.1007/978-3-319-04298-5_5
   Paivarinta T, 2014, P 23 INT C INF SYST, P337
   Petersen K, 2009, INT SYMP EMP SOFTWAR, P402
   Pohl K., 2016, Requirements Engineering Fundamentals: A Study Guide for the Certified Professional for Requirements Engineering Exam-Foundation Level-IREB Compliant
   Rafi U., 2015, International Journal of Scientific Engineering Research, P377
   Rahim L, 2014, INT C COMP INF SCI I, P1
   Ramesh B, 2010, INFORM SYST J, V20, P449, DOI 10.1111/j.1365-2575.2007.00259.x
   Rodríguez P, 2012, INT SYMP EMP SOFTWAR, P139, DOI 10.1145/2372251.2372275
   Rodríguez P, 2009, LECT NOTES BUS INF P, V32, P171
   Runeson P, 2009, EMPIR SOFTW ENG, V14, P131, DOI 10.1007/s10664-008-9102-8
   Savolainen J., 2010, Proceedings of the 2010 IEEE 18th International Conference on Requirements Engineering (RE2010), P289, DOI 10.1109/RE.2010.41
   Schön EM, 2017, COMPUT STAND INTER, V49, P79, DOI 10.1016/j.csi.2016.08.011
   Shaw M., 1996, Proceedings of the 8th International Workshop on Software Specification and Design, P181, DOI 10.1109/IWSSD.1996.501165
   Singh M, 2008, AGILE 2008, PROCEEDINGS, P555, DOI 10.1109/Agile.2008.33
   Siponen M., 2005, P 38 ANN HAW INT C S, DOI 10.1109/HICSS.2005.329
   SJOBERG D.I., 2008, BUILDING THEORIES SO
   Stalhane T., 2012, P 11 INT PROB SAF AS, P6052
   Turpe S., 2017, SECSK ESORICS, P34
   VersionOne Inc, 2016, 10 ANN STATE AGILE D
   Wagner S., 2013, SOFTWARE PRODUCT QUA, DOI DOI 10.1007/978-3-642-38571-1
NR 59
TC 13
Z9 14
U1 3
U2 22
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2021
VL 26
IS 2
AR 28
DI 10.1007/s10664-020-09903-x
PG 59
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA QR3MX
UT WOS:000625117700001
OA Green Published, hybrid
DA 2024-07-18
ER

PT J
AU Hunsen, C
   Siegmund, J
   Apel, S
AF Hunsen, Claus
   Siegmund, Janet
   Apel, Sven
TI On the fulfillment of coordination requirements in open-source software
   projects: An exploratory study
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Coordination requirements; Socio-technical congruence; Features;
   Social-network analysis; Coronet; Codeface; Open-source software
   systems; Configurable systems; Software product lines; Feature-oriented
   software development
ID SHARED MENTAL MODELS; SYSTEMS; PRODUCT; COMMUNICATION; ARCHITECTURES;
   IMPACT
AB In large-scale open-source software projects, where developers are often distributed across the entire planet, coordination among developers is crucial. To estimate whether a state ofsocio-technical congruenceis achieved, which is associated with software quality and project success, we assess the alignment of collaboration and communication in such software projects in terms ofcoordination requirements. By means of an empirical study on a substantial set of large-scale open-source software projects-the development histories of all projects sum up to over 180 years-we aim at shedding light on this issue. To this end, to take a more semantic view on this phenomenon in comparison to previous work, we do not only identify coordination requirements arising from files and functions only, but also those arising from features. We found that open-source developers fulfill coordination requirements intentionally, but mostly those coordination requirements that arise from coupled source-code artifacts, while they resolve simpler ones independently. Furthermore, neither of the considered abstraction levels of source-code artifacts (files, functions, features) is more suitable to construct coordination requirements with respect to their fulfillment. This finding strongly indicates that features do not play an as important role in the development process as expected and commonly believed by the research community in the area of feature-oriented and feature-driven development. Finally, we identified notable evolutionary trends in the fulfillment of coordination requirements and showed that far-reaching social events (such as organizational issues) have a huge impact on their fulfillment, both negatively and positively. The key findings of our empirical study are that socio-technical relations are important to understand open-source development communities and that the incorporation of different abstraction levels for developer collaboration does yield important insights to further improve the evolution in open-source software projects.
C1 [Hunsen, Claus] Univ Passau, Passau, Germany.
   [Siegmund, Janet] Tech Univ Chemnitz, Chemnitz, Germany.
   [Apel, Sven] Saarland Univ, Saarland Informat Campus, Saarbrucken, Germany.
C3 University of Passau; Technische Universitat Chemnitz; Saarland
   University
RP Hunsen, C (corresponding author), Univ Passau, Passau, Germany.
EM hunsen@fim.uni-passau.de; janet.siegmund@informatik.tu-chemnitz.de;
   apel@cs.uni-saarland.de
OI Apel, Sven/0000-0003-3687-2233; Hunsen, Claus/0000-0002-2570-4093
FU DFG (German Research Foundation) [AP 206/5-1, AP 206/5-2, AP 206/6-1, AP
   206/6-2, AP 206/14-1]; Bavarian State Ministry of Education, Science and
   the Arts in the framework of the Centre Digitisation.Bavaria (ZD.B); DFG
   [SI 2045/2-2]
FX We thank Alexander Grebhahn, Angelika Schmid, Thomas Bock, and Christian
   Kastner for their useful comments on previous versions of this paper and
   their encouragement. Furthermore, we thank all reviewers and editors for
   their valuable input to improve this article. This work was supported by
   the DFG (German Research Foundation, AP 206/5-1&2, AP 206/6-1&2, and AP
   206/14-1). Siegmund's work is funded by the Bavarian State Ministry of
   Education, Science and the Arts in the framework of the Centre
   Digitisation.Bavaria (ZD.B) and the DFG (SI 2045/2-2).
CR Aljemabi MA, 2018, IEEE ACCESS, V6, P51049, DOI 10.1109/ACCESS.2018.2868427
   Andrade H., 2014, P WORKING IEEEIFIP C, V12, P1
   [Anonymous], 2015, P 19 INT C SOFTW PRO, DOI DOI 10.1145/2791060.2791108
   Apel S., 2013, Feature-Oriented Software Development: Concepts and Implementation
   Argote Linda., 2012, Organizational Learning
   Arisholm E, 2004, IEEE T SOFTWARE ENG, V30, P491, DOI 10.1109/TSE.2004.41
   Bacchelli A, 2010, LECT NOTES COMPUT SC, V6013, P59
   Betz S, 2013, P INT WORKSH REPL EM
   Bhattacharya P, 2012, PROC INT CONF SOFTW, P419, DOI 10.1109/ICSE.2012.6227173
   Bird Christian, 2008, Proceedings of the 2008 ACM SIGSOFT Symposium on the Foundations of Software Engineering, P24
   Bird C, 2006, CAMB INTRO PHILOS, P13
   Blincoe K., 2013, Proc. 9th Joint Meeting on Foundations of Software Engineering (ESEC/FSE 13), P213, DOI DOI 10.1145/2491411.2491440
   Blincoe K., 2012, Proc. Conf. Computer Supported Cooperative Work (CSCW 12), P1351
   Brandes U, 2003, LECT NOTES COMPUT SC, V2832, P568
   Brooks F. P, 1995, MYTHICAL MAN MONTH A
   CANNONBOWERS JA, 1993, INDIVIDUAL AND GROUP DECISION MAKING, P221
   Cataldo M, 2013, IEEE T SOFTWARE ENG, V39, P343, DOI 10.1109/TSE.2012.32
   Cataldo M, 2008, ESEM'08: PROCEEDINGS OF THE 2008 ACM-IEEE INTERNATIONAL SYMPOSIUM ON EMPIRICAL SOFTWARE ENGINEERING AND MEASUREMENT, P2
   Cataldo Marcelo, 2006, P 2006 20 ANNIVERSAR, P353, DOI DOI 10.1145/1180875.1180929
   Ckantsidis C, 2003, SIAM PROC S, P16
   CLEVELAND WS, 1979, J AM STAT ASSOC, V74, P829, DOI 10.2307/2286407
   Colfer LJ, 2016, IND CORP CHANGE, V25, P709, DOI 10.1093/icc/dtw027
   CONWAY ME, 1968, DATAMATION, V14, P28
   Crowston K., 2005, First Monday, V10, DOI 10.5210/fm.v10i2.1207
   Csardi G., 2006, InterJournal, (Complex Systems), V1695, P1
   CURTIS B, 1988, COMMUN ACM, V31, P1268, DOI 10.1145/50087.50089
   Dabbish L, 2012, P ACM 2012 C COMP SU, P1277, DOI [10.1145/2145204.2145396, DOI 10.1145/2145204.2145396]
   de Oliveira MC, 2016, PROCEEDINGS OF THE 15TH INTERNATIONAL CONFERENCE ON MODULARITY (MODULARITY'16), P25, DOI 10.1145/2889443.2889450
   De Souza C., 2005, P 2005 ACM INT C SUP, P197, DOI 10.1145/1099203.1099239
   Draheim D, 2003, SIXTH INTERNATIONAL WORKSHOP ON PRINCIPLES OF SOFTWARE EVOLUTION, PROCEEDINGS, P131, DOI 10.1109/IWPSE.2003.1231220
   Ehrlich K, 2008, INT WORKSH SOC CONGR
   Ernst MD, 2002, IEEE T SOFTWARE ENG, V28, P1146, DOI 10.1109/TSE.2002.1158288
   Espinosa J.Alberto., 2004, Team Cognition: Understanding the Factors That Drive Process and Performance, P107, DOI [DOI 10.1037/10690-006, 10.1037/10690-000, DOI 10.1037/10690-000]
   Espinosa JA, 2002, THESIS
   Feigenspan J., 2012, EMPIR SOFTW ENG, V18, P699
   Fenske W., 2015, P 9 INT WORKSH VAR M, P3, DOI DOI 10.1145/2701319.2701321
   Fenske W, 2015, IEEE INT WORK C SO, P171, DOI 10.1109/SCAM.2015.7335413
   Gall H, 1998, PROC IEEE INT CONF S, P190, DOI 10.1109/ICSM.1998.738508
   Gharehyazie M, 2017, EMPIR SOFTW ENG, V22, P1795, DOI 10.1007/s10664-016-9463-3
   Gneiting T, 2012, STAT SCI, V27, P247, DOI 10.1214/11-STS370
   Gobbi A., 2017, BIREWIRE HIGH PERFOR
   Grinter R. E., 1998, ACM 1998 Conference on Computer Supported Cooperative Work. Proceedings. CSCW 98, P393, DOI 10.1145/289444.289514
   Grinter RE, 1999, P 1999 ACM INT C SUP, P306, DOI DOI 10.1145/320297.320333
   Gutwin C., 1999, ACM Transactions on Computer-Human Interaction, V6, P243, DOI 10.1145/329693.329696
   Herbsleb J., 2006, P INT C INF SYST ICI, P553
   Herbsleb J. D., 2003, Software Engineering Notes, V28, P138, DOI 10.1145/949952.940091
   Herbsleb J. D., 1999, Proceedings of the 1999 International Conference on Software Engineering (IEEE Cat. No.99CB37002), P85, DOI 10.1109/ICSE.1999.840998
   Herbsleb JD, 1999, IEEE SOFTWARE, V16, P63, DOI 10.1109/52.795103
   Herbsleb JD, 2003, IEEE T SOFTWARE ENG, V29, P481, DOI 10.1109/TSE.2003.1205177
   Hindle Abram, 2008, P 2008 INT WORKING C, P99
   Hunsen C, 2016, EMPIR SOFTW ENG, V21, P449, DOI 10.1007/s10664-015-9360-1
   Jermakovics A, 2011, PROCEEDINGS OF THE 4TH INTERNATIONAL WORKSHOP ON COOPERATIVE AND HUMAN ASPECTS OF SOFTWARE ENGINEERING (CHASE'11), P24
   Joblin M, 2017, PROC INT CONF SOFTW, P164, DOI 10.1109/ICSE.2017.23
   Joblin M, 2017, EMPIR SOFTW ENG, V22, P2050, DOI 10.1007/s10664-016-9478-9
   Joblin M, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P563, DOI 10.1109/ICSE.2015.73
   Kossinets G, 2006, SOC NETWORKS, V28, P247, DOI 10.1016/j.socnet.2005.07.002
   Kwan I, 2009, INT WORKSH SOC CONGR
   Kwan I, 2011, P INT WORKSH SOC SOF
   Kwan I, 2012, IEEE SOFTWARE, V29, P90, DOI 10.1109/MS.2012.3
   Kwan I, 2011, IEEE T SOFTWARE ENG, V37, P307, DOI 10.1109/TSE.2011.29
   Levesque LL, 2001, J ORGAN BEHAV, V22, P135, DOI 10.1002/job.87
   Li J, 2012, PROCEEDINGS OF 2012 INTERNATIONAL SYMPOSIUM - WOMEN'S HUMAN RESOURCES DEVELOPMENT & MANAGEMENT, FEMALE SURVIVAL & DEVELOPMENT, P160, DOI 10.1109/ICSSP.2012.6225961
   Liebig Jorg, 2011, AOSD 11
   Liebig Jorg, 2010, P 32 ACM IEEE INT C, V1, P105
   Lopez-Fernandez L., 2004, "International Workshop on Mining Software Repositories (MSR 2004)" W17S Workshop - 26th International Conference on Software Engineering, P101, DOI 10.1049/ic:20040485
   MacCormack A, 2012, RES POLICY, V41, P1309, DOI 10.1016/j.respol.2012.04.011
   Malone ThomasW., 1990, CSCW 90, P357, DOI DOI 10.1145/99332.99367
   Sierra JM, 2018, INFORM SOFTWARE TECH, V94, P111, DOI 10.1016/j.infsof.2017.10.004
   Mathieu JE, 2000, J APPL PSYCHOL, V85, P273, DOI 10.1037//0021-9010.85.2.273
   Meneely A, 2011, 2011 33RD INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE), P281, DOI 10.1145/1985793.1985832
   Milo R., 2004, ARXIVCONDMAT0312028V
   Mitchell BS, 2006, IEEE T SOFTWARE ENG, V32, P193, DOI 10.1109/TSE.2006.31
   Mockus A, 2002, ACM T SOFTW ENG METH, V11, P309, DOI 10.1145/567793.567795
   Nagappan N, 2008, ICSE'08 PROCEEDINGS OF THE THIRTIETH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, P521, DOI 10.1145/1368088.1368160
   Palmer S.R., 2002, PRACTICAL GUIDE FEAT
   PARNAS DL, 1972, COMMUN ACM, V15, P1053, DOI 10.1145/361598.361623
   Passos L, 2018, IEEE T SOFTWARE ENG, P1
   Pinto RC, 2015, DOCUMENTOS, P81, DOI 10.14195/978-989-26-0983-6_4
   Portillo-Rodríguez J, 2014, INFORM SCIENCES, V264, P230, DOI 10.1016/j.ins.2014.01.009
   Poshyvanyk D, 2009, EMPIR SOFTW ENG, V14, P5, DOI 10.1007/s10664-008-9088-2
   Pournelle G. H., 1953, Journal of Mammalogy, V34, P133, DOI 10.1890/0012-9658(2002)083[1421:SDEOLC]2.0.CO;2
   Queiroz R, 2015, SOFTWARE SYSTEMS MOD, V16, P77
   Ramsauer R, 2019, PROC INT CONF SOFTW, P807, DOI 10.1109/ICSE.2019.00088
   ROUSE WB, 1992, IEEE T SYST MAN CYB, V22, P1296, DOI 10.1109/21.199457
   Sarma A, 2003, PROC INT CONF SOFTW, P444, DOI 10.1109/ICSE.2003.1201222
   Sarma A, 2008, TECH REP
   Sarma A, 2009, PROC INT CONF SOFTW, P23, DOI 10.1109/ICSE.2009.5070505
   Schroeder M, 1992, FRACTALS CHAOS POWER, P211
   Schwind M, 2008, I W ADV ISS E COMMER, P97, DOI [10.1109/CEC/EEE.2008.21, 10.1109/CECandEEE.2008.100]
   Scozzi B, 2008, P HAW INT C SYST SCI, P1
   Sevcikova H, 2014, FRACTALDIM ESTIMATIO
   Shen-Orr SS, 2002, NAT GENET, V31, P64, DOI 10.1038/ng881
   Sommerville I., 2010, SOFTWARE ENG
   Sosa ME, 2002, IEEE T ENG MANAGE, V49, P45, DOI 10.1109/17.985747
   Storey M., 2016, IEEE T SOFTWARE ENG, V41, P1
   STOUT R, 1993, DESIGNING FOR DIVERSITY, VOLS 1 AND 2, P1238
   Toral SL, 2010, INFORM SOFTWARE TECH, V52, P296, DOI 10.1016/j.infsof.2009.10.007
   Valetto G, 2007, P INT WORKSH MIN SOF, p25:1
   Valetto G, 2008, INT WORKSH SOC CONGR
   Wagstrom P., 2010, Academy of Management Annual Meeting Proceedings, P1, DOI [DOI 10.5465/AMBPP.2010.54500789, 10.5465/AMBPP.2010.54500789]
   Xuan Q, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P222, DOI 10.1145/2568225.2568238
   Xuan Q, 2015, PHYS REV E, V91, DOI 10.1103/PhysRevE.91.052813
   Xuan Q, 2012, PROCEEDINGS OF THE 2012 ASE INTERNATIONAL CONFERENCE ON SOCIAL INFORMATICS (SOCIALINFORMATICS 2012), P78, DOI 10.1109/SocialInformatics.2012.17
   Zimmermann T, 2004, PROC INT CONF SOFTW, P563, DOI 10.1109/ICSE.2004.1317478
NR 104
TC 7
Z9 7
U1 1
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD NOV
PY 2020
VL 25
IS 6
BP 4379
EP 4426
DI 10.1007/s10664-020-09833-8
EA OCT 2020
PG 48
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED); Social Science Citation Index (SSCI)
SC Computer Science
GA OI4BB
UT WOS:000576383500001
DA 2024-07-18
ER

PT J
AU Arya, DM
   Guo, JLC
   Robillard, MP
AF Arya, Deeksha M.
   Guo, Jin L. C.
   Robillard, Martin P.
TI Information correspondence between types of documentation for APIs
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Software documentation; Application programming interface; Qualitative
   analysis; Exploratory study
ID KNOWLEDGE
AB Documentation for programming languages and their APIs takes many forms, such as reference documentation, blog posts or other textual and visual media. Prior research has suggested that developers switch between reference and tutorial-like documentation while learning a new API. Documentation creation and maintenance is also an effort-intensive process that requires its creators to carefully inspect and organize information, while ensuring consistency across different sources. This article reports on the relationship between information in tutorials and in API reference documentation of three libraries on the topics: regular expressions, unified resource location and Input/Output in the two programming languages, Java and Python. Our investigation reveals that about half of the sentences in the tutorials studied describeAPI Information, i.e. syntax, behaviour, usage and performance of the API, that could be found in the reference documentation. The remaining are tutorial specific use-cases and examples. We also elicited and analyzed six types of correspondences between sentences in tutorials and reference documentation, ranging fromidenticaltoimplied. Based on our findings, we propose a general information reuse pattern as a structured abstraction to represent the systematic integration of information from the reference documentation into a tutorial. We report on the distribution of 38 instances of this pattern, and on the impact of applying the pattern automatically on the existing tutorials. This work lays a foundation for understanding the nature of information correspondence across different documentation types to inform and assist documentation generation and maintenance.
C1 [Arya, Deeksha M.; Guo, Jin L. C.; Robillard, Martin P.] McGill Univ, Montreal, PQ, Canada.
C3 McGill University
RP Arya, DM (corresponding author), McGill Univ, Montreal, PQ, Canada.
EM deeksha.arya@mail.mcgill.ca; jguo@cs.mcgill.ca; martin@cs.mcgill.ca
OI Arya, Deeksha/0000-0002-3719-5011
CR Al Omran FNA, 2017, IEEE WORK CONF MIN S, P187, DOI 10.1109/MSR.2017.42
   Angelini G., 2018, P EUR AC C TECH COMM, P70
   [Anonymous], 2011, P 2 INT WORKSHOP WEB
   Camm E. H., 2009, 2009 IEEE POW EN SOC, P1, DOI [10.1109/pes.2009.5275322, 10.1109/PES.2009.5275322, DOI 10.1109/PES.2009.5275322]
   Caponi A, 2018, PROCEEDINGS OF THE ACM SYMPOSIUM ON DOCUMENT ENGINEERING (DOCENG 2018), DOI 10.1145/3209280.3209537
   Cleland-Huang J, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE COMPANION 2014), P2, DOI 10.1145/2591062.2594396
   Dagenais B., 2010, P 18 INT S FDN SOFTW, P127
   Dagenais B, 2014, IEEE T SOFTWARE ENG, V40, P1126, DOI 10.1109/TSE.2014.2347969
   Dekel U, 2009, PROC INT CONF SOFTW, P320, DOI 10.1109/ICSE.2009.5070532
   Forward A., 2002, Proceedings of the 2002 ACM symposium on Document engineering, P26, DOI 10.1145/585058.585065
   Fourney Adam., 2014, Proceedingsoftheextendedabstractsofthe32ndannualACMconference on Human factors in computing systems - CHI EA'14, P653, DOI DOI 10.1145/2559206
   Garousi G., 2013, P 17 INT C EVALUATIO, P24
   Jiang H, 2017, PROC INT CONF SOFTW, P38, DOI 10.1109/ICSE.2017.12
   Josyula JRA, 2016, THESIS
   Koznov D., 2015, International Andrei Ershov Memorial Conference on Perspectives of System Informatics, P170
   Koznov D.V, 2017, P 5 INT C ACT PROBL, V1989, P195
   Kramer D., 1999, Seventeenth Annual International Conference on Computer Documentation. Conference Proceedings, P147, DOI 10.1145/318372.318577
   Krippendorff K., 2018, CONTENT ANAL INTRO I
   Luciv DV, 2018, PROGRAM COMPUT SOFT+, V44, P335, DOI 10.1134/S0361768818050079
   Luciv DV, 2016, PROGRAM COMPUT SOFT+, V42, P216, DOI 10.1134/S0361768816040046
   Maalej W, 2013, IEEE T SOFTWARE ENG, V39, P1264, DOI 10.1109/TSE.2013.12
   Meng Michael, 2019, Communication Design Quarterly Review, V7, P40, DOI 10.1145/3358931.3358937
   Meng M, 2018, Journal of Technical Writing and Communication, V48, P295, DOI [10.1177/0047281617721853, 10.1177/0047281617721853?journalCode=jtwa, DOI 10.1177/0047281617721853]
   Monperrus M, 2012, EMPIR SOFTW ENG, V17, P703, DOI 10.1007/s10664-011-9186-4
   Oumaziz MA, 2017, LECT NOTES COMPUT SC, V10221, P12, DOI 10.1007/978-3-319-56856-0_2
   Phoha V, 1997, COMPUTER, V30, P97, DOI 10.1109/2.625327
   Ries R., 1990, IPCC 90. Communication Across the Sea: North American and European Practices. International Professional Communication Conference (Cat. No.90CH2888-6), P66, DOI 10.1109/IPCC.1990.111154
   Robillard MP, 2011, EMPIR SOFTW ENG, V16, P703, DOI 10.1007/s10664-010-9150-8
   Robillard MP, 2009, IEEE SOFTWARE, V26, P27, DOI 10.1109/MS.2009.193
   Runeson Per, 2012, Case study research in software engineering: Guidelines and examples
   Rupakheti CR, 2012, THESIS
   Treude C, 2016, PROC INT CONF SOFTW, P392, DOI 10.1145/2884781.2884800
   Treude C, 2015, IEEE T SOFTWARE ENG, V41, P565, DOI 10.1109/TSE.2014.2387172
   Uddin G, 2015, IEEE SOFTWARE, V32, P68, DOI 10.1109/MS.2014.80
   Watson R., 2013, P 31 ACM INT C DESIG, P165, DOI DOI 10.1145/2507065.2507076
   Watson R, 2012, SIGDOC '12: PROCEEDINGS OF THE 30TH ACM INTERNATIONAL CONFERENCE ON DESIGN OF COMMUNICATION, P295
   Wildermann S, 2014, THESIS
   Zhong H, 2009, IEEE INT CONF AUTOM, P307, DOI 10.1109/ASE.2009.94
NR 38
TC 6
Z9 6
U1 0
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 4069
EP 4096
DI 10.1007/s10664-020-09857-0
EA AUG 2020
PG 28
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000562938700002
DA 2024-07-18
ER

PT J
AU Feyzi, F
AF Feyzi, Farid
TI <i>CGT-FL</i>: using cooperative game theory to effective fault
   localization in presence of coincidental correctness
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Coincidental correctness; Cooperative game theory; Shapley value; Fault
   localization; Debugging
ID FEATURE-SELECTION; INFORMATION; SPECTRUM; SLICES; MODEL
AB In this article we emphasize that most of the faults, appearing in real-world programs, are complicated and there exists a high interaction between faulty and other correlated statements, that is likely to cause coincidental correctness in many cases. To effectively diminish the negative impact of coincidentally correct tests on localization effectiveness, we suggest analyzing the combinatorial effect of program statements on the failure. To this end, we develop a new framework,CGT-FL, for evaluation and ranking program statements in a manner that statements which have strong discriminatory power as a group but are weak as individuals could be identified. The framework firstly evaluates the interactivity degree of each statement according to its influence on the intricate interrelation among statements by a Shapley value-based cooperative game-theoretic method. Then, statements are selected in a forward way by considering both interactivity and relevance measures. To verify the effectiveness ofCGT-FL, we provide the results of our extensive experiments with different subject programs, containing seeded and real faults. The experimental results are then compared with those provided by different fault localization techniques for both single-fault and multiple-fault programs. The results prove the outperformance ofCGT-FLcompared to state-of-the-art techniques.
C1 [Feyzi, Farid] Univ Guilan, Fac Engn, Rasht, Iran.
C3 University of Guilan
RP Feyzi, F (corresponding author), Univ Guilan, Fac Engn, Rasht, Iran.
EM feizi@guilan.ac.ir
RI Feyzi, Farid/ABD-2558-2020; parsa, saeed/S-9536-2018
OI Feyzi, Farid/0000-0003-4533-6088; parsa, saeed/0000-0003-4381-2773
CR Abreu R, 2009, J SYST SOFTWARE, V82, P1780, DOI 10.1016/j.jss.2009.06.035
   Androutsopoulos K, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P573, DOI 10.1145/2568225.2568314
   [Anonymous], 2008, ISSTA
   Baah GK, 2010, IEEE T SOFTWARE ENG, V36, P528, DOI 10.1109/TSE.2009.87
   Babu D, 2012, INT CONF INTELL SYST, P363, DOI 10.1109/ISDA.2012.6416565
   BURBEA J, 1982, IEEE T INFORM THEORY, V28, P489, DOI 10.1109/TIT.1982.1056497
   Chekam T.T., 2016, ARXIV160705512
   Chenier JA, 2010, POLICY: FROM IDEAS TO IMPLEMENTATION: IN HONOUR OF PROFESSOR G. BRUCE DOERN, P20
   Cohen S, 2007, NEURAL COMPUT, V19, P1939, DOI 10.1162/neco.2007.19.7.1939
   Cover T. M., 2012, ELEMENTS INFORM THEO
   DENG XT, 1994, MATH OPER RES, V19, P257, DOI 10.1287/moor.19.2.257
   Dickinson W, 2001, PROC INT CONF SOFTW, P339, DOI 10.1109/ICSE.2001.919107
   DiGiuseppe N., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P191, DOI 10.1109/ICST.2012.99
   El-Ghali M, 2009, 2009 ICSE WORKSHOP ON SOFTWARE ENGINEERING FOR SECURE SYSTEMS, P17, DOI 10.1109/IWSESS.2009.5068454
   Feyzi F., 2016, ARXIV161205780
   Feyzi F, 2018, INT J APPL PATTERN R, V5, P119, DOI 10.1504/IJAPR.2018.092520
   Feyzi F, 2018, COMPUTING, V100, P927, DOI 10.1007/s00607-018-0591-z
   Feyzi F, 2019, FRONT COMPUT SCI-CHI, V13, P735, DOI 10.1007/s11704-017-6512-z
   Feyzi F, 2018, J SYST SOFTWARE, V136, P39, DOI 10.1016/j.jss.2017.11.002
   Gupta N., 2005, Proceedings of the 20th IEEE/ACM International Conference on Automated Software Engineering, New York, NY, USA: Association for Computing Machinery, ASE'05, P263, DOI 10.1145/1101908.1101948
   Hierons RM, 2006, ACM T SOFTW ENG METH, V15, P227, DOI 10.1145/1151695.1151696
   Hong S, 2015, IEEE INT CONF AUTOM, P464, DOI 10.1109/ASE.2015.14
   Jones J.A., 2005, P 20 IEEE ACM INT C, P273, DOI [10.1145/1101908.1101949, DOI 10.1145/1101908.1101949]
   Ju XL, 2014, J SYST SOFTWARE, V90, P3, DOI 10.1016/j.jss.2013.11.1109
   Just R, 2014, P 2014 INT S SOFTW T, P437, DOI DOI 10.1145/2610384.2628055
   Kochhar Pavneet Singh, 2016, 25 INT S SOFTWARE TE, P165, DOI 10.1145/2931037.2931051
   Le Tien-Duy B., 2015, 2015 IEEE 31st International Conference on Software Maintenance and Evolution (ICSME). Proceedings, P501, DOI 10.1109/ICSM.2015.7332502
   Le Tien-Duy B., 2013, 2013 IEEE International Conference on Software Maintenance (ICSM), P380, DOI 10.1109/ICSM.2013.52
   Le T.-D. B., 2016, P 25 INT S SOFTW TES, P177, DOI DOI 10.1145/2931037.2931049
   Lo D., 2010, Software Maintenance (ICSM), 2010 IEEE International Confer- ence on, P1, DOI DOI 10.1109/ICSM.2010.5609542
   Masri W., 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P737, DOI 10.1109/ICST.2012.166
   Masri Wes, 2010, Proceedings of the Third IEEE International Conference on Software Testing, Verification and Validation (ICST 2010), P165, DOI 10.1109/ICST.2010.22
   Masri W, 2014, ACM T SOFTW ENG METH, V23, DOI 10.1145/2559932
   Masri W, 2009, ACM T SOFTW ENG METH, V19, DOI 10.1145/1571629.1571631
   Meyer PE, 2008, IEEE J-STSP, V2, P261, DOI 10.1109/JSTSP.2008.923858
   Miao Y., 2012, SEKE
   Miao Y, 2013, INT J SOFTW ENG KNOW, V23, P721, DOI 10.1142/S0218194013500186
   Naish L, 2011, ACM T SOFTW ENG METH, V20, DOI 10.1145/2000791.2000795
   Nan Li, 2012, 2012 IEEE Fifth International Conference on Software Testing, Verification and Validation (ICST 2012), P280, DOI 10.1109/ICST.2012.108
   Ott RL, 1993, INTRO STAT METHODS D, P4
   Papadakis M, 2015, SOFTW TEST VERIF REL, V25, P605, DOI 10.1002/stvr.1509
   Pearson S, 2017, PROC INT CONF SOFTW, P609, DOI 10.1109/ICSE.2017.62
   Peng HC, 2005, IEEE T PATTERN ANAL, V27, P1226, DOI 10.1109/TPAMI.2005.159
   Perez A, 2017, IEEE INT CONF SOFTW, P12, DOI 10.1109/ICST.2017.9
   Roychowdhury S, 2011, LECT NOTES ARTIF INT, V6913, P49, DOI 10.1007/978-3-642-23808-6_4
   Roychowdhury Shounak., 2011, INT WORKSHOP MACHINE, P11, DOI DOI 10.1145/2070821.2070823
   Shapley L.S., 1953, Contrib Theor Game, P307
   Shin Yoo, 2012, Search Based Software Engineering. Proceedings of the 4th International Symposium (SSBSE 2012), P244, DOI 10.1007/978-3-642-33119-0_18
   Sun X, 2012, NEUROCOMPUTING, V97, P86, DOI 10.1016/j.neucom.2012.05.001
   Valizadegan H, 2007, PROCEEDINGS OF THE SEVENTH SIAM INTERNATIONAL CONFERENCE ON DATA MINING, P309
   VOAS JM, 1992, IEEE T SOFTWARE ENG, V18, P717, DOI 10.1109/32.153381
   Wang YY, 2013, INT CONF E BUS ENG, P224, DOI 10.1109/ICEBE.2013.34
   Witten I. H., 2005, DATA MINING PRACTICA
   Wong WE, 2014, IEEE T RELIAB, V63, P290, DOI 10.1109/TR.2013.2285319
   Wong WE, 2012, IEEE T SYST MAN CY C, V42, P378, DOI 10.1109/TSMCC.2011.2118751
   Wong WE, 2010, J SYST SOFTWARE, V83, P188, DOI 10.1016/j.jss.2009.09.037
   Xiangyu Zhang, 2006, 28th International Conference on Software Engineering Proceedings, P272, DOI 10.1145/1134285.1134324
   Xu J, 2013, INFORM SOFTWARE TECH, V55, P880, DOI 10.1016/j.infsof.2012.08.006
   Xue XZ, 2014, P INT COMP SOFTW APP, P239, DOI 10.1109/COMPSAC.2014.32
   Yan S, 2010, 2010 SECOND INTERNATIONAL CONFERENCE ON E-LEARNING, E-BUSINESS, ENTERPRISE INFORMATION SYSTEMS, AND E-GOVERNMENT (EEEE 2010), VOL I, P147, DOI 10.1109/ICST.2010.47
   Yoo S., 2014, Res. Note, V14, P14
   Zeller A, 2002, IEEE T SOFTWARE ENG, V28, P183, DOI 10.1109/32.988498
   Zhang MX, 2017, LECT NOTES COMPUT SC, V10538, P261, DOI [10.1007/978-3-319-68155-9_20, 10.1145/3092703.3092731]
   Zhang X, 2004, 2004 IEEE INTERNATIONAL CONFERENCE ON CLUSTER COMPUTING, P105
   Zhang X, 2007, ACM SIGPLAN NOTICES, V42, P415, DOI 10.1145/1273442.1250782
   Zhang X, 2006, ACM SIGPLAN NOTICES, V41, P169, DOI 10.1145/1133981.1134002
NR 66
TC 11
Z9 11
U1 0
U2 8
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD SEP
PY 2020
VL 25
IS 5
BP 3873
EP 3927
DI 10.1007/s10664-020-09859-y
EA AUG 2020
PG 55
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA NJ1FD
UT WOS:000560297100001
DA 2024-07-18
ER

PT J
AU Mazuera-Rozo, A
   Trubiani, C
   Linares-Vasquez, M
   Bavota, G
AF Mazuera-Rozo, Alejandro
   Trubiani, Catia
   Linares-Vasquez, Mario
   Bavota, Gabriele
TI Investigating types and survivability of performance bugs in mobile apps
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Performance bugs; Mobile apps; Empirical study
ID QUALITY
AB A recent research showed that mobile apps represent nowadays 75% of the whole usage of mobile devices. This means that the mobile user experience, while tied to many factors (e.g., hardware device, connection speed, etc.), strongly depends on the quality of the apps being used. With "quality" here we do not simply refer to the features offered by the app, but also to its non-functional characteristics, such as security, reliability, and performance. This latter is particularly important considering the limited hardware resources (e.g., memory) mobile apps can exploit. In this paper, we present the largest study at date investigating performance bugs in mobile apps. In particular, we (i) define a taxonomy of the types of performance bugs affecting Android and iOS apps; and (ii) study the survivability of performance bugs (i.e., the number of days between the bug introduction and its fixing). Our findings aim to help researchers and apps developers in building performance-bugs detection tools and focusing their verification and validation activities on the most frequent types of performance bugs.
C1 [Mazuera-Rozo, Alejandro; Bavota, Gabriele] Univ Svizzera Italiana, Lugano, Switzerland.
   [Mazuera-Rozo, Alejandro; Linares-Vasquez, Mario] Univ Los Andes, Cundinamarca, Colombia.
   [Trubiani, Catia] Gran Sasso Sci Inst, Laquila, Italy.
C3 Universita della Svizzera Italiana; Universidad de los Andes (Colombia);
   Gran Sasso Science Institute (GSSI)
RP Mazuera-Rozo, A (corresponding author), Univ Svizzera Italiana, Lugano, Switzerland.; Mazuera-Rozo, A (corresponding author), Univ Los Andes, Cundinamarca, Colombia.
EM alejandro.mazuera.rozo@usi.ch; catia.trubiani@gssi.it;
   m.linaresv@uniandes.edu.co; gabriele.bavota@usi.ch
RI Trubiani, Catia/AAU-4040-2021
OI Trubiani, Catia/0000-0002-7675-6942; BAVOTA,
   Gabriele/0000-0002-2216-3148
FU Swiss National Science Foundation [175513]
FX Mazuera-Rozo and Bavota gratefully acknowledge the financial support of
   the Swiss National Science Foundation for the CCQR project (SNF Project
   No. 175513).
CR Ali Mohamed, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P79, DOI 10.1109/MOBILESoft.2017.3
   [Anonymous], 2002, Metrics and Models in Software Quality Engineering
   [Anonymous], 1991, The Art of Computer Systems Performance Analysis: Techniques for Experimental Design, Measurement, Simulation, and Modeling
   Boehm B. W., 1976, 2nd International Conference on Software Engineering, P592
   Brebner P, 2016, PROCEEDINGS OF THE 2016 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE'16), P55, DOI 10.1145/2851553.2851560
   Carroll A., 2010, P USENIXATC
   Christensen R, 2011, SPRINGER TEXTS STAT, P1, DOI 10.1007/978-1-4419-9816-3
   Cohen J., 1988, STAT POWER ANAL BEHA
   Conover W. J., 1998, PRACTICAL NONPARAMET, V3rd
   Cortellessa V, 2011, MODEL-BASED SOFTWARE PERFORMANCE ANALYSIS, P1, DOI 10.1007/978-3-642-13621-4
   COX DR, 1972, J R STAT SOC B, V34, P187
   Cruz Luis, 2017, 2017 IEEE/ACM 4th International Conference on Mobile Software Engineering and Systems (MOBILESoft). Proceedings, P46, DOI 10.1109/MOBILESoft.2017.19
   Cruz L, 2019, EMPIR SOFTW ENG, V24, P2209, DOI 10.1007/s10664-019-09682-0
   CUMMING G, 2011, INTRO NEW STAT EFFEC
   Di Franco A, 2017, IEEE INT CONF AUTOM, P509, DOI 10.1109/ASE.2017.8115662
   Fazzini M, 2017, IEEE INT CONF AUTOM, P308, DOI 10.1109/ASE.2017.8115644
   Fling B., 2009, MOBILE DESIGN DEV PR
   Franke D., 2011, Proceedings 2011 IEEE Fourth International Conference on Software Testing, Verification and Validation (ICST 2011), P431, DOI 10.1109/ICST.2011.18
   Fricks RB, 2017, P REL MAINT S
   Gao Z, 2017, PROC INT CONF SOFTW, P758, DOI 10.1109/ICSE.2017.75
   Gegick Michael, 2010, Proceedings of the 2010 7th IEEE Working Conference on Mining Software Repositories (MSR 2010), P11, DOI 10.1109/MSR.2010.5463340
   Grechanik M, 2012, PROC INT CONF SOFTW, P156, DOI 10.1109/ICSE.2012.6227197
   Gregg B., 2013, SYSTEMS PERFORMANCE, V1st, DOI DOI 10.5555/2568162
   Grissom R. J., 2005, EFFECT SIZES RES BRO
   Gui JP, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P100, DOI 10.1109/ICSE.2015.32
   Guo CR, 2013, IEEE INT CONF AUTOM, P389, DOI 10.1109/ASE.2013.6693097
   Hao S, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P92, DOI 10.1109/ICSE.2013.6606555
   Harrell FE., 2017, Package rms, V229, pQ8
   Harter DE, 2000, MANAGE SCI, V46, P451, DOI 10.1287/mnsc.46.4.451.12056
   Hecht G, 2016, 2016 IEEE/ACM INTERNATIONAL CONFERENCE ON MOBILE SOFTWARE ENGINEERING AND SYSTEMS (MOBILESOFT 2016), P59, DOI [10.1145/2897073.2897100, 10.1109/MobileSoft.2016.030]
   Hedges LV., 1985, STAT METHODS META AN, P1, DOI [DOI 10.1016/B978-0-08-057065-5.50006-3, 10.1016/b978-0-08-057065-5.50006-3]
   Herzig K, 2013, IEEE WORK CONF MIN S, P121, DOI 10.1109/MSR.2013.6624018
   HOLM S, 1979, SCAND J STAT, V6, P65
   Incerto E, 2018, LECT NOTES COMPUT SC, V11014, P147, DOI 10.1007/978-3-319-96983-1_11
   Jin GL, 2012, ACM SIGPLAN NOTICES, V47, P77, DOI 10.1145/2345156.2254075
   Joorabchi Mona Erfani, 2013, 2013 ACM / IEEE International Symposium on Empirical Software Engineering and Measurement (ESEM), P15, DOI 10.1109/ESEM.2013.9
   Joorabchi ME, 2015, 2015 IEEE 26TH INTERNATIONAL SYMPOSIUM ON SOFTWARE RELIABILITY ENGINEERING (ISSRE), P450, DOI 10.1109/ISSRE.2015.7381838
   Jovic M, 2011, ACM SIGPLAN NOTICES, V46, P155, DOI 10.1145/2076021.2048081
   Khalid H, 2016, IEEE SOFTWARE, V33, P34, DOI 10.1109/MS.2015.29
   Killian Charles., 2010, Proceedings of the 18th ACM SIGSOFT International Symposium on Foundations of Software Engineering, FSE '10, P17, DOI DOI 10.1145/1882291.1882297
   Kleinbaum DG., 2005, Survival Analysis-a Self-Learning Text, DOI 10.1007/978-1-4419-6646-9
   Knoche H, 2018, PROCEEDINGS OF THE 2018 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '18), P305, DOI 10.1145/3184407.3184431
   Lampson BW, 2004, COMPUTER, V37, P37, DOI 10.1109/MC.2004.17
   Lee SR, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P926, DOI 10.1145/3106237.3117776
   Li D, 2013, P 2013 INT S SOFTW T, P78, DOI DOI 10.1145/2483760.2483780
   Li D, 2014, 2014 6TH INTERNATIONAL CONFERENCE ON COMPUTATIONAL INTELLIGENCE AND COMMUNICATION NETWORKS, P390, DOI 10.1109/CICN.2014.93
   Li D, 2016, PROC INT CONF SOFTW, P249, DOI 10.1145/2884781.2884867
   Li D, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P958, DOI 10.1145/2786805.2803190
   Li D, 2014, PROC IEEE INT CONF S, P121, DOI 10.1109/ICSME.2014.34
   Li DQ, 2015, J INEQUAL APPL, DOI 10.1186/s13660-015-0556-0
   Li DF, 2014, ABSTR APPL ANAL, DOI 10.1155/2014/840573
   Lin Y, 2014, 22ND ACM SIGSOFT INTERNATIONAL SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (FSE 2014), P341, DOI 10.1145/2635868.2635903
   Linares-Vasquez M., 2014, Proceedings of the 11th Working Conference on Mining Software Repositories, P2
   Linares-Vásquez M, 2018, ACM T SOFTW ENG METH, V27, DOI 10.1145/3241742
   Linares-Vásquez M, 2017, J SYST SOFTWARE, V130, P1, DOI 10.1016/j.jss.2017.04.018
   Linares-Vásquez M, 2015, 2015 10TH JOINT MEETING OF THE EUROPEAN SOFTWARE ENGINEERING CONFERENCE AND THE ACM SIGSOFT SYMPOSIUM ON THE FOUNDATIONS OF SOFTWARE ENGINEERING (ESEC/FSE 2015) PROCEEDINGS, P143, DOI 10.1145/2786805.2786847
   Linares-Vásquez M, 2015, PROC IEEE INT CONF S, P352, DOI 10.1109/ICSM.2015.7332486
   Liu YP, 2014, 36TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2014), P1013, DOI 10.1145/2568225.2568229
   Madan BB, 2002, INTERNATIONAL CONFERENCE ON DEPENDABLE SYSTEMS AND NETWORKS, PROCEEDINGS, P505, DOI 10.1109/DSN.2002.1028941
   Martin W, 2017, IEEE T SOFTWARE ENG, V43, P817, DOI 10.1109/TSE.2016.2630689
   Mazuera-Rozo A, 2019, EMPIR SOFTW ENG, V24, P2056, DOI 10.1007/s10664-019-09689-7
   MazueraRozo A, 2019, REPLICATION PACKAGE
   Mcilroy S, 2017, COMMUN ACM, V60, P62, DOI 10.1145/3141771
   Mondal M, 2017, PROC IEEE INT CONF S, P227, DOI 10.1109/ICSME.2017.33
   Nagappan M, 2016, 2016 IEEE 23RD INTERNATIONAL CONFERENCE ON SOFTWARE ANALYSIS, EVOLUTION, AND REENGINEERING (SANER), VOL 5, P21, DOI 10.1109/SANER.2016.88
   Near JP, 2016, PROC INT CONF SOFTW, P947, DOI 10.1145/2884781.2884836
   Nistor A, 2015, 2015 IEEE/ACM 37TH IEEE INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING, VOL 1, P902, DOI 10.1109/ICSE.2015.100
   Nistor A, 2013, IEEE WORK CONF MIN S, P237, DOI 10.1109/MSR.2013.6624035
   Noei E, 2017, EMPIR SOFTW ENG, V22, P3088, DOI 10.1007/s10664-017-9507-3
   Oliveira W, 2017, IEEE WORK CONF MIN S, P42, DOI 10.1109/MSR.2017.66
   Olivo O, 2015, ACM SIGPLAN NOTICES, V50, P369, DOI [10.1145/2813885.2737966, 10.1145/273924.2737966]
   Panichella S, 2016, PROC INT CONF SOFTW, P547, DOI 10.1145/2884781.2884847
   Parsons T, 2008, J OBJECT TECHNOL, V7, P55, DOI 10.5381/jot.2008.7.3.a1
   Pathak A, 2011, WORKSH HOT TOP NETW
   Pathak Abhijit D., 2012, Proceedings of the PCIM ASIA 2012. International Conference and Exhibition for Power Electronics, Intelligent Motion, Renewable Energy and Energy Management, P29
   Pathak A, 2011, EUROSYS 11: PROCEEDINGS OF THE EUROSYS 2011 CONFERENCE, P153
   Pathak A, 2012, IEEE INT CONF NETWOR, P268, DOI 10.1109/ICON.2012.6506568
   Rodríguez HR, 2012, EVALUACION DE IMPACTO EN SALUD POR EXPOSICION A OZONO Y MATERIAL PARTICULADO (PM10) EN LA ZONA METROPOLITANA DEL VALLE DE MEXICO, P21
   Sahin C, 2016, J SOFTW-EVOL PROC, V28, P565, DOI 10.1002/smr.1762
   Schulz H, 2019, PROCEEDINGS OF THE 2019 ACM/SPEC INTERNATIONAL CONFERENCE ON PERFORMANCE ENGINEERING (ICPE '19), P265, DOI 10.1145/3297663.3309674
   Selakovic M, 2016, PROC INT CONF SOFTW, P61, DOI 10.1145/2884781.2884829
   Shailendra SR, 2017, 2017 INTERNATIONAL CONFERENCE ON NEXTGEN ELECTRONIC TECHNOLOGIES: SILICON TO SOFTWARE (ICNETS2), P213, DOI 10.1109/ICNETS2.2017.8067933
   Shuai Hao, 2012, 2012 First International Workshop on Green and Sustainable Software (GREENS), P1, DOI 10.1109/GREENS.2012.6224263
   Sliwerski J., 2005, ACM SIGSOFT SOFTWARE, P1, DOI DOI 10.1145/1082983.1083147
   Syer MarkD., 2013, Proceedings of the 2013 Conference of the Center for Advanced Studies on Collaborative Research, CASCON '13, P283
   Syer MD., 2014, ICPE, V14, P259
   Trubiani C, 2018, INFORM SOFTWARE TECH, V95, P329, DOI 10.1016/j.infsof.2017.11.016
   Wan M, 2015, IEEE ICST WORKSHOP
   Wan ZY, 2017, IEEE WORK CONF MIN S, P413, DOI 10.1109/MSR.2017.59
   Wang J, 2017, IEEE INT CONF AUTOM, P520, DOI 10.1109/ASE.2017.8115663
   Wasserman AI, 2010, INT WORKSH FUT SOFTW, P397
   Wert A, 2013, PROCEEDINGS OF THE 35TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING (ICSE 2013), P552, DOI 10.1109/ICSE.2013.6606601
   Williams Lloyd G, 2003, INT CMG C, P349
   Woodside CM, 2015, INT C PERF ENG ICPE, P349
   Woodside M, 2007, FOSE 2007: FUTURE OF SOFTWARE ENGINEERING, P171, DOI 10.1109/FOSE.2007.32
   Yi Yang, 2012, 2012 41st International Conference on Parallel Processing (ICPP 2012), P329, DOI 10.1109/ICPP.2012.30
   Zaman S., 2012, 2012 9th IEEE Working Conference on Mining Software Repositories (MSR 2012), P199, DOI 10.1109/MSR.2012.6224281
   Zaman S., 2011, Proceedings of the 8th working conference on mining software repositories, P93, DOI [10.1145/1985441.1985457, DOI 10.1145/1985441.1985457]
   Zhou YQ, 2017, ESEC/FSE 2017: PROCEEDINGS OF THE 2017 11TH JOINT MEETING ON FOUNDATIONS OF SOFTWARE ENGINEERING, P914, DOI 10.1145/3106237.3117771
NR 99
TC 14
Z9 14
U1 0
U2 2
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAY
PY 2020
VL 25
IS 3
SI SI
BP 1644
EP 1686
DI 10.1007/s10664-019-09795-6
EA MAR 2020
PG 43
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA LL7FD
UT WOS:000518304900001
DA 2024-07-18
ER

PT J
AU Alahmadi, M
   Khormi, A
   Parajuli, B
   Hassel, J
   Haiduc, S
   Kumar, P
AF Alahmadi, Mohammad
   Khormi, Abdulkarim
   Parajuli, Biswas
   Hassel, Jonathan
   Haiduc, Sonia
   Kumar, Piyush
TI Code Localization in Programming Screencasts
SO EMPIRICAL SOFTWARE ENGINEERING
LA English
DT Article
DE Programming video tutorials; Software documentation; Source code; Deep
   learning; Video mining
AB Programming screencasts are growing in popularity and are often used by developers as a learning source. The source code shown in these screencasts is often not available for download or copy-pasting. Without having the code readily available, developers have to frequently pause a video to transcribe the code. This is time-consuming and reduces the effectiveness of learning from videos. Recent approaches have applied Optical Character Recognition (OCR) techniques to automatically extract source code from programming screencasts. One of their major limitations, however, is the extraction of noise such as the text information in the menu, package hierarchy, etc. due to the imprecise approximation of the code location on the screen. This leads to incorrect, unusable code. We aim to address this limitation and propose an approach to significantly improve the accuracy of code localization in programming screencasts, leading to a more precise code extraction. Our approach uses a Convolutional Neural Network to automatically predict the exact location of code in an image. We evaluated our approach on a set of frames extracted from 450 screencasts covering Java, C#, and Python programming topics. The results show that our approach is able to detect the area containing the code with 94% accuracy and that our approach significantly outperforms previous work. We also show that applying OCR on the code area identified by our approach leads to a 97% match with the ground truth on average, compared to only 31% when OCR is applied to the entire frame.
C1 [Alahmadi, Mohammad; Khormi, Abdulkarim; Parajuli, Biswas; Hassel, Jonathan; Haiduc, Sonia; Kumar, Piyush] Florida State Univ, 600 W Coll Ave, Tallahassee, FL 32306 USA.
C3 State University System of Florida; Florida State University
RP Alahmadi, M (corresponding author), Florida State Univ, 600 W Coll Ave, Tallahassee, FL 32306 USA.
EM alahmadi@cs.fsu.edu; khormi@cs.fsu.edu; parajuli@cs.fsu.edu;
   hassel@cs.fsu.edu; shaiduc@cs.fsu.edu; piyush@cs.fsu.edu
RI Haiduc, Sonia/AAK-8511-2020; Alahmadi, Mohammad/GWQ-7213-2022
OI Haiduc, Sonia/0000-0001-8793-8293; Malkadi,
   Abdulkarim/0000-0002-5660-2495; Alahmadi, Mohammad/0000-0002-3399-2996
CR Alahmadi M, 2018, PROMISE'18: PROCEEDINGS OF THE 14TH INTERNATIONAL CONFERENCE ON PREDICTIVE MODELS AND DATA ANALYTICS IN SOFTWARE ENGINEERING, P2, DOI 10.1145/3273934.3273935
   [Anonymous], ARXIV13112524CS
   [Anonymous], 2010, INT J COMPUT VISION, DOI [DOI 10.1007/s11263-009-0275-4, 10.1007/s11263-009-0275-4]
   [Anonymous], P 41 ACM IEEE INT C
   [Anonymous], 2007, PROMISE 07, DOI DOI 10.1109/PROMISE.2007.10
   Bao LF, 2019, IEEE T SOFTWARE ENG, V45, P823, DOI 10.1109/TSE.2018.2802916
   Bao LF, 2017, EMPIR SOFTW ENG, V22, P134, DOI 10.1007/s10664-015-9417-1
   Brandt J, 2009, CHI2009: PROCEEDINGS OF THE 27TH ANNUAL CHI CONFERENCE ON HUMAN FACTORS IN COMPUTING SYSTEMS, VOLS 1-4, P1589
   CANNY J, 1986, IEEE T PATTERN ANAL, V8, P679, DOI 10.1109/TPAMI.1986.4767851
   Dai JF, 2016, ADV NEUR IN, V29
   EAGLEN RH, 1985, AM J PHYS ANTHROPOL, V66, P307, DOI 10.1002/ajpa.1330660308
   Ellmann Mathias., 2017, P 3 ACM SIGSOFT INT, P1
   Escobar-Avila J, 2017, PROC IEEE ACM INT C, P341, DOI 10.1109/ICSE-C.2017.121
   Felzenszwalb PF, 2004, INT J COMPUT VISION, V59, P167, DOI 10.1023/B:VISI.0000022288.19776.77
   Girshick R, 2015, IEEE I CONF COMP VIS, P1440, DOI 10.1109/ICCV.2015.169
   Grzywaczewski A, 2012, J COMPUT SYST SCI, V78, P1204, DOI 10.1016/j.jcss.2011.10.009
   He Kaiming, 2016, P INT C COMP VIS PAT, DOI 10.1109/CVPR.2016.90
   Hu W, 2015, J SENSORS, V2015, DOI 10.1155/2015/258619
   Huan J, 2017, IEEE INT C BIOINFORM, P4
   Ioffe S, 2015, P INT C MACH LEARN, V2015, P1
   Khandwala K, 2018, PROCEEDINGS OF THE FIFTH ANNUAL ACM CONFERENCE ON LEARNING AT SCALE (L@S'18), DOI 10.1145/3231644.3231652
   Kim K, 2016, INT S HIGH PERF COMP, P163, DOI 10.1109/HPCA.2016.7446062
   LeCun Y, 1999, LECT NOTES COMPUT SC, V1681, P319, DOI 10.1007/3-540-46805-6_19
   Lin TY, 2014, LECT NOTES COMPUT SC, V8693, P740, DOI 10.1007/978-3-319-10602-1_48
   Lin TY, 2017, PROC CVPR IEEE, P936, DOI 10.1109/CVPR.2017.106
   Liu W, 2016, LECT NOTES COMPUT SC, V9905, P21, DOI 10.1007/978-3-319-46448-0_2
   Lowe, 1999, P INT C COMP VIS, P1150, DOI DOI 10.1109/ICCV.1999.790410
   Lowe DG, 2004, INT J COMPUT VISION, V60, P91, DOI 10.1023/B:VISI.0000029664.99615.94
   Luo J., 2009, INT J IMAGE PROCESSI, V3, P143, DOI DOI 10.1007/S11270-006-2859-8
   MacLeod L, 2017, EMPIR SOFTW ENG, V22, P1478, DOI 10.1007/s10664-017-9501-9
   MacLeod L, 2015, INT C PROGRAM COMPRE, P104, DOI 10.1109/ICPC.2015.19
   Mikolajczyk K, 2005, IEEE T PATTERN ANAL, V27, P1615, DOI 10.1109/TPAMI.2005.188
   Moslehi P, 2018, IEEE WORK CONF MIN S, P192, DOI 10.1145/3196398.3196439
   Ott J, 2018, IEEE WORK CONF MIN S, P376, DOI 10.1145/3196398.3196402
   Ott Jordan., 2018, Learning lexical features of programming languages from imagery using convolutional neural networks
   Parra E, 2018, INT C PROGRAM COMPRE, P222, DOI 10.1145/3196321.3196351
   Poché E, 2017, INT C PROGRAM COMPRE, P196, DOI 10.1109/ICPC.2017.26
   Ponzanelli Luca, 2019, IEEE Transactions on Software Engineering, V45, P464, DOI 10.1109/TSE.2017.2779479
   Ponzanelli L, 2016, PROC INT CONF SOFTW, P261, DOI 10.1145/2884781.2884824
   Ponzanelli L, 2016, 2016 IEEE/ACM 38TH INTERNATIONAL CONFERENCE ON SOFTWARE ENGINEERING COMPANION (ICSE-C), P645, DOI 10.1145/2889160.2889172
   Qian N, 1999, NEURAL NETWORKS, V12, P145, DOI 10.1016/S0893-6080(98)00116-6
   Redmon J, 2016, PROC CVPR IEEE, P779, DOI 10.1109/CVPR.2016.91
   Ren SQ, 2017, IEEE T PATTERN ANAL, V39, P1137, DOI 10.1109/TPAMI.2016.2577031
   Russakovsky O, 2015, INT J COMPUT VISION, V115, P211, DOI 10.1007/s11263-015-0816-y
   Shrivastava A, 2016, LECT NOTES COMPUT SC, V9905, P330, DOI 10.1007/978-3-319-46448-0_20
   Simonyan K, 2015, Arxiv, DOI arXiv:1409.1556
   Storey Margaret-Anne, 2014, FUT SOFTW ENG P, P100, DOI 10.1145/2593882.2593887
   Sun Y., 2015, J INF COMPUT SCI, V12, P957, DOI DOI 10.12733/JICS20105420
   Szegedy C, 2017, AAAI CONF ARTIF INTE, P4278
   Thummalapenta S, 2010, EMPIR SOFTW ENG, V15, P1, DOI 10.1007/s10664-009-9108-x
   Uijlings JRR, 2013, INT J COMPUT VISION, V104, P154, DOI 10.1007/s11263-013-0620-5
   Wang Z, 2004, IEEE T IMAGE PROCESS, V13, P600, DOI 10.1109/TIP.2003.819861
   Yadid S, 2016, ONWARD!'16: PROCEEDINGS OF THE 2016 ACM INTERNATIONAL SYMPOSIUM ON NEW IDEAS, NEW PARADIGMS, AND REFLECTIONS ON PROGRAMMING AND SOFTWARE, P98, DOI 10.1145/2986012.2986021
NR 53
TC 10
Z9 12
U1 1
U2 5
PU SPRINGER
PI DORDRECHT
PA VAN GODEWIJCKSTRAAT 30, 3311 GZ DORDRECHT, NETHERLANDS
SN 1382-3256
EI 1573-7616
J9 EMPIR SOFTW ENG
JI Empir. Softw. Eng.
PD MAR
PY 2020
VL 25
IS 2
SI SI
BP 1536
EP 1572
DI 10.1007/s10664-019-09759-w
PG 37
WC Computer Science, Software Engineering
WE Science Citation Index Expanded (SCI-EXPANDED)
SC Computer Science
GA KT0VU
UT WOS:000518729800016
DA 2024-07-18
ER

EF